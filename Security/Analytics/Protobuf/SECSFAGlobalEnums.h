// This file was automatically generated by protocompiler
// DO NOT EDIT!
// Compiled from SFACollection.proto

#include <stdint.h>
#ifdef __OBJC__
#include <Foundation/Foundation.h>
#endif

#ifndef NS_ENUM
#if (defined(__cplusplus) && __cplusplus >= 201103L && (__has_extension(cxx_strong_enums) || __has_feature(objc_fixed_enum))) || (!__cplusplus && __has_feature(objc_fixed_enum))
#define NS_ENUM(_type, _name) enum _name : _type _name; enum _name : _type
#else
#define NS_ENUM(_type, _name) _type _name; enum
#endif
#endif // !defined(NS_ENUM)

/**
 * Structured so the sane behavior with minimal encoding is do for newer clients
 * so if you have older clients for this event type, your match better match only errors
 * but that would be true regardless of the value of eventclass.
 *
 * 0 - new: only errors, older clients: all events
 * 1 - all events
 * 10 -> offset by SFAnalyticsEventClass: 10 == SFAnalyticsEventClassSuccess
 */
typedef NS_ENUM(int32_t, SECSFAEventClass) {
    SECSFAEventClass_Errors = 0,
    SECSFAEventClass_All = 1,
    SECSFAEventClass_Success = 10,
    SECSFAEventClass_HardFailure = 11,
    SECSFAEventClass_SoftFailure = 12,
    SECSFAEventClass_Note = 13,
    SECSFAEventClass_Rockwell = 14,
};
#ifdef __OBJC__
NS_INLINE NSString *SECSFAEventClassAsString(SECSFAEventClass value)
{
    switch (value)
    {
        case SECSFAEventClass_Errors: return @"Errors";
        case SECSFAEventClass_All: return @"All";
        case SECSFAEventClass_Success: return @"Success";
        case SECSFAEventClass_HardFailure: return @"HardFailure";
        case SECSFAEventClass_SoftFailure: return @"SoftFailure";
        case SECSFAEventClass_Note: return @"Note";
        case SECSFAEventClass_Rockwell: return @"Rockwell";
        default: return [NSString stringWithFormat:@"(unknown: %i)", value];
    }
}
#endif /* __OBJC__ */
#ifdef __OBJC__
NS_INLINE SECSFAEventClass StringAsSECSFAEventClass(NSString *value)
{
    if ([value isEqualToString:@"Errors"]) return SECSFAEventClass_Errors;
    if ([value isEqualToString:@"All"]) return SECSFAEventClass_All;
    if ([value isEqualToString:@"Success"]) return SECSFAEventClass_Success;
    if ([value isEqualToString:@"HardFailure"]) return SECSFAEventClass_HardFailure;
    if ([value isEqualToString:@"SoftFailure"]) return SECSFAEventClass_SoftFailure;
    if ([value isEqualToString:@"Note"]) return SECSFAEventClass_Note;
    if ([value isEqualToString:@"Rockwell"]) return SECSFAEventClass_Rockwell;
    return SECSFAEventClass_Errors;
}
#endif /* __OBJC__ */
