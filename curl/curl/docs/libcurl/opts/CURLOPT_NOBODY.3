.\" generated by cd2nroff 0.1 from CURLOPT_NOBODY.md
.TH CURLOPT_NOBODY 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_NOBODY \- do the download request without getting the body
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_NOBODY, long opt);
.fi
.SH DESCRIPTION
A long parameter set to 1 tells libcurl to not include the body\-part in the
output when doing what would otherwise be a download. For HTTP(S), this makes
libcurl do a HEAD request. For most other protocols it means just not asking
to transfer the body data.

For HTTP operations when \fICURLOPT_NOBODY(3)\fP has been set, disabling this
option (with 0) makes it a GET again \- only if the method is still set to be
HEAD. The proper way to get back to a GET request is to set
\fICURLOPT_HTTPGET(3)\fP and for other methods, use the POST or UPLOAD
options.

Enabling \fICURLOPT_NOBODY(3)\fP means asking for a download without a body.

If you do a transfer with HTTP that involves a method other than HEAD, you get
a body (unless the resource and server sends a zero byte body for the specific
URL you request).
.SH DEFAULT
0, the body is transferred
.SH PROTOCOLS
Most
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

    /* get us the resource without a body - use HEAD! */
    curl_easy_setopt(curl, CURLOPT_NOBODY, 1L);

    /* Perform the request */
    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CURLE_OK
.SH SEE ALSO
.BR CURLOPT_HTTPGET (3),
.BR CURLOPT_MIMEPOST (3),
.BR CURLOPT_POSTFIELDS (3),
.BR CURLOPT_REQUEST_TARGET (3),
.BR CURLOPT_UPLOAD (3)
