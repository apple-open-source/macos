.\" generated by cd2nroff 0.1 from CURLOPT_WILDCARDMATCH.md
.TH CURLOPT_WILDCARDMATCH 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_WILDCARDMATCH \- directory wildcard transfers
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_WILDCARDMATCH, long onoff);
.fi
.SH DESCRIPTION
Set \fIonoff\fP to 1 if you want to transfer multiple files according to a
filename pattern. The pattern can be specified as part of the \fICURLOPT_URL(3)\fP
option, using an \fBfnmatch\fP\-like pattern (Shell Pattern Matching) in the last
part of URL (filename).

By default, libcurl uses its internal wildcard matching implementation. You
can provide your own matching function by the
\fICURLOPT_FNMATCH_FUNCTION(3)\fP option.

A brief introduction of its syntax follows:
.IP "* - ASTERISK"
.nf
ftp://example.com/some/path/*.txt
.fi

for all txt\(aqs from the root directory. Only two asterisks are allowed within
the same pattern string.
.IP "? - QUESTION MARK"
Question mark matches any (exactly one) character.

.nf
ftp://example.com/some/path/photo?.jpg
.fi
.IP "[ - BRACKET EXPRESSION"
The left bracket opens a bracket expression. The question mark and asterisk have
no special meaning in a bracket expression. Each bracket expression ends by the
right bracket and matches exactly one character. Some examples follow:

\fB[a\-zA\-Z0\-9]\fP or \fB[f\-gF\-G]\fP \- character interval

\fB[abc]\fP \- character enumeration

\fB[^abc]\fP or \fB[!abc]\fP \- negation

\fB[[:name:]]\fP class expression. Supported classes are \fBalnum\fP,\fBlower\fP,
\fBspace\fP, \fBalpha\fP, \fBdigit\fP, \fBprint\fP, \fBupper\fP, \fBblank\fP, \fBgraph\fP,
\fBxdigit\fP.

\fB[][\-!^]\fP \- special case \- matches only \(aq\-\(aq, \(aq]\(aq, \(aq[\(aq, \(aq!\(aq or \(aq^\(aq. These
characters have no special purpose.

\fB[[]]\fP \- escape syntax. Matches \(aq[\(aq, \(aq]\(aq or \(aqe\(aq.

Using the rules above, a filename pattern can be constructed:

.nf
ftp://example.com/some/path/[a-z[:upper:]\\].jpg
.fi
.SH PROTOCOLS
This feature is only supported for FTP download.
.SH EXAMPLE
.nf
extern long begin_cb(struct curl_fileinfo *, void *, int);
extern long end_cb(void *ptr);

int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    /* turn on wildcard matching */
    curl_easy_setopt(curl, CURLOPT_WILDCARDMATCH, 1L);

    /* callback is called before download of concrete file started */
    curl_easy_setopt(curl, CURLOPT_CHUNK_BGN_FUNCTION, begin_cb);

    /* callback is called after data from the file have been transferred */
    curl_easy_setopt(curl, CURLOPT_CHUNK_END_FUNCTION, end_cb);

    /* See more on https://curl.se/libcurl/c/ftp-wildcard.html */
  }
}
.fi
.SH AVAILABILITY
Added in 7.21.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_CHUNK_BGN_FUNCTION (3),
.BR CURLOPT_CHUNK_END_FUNCTION (3),
.BR CURLOPT_FNMATCH_FUNCTION (3),
.BR CURLOPT_URL (3)
