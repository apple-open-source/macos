.\" generated by cd2nroff 0.1 from CURLOPT_QUICK_EXIT.md
.TH CURLOPT_QUICK_EXIT 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_QUICK_EXIT \- allow to exit quickly
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_QUICK_EXIT,
                          long value);
.fi
.SH DESCRIPTION
Pass a long as a parameter, 1L meaning that when recovering from a timeout,
libcurl should skip lengthy cleanups that are intended to avoid all kinds of
leaks (threads etc.), as the caller program is about to call exit() anyway.
This allows for a swift termination after a DNS timeout for example, by
canceling and/or forgetting about a resolver thread, at the expense of a
possible (though short\-lived) leak of associated resources.
.SH DEFAULT
0
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode ret;
    curl_easy_setopt(curl, CURLOPT_QUICK_EXIT, 1L);
    ret = curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.87.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_FAILONERROR (3),
.BR CURLOPT_RESOLVE (3)
