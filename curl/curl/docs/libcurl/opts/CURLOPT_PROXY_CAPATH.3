.\" generated by cd2nroff 0.1 from CURLOPT_PROXY_CAPATH.md
.TH CURLOPT_PROXY_CAPATH 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_PROXY_CAPATH \- directory holding HTTPS proxy CA certificates
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PROXY_CAPATH, char *capath);
.fi
.SH DESCRIPTION
Pass a char pointer to a null\-terminated string naming a directory holding
multiple CA certificates to verify the HTTPS proxy with. If libcurl is built
against OpenSSL, the certificate directory must be prepared using the OpenSSL
\fBc_rehash\fP utility. This makes sense only when
\fICURLOPT_PROXY_SSL_VERIFYPEER(3)\fP is enabled (which it is by default).

The application does not have to keep the string around after setting this
option.

The default value for this can be figured out with \fICURLINFO_CAPATH(3)\fP.
.SH DEFAULT
NULL
.SH PROTOCOLS
Everything used over an HTTPS proxy
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    /* using an HTTPS proxy */
    curl_easy_setopt(curl, CURLOPT_PROXY, "https://localhost:443");
    curl_easy_setopt(curl, CURLOPT_PROXY_CAPATH, "/etc/cert-dir");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.52.0

This option is supported by the OpenSSL, GnuTLS, and mbedTLS (since 7.56.0)
backends.
.SH RETURN VALUE
CURLE_OK if supported; or an error such as:

CURLE_NOT_BUILT_IN \- Not supported by the SSL backend

CURLE_UNKNOWN_OPTION

CURLE_OUT_OF_MEMORY
.SH SEE ALSO
.BR CURLOPT_CAINFO (3),
.BR CURLOPT_DEBUGFUNCTION (3),
.BR CURLOPT_PROXY_CAINFO (3),
.BR CURLOPT_PROXY_SSL_VERIFYHOST (3),
.BR CURLOPT_STDERR (3)
