.\" generated by cd2nroff 0.1 from CURLOPT_PROXY_TLSAUTH_TYPE.md
.TH CURLOPT_PROXY_TLSAUTH_TYPE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_PROXY_TLSAUTH_TYPE \- HTTPS proxy TLS authentication methods
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_PROXY_TLSAUTH_TYPE,
                          char *type);
.fi
.SH DESCRIPTION
Pass a pointer to a null\-terminated string as parameter. The string should be
the method of the TLS authentication used for the HTTPS connection. Supported
method is "SRP".
.IP SRP
TLS\-SRP authentication. Secure Remote Password authentication for TLS is
defined in RFC 5054 and provides mutual authentication if both sides have a
shared secret. To use TLS\-SRP, you must also set the
\fICURLOPT_PROXY_TLSAUTH_USERNAME(3)\fP and
\fICURLOPT_PROXY_TLSAUTH_PASSWORD(3)\fP options.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
blank
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_PROXY, "https://proxy");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_TYPE, "SRP");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_USERNAME, "user");
    curl_easy_setopt(curl, CURLOPT_PROXY_TLSAUTH_PASSWORD, "secret");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.52.0

You need to build libcurl with GnuTLS or OpenSSL with TLS\-SRP support for this
to work.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_PROXY_TLSAUTH_PASSWORD (3),
.BR CURLOPT_PROXY_TLSAUTH_USERNAME (3),
.BR CURLOPT_TLSAUTH_PASSWORD (3),
.BR CURLOPT_TLSAUTH_USERNAME (3)
