.\" generated by cd2nroff 0.1 from CURLOPT_HTTP_TRANSFER_DECODING.md
.TH CURLOPT_HTTP_TRANSFER_DECODING 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_HTTP_TRANSFER_DECODING \- HTTP transfer decoding control
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_HTTP_TRANSFER_DECODING,
                         long enabled);
.fi
.SH DESCRIPTION
Pass a long to tell libcurl how to act on transfer decoding. If set to zero,
transfer decoding is disabled, if set to 1 it is enabled (default). libcurl
does chunked transfer decoding by default unless this option is set to zero.
.SH DEFAULT
1
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode ret;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_HTTP_TRANSFER_DECODING, 0L);
    ret = curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.16.2 Does not work with the hyper backend (it always has transfer
decoding enabled).
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_ACCEPT_ENCODING (3),
.BR CURLOPT_HTTP_CONTENT_DECODING (3)
