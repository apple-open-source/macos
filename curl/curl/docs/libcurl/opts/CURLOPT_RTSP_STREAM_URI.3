.\" generated by cd2nroff 0.1 from CURLOPT_RTSP_STREAM_URI.md
.TH CURLOPT_RTSP_STREAM_URI 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_RTSP_STREAM_URI \- RTSP stream URI
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_RTSP_STREAM_URI, char *URI);
.fi
.SH DESCRIPTION
Set the stream \fIURI\fP to operate on by passing a char * . For example, a single
session may be controlling \fIrtsp://foo/twister/audio\fP and
\fIrtsp://foo/twister/video\fP and the application can switch to the appropriate
stream using this option. If unset, libcurl defaults to operating on generic
server options by passing \(aq*\(aq in the place of the RTSP Stream URI. This option
is distinct from \fICURLOPT_URL(3)\fP. When working with RTSP, the
\fICURLOPT_RTSP_STREAM_URI(3)\fP indicates what URL to send to the server in the
request header while the \fICURLOPT_URL(3)\fP indicates where to make the connection
to. (e.g. the \fICURLOPT_URL(3)\fP for the above examples might be set to
\fIrtsp://foo/twister\fP

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
\&"*"
.SH PROTOCOLS
RTSP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "rtsp://example.com/");
    curl_easy_setopt(curl, CURLOPT_RTSP_STREAM_URI,
                     "rtsp://foo.example.com/twister/video");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.20.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, CURLE_UNKNOWN_OPTION if not, or
CURLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH SEE ALSO
.BR CURLOPT_RTSP_REQUEST (3),
.BR CURLOPT_RTSP_TRANSPORT (3)
