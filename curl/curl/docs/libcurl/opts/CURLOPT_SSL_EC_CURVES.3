.\" generated by cd2nroff 0.1 from CURLOPT_SSL_EC_CURVES.md
.TH CURLOPT_SSL_EC_CURVES 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SSL_EC_CURVES \- key exchange curves
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_EC_CURVES, char *alg_list);
.fi
.SH DESCRIPTION
Pass a string as parameter with a colon delimited list of (EC) algorithms. This
option defines the client\(aqs key exchange algorithms in the SSL handshake (if
the SSL backend libcurl is built to use supports it).
.SH DEFAULT
\&"", embedded in SSL backend
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_SSL_EC_CURVES, "X25519:P-521");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.73.0. Supported by the OpenSSL backend.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_SSL_CIPHER_LIST (3),
.BR CURLOPT_SSL_OPTIONS (3),
.BR CURLOPT_TLS13_CIPHERS (3)
