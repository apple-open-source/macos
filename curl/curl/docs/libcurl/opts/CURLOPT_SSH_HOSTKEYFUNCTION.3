.\" generated by cd2nroff 0.1 from CURLOPT_SSH_HOSTKEYFUNCTION.md
.TH CURLOPT_SSH_HOSTKEYFUNCTION 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SSH_HOSTKEYFUNCTION \- callback to check host key
.SH SYNOPSIS
.nf
#include <curl/curl.h>

int keycallback(void *clientp,
                int keytype,
                const char *key,
                size_t keylen);

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSH_HOSTKEYFUNCTION,
                          keycallback);
.fi
.SH DESCRIPTION
Pass a pointer to your callback function, which should match the prototype
shown above. It overrides \fICURLOPT_SSH_KNOWNHOSTS(3)\fP.

This callback gets called when the verification of the SSH host key is needed.

\fBkey\fP is \fBkeylen\fP bytes long and is the key to check. \fBkeytype\fP
says what type it is, from the \fBCURLKHTYPE_\fP* series in the
\fBcurl_khtype\fP enum.

\fBclientp\fP is a custom pointer set with \fICURLOPT_SSH_HOSTKEYDATA(3)\fP.

The callback MUST return one of the following return codes to tell libcurl how
to act:
.IP CURLKHMATCH_OK
The host key is accepted, the connection should continue.
.IP CURLKHMATCH_MISMATCH
the host key is rejected, the connection is canceled.
.SH DEFAULT
NULL
.SH PROTOCOLS
SCP and SFTP
.SH EXAMPLE
.nf
struct mine {
  void *custom;
};

int hostkeycb(void *clientp,    /* passed with CURLOPT_SSH_HOSTKEYDATA */
              int keytype,      /* CURLKHTYPE */
              const char *key,  /* host key to check */
              size_t keylen)    /* length of the key */
{
  /* 'clientp' points to the callback_data struct */
  /* investigate the situation and return the correct value */
  return CURLKHMATCH_OK;
}
int main(void)
{
  struct mine callback_data;
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "sftp://example.com/thisfile.txt");
    curl_easy_setopt(curl, CURLOPT_SSH_HOSTKEYFUNCTION, hostkeycb);
    curl_easy_setopt(curl, CURLOPT_SSH_HOSTKEYDATA, &callback_data);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.84.0 , work only with libssh2 backend.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_SSH_HOSTKEYDATA (3),
.BR CURLOPT_SSH_KNOWNHOSTS (3)
