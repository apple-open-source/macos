.\" generated by cd2nroff 0.1 from CURLOPT_SSL_FALSESTART.md
.TH CURLOPT_SSL_FALSESTART 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SSL_FALSESTART \- TLS false start
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSL_FALSESTART, long enable);
.fi
.SH DESCRIPTION
Pass a long as parameter set to 1L to enable or 0 to disable.

This option determines whether libcurl should use false start during the TLS
handshake. False start is a mode where a TLS client starts sending application
data before verifying the server\(aqs Finished message, thus saving a round trip
when performing a full handshake.
.SH DEFAULT
0
.SH PROTOCOLS
All TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");
    curl_easy_setopt(curl, CURLOPT_SSL_FALSESTART, 1L);
    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.42.0. This option is currently only supported by the Secure
Transport (on iOS 7.0 or later, or OS X 10.9 or later) TLS backend.
.SH RETURN VALUE
Returns CURLE_OK if false start is supported by the SSL backend, otherwise
returns CURLE_NOT_BUILT_IN.
.SH SEE ALSO
.BR CURLOPT_TCP_FASTOPEN (3)
