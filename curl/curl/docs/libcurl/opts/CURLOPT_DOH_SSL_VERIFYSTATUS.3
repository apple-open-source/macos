.\" generated by cd2nroff 0.1 from CURLOPT_DOH_SSL_VERIFYSTATUS.md
.TH CURLOPT_DOH_SSL_VERIFYSTATUS 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_DOH_SSL_VERIFYSTATUS \- verify the DoH SSL certificate\(aqs status
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_DOH_SSL_VERIFYSTATUS,
                          long verify);
.fi
.SH DESCRIPTION
Pass a long as parameter set to 1 to enable or 0 to disable.

This option determines whether libcurl verifies the status of the DoH
(DNS\-over\-HTTPS) server cert using the "Certificate Status Request" TLS
extension (aka. OCSP stapling).

This option is the DoH equivalent of \fICURLOPT_SSL_VERIFYSTATUS(3)\fP and
only affects requests to the DoH server.

If this option is enabled and the server does not support the TLS extension,
the verification fails.
.SH DEFAULT
0
.SH PROTOCOLS
DoH
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

    curl_easy_setopt(curl, CURLOPT_DOH_URL,
                     "https://cloudflare-dns.com/dns-query");

    /* Ask for OCSP stapling when verifying the DoH server */
    curl_easy_setopt(curl, CURLOPT_DOH_SSL_VERIFYSTATUS, 1L);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.76.0. This option is currently only supported by the OpenSSL, and
GnuTLS TLS backends.
.SH RETURN VALUE
Returns CURLE_OK if OCSP stapling is supported by the SSL backend, otherwise
returns CURLE_NOT_BUILT_IN.
.SH SEE ALSO
.BR CURLOPT_DOH_SSL_VERIFYHOST (3),
.BR CURLOPT_DOH_SSL_VERIFYPEER (3),
.BR CURLOPT_SSL_VERIFYSTATUS (3)
