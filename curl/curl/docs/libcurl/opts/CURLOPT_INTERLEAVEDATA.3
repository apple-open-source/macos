.\" generated by cd2nroff 0.1 from CURLOPT_INTERLEAVEDATA.md
.TH CURLOPT_INTERLEAVEDATA 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_INTERLEAVEDATA \- pointer passed to RTSP interleave callback
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_INTERLEAVEDATA, void *pointer);
.fi
.SH DESCRIPTION
This is the userdata \fIpointer\fP that is passed to
\fICURLOPT_INTERLEAVEFUNCTION(3)\fP when interleaved RTP data is received. If
the interleave function callback is not set, this pointer is not used
anywhere.
.SH DEFAULT
NULL
.SH PROTOCOLS
RTSP
.SH EXAMPLE
.nf
struct local {
  void *custom;
};
static size_t rtp_write(void *ptr, size_t size, size_t nmemb, void *userp)
{
  struct local *l = userp;
  printf("my pointer: %p\\n", l->custom);
  /* take care of the packet in 'ptr', then return... */
  return size * nmemb;
}

int main(void)
{
  struct local rtp_data;
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_INTERLEAVEFUNCTION, rtp_write);
    curl_easy_setopt(curl, CURLOPT_INTERLEAVEDATA, &rtp_data);

    curl_easy_perform(curl);
 }
}
.fi
.SH AVAILABILITY
Added in 7.20.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_INTERLEAVEFUNCTION (3),
.BR CURLOPT_RTSP_REQUEST (3)
