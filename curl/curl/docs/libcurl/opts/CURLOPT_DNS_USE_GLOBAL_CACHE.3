.\" generated by cd2nroff 0.1 from CURLOPT_DNS_USE_GLOBAL_CACHE.md
.TH CURLOPT_DNS_USE_GLOBAL_CACHE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_DNS_USE_GLOBAL_CACHE \- global DNS cache
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_DNS_USE_GLOBAL_CACHE,
                          long enable);
.fi
.SH DESCRIPTION
Has no function since 7.62.0. Do not use!

Pass a long. If the \fIenable\fP value is 1, it tells curl to use a global DNS
cache that survives between easy handle creations and deletions. This is not
thread\-safe and this uses a global variable.

See \fICURLOPT_SHARE(3)\fP and \fIcurl_share_init(3)\fP for the correct way to
share DNS cache between transfers.
.SH DEFAULT
0
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode ret;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    /* switch off the use of a global, thread unsafe, cache */
    curl_easy_setopt(curl, CURLOPT_DNS_USE_GLOBAL_CACHE, 0L);
    ret = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}

.fi
.SH AVAILABILITY
Deprecated since 7.11.1. Function removed in 7.62.0.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_DNS_CACHE_TIMEOUT (3),
.BR CURLOPT_SHARE (3)
