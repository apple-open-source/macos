.\" generated by cd2nroff 0.1 from CURLOPT_TCP_KEEPALIVE.md
.TH CURLOPT_TCP_KEEPALIVE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_TCP_KEEPALIVE \- TCP keep\-alive probing
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_TCP_KEEPALIVE, long probe);
.fi
.SH DESCRIPTION
Pass a long. If set to 1, TCP keepalive probes are used. The delay and
frequency of these probes can be controlled by the
\fICURLOPT_TCP_KEEPIDLE(3)\fP and \fICURLOPT_TCP_KEEPINTVL(3)\fP options,
provided the operating system supports them. Set to 0 (default behavior) to
disable keepalive probes
.SH DEFAULT
0
.SH PROTOCOLS
All
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com");

    /* enable TCP keep-alive for this transfer */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPALIVE, 1L);

    /* keep-alive idle time to 120 seconds */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPIDLE, 120L);

    /* interval time between keep-alive probes: 60 seconds */
    curl_easy_setopt(curl, CURLOPT_TCP_KEEPINTVL, 60L);

    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.25.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_LOW_SPEED_LIMIT (3),
.BR CURLOPT_MAX_RECV_SPEED_LARGE (3),
.BR CURLOPT_TCP_KEEPIDLE (3),
.BR CURLOPT_TCP_KEEPINTVL (3)
