.\" generated by cd2nroff 0.1 from CURLOPT_FORBID_REUSE.md
.TH CURLOPT_FORBID_REUSE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_FORBID_REUSE \- make connection get closed at once after use
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_FORBID_REUSE, long close);
.fi
.SH DESCRIPTION
Pass a long. Set \fIclose\fP to 1 to make libcurl explicitly close the
connection when done with the transfer. Normally, libcurl keeps all
connections alive when done with one transfer in case a succeeding one follows
that can reuse them. This option should be used with caution and only if you
understand what it does as it can seriously impact performance.

Set to 0 to have libcurl keep the connection open for possible later reuse
(default behavior).
.SH DEFAULT
0
.SH PROTOCOLS
Most
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_FORBID_REUSE, 1L);
    curl_easy_perform(curl);

    /* this second transfer may not reuse the same connection */
    curl_easy_perform(curl);

    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Always
.SH RETURN VALUE
Returns CURLE_OK
.SH SEE ALSO
.BR CURLOPT_FRESH_CONNECT (3),
.BR CURLOPT_MAXCONNECTS (3),
.BR CURLOPT_MAXLIFETIME_CONN (3)
