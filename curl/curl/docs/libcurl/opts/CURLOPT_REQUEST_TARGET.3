.\" generated by cd2nroff 0.1 from CURLOPT_REQUEST_TARGET.md
.TH CURLOPT_REQUEST_TARGET 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_REQUEST_TARGET \- alternative target for this request
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_REQUEST_TARGET, string);
.fi
.SH DESCRIPTION
Pass a char pointer to string which libcurl uses in the upcoming request
instead of the path as extracted from the URL.

libcurl passes on the verbatim string in its request without any filter or
other safe guards. That includes white space and control characters.
.SH DEFAULT
NULL
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/*");
    curl_easy_setopt(curl, CURLOPT_CUSTOMREQUEST, "OPTIONS");

    /* issue an OPTIONS * request (no leading slash) */
    curl_easy_setopt(curl, CURLOPT_REQUEST_TARGET, "*");

    /* Perform the request */
    curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.55.0
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_CUSTOMREQUEST (3),
.BR CURLOPT_HTTPGET (3),
.BR CURLOPT_PATH_AS_IS (3),
.BR CURLOPT_URL (3)
