.\" generated by cd2nroff 0.1 from CURLOPT_SSLENGINE.md
.TH CURLOPT_SSLENGINE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SSLENGINE \- SSL engine identifier
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSLENGINE, char *id);
.fi
.SH DESCRIPTION
Pass a pointer to a null\-terminated string as parameter. It is used as the
identifier for the crypto engine you want to use for your private key.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
NULL
.SH PROTOCOLS
All TLS based protocols: HTTPS, FTPS, IMAPS, POP3S, SMTPS etc.
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    curl_easy_setopt(curl, CURLOPT_SSLENGINE, "dynamic");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Only if the SSL backend is OpenSSL built with engine support.
.SH RETURN VALUE
CURLE_OK \- Engine found.

CURLE_SSL_ENGINE_NOTFOUND \- Engine not found, or OpenSSL was not built with
engine support.

CURLE_SSL_ENGINE_INITFAILED \- Engine found but initialization failed.

CURLE_NOT_BUILT_IN \- Option not built in, OpenSSL is not the SSL backend.

CURLE_UNKNOWN_OPTION \- Option not recognized.

CURLE_OUT_OF_MEMORY \- Insufficient heap space.
.SH SEE ALSO
.BR CURLINFO_SSL_ENGINES (3),
.BR CURLOPT_SSLENGINE_DEFAULT (3),
.BR CURLOPT_SSLKEY (3)
