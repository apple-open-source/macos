.\" generated by cd2nroff 0.1 from CURLOPT_SASL_AUTHZID.md
.TH CURLOPT_SASL_AUTHZID 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SASL_AUTHZID \- authorization identity (identity to act as)
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SASL_AUTHZID, char *authzid);
.fi
.SH DESCRIPTION
Pass a char pointer as parameter, which should be pointing to the
null\-terminated authorization identity (\fIauthzid\fP) for the transfer. Only
applicable to the PLAIN SASL authentication mechanism where it is optional.

When not specified only the authentication identity (\fIauthcid\fP) as
specified by the username is sent to the server, along with the password. The
server derives a \fIauthzid\fP from the \fIauthcid\fP when not provided, which
it then uses internally.

When the \fIauthzid\fP is specified, the use of which is server dependent, it
can be used to access another user\(aqs inbox, that the user has been granted
access to, or a shared mailbox for example.
.SH DEFAULT
blank
.SH PROTOCOLS
IMAP, LDAP, POP3 and SMTP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "imap://example.com/");
    curl_easy_setopt(curl, CURLOPT_USERNAME, "Kurt");
    curl_easy_setopt(curl, CURLOPT_PASSWORD, "xipj3plmq");
    curl_easy_setopt(curl, CURLOPT_SASL_AUTHZID, "Ursel");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.66.0. Support for OpenLDAP added in 7.82.0.
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_PASSWORD (3),
.BR CURLOPT_USERNAME (3),
.BR CURLOPT_USERPWD (3)
