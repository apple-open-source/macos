.\" generated by cd2nroff 0.1 from CURLOPT_SSH_PRIVATE_KEYFILE.md
.TH CURLOPT_SSH_PRIVATE_KEYFILE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SSH_PRIVATE_KEYFILE \- private key file for SSH auth
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SSH_PRIVATE_KEYFILE,
                          char *filename);
.fi
.SH DESCRIPTION
Pass a char pointer pointing to a \fIfilename\fP for your private key. If not
used, libcurl defaults to \fB$HOME/.ssh/id_rsa\fP or \fB$HOME/.ssh/id_dsa\fP if
the HOME environment variable is set, and in the current directory if HOME is
not set.

If the file is password\-protected, set the password with
\fICURLOPT_KEYPASSWD(3)\fP.

The SSH library derives the public key from this private key when possible. If
the SSH library cannot derive the public key from the private one and no
public one is provided with \fICURLOPT_SSH_PUBLIC_KEYFILE(3)\fP, the transfer
fails.

The application does not have to keep the string around after setting this
option.
.SH DEFAULT
As explained above
.SH PROTOCOLS
SFTP and SCP
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "sftp://example.com/file");
    curl_easy_setopt(curl, CURLOPT_SSH_PRIVATE_KEYFILE,
                     "/home/clarkkent/.ssh/id_rsa");
    curl_easy_setopt(curl, CURLOPT_KEYPASSWD, "password");
    res = curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.16.1
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, CURLE_UNKNOWN_OPTION if not, or
CURLE_OUT_OF_MEMORY if there was insufficient heap space.
.SH SEE ALSO
.BR CURLOPT_SSH_AUTH_TYPES (3),
.BR CURLOPT_SSH_PUBLIC_KEYFILE (3)
