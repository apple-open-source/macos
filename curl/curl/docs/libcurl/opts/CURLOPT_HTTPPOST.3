.\" generated by cd2nroff 0.1 from CURLOPT_HTTPPOST.md
.TH CURLOPT_HTTPPOST 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_HTTPPOST \- multipart formpost content
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_HTTPPOST,
                          struct curl_httppost *formpost);
.fi
.SH DESCRIPTION
\fBThis option is deprecated.\fP Use \fICURLOPT_MIMEPOST(3)\fP instead.

Tells libcurl you want a \fBmultipart/formdata\fP HTTP POST to be made and you
instruct what data to pass on to the server in the \fIformpost\fP argument.
Pass a pointer to a linked list of \fIcurl_httppost\fP structs as parameter.
The easiest way to create such a list, is to use \fIcurl_formadd(3)\fP as
documented. The data in this list must remain intact as long as the curl
transfer is alive and is using it.

Using POST with HTTP 1.1 implies the use of a "Expect: 100\-continue" header.
You can disable this header with \fICURLOPT_HTTPHEADER(3)\fP.

When setting \fICURLOPT_HTTPPOST(3)\fP, libcurl automatically sets
\fICURLOPT_NOBODY(3)\fP to 0.
.SH DEFAULT
NULL
.SH PROTOCOLS
HTTP
.SH EXAMPLE
.nf
int main(void)
{
  struct curl_httppost *formpost;
  struct curl_httppost *lastptr;

  /* Fill in the file upload field. This makes libcurl load data from
     the given file name when curl_easy_perform() is called. */
  curl_formadd(&formpost,
               &lastptr,
               CURLFORM_COPYNAME, "sendfile",
               CURLFORM_FILE, "postit2.c",
               CURLFORM_END);

  /* Fill in the filename field */
  curl_formadd(&formpost,
               &lastptr,
               CURLFORM_COPYNAME, "filename",
               CURLFORM_COPYCONTENTS, "postit2.c",
               CURLFORM_END);

  /* Fill in the submit field too, even if this is rarely needed */
  curl_formadd(&formpost,
               &lastptr,
               CURLFORM_COPYNAME, "submit",
               CURLFORM_COPYCONTENTS, "send",
               CURLFORM_END);

  CURL *curl = curl_easy_init();
  if(curl) {
    curl_easy_setopt(curl, CURLOPT_HTTPPOST, formpost);
    curl_easy_perform(curl);
    curl_easy_cleanup(curl);
  }
  curl_formfree(formpost);
}
.fi
.SH AVAILABILITY
As long as HTTP is enabled. Deprecated in 7.56.0.
.SH RETURN VALUE
Returns CURLE_OK if HTTP is enabled, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_MIMEPOST (3),
.BR CURLOPT_POST (3),
.BR CURLOPT_POSTFIELDS (3),
.BR curl_formadd (3),
.BR curl_formfree (3),
.BR curl_mime_init (3)
