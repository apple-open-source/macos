.\" generated by cd2nroff 0.1 from CURLOPT_SERVER_RESPONSE_TIMEOUT_MS.md
.TH CURLOPT_SERVER_RESPONSE_TIMEOUT_MS 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_SERVER_RESPONSE_TIMEOUT_MS \- time allowed to wait for server response
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_SERVER_RESPONSE_TIMEOUT_MS,
                          long timeout);
.fi
.SH DESCRIPTION
Pass a long. Causes libcurl to set a \fItimeout\fP period (in milliseconds) on the
amount of time that the server is allowed to take in order to send a response
message for a command before the session is considered dead. While libcurl is
waiting for a response, this value overrides \fICURLOPT_TIMEOUT(3)\fP. It is
recommended that if used in conjunction with \fICURLOPT_TIMEOUT(3)\fP, you set
\fICURLOPT_SERVER_RESPONSE_TIMEOUT_MS(3)\fP to a value smaller than
\fICURLOPT_TIMEOUT(3)\fP.

The maximum accepted value is 2147483648.

This is the millisecond version of \fICURLOPT_SERVER_RESPONSE_TIMEOUT(3)\fP.
.SH DEFAULT
None
.SH PROTOCOLS
FTP, IMAP, POP3, SMTP, and SSH
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode res;
    curl_easy_setopt(curl, CURLOPT_URL, "ftp://example.com/slow.txt");
    /* wait no more than 237 milliseconds */
    curl_easy_setopt(curl, CURLOPT_SERVER_RESPONSE_TIMEOUT_MS, 237L);
    res = curl_easy_perform(curl);

    curl_easy_cleanup(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 8.6.0.
.SH RETURN VALUE
Returns CURLE_OK if supported, and CURLE_UNKNOWN_OPTION if not. Returns
CURLE_BAD_FUNCTION_ARGUMENT if set to a negative value or a value that when
converted to milliseconds is too large.
.SH SEE ALSO
.BR CURLOPT_CONNECTTIMEOUT (3),
.BR CURLOPT_LOW_SPEED_LIMIT (3),
.BR CURLOPT_TIMEOUT (3)
