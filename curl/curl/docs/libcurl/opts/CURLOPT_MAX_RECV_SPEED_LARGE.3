.\" generated by cd2nroff 0.1 from CURLOPT_MAX_RECV_SPEED_LARGE.md
.TH CURLOPT_MAX_RECV_SPEED_LARGE 3 "March 12 2024" libcurl
.SH NAME
CURLOPT_MAX_RECV_SPEED_LARGE \- rate limit data download speed
.SH SYNOPSIS
.nf
#include <curl/curl.h>

CURLcode curl_easy_setopt(CURL *handle, CURLOPT_MAX_RECV_SPEED_LARGE,
                          curl_off_t maxspeed);
.fi
.SH DESCRIPTION
Pass a curl_off_t as parameter. If a download exceeds this \fImaxspeed\fP
(counted in bytes per second) the transfer pauses to keep the average speed
less than or equal to the parameter value. Defaults to unlimited speed.

This is not an exact science. libcurl attempts to keep the average speed below
the given threshold over a period time.

If you set \fImaxspeed\fP to a value lower than \fICURLOPT_BUFFERSIZE(3)\fP,
libcurl might download faster than the set limit initially.

This option does not affect transfer speeds done with FILE:// URLs.
.SH DEFAULT
0, disabled
.SH PROTOCOLS
All but file://
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    CURLcode ret;
    curl_easy_setopt(curl, CURLOPT_URL, "https://example.com/");
    /* cap the download speed to 31415 bytes/sec */
    curl_easy_setopt(curl, CURLOPT_MAX_RECV_SPEED_LARGE, (curl_off_t)31415);
    ret = curl_easy_perform(curl);
  }
}
.fi
.SH AVAILABILITY
Added in 7.15.5
.SH RETURN VALUE
Returns CURLE_OK if the option is supported, and CURLE_UNKNOWN_OPTION if not.
.SH SEE ALSO
.BR CURLOPT_LOW_SPEED_LIMIT (3),
.BR CURLOPT_MAX_SEND_SPEED_LARGE (3),
.BR CURLOPT_TIMEOUT (3)
