.\" generated by cd2nroff 0.1 from curl_unescape.md
.TH curl_unescape 3 "March 12 2024" libcurl
.SH NAME
curl_unescape \- URL decodes the given string
.SH SYNOPSIS
.nf
#include <curl/curl.h>

char *curl_unescape(const char *input, int length);
.fi
.SH DESCRIPTION
Obsolete function. Use \fIcurl_easy_unescape(3)\fP instead.

This function converts the URL encoded string \fBinput\fP to a "plain string"
and return that as a new allocated string. All input characters that are URL
encoded (%XX where XX is a two\-digit hexadecimal number) are converted to
their plain text versions.

If the \fBlength\fP argument is set to 0, \fIcurl_unescape(3)\fP calls
strlen() on \fBinput\fP to find out the size.

You must \fIcurl_free(3)\fP the returned string when you are done with it.
.SH EXAMPLE
.nf
int main(void)
{
  CURL *curl = curl_easy_init();
  if(curl) {
    char *decoded = curl_unescape("%63%75%72%6c", 12);
    if(decoded) {
      /* do not assume printf() works on the decoded data */
      printf("Decoded: ");
      /* ... */
      curl_free(decoded);
    }
  }
}
.fi
.SH AVAILABILITY
Since 7.15.4, \fIcurl_easy_unescape(3)\fP should be used. This function might
be removed in a future release.
.SH RETURN VALUE
A pointer to a null\-terminated string or NULL if it failed.
.SH SEE ALSO
.BR RFC 2396,
.BR curl_easy_escape (3),
.BR curl_easy_unescape (3),
.BR curl_free (3)
