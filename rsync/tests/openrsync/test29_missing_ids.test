#! /bin/sh

# atf:require.user=root
# Test that missing a name without --numeric-ids is non-fatal; we just don't
# transmit a name, so they won't get remapped on the other side.

set -e
set -u

. ${tstdir-.}/lib.sh
. ${tstdir-.}/conf.sh

sudo rm -rf src dst ref

check_id() {
	local _id
	local _type

	_id=$1
	_type=$2

	case "$(uname -s)" in
	Darwin)
		local _output

		case "$_type" in
		uid)
			_output=$(dscacheutil -q user -a uid "$_id")
			;;
		gid)
			_output=$(dscacheutil -q group -a gid "$_id")
			;;
		esac
		if [ -z "$_output" ]; then
			return 1
		else
			return 0
		fi
		;;
	*)
		local _db

		_db=""
		case "$_type" in
		uid)
			_db="passwd"
			;;
		gid)
			_db="group"
			;;
		esac
		if [ -z "$_db" ]; then
			1>&2 echo "Unknown id type $_type"
			exit 1
		fi

		getent "$_db" "$_id" >/dev/null
		return
		;;
	esac

	# Shouldn't happen, but they all exist.
	return 0
}

_uid=
_gid=

# There's a lot of holes in the low uid space, so find one of those to use.
search_low=1
search_high=4096

for id in $(seq "$search_low" "$search_high"); do
	if [ -z "$_uid" ] && ! check_id "$id" "uid"; then
		_uid="$id"
		[ -n "$_gid" ] && break
	fi
	if [ -z "$_gid" ] && ! check_id "$id" "gid"; then
		_gid="$id"
		[ -n "$_uid" ] && break
	fi
done

if [ -z "$_uid" -o -z "$_gid" ]; then
	1>&2 echo "Failed to find either unused uid or gid between ${search_low} and ${search_high}"
	1>&2 echo "_uid=$_uid, _gid=$_gid"
	exit 1
fi

# Create the source tree:
mkdir src
echo one > src/one
cp -ap src ref

sudo chown -R "$_uid:$_gid" src ref

# RSYNC_CLIENT_EXECUTOR should be set if $rsync doesn't include 'sudo'
rsync -a -- src/ dst/
compare_trees -t src dst
