cscope 15 $HOME/code/apple/worktrees/text_cmds-92467383/jq               0001803253
	@modules/oniguruma/contributed/libfuzzer-onig.cpp

19 
	~<°döt.h
>

20 
	~<°rög.h
>

21 
	~<⁄iguruma.h
>

23 "C" 
	$LLVMFuzzîTe°O√I≈ut
(c⁄° 
uöt8_t
 * 
D©a
, 
size_t
 
Size
)

25 
ªgex_t
 *
ªg
;

26 i‡(
⁄ig_√w


27 (&
ªg
, 
D©a
, D©®+ 
Size
, 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_UTF8
,

28 
ONIG_SYNTAX_DEFAULT
, 0) == 0)

29 
	`⁄ig_‰ì
(
ªg
);

31 
	}
}

	@modules/oniguruma/sample/bug_fix.c

4 
	~<°dio.h
>

5 
	~"⁄iguruma.h
"

7 
OnigCa£FﬁdTy≥
 
	gCF
 = 
ONIGENC_CASE_FOLD_MIN
;

10 
	$£¨ch
(
ªgex_t
* 
ªg
, * 
°r
, * 
íd
)

12 
r
;

13 *
°¨t
, *
ønge
;

14 
OnigRegi⁄
 *
ªgi⁄
;

16 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

18 
°¨t
 = 
°r
;

19 
ønge
 = 
íd
;

20 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

21 i‡(
r
 >= 0) {

22 
i
;

24 
	`Ârötf
(
°dîr
, "m©cháà%d (%s)\n", 
r
,

25 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

26 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

27 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

30 i‡(
r
 =
ONIG_MISMATCH
) {

31 
	`Ârötf
(
°dîr
, "search fail (%s)\n",

32 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

35 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

36 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

37 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

38 
	`Ârötf
(
°dîr
, " (%s)\n", 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

42 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

44 
	}
}

47 
	$exec_dñuxe
(
OnigEncodög
 
∑âîn_íc
, OnigEncodög 
°r_íc
,

48 
OnigO±i⁄Ty≥
 
›ti⁄s
, * 
≠©ã∫
, * 
a°r
)

50 
r
;

51 *
íd
;

52 
ªgex_t
* 
ªg
;

53 
OnigCompûeInfo
 
ci
;

54 
OnigEº‹Info
 
eöfo
;

55 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

56 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

58 
	`⁄ig_öôülize
(&
°r_íc
, 1);

60 
ci
.
num_of_ñemíts
 = 5;

61 
ci
.
∑âîn_íc
 =Öattern_enc;

62 
ci
.
èrgë_íc
 = 
°r_íc
;

63 
ci
.
sy¡ax
 = 
ONIG_SYNTAX_DEFAULT
;

64 
ci
.
›ti⁄
 = 
›ti⁄s
;

65 
ci
.
ˇ£_fﬁd_Êag
 = 
CF
;

67 
r
 = 
	`⁄ig_√w_dñuxe
(&
ªg
, 
∑âîn
,

68 
∑âîn
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
∑âîn_íc
,Öattern),

69 &
ci
, &
eöfo
);

70 i‡(
r
 !
ONIG_NORMAL
) {

71 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

72 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

73 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

77 
íd
 = 
°r
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
°r_íc
, str);

78 
r
 = 
	`£¨ch
(
ªg
, 
°r
, 
íd
);

80 
	`⁄ig_‰ì
(
ªg
);

81 
	`⁄ig_íd
();

83 
	}
}

86 
	$exec
(
OnigEncodög
 
íc
, 
OnigO±i⁄Ty≥
 
›ti⁄s
, * 
≠©ã∫
, * 
a°r
)

88 
r
;

89 *
íd
;

90 
ªgex_t
* 
ªg
;

91 
OnigEº‹Info
 
eöfo
;

92 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

93 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

95 
	`⁄ig_öôülize
(&
íc
, 1);

97 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,

98 
∑âîn
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
,Öattern),

99 
›ti⁄s
, 
íc
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

100 i‡(
r
 !
ONIG_NORMAL
) {

101 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

102 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

103 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

107 
íd
 = 
°r
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
, str);

108 
r
 = 
	`£¨ch
(
ªg
, 
°r
, 
íd
);

110 
	`⁄ig_‰ì
(
ªg
);

111 
	`⁄ig_íd
();

113 
	}
}

117 
	$maö
(
¨gc
, * 
¨gv
[])

121 
	`exec_dñuxe
(
ONIG_ENCODING_UTF8
, ONIG_ENCODING_UTF8,

122 
ONIG_OPTION_IGNORECASE
,

125 
	`exec
(
ONIG_ENCODING_UTF8
, 
ONIG_OPTION_NONE
, "(\\2)(\\1)", "aa");

127 
	`exec
(
ONIG_ENCODING_UTF8
, 
ONIG_OPTION_FIND_LONGEST
,

131 
	}
}

	@modules/oniguruma/sample/crnl.c

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~"⁄iguruma.h
"

12 
	gnÁû
 = 0;

14 
	$ªsu…
(
no
, 
‰om
, 
to
,

15 
ex≥˘ed_‰om
, 
ex≥˘ed_to
)

17 
	`Ârötf
(
°dîr
, "%3d: ", 
no
);

18 i‡(
‰om
 =
ex≥˘ed_‰om
 && 
to
 =
ex≥˘ed_to
) {

19 
	`Ârötf
(
°dîr
, "Success\n");

22 
	`Ârötf
(
°dîr
, "Fail:Éxpected: (%d-%d),Ñesult: (%d-%d)\n",

23 
ex≥˘ed_‰om
, 
ex≥˘ed_to
, 
‰om
, 
to
);

25 
nÁû
++;

27 
	}
}

30 
	$x
(
no
, * 
∑âîn_¨g
, * 
°r_¨g
,

31 
ex≥˘ed_‰om
, 
ex≥˘ed_to
)

33 
r
;

34 *
°¨t
, *
ønge
, *
íd
;

35 
ªgex_t
* 
ªg
;

36 
OnigEº‹Info
 
eöfo
;

37 
OnigRegi⁄
 *
ªgi⁄
;

38 
UCh¨
 *
∑âîn
, *
°r
;

40 
∑âîn
 = (
UCh¨
* )
∑âîn_¨g
;

41 
°r
 = (
UCh¨
* )
°r_¨g
;

43 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

44 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

45 i‡(
r
 !
ONIG_NORMAL
) {

46 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

47 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

48 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

52 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

54 
íd
 = 
°r
 + 
	`°æí
((* )str);

55 
°¨t
 = 
°r
;

56 
ønge
 = 
íd
;

57 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

58 i‡(
r
 >0 ||Ñ =
ONIG_MISMATCH
) {

59 
	`ªsu…
(
no
, 
ªgi⁄
->
beg
[0],Ñegi⁄->
íd
[0], 
ex≥˘ed_‰om
, 
ex≥˘ed_to
);

61 i‡(
r
 =
ONIG_MISMATCH
) {

62 
	`ªsu…
(
no
, 
r
, -1, 
ex≥˘ed_‰om
, 
ex≥˘ed_to
);

65 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

66 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

67 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

71 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

72 
	`⁄ig_‰ì
(
ªg
);

74 
	}
}

77 
	$f
(
no
, * 
∑âîn_¨g
, * 
°r_¨g
)

79  
	`x
(
no
, 
∑âîn_¨g
, 
°r_¨g
, -1, -1);

80 
	}
}

82 
	$maö
(
¨gc
, * 
¨gv
[])

84 
	`x
( 1, "", "\r\n", 0, 0);

85 
	`x
( 2, ".", "\r\n", 0, 1);

86 
	`f
( 3, "..", "\r\n");

87 
	`x
( 4, "^", "\r\n", 0, 0);

88 
	`x
( 5, "\\n^", "\r\nf", 1, 2);

89 
	`x
( 6, "\\n^a", "\r\na", 1, 3);

90 
	`x
( 7, "$", "\r\n", 0, 0);

91 
	`x
( 8, "T$", "T\r\n", 0, 1);

92 
	`x
( 9, "T$", "T\raT\r\n", 3, 4);

93 
	`x
(10, "\\z", "\r\n", 2, 2);

94 
	`f
(11, "a\\z", "a\r\n");

95 
	`x
(12, "\\Z", "\r\n", 0, 0);

96 
	`x
(13, "\\Z", "\r\na", 3, 3);

97 
	`x
(14, "\\Z", "\r\n\r\n\n", 4, 4);

98 
	`x
(15, "\\Z", "\r\n\r\nX", 5, 5);

99 
	`x
(16, "a\\Z", "a\r\n", 0, 1);

100 
	`x
(17, "aaaaaaaaaaaaaaa\\Z", "aaaaaaaaaaaaaaa\r\n", 0, 15);

101 
	`x
(18, "a|$", "b\r\n", 1, 1);

102 
	`x
(19, "$|b", "\rb", 1, 2);

103 
	`x
(20, "a$|ab$", "\r\nab\r\n", 2, 4);

105 
	`x
(21, "a|\\Z", "b\r\n", 1, 1);

106 
	`x
(22, "\\Z|b", "\rb", 1, 2);

107 
	`x
(23, "a\\Z|ab\\Z", "\r\nab\r\n", 2, 4);

108 
	`x
(24, "(?=a$).", "a\r\n", 0, 1);

109 
	`f
(25, "(?=a$).", "a\r");

110 
	`x
(26, "(?!a$)..", "a\r", 0, 2);

111 
	`x
(27, "(?<=a$).\\n", "a\r\n", 1, 3);

112 
	`f
(28, "(?<!a$).\\n", "a\r\n");

113 
	`x
(29, "(?=a\\Z).", "a\r\n", 0, 1);

114 
	`f
(30, "(?=a\\Z).", "a\r");

115 
	`x
(31, "(?!a\\Z)..", "a\r", 0, 2);

117 
	`⁄ig_íd
();

119 i‡(
nÁû
 > 0) {

120 
	`Ârötf
(
°dîr
, "\n");

121 
	`Ârötf
(
°dîr
, "!!! You haveÅoÉnable USE_CRNL_AS_LINE_TERMINATOR\n");

122 
	`Ârötf
(
°dîr
, "!!! inÑegenc.h forÅhisÅestÖrogram.\n");

123 
	`Ârötf
(
°dîr
, "\n");

127 
	}
}

	@modules/oniguruma/sample/encode.c

4 
	~<°dio.h
>

5 
	~"⁄iguruma.h
"

8 
	$£¨ch
(
ªgex_t
* 
ªg
, * 
°r
, * 
íd
)

10 
r
;

11 *
°¨t
, *
ønge
;

12 
OnigRegi⁄
 *
ªgi⁄
;

14 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

16 
°¨t
 = 
°r
;

17 
ønge
 = 
íd
;

18 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

19 i‡(
r
 >= 0) {

20 
i
;

22 
	`Ârötf
(
°dîr
, "m©cháà%d (%s)\n", 
r
,

23 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

24 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

25 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

28 i‡(
r
 =
ONIG_MISMATCH
) {

29 
	`Ârötf
(
°dîr
, "search fail (%s)\n",

30 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

33 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

34 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

35 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

36 
	`Ârötf
(
°dîr
, " (%s)\n", 
	`ONIGENC_NAME
(
	`⁄ig_gë_ícodög
(
ªg
)));

40 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

42 
	}
}

45 
	$exec
(
OnigEncodög
 
íc
, 
OnigO±i⁄Ty≥
 
›ti⁄s
,

46 * 
≠©ã∫
, * 
a°r
)

48 
r
;

49 *
íd
;

50 
ªgex_t
* 
ªg
;

51 
OnigEº‹Info
 
eöfo
;

52 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

53 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

55 
	`⁄ig_öôülize
(&
íc
, 1);

57 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,

58 
∑âîn
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
,Öattern),

59 
›ti⁄s
, 
íc
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

60 i‡(
r
 !
ONIG_NORMAL
) {

61 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

62 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

63 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

67 
íd
 = 
°r
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
, str);

68 
r
 = 
	`£¨ch
(
ªg
, 
°r
, 
íd
);

70 
	`⁄ig_‰ì
(
ªg
);

71 
	`⁄ig_íd
();

73 
	}
}

75 
OnigCa£FﬁdTy≥
 
	gCF
 = 
ONIGENC_CASE_FOLD_MIN
;

79 
	$£t_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
cf
)

81 
CF
 = 
cf
;

82 
	}
}

86 
	$exec_dñuxe
(
OnigEncodög
 
∑âîn_íc
, OnigEncodög 
°r_íc
,

87 
OnigO±i⁄Ty≥
 
›ti⁄s
, * 
≠©ã∫
, * 
a°r
)

89 
r
;

90 *
íd
;

91 
ªgex_t
* 
ªg
;

92 
OnigCompûeInfo
 
ci
;

93 
OnigEº‹Info
 
eöfo
;

94 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

95 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

97 
	`⁄ig_öôülize
(&
°r_íc
, 1);

99 
ci
.
num_of_ñemíts
 = 5;

100 
ci
.
∑âîn_íc
 =Öattern_enc;

101 
ci
.
èrgë_íc
 = 
°r_íc
;

102 
ci
.
sy¡ax
 = 
ONIG_SYNTAX_DEFAULT
;

103 
ci
.
›ti⁄
 = 
›ti⁄s
;

104 
ci
.
ˇ£_fﬁd_Êag
 = 
CF
;

106 
r
 = 
	`⁄ig_√w_dñuxe
(&
ªg
, 
∑âîn
,

107 
∑âîn
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
∑âîn_íc
,Öattern),

108 &
ci
, &
eöfo
);

109 i‡(
r
 !
ONIG_NORMAL
) {

110 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

111 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

112 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

116 
íd
 = 
°r
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
°r_íc
, str);

117 
r
 = 
	`£¨ch
(
ªg
, 
°r
, 
íd
);

119 
	`⁄ig_‰ì
(
ªg
);

120 
	`⁄ig_íd
();

122 
	}
}

124 
	$maö
(
¨gc
, * 
¨gv
[])

126 
r
;

128 
°r
[] = { 0xc7, 0xd6, 0xfe, 0xea, 0xe0, 0xe2, 0x00 };

129 
∑âîn
[] = { 0xe7, 0xf6, 0xde, '\\', 'w', '+', 0x00 };

131 
r
 = 
	`exec
(
ONIG_ENCODING_SJIS
, 
ONIG_OPTION_NONE
,

134 
r
 = 
	`exec
(
ONIG_ENCODING_EUC_JP
, 
ONIG_OPTION_NONE
,

137 
r
 = 
	`exec
(
ONIG_ENCODING_CP1251
, 
ONIG_OPTION_IGNORECASE
,

140 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

142 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

145 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_2
, 
ONIG_OPTION_IGNORECASE
,

147 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_2
, 
ONIG_OPTION_IGNORECASE
,

149 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_2
, 
ONIG_OPTION_IGNORECASE
,

152 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_2
, 
ONIG_OPTION_IGNORECASE
,

155 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_3
, 
ONIG_OPTION_IGNORECASE
,

157 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_4
, 
ONIG_OPTION_IGNORECASE
,

159 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_5
, 
ONIG_OPTION_IGNORECASE
,

161 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_6
, 
ONIG_OPTION_IGNORECASE
,

163 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_7
, 
ONIG_OPTION_IGNORECASE
,

165 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_8
, 
ONIG_OPTION_IGNORECASE
,

167 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_9
, 
ONIG_OPTION_IGNORECASE
,

169 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_10
, 
ONIG_OPTION_IGNORECASE
,

171 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_11
, 
ONIG_OPTION_IGNORECASE
,

173 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_13
, 
ONIG_OPTION_IGNORECASE
,

175 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_14
, 
ONIG_OPTION_IGNORECASE
,

177 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_15
, 
ONIG_OPTION_IGNORECASE
,

178 (* )
∑âîn
, (* )
°r
);

179 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_16
, 
ONIG_OPTION_IGNORECASE
,

180 (* )
∑âîn
, (* )
°r
);

182 
r
 = 
	`exec
(
ONIG_ENCODING_KOI8_R
, 
ONIG_OPTION_NONE
, "a+", "bbbaaaccc");

183 
r
 = 
	`exec
(
ONIG_ENCODING_EUC_TW
, 
ONIG_OPTION_NONE
, "b*a+?c+", "bbbaaaccc");

184 
r
 = 
	`exec
(
ONIG_ENCODING_EUC_KR
, 
ONIG_OPTION_NONE
, "a+", "bbbaaaccc");

185 
r
 = 
	`exec
(
ONIG_ENCODING_EUC_CN
, 
ONIG_OPTION_NONE
, "c+", "bbbaaaccc");

186 
r
 = 
	`exec
(
ONIG_ENCODING_BIG5
, 
ONIG_OPTION_NONE
, "a+", "bbbaaaccc");

188 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

190 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

192 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

194 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

196 
r
 = 
	`exec
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_OPTION_IGNORECASE
,

199 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ASCII
, 
ONIG_ENCODING_UTF16_BE
,

200 
ONIG_OPTION_NONE
, "a+",

203 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ASCII
, 
ONIG_ENCODING_UTF16_LE
,

204 
ONIG_OPTION_NONE
, "a+",

207 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, 
ONIG_ENCODING_UTF16_LE
,

208 
ONIG_OPTION_NONE
,

212 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF16_BE
,

213 
ONIG_OPTION_IGNORECASE
,

216 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF16_BE
,

217 
ONIG_OPTION_IGNORECASE
,

220 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF16_LE
,

221 
ONIG_OPTION_IGNORECASE
,

224 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF32_BE
,

225 
ONIG_OPTION_IGNORECASE
,

228 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF32_LE
,

229 
ONIG_OPTION_IGNORECASE
,

232 
r
 = 
	`exec
(
ONIG_ENCODING_UTF16_BE
, 
ONIG_OPTION_NONE
,

238 
r
 = 
	`exec
(
ONIG_ENCODING_UTF16_BE
, 
ONIG_OPTION_NONE
,

242 
r
 = 
	`exec
(
ONIG_ENCODING_GB18030
, 
ONIG_OPTION_IGNORECASE
,

245 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_ISO_8859_1
, 
ONIG_ENCODING_UTF16_BE
,

246 
ONIG_OPTION_NONE
,

250 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

251 
ONIG_OPTION_IGNORECASE
,

254 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

255 
ONIG_OPTION_IGNORECASE
,

258 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

259 
ONIG_OPTION_IGNORECASE
,

263 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

264 
ONIG_OPTION_IGNORECASE
,

268 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

269 
ONIG_OPTION_IGNORECASE
,

274 
UCh¨
 
∑t
[] = { 0x1f, 0xfc, 0x00, 0x00 };

275 
UCh¨
 
°r1
[] = { 0x21, 0x26, 0x1f, 0xbe, 0x00, 0x00 };

276 
UCh¨
 
°r2
[] = { 0x1f, 0xf3, 0x00, 0x00 };

278 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

279 
ONIG_OPTION_IGNORECASE
,

280 (* )
∑t
, (* )
°r1
);

282 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

283 
ONIG_OPTION_IGNORECASE
,

284 (* )
∑t
, (* )
°r2
);

290 
	`£t_ˇ£_fﬁd
(
ONIGENC_CASE_FOLD_TURKISH_AZERI
);

292 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF8
, ONIG_ENCODING_UTF8,

293 
ONIG_OPTION_IGNORECASE
,

296 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

297 
ONIG_OPTION_IGNORECASE
,

300 
r
 = 
	`exec_dñuxe
(
ONIG_ENCODING_UTF16_BE
, ONIG_ENCODING_UTF16_BE,

301 
ONIG_OPTION_IGNORECASE
,

304 
	`£t_ˇ£_fﬁd
(
ONIGENC_CASE_FOLD_MIN
);

307  
r
;

308 
	}
}

	@modules/oniguruma/sample/listcap.c

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~"⁄iguruma.h
"

11 
	$node_ˇŒback
(
group
, 
beg
, 
íd
, 
Àvñ
, 
©
, * 
¨g
)

13 
i
;

15 i‡(
©
 !
ONIG_TRAVERSE_CALLBACK_AT_FIRST
)

19 
i
 = 0; i < 
Àvñ
 * 2; i++)

20 
	`Âutc
(' ', 
°dîr
);

22 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
group
, 
beg
, 
íd
);

24 
	}
}

26 
	$ex
(* 
°r
, * 
∑âîn
,

27 
OnigSy¡axTy≥
* 
sy¡ax
)

29 
r
;

30 *
°¨t
, *
ønge
, *
íd
;

31 
ªgex_t
* 
ªg
;

32 
OnigEº‹Info
 
eöfo
;

33 
OnigRegi⁄
 *
ªgi⁄
;

35 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

36 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, 
sy¡ax
, &
eöfo
);

37 i‡(
r
 !
ONIG_NORMAL
) {

38 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

39 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

40 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

44 
	`Ârötf
(
°dîr
, "numbî o‡ˇ±uªs: %d\n", 
	`⁄ig_numbî_of_ˇ±uªs
(
ªg
));

45 
	`Ârötf
(
°dîr
, "number of capture histories: %d\n",

46 
	`⁄ig_numbî_of_ˇ±uª_hi°‹õs
(
ªg
));

48 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

50 
íd
 = 
°r
 + 
	`°æí
((* )str);

51 
°¨t
 = 
°r
;

52 
ønge
 = 
íd
;

53 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

54 i‡(
r
 >= 0) {

55 
i
;

57 
	`Ârötf
(
°dîr
, "m©cháà%d\n", 
r
);

58 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

59 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

61 
	`Ârötf
(
°dîr
, "\n");

63 
r
 = 
	`⁄ig_ˇ±uª_åì_åavî£
(
ªgi⁄
, 
ONIG_TRAVERSE_CALLBACK_AT_FIRST
,

64 
node_ˇŒback
, (* )0);

66 i‡(
r
 =
ONIG_MISMATCH
) {

67 
	`Ârötf
(
°dîr
, "search fail\n");

70 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

71 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

75 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

76 
	`⁄ig_‰ì
(
ªg
);

78 
	}
}

81 
	$maö
(
¨gc
, * 
¨gv
[])

83 
r
;

84 
OnigSy¡axTy≥
 
syn
;

86 
UCh¨
* 
°r1
 = (UChar* )"((())())";

87 
UCh¨
* 
∑âîn1


88 (
UCh¨
* )"\\g<p>(?@<p>\\(\\g<s>\\)){0}(?@<s>(?:\\g<p>)*|){0}";

90 
UCh¨
* 
°r2
 = (UChar* )"x00x00x00";

91 
UCh¨
* 
∑âîn2
 = (UChar* )"(?@x(?@\\d+))+";

93 
UCh¨
* 
°r3
 = (UChar* )"0123";

94 
UCh¨
* 
∑âîn3
 = (UChar* )"(?@.)(?@.)(?@.)(?@.)";

96 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_ASCII
 };

97 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

100 
	`⁄ig_c›y_sy¡ax
(&
syn
, 
ONIG_SYNTAX_DEFAULT
);

101 
	`⁄ig_£t_sy¡ax_›2
(&
syn
,

102 
	`⁄ig_gë_sy¡ax_›2
(&
syn
Ë| 
ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY
);

104 
r
 = 
	`ex
(
°r1
, 
∑âîn1
, &
syn
);

105 
r
 = 
	`ex
(
°r2
, 
∑âîn2
, &
syn
);

106 
r
 = 
	`ex
(
°r3
, 
∑âîn3
, &
syn
);

108 
	`⁄ig_íd
();

109  
r
;

110 
	}
}

	@modules/oniguruma/sample/names.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"⁄iguruma.h
"

9 
	$«me_ˇŒback
(c⁄° 
UCh¨
* 
«me
, c⁄° UCh¨* 
«me_íd
,

10 
ngroup_num
, * 
group_nums
,

11 
ªgex_t
* 
ªg
, * 
¨g
)

13 
i
, 
gn
, 
ªf
;

14 * 
s
;

15 
OnigRegi⁄
 *
ªgi⁄
 = (OnigRegi⁄* )
¨g
;

17 
i
 = 0; i < 
ngroup_num
; i++) {

18 
gn
 = 
group_nums
[
i
];

19 
ªf
 = 
	`⁄ig_«me_to_backªf_numbî
(
ªg
, 
«me
, 
«me_íd
, 
ªgi⁄
);

20 
s
 = (
ªf
 =
gn
 ? "*" : "");

21 
	`Ârötf
(
°dîr
, "%†(%d): ", 
«me
, 
gn
);

22 
	`Ârötf
(
°dîr
, "(%d-%dË%s\n", 
ªgi⁄
->
beg
[
gn
],Ñegi⁄->
íd
[gn], 
s
);

25 
	}
}

27 
	$maö
(
¨gc
, * 
¨gv
[])

29 
r
;

30 *
°¨t
, *
ønge
, *
íd
;

31 
ªgex_t
* 
ªg
;

32 
OnigEº‹Info
 
eöfo
;

33 
OnigRegi⁄
 *
ªgi⁄
;

35 
UCh¨
* 
∑âîn
 = (UChar* )"(?<foo>a*)(?<bar>b*)(?<foo>c*)";

36 
UCh¨
* 
°r
 = (UChar* )"aaabbbbcc";

38 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_ASCII
 };

39 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

41 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

42 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

43 i‡(
r
 !
ONIG_NORMAL
) {

44 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

45 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

46 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

50 
	`Ârötf
(
°dîr
, "numbî o‡«mes: %d\n", 
	`⁄ig_numbî_of_«mes
(
ªg
));

52 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

54 
íd
 = 
°r
 + 
	`°æí
((* )str);

55 
°¨t
 = 
°r
;

56 
ønge
 = 
íd
;

57 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

58 i‡(
r
 >= 0) {

59 
	`Ârötf
(
°dîr
, "m©cháà%d\n\n", 
r
);

60 
r
 = 
	`⁄ig_f‹óch_«me
(
ªg
, 
«me_ˇŒback
, (* )
ªgi⁄
);

62 i‡(
r
 =
ONIG_MISMATCH
) {

63 
	`Ârötf
(
°dîr
, "search fail\n");

66 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

67 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

71 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

72 
	`⁄ig_‰ì
(
ªg
);

73 
	`⁄ig_íd
();

75 
	}
}

	@modules/oniguruma/sample/posix.c

4 
	~<°dio.h
>

5 
	~"⁄igposix.h
"

7 
	tUCh¨
;

9 
	$x
(
ªgex_t
* 
ªg
, * 
∑âîn
, * 
°r
)

11 
r
, 
i
;

12 
buf
[200];

13 
ªgm©ch_t
 
pm©ch
[20];

15 
r
 = 
	`ªgexec
(
ªg
, (* )
°r
,Ñeg->
ª_nsub
 + 1, 
pm©ch
, 0);

16 i‡(
r
 !0 &&Ñ !
REG_NOMATCH
) {

17 
	`ªgîr‹
(
r
, 
ªg
, 
buf
, (buf));

18 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

22 i‡(
r
 =
REG_NOMATCH
) {

23 
	`Ârötf
(
°dîr
, "FAIL: /%s/ '%s'\n", 
∑âîn
, 
°r
);

26 
	`Ârötf
(
°dîr
, "OK: /%s/ '%s'\n", 
∑âîn
, 
°r
);

27 
i
 = 0; i <()
ªg
->
ª_nsub
; i++) {

28 
	`Ârötf
(
°dîr
, "%d: %d-%d\n", 
i
, 
pm©ch
[i].
rm_so
,Öm©ch[i].
rm_eo
);

32 
	}
}

34 
	$maö
(
¨gc
, * 
¨gv
[])

36 
r
;

37 
buf
[200];

38 
ªgex_t
 
ªg
;

39 
UCh¨
* 
∑âîn
;

41 
	`ªg_£t_ícodög
(
REG_POSIX_ENCODING_ASCII
);

44 
∑âîn
 = (
UCh¨
* )"^a+b{2,7}[c-f]?$|uuu";

45 
r
 = 
	`ªgcomp
(&
ªg
, (* )
∑âîn
, 
REG_EXTENDED
);

46 i‡(
r
) {

47 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

48 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

51 
	`x
(&
ªg
, 
∑âîn
, (
UCh¨
* )"aaabbbbd");

54 
∑âîn
 = (
UCh¨
* )"^a+b{2,7}[c-f]?|uuu";

55 
r
 = 
	`ªgcomp
(&
ªg
, (* )
∑âîn
, 0);

56 i‡(
r
) {

57 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

58 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

61 
	`x
(&
ªg
, 
∑âîn
, (
UCh¨
* )"a+b{2,7}d?|uuu");

64 
∑âîn
 = (
UCh¨
* )"^a*b\\{2,7\\}\\([c-f]\\)$";

65 
r
 = 
	`ªgcomp
(&
ªg
, (* )
∑âîn
, 0);

66 i‡(
r
) {

67 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

68 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

71 
	`x
(&
ªg
, 
∑âîn
, (
UCh¨
* )"aaaabbbbbbd");

74 
	`⁄ig_£t_deÁu…_sy¡ax
(
ONIG_SYNTAX_POSIX_EXTENDED
);

75 
∑âîn
 = (
UCh¨
* )"^a+b{2,7}[c-f]?)$|uuu";

76 
r
 = 
	`ªgcomp
(&
ªg
, (* )
∑âîn
, 
REG_EXTENDED
);

77 i‡(
r
) {

78 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

79 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

82 
	`x
(&
ªg
, 
∑âîn
, (
UCh¨
* )"aaabbbbd)");

84 
∑âîn
 = (
UCh¨
* )"^b.";

85 
r
 = 
	`ªgcomp
(&
ªg
, (* )
∑âîn
, 
REG_EXTENDED
 | 
REG_NEWLINE
);

86 i‡(
r
) {

87 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

88 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
buf
);

91 
	`x
(&
ªg
, 
∑âîn
, (
UCh¨
* )"a\nb\n");

93 
	`ªg‰ì
(&
ªg
);

94 
	`⁄ig_íd
();

96 
	}
}

	@modules/oniguruma/sample/scan.c

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~"⁄iguruma.h
"

9 
	$sˇn_ˇŒback
(
n
, 
r
, 
OnigRegi⁄
* 
ªgi⁄
, * 
¨g
)

11 
i
;

13 
	`Ârötf
(
°dout
, "sˇn: %d\n", 
n
);

15 
	`Ârötf
(
°dout
, "m©cháà%d\n", 
r
);

16 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

17 
	`Ârötf
(
°dout
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

21 
	}
}

24 
	$sˇn
(
ªgex_t
* 
ªg
, * 
°r
, * 
íd
)

26 
r
;

27 
OnigRegi⁄
 *
ªgi⁄
;

29 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

31 
r
 = 
	`⁄ig_sˇn
(
ªg
, 
°r
, 
íd
, 
ªgi⁄
, 
ONIG_OPTION_NONE
, 
sˇn_ˇŒback
, 
NULL
);

32 i‡(
r
 >= 0) {

33 
	`Ârötf
(
°dout
, "tŸÆ: %d m©ch\n", 
r
);

36 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

37 
	`⁄ig_îr‹_code_to_°r
((
OnigUCh¨
* )
s
, 
r
);

38 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

42 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

44 
	}
}

47 
	$exec
(
OnigEncodög
 
íc
, 
OnigO±i⁄Ty≥
 
›ti⁄s
, * 
≠©ã∫
, * 
a°r
)

49 
r
;

50 *
íd
;

51 
ªgex_t
* 
ªg
;

52 
OnigEº‹Info
 
eöfo
;

53 
UCh¨
* 
∑âîn_íd
;

54 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

55 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

57 
	`⁄ig_öôülize
(&
íc
, 1);

59 
∑âîn_íd
 = 
∑âîn
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
,Öattern);

61 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
, 
∑âîn_íd
, 
›ti⁄s
, 
íc
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

62 i‡(
r
 !
ONIG_NORMAL
) {

63 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

64 
	`⁄ig_îr‹_code_to_°r
((
OnigUCh¨
* )
s
, 
r
, &
eöfo
);

65 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

69 
íd
 = 
°r
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
, str);

70 
r
 = 
	`sˇn
(
ªg
, 
°r
, 
íd
);

72 
	`⁄ig_‰ì
(
ªg
);

73 
	`⁄ig_íd
();

75 
	}
}

78 
	$maö
(
¨gc
, * 
¨gv
[])

80 
	`exec
(
ONIG_ENCODING_UTF8
, 
ONIG_OPTION_NONE
,

83 
	`Ârötf
(
°dout
, "\n");

84 
	`exec
(
ONIG_ENCODING_UTF8
, 
ONIG_OPTION_NONE
,

88 
	}
}

	@modules/oniguruma/sample/simple.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"⁄iguruma.h
"

8 
	$maö
(
¨gc
, * 
¨gv
[])

10 
r
;

11 *
°¨t
, *
ønge
, *
íd
;

12 
ªgex_t
* 
ªg
;

13 
OnigEº‹Info
 
eöfo
;

14 
OnigRegi⁄
 *
ªgi⁄
;

16 
UCh¨
* 
∑âîn
 = (UChar* )"a(.*)b|[e-f]+";

17 
UCh¨
* 
°r
 = (UChar* )"zzzzaffffffffb";

19 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_ASCII
 };

20 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

22 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

23 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

24 i‡(
r
 !
ONIG_NORMAL
) {

25 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

26 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

27 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

31 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

33 
íd
 = 
°r
 + 
	`°æí
((* )str);

34 
°¨t
 = 
°r
;

35 
ønge
 = 
íd
;

36 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

37 i‡(
r
 >= 0) {

38 
i
;

40 
	`Ârötf
(
°dîr
, "m©cháà%d\n", 
r
);

41 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

42 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

45 i‡(
r
 =
ONIG_MISMATCH
) {

46 
	`Ârötf
(
°dîr
, "search fail\n");

49 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

50 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

51 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

55 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

56 
	`⁄ig_‰ì
(
ªg
);

57 
	`⁄ig_íd
();

59 
	}
}

	@modules/oniguruma/sample/sql.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"⁄iguruma.h
"

8 
	$maö
(
¨gc
, * 
¨gv
[])

10 
OnigSy¡axTy≥
 
SQLSy¡ax
;

12 
r
;

13 *
°¨t
, *
ønge
, *
íd
;

14 
ªgex_t
* 
ªg
;

15 
OnigEº‹Info
 
eöfo
;

16 
OnigRegi⁄
 *
ªgi⁄
;

18 
UCh¨
* 
∑âîn
 = (UChar* )"\\_%\\\\__zz";

19 
UCh¨
* 
°r
 = (UChar* )"a_abcabcabc\\ppzz";

21 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_ASCII
 };

22 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

24 
	`⁄ig_£t_sy¡ax_›
 (&
SQLSy¡ax
, 
ONIG_SYN_OP_VARIABLE_META_CHARACTERS
);

25 
	`⁄ig_£t_sy¡ax_›2
 (&
SQLSy¡ax
, 0);

26 
	`⁄ig_£t_sy¡ax_behavi‹
(&
SQLSy¡ax
, 0);

27 
	`⁄ig_£t_sy¡ax_›ti⁄s
 (&
SQLSy¡ax
, 
ONIG_OPTION_MULTILINE
);

28 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ESCAPE
, (
OnigCodePoöt
 )'\\');

29 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ANYCHAR
, (
OnigCodePoöt
 )'_');

30 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ANYTIME
,

31 
ONIG_INEFFECTIVE_META_CHAR
);

32 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ZERO_OR_ONE_TIME
,

33 
ONIG_INEFFECTIVE_META_CHAR
);

34 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ONE_OR_MORE_TIME
,

35 
ONIG_INEFFECTIVE_META_CHAR
);

36 
	`⁄ig_£t_mëa_ch¨
(&
SQLSy¡ax
, 
ONIG_META_CHAR_ANYCHAR_ANYTIME
,

37 (
OnigCodePoöt
 )'%');

39 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

40 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, &
SQLSy¡ax
, &
eöfo
);

41 i‡(
r
 !
ONIG_NORMAL
) {

42 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

43 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

44 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

48 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

50 
íd
 = 
°r
 + 
	`°æí
((* )str);

51 
°¨t
 = 
°r
;

52 
ønge
 = 
íd
;

53 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

54 i‡(
r
 >= 0) {

55 
i
;

57 
	`Ârötf
(
°dîr
, "m©cháà%d\n", 
r
);

58 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

59 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

62 i‡(
r
 =
ONIG_MISMATCH
) {

63 
	`Ârötf
(
°dîr
, "search fail\n");

66 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

67 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

68 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

72 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

73 
	`⁄ig_‰ì
(
ªg
);

74 
	`⁄ig_íd
();

76 
	}
}

	@modules/oniguruma/sample/syntax.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"⁄iguruma.h
"

8 
	$exec
(
OnigSy¡axTy≥
* 
sy¡ax
,

9 * 
≠©ã∫
, * 
a°r
)

11 
r
;

12 *
°¨t
, *
ønge
, *
íd
;

13 
ªgex_t
* 
ªg
;

14 
OnigEº‹Info
 
eöfo
;

15 
OnigRegi⁄
 *
ªgi⁄
;

16 
UCh¨
* 
∑âîn
 = (UCh¨* )
≠©ã∫
;

17 
UCh¨
* 
°r
 = (UCh¨* )
a°r
;

19 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

20 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_ASCII
, 
sy¡ax
, &
eöfo
);

21 i‡(
r
 !
ONIG_NORMAL
) {

22 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

23 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

24 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

28 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

30 
íd
 = 
°r
 + 
	`°æí
((* )str);

31 
°¨t
 = 
°r
;

32 
ønge
 = 
íd
;

33 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

34 i‡(
r
 >= 0) {

35 
i
;

37 
	`Ârötf
(
°dîr
, "m©cháà%d\n", 
r
);

38 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

39 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

42 i‡(
r
 =
ONIG_MISMATCH
) {

43 
	`Ârötf
(
°dîr
, "search fail\n");

46 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

47 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

48 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

52 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

53 
	`⁄ig_‰ì
(
ªg
);

55 
	}
}

57 
	$maö
(
¨gc
, * 
¨gv
[])

59 
r
;

61 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_ASCII
 };

62 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

64 
r
 = 
	`exec
(
ONIG_SYNTAX_PERL
,

68 
r
 = 
	`exec
(
ONIG_SYNTAX_JAVA
,

71 
r
 = 
	`exec
(
ONIG_SYNTAX_ASIS
,

74 
	`⁄ig_íd
();

75  
r
;

76 
	}
}

	@modules/oniguruma/sample/user_property.c

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"⁄iguruma.h
"

9 
	$maö
(
¨gc
, * 
¨gv
[])

11 
r
;

12 *
°¨t
, *
ønge
, *
íd
;

13 
ªgex_t
* 
ªg
;

14 
OnigEº‹Info
 
eöfo
;

15 
OnigRegi⁄
 *
ªgi⁄
;

17 
OnigCodePoöt
 
h™daku⁄_húag™a
[] = {

26 
UCh¨
* 
∑âîn
 = (UChar* )"\\A(\\p{HandakuonHiragana}{5})\\p{^HandakuonHiragana}\\z";

30 
UCh¨
* 
°r
 = (UChar* )"\343\201\261\343\201\264\343\201\267\343\201\272\343\201\275a";

32 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_UTF8
 };

33 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

35 
r
 = 
	`⁄ig_unicode_deföe_u£r_¥›îty
("HandakuonHiragana",

36 
h™daku⁄_húag™a
);

37 i‡(
r
 =
ONIG_NORMAL
) {

38 
	`Ârötf
(
°dout
, "define HandakuonHiragana\n");

41 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

42 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

43 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

47 
r
 = 
	`⁄ig_√w
(&
ªg
, 
∑âîn
,Ö©ã∫ + 
	`°æí
((* )pattern),

48 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_UTF8
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

49 i‡(
r
 =
ONIG_NORMAL
) {

50 
	`Ârötf
(
°dout
, "onig_new: success.\n");

53 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

54 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

55 
	`Ârötf
(
°dîr
, "⁄ig_√w: ERROR: %s\n", 
s
);

59 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

61 
íd
 = 
°r
 + 
	`°æí
((* )str);

62 
°¨t
 = 
°r
;

63 
ønge
 = 
íd
;

64 
r
 = 
	`⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
, 
ønge
, 
ªgi⁄
, 
ONIG_OPTION_NONE
);

65 i‡(
r
 >= 0) {

66 
i
;

68 
	`Ârötf
(
°dîr
, "m©cháà%d\n", 
r
);

69 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

70 
	`Ârötf
(
°dîr
, "%d: (%d-%d)\n", 
i
, 
ªgi⁄
->
beg
[i],Ñegi⁄->
íd
[i]);

73 i‡(
r
 =
ONIG_MISMATCH
) {

74 
	`Ârötf
(
°dîr
, "search fail\n");

77 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

78 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

79 
	`Ârötf
(
°dîr
, "ERROR: %s\n", 
s
);

83 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1 );

84 
	`⁄ig_‰ì
(
ªg
);

85 
	`⁄ig_íd
();

87 
	}
}

	@modules/oniguruma/src/ascii.c

30 
	~"ªgíc.h
"

33 
	$ascii_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

35 i‡(
code
 < 128)

36  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

38  
FALSE
;

39 
	}
}

41 
OnigEncodögTy≥
 
	gOnigEncodögASCII
 = {

42 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

46 
⁄igíc_is_mbc_√wlöe_0x0a
,

47 
⁄igíc_sögÀ_byã_mbc_to_code
,

48 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

49 
⁄igíc_sögÀ_byã_code_to_mbc
,

50 
⁄igíc_ascii_mbc_ˇ£_fﬁd
,

51 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

52 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

53 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

54 
ascii_is_code_˘y≥
,

55 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

56 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

57 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

58 
NULL
,

59 
NULL
,

60 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/big5.c

30 
	~"ªgíc.h
"

32 c⁄° 
	gEncLí_BIG5
[] = {

52 
	$big5_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

54  
EncLí_BIG5
[*
p
];

55 
	}
}

58 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

60 
p
 < 
íd
) {

61 i‡(*
p
 < 0x80) {

62 
p
++;

64 i‡(*
p
 < 0xa1) {

65  
FALSE
;

67 i‡(*
p
 < 0xff) {

68 
p
++;

69 i‡(
p
 >
íd
Ë 
FALSE
;

70 i‡(*
p
 < 0x40Ë 
FALSE
;

71 i‡(*
p
 > 0x7ê&& *∞< 0xa1Ë 
FALSE
;

72 i‡(*
p
 =0xffË 
FALSE
;

73 
p
++;

76  
FALSE
;

79  
TRUE
;

80 
	}
}

82 
OnigCodePoöt


83 
	$big5_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

85  
	`⁄igíc_mbn_mbc_to_code
(
ONIG_ENCODING_BIG5
, 
p
, 
íd
);

86 
	}
}

89 
	$big5_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

91  
	`⁄igíc_mb2_code_to_mbc
(
ONIG_ENCODING_BIG5
, 
code
, 
buf
);

92 
	}
}

95 
	$big5_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
,

96 
UCh¨
* 
lowî
)

98  
	`⁄igíc_mbn_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_BIG5
, 
Êag
,

99 
µ
, 
íd
, 
lowî
);

100 
	}
}

104 
	$big5_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

105 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

107  
	`⁄igíc_mbn_is_mbc_ambiguous
(
ONIG_ENCODING_BIG5
, 
Êag
, 
µ
, 
íd
);

108 
	}
}

112 
	$big5_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

114  
	`⁄igíc_mb2_is_code_˘y≥
(
ONIG_ENCODING_BIG5
, 
code
, 
˘y≥
);

115 
	}
}

117 c⁄° 
	gBIG5_CAN_BE_TRAIL_TABLE
[256] = {

136 
	#BIG5_ISMB_FIRST
(
byã
Ë(
EncLí_BIG5
[byã] > 1)

	)

137 
	#BIG5_ISMB_TRAIL
(
byã
Ë
BIG5_CAN_BE_TRAIL_TABLE
[(byã)]

	)

139 
UCh¨
*

140 
	$big5_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

142 c⁄° 
UCh¨
 *
p
;

143 
Àn
;

145 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

146 
p
 = 
s
;

148 i‡(
	`BIG5_ISMB_TRAIL
(*
p
)) {

149 
p
 > 
°¨t
) {

150 i‡(! 
	`BIG5_ISMB_FIRST
(*--
p
)) {

151 
p
++;

156 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_BIG5
, 
p
);

157 i‡(
p
 + 
Àn
 > 
s
Ë (
UCh¨
* )p;

158 
p
 +
Àn
;

159  (
UCh¨
* )(
p
 + ((
s
 -Ö) & ~1));

160 
	}
}

163 
	$big5_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

165 c⁄° 
UCh¨
 
c
 = *
s
;

167  (
	`BIG5_ISMB_TRAIL
(
c
Ë? 
FALSE
 : 
TRUE
);

168 
	}
}

170 
OnigEncodögTy≥
 
	gOnigEncodögBIG5
 = {

171 
big5_mbc_íc_Àn
,

175 
⁄igíc_is_mbc_√wlöe_0x0a
,

176 
big5_mbc_to_code
,

177 
⁄igíc_mb2_code_to_mb˛í
,

178 
big5_code_to_mbc
,

179 
big5_mbc_ˇ£_fﬁd
,

180 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

181 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

182 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

183 
big5_is_code_˘y≥
,

184 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

185 
big5_À·_adju°_ch¨_hód
,

186 
big5_is_Ælowed_ªvî£_m©ch
,

187 
NULL
,

188 
NULL
,

189 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/config.h

8 
	#HAVE_ALLOCA
 1

	)

11 
	#HAVE_ALLOCA_H
 1

	)

14 
	#HAVE_DLFCN_H
 1

	)

17 
	#HAVE_INTTYPES_H
 1

	)

20 
	#HAVE_PROTOTYPES
 1

	)

23 
	#HAVE_STDARG_PROTOTYPES
 1

	)

26 
	#HAVE_STDINT_H
 1

	)

29 
	#HAVE_STDIO_H
 1

	)

32 
	#HAVE_STDLIB_H
 1

	)

35 
	#HAVE_STRINGS_H
 1

	)

38 
	#HAVE_STRING_H
 1

	)

41 
	#HAVE_SYS_STAT_H
 1

	)

44 
	#HAVE_SYS_TIMES_H
 1

	)

47 
	#HAVE_SYS_TIME_H
 1

	)

50 
	#HAVE_SYS_TYPES_H
 1

	)

53 
	#HAVE_UNISTD_H
 1

	)

56 
	#LT_OBJDIR
 ".libs/"

	)

59 
	#PACKAGE
 "⁄ig"

	)

62 
	#PACKAGE_BUGREPORT
 ""

	)

65 
	#PACKAGE_NAME
 "⁄ig"

	)

68 
	#PACKAGE_STRING
 "⁄ig 6.1.3"

	)

71 
	#PACKAGE_TARNAME
 "⁄ig"

	)

74 
	#PACKAGE_URL
 ""

	)

77 
	#PACKAGE_VERSION
 "6.1.3"

	)

80 
	#SIZEOF_INT
 4

	)

83 
	#SIZEOF_LONG
 8

	)

86 
	#SIZEOF_SHORT
 2

	)

99 
	#STDC_HEADERS
 1

	)

103 
	#TIME_WITH_SYS_TIME
 1

	)

112 
	#VERSION
 "6.1.3"

	)

	@modules/oniguruma/src/cp1251.c

31 
	~"ªgíc.h
"

33 
	#ENC_CP1251_TO_LOWER_CASE
(
c
Ë
EncCP1251_ToLowîCa£TabÀ
[c]

	)

34 
	#ENC_IS_CP1251_CTYPE
(
code
,
˘y≥
) \

35 ((
EncCP1251_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

37 c⁄° 
UCh¨
 
	gEncCP1251_ToLowîCa£TabÀ
[256] = {

72 c⁄° 
	gEncCP1251_Cty≥TabÀ
[256] = {

108 
	$˝1251_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

109 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

111 c⁄° 
UCh¨
* 
p
 = *
µ
;

113 *
lowî
 = 
	`ENC_CP1251_TO_LOWER_CASE
(*
p
);

114 (*
µ
)++;

116 
	}
}

119 
	$˝1251_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

121 i‡(
code
 < 256)

122  
	`ENC_IS_CP1251_CTYPE
(
code
, 
˘y≥
);

124  
FALSE
;

125 
	}
}

127 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

166 
	$˝1251_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

167 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

169  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

170 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

171 
Êag
, 
f
, 
¨g
);

172 
	}
}

175 
	$˝1251_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

176 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

178  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

179 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

180 
Êag
, 
p
, 
íd
, 
ôems
);

181 
	}
}

183 
OnigEncodögTy≥
 
	gOnigEncodögCP1251
 = {

184 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

188 
⁄igíc_is_mbc_√wlöe_0x0a
,

189 
⁄igíc_sögÀ_byã_mbc_to_code
,

190 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

191 
⁄igíc_sögÀ_byã_code_to_mbc
,

192 
˝1251_mbc_ˇ£_fﬁd
,

193 
˝1251_≠∂y_Æl_ˇ£_fﬁd
,

194 
˝1251_gë_ˇ£_fﬁd_codes_by_°r
,

195 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

196 
˝1251_is_code_˘y≥
,

197 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

198 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

199 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

200 
NULL
,

201 
NULL
,

202 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/euc_jp.c

30 
	~"ªgöt.h
"

32 
	#eucjp_i¶ód
(
c
Ë((
UCh¨
 )((cË- 0xa1Ë> 0x„ - 0xa1)

	)

34 c⁄° 
	gEncLí_EUCJP
[] = {

54 
	$mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

56  
EncLí_EUCJP
[*
p
];

57 
	}
}

60 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

62 
p
 < 
íd
) {

63 i‡(*
p
 < 0x80) {

64 
p
++;

66 i‡(*
p
 > 0xa0) {

67 i‡(*
p
 =0xffË 
FALSE
;

68 
p
++;

69 i‡(
p
 >
íd
Ë 
FALSE
;

70 i‡(*
p
 < 0xa1 || *∞=0xffË 
FALSE
;

71 
p
++;

73 i‡(*
p
 == 0x8e) {

74 
p
++;

75 i‡(
p
 >
íd
Ë 
FALSE
;

76 i‡(*
p
 < 0xa1 || *∞> 0xdfË 
FALSE
;

77 
p
++;

79 i‡(*
p
 == 0x8f) {

80 
p
++;

81 i‡(
p
 >
íd
Ë 
FALSE
;

82 i‡(*
p
 < 0xa1 || *∞=0xffË 
FALSE
;

83 
p
++;

84 i‡(
p
 >
íd
Ë 
FALSE
;

85 i‡(*
p
 < 0xa1 || *∞=0xffË 
FALSE
;

86 
p
++;

89  
FALSE
;

92  
TRUE
;

93 
	}
}

95 
OnigCodePoöt


96 
	$mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

98 
c
, 
i
, 
Àn
;

99 
OnigCodePoöt
 
n
;

101 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_EUC_JP
, 
p
);

102 
n
 = (
OnigCodePoöt
 )*
p
++;

103 i‡(
Àn
 =1Ë 
n
;

105 
i
 = 1; i < 
Àn
; i++) {

106 i‡(
p
 >
íd
) ;

107 
c
 = *
p
++;

108 
n
 <<8;Ç +
c
;

110  
n
;

111 
	}
}

114 
	$code_to_mb˛í
(
OnigCodePoöt
 
code
)

116 i‡(
	`ONIGENC_IS_CODE_ASCII
(
code
))  1;

117 i‡((
code
 & 0xff0000) != 0)  3;

118 i‡((
code
 & 0xff00) != 0)  2;

120  
ONIGERR_INVALID_CODE_POINT_VALUE
;

121 
	}
}

125 
	$code_to_mbc_fú°
(
OnigCodePoöt
 
code
)

127 
fú°
;

129 i‡((
code
 & 0xff0000) != 0) {

130 
fú°
 = (
code
 >> 16) & 0xff;

132 i‡((
code
 & 0xff00) != 0) {

133 
fú°
 = (
code
 >> 8) & 0xff;

136  ()
code
;

138  
fú°
;

139 
	}
}

143 
	$code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

145 
UCh¨
 *
p
 = 
buf
;

147 i‡((
code
 & 0xff0000Ë!0Ë*
p
++ = (
UCh¨
 )(((code >> 16) & 0xff));

148 i‡((
code
 & 0xff00Ë!0Ë*
p
++ = (
UCh¨
 )(((code >> 8) & 0xff));

149 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

152 i‡(
	`í˛í
(
ONIG_ENCODING_EUC_JP
, 
buf
Ë!(
p
 - buf))

153  
ONIGERR_INVALID_CODE_POINT_VALUE
;

155  
p
 - 
buf
;

156 
	}
}

159 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

160 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

162 
Àn
;

163 c⁄° 
UCh¨
* 
p
 = *
µ
;

165 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

166 *
lowî
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

167 (*
µ
)++;

171 
i
;

173 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_EUC_JP
, 
p
);

174 
i
 = 0; i < 
Àn
; i++) {

175 *
lowî
++ = *
p
++;

177 (*
µ
Ë+
Àn
;

178  
Àn
;

180 
	}
}

182 
UCh¨
*

183 
	$À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

188 c⁄° 
UCh¨
 *
p
;

189 
Àn
;

191 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

192 
p
 = 
s
;

194 !
	`eucjp_i¶ód
(*
p
Ë&&Ö > 
°¨t
)Ö--;

195 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_EUC_JP
, 
p
);

196 i‡(
p
 + 
Àn
 > 
s
Ë (
UCh¨
* )p;

197 
p
 +
Àn
;

198  (
UCh¨
* )(
p
 + ((
s
 -Ö) & ~1));

199 
	}
}

202 
	$is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

204 c⁄° 
UCh¨
 
c
 = *
s
;

205 i‡(
c
 <= 0x7e || c == 0x8e || c == 0x8f)

206  
TRUE
;

208  
FALSE
;

209 
	}
}

212 c⁄° 
OnigCodePoöt
 
	gCR_Húag™a
[] = {

217 c⁄° 
OnigCodePoöt
 
	gCR_K©ak™a
[] = {

224 c⁄° 
OnigCodePoöt
* 
	gPr›îtyLi°
[] = {

225 
CR_Húag™a
,

226 
CR_K©ak™a


230 
	$¥›îty_«me_to_˘y≥
(
OnigEncodög
 
íc
, 
UCh¨
* 
p
, UCh¨* 
íd
)

232 
Pr›îtyNameCty≥
* 
pc
;

233 
Àn
 = 
íd
 - 
p
;

234 
q
[32];

236 i‡(
Àn
 < (
q
) - 1) {

237 
	`xmem˝y
(
q
, 
p
, (
size_t
 )
Àn
);

238 
q
[
Àn
] = '\0';

239 
pc
 = 
	`euc_jp_lookup_¥›îty_«me
(
q
, 
Àn
);

240 i‡(
pc
 != 0)

241  
pc
->
˘y≥
;

244  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

245 
	}
}

248 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

250 i‡(
˘y≥
 <
ONIGENC_MAX_STD_CTYPE
) {

251 i‡(
code
 < 128)

252  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

254 i‡(
	`CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
)) {

255  (
	`code_to_mb˛í
(
code
Ë> 1 ? 
TRUE
 : 
FALSE
);

260 
˘y≥
 -(
ONIGENC_MAX_STD_CTYPE
 + 1);

261 i‡(
˘y≥
 >()((
Pr›îtyLi°
)/(PropertyList[0])))

262  
ONIGERR_TYPE_BUG
;

264  
	`⁄ig_is_ö_code_ønge
((
UCh¨
* )
Pr›îtyLi°
[
˘y≥
], 
code
);

267  
FALSE
;

268 
	}
}

271 
	$gë_˘y≥_code_ønge
(
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
* 
sb_out
,

272 c⁄° 
OnigCodePoöt
* 
ønges
[])

274 i‡(
˘y≥
 <
ONIGENC_MAX_STD_CTYPE
) {

275  
ONIG_NO_SUPPORT_CONFIG
;

278 *
sb_out
 = 0x80;

280 
˘y≥
 -(
ONIGENC_MAX_STD_CTYPE
 + 1);

281 i‡(
˘y≥
 >(
OnigCty≥
 )(
Pr›îtyLi°
)/(PropertyList[0]))

282  
ONIGERR_TYPE_BUG
;

284 *
ønges
 = 
Pr›îtyLi°
[
˘y≥
];

287 
	}
}

290 
OnigEncodögTy≥
 
	gOnigEncodögEUC_JP
 = {

291 
mbc_íc_Àn
,

295 
⁄igíc_is_mbc_√wlöe_0x0a
,

296 
mbc_to_code
,

297 
code_to_mb˛í
,

298 
code_to_mbc
,

299 
mbc_ˇ£_fﬁd
,

300 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

301 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

302 
¥›îty_«me_to_˘y≥
,

303 
is_code_˘y≥
,

304 
gë_˘y≥_code_ønge
,

305 
À·_adju°_ch¨_hód
,

306 
is_Ælowed_ªvî£_m©ch
,

307 
NULL
,

308 
NULL
,

309 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/euc_jp_prop.c

34 
	~<°rög.h
>

35 
	~"ªgíc.h
"

37 
	#TOTAL_KEYWORDS
 16

	)

38 
	#MIN_WORD_LENGTH
 4

	)

39 
	#MAX_WORD_LENGTH
 8

	)

40 
	#MIN_HASH_VALUE
 4

	)

41 
	#MAX_HASH_VALUE
 55

	)

44 #ifde‡
__GNUC__


45 
__ölöe


47 #ifde‡
__˝lu•lus


48 
ölöe


52 
	$hash
 (c⁄° *
°r
, 
Àn
)

54 
asso_vÆues
[] =

83  
Àn
 + 
asso_vÆues
[()
°r
[2]] +ásso_values[()str[0]];

84 
	}
}

86 #ifde‡
__GNUC__


87 
	g__ölöe


88 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


89 
__©åibuã__
 ((
__gnu_ölöe__
))

92 
Pr›îtyNameCty≥
 *

93 
	$euc_jp_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

95 
Pr›îtyNameCty≥
 
w‹dli°
[] =

145 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

147 
key
 = 
	`hash
 (
°r
, 
Àn
);

149 i‡(
key
 <
MAX_HASH_VALUE
 && key >= 0)

151 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

153 i‡(*
°r
 =*
s
 && !
	`°rcmp
 (str + 1, s + 1))

154  &
w‹dli°
[
key
];

158 
	}
}

	@modules/oniguruma/src/euc_kr.c

30 
	~"ªgíc.h
"

32 c⁄° 
	gEncLí_EUCKR
[] = {

52 
	$euckr_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

54  
EncLí_EUCKR
[*
p
];

55 
	}
}

58 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

60 
p
 < 
íd
) {

61 i‡(*
p
 < 0x80) {

62 
p
++;

64 i‡(*
p
 < 0xa1) {

65  
FALSE
;

67 i‡(*
p
 < 0xff) {

68 
p
++;

69 i‡(
p
 >
íd
Ë 
FALSE
;

70 i‡(*
p
 < 0xa1 || *p == 0xff)

71  
FALSE
;

72 
p
++;

75  
FALSE
;

78  
TRUE
;

79 
	}
}

81 
OnigCodePoöt


82 
	$euckr_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

84  
	`⁄igíc_mbn_mbc_to_code
(
ONIG_ENCODING_EUC_KR
, 
p
, 
íd
);

85 
	}
}

88 
	$euckr_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

90  
	`⁄igíc_mb2_code_to_mbc
(
ONIG_ENCODING_EUC_KR
, 
code
, 
buf
);

91 
	}
}

94 
	$euckr_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
,

95 
UCh¨
* 
lowî
)

97  
	`⁄igíc_mbn_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_EUC_KR
, 
Êag
,

98 
µ
, 
íd
, 
lowî
);

99 
	}
}

103 
	$euckr_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

104 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

106  
	`⁄igíc_mbn_is_mbc_ambiguous
(
ONIG_ENCODING_EUC_KR
, 
Êag
, 
µ
, 
íd
);

107 
	}
}

111 
	$euckr_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

113  
	`⁄igíc_mb2_is_code_˘y≥
(
ONIG_ENCODING_EUC_KR
, 
code
, 
˘y≥
);

114 
	}
}

116 
	#euckr_i¶ód
(
c
Ë((cË< 0xa1 || (cË=0xff)

	)

118 
UCh¨
*

119 
	$euckr_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

124 c⁄° 
UCh¨
 *
p
;

125 
Àn
;

127 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

128 
p
 = 
s
;

130 !
	`euckr_i¶ód
(*
p
Ë&&Ö > 
°¨t
)Ö--;

131 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_EUC_KR
, 
p
);

132 i‡(
p
 + 
Àn
 > 
s
Ë (
UCh¨
* )p;

133 
p
 +
Àn
;

134  (
UCh¨
* )(
p
 + ((
s
 -Ö) & ~1));

135 
	}
}

138 
	$euckr_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

140 c⁄° 
UCh¨
 
c
 = *
s
;

141 i‡(
c
 <0x7eË 
TRUE
;

142  
FALSE
;

143 
	}
}

145 
OnigEncodögTy≥
 
	gOnigEncodögEUC_KR
 = {

146 
euckr_mbc_íc_Àn
,

150 
⁄igíc_is_mbc_√wlöe_0x0a
,

151 
euckr_mbc_to_code
,

152 
⁄igíc_mb2_code_to_mb˛í
,

153 
euckr_code_to_mbc
,

154 
euckr_mbc_ˇ£_fﬁd
,

155 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

156 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

157 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

158 
euckr_is_code_˘y≥
,

159 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

160 
euckr_À·_adju°_ch¨_hód
,

161 
euckr_is_Ælowed_ªvî£_m©ch
,

162 
NULL
,

163 
NULL
,

164 
is_vÆid_mbc_°rög


168 
OnigEncodögTy≥
 
	gOnigEncodögEUC_CN
 = {

169 
euckr_mbc_íc_Àn
,

173 
⁄igíc_is_mbc_√wlöe_0x0a
,

174 
euckr_mbc_to_code
,

175 
⁄igíc_mb2_code_to_mb˛í
,

176 
euckr_code_to_mbc
,

177 
euckr_mbc_ˇ£_fﬁd
,

178 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

179 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

180 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

181 
euckr_is_code_˘y≥
,

182 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

183 
euckr_À·_adju°_ch¨_hód
,

184 
euckr_is_Ælowed_ªvî£_m©ch
,

185 
NULL
,

186 
NULL
,

187 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/euc_tw.c

30 
	~"ªgíc.h
"

32 c⁄° 
	gEncLí_EUCTW
[] = {

52 
	$eu˘w_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

54  
EncLí_EUCTW
[*
p
];

55 
	}
}

58 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

60 
p
 < 
íd
) {

61 i‡(*
p
 < 0x80) {

62 
p
++;

64 i‡(*
p
 < 0xa1) {

65 i‡(*
p
 == 0x8e) {

66 
p
++;

67 i‡(
p
 >
íd
Ë 
FALSE
;

68 i‡(*
p
 < 0xa1 || *∞> 0xb0Ë 
FALSE
;

69 
p
++;

70 i‡(
p
 >
íd
Ë 
FALSE
;

71 i‡(*
p
 < 0xa1 || *p == 0xff)

72  
FALSE
;

73 
p
++;

74 i‡(
p
 >
íd
Ë 
FALSE
;

75 i‡(*
p
 < 0xa1 || *p == 0xff)

76  
FALSE
;

77 
p
++;

80  
FALSE
;

82 i‡(*
p
 < 0xff) {

83 
p
++;

84 i‡(
p
 >
íd
Ë 
FALSE
;

85 i‡(*
p
 < 0xa1 || *p == 0xff)

86  
FALSE
;

87 
p
++;

90  
FALSE
;

93  
TRUE
;

94 
	}
}

96 
OnigCodePoöt


97 
	$eu˘w_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

99  
	`⁄igíc_mbn_mbc_to_code
(
ONIG_ENCODING_EUC_TW
, 
p
, 
íd
);

100 
	}
}

103 
	$eu˘w_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

105  
	`⁄igíc_mb4_code_to_mbc
(
ONIG_ENCODING_EUC_TW
, 
code
, 
buf
);

106 
	}
}

109 
	$eu˘w_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
,

110 
UCh¨
* 
lowî
)

112  
	`⁄igíc_mbn_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_EUC_TW
, 
Êag
,

113 
µ
, 
íd
, 
lowî
);

114 
	}
}

117 
	$eu˘w_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

119  
	`⁄igíc_mb4_is_code_˘y≥
(
ONIG_ENCODING_EUC_TW
, 
code
, 
˘y≥
);

120 
	}
}

122 
	#eu˘w_i¶ód
(
c
Ë((
UCh¨
 )((cË- 0xa1Ë> 0x„ - 0xa1)

	)

124 
UCh¨
*

125 
	$eu˘w_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

130 c⁄° 
UCh¨
 *
p
;

131 
Àn
;

133 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

134 
p
 = 
s
;

136 !
	`eu˘w_i¶ód
(*
p
Ë&&Ö > 
°¨t
)Ö--;

137 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_EUC_TW
, 
p
);

138 i‡(
p
 + 
Àn
 > 
s
Ë (
UCh¨
* )p;

139 
p
 +
Àn
;

140  (
UCh¨
* )(
p
 + ((
s
 -Ö) & ~1));

141 
	}
}

144 
	$eu˘w_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

146 c⁄° 
UCh¨
 
c
 = *
s
;

147 i‡(
c
 <0x7eË 
TRUE
;

148  
FALSE
;

149 
	}
}

151 
OnigEncodögTy≥
 
	gOnigEncodögEUC_TW
 = {

152 
eu˘w_mbc_íc_Àn
,

156 
⁄igíc_is_mbc_√wlöe_0x0a
,

157 
eu˘w_mbc_to_code
,

158 
⁄igíc_mb4_code_to_mb˛í
,

159 
eu˘w_code_to_mbc
,

160 
eu˘w_mbc_ˇ£_fﬁd
,

161 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

162 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

163 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

164 
eu˘w_is_code_˘y≥
,

165 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

166 
eu˘w_À·_adju°_ch¨_hód
,

167 
eu˘w_is_Ælowed_ªvî£_m©ch
,

168 
NULL
,

169 
NULL
,

170 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/gb18030.c

31 
	~"ªgíc.h
"

34 
	#DEBUG_GB18030
(
¨g
)

	)

36 
	#DEBUG_GB18030
(
¨g
Ë
¥ötf
 
	)
arg

40 
	mC1
,

41 
	mC2
,

42 
	mC4
,

43 
	mCM


46 c⁄° 
	gGB18030_MAP
[] = {

47 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

48 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

49 
C1
, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1, C1,

50 
C4
, C4, C4, C4, C4, C4, C4, C4, C4, C4, 
C1
, C1, C1, C1, C1, C1,

51 
C2
, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2,

52 
C2
, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2,

53 
C2
, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2,

54 
C2
, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, C2, 
C1
,

55 
C2
, 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

56 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

57 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

58 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

59 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

60 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

61 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM,

62 
CM
, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, CM, 
C1


66 
	$gb18030_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

68 i‡(
GB18030_MAP
[*
p
] !
CM
)

70 
p
++;

71 i‡(
GB18030_MAP
[*
p
] =
C4
)

73 i‡(
GB18030_MAP
[*
p
] =
C1
)

76 
	}
}

79 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

81 
p
 < 
íd
) {

82 i‡(*
p
 < 0x80) {

83 
p
++;

85 i‡(*
p
 == 0x80 || *p == 0xff) {

86  
FALSE
;

89 
p
++;

90 i‡(
p
 >
íd
Ë 
FALSE
;

91 i‡(*
p
 < 0x40) {

92 i‡(*
p
 < 0x30 || *p > 0x39)

93  
FALSE
;

95 
p
++;

96 i‡(
p
 >
íd
Ë 
FALSE
;

97 i‡(*
p
 < 0x81 || *∞=0xffË 
FALSE
;

99 
p
++;

100 i‡(
p
 >
íd
Ë 
FALSE
;

101 i‡(*
p
 < 0x30 || *p > 0x39)

102  
FALSE
;

104 
p
++;

106 i‡(*
p
 == 0x7f || *p == 0xff) {

107  
FALSE
;

110 
p
++;

115  
TRUE
;

116 
	}
}

118 
OnigCodePoöt


119 
	$gb18030_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

121  
	`⁄igíc_mbn_mbc_to_code
(
ONIG_ENCODING_GB18030
, 
p
, 
íd
);

122 
	}
}

125 
	$gb18030_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

127  
	`⁄igíc_mb4_code_to_mbc
(
ONIG_ENCODING_GB18030
, 
code
, 
buf
);

128 
	}
}

131 
	$gb18030_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
,

132 
UCh¨
* 
lowî
)

134  
	`⁄igíc_mbn_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_GB18030
, 
Êag
,

135 
µ
, 
íd
, 
lowî
);

136 
	}
}

140 
	$gb18030_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

141 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

143  
	`⁄igíc_mbn_is_mbc_ambiguous
(
ONIG_ENCODING_GB18030
, 
Êag
, 
µ
, 
íd
);

144 
	}
}

148 
	$gb18030_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

150  
	`⁄igíc_mb4_is_code_˘y≥
(
ONIG_ENCODING_GB18030
, 
code
, 
˘y≥
);

151 
	}
}

153 
	e°©e
 {

154 
	mS_START
,

155 
	mS_⁄e_C2
,

156 
	mS_⁄e_C4
,

157 
	mS_⁄e_CM
,

159 
	mS_odd_CM_⁄e_CX
,

160 
	mS_eví_CM_⁄e_CX
,

163 
	mS_⁄e_CMC4
,

164 
	mS_odd_CMC4
,

165 
	mS_⁄e_C4_odd_CMC4
,

166 
	mS_eví_CMC4
,

167 
	mS_⁄e_C4_eví_CMC4
,

169 
	mS_odd_CM_odd_CMC4
,

170 
	mS_eví_CM_odd_CMC4
,

172 
	mS_odd_CM_eví_CMC4
,

173 
	mS_eví_CM_eví_CMC4
,

176 
	mS_odd_C4CM
,

177 
	mS_⁄e_CM_odd_C4CM
,

178 
	mS_eví_C4CM
,

179 
	mS_⁄e_CM_eví_C4CM
,

181 
	mS_eví_CM_odd_C4CM
,

182 
	mS_odd_CM_odd_C4CM
,

183 
	mS_eví_CM_eví_C4CM
,

184 
	mS_odd_CM_eví_C4CM
,

187 
UCh¨
*

188 
	$gb18030_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

190 c⁄° 
UCh¨
 *
p
;

191 
°©e
 sèã = 
S_START
;

193 
	`DEBUG_GB18030
(("----------------\n"));

194 
p
 = 
s
;Ö >
°¨t
;Ö--) {

195 
	`DEBUG_GB18030
(("°©ê%d --(%02x)-->\n", 
°©e
, *
p
));

196 
°©e
) {

197 
S_START
:

198 
GB18030_MAP
[*
p
]) {

199 
C1
:

200  (
UCh¨
 *)
s
;

201 
C2
:

202 
°©e
 = 
S_⁄e_C2
;

204 
C4
:

205 
°©e
 = 
S_⁄e_C4
;

207 
CM
:

208 
°©e
 = 
S_⁄e_CM
;

212 
S_⁄e_C2
:

213 
GB18030_MAP
[*
p
]) {

214 
C1
:

215 
C2
:

216 
C4
:

217  (
UCh¨
 *)
s
;

218 
CM
:

219 
°©e
 = 
S_odd_CM_⁄e_CX
;

223 
S_⁄e_C4
:

224 
GB18030_MAP
[*
p
]) {

225 
C1
:

226 
C2
:

227 
C4
:

228  (
UCh¨
 *)
s
;

229 
CM
:

230 
°©e
 = 
S_⁄e_CMC4
;

234 
S_⁄e_CM
:

235 
GB18030_MAP
[*
p
]) {

236 
C1
:

237 
C2
:

238  (
UCh¨
 *)
s
;

239 
C4
:

240 
°©e
 = 
S_odd_C4CM
;

242 
CM
:

243 
°©e
 = 
S_odd_CM_⁄e_CX
;

248 
S_odd_CM_⁄e_CX
:

249 
GB18030_MAP
[*
p
]) {

250 
C1
:

251 
C2
:

252 
C4
:

253  (
UCh¨
 *)(
s
 - 1);

254 
CM
:

255 
°©e
 = 
S_eví_CM_⁄e_CX
;

259 
S_eví_CM_⁄e_CX
:

260 
GB18030_MAP
[*
p
]) {

261 
C1
:

262 
C2
:

263 
C4
:

264  (
UCh¨
 *)
s
;

265 
CM
:

266 
°©e
 = 
S_odd_CM_⁄e_CX
;

271 
S_⁄e_CMC4
:

272 
GB18030_MAP
[*
p
]) {

273 
C1
:

274 
C2
:

275  (
UCh¨
 *)(
s
 - 1);

276 
C4
:

277 
°©e
 = 
S_⁄e_C4_odd_CMC4
;

279 
CM
:

280 
°©e
 = 
S_eví_CM_⁄e_CX
;

284 
S_odd_CMC4
:

285 
GB18030_MAP
[*
p
]) {

286 
C1
:

287 
C2
:

288  (
UCh¨
 *)(
s
 - 1);

289 
C4
:

290 
°©e
 = 
S_⁄e_C4_odd_CMC4
;

292 
CM
:

293 
°©e
 = 
S_odd_CM_odd_CMC4
;

297 
S_⁄e_C4_odd_CMC4
:

298 
GB18030_MAP
[*
p
]) {

299 
C1
:

300 
C2
:

301 
C4
:

302  (
UCh¨
 *)(
s
 - 1);

303 
CM
:

304 
°©e
 = 
S_eví_CMC4
;

308 
S_eví_CMC4
:

309 
GB18030_MAP
[*
p
]) {

310 
C1
:

311 
C2
:

312  (
UCh¨
 *)(
s
 - 3);

313 
C4
:

314 
°©e
 = 
S_⁄e_C4_eví_CMC4
;

316 
CM
:

317 
°©e
 = 
S_odd_CM_eví_CMC4
;

321 
S_⁄e_C4_eví_CMC4
:

322 
GB18030_MAP
[*
p
]) {

323 
C1
:

324 
C2
:

325 
C4
:

326  (
UCh¨
 *)(
s
 - 3);

327 
CM
:

328 
°©e
 = 
S_odd_CMC4
;

333 
S_odd_CM_odd_CMC4
:

334 
GB18030_MAP
[*
p
]) {

335 
C1
:

336 
C2
:

337 
C4
:

338  (
UCh¨
 *)(
s
 - 3);

339 
CM
:

340 
°©e
 = 
S_eví_CM_odd_CMC4
;

344 
S_eví_CM_odd_CMC4
:

345 
GB18030_MAP
[*
p
]) {

346 
C1
:

347 
C2
:

348 
C4
:

349  (
UCh¨
 *)(
s
 - 1);

350 
CM
:

351 
°©e
 = 
S_odd_CM_odd_CMC4
;

356 
S_odd_CM_eví_CMC4
:

357 
GB18030_MAP
[*
p
]) {

358 
C1
:

359 
C2
:

360 
C4
:

361  (
UCh¨
 *)(
s
 - 1);

362 
CM
:

363 
°©e
 = 
S_eví_CM_eví_CMC4
;

367 
S_eví_CM_eví_CMC4
:

368 
GB18030_MAP
[*
p
]) {

369 
C1
:

370 
C2
:

371 
C4
:

372  (
UCh¨
 *)(
s
 - 3);

373 
CM
:

374 
°©e
 = 
S_odd_CM_eví_CMC4
;

379 
S_odd_C4CM
:

380 
GB18030_MAP
[*
p
]) {

381 
C1
:

382 
C2
:

383 
C4
:

384  (
UCh¨
 *)
s
;

385 
CM
:

386 
°©e
 = 
S_⁄e_CM_odd_C4CM
;

390 
S_⁄e_CM_odd_C4CM
:

391 
GB18030_MAP
[*
p
]) {

392 
C1
:

393 
C2
:

394  (
UCh¨
 *)(
s
 - 2);

395 
C4
:

396 
°©e
 = 
S_eví_C4CM
;

398 
CM
:

399 
°©e
 = 
S_eví_CM_odd_C4CM
;

403 
S_eví_C4CM
:

404 
GB18030_MAP
[*
p
]) {

405 
C1
:

406 
C2
:

407 
C4
:

408  (
UCh¨
 *)(
s
 - 2);

409 
CM
:

410 
°©e
 = 
S_⁄e_CM_eví_C4CM
;

414 
S_⁄e_CM_eví_C4CM
:

415 
GB18030_MAP
[*
p
]) {

416 
C1
:

417 
C2
:

418  (
UCh¨
 *)(
s
 - 0);

419 
C4
:

420 
°©e
 = 
S_odd_C4CM
;

422 
CM
:

423 
°©e
 = 
S_eví_CM_eví_C4CM
;

428 
S_eví_CM_odd_C4CM
:

429 
GB18030_MAP
[*
p
]) {

430 
C1
:

431 
C2
:

432 
C4
:

433  (
UCh¨
 *)(
s
 - 0);

434 
CM
:

435 
°©e
 = 
S_odd_CM_odd_C4CM
;

439 
S_odd_CM_odd_C4CM
:

440 
GB18030_MAP
[*
p
]) {

441 
C1
:

442 
C2
:

443 
C4
:

444  (
UCh¨
 *)(
s
 - 2);

445 
CM
:

446 
°©e
 = 
S_eví_CM_odd_C4CM
;

451 
S_eví_CM_eví_C4CM
:

452 
GB18030_MAP
[*
p
]) {

453 
C1
:

454 
C2
:

455 
C4
:

456  (
UCh¨
 *)(
s
 - 2);

457 
CM
:

458 
°©e
 = 
S_odd_CM_eví_C4CM
;

462 
S_odd_CM_eví_C4CM
:

463 
GB18030_MAP
[*
p
]) {

464 
C1
:

465 
C2
:

466 
C4
:

467  (
UCh¨
 *)(
s
 - 0);

468 
CM
:

469 
°©e
 = 
S_eví_CM_eví_C4CM
;

476 
	`DEBUG_GB18030
(("°©ê%d\n", 
°©e
));

477 
°©e
) {

478 
S_START
:  (
UCh¨
 *)(
s
 - 0);

479 
S_⁄e_C2
:  (
UCh¨
 *)(
s
 - 0);

480 
S_⁄e_C4
:  (
UCh¨
 *)(
s
 - 0);

481 
S_⁄e_CM
:  (
UCh¨
 *)(
s
 - 0);

483 
S_odd_CM_⁄e_CX
:  (
UCh¨
 *)(
s
 - 1);

484 
S_eví_CM_⁄e_CX
:  (
UCh¨
 *)(
s
 - 0);

486 
S_⁄e_CMC4
:  (
UCh¨
 *)(
s
 - 1);

487 
S_odd_CMC4
:  (
UCh¨
 *)(
s
 - 1);

488 
S_⁄e_C4_odd_CMC4
:  (
UCh¨
 *)(
s
 - 1);

489 
S_eví_CMC4
:  (
UCh¨
 *)(
s
 - 3);

490 
S_⁄e_C4_eví_CMC4
:  (
UCh¨
 *)(
s
 - 3);

492 
S_odd_CM_odd_CMC4
:  (
UCh¨
 *)(
s
 - 3);

493 
S_eví_CM_odd_CMC4
:  (
UCh¨
 *)(
s
 - 1);

495 
S_odd_CM_eví_CMC4
:  (
UCh¨
 *)(
s
 - 1);

496 
S_eví_CM_eví_CMC4
:  (
UCh¨
 *)(
s
 - 3);

498 
S_odd_C4CM
:  (
UCh¨
 *)(
s
 - 0);

499 
S_⁄e_CM_odd_C4CM
:  (
UCh¨
 *)(
s
 - 2);

500 
S_eví_C4CM
:  (
UCh¨
 *)(
s
 - 2);

501 
S_⁄e_CM_eví_C4CM
:  (
UCh¨
 *)(
s
 - 0);

503 
S_eví_CM_odd_C4CM
:  (
UCh¨
 *)(
s
 - 0);

504 
S_odd_CM_odd_C4CM
:  (
UCh¨
 *)(
s
 - 2);

505 
S_eví_CM_eví_C4CM
:  (
UCh¨
 *)(
s
 - 2);

506 
S_odd_CM_eví_C4CM
:  (
UCh¨
 *)(
s
 - 0);

509  (
UCh¨
* )
s
;

510 
	}
}

513 
	$gb18030_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

515  
GB18030_MAP
[*
s
] =
C1
 ? 
TRUE
 : 
FALSE
;

516 
	}
}

518 
OnigEncodögTy≥
 
	gOnigEncodögGB18030
 = {

519 
gb18030_mbc_íc_Àn
,

523 
⁄igíc_is_mbc_√wlöe_0x0a
,

524 
gb18030_mbc_to_code
,

525 
⁄igíc_mb4_code_to_mb˛í
,

526 
gb18030_code_to_mbc
,

527 
gb18030_mbc_ˇ£_fﬁd
,

528 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

529 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

530 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

531 
gb18030_is_code_˘y≥
,

532 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

533 
gb18030_À·_adju°_ch¨_hód
,

534 
gb18030_is_Ælowed_ªvî£_m©ch
,

535 
NULL
,

536 
NULL
,

537 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_1.c

30 
	~"ªgíc.h
"

32 
	#ENC_IS_ISO_8859_1_CTYPE
(
code
,
˘y≥
) \

33 ((
EncISO_8859_1_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

35 c⁄° 
	gEncISO_8859_1_Cty≥TabÀ
[256] = {

70 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

105 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

106 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

108  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

109 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

110 
Êag
, 
f
, 
¨g
);

111 
	}
}

114 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

115 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
,

116 
OnigCa£FﬁdCodeIãm
 
ôems
[])

118 i‡(0x41 <*
p
 && *p <= 0x5a) {

119 
ôems
[0].
byã_Àn
 = 1;

120 
ôems
[0].
code_Àn
 = 1;

121 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 + 0x20);

122 i‡(*
p
 =0x53 && 
íd
 >Ö + 1

123 && (*(
p
+1) == 0x53 || *(p+1) == 0x73)) {

124 
ôems
[1].
byã_Àn
 = 2;

125 
ôems
[1].
code_Àn
 = 1;

126 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )0xdf;

132 i‡(0x61 <*
p
 && *p <= 0x7a) {

133 
ôems
[0].
byã_Àn
 = 1;

134 
ôems
[0].
code_Àn
 = 1;

135 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 - 0x20);

136 i‡(*
p
 =0x73 && 
íd
 >Ö + 1

137 && (*(
p
+1) == 0x73 || *(p+1) == 0x53)) {

138 
ôems
[1].
byã_Àn
 = 2;

139 
ôems
[1].
code_Àn
 = 1;

140 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )0xdf;

146 i‡(0xc0 <*
p
 && *p <= 0xcf) {

147 
ôems
[0].
byã_Àn
 = 1;

148 
ôems
[0].
code_Àn
 = 1;

149 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 + 0x20);

152 i‡(0xd0 <*
p
 && *p <= 0xdf) {

153 i‡(*
p
 == 0xdf) {

154 
ôems
[0].
byã_Àn
 = 1;

155 
ôems
[0].
code_Àn
 = 2;

156 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )'s';

157 
ôems
[0].
code
[1] = (
OnigCodePoöt
 )'s';

159 
ôems
[1].
byã_Àn
 = 1;

160 
ôems
[1].
code_Àn
 = 2;

161 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )'S';

162 
ôems
[1].
code
[1] = (
OnigCodePoöt
 )'S';

164 
ôems
[2].
byã_Àn
 = 1;

165 
ôems
[2].
code_Àn
 = 2;

166 
ôems
[2].
code
[0] = (
OnigCodePoöt
 )'s';

167 
ôems
[2].
code
[1] = (
OnigCodePoöt
 )'S';

169 
ôems
[3].
byã_Àn
 = 1;

170 
ôems
[3].
code_Àn
 = 2;

171 
ôems
[3].
code
[0] = (
OnigCodePoöt
 )'S';

172 
ôems
[3].
code
[1] = (
OnigCodePoöt
 )'s';

176 i‡(*
p
 != 0xd7) {

177 
ôems
[0].
byã_Àn
 = 1;

178 
ôems
[0].
code_Àn
 = 1;

179 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 + 0x20);

183 i‡(0xe0 <*
p
 && *p <= 0xef) {

184 
ôems
[0].
byã_Àn
 = 1;

185 
ôems
[0].
code_Àn
 = 1;

186 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 - 0x20);

189 i‡(0xf0 <*
p
 && *p <= 0xfe) {

190 i‡(*
p
 != 0xf7) {

191 
ôems
[0].
byã_Àn
 = 1;

192 
ôems
[0].
code_Àn
 = 1;

193 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 - 0x20);

199 
	}
}

202 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
,

203 c⁄° 
UCh¨
* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

205 c⁄° 
UCh¨
* 
p
 = *
µ
;

207 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

208 *
lowî
++ = 's';

209 *
lowî
 = 's';

210 (*
µ
)++;

214 *
lowî
 = 
	`ONIGENC_ISO_8859_1_TO_LOWER_CASE
(*
p
);

215 (*
µ
)++;

217 
	}
}

221 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

222 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

224 
v
;

225 c⁄° 
UCh¨
* 
p
 = *
µ
;

227 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

228 (*
µ
)++;

229  
TRUE
;

232 (*
µ
)++;

233 
v
 = (
EncISO_8859_1_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

234 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

236 i‡(*
p
 >= 0xaa && *p <= 0xba)

237  
FALSE
;

239  
TRUE
;

242  (
v
 !0 ? 
TRUE
 : 
FALSE
);

243 
	}
}

247 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

249 i‡(
code
 < 256)

250  
	`ENC_IS_ISO_8859_1_CTYPE
(
code
, 
˘y≥
);

252  
FALSE
;

253 
	}
}

255 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_1
 = {

256 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

260 
⁄igíc_is_mbc_√wlöe_0x0a
,

261 
⁄igíc_sögÀ_byã_mbc_to_code
,

262 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

263 
⁄igíc_sögÀ_byã_code_to_mbc
,

264 
mbc_ˇ£_fﬁd
,

265 
≠∂y_Æl_ˇ£_fﬁd
,

266 
gë_ˇ£_fﬁd_codes_by_°r
,

267 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

268 
is_code_˘y≥
,

269 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

270 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

271 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

272 
NULL
,

273 
NULL
,

274 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_10.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_10_TO_LOWER_CASE
(
c
Ë
EncISO_8859_10_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_10_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_10_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_10_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_10_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_10_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_10_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

139  
TRUE
;

142  (
v
 !0 ? 
TRUE
 : 
FALSE
);

143 
	}
}

147 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

149 i‡(
code
 < 256)

150  
	`ENC_IS_ISO_8859_10_CTYPE
(
code
, 
˘y≥
);

152  
FALSE
;

153 
	}
}

155 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

205 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

206 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

208  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

209 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

210 
Êag
, 
f
, 
¨g
);

211 
	}
}

214 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

215 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

217  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

218 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

219 
Êag
, 
p
, 
íd
, 
ôems
);

220 
	}
}

222 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_10
 = {

223 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

227 
⁄igíc_is_mbc_√wlöe_0x0a
,

228 
⁄igíc_sögÀ_byã_mbc_to_code
,

229 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

230 
⁄igíc_sögÀ_byã_code_to_mbc
,

231 
mbc_ˇ£_fﬁd
,

232 
≠∂y_Æl_ˇ£_fﬁd
,

233 
gë_ˇ£_fﬁd_codes_by_°r
,

234 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

235 
is_code_˘y≥
,

236 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

237 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

238 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

239 
NULL
,

240 
NULL
,

241 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_11.c

30 
	~"ªgíc.h
"

32 
	#ENC_IS_ISO_8859_11_CTYPE
(
code
,
˘y≥
) \

33 ((
EncISO_8859_11_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

35 c⁄° 
	gEncISO_8859_11_Cty≥TabÀ
[256] = {

71 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

73 i‡(
code
 < 256)

74  
	`ENC_IS_ISO_8859_11_CTYPE
(
code
, 
˘y≥
);

76  
FALSE
;

77 
	}
}

79 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_11
 = {

80 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

84 
⁄igíc_is_mbc_√wlöe_0x0a
,

85 
⁄igíc_sögÀ_byã_mbc_to_code
,

86 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

87 
⁄igíc_sögÀ_byã_code_to_mbc
,

88 
⁄igíc_ascii_mbc_ˇ£_fﬁd
,

89 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

90 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

91 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

92 
is_code_˘y≥
,

93 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

94 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

95 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

96 
NULL
,

97 
NULL
,

98 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_13.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_13_TO_LOWER_CASE
(
c
Ë
EncISO_8859_13_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_13_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_13_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_13_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_13_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_13_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_13_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

140 i‡(*
p
 == 0xb5)

141  
FALSE
;

143  
TRUE
;

146  (
v
 !0 ? 
TRUE
 : 
FALSE
);

147 
	}
}

151 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

153 i‡(
code
 < 256)

154  
	`ENC_IS_ISO_8859_13_CTYPE
(
code
, 
˘y≥
);

156  
FALSE
;

157 
	}
}

159 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

194 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

195 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

197  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

198 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

199 
Êag
, 
f
, 
¨g
);

200 
	}
}

203 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

204 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

206  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

207 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

208 
Êag
, 
p
, 
íd
, 
ôems
);

209 
	}
}

211 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_13
 = {

212 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

216 
⁄igíc_is_mbc_√wlöe_0x0a
,

217 
⁄igíc_sögÀ_byã_mbc_to_code
,

218 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

219 
⁄igíc_sögÀ_byã_code_to_mbc
,

220 
mbc_ˇ£_fﬁd
,

221 
≠∂y_Æl_ˇ£_fﬁd
,

222 
gë_ˇ£_fﬁd_codes_by_°r
,

223 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

224 
is_code_˘y≥
,

225 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

226 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

227 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

228 
NULL
,

229 
NULL
,

230 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_14.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_14_TO_LOWER_CASE
(
c
Ë
EncISO_8859_14_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_14_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_14_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_14_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_14_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_14_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

127 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

129 
v
;

130 c⁄° 
UCh¨
* 
p
 = *
µ
;

132 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

133 (*
µ
)++;

134  
TRUE
;

137 (*
µ
)++;

138 
v
 = (
EncISO_8859_14_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

139 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

140  
TRUE
;

143  (
v
 !0 ? 
TRUE
 : 
FALSE
);

144 
	}
}

148 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

150 i‡(
code
 < 256)

151  
	`ENC_IS_ISO_8859_14_CTYPE
(
code
, 
˘y≥
);

153  
FALSE
;

154 
	}
}

156 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

207 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

208 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

210  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

211 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

212 
Êag
, 
f
, 
¨g
);

213 
	}
}

216 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

217 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

219  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

220 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

221 
Êag
, 
p
, 
íd
, 
ôems
);

222 
	}
}

224 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_14
 = {

225 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

229 
⁄igíc_is_mbc_√wlöe_0x0a
,

230 
⁄igíc_sögÀ_byã_mbc_to_code
,

231 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

232 
⁄igíc_sögÀ_byã_code_to_mbc
,

233 
mbc_ˇ£_fﬁd
,

234 
≠∂y_Æl_ˇ£_fﬁd
,

235 
gë_ˇ£_fﬁd_codes_by_°r
,

236 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

237 
is_code_˘y≥
,

238 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

239 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

240 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

241 
NULL
,

242 
NULL
,

243 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_15.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_15_TO_LOWER_CASE
(
c
Ë
EncISO_8859_15_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_15_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_15_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_15_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_15_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_15_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

127 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

129 
v
;

130 c⁄° 
UCh¨
* 
p
 = *
µ
;

132 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

133 (*
µ
)++;

134  
TRUE
;

137 (*
µ
)++;

138 
v
 = (
EncISO_8859_15_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

139 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

141 i‡(*
p
 == 0xaa || *p == 0xb5 || *p == 0xba)

142  
FALSE
;

144  
TRUE
;

147  (
v
 !0 ? 
TRUE
 : 
FALSE
);

148 
	}
}

152 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

154 i‡(
code
 < 256)

155  
	`ENC_IS_ISO_8859_15_CTYPE
(
code
, 
˘y≥
);

157  
FALSE
;

158 
	}
}

160 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

201 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

202 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

204  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

205 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

206 
Êag
, 
f
, 
¨g
);

207 
	}
}

210 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

211 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

213  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

214 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

215 
Êag
, 
p
, 
íd
, 
ôems
);

216 
	}
}

218 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_15
 = {

219 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

223 
⁄igíc_is_mbc_√wlöe_0x0a
,

224 
⁄igíc_sögÀ_byã_mbc_to_code
,

225 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

226 
⁄igíc_sögÀ_byã_code_to_mbc
,

227 
mbc_ˇ£_fﬁd
,

228 
≠∂y_Æl_ˇ£_fﬁd
,

229 
gë_ˇ£_fﬁd_codes_by_°r
,

230 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

231 
is_code_˘y≥
,

232 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

233 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

234 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

235 
NULL
,

236 
NULL
,

237 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_16.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_16_TO_LOWER_CASE
(
c
Ë
EncISO_8859_16_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_16_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_16_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_16_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_16_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_16_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_16_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

139  
TRUE
;

142  (
v
 !0 ? 
TRUE
 : 
FALSE
);

143 
	}
}

147 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

149 i‡(
code
 < 256)

150  
	`ENC_IS_ISO_8859_16_CTYPE
(
code
, 
˘y≥
);

152  
FALSE
;

153 
	}
}

155 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

203 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

204 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

206  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

207 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

208 
Êag
, 
f
, 
¨g
);

209 
	}
}

212 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

213 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

215  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

216 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

217 
Êag
, 
p
, 
íd
, 
ôems
);

218 
	}
}

220 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_16
 = {

221 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

225 
⁄igíc_is_mbc_√wlöe_0x0a
,

226 
⁄igíc_sögÀ_byã_mbc_to_code
,

227 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

228 
⁄igíc_sögÀ_byã_code_to_mbc
,

229 
mbc_ˇ£_fﬁd
,

230 
≠∂y_Æl_ˇ£_fﬁd
,

231 
gë_ˇ£_fﬁd_codes_by_°r
,

232 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

233 
is_code_˘y≥
,

234 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

235 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

236 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

237 
NULL
,

238 
NULL
,

239 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_2.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_2_TO_LOWER_CASE
(
c
Ë
EncISO_8859_2_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_2_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_2_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_2_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_2_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_2_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_2_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

139  
TRUE
;

142  (
v
 !0 ? 
TRUE
 : 
FALSE
);

143 
	}
}

146 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

192 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

193 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

195  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

196 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

197 
Êag
, 
f
, 
¨g
);

198 
	}
}

201 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

202 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

204  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

205 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

206 
Êag
, 
p
, 
íd
, 
ôems
);

207 
	}
}

210 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

212 i‡(
code
 < 256)

213  
	`ENC_IS_ISO_8859_2_CTYPE
(
code
, 
˘y≥
);

215  
FALSE
;

216 
	}
}

218 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_2
 = {

219 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

223 
⁄igíc_is_mbc_√wlöe_0x0a
,

224 
⁄igíc_sögÀ_byã_mbc_to_code
,

225 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

226 
⁄igíc_sögÀ_byã_code_to_mbc
,

227 
mbc_ˇ£_fﬁd
,

228 
≠∂y_Æl_ˇ£_fﬁd
,

229 
gë_ˇ£_fﬁd_codes_by_°r
,

230 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

231 
is_code_˘y≥
,

232 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

233 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

234 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

235 
NULL
,

236 
NULL
,

237 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_3.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_3_TO_LOWER_CASE
(
c
Ë
EncISO_8859_3_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_3_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_3_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_3_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_3_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
,

108 c⁄° 
UCh¨
* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_3_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_3_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

140 i‡(*
p
 == 0xb5)

141  
FALSE
;

143  
TRUE
;

146  (
v
 !0 ? 
TRUE
 : 
FALSE
);

147 
	}
}

151 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

153 i‡(
code
 < 256)

154  
	`ENC_IS_ISO_8859_3_CTYPE
(
code
, 
˘y≥
);

156  
FALSE
;

157 
	}
}

159 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

201 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

202 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

204  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

205 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

206 
Êag
, 
f
, 
¨g
);

207 
	}
}

210 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

211 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

213  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

214 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

215 
Êag
, 
p
, 
íd
, 
ôems
);

216 
	}
}

218 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_3
 = {

219 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

223 
⁄igíc_is_mbc_√wlöe_0x0a
,

224 
⁄igíc_sögÀ_byã_mbc_to_code
,

225 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

226 
⁄igíc_sögÀ_byã_code_to_mbc
,

227 
mbc_ˇ£_fﬁd
,

228 
≠∂y_Æl_ˇ£_fﬁd
,

229 
gë_ˇ£_fﬁd_codes_by_°r
,

230 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

231 
is_code_˘y≥
,

232 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

233 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

234 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

235 
NULL
,

236 
NULL
,

237 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_4.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_4_TO_LOWER_CASE
(
c
Ë
EncISO_8859_4_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_4_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_4_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_4_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_4_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_4_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_4_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

139 i‡(*
p
 == 0xa2)

140  
FALSE
;

142  
TRUE
;

145  (
v
 !0 ? 
TRUE
 : 
FALSE
);

146 
	}
}

150 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

152 i‡(
code
 < 256)

153  
	`ENC_IS_ISO_8859_4_CTYPE
(
code
, 
˘y≥
);

155  
FALSE
;

156 
	}
}

158 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

203 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

204 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

206  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

207 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

208 
Êag
, 
f
, 
¨g
);

209 
	}
}

212 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

213 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

215  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

216 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

217 
Êag
, 
p
, 
íd
, 
ôems
);

218 
	}
}

220 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_4
 = {

221 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

225 
⁄igíc_is_mbc_√wlöe_0x0a
,

226 
⁄igíc_sögÀ_byã_mbc_to_code
,

227 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

228 
⁄igíc_sögÀ_byã_code_to_mbc
,

229 
mbc_ˇ£_fﬁd
,

230 
≠∂y_Æl_ˇ£_fﬁd
,

231 
gë_ˇ£_fﬁd_codes_by_°r
,

232 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

233 
is_code_˘y≥
,

234 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

235 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

236 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

237 
NULL
,

238 
NULL
,

239 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_5.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_5_TO_LOWER_CASE
(
c
Ë
EncISO_8859_5_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_5_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_5_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_5_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_5_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 *
lowî
 = 
	`ENC_ISO_8859_5_TO_LOWER_CASE
(*
p
);

113 (*
µ
)++;

115 
	}
}

119 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

121 
v
;

122 c⁄° 
UCh¨
* 
p
 = *
µ
;

124 (*
µ
)++;

125 
v
 = (
EncISO_8859_5_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

126  (
v
 !0 ? 
TRUE
 : 
FALSE
);

127 
	}
}

131 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

133 i‡(
code
 < 256)

134  
	`ENC_IS_ISO_8859_5_CTYPE
(
code
, 
˘y≥
);

136  
FALSE
;

137 
	}
}

139 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

191 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

192 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

194  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

195 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

196 
Êag
, 
f
, 
¨g
);

197 
	}
}

200 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

201 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
,

202 
OnigCa£FﬁdCodeIãm
 
ôems
[])

204  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

205 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

206 
Êag
, 
p
, 
íd
, 
ôems
);

207 
	}
}

209 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_5
 = {

210 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

214 
⁄igíc_is_mbc_√wlöe_0x0a
,

215 
⁄igíc_sögÀ_byã_mbc_to_code
,

216 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

217 
⁄igíc_sögÀ_byã_code_to_mbc
,

218 
mbc_ˇ£_fﬁd
,

219 
≠∂y_Æl_ˇ£_fﬁd
,

220 
gë_ˇ£_fﬁd_codes_by_°r
,

221 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

222 
is_code_˘y≥
,

223 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

224 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

225 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

226 
NULL
,

227 
NULL
,

228 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_6.c

30 
	~"ªgíc.h
"

32 
	#ENC_IS_ISO_8859_6_CTYPE
(
code
,
˘y≥
) \

33 ((
EncISO_8859_6_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

35 c⁄° 
	gEncISO_8859_6_Cty≥TabÀ
[256] = {

71 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

73 i‡(
code
 < 256)

74  
	`ENC_IS_ISO_8859_6_CTYPE
(
code
, 
˘y≥
);

76  
FALSE
;

77 
	}
}

79 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_6
 = {

80 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

84 
⁄igíc_is_mbc_√wlöe_0x0a
,

85 
⁄igíc_sögÀ_byã_mbc_to_code
,

86 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

87 
⁄igíc_sögÀ_byã_code_to_mbc
,

88 
⁄igíc_ascii_mbc_ˇ£_fﬁd
,

89 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

90 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

91 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

92 
is_code_˘y≥
,

93 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

94 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

95 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

96 
NULL
,

97 
NULL
,

98 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_7.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_7_TO_LOWER_CASE
(
c
Ë
EncISO_8859_7_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_7_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_7_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_7_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_7_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 *
lowî
 = 
	`ENC_ISO_8859_7_TO_LOWER_CASE
(*
p
);

113 (*
µ
)++;

115 
	}
}

119 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

120 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

122 
v
;

123 c⁄° 
UCh¨
* 
p
 = *
µ
;

125 (*
µ
)++;

126 
v
 = (
EncISO_8859_7_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

127 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

128 i‡(*
p
 == 0xc0 || *p == 0xe0)

129  
FALSE
;

131  
TRUE
;

134  (
v
 !0 ? 
TRUE
 : 
FALSE
);

135 
	}
}

139 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

141 i‡(
code
 < 256)

142  
	`ENC_IS_ISO_8859_7_CTYPE
(
code
, 
˘y≥
);

144  
FALSE
;

145 
	}
}

147 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

187 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

188 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

190  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

191 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

192 
Êag
, 
f
, 
¨g
);

193 
	}
}

196 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

197 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

199  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

200 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

201 
Êag
, 
p
, 
íd
, 
ôems
);

202 
	}
}

205 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_7
 = {

206 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

210 
⁄igíc_is_mbc_√wlöe_0x0a
,

211 
⁄igíc_sögÀ_byã_mbc_to_code
,

212 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

213 
⁄igíc_sögÀ_byã_code_to_mbc
,

214 
mbc_ˇ£_fﬁd
,

215 
≠∂y_Æl_ˇ£_fﬁd
,

216 
gë_ˇ£_fﬁd_codes_by_°r
,

217 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

218 
is_code_˘y≥
,

219 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

220 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

221 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

222 
NULL
,

223 
NULL
,

224 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_8.c

30 
	~"ªgíc.h
"

32 
	#ENC_IS_ISO_8859_8_CTYPE
(
code
,
˘y≥
) \

33 ((
EncISO_8859_8_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

35 c⁄° 
	gEncISO_8859_8_Cty≥TabÀ
[256] = {

71 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

73 i‡(
code
 < 256)

74  
	`ENC_IS_ISO_8859_8_CTYPE
(
code
, 
˘y≥
);

76  
FALSE
;

77 
	}
}

79 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_8
 = {

80 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

84 
⁄igíc_is_mbc_√wlöe_0x0a
,

85 
⁄igíc_sögÀ_byã_mbc_to_code
,

86 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

87 
⁄igíc_sögÀ_byã_code_to_mbc
,

88 
⁄igíc_ascii_mbc_ˇ£_fﬁd
,

89 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

90 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

91 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

92 
is_code_˘y≥
,

93 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

94 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

95 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

96 
NULL
,

97 
NULL
,

98 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/iso8859_9.c

30 
	~"ªgíc.h
"

32 
	#ENC_ISO_8859_9_TO_LOWER_CASE
(
c
Ë
EncISO_8859_9_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_ISO_8859_9_CTYPE
(
code
,
˘y≥
) \

34 ((
EncISO_8859_9_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncISO_8859_9_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncISO_8859_9_Cty≥TabÀ
[256] = {

107 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

113 *
lowî
++ = 's';

114 *
lowî
 = 's';

115 (*
µ
)++;

119 *
lowî
 = 
	`ENC_ISO_8859_9_TO_LOWER_CASE
(*
p
);

120 (*
µ
)++;

122 
	}
}

126 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

128 
v
;

129 c⁄° 
UCh¨
* 
p
 = *
µ
;

131 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

132 (*
µ
)++;

133  
TRUE
;

136 (*
µ
)++;

137 
v
 = (
EncISO_8859_9_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

138 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

140 i‡(*
p
 >= 0xaa && *p <= 0xba)

141  
FALSE
;

143  
TRUE
;

146  (
v
 !0 ? 
TRUE
 : 
FALSE
);

147 
	}
}

151 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

153 i‡(
code
 < 256)

154  
	`ENC_IS_ISO_8859_9_CTYPE
(
code
, 
˘y≥
);

156  
FALSE
;

157 
	}
}

159 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

194 
	$≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

195 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

197  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

198 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

199 
Êag
, 
f
, 
¨g
);

200 
	}
}

203 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

204 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

206  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

207 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 1,

208 
Êag
, 
p
, 
íd
, 
ôems
);

209 
	}
}

211 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_9
 = {

212 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

216 
⁄igíc_is_mbc_√wlöe_0x0a
,

217 
⁄igíc_sögÀ_byã_mbc_to_code
,

218 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

219 
⁄igíc_sögÀ_byã_code_to_mbc
,

220 
mbc_ˇ£_fﬁd
,

221 
≠∂y_Æl_ˇ£_fﬁd
,

222 
gë_ˇ£_fﬁd_codes_by_°r
,

223 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

224 
is_code_˘y≥
,

225 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

226 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

227 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

228 
NULL
,

229 
NULL
,

230 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/koi8.c

30 
	~"ªgíc.h
"

32 
	#ENC_KOI8_TO_LOWER_CASE
(
c
Ë
EncKOI8_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_KOI8_CTYPE
(
code
,
˘y≥
) \

34 ((
EncKOI8_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncKOI8_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncKOI8_Cty≥TabÀ
[256] = {

108 
	$koi8_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

109 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

111 c⁄° 
UCh¨
* 
p
 = *
µ
;

113 *
lowî
 = 
	`ENC_KOI8_TO_LOWER_CASE
(*
p
);

114 (*
µ
)++;

116 
	}
}

120 
	$koi8_is_mbc_ambiguous
(
OnigAmbigTy≥
 
Êag
, c⁄° 
OnigUCh¨
** 
µ
, c⁄° OnigUCh¨* 
íd
)

122 c⁄° 
OnigUCh¨
* 
p
 = *
µ
;

124 (*
µ
)++;

125 i‡(((
Êag
 & 
ONIGENC_CASE_FOLD_ASCII_CASE
) != 0 &&

126 
	`ONIGENC_IS_MBC_ASCII
(
p
)) ||

127 ((
Êag
 & 
ONIGENC_CASE_FOLD_NONASCII_CASE
) != 0 &&

128 !
	`ONIGENC_IS_MBC_ASCII
(
p
))) {

129 
v
 = (
EncKOI8_Cty≥TabÀ
[*
p
] &

130 (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

131  (
v
 !0 ? 
TRUE
 : 
FALSE
);

133  
FALSE
;

134 
	}
}

138 
	$koi8_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

140 i‡(
code
 < 256)

141  
	`ENC_IS_KOI8_CTYPE
(
code
, 
˘y≥
);

143  
FALSE
;

144 
	}
}

146 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

216 
	$koi8_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

217 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

219  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

220 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

221 
Êag
, 
f
, 
¨g
);

222 
	}
}

225 
	$koi8_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

226 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

228  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

229 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

230 
Êag
, 
p
, 
íd
, 
ôems
);

231 
	}
}

233 
OnigEncodögTy≥
 
	gOnigEncodögKOI8
 = {

234 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

238 
⁄igíc_is_mbc_√wlöe_0x0a
,

239 
⁄igíc_sögÀ_byã_mbc_to_code
,

240 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

241 
⁄igíc_sögÀ_byã_code_to_mbc
,

242 
koi8_mbc_ˇ£_fﬁd
,

243 
koi8_≠∂y_Æl_ˇ£_fﬁd
,

244 
koi8_gë_ˇ£_fﬁd_codes_by_°r
,

245 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

246 
koi8_is_code_˘y≥
,

247 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

248 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

249 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

250 
NULL
,

251 
NULL
,

252 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/koi8_r.c

30 
	~"ªgíc.h
"

32 
	#ENC_KOI8_R_TO_LOWER_CASE
(
c
Ë
EncKOI8_R_ToLowîCa£TabÀ
[c]

	)

33 
	#ENC_IS_KOI8_R_CTYPE
(
code
,
˘y≥
) \

34 ((
EncKOI8_R_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

36 c⁄° 
UCh¨
 
	gEncKOI8_R_ToLowîCa£TabÀ
[256] = {

71 c⁄° 
	gEncKOI8_R_Cty≥TabÀ
[256] = {

107 
	$koi8_r_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

108 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

110 c⁄° 
UCh¨
* 
p
 = *
µ
;

112 *
lowî
 = 
	`ENC_KOI8_R_TO_LOWER_CASE
(*
p
);

113 (*
µ
)++;

115 
	}
}

119 
	$koi8_r_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

121 
v
;

122 c⁄° 
UCh¨
* 
p
 = *
µ
;

124 (*
µ
)++;

125 
v
 = (
EncKOI8_R_Cty≥TabÀ
[*
p
] & (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

126  (
v
 !0 ? 
TRUE
 : 
FALSE
);

127 
	}
}

131 
	$koi8_r_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

133 i‡(
code
 < 256)

134  
	`ENC_IS_KOI8_R_CTYPE
(
code
, 
˘y≥
);

136  
FALSE
;

137 
	}
}

139 c⁄° 
OnigPaúCa£FﬁdCodes
 
	gCa£FﬁdM≠
[] = {

178 
	$koi8_r_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

179 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

181  
	`⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(

182 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

183 
Êag
, 
f
, 
¨g
);

184 
	}
}

187 
	$koi8_r_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

188 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

190  
	`⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(

191 (
Ca£FﬁdM≠
)/(
OnigPaúCa£FﬁdCodes
), CaseFoldMap, 0,

192 
Êag
, 
p
, 
íd
, 
ôems
);

193 
	}
}

195 
OnigEncodögTy≥
 
	gOnigEncodögKOI8_R
 = {

196 
⁄igíc_sögÀ_byã_mbc_íc_Àn
,

200 
⁄igíc_is_mbc_√wlöe_0x0a
,

201 
⁄igíc_sögÀ_byã_mbc_to_code
,

202 
⁄igíc_sögÀ_byã_code_to_mb˛í
,

203 
⁄igíc_sögÀ_byã_code_to_mbc
,

204 
koi8_r_mbc_ˇ£_fﬁd
,

205 
koi8_r_≠∂y_Æl_ˇ£_fﬁd
,

206 
koi8_r_gë_ˇ£_fﬁd_codes_by_°r
,

207 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
,

208 
koi8_r_is_code_˘y≥
,

209 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
,

210 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
,

211 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

212 
NULL
,

213 
NULL
,

214 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög


	@modules/oniguruma/src/mktable.c

30 
	~<°dlib.h
>

31 
	~<°dio.h
>

32 
	~<loˇÀ.h
>

34 #i‚de‡
__USE_ISOC99


35 
	#__USE_ISOC99


	)

38 
	~<˘y≥.h
>

40 
	~"ªgíc.h
"

42 
	#ASCII
 0

	)

43 
	#UNICODE_ISO_8859_1
 1

	)

44 
	#ISO_8859_1
 2

	)

45 
	#ISO_8859_2
 3

	)

46 
	#ISO_8859_3
 4

	)

47 
	#ISO_8859_4
 5

	)

48 
	#ISO_8859_5
 6

	)

49 
	#ISO_8859_6
 7

	)

50 
	#ISO_8859_7
 8

	)

51 
	#ISO_8859_8
 9

	)

52 
	#ISO_8859_9
 10

	)

53 
	#ISO_8859_10
 11

	)

54 
	#ISO_8859_11
 12

	)

55 
	#ISO_8859_13
 13

	)

56 
	#ISO_8859_14
 14

	)

57 
	#ISO_8859_15
 15

	)

58 
	#ISO_8859_16
 16

	)

59 
	#KOI8
 17

	)

60 
	#KOI8_R
 18

	)

63 
	mnum
;

64 * 
	m«me
;

65 } 
	tENC_INFO
;

67 
ENC_INFO
 
	gInfo
[] = {

68 { 
ASCII
, "ASCII" },

69 { 
UNICODE_ISO_8859_1
, "UNICODE_ISO_8859_1" },

70 { 
ISO_8859_1
, "ISO_8859_1" },

71 { 
ISO_8859_2
, "ISO_8859_2" },

72 { 
ISO_8859_3
, "ISO_8859_3" },

73 { 
ISO_8859_4
, "ISO_8859_4" },

74 { 
ISO_8859_5
, "ISO_8859_5" },

75 { 
ISO_8859_6
, "ISO_8859_6" },

76 { 
ISO_8859_7
, "ISO_8859_7" },

77 { 
ISO_8859_8
, "ISO_8859_8" },

78 { 
ISO_8859_9
, "ISO_8859_9" },

79 { 
ISO_8859_10
, "ISO_8859_10" },

80 { 
ISO_8859_11
, "ISO_8859_11" },

81 { 
ISO_8859_13
, "ISO_8859_13" },

82 { 
ISO_8859_14
, "ISO_8859_14" },

83 { 
ISO_8859_15
, "ISO_8859_15" },

84 { 
ISO_8859_16
, "ISO_8859_16" },

85 { 
KOI8
, "KOI8" },

86 { 
KOI8_R
, "KOI8_R" }

90 
	$IsAÕha
(
íc
, 
c
)

92 i‡(
íc
 =
ASCII
)

93  
	`ißÕha
(
c
);

95 i‡(
c
 >= 0x41 && c <= 0x5a)  1;

96 i‡(
c
 >= 0x61 && c <= 0x7a)  1;

98 
íc
) {

99 
UNICODE_ISO_8859_1
:

100 
ISO_8859_1
:

101 
ISO_8859_9
:

102 i‡(
c
 == 0xaa)  1;

103 i‡(
c
 == 0xb5)  1;

104 i‡(
c
 == 0xba)  1;

105 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

106 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

107 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

110 
ISO_8859_2
:

111 i‡(
c
 == 0xa1 || c == 0xa3)  1;

112 i‡(
c
 == 0xa5 || c == 0xa6)  1;

113 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

114 i‡(
c
 >= 0xae && c <= 0xaf)  1;

115 i‡(
c
 == 0xb1 || c == 0xb3)  1;

116 i‡(
c
 == 0xb5 || c == 0xb6)  1;

117 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

118 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

119 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

120 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

121 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

124 
ISO_8859_3
:

125 i‡(
c
 == 0xa1)  1;

126 i‡(
c
 == 0xa6)  1;

127 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

128 i‡(
c
 == 0xaf)  1;

129 i‡(
c
 == 0xb1)  1;

130 i‡(
c
 == 0xb5 || c == 0xb6)  1;

131 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

132 i‡(
c
 == 0xbf)  1;

133 i‡(
c
 >= 0xc0 && c <= 0xc2)  1;

134 i‡(
c
 >= 0xc4 && c <= 0xcf)  1;

135 i‡(
c
 >= 0xd1 && c <= 0xd6)  1;

136 i‡(
c
 >= 0xd8 && c <= 0xe2)  1;

137 i‡(
c
 >= 0xe4 && c <= 0xef)  1;

138 i‡(
c
 >= 0xf1 && c <= 0xf6)  1;

139 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

142 
ISO_8859_4
:

143 i‡(
c
 >= 0xa1 && c <= 0xa3)  1;

144 i‡(
c
 == 0xa5 || c == 0xa6)  1;

145 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

146 i‡(
c
 == 0xae)  1;

147 i‡(
c
 == 0xb1 || c == 0xb3)  1;

148 i‡(
c
 == 0xb5 || c == 0xb6)  1;

149 i‡(
c
 >= 0xb9 && c <= 0xbf)  1;

150 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

151 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

152 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

155 
ISO_8859_5
:

156 i‡(
c
 >= 0xa1 && c <= 0xcf && c != 0xad)  1;

157 i‡(
c
 >= 0xd0 && c <= 0xff && c != 0xf0 && c != 0xfd)  1;

160 
ISO_8859_6
:

161 i‡(
c
 >= 0xc1 && c <= 0xda)  1;

162 i‡(
c
 >= 0xe0 && c <= 0xf2)  1;

165 
ISO_8859_7
:

166 i‡(
c
 == 0xb6)  1;

167 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

168 i‡(
c
 == 0xbc)  1;

169 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

170 i‡(
c
 == 0xc0)  1;

171 i‡(
c
 >= 0xc1 && c <= 0xdb && c != 0xd2)  1;

172 i‡(
c
 >= 0xdc && c <= 0xfe)  1;

175 
ISO_8859_8
:

176 i‡(
c
 == 0xb5)  1;

177 i‡(
c
 >= 0xe0 && c <= 0xfa)  1;

180 
ISO_8859_10
:

181 i‡(
c
 >= 0xa1 && c <= 0xa6)  1;

182 i‡(
c
 >= 0xa8 && c <= 0xac)  1;

183 i‡(
c
 == 0xae || c == 0xaf)  1;

184 i‡(
c
 >= 0xb1 && c <= 0xb6)  1;

185 i‡(
c
 >= 0xb8 && c <= 0xbc)  1;

186 i‡(
c
 >= 0xbe && c <= 0xff)  1;

189 
ISO_8859_11
:

190 i‡(
c
 >= 0xa1 && c <= 0xda)  1;

191 i‡(
c
 >= 0xdf && c <= 0xfb)  1;

194 
ISO_8859_13
:

195 i‡(
c
 == 0xa8)  1;

196 i‡(
c
 == 0xaa)  1;

197 i‡(
c
 == 0xaf)  1;

198 i‡(
c
 == 0xb5)  1;

199 i‡(
c
 == 0xb8)  1;

200 i‡(
c
 == 0xba)  1;

201 i‡(
c
 >= 0xbf && c <= 0xd6)  1;

202 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

203 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

206 
ISO_8859_14
:

207 i‡(
c
 == 0xa1 || c == 0xa2)  1;

208 i‡(
c
 == 0xa4 || c == 0xa5)  1;

209 i‡(
c
 == 0xa6 || c == 0xa8)  1;

210 i‡(
c
 >= 0xaa && c <= 0xac)  1;

211 i‡(
c
 >= 0xaf && c <= 0xb5)  1;

212 i‡(
c
 >= 0xb7 && c <= 0xff)  1;

215 
ISO_8859_15
:

216 i‡(
c
 == 0xaa)  1;

217 i‡(
c
 == 0xb5)  1;

218 i‡(
c
 == 0xba)  1;

219 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

220 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

221 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

222 i‡(
c
 == 0xa6)  1;

223 i‡(
c
 == 0xa8)  1;

224 i‡(
c
 == 0xb4)  1;

225 i‡(
c
 == 0xb8)  1;

226 i‡(
c
 == 0xbc)  1;

227 i‡(
c
 == 0xbd)  1;

228 i‡(
c
 == 0xbe)  1;

231 
ISO_8859_16
:

232 i‡(
c
 == 0xa1)  1;

233 i‡(
c
 == 0xa2)  1;

234 i‡(
c
 == 0xa3)  1;

235 i‡(
c
 == 0xa6)  1;

236 i‡(
c
 == 0xa8)  1;

237 i‡(
c
 == 0xaa)  1;

238 i‡(
c
 == 0xac)  1;

239 i‡(
c
 == 0xae)  1;

240 i‡(
c
 == 0xaf)  1;

241 i‡(
c
 == 0xb2)  1;

242 i‡(
c
 == 0xb3)  1;

243 i‡(
c
 == 0xb4)  1;

244 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

245 i‡(
c
 == 0xbc)  1;

246 i‡(
c
 == 0xbd)  1;

247 i‡(
c
 == 0xbe)  1;

248 i‡(
c
 == 0xbf)  1;

249 i‡(
c
 >= 0xc0 && c <= 0xde)  1;

250 i‡(
c
 >= 0xdf && c <= 0xff)  1;

253 
KOI8_R
:

254 i‡(
c
 == 0xa3 || c == 0xb3)  1;

256 
KOI8
:

257 i‡(
c
 >= 0xc0 && c <= 0xff)  1;

261 
	`exô
(-1);

265 
	}
}

267 
	$IsBœnk
(
íc
, 
c
)

269 i‡(
íc
 =
ASCII
)

270  
	`isbœnk
(
c
);

272 i‡(
c
 == 0x09 || c == 0x20)  1;

274 
íc
) {

275 
UNICODE_ISO_8859_1
:

276 
ISO_8859_1
:

277 
ISO_8859_2
:

278 
ISO_8859_3
:

279 
ISO_8859_4
:

280 
ISO_8859_5
:

281 
ISO_8859_6
:

282 
ISO_8859_7
:

283 
ISO_8859_8
:

284 
ISO_8859_9
:

285 
ISO_8859_10
:

286 
ISO_8859_11
:

287 
ISO_8859_13
:

288 
ISO_8859_14
:

289 
ISO_8859_15
:

290 
ISO_8859_16
:

291 
KOI8
:

292 i‡(
c
 == 0xa0)  1;

295 
KOI8_R
:

296 i‡(
c
 == 0x9a)  1;

300 
	`exô
(-1);

304 
	}
}

306 
	$IsC¡æ
(
íc
, 
c
)

308 i‡(
íc
 =
ASCII
)

309  
	`is˙ål
(
c
);

311 i‡(
c
 >= 0x00 && c <= 0x1F)  1;

313 
íc
) {

314 
UNICODE_ISO_8859_1
:

315 i‡(
c
 == 0xad)  1;

317 
ISO_8859_1
:

318 
ISO_8859_2
:

319 
ISO_8859_3
:

320 
ISO_8859_4
:

321 
ISO_8859_5
:

322 
ISO_8859_6
:

323 
ISO_8859_7
:

324 
ISO_8859_8
:

325 
ISO_8859_9
:

326 
ISO_8859_10
:

327 
ISO_8859_11
:

328 
ISO_8859_13
:

329 
ISO_8859_14
:

330 
ISO_8859_15
:

331 
ISO_8859_16
:

332 
KOI8
:

333 i‡(
c
 >= 0x7f && c <= 0x9F)  1;

337 
KOI8_R
:

338 i‡(
c
 == 0x7f)  1;

342 
	`exô
(-1);

346 
	}
}

348 
	$IsDigô
(
íc
 
ARG_UNUSED
, 
c
)

350 i‡(
c
 >= 0x30 && c <= 0x39)  1;

352 
	}
}

354 
	$IsGøph
(
íc
, 
c
)

356 i‡(
íc
 =
ASCII
)

357  
	`isgøph
(
c
);

359 i‡(
c
 >= 0x21 && c <= 0x7e)  1;

361 
íc
) {

362 
UNICODE_ISO_8859_1
:

363 
ISO_8859_1
:

364 
ISO_8859_2
:

365 
ISO_8859_4
:

366 
ISO_8859_5
:

367 
ISO_8859_9
:

368 
ISO_8859_10
:

369 
ISO_8859_13
:

370 
ISO_8859_14
:

371 
ISO_8859_15
:

372 
ISO_8859_16
:

373 i‡(
c
 >= 0xa1 && c <= 0xff)  1;

376 
ISO_8859_3
:

377 i‡(
c
 >= 0xa1) {

378 i‡(
c
 == 0xa5 || c == 0xae || c == 0xbe || c == 0xc3 || c == 0xd0 ||

379 
c
 == 0xe3 || c == 0xf0)

386 
ISO_8859_6
:

387 i‡(
c
 == 0xa4 || c == 0xac || c == 0xad || c == 0xbb || c == 0xbf)

389 i‡(
c
 >= 0xc1 && c <= 0xda)  1;

390 i‡(
c
 >= 0xe0 && c <= 0xf2)  1;

393 
ISO_8859_7
:

394 i‡(
c
 >= 0xa1 && c <= 0xfe &&

395 
c
 != 0xa4 && c != 0xa5 && c != 0xaa &&

396 
c
 != 0xae && c != 0xd2)  1;

399 
ISO_8859_8
:

400 i‡(
c
 >= 0xa2 && c <= 0xfa) {

401 i‡(
c
 >= 0xbf && c <= 0xde)  0;

406 
ISO_8859_11
:

407 i‡(
c
 >= 0xa1 && c <= 0xda)  1;

408 i‡(
c
 >= 0xdf && c <= 0xfb)  1;

411 
KOI8
:

412 i‡(
c
 >= 0xc0 && c <= 0xff)  1;

415 
KOI8_R
:

416 i‡(
c
 >= 0x80 && c <= 0xff && c != 0x9a)  1;

420 
	`exô
(-1);

424 
	}
}

426 
	$IsLowî
(
íc
, 
c
)

428 i‡(
íc
 =
ASCII
)

429  
	`i¶owî
(
c
);

431 i‡(
c
 >= 0x61 && c <= 0x7a)  1;

433 
íc
) {

434 
UNICODE_ISO_8859_1
:

435 
ISO_8859_1
:

436 
ISO_8859_9
:

437 i‡(
c
 == 0xaa)  1;

438 i‡(
c
 == 0xb5)  1;

439 i‡(
c
 == 0xba)  1;

440 i‡(
c
 >= 0xdf && c <= 0xf6)  1;

441 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

444 
ISO_8859_2
:

445 i‡(
c
 == 0xb1 || c == 0xb3)  1;

446 i‡(
c
 == 0xb5 || c == 0xb6)  1;

447 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

448 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

449 i‡(
c
 >= 0xdf && c <= 0xf6)  1;

450 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

453 
ISO_8859_3
:

454 i‡(
c
 == 0xb1)  1;

455 i‡(
c
 == 0xb5 || c == 0xb6)  1;

456 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

457 i‡(
c
 == 0xbf)  1;

458 i‡(
c
 == 0xdf)  1;

459 i‡(
c
 >= 0xe0 && c <= 0xe2)  1;

460 i‡(
c
 >= 0xe4 && c <= 0xef)  1;

461 i‡(
c
 >= 0xf1 && c <= 0xf6)  1;

462 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

465 
ISO_8859_4
:

466 i‡(
c
 == 0xa2)  1;

467 i‡(
c
 == 0xb1 || c == 0xb3)  1;

468 i‡(
c
 == 0xb5 || c == 0xb6)  1;

469 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

470 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

471 i‡(
c
 == 0xdf)  1;

472 i‡(
c
 >= 0xe0 && c <= 0xf6)  1;

473 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

476 
ISO_8859_5
:

477 i‡(
c
 >= 0xd0 && c <= 0xff && c != 0xf0 && c != 0xfd)  1;

480 
ISO_8859_6
:

483 
ISO_8859_7
:

484 i‡(
c
 == 0xc0)  1;

485 i‡(
c
 >= 0xdc && c <= 0xfe)  1;

488 
ISO_8859_8
:

489 i‡(
c
 == 0xb5)  1;

492 
ISO_8859_10
:

493 i‡(
c
 >= 0xb1 && c <= 0xb6)  1;

494 i‡(
c
 >= 0xb8 && c <= 0xbc)  1;

495 i‡(
c
 == 0xbe || c == 0xbf)  1;

496 i‡(
c
 >= 0xdf && c <= 0xff)  1;

499 
ISO_8859_11
:

502 
ISO_8859_13
:

503 i‡(
c
 == 0xb5)  1;

504 i‡(
c
 == 0xb8)  1;

505 i‡(
c
 == 0xba)  1;

506 i‡(
c
 == 0xbf)  1;

507 i‡(
c
 >= 0xdf && c <= 0xf6)  1;

508 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

511 
ISO_8859_14
:

512 i‡(
c
 == 0xa2)  1;

513 i‡(
c
 == 0xa5)  1;

514 i‡(
c
 == 0xab)  1;

515 i‡(
c
 == 0xb1 || c == 0xb3 || c == 0xb5)  1;

516 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

517 i‡(
c
 == 0xbc)  1;

518 i‡(
c
 == 0xbe || c == 0xbf)  1;

519 i‡(
c
 >= 0xdf && c <= 0xff)  1;

522 
ISO_8859_15
:

523 i‡(
c
 == 0xaa)  1;

524 i‡(
c
 == 0xb5)  1;

525 i‡(
c
 == 0xba)  1;

526 i‡(
c
 >= 0xdf && c <= 0xf6)  1;

527 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

528 i‡(
c
 == 0xa8)  1;

529 i‡(
c
 == 0xb8)  1;

530 i‡(
c
 == 0xbd)  1;

533 
ISO_8859_16
:

534 i‡(
c
 == 0xa2)  1;

535 i‡(
c
 == 0xa8)  1;

536 i‡(
c
 == 0xae)  1;

537 i‡(
c
 == 0xb3)  1;

538 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

539 i‡(
c
 == 0xbd)  1;

540 i‡(
c
 == 0xbf)  1;

541 i‡(
c
 >= 0xdf && c <= 0xff)  1;

544 
KOI8_R
:

545 i‡(
c
 == 0xa3)  1;

547 
KOI8
:

548 i‡(
c
 >= 0xc0 && c <= 0xdf)  1;

552 
	`exô
(-1);

556 
	}
}

558 
	$IsPröt
(
íc
, 
c
)

560 i‡(
íc
 =
ASCII
)

561  
	`i•röt
(
c
);

563 i‡(
c
 >= 0x20 && c <= 0x7e)  1;

565 
íc
) {

566 
UNICODE_ISO_8859_1
:

567 i‡(
c
 >= 0x09 && c <= 0x0d)  1;

568 i‡(
c
 == 0x85)  1;

570 
ISO_8859_1
:

571 
ISO_8859_2
:

572 
ISO_8859_4
:

573 
ISO_8859_5
:

574 
ISO_8859_9
:

575 
ISO_8859_10
:

576 
ISO_8859_13
:

577 
ISO_8859_14
:

578 
ISO_8859_15
:

579 
ISO_8859_16
:

580 i‡(
c
 >= 0xa0 && c <= 0xff)  1;

583 
ISO_8859_3
:

584 i‡(
c
 >= 0xa0) {

585 i‡(
c
 == 0xa5 || c == 0xae || c == 0xbe || c == 0xc3 || c == 0xd0 ||

586 
c
 == 0xe3 || c == 0xf0)

593 
ISO_8859_6
:

594 i‡(
c
 == 0xa0)  1;

595 i‡(
c
 == 0xa4 || c == 0xac || c == 0xad || c == 0xbb || c == 0xbf)

597 i‡(
c
 >= 0xc1 && c <= 0xda)  1;

598 i‡(
c
 >= 0xe0 && c <= 0xf2)  1;

601 
ISO_8859_7
:

602 i‡(
c
 >= 0xa0 && c <= 0xfe &&

603 
c
 != 0xa4 && c != 0xa5 && c != 0xaa &&

604 
c
 != 0xae && c != 0xd2)  1;

607 
ISO_8859_8
:

608 i‡(
c
 >= 0xa0 && c <= 0xfa) {

609 i‡(
c
 >= 0xbf && c <= 0xde)  0;

610 i‡(
c
 == 0xa1)  0;

615 
ISO_8859_11
:

616 i‡(
c
 >= 0xa0 && c <= 0xda)  1;

617 i‡(
c
 >= 0xdf && c <= 0xfb)  1;

620 
KOI8
:

621 i‡(
c
 == 0xa0)  1;

622 i‡(
c
 >= 0xc0 && c <= 0xff)  1;

625 
KOI8_R
:

626 i‡(
c
 >= 0x80 && c <= 0xff)  1;

630 
	`exô
(-1);

634 
	}
}

636 
	$IsPun˘
(
íc
, 
c
)

638 i‡(
íc
 =
ASCII
)

639  
	`i•un˘
(
c
);

641 i‡(
íc
 =
UNICODE_ISO_8859_1
) {

642 i‡(
c
 == 0x24 || c == 0x2b || c == 0x5e || c == 0x60 ||

643 
c
 == 0x7c || c == 0x7e)  1;

644 i‡(
c
 >= 0x3c && c <= 0x3e)  1;

647 i‡(
c
 >= 0x21 && c <= 0x2f)  1;

648 i‡(
c
 >= 0x3a && c <= 0x40)  1;

649 i‡(
c
 >= 0x5b && c <= 0x60)  1;

650 i‡(
c
 >= 0x7b && c <= 0x7e)  1;

652 
íc
) {

653 
ISO_8859_1
:

654 
ISO_8859_9
:

655 
ISO_8859_15
:

656 i‡(
c
 == 0xad)  1;

658 
UNICODE_ISO_8859_1
:

659 i‡(
c
 == 0xa1)  1;

660 i‡(
c
 == 0xab)  1;

661 i‡(
c
 == 0xb7)  1;

662 i‡(
c
 == 0xbb)  1;

663 i‡(
c
 == 0xbf)  1;

666 
ISO_8859_2
:

667 
ISO_8859_4
:

668 
ISO_8859_5
:

669 
ISO_8859_14
:

670 i‡(
c
 == 0xad)  1;

673 
ISO_8859_3
:

674 
ISO_8859_10
:

675 i‡(
c
 == 0xad)  1;

676 i‡(
c
 == 0xb7)  1;

677 i‡(
c
 == 0xbd)  1;

680 
ISO_8859_6
:

681 i‡(
c
 == 0xac)  1;

682 i‡(
c
 == 0xad)  1;

683 i‡(
c
 == 0xbb)  1;

684 i‡(
c
 == 0xbf)  1;

687 
ISO_8859_7
:

688 i‡(
c
 == 0xa1 || c == 0xa2)  1;

689 i‡(
c
 == 0xab)  1;

690 i‡(
c
 == 0xaf)  1;

691 i‡(
c
 == 0xad)  1;

692 i‡(
c
 == 0xb7 || c == 0xbb)  1;

695 
ISO_8859_8
:

696 i‡(
c
 == 0xab)  1;

697 i‡(
c
 == 0xad)  1;

698 i‡(
c
 == 0xb7)  1;

699 i‡(
c
 == 0xbb)  1;

700 i‡(
c
 == 0xdf)  1;

703 
ISO_8859_13
:

704 i‡(
c
 == 0xa1 || c == 0xa5)  1;

705 i‡(
c
 == 0xab || c == 0xad)  1;

706 i‡(
c
 == 0xb4 || c == 0xb7)  1;

707 i‡(
c
 == 0xbb)  1;

708 i‡(
c
 == 0xff)  1;

711 
ISO_8859_16
:

712 i‡(
c
 == 0xa5)  1;

713 i‡(
c
 == 0xab)  1;

714 i‡(
c
 == 0xad)  1;

715 i‡(
c
 == 0xb5)  1;

716 i‡(
c
 == 0xb7)  1;

717 i‡(
c
 == 0xbb)  1;

720 
KOI8_R
:

721 i‡(
c
 == 0x9e)  1;

724 
ISO_8859_11
:

725 
KOI8
:

729 
	`exô
(-1);

733 
	}
}

735 
	$IsS∑˚
(
íc
, 
c
)

737 i‡(
íc
 =
ASCII
)

738  
	`is•a˚
(
c
);

740 i‡(
c
 >= 0x09 && c <= 0x0d)  1;

741 i‡(
c
 == 0x20)  1;

743 
íc
) {

744 
UNICODE_ISO_8859_1
:

745 i‡(
c
 == 0x85)  1;

747 
ISO_8859_1
:

748 
ISO_8859_2
:

749 
ISO_8859_3
:

750 
ISO_8859_4
:

751 
ISO_8859_5
:

752 
ISO_8859_6
:

753 
ISO_8859_7
:

754 
ISO_8859_8
:

755 
ISO_8859_9
:

756 
ISO_8859_10
:

757 
ISO_8859_11
:

758 
ISO_8859_13
:

759 
ISO_8859_14
:

760 
ISO_8859_15
:

761 
ISO_8859_16
:

762 
KOI8
:

763 i‡(
c
 == 0xa0)  1;

766 
KOI8_R
:

767 i‡(
c
 == 0x9a)  1;

771 
	`exô
(-1);

775 
	}
}

777 
	$IsUµî
(
íc
, 
c
)

779 i‡(
íc
 =
ASCII
)

780  
	`isuµî
(
c
);

782 i‡(
c
 >= 0x41 && c <= 0x5a)  1;

784 
íc
) {

785 
UNICODE_ISO_8859_1
:

786 
ISO_8859_1
:

787 
ISO_8859_9
:

788 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

789 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

792 
ISO_8859_2
:

793 i‡(
c
 == 0xa1 || c == 0xa3)  1;

794 i‡(
c
 == 0xa5 || c == 0xa6)  1;

795 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

796 i‡(
c
 >= 0xae && c <= 0xaf)  1;

797 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

798 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

801 
ISO_8859_3
:

802 i‡(
c
 == 0xa1)  1;

803 i‡(
c
 == 0xa6)  1;

804 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

805 i‡(
c
 == 0xaf)  1;

806 i‡(
c
 >= 0xc0 && c <= 0xc2)  1;

807 i‡(
c
 >= 0xc4 && c <= 0xcf)  1;

808 i‡(
c
 >= 0xd1 && c <= 0xd6)  1;

809 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

812 
ISO_8859_4
:

813 i‡(
c
 == 0xa1 || c == 0xa3)  1;

814 i‡(
c
 == 0xa5 || c == 0xa6)  1;

815 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

816 i‡(
c
 == 0xae)  1;

817 i‡(
c
 == 0xbd)  1;

818 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

819 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

822 
ISO_8859_5
:

823 i‡(
c
 >= 0xa1 && c <= 0xcf && c != 0xad)  1;

826 
ISO_8859_6
:

829 
ISO_8859_7
:

830 i‡(
c
 == 0xb6)  1;

831 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

832 i‡(
c
 == 0xbc)  1;

833 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

834 i‡(
c
 >= 0xc1 && c <= 0xdb && c != 0xd2)  1;

837 
ISO_8859_8
:

838 
ISO_8859_11
:

841 
ISO_8859_10
:

842 i‡(
c
 >= 0xa1 && c <= 0xa6)  1;

843 i‡(
c
 >= 0xa8 && c <= 0xac)  1;

844 i‡(
c
 == 0xae || c == 0xaf)  1;

845 i‡(
c
 >= 0xc0 && c <= 0xde)  1;

848 
ISO_8859_13
:

849 i‡(
c
 == 0xa8)  1;

850 i‡(
c
 == 0xaa)  1;

851 i‡(
c
 == 0xaf)  1;

852 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

853 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

856 
ISO_8859_14
:

857 i‡(
c
 == 0xa1)  1;

858 i‡(
c
 == 0xa4 || c == 0xa6)  1;

859 i‡(
c
 == 0xa8)  1;

860 i‡(
c
 == 0xaa || c == 0xac)  1;

861 i‡(
c
 == 0xaf || c == 0xb0)  1;

862 i‡(
c
 == 0xb2 || c == 0xb4 || c == 0xb7)  1;

863 i‡(
c
 == 0xbb || c == 0xbd)  1;

864 i‡(
c
 >= 0xc0 && c <= 0xde)  1;

867 
ISO_8859_15
:

868 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

869 i‡(
c
 >= 0xd8 && c <= 0xde)  1;

870 i‡(
c
 == 0xa6)  1;

871 i‡(
c
 == 0xb4)  1;

872 i‡(
c
 == 0xbc)  1;

873 i‡(
c
 == 0xbe)  1;

876 
ISO_8859_16
:

877 i‡(
c
 == 0xa1)  1;

878 i‡(
c
 == 0xa3)  1;

879 i‡(
c
 == 0xa6)  1;

880 i‡(
c
 == 0xaa)  1;

881 i‡(
c
 == 0xac)  1;

882 i‡(
c
 == 0xaf)  1;

883 i‡(
c
 == 0xb2)  1;

884 i‡(
c
 == 0xb4)  1;

885 i‡(
c
 == 0xbc)  1;

886 i‡(
c
 == 0xbe)  1;

887 i‡(
c
 >= 0xc0 && c <= 0xde)  1;

890 
KOI8_R
:

891 i‡(
c
 == 0xb3)  1;

893 
KOI8
:

894 i‡(
c
 >= 0xe0 && c <= 0xff)  1;

898 
	`exô
(-1);

902 
	}
}

904 
	$IsXDigô
(
íc
, 
c
)

906 i‡(
íc
 =
ASCII
)

907  
	`isxdigô
(
c
);

909 i‡(
c
 >= 0x30 && c <= 0x39)  1;

910 i‡(
c
 >= 0x41 && c <= 0x46)  1;

911 i‡(
c
 >= 0x61 && c <= 0x66)  1;

913 
	}
}

915 
	$IsW‹d
(
íc
, 
c
)

917 i‡(
íc
 =
ASCII
) {

918  (
	`ißÕha
(
c
Ë|| 
	`isdigô
(c) || c == 0x5f);

921 i‡(
c
 >= 0x30 && c <= 0x39)  1;

922 i‡(
c
 >= 0x41 && c <= 0x5a)  1;

923 i‡(
c
 == 0x5f)  1;

924 i‡(
c
 >= 0x61 && c <= 0x7a)  1;

926 
íc
) {

927 
UNICODE_ISO_8859_1
:

928 
ISO_8859_1
:

929 
ISO_8859_9
:

930 i‡(
c
 == 0xaa)  1;

931 i‡(
c
 >= 0xb2 && c <= 0xb3)  1;

932 i‡(
c
 == 0xb5)  1;

933 i‡(
c
 >= 0xb9 && c <= 0xba)  1;

934 i‡(
c
 >= 0xbc && c <= 0xbe)  1;

935 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

936 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

937 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

940 
ISO_8859_2
:

941 i‡(
c
 == 0xa1 || c == 0xa3)  1;

942 i‡(
c
 == 0xa5 || c == 0xa6)  1;

943 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

944 i‡(
c
 >= 0xae && c <= 0xaf)  1;

945 i‡(
c
 == 0xb1 || c == 0xb3)  1;

946 i‡(
c
 == 0xb5 || c == 0xb6)  1;

947 i‡(
c
 >= 0xb9 && c <= 0xbc)  1;

948 i‡(
c
 >= 0xbe && c <= 0xbf)  1;

949 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

950 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

951 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

954 
ISO_8859_3
:

955 i‡(
c
 == 0xa1)  1;

956 i‡(
c
 == 0xa6)  1;

957 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

958 i‡(
c
 == 0xaf)  1;

959 i‡(
c
 >= 0xb1 && c <= 0xb3)  1;

960 i‡(
c
 == 0xb5 || c == 0xb6)  1;

961 i‡(
c
 >= 0xb9 && c <= 0xbd)  1;

962 i‡(
c
 == 0xbf)  1;

963 i‡(
c
 >= 0xc0 && c <= 0xc2)  1;

964 i‡(
c
 >= 0xc4 && c <= 0xcf)  1;

965 i‡(
c
 >= 0xd1 && c <= 0xd6)  1;

966 i‡(
c
 >= 0xd8 && c <= 0xe2)  1;

967 i‡(
c
 >= 0xe4 && c <= 0xef)  1;

968 i‡(
c
 >= 0xf1 && c <= 0xf6)  1;

969 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

972 
ISO_8859_4
:

973 i‡(
c
 >= 0xa1 && c <= 0xa3)  1;

974 i‡(
c
 == 0xa5 || c == 0xa6)  1;

975 i‡(
c
 >= 0xa9 && c <= 0xac)  1;

976 i‡(
c
 == 0xae)  1;

977 i‡(
c
 == 0xb1 || c == 0xb3)  1;

978 i‡(
c
 == 0xb5 || c == 0xb6)  1;

979 i‡(
c
 >= 0xb9 && c <= 0xbf)  1;

980 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

981 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

982 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

985 
ISO_8859_5
:

986 i‡(
c
 >= 0xa1 && c <= 0xcf && c != 0xad)  1;

987 i‡(
c
 >= 0xd0 && c <= 0xff && c != 0xf0 && c != 0xfd)  1;

990 
ISO_8859_6
:

991 i‡(
c
 >= 0xc1 && c <= 0xda)  1;

992 i‡(
c
 >= 0xe0 && c <= 0xea)  1;

993 i‡(
c
 >= 0xeb && c <= 0xf2)  1;

996 
ISO_8859_7
:

997 i‡(
c
 == 0xb2 || c == 0xb3)  1;

998 i‡(
c
 == 0xb6)  1;

999 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

1000 i‡(
c
 >= 0xbc && c <= 0xbf)  1;

1001 i‡(
c
 == 0xc0)  1;

1002 i‡(
c
 >= 0xc1 && c <= 0xdb && c != 0xd2)  1;

1003 i‡(
c
 >= 0xdc && c <= 0xfe)  1;

1006 
ISO_8859_8
:

1007 i‡(
c
 == 0xb2 || c == 0xb3 || c == 0xb5 || c == 0xb9)  1;

1008 i‡(
c
 >= 0xbc && c <= 0xbe)  1;

1009 i‡(
c
 >= 0xe0 && c <= 0xfa)  1;

1012 
ISO_8859_10
:

1013 i‡(
c
 >= 0xa1 && c <= 0xff) {

1014 i‡(
c
 != 0xa7 && c != 0xad && c != 0xb0 && c != 0xb7 && c != 0xbd)

1019 
ISO_8859_11
:

1020 i‡(
c
 >= 0xa1 && c <= 0xda)  1;

1021 i‡(
c
 >= 0xdf && c <= 0xfb)  1;

1024 
ISO_8859_13
:

1025 i‡(
c
 == 0xa8)  1;

1026 i‡(
c
 == 0xaa)  1;

1027 i‡(
c
 == 0xaf)  1;

1028 i‡(
c
 == 0xb2 || c == 0xb3 || c == 0xb5 || c == 0xb9)  1;

1029 i‡(
c
 >= 0xbc && c <= 0xbe)  1;

1030 i‡(
c
 == 0xb8)  1;

1031 i‡(
c
 == 0xba)  1;

1032 i‡(
c
 >= 0xbf && c <= 0xd6)  1;

1033 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

1034 i‡(
c
 >= 0xf8 && c <= 0xfe)  1;

1037 
ISO_8859_14
:

1038 i‡(
c
 >= 0xa1 && c <= 0xff) {

1039 i‡(
c
 == 0xa3 || c == 0xa7 || c == 0xa9 || c == 0xad || c == 0xae ||

1040 
c
 == 0xb6)  0;

1045 
ISO_8859_15
:

1046 i‡(
c
 == 0xaa)  1;

1047 i‡(
c
 >= 0xb2 && c <= 0xb3)  1;

1048 i‡(
c
 == 0xb5)  1;

1049 i‡(
c
 >= 0xb9 && c <= 0xba)  1;

1050 i‡(
c
 >= 0xbc && c <= 0xbe)  1;

1051 i‡(
c
 >= 0xc0 && c <= 0xd6)  1;

1052 i‡(
c
 >= 0xd8 && c <= 0xf6)  1;

1053 i‡(
c
 >= 0xf8 && c <= 0xff)  1;

1054 i‡(
c
 == 0xa6)  1;

1055 i‡(
c
 == 0xa8)  1;

1056 i‡(
c
 == 0xb4)  1;

1057 i‡(
c
 == 0xb8)  1;

1060 
ISO_8859_16
:

1061 i‡(
c
 == 0xa1)  1;

1062 i‡(
c
 == 0xa2)  1;

1063 i‡(
c
 == 0xa3)  1;

1064 i‡(
c
 == 0xa6)  1;

1065 i‡(
c
 == 0xa8)  1;

1066 i‡(
c
 == 0xaa)  1;

1067 i‡(
c
 == 0xac)  1;

1068 i‡(
c
 == 0xae)  1;

1069 i‡(
c
 == 0xaf)  1;

1070 i‡(
c
 == 0xb2)  1;

1071 i‡(
c
 == 0xb3)  1;

1072 i‡(
c
 == 0xb4)  1;

1073 i‡(
c
 >= 0xb8 && c <= 0xba)  1;

1074 i‡(
c
 == 0xbc)  1;

1075 i‡(
c
 == 0xbd)  1;

1076 i‡(
c
 == 0xbe)  1;

1077 i‡(
c
 == 0xbf)  1;

1078 i‡(
c
 >= 0xc0 && c <= 0xde)  1;

1079 i‡(
c
 >= 0xdf && c <= 0xff)  1;

1082 
KOI8_R
:

1083 i‡(
c
 == 0x9d)  1;

1084 i‡(
c
 == 0xa3 || c == 0xb3)  1;

1086 
KOI8
:

1087 i‡(
c
 >= 0xc0 && c <= 0xff)  1;

1091 
	`exô
(-1);

1095 
	}
}

1097 
	$IsAscii
(
íc
 
ARG_UNUSED
, 
c
)

1099 i‡(
c
 >= 0x00 && c <= 0x7f)  1;

1101 
	}
}

1103 
	$IsNewlöe
(
íc
 
ARG_UNUSED
, 
c
)

1105 i‡(
c
 == 0x0a)  1;

1107 
	}
}

1109 
	$exec
(
FILE
* 
Â
, 
ENC_INFO
* 
eöfo
)

1111 
	#NCOL
 8

	)

1113 
c
, 
vÆ
, 
íc
;

1114 
r
;

1116 
íc
 = 
eöfo
->
num
;

1118 
r
 = 
	`Ârötf
(
Â
, "static const unsigned short Enc%s_CtypeTable[256] = {\n",

1119 
eöfo
->
«me
);

1120 i‡(
r
 < 0)  -1;

1122 
c
 = 0; c < 256; c++) {

1123 
vÆ
 = 0;

1124 i‡(
	`IsNewlöe
(
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_NEWLINE
;

1125 i‡(
	`IsAÕha
 (
íc
, 
c
)Ë
vÆ
 |(
BIT_CTYPE_ALPHA
 | 
BIT_CTYPE_ALNUM
);

1126 i‡(
	`IsBœnk
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_BLANK
;

1127 i‡(
	`IsC¡æ
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_CNTRL
;

1128 i‡(
	`IsDigô
 (
íc
, 
c
)Ë
vÆ
 |(
BIT_CTYPE_DIGIT
 | 
BIT_CTYPE_ALNUM
);

1129 i‡(
	`IsGøph
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_GRAPH
;

1130 i‡(
	`IsLowî
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_LOWER
;

1131 i‡(
	`IsPröt
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_PRINT
;

1132 i‡(
	`IsPun˘
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_PUNCT
;

1133 i‡(
	`IsS∑˚
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_SPACE
;

1134 i‡(
	`IsUµî
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_UPPER
;

1135 i‡(
	`IsXDigô
(
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_XDIGIT
;

1136 i‡(
	`IsW‹d
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_WORD
;

1137 i‡(
	`IsAscii
 (
íc
, 
c
)Ë
vÆ
 |
BIT_CTYPE_ASCII
;

1139 i‡(
c
 % 
NCOL
 == 0) {

1140 
r
 = 
	`Âuts
(" ", 
Â
);

1141 i‡(
r
 < 0)  -1;

1143 
r
 = 
	`Ârötf
(
Â
, "0x%04x", 
vÆ
);

1144 i‡(
r
 < 0)  -1;

1146 i‡(
c
 != 255) {

1147 
r
 = 
	`Âuts
(",", 
Â
);

1148 i‡(
r
 < 0)  -1;

1150 i‡(
c
 !0 && c % 
NCOL
 == (NCOL-1))

1151 
r
 = 
	`Âuts
("\n", 
Â
);

1153 
r
 = 
	`Âuts
(" ", 
Â
);

1155 i‡(
r
 < 0)  -1;

1157 
r
 = 
	`Ârötf
(
Â
, "};\n");

1158 i‡(
r
 < 0)  -1;

1161 
	}
}

1163 
	$maö
(
¨gc
 
ARG_UNUSED
, * 
¨gv
[] ARG_UNUSED)

1165 
r
;

1166 
i
;

1167 
FILE
* 
Â
 = 
°dout
;

1169 
	`£éoˇÀ
(
LC_ALL
, "C");

1175 
i
 = 0; i < ()((
Info
)/(
ENC_INFO
)); i++) {

1176 
r
 = 
	`exec
(
Â
, &
Info
[
i
]);

1177 i‡(
r
 < 0) {

1178 
	`Ârötf
(
°dîr
, "FAILÉxec(): %d\n", 
r
);

1184 
	}
}

	@modules/oniguruma/src/onig_init.c

30 
	~"⁄iguruma.h
"

34 
	$⁄ig_öô
()

37 
OnigEncodög
 
ícs
[] = {

38 
ONIG_ENCODING_UTF8


41  
	`⁄ig_öôülize
(
ícs
, (encs)/(encs[0]));

43  
	`⁄ig_öôülize
(0, 0);

45 
	}
}

	@modules/oniguruma/src/oniggnu.h

1 #i‚de‡
ONIGGNU_H


2 
	#ONIGGNU_H


	)

32 
	~"⁄iguruma.h
"

34 #ifde‡
__˝lu•lus


38 
	#RE_MBCTYPE_ASCII
 0

	)

39 
	#RE_MBCTYPE_EUC
 1

	)

40 
	#RE_MBCTYPE_SJIS
 2

	)

41 
	#RE_MBCTYPE_UTF8
 3

	)

44 #i‚de‡
RE_NREGS


45 
	#RE_NREGS
 
ONIG_NREGION


	)

48 
	#RE_OPTION_IGNORECASE
 
ONIG_OPTION_IGNORECASE


	)

49 
	#RE_OPTION_EXTENDED
 
ONIG_OPTION_EXTEND


	)

50 
	#RE_OPTION_MULTILINE
 
ONIG_OPTION_MULTILINE


	)

51 
	#RE_OPTION_SINGLELINE
 
ONIG_OPTION_SINGLELINE


	)

52 
	#RE_OPTION_LONGEST
 
ONIG_OPTION_FIND_LONGEST


	)

53 
	#RE_OPTION_POSIXLINE
 (
RE_OPTION_MULTILINE
|
RE_OPTION_SINGLELINE
)

	)

54 
	#RE_OPTION_FIND_NOT_EMPTY
 
ONIG_OPTION_FIND_NOT_EMPTY


	)

55 
	#RE_OPTION_NEGATE_SINGLELINE
 
ONIG_OPTION_NEGATE_SINGLELINE


	)

56 
	#RE_OPTION_DONT_CAPTURE_GROUP
 
ONIG_OPTION_DONT_CAPTURE_GROUP


	)

57 
	#RE_OPTION_CAPTURE_GROUP
 
ONIG_OPTION_CAPTURE_GROUP


	)

60 
ONIG_EXTERN


61 
ª_mbcöô
 
P_
(());

62 
ONIG_EXTERN


63 
ª_compûe_∑âîn
 
P_
((c⁄° *, , 
ª_∑âîn_buf„r
*, * 
îr_buf
));

64 
ONIG_EXTERN


65 
ª_ªcompûe_∑âîn
 
P_
((c⁄° *, , 
ª_∑âîn_buf„r
*, * 
îr_buf
));

66 
ONIG_EXTERN


67 
ª_‰ì_∑âîn
 
P_
((
ª_∑âîn_buf„r
*));

68 
ONIG_EXTERN


69 
ª_adju°_°¨ços
 
P_
((
ª_∑âîn_buf„r
*, const *, , , ));

70 
ONIG_EXTERN


71 
ª_£¨ch
 
P_
((
ª_∑âîn_buf„r
*, c⁄° *, , , , 
ª_ªgi°îs
*));

72 
ONIG_EXTERN


73 
ª_m©ch
 
P_
((
ª_∑âîn_buf„r
*, c⁄° *, , , 
ª_ªgi°îs
*));

74 
ONIG_EXTERN


75 
ª_£t_ˇ£èbÀ
 
P_
((const *));

76 
ONIG_EXTERN


77 
ª_‰ì_ªgi°îs
 
P_
((
ª_ªgi°îs
*));

78 
ONIG_EXTERN


79 
ª_Æloc_∑âîn
 
P_
((
ª_∑âîn_buf„r
**));

81 #ifde‡
__˝lu•lus


	@modules/oniguruma/src/onigposix.h

1 #i‚de‡
ONIGPOSIX_H


2 
	#ONIGPOSIX_H


	)

31 
	~<°dlib.h
>

33 #ifde‡
__˝lu•lus


38 
	#REG_ICASE
 (1<<0)

	)

39 
	#REG_NEWLINE
 (1<<1)

	)

40 
	#REG_NOTBOL
 (1<<2)

	)

41 
	#REG_NOTEOL
 (1<<3)

	)

42 
	#REG_EXTENDED
 (1<<4Ë

	)

43 
	#REG_NOSUB
 (1<<5)

	)

46 
	#REG_NOMATCH
 1

	)

47 
	#REG_BADPAT
 2

	)

48 
	#REG_ECOLLATE
 3

	)

49 
	#REG_ECTYPE
 4

	)

50 
	#REG_EESCAPE
 5

	)

51 
	#REG_ESUBREG
 6

	)

52 
	#REG_EBRACK
 7

	)

53 
	#REG_EPAREN
 8

	)

54 
	#REG_EBRACE
 9

	)

55 
	#REG_BADBR
 10

	)

56 
	#REG_ERANGE
 11

	)

57 
	#REG_ESPACE
 12

	)

58 
	#REG_BADRPT
 13

	)

61 
	#REG_EONIG_INTERNAL
 14

	)

62 
	#REG_EONIG_BADWC
 15

	)

63 
	#REG_EONIG_BADARG
 16

	)

67 
	#REG_POSIX_ENCODING_ASCII
 0

	)

68 
	#REG_POSIX_ENCODING_EUC_JP
 1

	)

69 
	#REG_POSIX_ENCODING_SJIS
 2

	)

70 
	#REG_POSIX_ENCODING_UTF8
 3

	)

71 
	#REG_POSIX_ENCODING_UTF16_BE
 4

	)

72 
	#REG_POSIX_ENCODING_UTF16_LE
 5

	)

75 
	tªgoff_t
;

78 
ªgoff_t
 
rm_so
;

79 
ªgoff_t
 
rm_eo
;

80 } 
	tªgm©ch_t
;

84 * 
⁄ig
;

85 
size_t
 
ª_nsub
;

86 
comp_›ti⁄s
;

87 } 
	tªgex_t
;

90 #i‚de‡
P_


91 #i‡
deföed
(
__STDC__
Ë|| deföed(
_WIN32
)

92 
	#P_
(
¨gs
Ë
	)
args

94 
	#P_
(
¨gs
Ë()

	)

98 #i‚de‡
ONIG_EXTERN


99 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
)

100 #i‡
deföed
(
EXPORT
)

101 
	#ONIG_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

103 
	#ONIG_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

108 #i‚de‡
ONIG_EXTERN


109 
	#ONIG_EXTERN
 

	)

112 #i‚de‡
ONIGURUMA_H


113 
	tOnigO±i⁄Ty≥
;

117 
	g›
;

118 
	g›2
;

119 
	gbehavi‹
;

120 
OnigO±i⁄Ty≥
 
	g›ti⁄s
;

121 } 
	tOnigSy¡axTy≥
;

123 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixBasic
;

124 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixExãnded
;

125 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axEmacs
;

126 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axGªp
;

127 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axGnuRegex
;

128 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axJava
;

129 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPîl
;

130 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axRuby
;

133 
	#ONIG_SYNTAX_POSIX_BASIC
 (&
OnigSy¡axPosixBasic
)

	)

134 
	#ONIG_SYNTAX_POSIX_EXTENDED
 (&
OnigSy¡axPosixExãnded
)

	)

135 
	#ONIG_SYNTAX_EMACS
 (&
OnigSy¡axEmacs
)

	)

136 
	#ONIG_SYNTAX_GREP
 (&
OnigSy¡axGªp
)

	)

137 
	#ONIG_SYNTAX_GNU_REGEX
 (&
OnigSy¡axGnuRegex
)

	)

138 
	#ONIG_SYNTAX_JAVA
 (&
OnigSy¡axJava
)

	)

139 
	#ONIG_SYNTAX_PERL
 (&
OnigSy¡axPîl
)

	)

140 
	#ONIG_SYNTAX_RUBY
 (&
OnigSy¡axRuby
)

	)

142 
	#ONIG_SYNTAX_DEFAULT
 
OnigDeÁu…Sy¡ax


	)

144 
ONIG_EXTERN
 
OnigSy¡axTy≥
* 
	gOnigDeÁu…Sy¡ax
;

146 
ONIG_EXTERN
 
⁄ig_£t_deÁu…_sy¡ax
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

147 
ONIG_EXTERN
 
⁄ig_c›y_sy¡ax
 
P_
((
OnigSy¡axTy≥
* 
to
, OnigSy¡axTy≥* 
‰om
));

148 
ONIG_EXTERN
 c⁄° * 
⁄ig_vîsi⁄
 
P_
(());

149 
ONIG_EXTERN
 c⁄° * 
⁄ig_c›yright
 
P_
(());

154 
ONIG_EXTERN
 
ªgcomp
 
P_
((
ªgex_t
* 
ªg
, c⁄° * 
∑t
, 
›ti⁄s
));

155 
ONIG_EXTERN
 
ªgexec
 
P_
((
ªgex_t
* 
ªg
, c⁄° * 
°r
, 
size_t
 
nm©ch
, 
ªgm©ch_t
* 
m©ches
, 
›ti⁄s
));

156 
ONIG_EXTERN
 
ªg‰ì
 
P_
((
ªgex_t
* 
ªg
));

157 
ONIG_EXTERN
 
size_t
 
ªgîr‹
 
P_
((
code
, c⁄° 
ªgex_t
* 
ªg
, * 
buf
, size_à
size
));

160 
ONIG_EXTERN
 
ªg_£t_ícodög
 
P_
((
íc
));

161 
ONIG_EXTERN
 
ªg_«me_to_group_numbîs
 
P_
((
ªgex_t
* 
ªg
, c⁄° * 
«me
, c⁄° * 
«me_íd
, ** 
nums
));

162 
ONIG_EXTERN
 
ªg_f‹óch_«me
 
P_
((
ªgex_t
* 
ªg
, (*
func
)(c⁄° *, c⁄° *,,*,ªgex_t*,*), * 
¨g
));

163 
ONIG_EXTERN
 
ªg_numbî_of_«mes
 
P_
((
ªgex_t
* 
ªg
));

165 #ifde‡
__˝lu•lus


	@modules/oniguruma/src/oniguruma.h

1 #i‚de‡
ONIGURUMA_H


2 
	#ONIGURUMA_H


	)

32 #ifde‡
__˝lu•lus


36 
	#ONIGURUMA


	)

37 
	#ONIGURUMA_VERSION_MAJOR
 6

	)

38 
	#ONIGURUMA_VERSION_MINOR
 1

	)

39 
	#ONIGURUMA_VERSION_TEENY
 3

	)

41 #ifde‡
__˝lu•lus


42 #i‚de‡ 
HAVE_PROTOTYPES


43 
	#HAVE_PROTOTYPES
 1

	)

45 #i‚de‡ 
HAVE_STDARG_PROTOTYPES


46 
	#HAVE_STDARG_PROTOTYPES
 1

	)

51 #i‡
deföed
(
__APPLE__
Ë&& deföed(
__GNUC__
) && __GNUC__ >= 4

52 #i‚de‡ 
HAVE_STDARG_PROTOTYPES


53 
	#HAVE_STDARG_PROTOTYPES
 1

	)

57 #ifde‡
HAVE_STDARG_H


58 #i‚de‡ 
HAVE_STDARG_PROTOTYPES


59 
	#HAVE_STDARG_PROTOTYPES
 1

	)

63 #i‚de‡
P_


64 #i‡
deföed
(
__STDC__
Ë|| deföed(
_WIN32
)

65 
	#P_
(
¨gs
Ë
	)
args

67 
	#P_
(
¨gs
Ë()

	)

71 #i‚de‡
PV_


72 #ifde‡
HAVE_STDARG_PROTOTYPES


73 
	#PV_
(
¨gs
Ë
	)
args

75 
	#PV_
(
¨gs
Ë()

	)

79 #i‚de‡
ONIG_EXTERN


80 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
)

81 #i‡
deföed
(
EXPORT
Ë|| deföed(
RUBY_EXPORT
)

82 
	#ONIG_EXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

84 
	#ONIG_EXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

89 #i‚de‡
ONIG_EXTERN


90 
	#ONIG_EXTERN
 

	)

95 #i‚de‡
ONIG_ESCAPE_UCHAR_COLLISION


96 
	#UCh¨
 
OnigUCh¨


	)

99 #ifde‡
_WIN32


100 
	~<wödows.h
>

103 
	tOnigCodePoöt
;

104 
	tOnigUCh¨
;

105 
	tOnigCty≥
;

106 
	tOnigLí
;

108 
	#ONIG_INFINITE_DISTANCE
 ~((
OnigLí
 )0)

	)

110 
	tOnigCa£FﬁdTy≥
;

112 
ONIG_EXTERN
 
OnigCa£FﬁdTy≥
 
	gOnigDeÁu…Ca£FﬁdFœg
;

116 
	#ONIGENC_CASE_FOLD_TURKISH_AZERI
 (1<<20)

	)

117 
	#INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
 (1<<30)

	)

119 
	#ONIGENC_CASE_FOLD_MIN
 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR


	)

120 
	#ONIGENC_CASE_FOLD_DEFAULT
 
OnigDeÁu…Ca£FﬁdFœg


	)

123 
	#ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN
 3

	)

124 
	#ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM
 13

	)

128 
	#ONIGENC_CODE_RANGE_NUM
(
ønge
Ë((Ï™ge[0])

	)

129 
	#ONIGENC_CODE_RANGE_FROM
(
ønge
,
i
Ëønge[((i)*2Ë+ 1]

	)

130 
	#ONIGENC_CODE_RANGE_TO
(
ønge
,
i
Ëønge[((i)*2Ë+ 2]

	)

133 
	gbyã_Àn
;

134 
	gcode_Àn
;

135 
OnigCodePoöt
 
	gcode
[
ONIGENC_MAX_COMP_CASE_FOLD_CODE_LEN
];

136 } 
	tOnigCa£FﬁdCodeIãm
;

139 
OnigCodePoöt
 
	gesc
;

140 
OnigCodePoöt
 
	g™ych¨
;

141 
OnigCodePoöt
 
	g™ytime
;

142 
OnigCodePoöt
 
	gzîo_‹_⁄e_time
;

143 
OnigCodePoöt
 
	g⁄e_‹_m‹e_time
;

144 
OnigCodePoöt
 
	g™ych¨_™ytime
;

145 } 
	tOnigMëaCh¨TabÀTy≥
;

147 (*
	gOnigAµlyAŒCa£FﬁdFunc
)(
	tOnigCodePoöt
 
	t‰om
, OnigCodePoöt* 
	tto
, 
	tto_Àn
, * 
	t¨g
);

149 
	sOnigEncodögTy≥ST
 {

150 (*
	gmbc_íc_Àn
)(c⁄° 
OnigUCh¨
* 
	gp
);

151 c⁄° * 
	g«me
;

152 
	gmax_íc_Àn
;

153 
	gmö_íc_Àn
;

154 (*
	gis_mbc_√wlöe
)(c⁄° 
OnigUCh¨
* 
	gp
, c⁄° OnigUCh¨* 
	gíd
);

155 
OnigCodePoöt
 (*
mbc_to_code
)(c⁄° 
OnigUCh¨
* 
	gp
, c⁄° OnigUCh¨* 
	gíd
);

156 (*
	gcode_to_mb˛í
)(
OnigCodePoöt
 
	gcode
);

157 (*
	gcode_to_mbc
)(
OnigCodePoöt
 
	gcode
, 
OnigUCh¨
 *
	gbuf
);

158 (*
	gmbc_ˇ£_fﬁd
)(
OnigCa£FﬁdTy≥
 
	gÊag
, c⁄° 
OnigUCh¨
** 
	gµ
, c⁄° OnigUCh¨* 
	gíd
, OnigUCh¨* 
	gto
);

159 (*
	g≠∂y_Æl_ˇ£_fﬁd
)(
OnigCa£FﬁdTy≥
 
	gÊag
, 
OnigAµlyAŒCa£FﬁdFunc
 
	gf
, * 
	g¨g
);

160 (*
	ggë_ˇ£_fﬁd_codes_by_°r
)(
OnigCa£FﬁdTy≥
 
	gÊag
, c⁄° 
OnigUCh¨
* 
	gp
, c⁄° OnigUCh¨* 
	gíd
, 
OnigCa£FﬁdCodeIãm
 
	gacs
[]);

161 (*
	g¥›îty_«me_to_˘y≥
)(
OnigEncodögTy≥ST
* 
	gíc
, 
OnigUCh¨
* 
	gp
, OnigUCh¨* 
	gíd
);

162 (*
	gis_code_˘y≥
)(
OnigCodePoöt
 
	gcode
, 
OnigCty≥
 
	g˘y≥
);

163 (*
	ggë_˘y≥_code_ønge
)(
OnigCty≥
 
	g˘y≥
, 
OnigCodePoöt
* 
	gsb_out
, c⁄° OnigCodePoöt* 
	gønges
[]);

164 
	gOnigUCh¨
* (*
	gÀ·_adju°_ch¨_hód
)(c⁄° 
OnigUCh¨
* 
	g°¨t
, c⁄° OnigUCh¨* 
	gp
);

165 (*
	gis_Ælowed_ªvî£_m©ch
)(c⁄° 
OnigUCh¨
* 
	gp
, c⁄° OnigUCh¨* 
	gíd
);

166 (*
	göô
)();

167 (*
	gis_öôülized
)();

168 (*
	gis_vÆid_mbc_°rög
)(c⁄° 
OnigUCh¨
* 
	gs
, c⁄° OnigUCh¨* 
	gíd
);

169 } 
	tOnigEncodögTy≥
;

171 
OnigEncodögTy≥
* 
	tOnigEncodög
;

173 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögASCII
;

174 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_1
;

175 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_2
;

176 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_3
;

177 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_4
;

178 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_5
;

179 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_6
;

180 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_7
;

181 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_8
;

182 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_9
;

183 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_10
;

184 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_11
;

185 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_13
;

186 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_14
;

187 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_15
;

188 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögISO_8859_16
;

189 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögUTF8
;

190 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögUTF16_BE
;

191 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögUTF16_LE
;

192 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögUTF32_BE
;

193 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögUTF32_LE
;

194 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögEUC_JP
;

195 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögEUC_TW
;

196 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögEUC_KR
;

197 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögEUC_CN
;

198 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögSJIS
;

199 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögKOI8
;

200 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögKOI8_R
;

201 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögCP1251
;

202 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögBIG5
;

203 
ONIG_EXTERN
 
OnigEncodögTy≥
 
	gOnigEncodögGB18030
;

205 
	#ONIG_ENCODING_ASCII
 (&
OnigEncodögASCII
)

	)

206 
	#ONIG_ENCODING_ISO_8859_1
 (&
OnigEncodögISO_8859_1
)

	)

207 
	#ONIG_ENCODING_ISO_8859_2
 (&
OnigEncodögISO_8859_2
)

	)

208 
	#ONIG_ENCODING_ISO_8859_3
 (&
OnigEncodögISO_8859_3
)

	)

209 
	#ONIG_ENCODING_ISO_8859_4
 (&
OnigEncodögISO_8859_4
)

	)

210 
	#ONIG_ENCODING_ISO_8859_5
 (&
OnigEncodögISO_8859_5
)

	)

211 
	#ONIG_ENCODING_ISO_8859_6
 (&
OnigEncodögISO_8859_6
)

	)

212 
	#ONIG_ENCODING_ISO_8859_7
 (&
OnigEncodögISO_8859_7
)

	)

213 
	#ONIG_ENCODING_ISO_8859_8
 (&
OnigEncodögISO_8859_8
)

	)

214 
	#ONIG_ENCODING_ISO_8859_9
 (&
OnigEncodögISO_8859_9
)

	)

215 
	#ONIG_ENCODING_ISO_8859_10
 (&
OnigEncodögISO_8859_10
)

	)

216 
	#ONIG_ENCODING_ISO_8859_11
 (&
OnigEncodögISO_8859_11
)

	)

217 
	#ONIG_ENCODING_ISO_8859_13
 (&
OnigEncodögISO_8859_13
)

	)

218 
	#ONIG_ENCODING_ISO_8859_14
 (&
OnigEncodögISO_8859_14
)

	)

219 
	#ONIG_ENCODING_ISO_8859_15
 (&
OnigEncodögISO_8859_15
)

	)

220 
	#ONIG_ENCODING_ISO_8859_16
 (&
OnigEncodögISO_8859_16
)

	)

221 
	#ONIG_ENCODING_UTF8
 (&
OnigEncodögUTF8
)

	)

222 
	#ONIG_ENCODING_UTF16_BE
 (&
OnigEncodögUTF16_BE
)

	)

223 
	#ONIG_ENCODING_UTF16_LE
 (&
OnigEncodögUTF16_LE
)

	)

224 
	#ONIG_ENCODING_UTF32_BE
 (&
OnigEncodögUTF32_BE
)

	)

225 
	#ONIG_ENCODING_UTF32_LE
 (&
OnigEncodögUTF32_LE
)

	)

226 
	#ONIG_ENCODING_EUC_JP
 (&
OnigEncodögEUC_JP
)

	)

227 
	#ONIG_ENCODING_EUC_TW
 (&
OnigEncodögEUC_TW
)

	)

228 
	#ONIG_ENCODING_EUC_KR
 (&
OnigEncodögEUC_KR
)

	)

229 
	#ONIG_ENCODING_EUC_CN
 (&
OnigEncodögEUC_CN
)

	)

230 
	#ONIG_ENCODING_SJIS
 (&
OnigEncodögSJIS
)

	)

231 
	#ONIG_ENCODING_KOI8
 (&
OnigEncodögKOI8
)

	)

232 
	#ONIG_ENCODING_KOI8_R
 (&
OnigEncodögKOI8_R
)

	)

233 
	#ONIG_ENCODING_CP1251
 (&
OnigEncodögCP1251
)

	)

234 
	#ONIG_ENCODING_BIG5
 (&
OnigEncodögBIG5
)

	)

235 
	#ONIG_ENCODING_GB18030
 (&
OnigEncodögGB18030
)

	)

237 
	#ONIG_ENCODING_UNDEF
 ((
OnigEncodög
 )0)

	)

241 
	#ONIGENC_CODE_TO_MBC_MAXLEN
 7

	)

242 
	#ONIGENC_MBC_CASE_FOLD_MAXLEN
 18

	)

246 
	#ONIGENC_CTYPE_NEWLINE
 0

	)

247 
	#ONIGENC_CTYPE_ALPHA
 1

	)

248 
	#ONIGENC_CTYPE_BLANK
 2

	)

249 
	#ONIGENC_CTYPE_CNTRL
 3

	)

250 
	#ONIGENC_CTYPE_DIGIT
 4

	)

251 
	#ONIGENC_CTYPE_GRAPH
 5

	)

252 
	#ONIGENC_CTYPE_LOWER
 6

	)

253 
	#ONIGENC_CTYPE_PRINT
 7

	)

254 
	#ONIGENC_CTYPE_PUNCT
 8

	)

255 
	#ONIGENC_CTYPE_SPACE
 9

	)

256 
	#ONIGENC_CTYPE_UPPER
 10

	)

257 
	#ONIGENC_CTYPE_XDIGIT
 11

	)

258 
	#ONIGENC_CTYPE_WORD
 12

	)

259 
	#ONIGENC_CTYPE_ALNUM
 13

	)

260 
	#ONIGENC_CTYPE_ASCII
 14

	)

261 
	#ONIGENC_MAX_STD_CTYPE
 
ONIGENC_CTYPE_ASCII


	)

264 
	#⁄ig_íc_Àn
(
íc
,
p
,
íd
Ë
	`ONIGENC_MBC_ENC_LEN
”nc,p)

	)

266 
	#ONIGENC_IS_UNDEF
(
íc
Ë(”ncË=
ONIG_ENCODING_UNDEF
)

	)

267 
	#ONIGENC_IS_SINGLEBYTE
(
íc
Ë(
	`ONIGENC_MBC_MAXLEN
”ncË=1)

	)

268 
	#ONIGENC_IS_MBC_HEAD
(
íc
,
p
Ë(
	`ONIGENC_MBC_ENC_LEN
”nc,pË!1)

	)

269 
	#ONIGENC_IS_MBC_ASCII
(
p
Ë(*’Ë< 128)

	)

270 
	#ONIGENC_IS_CODE_ASCII
(
code
Ë((codeË< 128)

	)

271 
	#ONIGENC_IS_MBC_WORD
(
íc
,
s
,
íd
) \

272 
	`ONIGENC_IS_CODE_WORD
(
íc
,
	`ONIGENC_MBC_TO_CODE
”nc,
s
,
íd
))

	)

275 
	#ONIGENC_NAME
(
íc
Ë(”nc)->
«me
)

	)

277 
	#ONIGENC_MBC_CASE_FOLD
(
íc
,
Êag
,
µ
,
íd
,
buf
) \

278 (
íc
)->
	`mbc_ˇ£_fﬁd
(
Êag
,(c⁄° 
OnigUCh¨
** )
µ
,
íd
,
buf
)

	)

279 
	#ONIGENC_IS_ALLOWED_REVERSE_MATCH
(
íc
,
s
,
íd
) \

280 (
íc
)->
	`is_Ælowed_ªvî£_m©ch
(
s
,
íd
)

	)

281 
	#ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
,
°¨t
,
s
) \

282 (
íc
)->
	`À·_adju°_ch¨_hód
(
°¨t
, 
s
)

	)

283 
	#ONIGENC_IS_VALID_MBC_STRING
(
íc
,
s
,
íd
) \

284 (
íc
)->
	`is_vÆid_mbc_°rög
(
s
,
íd
)

	)

285 
	#ONIGENC_APPLY_ALL_CASE_FOLD
(
íc
,
ˇ£_fﬁd_Êag
,
f
,
¨g
) \

286 (
íc
)->
	`≠∂y_Æl_ˇ£_fﬁd
(
ˇ£_fﬁd_Êag
,
f
,
¨g
)

	)

287 
	#ONIGENC_GET_CASE_FOLD_CODES_BY_STR
(
íc
,
ˇ£_fﬁd_Êag
,
p
,
íd
,
acs
) \

288 (
íc
)->
	`gë_ˇ£_fﬁd_codes_by_°r
(
ˇ£_fﬁd_Êag
,
p
,
íd
,
acs
)

	)

289 
	#ONIGENC_STEP_BACK
(
íc
,
°¨t
,
s
,
n
) \

290 
	`⁄igíc_°ï_back
((
íc
),(
°¨t
),(
s
),(
n
))

	)

292 
	#ONIGENC_MBC_ENC_LEN
(
íc
,
p
Ë”nc)->
	`mbc_íc_Àn
’)

	)

293 
	#ONIGENC_MBC_MAXLEN
(
íc
Ë(”nc)->
max_íc_Àn
)

	)

294 
	#ONIGENC_MBC_MAXLEN_DIST
(
íc
Ë
	`ONIGENC_MBC_MAXLEN
”nc)

	)

295 
	#ONIGENC_MBC_MINLEN
(
íc
Ë(”nc)->
mö_íc_Àn
)

	)

296 
	#ONIGENC_IS_MBC_NEWLINE
(
íc
,
p
,
íd
Ë”nc)->
	`is_mbc_√wlöe
(’),”nd))

	)

297 
	#ONIGENC_MBC_TO_CODE
(
íc
,
p
,
íd
Ë”nc)->
	`mbc_to_code
(’),”nd))

	)

298 
	#ONIGENC_CODE_TO_MBCLEN
(
íc
,
code
Ë”nc)->
	`code_to_mb˛í
(code)

	)

299 
	#ONIGENC_CODE_TO_MBC
(
íc
,
code
,
buf
Ë”nc)->
	`code_to_mbc
(code,buf)

	)

300 
	#ONIGENC_PROPERTY_NAME_TO_CTYPE
(
íc
,
p
,
íd
) \

301 (
íc
)->
	`¥›îty_«me_to_˘y≥
”nc,
p
,
íd
)

	)

303 
	#ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
˘y≥
Ë”nc)->
	`is_code_˘y≥
(code,˘y≥)

	)

305 
	#ONIGENC_IS_CODE_NEWLINE
(
íc
,
code
) \

306 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_NEWLINE
)

	)

307 
	#ONIGENC_IS_CODE_GRAPH
(
íc
,
code
) \

308 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_GRAPH
)

	)

309 
	#ONIGENC_IS_CODE_PRINT
(
íc
,
code
) \

310 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_PRINT
)

	)

311 
	#ONIGENC_IS_CODE_ALNUM
(
íc
,
code
) \

312 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_ALNUM
)

	)

313 
	#ONIGENC_IS_CODE_ALPHA
(
íc
,
code
) \

314 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_ALPHA
)

	)

315 
	#ONIGENC_IS_CODE_LOWER
(
íc
,
code
) \

316 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_LOWER
)

	)

317 
	#ONIGENC_IS_CODE_UPPER
(
íc
,
code
) \

318 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_UPPER
)

	)

319 
	#ONIGENC_IS_CODE_CNTRL
(
íc
,
code
) \

320 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_CNTRL
)

	)

321 
	#ONIGENC_IS_CODE_PUNCT
(
íc
,
code
) \

322 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_PUNCT
)

	)

323 
	#ONIGENC_IS_CODE_SPACE
(
íc
,
code
) \

324 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_SPACE
)

	)

325 
	#ONIGENC_IS_CODE_BLANK
(
íc
,
code
) \

326 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_BLANK
)

	)

327 
	#ONIGENC_IS_CODE_DIGIT
(
íc
,
code
) \

328 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_DIGIT
)

	)

329 
	#ONIGENC_IS_CODE_XDIGIT
(
íc
,
code
) \

330 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_XDIGIT
)

	)

331 
	#ONIGENC_IS_CODE_WORD
(
íc
,
code
) \

332 
	`ONIGENC_IS_CODE_CTYPE
(
íc
,
code
,
ONIGENC_CTYPE_WORD
)

	)

334 
	#ONIGENC_GET_CTYPE_CODE_RANGE
(
íc
,
˘y≥
,
sbout
,
ønges
) \

335 (
íc
)->
	`gë_˘y≥_code_ønge
(
˘y≥
,
sbout
,
ønges
)

	)

337 
ONIG_EXTERN


338 
OnigUCh¨
* 
⁄igíc_°ï_back
 
P_
((
OnigEncodög
 
íc
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
s
, 
n
));

342 
ONIG_EXTERN


343 
⁄igíc_öô
 
P_
(());

344 
ONIG_EXTERN


345 
⁄ig_öôülize_ícodög
 
P_
((
OnigEncodög
 
íc
));

346 
ONIG_EXTERN


347 
⁄igíc_£t_deÁu…_ícodög
 
P_
((
OnigEncodög
 
íc
));

348 
ONIG_EXTERN


349 
OnigEncodög
 
⁄igíc_gë_deÁu…_ícodög
 
P_
(());

350 
ONIG_EXTERN


351 
⁄igíc_£t_deÁu…_ˇ£c⁄v_èbÀ
 
P_
((c⁄° 
OnigUCh¨
* 
èbÀ
));

352 
ONIG_EXTERN


353 
OnigUCh¨
* 
⁄igíc_gë_right_adju°_ch¨_hód_wôh_¥ev
 
P_
((
OnigEncodög
 
íc
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
s
, c⁄° OnigUCh¨** 
¥ev
));

354 
ONIG_EXTERN


355 
OnigUCh¨
* 
⁄igíc_gë_¥ev_ch¨_hód
 
P_
((
OnigEncodög
 
íc
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
s
));

356 
ONIG_EXTERN


357 
OnigUCh¨
* 
⁄igíc_gë_À·_adju°_ch¨_hód
 
P_
((
OnigEncodög
 
íc
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
s
));

358 
ONIG_EXTERN


359 
OnigUCh¨
* 
⁄igíc_gë_right_adju°_ch¨_hód
 
P_
((
OnigEncodög
 
íc
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
s
));

360 
ONIG_EXTERN


361 
⁄igíc_°æí
 
P_
((
OnigEncodög
 
íc
, c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
));

362 
ONIG_EXTERN


363 
⁄igíc_°æí_nuŒ
 
P_
((
OnigEncodög
 
íc
, c⁄° 
OnigUCh¨
* 
p
));

364 
ONIG_EXTERN


365 
⁄igíc_°r_byãÀn_nuŒ
 
P_
((
OnigEncodög
 
íc
, c⁄° 
OnigUCh¨
* 
p
));

366 
ONIG_EXTERN


367 
⁄igíc_is_vÆid_mbc_°rög
 
P_
((
OnigEncodög
 
íc
, c⁄° 
OnigUCh¨
* 
s
, c⁄° OnigUCh¨* 
íd
));

374 
	#ONIG_NREGION
 10

	)

375 
	#ONIG_MAX_CAPTURE_NUM
 32767

	)

376 
	#ONIG_MAX_BACKREF_NUM
 1000

	)

377 
	#ONIG_MAX_REPEAT_NUM
 100000

	)

378 
	#ONIG_MAX_MULTI_BYTE_RANGES_NUM
 10000

	)

380 
	#ONIG_MAX_ERROR_MESSAGE_LEN
 90

	)

382 
	tOnigO±i⁄Ty≥
;

384 
	#ONIG_OPTION_DEFAULT
 
ONIG_OPTION_NONE


	)

387 
	#ONIG_OPTION_NONE
 0U

	)

388 
	#ONIG_OPTION_IGNORECASE
 1U

	)

389 
	#ONIG_OPTION_EXTEND
 (
ONIG_OPTION_IGNORECASE
 << 1)

	)

390 
	#ONIG_OPTION_MULTILINE
 (
ONIG_OPTION_EXTEND
 << 1)

	)

391 
	#ONIG_OPTION_SINGLELINE
 (
ONIG_OPTION_MULTILINE
 << 1)

	)

392 
	#ONIG_OPTION_FIND_LONGEST
 (
ONIG_OPTION_SINGLELINE
 << 1)

	)

393 
	#ONIG_OPTION_FIND_NOT_EMPTY
 (
ONIG_OPTION_FIND_LONGEST
 << 1)

	)

394 
	#ONIG_OPTION_NEGATE_SINGLELINE
 (
ONIG_OPTION_FIND_NOT_EMPTY
 << 1)

	)

395 
	#ONIG_OPTION_DONT_CAPTURE_GROUP
 (
ONIG_OPTION_NEGATE_SINGLELINE
 << 1)

	)

396 
	#ONIG_OPTION_CAPTURE_GROUP
 (
ONIG_OPTION_DONT_CAPTURE_GROUP
 << 1)

	)

398 
	#ONIG_OPTION_NOTBOL
 (
ONIG_OPTION_CAPTURE_GROUP
 << 1)

	)

399 
	#ONIG_OPTION_NOTEOL
 (
ONIG_OPTION_NOTBOL
 << 1)

	)

400 
	#ONIG_OPTION_POSIX_REGION
 (
ONIG_OPTION_NOTEOL
 << 1)

	)

401 
	#ONIG_OPTION_CHECK_VALIDITY_OF_STRING
 (
ONIG_OPTION_POSIX_REGION
 << 1)

	)

402 
	#ONIG_OPTION_MAXBIT
 
ONIG_OPTION_CHECK_VALIDITY_OF_STRING


	)

404 
	#ONIG_OPTION_ON
(
›ti⁄s
,
ªg›t
Ë((›ti⁄sË|‘eg›t))

	)

405 
	#ONIG_OPTION_OFF
(
›ti⁄s
,
ªg›t
Ë((›ti⁄sË&~‘eg›t))

	)

406 
	#ONIG_IS_OPTION_ON
(
›ti⁄s
,
›ti⁄
Ë((›ti⁄sË& (›ti⁄))

	)

410 
	g›
;

411 
	g›2
;

412 
	gbehavi‹
;

413 
OnigO±i⁄Ty≥
 
	g›ti⁄s
;

414 
OnigMëaCh¨TabÀTy≥
 
	gmëa_ch¨_èbÀ
;

415 } 
	tOnigSy¡axTy≥
;

417 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axASIS
;

418 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixBasic
;

419 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixExãnded
;

420 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axEmacs
;

421 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axGªp
;

422 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axGnuRegex
;

423 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axJava
;

424 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPîl
;

425 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axPîl_NG
;

426 
ONIG_EXTERN
 
OnigSy¡axTy≥
 
	gOnigSy¡axRuby
;

429 
	#ONIG_SYNTAX_ASIS
 (&
OnigSy¡axASIS
)

	)

430 
	#ONIG_SYNTAX_POSIX_BASIC
 (&
OnigSy¡axPosixBasic
)

	)

431 
	#ONIG_SYNTAX_POSIX_EXTENDED
 (&
OnigSy¡axPosixExãnded
)

	)

432 
	#ONIG_SYNTAX_EMACS
 (&
OnigSy¡axEmacs
)

	)

433 
	#ONIG_SYNTAX_GREP
 (&
OnigSy¡axGªp
)

	)

434 
	#ONIG_SYNTAX_GNU_REGEX
 (&
OnigSy¡axGnuRegex
)

	)

435 
	#ONIG_SYNTAX_JAVA
 (&
OnigSy¡axJava
)

	)

436 
	#ONIG_SYNTAX_PERL
 (&
OnigSy¡axPîl
)

	)

437 
	#ONIG_SYNTAX_PERL_NG
 (&
OnigSy¡axPîl_NG
)

	)

438 
	#ONIG_SYNTAX_RUBY
 (&
OnigSy¡axRuby
)

	)

441 
ONIG_EXTERN
 
OnigSy¡axTy≥
* 
	gOnigDeÁu…Sy¡ax
;

442 
	#ONIG_SYNTAX_DEFAULT
 
OnigDeÁu…Sy¡ax


	)

445 
	#ONIG_SYN_OP_VARIABLE_META_CHARACTERS
 (1U<<0)

	)

446 
	#ONIG_SYN_OP_DOT_ANYCHAR
 (1U<<1Ë

	)

447 
	#ONIG_SYN_OP_ASTERISK_ZERO_INF
 (1U<<2Ë

	)

448 
	#ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF
 (1U<<3)

	)

449 
	#ONIG_SYN_OP_PLUS_ONE_INF
 (1U<<4Ë

	)

450 
	#ONIG_SYN_OP_ESC_PLUS_ONE_INF
 (1U<<5)

	)

451 
	#ONIG_SYN_OP_QMARK_ZERO_ONE
 (1U<<6Ë

	)

452 
	#ONIG_SYN_OP_ESC_QMARK_ZERO_ONE
 (1U<<7)

	)

453 
	#ONIG_SYN_OP_BRACE_INTERVAL
 (1U<<8Ë

	)

454 
	#ONIG_SYN_OP_ESC_BRACE_INTERVAL
 (1U<<9Ë

	)

455 
	#ONIG_SYN_OP_VBAR_ALT
 (1U<<10Ë

	)

456 
	#ONIG_SYN_OP_ESC_VBAR_ALT
 (1U<<11Ë

	)

457 
	#ONIG_SYN_OP_LPAREN_SUBEXP
 (1U<<12Ë

	)

458 
	#ONIG_SYN_OP_ESC_LPAREN_SUBEXP
 (1U<<13Ë

	)

459 
	#ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR
 (1U<<14Ë

	)

460 
	#ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR
 (1U<<15Ë

	)

461 
	#ONIG_SYN_OP_DECIMAL_BACKREF
 (1U<<16Ë

	)

462 
	#ONIG_SYN_OP_BRACKET_CC
 (1U<<17Ë

	)

463 
	#ONIG_SYN_OP_ESC_W_WORD
 (1U<<18Ë

	)

464 
	#ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 (1U<<19Ë

	)

465 
	#ONIG_SYN_OP_ESC_B_WORD_BOUND
 (1U<<20Ë

	)

466 
	#ONIG_SYN_OP_ESC_S_WHITE_SPACE
 (1U<<21Ë

	)

467 
	#ONIG_SYN_OP_ESC_D_DIGIT
 (1U<<22Ë

	)

468 
	#ONIG_SYN_OP_LINE_ANCHOR
 (1U<<23Ë

	)

469 
	#ONIG_SYN_OP_POSIX_BRACKET
 (1U<<24Ë

	)

470 
	#ONIG_SYN_OP_QMARK_NON_GREEDY
 (1U<<25Ë

	)

471 
	#ONIG_SYN_OP_ESC_CONTROL_CHARS
 (1U<<26Ë

	)

472 
	#ONIG_SYN_OP_ESC_C_CONTROL
 (1U<<27Ë

	)

473 
	#ONIG_SYN_OP_ESC_OCTAL3
 (1U<<28Ë

	)

474 
	#ONIG_SYN_OP_ESC_X_HEX2
 (1U<<29Ë

	)

475 
	#ONIG_SYN_OP_ESC_X_BRACE_HEX8
 (1U<<30Ë

	)

477 
	#ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE
 (1U<<0Ë

	)

478 
	#ONIG_SYN_OP2_QMARK_GROUP_EFFECT
 (1U<<1Ë

	)

479 
	#ONIG_SYN_OP2_OPTION_PERL
 (1U<<2Ë

	)

480 
	#ONIG_SYN_OP2_OPTION_RUBY
 (1U<<3Ë

	)

481 
	#ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT
 (1U<<4Ë

	)

482 
	#ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL
 (1U<<5Ë

	)

483 
	#ONIG_SYN_OP2_CCLASS_SET_OP
 (1U<<6Ë

	)

484 
	#ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
 (1U<<7Ë

	)

485 
	#ONIG_SYN_OP2_ESC_K_NAMED_BACKREF
 (1U<<8Ë

	)

486 
	#ONIG_SYN_OP2_ESC_G_SUBEXP_CALL
 (1U<<9Ë

	)

487 
	#ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY
 (1U<<10Ë

	)

488 
	#ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL
 (1U<<11Ë

	)

489 
	#ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META
 (1U<<12Ë

	)

490 
	#ONIG_SYN_OP2_ESC_V_VTAB
 (1U<<13Ë

	)

491 
	#ONIG_SYN_OP2_ESC_U_HEX4
 (1U<<14Ë

	)

492 
	#ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR
 (1U<<15Ë

	)

493 
	#ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
 (1U<<16Ë

	)

494 
	#ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
 (1U<<17Ë

	)

496 
	#ONIG_SYN_OP2_ESC_H_XDIGIT
 (1U<<19Ë

	)

497 
	#ONIG_SYN_OP2_INEFFECTIVE_ESCAPE
 (1U<<20Ë

	)

500 
	#ONIG_SYN_CONTEXT_INDEP_ANCHORS
 (1U<<31Ë

	)

501 
	#ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS
 (1U<<0Ë

	)

502 
	#ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS
 (1U<<1Ë

	)

503 
	#ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP
 (1U<<2Ë

	)

504 
	#ONIG_SYN_ALLOW_INVALID_INTERVAL
 (1U<<3Ë

	)

505 
	#ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV
 (1U<<4Ë

	)

506 
	#ONIG_SYN_STRICT_CHECK_BACKREF
 (1U<<5Ë

	)

507 
	#ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND
 (1U<<6Ë

	)

508 
	#ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
 (1U<<7Ë

	)

509 
	#ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME
 (1U<<8Ë

	)

510 
	#ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY
 (1U<<9Ë

	)

513 
	#ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC
 (1U<<20Ë

	)

514 
	#ONIG_SYN_BACKSLASH_ESCAPE_IN_CC
 (1U<<21Ë

	)

515 
	#ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC
 (1U<<22)

	)

516 
	#ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC
 (1U<<23Ë

	)

518 
	#ONIG_SYN_WARN_CC_OP_NOT_ESCAPED
 (1U<<24Ë

	)

519 
	#ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT
 (1U<<25Ë

	)

522 
	#ONIG_META_CHAR_ESCAPE
 0

	)

523 
	#ONIG_META_CHAR_ANYCHAR
 1

	)

524 
	#ONIG_META_CHAR_ANYTIME
 2

	)

525 
	#ONIG_META_CHAR_ZERO_OR_ONE_TIME
 3

	)

526 
	#ONIG_META_CHAR_ONE_OR_MORE_TIME
 4

	)

527 
	#ONIG_META_CHAR_ANYCHAR_ANYTIME
 5

	)

529 
	#ONIG_INEFFECTIVE_META_CHAR
 0

	)

532 
	#ONIG_IS_PATTERN_ERROR
(
ecode
Ë(”codeË<-100 && (ecodeË> -1000)

	)

534 
	#ONIG_NORMAL
 0

	)

535 
	#ONIG_MISMATCH
 -1

	)

536 
	#ONIG_NO_SUPPORT_CONFIG
 -2

	)

539 
	#ONIGERR_MEMORY
 -5

	)

540 
	#ONIGERR_TYPE_BUG
 -6

	)

541 
	#ONIGERR_PARSER_BUG
 -11

	)

542 
	#ONIGERR_STACK_BUG
 -12

	)

543 
	#ONIGERR_UNDEFINED_BYTECODE
 -13

	)

544 
	#ONIGERR_UNEXPECTED_BYTECODE
 -14

	)

545 
	#ONIGERR_MATCH_STACK_LIMIT_OVER
 -15

	)

546 
	#ONIGERR_PARSE_DEPTH_LIMIT_OVER
 -16

	)

547 
	#ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED
 -21

	)

548 
	#ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR
 -22

	)

549 
	#ONIGERR_FAIL_TO_INITIALIZE
 -23

	)

551 
	#ONIGERR_INVALID_ARGUMENT
 -30

	)

553 
	#ONIGERR_END_PATTERN_AT_LEFT_BRACE
 -100

	)

554 
	#ONIGERR_END_PATTERN_AT_LEFT_BRACKET
 -101

	)

555 
	#ONIGERR_EMPTY_CHAR_CLASS
 -102

	)

556 
	#ONIGERR_PREMATURE_END_OF_CHAR_CLASS
 -103

	)

557 
	#ONIGERR_END_PATTERN_AT_ESCAPE
 -104

	)

558 
	#ONIGERR_END_PATTERN_AT_META
 -105

	)

559 
	#ONIGERR_END_PATTERN_AT_CONTROL
 -106

	)

560 
	#ONIGERR_META_CODE_SYNTAX
 -108

	)

561 
	#ONIGERR_CONTROL_CODE_SYNTAX
 -109

	)

562 
	#ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE
 -110

	)

563 
	#ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE
 -111

	)

564 
	#ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS
 -112

	)

565 
	#ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED
 -113

	)

566 
	#ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID
 -114

	)

567 
	#ONIGERR_NESTED_REPEAT_OPERATOR
 -115

	)

568 
	#ONIGERR_UNMATCHED_CLOSE_PARENTHESIS
 -116

	)

569 
	#ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
 -117

	)

570 
	#ONIGERR_END_PATTERN_IN_GROUP
 -118

	)

571 
	#ONIGERR_UNDEFINED_GROUP_OPTION
 -119

	)

572 
	#ONIGERR_INVALID_POSIX_BRACKET_TYPE
 -121

	)

573 
	#ONIGERR_INVALID_LOOK_BEHIND_PATTERN
 -122

	)

574 
	#ONIGERR_INVALID_REPEAT_RANGE_PATTERN
 -123

	)

576 
	#ONIGERR_TOO_BIG_NUMBER
 -200

	)

577 
	#ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
 -201

	)

578 
	#ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE
 -202

	)

579 
	#ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
 -203

	)

580 
	#ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE
 -204

	)

581 
	#ONIGERR_TOO_MANY_MULTI_BYTE_RANGES
 -205

	)

582 
	#ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
 -206

	)

583 
	#ONIGERR_TOO_BIG_BACKREF_NUMBER
 -207

	)

584 
	#ONIGERR_INVALID_BACKREF
 -208

	)

585 
	#ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
 -209

	)

586 
	#ONIGERR_TOO_MANY_CAPTURES
 -210

	)

587 
	#ONIGERR_TOO_LONG_WIDE_CHAR_VALUE
 -212

	)

588 
	#ONIGERR_EMPTY_GROUP_NAME
 -214

	)

589 
	#ONIGERR_INVALID_GROUP_NAME
 -215

	)

590 
	#ONIGERR_INVALID_CHAR_IN_GROUP_NAME
 -216

	)

591 
	#ONIGERR_UNDEFINED_NAME_REFERENCE
 -217

	)

592 
	#ONIGERR_UNDEFINED_GROUP_REFERENCE
 -218

	)

593 
	#ONIGERR_MULTIPLEX_DEFINED_NAME
 -219

	)

594 
	#ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
 -220

	)

595 
	#ONIGERR_NEVER_ENDING_RECURSION
 -221

	)

596 
	#ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY
 -222

	)

597 
	#ONIGERR_INVALID_CHAR_PROPERTY_NAME
 -223

	)

598 
	#ONIGERR_INVALID_CODE_POINT_VALUE
 -400

	)

599 
	#ONIGERR_INVALID_WIDE_CHAR_VALUE
 -400

	)

600 
	#ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
 -401

	)

601 
	#ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION
 -402

	)

602 
	#ONIGERR_INVALID_COMBINATION_OF_OPTIONS
 -403

	)

603 
	#ONIGERR_TOO_MANY_USER_DEFINED_OBJECTS
 -404

	)

604 
	#ONIGERR_TOO_LONG_PROPERTY_NAME
 -405

	)

605 
	#ONIGERR_LIBRARY_IS_NOT_INITIALIZED
 -500

	)

612 
	#ONIG_MAX_CAPTURE_HISTORY_GROUP
 31

	)

613 
	#ONIG_IS_CAPTURE_HISTORY_GROUP
(
r
, 
i
) \

614 ((
i
Ë<
ONIG_MAX_CAPTURE_HISTORY_GROUP
 && (
r
)->
li°
 && (r)->li°[i])

	)

616 
	sOnigC≠tuªTªeNodeSåu˘
 {

617 
	ggroup
;

618 
	gbeg
;

619 
	gíd
;

620 
	gÆloˇãd
;

621 
	gnum_chûds
;

622 
OnigC≠tuªTªeNodeSåu˘
** 
	gchûds
;

623 } 
	tOnigC≠tuªTªeNode
;

626 
	sª_ªgi°îs
 {

627 
	gÆloˇãd
;

628 
	gnum_ªgs
;

629 * 
	gbeg
;

630 * 
	gíd
;

632 
OnigC≠tuªTªeNode
* 
	ghi°‹y_roŸ
;

636 
	#ONIG_TRAVERSE_CALLBACK_AT_FIRST
 1

	)

637 
	#ONIG_TRAVERSE_CALLBACK_AT_LAST
 2

	)

638 
	#ONIG_TRAVERSE_CALLBACK_AT_BOTH
 \

639 –
ONIG_TRAVERSE_CALLBACK_AT_FIRST
 | 
ONIG_TRAVERSE_CALLBACK_AT_LAST
 )

	)

642 
	#ONIG_REGION_NOTPOS
 -1

	)

644 
ª_ªgi°îs
 
	tOnigRegi⁄
;

647 
OnigEncodög
 
	gíc
;

648 
OnigUCh¨
* 
	g∑r
;

649 
OnigUCh¨
* 
	g∑r_íd
;

650 } 
	tOnigEº‹Info
;

653 
	glowî
;

654 
	guµî
;

655 } 
	tOnigRïótR™ge
;

657 (*
	gOnigW¨nFunc
Ë
	tP_
((c⁄° * 
	ts
));

658 
⁄ig_nuŒ_w¨n
 
P_
((c⁄° * 
s
));

659 
	#ONIG_NULL_WARN
 
⁄ig_nuŒ_w¨n


	)

661 
	#ONIG_CHAR_TABLE_SIZE
 256

	)

663 
	sª_∑âîn_buf„r
 {

665 * 
	gp
;

666 
	gu£d
;

667 
	gÆloc
;

669 
	gnum_mem
;

670 
	gnum_ª≥©
;

671 
	gnum_nuŒ_check
;

672 
	gnum_comb_exp_check
;

673 
	gnum_ˇŒ
;

674 
	gˇ±uª_hi°‹y
;

675 
	gbt_mem_°¨t
;

676 
	gbt_mem_íd
;

677 
	g°ack_p›_Àvñ
;

678 
	gª≥©_ønge_Æloc
;

679 
OnigRïótR™ge
* 
	gª≥©_ønge
;

681 
OnigEncodög
 
	gíc
;

682 
OnigO±i⁄Ty≥
 
	g›ti⁄s
;

683 
OnigSy¡axTy≥
* 
	gsy¡ax
;

684 
OnigCa£FﬁdTy≥
 
	gˇ£_fﬁd_Êag
;

685 * 
	g«me_èbÀ
;

688 
	g›timize
;

689 
	gthªshﬁd_Àn
;

690 
	g™ch‹
;

691 
OnigLí
 
	g™ch‹_dmö
;

692 
OnigLí
 
	g™ch‹_dmax
;

693 
	gsub_™ch‹
;

694 *
	gexa˘
;

695 *
	gexa˘_íd
;

696 
	gm≠
[
ONIG_CHAR_TABLE_SIZE
];

697 *
	göt_m≠
;

698 *
	göt_m≠_backw¨d
;

699 
OnigLí
 
	gdmö
;

700 
OnigLí
 
	gdmax
;

703 
ª_∑âîn_buf„r
* 
	gchaö
;

704 } 
	tOnigRegexTy≥
;

706 
OnigRegexTy≥
* 
	tOnigRegex
;

708 #i‚de‡
ONIG_ESCAPE_REGEX_T_COLLISION


709 
OnigRegexTy≥
 
	tªgex_t
;

714 
	gnum_of_ñemíts
;

715 
OnigEncodög
 
	g∑âîn_íc
;

716 
OnigEncodög
 
	gèrgë_íc
;

717 
OnigSy¡axTy≥
* 
	gsy¡ax
;

718 
OnigO±i⁄Ty≥
 
	g›ti⁄
;

719 
OnigCa£FﬁdTy≥
 
	gˇ£_fﬁd_Êag
;

720 } 
	tOnigCompûeInfo
;

724 
ONIG_EXTERN


725 
⁄ig_öôülize
 
P_
((
OnigEncodög
 
ícodögs
[], 
n
));

727 
ONIG_EXTERN


728 
⁄ig_öô
 
P_
(());

729 
ONIG_EXTERN


730 
⁄ig_îr‹_code_to_°r
 
PV_
((
OnigUCh¨
* 
s
, 
îr_code
, ...));

731 
ONIG_EXTERN


732 
⁄ig_£t_w¨n_func
 
P_
((
OnigW¨nFunc
 
f
));

733 
ONIG_EXTERN


734 
⁄ig_£t_vîb_w¨n_func
 
P_
((
OnigW¨nFunc
 
f
));

735 
ONIG_EXTERN


736 
⁄ig_√w
 
P_
((
OnigRegex
*, c⁄° 
OnigUCh¨
* 
∑âîn
, c⁄° OnigUCh¨* 
∑âîn_íd
, 
OnigO±i⁄Ty≥
 
›ti⁄
, 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
sy¡ax
, 
OnigEº‹Info
* 
eöfo
));

737 
ONIG_EXTERN


738 
⁄ig_ªg_öô
 
P_
((
ªgex_t
* 
ªg
, 
OnigO±i⁄Ty≥
 
›ti⁄
, 
OnigCa£FﬁdTy≥
 
ˇ£_fﬁd_Êag
, 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
sy¡ax
));

739 
⁄ig_√w_wôhout_Æloc
 
P_
((
OnigRegex
, c⁄° 
OnigUCh¨
* 
∑âîn
, c⁄° OnigUCh¨* 
∑âîn_íd
, 
OnigO±i⁄Ty≥
 
›ti⁄
, 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
sy¡ax
, 
OnigEº‹Info
* 
eöfo
));

740 
ONIG_EXTERN


741 
⁄ig_√w_dñuxe
 
P_
((
OnigRegex
* 
ªg
, c⁄° 
OnigUCh¨
* 
∑âîn
, c⁄° OnigUCh¨* 
∑âîn_íd
, 
OnigCompûeInfo
* 
ci
, 
OnigEº‹Info
* 
eöfo
));

742 
ONIG_EXTERN


743 
⁄ig_‰ì
 
P_
((
OnigRegex
));

744 
ONIG_EXTERN


745 
⁄ig_‰ì_body
 
P_
((
OnigRegex
));

746 
ONIG_EXTERN


747 
⁄ig_sˇn
(
ªgex_t
* 
ªg
, c⁄° 
OnigUCh¨
* 
°r
, c⁄° OnigUCh¨* 
íd
, 
OnigRegi⁄
* 
ªgi⁄
, 
OnigO±i⁄Ty≥
 
›ti⁄
, (*
sˇn_ˇŒback
)(, , OnigRegi⁄*, *), * 
ˇŒback_¨g
);

748 
ONIG_EXTERN


749 
⁄ig_£¨ch
 
P_
((
OnigRegex
, c⁄° 
OnigUCh¨
* 
°r
, c⁄° OnigUCh¨* 
íd
, c⁄° OnigUCh¨* 
°¨t
, c⁄° OnigUCh¨* 
ønge
, 
OnigRegi⁄
* 
ªgi⁄
, 
OnigO±i⁄Ty≥
 
›ti⁄
));

750 
ONIG_EXTERN


751 
⁄ig_m©ch
 
P_
((
OnigRegex
, c⁄° 
OnigUCh¨
* 
°r
, c⁄° OnigUCh¨* 
íd
, c⁄° OnigUCh¨* 
©
, 
OnigRegi⁄
* 
ªgi⁄
, 
OnigO±i⁄Ty≥
 
›ti⁄
));

752 
ONIG_EXTERN


753 
OnigRegi⁄
* 
⁄ig_ªgi⁄_√w
 
P_
(());

754 
ONIG_EXTERN


755 
⁄ig_ªgi⁄_öô
 
P_
((
OnigRegi⁄
* 
ªgi⁄
));

756 
ONIG_EXTERN


757 
⁄ig_ªgi⁄_‰ì
 
P_
((
OnigRegi⁄
* 
ªgi⁄
, 
‰ì_£lf
));

758 
ONIG_EXTERN


759 
⁄ig_ªgi⁄_c›y
 
P_
((
OnigRegi⁄
* 
to
, OnigRegi⁄* 
‰om
));

760 
ONIG_EXTERN


761 
⁄ig_ªgi⁄_˛ór
 
P_
((
OnigRegi⁄
* 
ªgi⁄
));

762 
ONIG_EXTERN


763 
⁄ig_ªgi⁄_ªsize
 
P_
((
OnigRegi⁄
* 
ªgi⁄
, 
n
));

764 
ONIG_EXTERN


765 
⁄ig_ªgi⁄_£t
 
P_
((
OnigRegi⁄
* 
ªgi⁄
, 
©
, 
beg
, 
íd
));

766 
ONIG_EXTERN


767 
⁄ig_«me_to_group_numbîs
 
P_
((
OnigRegex
 
ªg
, c⁄° 
OnigUCh¨
* 
«me
, c⁄° OnigUCh¨* 
«me_íd
, ** 
nums
));

768 
ONIG_EXTERN


769 
⁄ig_«me_to_backªf_numbî
 
P_
((
OnigRegex
 
ªg
, c⁄° 
OnigUCh¨
* 
«me
, c⁄° OnigUCh¨* 
«me_íd
, 
OnigRegi⁄
 *
ªgi⁄
));

770 
ONIG_EXTERN


771 
⁄ig_f‹óch_«me
 
P_
((
OnigRegex
 
ªg
, (*
func
)(c⁄° 
OnigUCh¨
*, c⁄° OnigUCh¨*,,*,OnigRegex,*), * 
¨g
));

772 
ONIG_EXTERN


773 
⁄ig_numbî_of_«mes
 
P_
((
OnigRegex
 
ªg
));

774 
ONIG_EXTERN


775 
⁄ig_numbî_of_ˇ±uªs
 
P_
((
OnigRegex
 
ªg
));

776 
ONIG_EXTERN


777 
⁄ig_numbî_of_ˇ±uª_hi°‹õs
 
P_
((
OnigRegex
 
ªg
));

778 
ONIG_EXTERN


779 
OnigC≠tuªTªeNode
* 
⁄ig_gë_ˇ±uª_åì
 
P_
((
OnigRegi⁄
* 
ªgi⁄
));

780 
ONIG_EXTERN


781 
⁄ig_ˇ±uª_åì_åavî£
 
P_
((
OnigRegi⁄
* 
ªgi⁄
, 
©
, (*
ˇŒback_func
)(,,,,,*), * 
¨g
));

782 
ONIG_EXTERN


783 
⁄ig_n⁄ame_group_ˇ±uª_is_a˘ive
 
P_
((
OnigRegex
 
ªg
));

784 
ONIG_EXTERN


785 
OnigEncodög
 
⁄ig_gë_ícodög
 
P_
((
OnigRegex
 
ªg
));

786 
ONIG_EXTERN


787 
OnigO±i⁄Ty≥
 
⁄ig_gë_›ti⁄s
 
P_
((
OnigRegex
 
ªg
));

788 
ONIG_EXTERN


789 
OnigCa£FﬁdTy≥
 
⁄ig_gë_ˇ£_fﬁd_Êag
 
P_
((
OnigRegex
 
ªg
));

790 
ONIG_EXTERN


791 
OnigSy¡axTy≥
* 
⁄ig_gë_sy¡ax
 
P_
((
OnigRegex
 
ªg
));

792 
ONIG_EXTERN


793 
⁄ig_£t_deÁu…_sy¡ax
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

794 
ONIG_EXTERN


795 
⁄ig_c›y_sy¡ax
 
P_
((
OnigSy¡axTy≥
* 
to
, OnigSy¡axTy≥* 
‰om
));

796 
ONIG_EXTERN


797 
⁄ig_gë_sy¡ax_›
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

798 
ONIG_EXTERN


799 
⁄ig_gë_sy¡ax_›2
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

800 
ONIG_EXTERN


801 
⁄ig_gë_sy¡ax_behavi‹
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

802 
ONIG_EXTERN


803 
OnigO±i⁄Ty≥
 
⁄ig_gë_sy¡ax_›ti⁄s
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
));

804 
ONIG_EXTERN


805 
⁄ig_£t_sy¡ax_›
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
, 
›
));

806 
ONIG_EXTERN


807 
⁄ig_£t_sy¡ax_›2
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
, 
›2
));

808 
ONIG_EXTERN


809 
⁄ig_£t_sy¡ax_behavi‹
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
, 
behavi‹
));

810 
ONIG_EXTERN


811 
⁄ig_£t_sy¡ax_›ti⁄s
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
, 
OnigO±i⁄Ty≥
 
›ti⁄s
));

812 
ONIG_EXTERN


813 
⁄ig_£t_mëa_ch¨
 
P_
((
OnigSy¡axTy≥
* 
sy¡ax
, 
wh©
, 
OnigCodePoöt
 
code
));

814 
ONIG_EXTERN


815 
⁄ig_c›y_ícodög
 
P_
((
OnigEncodög
 
to
, OnigEncodög 
‰om
));

816 
ONIG_EXTERN


817 
OnigCa£FﬁdTy≥
 
⁄ig_gë_deÁu…_ˇ£_fﬁd_Êag
 
P_
(());

818 
ONIG_EXTERN


819 
⁄ig_£t_deÁu…_ˇ£_fﬁd_Êag
 
P_
((
OnigCa£FﬁdTy≥
 
ˇ£_fﬁd_Êag
));

820 
ONIG_EXTERN


821 
⁄ig_gë_m©ch_°ack_limô_size
 
P_
(());

822 
ONIG_EXTERN


823 
⁄ig_£t_m©ch_°ack_limô_size
 
P_
((
size
));

824 
ONIG_EXTERN


825 
⁄ig_gë_∑r£_dïth_limô
 
P_
(());

826 
ONIG_EXTERN


827 
⁄ig_£t_∑r£_dïth_limô
 
P_
((
dïth
));

828 
ONIG_EXTERN


829 
⁄ig_unicode_deföe_u£r_¥›îty
 
P_
((c⁄° * 
«me
, 
OnigCodePoöt
* 
ønges
));

830 
ONIG_EXTERN


831 
⁄ig_íd
 
P_
(());

832 
ONIG_EXTERN


833 c⁄° * 
⁄ig_vîsi⁄
 
P_
(());

834 
ONIG_EXTERN


835 c⁄° * 
⁄ig_c›yright
 
P_
(());

837 #ifde‡
__˝lu•lus


	@modules/oniguruma/src/regcomp.c

30 
	~"ªg∑r£.h
"

32 
OnigCa£FﬁdTy≥
 
	gOnigDeÁu…Ca£FﬁdFœg
 = 
ONIGENC_CASE_FOLD_MIN
;

34 
OnigCa£FﬁdTy≥


35 
	$⁄ig_gë_deÁu…_ˇ£_fﬁd_Êag
()

37  
OnigDeÁu…Ca£FﬁdFœg
;

38 
	}
}

41 
	$⁄ig_£t_deÁu…_ˇ£_fﬁd_Êag
(
OnigCa£FﬁdTy≥
 
ˇ£_fﬁd_Êag
)

43 
OnigDeÁu…Ca£FﬁdFœg
 = 
ˇ£_fﬁd_Êag
;

45 
	}
}

48 #i‚de‡
PLATFORM_UNALIGNED_WORD_ACCESS


49 
PadBuf
[
WORD_ALIGNMENT_SIZE
];

52 
UCh¨
*

53 
	$°r_dup
(
UCh¨
* 
s
, UCh¨* 
íd
)

55 
Àn
 = 
íd
 - 
s
;

57 i‡(
Àn
 > 0) {

58 
UCh¨
* 
r
 = (UCh¨* )
	`xmÆloc
(
Àn
 + 1);

59 
	`CHECK_NULL_RETURN
(
r
);

60 
	`xmem˝y
(
r
, 
s
, 
Àn
);

61 
r
[
Àn
] = (
UCh¨
 )0;

62  
r
;

64  
NULL
;

65 
	}
}

68 
	$sw≠_node
(
Node
* 
a
, Node* 
b
)

70 
Node
 
c
;

71 
c
 = *
a
; *®*
b
; *b = c;

73 i‡(
	`NTYPE
(
a
Ë=
NT_STR
) {

74 
SåNode
* 
¢
 = 
	`NSTR
(
a
);

75 i‡(
¢
->
ˇ∑
 == 0) {

76 
Àn
 = 
¢
->
íd
 - sn->
s
;

77 
¢
->
s
 = sn->
buf
;

78 
¢
->
íd
 = sn->
s
 + 
Àn
;

82 i‡(
	`NTYPE
(
b
Ë=
NT_STR
) {

83 
SåNode
* 
¢
 = 
	`NSTR
(
b
);

84 i‡(
¢
->
ˇ∑
 == 0) {

85 
Àn
 = 
¢
->
íd
 - sn->
s
;

86 
¢
->
s
 = sn->
buf
;

87 
¢
->
íd
 = sn->
s
 + 
Àn
;

90 
	}
}

92 
OnigLí


93 
	$di°™˚_add
(
OnigLí
 
d1
, OnigLí 
d2
)

95 i‡(
d1
 =
ONIG_INFINITE_DISTANCE
 || 
d2
 == ONIG_INFINITE_DISTANCE)

96  
ONIG_INFINITE_DISTANCE
;

98 i‡(
d1
 <
ONIG_INFINITE_DISTANCE
 - 
d2
)  d1 + d2;

99  
ONIG_INFINITE_DISTANCE
;

101 
	}
}

103 
OnigLí


104 
	$di°™˚_mu…ùly
(
OnigLí
 
d
, 
m
)

106 i‡(
m
 == 0)  0;

108 i‡(
d
 < 
ONIG_INFINITE_DISTANCE
 / 
m
)

109  
d
 * 
m
;

111  
ONIG_INFINITE_DISTANCE
;

112 
	}
}

115 
	$bô£t_is_em±y
(
BôSëRef
 
bs
)

117 
i
;

118 
i
 = 0; i < ()
BITSET_SIZE
; i++) {

119 i‡(
bs
[
i
] != 0)  0;

122 
	}
}

124 #ifde‡
ONIG_DEBUG


126 
	$bô£t_⁄_num
(
BôSëRef
 
bs
)

128 
i
, 
n
;

130 
n
 = 0;

131 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

132 i‡(
	`BITSET_AT
(
bs
, 
i
)Ë
n
++;

134  
n
;

135 
	}
}

139 
	$⁄ig_bbuf_öô
(
BBuf
* 
buf
, 
size
)

141 i‡(
size
 <= 0) {

142 
size
 = 0;

143 
buf
->
p
 = 
NULL
;

146 
buf
->
p
 = (
UCh¨
* )
	`xmÆloc
(
size
);

147 i‡(
	`IS_NULL
(
buf
->
p
)Ë(
ONIGERR_MEMORY
);

150 
buf
->
Æloc
 = 
size
;

151 
buf
->
u£d
 = 0;

153 
	}
}

156 #ifde‡
USE_SUBEXP_CALL


159 
	$un£t_addr_li°_öô
(
Un£tAddrLi°
* 
u¶i°
, 
size
)

161 
Un£tAddr
* 
p
;

163 
p
 = (
Un£tAddr
* )
	`xmÆloc
((Un£tAddr)* 
size
);

164 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

165 
u¶i°
->
num
 = 0;

166 
u¶i°
->
Æloc
 = 
size
;

167 
u¶i°
->
us
 = 
p
;

169 
	}
}

172 
	$un£t_addr_li°_íd
(
Un£tAddrLi°
* 
u¶i°
)

174 i‡(
	`IS_NOT_NULL
(
u¶i°
->
us
))

175 
	`x‰ì
(
u¶i°
->
us
);

176 
	}
}

179 
	$un£t_addr_li°_add
(
Un£tAddrLi°
* 
u¶i°
, 
off£t
, 
_Node
* 
node
)

181 
Un£tAddr
* 
p
;

182 
size
;

184 i‡(
u¶i°
->
num
 >u¶i°->
Æloc
) {

185 
size
 = 
u¶i°
->
Æloc
 * 2;

186 
p
 = (
Un£tAddr
* )
	`xªÆloc
(
u¶i°
->
us
, (Un£tAddrË* 
size
);

187 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

188 
u¶i°
->
Æloc
 = 
size
;

189 
u¶i°
->
us
 = 
p
;

192 
u¶i°
->
us
[u¶i°->
num
].
off£t
 = offset;

193 
u¶i°
->
us
[u¶i°->
num
].
èrgë
 = 
node
;

194 
u¶i°
->
num
++;

196 
	}
}

201 
	$add_›code
(
ªgex_t
* 
ªg
, 
›code
)

203 
	`BBUF_ADD1
(
ªg
, 
›code
);

205 
	}
}

207 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


209 
	$add_°©e_check_num
(
ªgex_t
* 
ªg
, 
num
)

211 
SèãCheckNumTy≥
 
n
 = (SèãCheckNumTy≥ )
num
;

213 
	`BBUF_ADD
(
ªg
, &
n
, 
SIZE_STATE_CHECK_NUM
);

215 
	}
}

219 
	$add_ªl_addr
(
ªgex_t
* 
ªg
, 
addr
)

221 
RñAddrTy≥
 
ø
 = (RñAddrTy≥ )
addr
;

223 
	`BBUF_ADD
(
ªg
, &
ø
, 
SIZE_RELADDR
);

225 
	}
}

228 
	$add_abs_addr
(
ªgex_t
* 
ªg
, 
addr
)

230 
AbsAddrTy≥
 
ø
 = (AbsAddrTy≥ )
addr
;

232 
	`BBUF_ADD
(
ªg
, &
ø
, 
SIZE_ABSADDR
);

234 
	}
}

237 
	$add_Àngth
(
ªgex_t
* 
ªg
, 
Àn
)

239 
LígthTy≥
 
l
 = (LígthTy≥ )
Àn
;

241 
	`BBUF_ADD
(
ªg
, &
l
, 
SIZE_LENGTH
);

243 
	}
}

246 
	$add_mem_num
(
ªgex_t
* 
ªg
, 
num
)

248 
MemNumTy≥
 
n
 = (MemNumTy≥ )
num
;

250 
	`BBUF_ADD
(
ªg
, &
n
, 
SIZE_MEMNUM
);

252 
	}
}

255 
	$add_poöãr
(
ªgex_t
* 
ªg
, * 
addr
)

257 
PoöãrTy≥
 
±r
 = (PoöãrTy≥ )
addr
;

259 
	`BBUF_ADD
(
ªg
, &
±r
, 
SIZE_POINTER
);

261 
	}
}

264 
	$add_›ti⁄
(
ªgex_t
* 
ªg
, 
OnigO±i⁄Ty≥
 
›ti⁄
)

266 
	`BBUF_ADD
(
ªg
, &
›ti⁄
, 
SIZE_OPTION
);

268 
	}
}

271 
	$add_›code_ªl_addr
(
ªgex_t
* 
ªg
, 
›code
, 
addr
)

273 
r
;

275 
r
 = 
	`add_›code
(
ªg
, 
›code
);

276 i‡(
r
) Ñ;

277 
r
 = 
	`add_ªl_addr
(
ªg
, 
addr
);

278  
r
;

279 
	}
}

282 
	$add_byãs
(
ªgex_t
* 
ªg
, 
UCh¨
* 
byãs
, 
Àn
)

284 
	`BBUF_ADD
(
ªg
, 
byãs
, 
Àn
);

286 
	}
}

289 
	$add_bô£t
(
ªgex_t
* 
ªg
, 
BôSëRef
 
bs
)

291 
	`BBUF_ADD
(
ªg
, 
bs
, 
SIZE_BITSET
);

293 
	}
}

296 
	$add_›code_›ti⁄
(
ªgex_t
* 
ªg
, 
›code
, 
OnigO±i⁄Ty≥
 
›ti⁄
)

298 
r
;

300 
r
 = 
	`add_›code
(
ªg
, 
›code
);

301 i‡(
r
) Ñ;

302 
r
 = 
	`add_›ti⁄
(
ªg
, 
›ti⁄
);

303  
r
;

304 
	}
}

306 
compûe_Àngth_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
);

307 
compûe_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
);

310 
	#IS_NEED_STR_LEN_OP_EXACT
(
›
) \

311 ((
›
Ë=
OP_EXACTN
 || (›Ë=
OP_EXACTMB2N
 ||\

312 (
›
Ë=
OP_EXACTMB3N
 || (›Ë=
OP_EXACTMBN
 || (›Ë=
OP_EXACTN_IC
)

	)

315 
	$£À˘_°r_›code
(
mb_Àn
, 
°r_Àn
, 
ign‹e_ˇ£
)

317 
›
;

319 i‡(
ign‹e_ˇ£
) {

320 
°r_Àn
) {

321 1: 
›
 = 
OP_EXACT1_IC
; ;

322 : 
›
 = 
OP_EXACTN_IC
; ;

326 
mb_Àn
) {

328 
°r_Àn
) {

329 1: 
›
 = 
OP_EXACT1
; ;

330 2: 
›
 = 
OP_EXACT2
; ;

331 3: 
›
 = 
OP_EXACT3
; ;

332 4: 
›
 = 
OP_EXACT4
; ;

333 5: 
›
 = 
OP_EXACT5
; ;

334 : 
›
 = 
OP_EXACTN
; ;

339 
°r_Àn
) {

340 1: 
›
 = 
OP_EXACTMB2N1
; ;

341 2: 
›
 = 
OP_EXACTMB2N2
; ;

342 3: 
›
 = 
OP_EXACTMB2N3
; ;

343 : 
›
 = 
OP_EXACTMB2N
; ;

348 
›
 = 
OP_EXACTMB3N
;

352 
›
 = 
OP_EXACTMBN
;

356  
›
;

357 
	}
}

360 
	$compûe_åì_em±y_check
(
Node
* 
node
, 
ªgex_t
* 
ªg
, 
em±y_öfo
)

362 
r
;

363 
ßved_num_nuŒ_check
 = 
ªg
->
num_nuŒ_check
;

365 i‡(
em±y_öfo
 != 0) {

366 
r
 = 
	`add_›code
(
ªg
, 
OP_NULL_CHECK_START
);

367 i‡(
r
) Ñ;

368 
r
 = 
	`add_mem_num
(
ªg
,Ñeg->
num_nuŒ_check
);

369 i‡(
r
) Ñ;

370 
ªg
->
num_nuŒ_check
++;

373 
r
 = 
	`compûe_åì
(
node
, 
ªg
);

374 i‡(
r
) Ñ;

376 i‡(
em±y_öfo
 != 0) {

377 i‡(
em±y_öfo
 =
NQ_TARGET_IS_EMPTY
)

378 
r
 = 
	`add_›code
(
ªg
, 
OP_NULL_CHECK_END
);

379 i‡(
em±y_öfo
 =
NQ_TARGET_IS_EMPTY_MEM
)

380 
r
 = 
	`add_›code
(
ªg
, 
OP_NULL_CHECK_END_MEMST
);

381 i‡(
em±y_öfo
 =
NQ_TARGET_IS_EMPTY_REC
)

382 
r
 = 
	`add_›code
(
ªg
, 
OP_NULL_CHECK_END_MEMST_PUSH
);

384 i‡(
r
) Ñ;

385 
r
 = 
	`add_mem_num
(
ªg
, 
ßved_num_nuŒ_check
);

387  
r
;

388 
	}
}

390 #ifde‡
USE_SUBEXP_CALL


392 
	$compûe_ˇŒ
(
CÆlNode
* 
node
, 
ªgex_t
* 
ªg
)

394 
r
;

396 
r
 = 
	`add_›code
(
ªg
, 
OP_CALL
);

397 i‡(
r
) Ñ;

398 
r
 = 
	`un£t_addr_li°_add
(
node
->
un£t_addr_li°
, 
	`BBUF_GET_OFFSET_POS
(
ªg
),

399 
node
->
èrgë
);

400 i‡(
r
) Ñ;

401 
r
 = 
	`add_abs_addr
(
ªg
, 0 );

402  
r
;

403 
	}
}

407 
	$compûe_åì_n_times
(
Node
* 
node
, 
n
, 
ªgex_t
* 
ªg
)

409 
i
, 
r
;

411 
i
 = 0; i < 
n
; i++) {

412 
r
 = 
	`compûe_åì
(
node
, 
ªg
);

413 i‡(
r
) Ñ;

416 
	}
}

419 
	$add_compûe_°rög_Àngth
(
UCh¨
* 
s
 
ARG_UNUSED
, 
mb_Àn
, 
°r_Àn
,

420 
ªgex_t
* 
ªg
 
ARG_UNUSED
, 
ign‹e_ˇ£
)

422 
Àn
;

423 
›
 = 
	`£À˘_°r_›code
(
mb_Àn
, 
°r_Àn
, 
ign‹e_ˇ£
);

425 
Àn
 = 
SIZE_OPCODE
;

427 i‡(
›
 =
OP_EXACTMBN
Ë
Àn
 +
SIZE_LENGTH
;

428 i‡(
	`IS_NEED_STR_LEN_OP_EXACT
(
›
))

429 
Àn
 +
SIZE_LENGTH
;

431 
Àn
 +
mb_Àn
 * 
°r_Àn
;

432  
Àn
;

433 
	}
}

436 
	$add_compûe_°rög
(
UCh¨
* 
s
, 
mb_Àn
, 
°r_Àn
,

437 
ªgex_t
* 
ªg
, 
ign‹e_ˇ£
)

439 
›
 = 
	`£À˘_°r_›code
(
mb_Àn
, 
°r_Àn
, 
ign‹e_ˇ£
);

440 
	`add_›code
(
ªg
, 
›
);

442 i‡(
›
 =
OP_EXACTMBN
)

443 
	`add_Àngth
(
ªg
, 
mb_Àn
);

445 i‡(
	`IS_NEED_STR_LEN_OP_EXACT
(
›
)) {

446 i‡(
›
 =
OP_EXACTN_IC
)

447 
	`add_Àngth
(
ªg
, 
mb_Àn
 * 
°r_Àn
);

449 
	`add_Àngth
(
ªg
, 
°r_Àn
);

452 
	`add_byãs
(
ªg
, 
s
, 
mb_Àn
 * 
°r_Àn
);

454 
	}
}

458 
	$compûe_Àngth_°rög_node
(
Node
* 
node
, 
ªgex_t
* 
ªg
)

460 
æí
, 
r
, 
Àn
, 
¥ev_Àn
, 
¶í
, 
ambig
;

461 
OnigEncodög
 
íc
 = 
ªg
->enc;

462 
UCh¨
 *
p
, *
¥ev
;

463 
SåNode
* 
¢
;

465 
¢
 = 
	`NSTR
(
node
);

466 i‡(
¢
->
íd
 <¢->
s
)

469 
ambig
 = 
	`NSTRING_IS_AMBIG
(
node
);

471 
p
 = 
¥ev
 = 
¢
->
s
;

472 
¥ev_Àn
 = 
	`í˛í
(
íc
, 
p
);

473 
p
 +
¥ev_Àn
;

474 
¶í
 = 1;

475 
æí
 = 0;

477 ; 
p
 < 
¢
->
íd
; ) {

478 
Àn
 = 
	`í˛í
(
íc
, 
p
);

479 i‡(
Àn
 =
¥ev_Àn
) {

480 
¶í
++;

483 
r
 = 
	`add_compûe_°rög_Àngth
(
¥ev
, 
¥ev_Àn
, 
¶í
, 
ªg
, 
ambig
);

484 
æí
 +
r
;

485 
¥ev
 = 
p
;

486 
¶í
 = 1;

487 
¥ev_Àn
 = 
Àn
;

489 
p
 +
Àn
;

491 
r
 = 
	`add_compûe_°rög_Àngth
(
¥ev
, 
¥ev_Àn
, 
¶í
, 
ªg
, 
ambig
);

492 
æí
 +
r
;

493  
æí
;

494 
	}
}

497 
	$compûe_Àngth_°rög_øw_node
(
SåNode
* 
¢
, 
ªgex_t
* 
ªg
)

499 i‡(
¢
->
íd
 <¢->
s
)

502  
	`add_compûe_°rög_Àngth
(
¢
->
s
, 1 , sn->
íd
 - sn->s, 
ªg
, 0);

503 
	}
}

506 
	$compûe_°rög_node
(
Node
* 
node
, 
ªgex_t
* 
ªg
)

508 
r
, 
Àn
, 
¥ev_Àn
, 
¶í
, 
ambig
;

509 
OnigEncodög
 
íc
 = 
ªg
->enc;

510 
UCh¨
 *
p
, *
¥ev
, *
íd
;

511 
SåNode
* 
¢
;

513 
¢
 = 
	`NSTR
(
node
);

514 i‡(
¢
->
íd
 <¢->
s
)

517 
íd
 = 
¢
->end;

518 
ambig
 = 
	`NSTRING_IS_AMBIG
(
node
);

520 
p
 = 
¥ev
 = 
¢
->
s
;

521 
¥ev_Àn
 = 
	`í˛í
(
íc
, 
p
);

522 
p
 +
¥ev_Àn
;

523 
¶í
 = 1;

525 ; 
p
 < 
íd
; ) {

526 
Àn
 = 
	`í˛í
(
íc
, 
p
);

527 i‡(
Àn
 =
¥ev_Àn
) {

528 
¶í
++;

531 
r
 = 
	`add_compûe_°rög
(
¥ev
, 
¥ev_Àn
, 
¶í
, 
ªg
, 
ambig
);

532 i‡(
r
) Ñ;

534 
¥ev
 = 
p
;

535 
¶í
 = 1;

536 
¥ev_Àn
 = 
Àn
;

539 
p
 +
Àn
;

541  
	`add_compûe_°rög
(
¥ev
, 
¥ev_Àn
, 
¶í
, 
ªg
, 
ambig
);

542 
	}
}

545 
	$compûe_°rög_øw_node
(
SåNode
* 
¢
, 
ªgex_t
* 
ªg
)

547 i‡(
¢
->
íd
 <¢->
s
)

550  
	`add_compûe_°rög
(
¢
->
s
, 1 , sn->
íd
 - sn->s, 
ªg
, 0);

551 
	}
}

554 
	$add_mu…i_byã_c˛ass
(
BBuf
* 
mbuf
, 
ªgex_t
* 
ªg
)

556 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


557 
	`add_Àngth
(
ªg
, 
mbuf
->
u£d
);

558  
	`add_byãs
(
ªg
, 
mbuf
->
p
, mbuf->
u£d
);

560 
r
, 
∑d_size
;

561 
UCh¨
* 
p
 = 
	`BBUF_GET_ADD_ADDRESS
(
ªg
Ë+ 
SIZE_LENGTH
;

563 
	`GET_ALIGNMENT_PAD_SIZE
(
p
, 
∑d_size
);

564 
	`add_Àngth
(
ªg
, 
mbuf
->
u£d
 + (
WORD_ALIGNMENT_SIZE
 - 1));

565 i‡(
∑d_size
 !0Ë
	`add_byãs
(
ªg
, 
PadBuf
,Öad_size);

567 
r
 = 
	`add_byãs
(
ªg
, 
mbuf
->
p
, mbuf->
u£d
);

570 
∑d_size
 = (
WORD_ALIGNMENT_SIZE
 - 1) -Öad_size;

571 i‡(
∑d_size
 !0Ë
	`add_byãs
(
ªg
, 
PadBuf
,Öad_size);

572  
r
;

574 
	}
}

577 
	$compûe_Àngth_c˛ass_node
(
CCœssNode
* 
cc
, 
ªgex_t
* 
ªg
)

579 
Àn
;

581 i‡(
	`IS_NCCLASS_SHARE
(
cc
)) {

582 
Àn
 = 
SIZE_OPCODE
 + 
SIZE_POINTER
;

583  
Àn
;

586 i‡(
	`IS_NULL
(
cc
->
mbuf
)) {

587 
Àn
 = 
SIZE_OPCODE
 + 
SIZE_BITSET
;

590 i‡(
	`ONIGENC_MBC_MINLEN
(
ªg
->
íc
Ë> 1 || 
	`bô£t_is_em±y
(
cc
->
bs
)) {

591 
Àn
 = 
SIZE_OPCODE
;

594 
Àn
 = 
SIZE_OPCODE
 + 
SIZE_BITSET
;

596 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


597 
Àn
 +
SIZE_LENGTH
 + 
cc
->
mbuf
->
u£d
;

599 
Àn
 +
SIZE_LENGTH
 + 
cc
->
mbuf
->
u£d
 + (
WORD_ALIGNMENT_SIZE
 - 1);

603  
Àn
;

604 
	}
}

607 
	$compûe_c˛ass_node
(
CCœssNode
* 
cc
, 
ªgex_t
* 
ªg
)

609 
r
;

611 i‡(
	`IS_NCCLASS_SHARE
(
cc
)) {

612 
	`add_›code
(
ªg
, 
OP_CCLASS_NODE
);

613 
r
 = 
	`add_poöãr
(
ªg
, 
cc
);

614  
r
;

617 i‡(
	`IS_NULL
(
cc
->
mbuf
)) {

618 i‡(
	`IS_NCCLASS_NOT
(
cc
))

619 
	`add_›code
(
ªg
, 
OP_CCLASS_NOT
);

621 
	`add_›code
(
ªg
, 
OP_CCLASS
);

623 
r
 = 
	`add_bô£t
(
ªg
, 
cc
->
bs
);

626 i‡(
	`ONIGENC_MBC_MINLEN
(
ªg
->
íc
Ë> 1 || 
	`bô£t_is_em±y
(
cc
->
bs
)) {

627 i‡(
	`IS_NCCLASS_NOT
(
cc
))

628 
	`add_›code
(
ªg
, 
OP_CCLASS_MB_NOT
);

630 
	`add_›code
(
ªg
, 
OP_CCLASS_MB
);

632 
r
 = 
	`add_mu…i_byã_c˛ass
(
cc
->
mbuf
, 
ªg
);

635 i‡(
	`IS_NCCLASS_NOT
(
cc
))

636 
	`add_›code
(
ªg
, 
OP_CCLASS_MIX_NOT
);

638 
	`add_›code
(
ªg
, 
OP_CCLASS_MIX
);

640 
r
 = 
	`add_bô£t
(
ªg
, 
cc
->
bs
);

641 i‡(
r
) Ñ;

642 
r
 = 
	`add_mu…i_byã_c˛ass
(
cc
->
mbuf
, 
ªg
);

646  
r
;

647 
	}
}

650 
	$íåy_ª≥©_ønge
(
ªgex_t
* 
ªg
, 
id
, 
lowî
, 
uµî
)

652 
	#REPEAT_RANGE_ALLOC
 4

	)

654 
OnigRïótR™ge
* 
p
;

656 i‡(
ªg
->
ª≥©_ønge_Æloc
 == 0) {

657 
p
 = (
OnigRïótR™ge
* )
	`xmÆloc
((OnigRïótR™geË* 
REPEAT_RANGE_ALLOC
);

658 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

659 
ªg
->
ª≥©_ønge
 = 
p
;

660 
ªg
->
ª≥©_ønge_Æloc
 = 
REPEAT_RANGE_ALLOC
;

662 i‡(
ªg
->
ª≥©_ønge_Æloc
 <
id
) {

663 
n
;

664 
n
 = 
ªg
->
ª≥©_ønge_Æloc
 + 
REPEAT_RANGE_ALLOC
;

665 
p
 = (
OnigRïótR™ge
* )
	`xªÆloc
(
ªg
->
ª≥©_ønge
,

666 (
OnigRïótR™ge
Ë* 
n
);

667 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

668 
ªg
->
ª≥©_ønge
 = 
p
;

669 
ªg
->
ª≥©_ønge_Æloc
 = 
n
;

672 
p
 = 
ªg
->
ª≥©_ønge
;

675 
p
[
id
].
lowî
 =Üower;

676 
p
[
id
].
uµî
 = (
	`IS_REPEAT_INFINITE
(upper) ? 0x7fffffff : upper);

678 
	}
}

681 
	$compûe_ønge_ª≥©_node
(
Qt‰Node
* 
qn
, 
èrgë_Àn
, 
em±y_öfo
,

682 
ªgex_t
* 
ªg
)

684 
r
;

685 
num_ª≥©
 = 
ªg
->num_repeat;

687 
r
 = 
	`add_›code
(
ªg
, 
qn
->
gªedy
 ? 
OP_REPEAT
 : 
OP_REPEAT_NG
);

688 i‡(
r
) Ñ;

689 
r
 = 
	`add_mem_num
(
ªg
, 
num_ª≥©
);

690 
ªg
->
num_ª≥©
++;

691 i‡(
r
) Ñ;

692 
r
 = 
	`add_ªl_addr
(
ªg
, 
èrgë_Àn
 + 
SIZE_OP_REPEAT_INC
);

693 i‡(
r
) Ñ;

695 
r
 = 
	`íåy_ª≥©_ønge
(
ªg
, 
num_ª≥©
, 
qn
->
lowî
, qn->
uµî
);

696 i‡(
r
) Ñ;

698 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

699 i‡(
r
) Ñ;

702 #ifde‡
USE_SUBEXP_CALL


703 
ªg
->
num_ˇŒ
 > 0 ||

705 
	`IS_QUANTIFIER_IN_REPEAT
(
qn
)) {

706 
r
 = 
	`add_›code
(
ªg
, 
qn
->
gªedy
 ? 
OP_REPEAT_INC_SG
 : 
OP_REPEAT_INC_NG_SG
);

709 
r
 = 
	`add_›code
(
ªg
, 
qn
->
gªedy
 ? 
OP_REPEAT_INC
 : 
OP_REPEAT_INC_NG
);

711 i‡(
r
) Ñ;

712 
r
 = 
	`add_mem_num
(
ªg
, 
num_ª≥©
);

713  
r
;

714 
	}
}

717 
	$is_™ych¨_°¨_qu™tifõr
(
Qt‰Node
* 
qn
)

719 i‡(
qn
->
gªedy
 && 
	`IS_REPEAT_INFINITE
(qn->
uµî
) &&

720 
	`NTYPE
(
qn
->
èrgë
Ë=
NT_CANY
)

724 
	}
}

726 
	#QUANTIFIER_EXPAND_LIMIT_SIZE
 50

	)

727 
	#CKN_ON
 (
ckn
 > 0)

	)

729 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


732 
	$compûe_Àngth_qu™tifõr_node
(
Qt‰Node
* 
qn
, 
ªgex_t
* 
ªg
)

734 
Àn
, 
mod_éí
, 
ckÀn
;

735 
ckn
;

736 
öföôe
 = 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
);

737 
em±y_öfo
 = 
qn
->
èrgë_em±y_öfo
;

738 
éí
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

740 i‡(
éí
 < 0) Ålen;

742 
ckn
 = ((
ªg
->
num_comb_exp_check
 > 0Ë? 
qn
->
comb_exp_check_num
 : 0);

744 
ckÀn
 = (
CKN_ON
 ? 
SIZE_STATE_CHECK_NUM
: 0);

747 i‡(
	`NTYPE
(
qn
->
èrgë
Ë=
NT_CANY
) {

748 i‡(
qn
->
gªedy
 && 
öföôe
) {

749 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
Ë&& !
CKN_ON
)

750  
SIZE_OP_ANYCHAR_STAR_PEEK_NEXT
 + 
éí
 * 
qn
->
lowî
 + 
ckÀn
;

752  
SIZE_OP_ANYCHAR_STAR
 + 
éí
 * 
qn
->
lowî
 + 
ckÀn
;

756 i‡(
em±y_öfo
 != 0)

757 
mod_éí
 = 
éí
 + (
SIZE_OP_NULL_CHECK_START
 + 
SIZE_OP_NULL_CHECK_END
);

759 
mod_éí
 = 
éí
;

761 i‡(
öföôe
 && 
qn
->
lowî
 <= 1) {

762 i‡(
qn
->
gªedy
) {

763 i‡(
qn
->
lowî
 == 1)

764 
Àn
 = 
SIZE_OP_JUMP
;

766 
Àn
 = 0;

768 
Àn
 +
SIZE_OP_PUSH
 + 
ckÀn
 + 
mod_éí
 + 
SIZE_OP_JUMP
;

771 i‡(
qn
->
lowî
 == 0)

772 
Àn
 = 
SIZE_OP_JUMP
;

774 
Àn
 = 0;

776 
Àn
 +
mod_éí
 + 
SIZE_OP_PUSH
 + 
ckÀn
;

779 i‡(
qn
->
uµî
 == 0) {

780 i‡(
qn
->
is_ª„ªd
 != 0)

781 
Àn
 = 
SIZE_OP_JUMP
 + 
éí
;

783 
Àn
 = 0;

785 i‡(
qn
->
uµî
 =1 && qn->
gªedy
) {

786 i‡(
qn
->
lowî
 == 0) {

787 i‡(
CKN_ON
) {

788 
Àn
 = 
SIZE_OP_STATE_CHECK_PUSH
 + 
éí
;

791 
Àn
 = 
SIZE_OP_PUSH
 + 
éí
;

795 
Àn
 = 
éí
;

798 i‡(!
qn
->
gªedy
 && qn->
uµî
 =1 && qn->
lowî
 == 0) {

799 
Àn
 = 
SIZE_OP_PUSH
 + 
ckÀn
 + 
SIZE_OP_JUMP
 + 
éí
;

802 
Àn
 = 
SIZE_OP_REPEAT_INC


803 + 
mod_éí
 + 
SIZE_OPCODE
 + 
SIZE_RELADDR
 + 
SIZE_MEMNUM
;

804 i‡(
CKN_ON
)

805 
Àn
 +
SIZE_OP_STATE_CHECK
;

808  
Àn
;

809 
	}
}

812 
	$compûe_qu™tifõr_node
(
Qt‰Node
* 
qn
, 
ªgex_t
* 
ªg
)

814 
r
, 
mod_éí
;

815 
ckn
;

816 
öföôe
 = 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
);

817 
em±y_öfo
 = 
qn
->
èrgë_em±y_öfo
;

818 
éí
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

820 i‡(
éí
 < 0) Ålen;

822 
ckn
 = ((
ªg
->
num_comb_exp_check
 > 0Ë? 
qn
->
comb_exp_check_num
 : 0);

824 i‡(
	`is_™ych¨_°¨_qu™tifõr
(
qn
)) {

825 
r
 = 
	`compûe_åì_n_times
(
qn
->
èrgë
, qn->
lowî
, 
ªg
);

826 i‡(
r
) Ñ;

827 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
Ë&& !
CKN_ON
) {

828 i‡(
	`IS_MULTILINE
(
ªg
->
›ti⁄s
))

829 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR_ML_STAR_PEEK_NEXT
);

831 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR_STAR_PEEK_NEXT
);

832 i‡(
r
) Ñ;

833 i‡(
CKN_ON
) {

834 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

835 i‡(
r
) Ñ;

838  
	`add_byãs
(
ªg
, 
	`NSTR
(
qn
->
√xt_hód_exa˘
)->
s
, 1);

841 i‡(
	`IS_MULTILINE
(
ªg
->
›ti⁄s
)) {

842 
r
 = 
	`add_›code
(
ªg
, (
CKN_ON
 ?

843 
OP_STATE_CHECK_ANYCHAR_ML_STAR


844 : 
OP_ANYCHAR_ML_STAR
));

847 
r
 = 
	`add_›code
(
ªg
, (
CKN_ON
 ?

848 
OP_STATE_CHECK_ANYCHAR_STAR


849 : 
OP_ANYCHAR_STAR
));

851 i‡(
r
) Ñ;

852 i‡(
CKN_ON
)

853 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

855  
r
;

859 i‡(
em±y_öfo
 != 0)

860 
mod_éí
 = 
éí
 + (
SIZE_OP_NULL_CHECK_START
 + 
SIZE_OP_NULL_CHECK_END
);

862 
mod_éí
 = 
éí
;

864 i‡(
öföôe
 && 
qn
->
lowî
 <= 1) {

865 i‡(
qn
->
gªedy
) {

866 i‡(
qn
->
lowî
 == 1) {

867 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

868 (
CKN_ON
 ? 
SIZE_OP_STATE_CHECK_PUSH
 : 
SIZE_OP_PUSH
));

869 i‡(
r
) Ñ;

872 i‡(
CKN_ON
) {

873 
r
 = 
	`add_›code
(
ªg
, 
OP_STATE_CHECK_PUSH
);

874 i‡(
r
) Ñ;

875 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

876 i‡(
r
) Ñ;

877 
r
 = 
	`add_ªl_addr
(
ªg
, 
mod_éí
 + 
SIZE_OP_JUMP
);

880 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
mod_éí
 + 
SIZE_OP_JUMP
);

882 i‡(
r
) Ñ;

883 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

884 i‡(
r
) Ñ;

885 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

886 -(
mod_éí
 + ()
SIZE_OP_JUMP


887 + ()(
CKN_ON
 ? 
SIZE_OP_STATE_CHECK_PUSH
 : 
SIZE_OP_PUSH
)));

890 i‡(
qn
->
lowî
 == 0) {

891 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
mod_éí
);

892 i‡(
r
) Ñ;

894 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

895 i‡(
r
) Ñ;

896 i‡(
CKN_ON
) {

897 
r
 = 
	`add_›code
(
ªg
, 
OP_STATE_CHECK_PUSH_OR_JUMP
);

898 i‡(
r
) Ñ;

899 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

900 i‡(
r
) Ñ;

901 
r
 = 
	`add_ªl_addr
(
ªg
,

902 -(
mod_éí
 + ()
SIZE_OP_STATE_CHECK_PUSH_OR_JUMP
));

905 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, -(
mod_éí
 + ()
SIZE_OP_PUSH
));

908 i‡(
qn
->
uµî
 == 0) {

909 i‡(
qn
->
is_ª„ªd
 != 0) {

910 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
éí
);

911 i‡(
r
) Ñ;

912 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

915 
r
 = 0;

917 i‡(
qn
->
uµî
 =1 && qn->
gªedy
) {

918 i‡(
qn
->
lowî
 == 0) {

919 i‡(
CKN_ON
) {

920 
r
 = 
	`add_›code
(
ªg
, 
OP_STATE_CHECK_PUSH
);

921 i‡(
r
) Ñ;

922 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

923 i‡(
r
) Ñ;

924 
r
 = 
	`add_ªl_addr
(
ªg
, 
éí
);

927 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
éí
);

929 i‡(
r
) Ñ;

932 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

934 i‡(!
qn
->
gªedy
 && qn->
uµî
 =1 && qn->
lowî
 == 0) {

935 i‡(
CKN_ON
) {

936 
r
 = 
	`add_›code
(
ªg
, 
OP_STATE_CHECK_PUSH
);

937 i‡(
r
) Ñ;

938 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

939 i‡(
r
) Ñ;

940 
r
 = 
	`add_ªl_addr
(
ªg
, 
SIZE_OP_JUMP
);

943 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
SIZE_OP_JUMP
);

946 i‡(
r
) Ñ;

947 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
éí
);

948 i‡(
r
) Ñ;

949 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

952 
r
 = 
	`compûe_ønge_ª≥©_node
(
qn
, 
mod_éí
, 
em±y_öfo
, 
ªg
);

953 i‡(
CKN_ON
) {

954 i‡(
r
) Ñ;

955 
r
 = 
	`add_›code
(
ªg
, 
OP_STATE_CHECK
);

956 i‡(
r
) Ñ;

957 
r
 = 
	`add_°©e_check_num
(
ªg
, 
ckn
);

960  
r
;

961 
	}
}

966 
	$compûe_Àngth_qu™tifõr_node
(
Qt‰Node
* 
qn
, 
ªgex_t
* 
ªg
)

968 
Àn
, 
mod_éí
;

969 
öföôe
 = 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
);

970 
em±y_öfo
 = 
qn
->
èrgë_em±y_öfo
;

971 
éí
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

973 i‡(
éí
 < 0) Ålen;

976 i‡(
	`NTYPE
(
qn
->
èrgë
Ë=
NT_CANY
) {

977 i‡(
qn
->
gªedy
 && 
öföôe
) {

978 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
))

979  
SIZE_OP_ANYCHAR_STAR_PEEK_NEXT
 + 
éí
 * 
qn
->
lowî
;

981  
SIZE_OP_ANYCHAR_STAR
 + 
éí
 * 
qn
->
lowî
;

985 i‡(
em±y_öfo
 != 0)

986 
mod_éí
 = 
éí
 + (
SIZE_OP_NULL_CHECK_START
 + 
SIZE_OP_NULL_CHECK_END
);

988 
mod_éí
 = 
éí
;

990 i‡(
öföôe
 &&

991 (
qn
->
lowî
 <1 || 
éí
 * qn->lowî <
QUANTIFIER_EXPAND_LIMIT_SIZE
)) {

992 i‡(
qn
->
lowî
 =1 && 
éí
 > 
QUANTIFIER_EXPAND_LIMIT_SIZE
) {

993 
Àn
 = 
SIZE_OP_JUMP
;

996 
Àn
 = 
éí
 * 
qn
->
lowî
;

999 i‡(
qn
->
gªedy
) {

1000 i‡(
	`IS_NOT_NULL
(
qn
->
hód_exa˘
))

1001 
Àn
 +
SIZE_OP_PUSH_OR_JUMP_EXACT1
 + 
mod_éí
 + 
SIZE_OP_JUMP
;

1002 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
))

1003 
Àn
 +
SIZE_OP_PUSH_IF_PEEK_NEXT
 + 
mod_éí
 + 
SIZE_OP_JUMP
;

1005 
Àn
 +
SIZE_OP_PUSH
 + 
mod_éí
 + 
SIZE_OP_JUMP
;

1008 
Àn
 +
SIZE_OP_JUMP
 + 
mod_éí
 + 
SIZE_OP_PUSH
;

1010 i‡(
qn
->
uµî
 =0 && qn->
is_ª„ªd
 != 0) {

1011 
Àn
 = 
SIZE_OP_JUMP
 + 
éí
;

1013 i‡(!
öföôe
 && 
qn
->
gªedy
 &&

1014 (
qn
->
uµî
 =1 || (
éí
 + 
SIZE_OP_PUSH
) * qn->upper

1015 <
QUANTIFIER_EXPAND_LIMIT_SIZE
)) {

1016 
Àn
 = 
éí
 * 
qn
->
lowî
;

1017 
Àn
 +(
SIZE_OP_PUSH
 + 
éí
Ë* (
qn
->
uµî
 - qn->
lowî
);

1019 i‡(!
qn
->
gªedy
 && qn->
uµî
 =1 && qn->
lowî
 == 0) {

1020 
Àn
 = 
SIZE_OP_PUSH
 + 
SIZE_OP_JUMP
 + 
éí
;

1023 
Àn
 = 
SIZE_OP_REPEAT_INC


1024 + 
mod_éí
 + 
SIZE_OPCODE
 + 
SIZE_RELADDR
 + 
SIZE_MEMNUM
;

1027  
Àn
;

1028 
	}
}

1031 
	$compûe_qu™tifõr_node
(
Qt‰Node
* 
qn
, 
ªgex_t
* 
ªg
)

1033 
i
, 
r
, 
mod_éí
;

1034 
öföôe
 = 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
);

1035 
em±y_öfo
 = 
qn
->
èrgë_em±y_öfo
;

1036 
éí
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

1038 i‡(
éí
 < 0) Ålen;

1040 i‡(
	`is_™ych¨_°¨_qu™tifõr
(
qn
)) {

1041 
r
 = 
	`compûe_åì_n_times
(
qn
->
èrgë
, qn->
lowî
, 
ªg
);

1042 i‡(
r
) Ñ;

1043 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
)) {

1044 i‡(
	`IS_MULTILINE
(
ªg
->
›ti⁄s
))

1045 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR_ML_STAR_PEEK_NEXT
);

1047 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR_STAR_PEEK_NEXT
);

1048 i‡(
r
) Ñ;

1049  
	`add_byãs
(
ªg
, 
	`NSTR
(
qn
->
√xt_hód_exa˘
)->
s
, 1);

1052 i‡(
	`IS_MULTILINE
(
ªg
->
›ti⁄s
))

1053  
	`add_›code
(
ªg
, 
OP_ANYCHAR_ML_STAR
);

1055  
	`add_›code
(
ªg
, 
OP_ANYCHAR_STAR
);

1059 i‡(
em±y_öfo
 != 0)

1060 
mod_éí
 = 
éí
 + (
SIZE_OP_NULL_CHECK_START
 + 
SIZE_OP_NULL_CHECK_END
);

1062 
mod_éí
 = 
éí
;

1064 i‡(
öföôe
 &&

1065 (
qn
->
lowî
 <1 || 
éí
 * qn->lowî <
QUANTIFIER_EXPAND_LIMIT_SIZE
)) {

1066 i‡(
qn
->
lowî
 =1 && 
éí
 > 
QUANTIFIER_EXPAND_LIMIT_SIZE
) {

1067 i‡(
qn
->
gªedy
) {

1068 i‡(
	`IS_NOT_NULL
(
qn
->
hód_exa˘
))

1069 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
SIZE_OP_PUSH_OR_JUMP_EXACT1
);

1070 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
))

1071 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
SIZE_OP_PUSH_IF_PEEK_NEXT
);

1073 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
SIZE_OP_PUSH
);

1076 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
SIZE_OP_JUMP
);

1078 i‡(
r
) Ñ;

1081 
r
 = 
	`compûe_åì_n_times
(
qn
->
èrgë
, qn->
lowî
, 
ªg
);

1082 i‡(
r
) Ñ;

1085 i‡(
qn
->
gªedy
) {

1086 i‡(
	`IS_NOT_NULL
(
qn
->
hód_exa˘
)) {

1087 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH_OR_JUMP_EXACT1
,

1088 
mod_éí
 + 
SIZE_OP_JUMP
);

1089 i‡(
r
) Ñ;

1090 
	`add_byãs
(
ªg
, 
	`NSTR
(
qn
->
hód_exa˘
)->
s
, 1);

1091 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

1092 i‡(
r
) Ñ;

1093 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

1094 -(
mod_éí
 + ()
SIZE_OP_JUMP
 + ()
SIZE_OP_PUSH_OR_JUMP_EXACT1
));

1096 i‡(
	`IS_NOT_NULL
(
qn
->
√xt_hód_exa˘
)) {

1097 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH_IF_PEEK_NEXT
,

1098 
mod_éí
 + 
SIZE_OP_JUMP
);

1099 i‡(
r
) Ñ;

1100 
	`add_byãs
(
ªg
, 
	`NSTR
(
qn
->
√xt_hód_exa˘
)->
s
, 1);

1101 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

1102 i‡(
r
) Ñ;

1103 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

1104 -(
mod_éí
 + ()
SIZE_OP_JUMP
 + ()
SIZE_OP_PUSH_IF_PEEK_NEXT
));

1107 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
mod_éí
 + 
SIZE_OP_JUMP
);

1108 i‡(
r
) Ñ;

1109 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

1110 i‡(
r
) Ñ;

1111 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

1112 -(
mod_éí
 + ()
SIZE_OP_JUMP
 + ()
SIZE_OP_PUSH
));

1116 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
mod_éí
);

1117 i‡(
r
) Ñ;

1118 
r
 = 
	`compûe_åì_em±y_check
(
qn
->
èrgë
, 
ªg
, 
em±y_öfo
);

1119 i‡(
r
) Ñ;

1120 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, -(
mod_éí
 + ()
SIZE_OP_PUSH
));

1123 i‡(
qn
->
uµî
 =0 && qn->
is_ª„ªd
 != 0) {

1124 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
éí
);

1125 i‡(
r
) Ñ;

1126 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

1128 i‡(!
öföôe
 && 
qn
->
gªedy
 &&

1129 (
qn
->
uµî
 =1 || (
éí
 + 
SIZE_OP_PUSH
) * qn->upper

1130 <
QUANTIFIER_EXPAND_LIMIT_SIZE
)) {

1131 
n
 = 
qn
->
uµî
 - qn->
lowî
;

1133 
r
 = 
	`compûe_åì_n_times
(
qn
->
èrgë
, qn->
lowî
, 
ªg
);

1134 i‡(
r
) Ñ;

1136 
i
 = 0; i < 
n
; i++) {

1137 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
,

1138 (
n
 - 
i
Ë* 
éí
 + (¿- i - 1Ë* 
SIZE_OP_PUSH
);

1139 i‡(
r
) Ñ;

1140 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

1141 i‡(
r
) Ñ;

1144 i‡(!
qn
->
gªedy
 && qn->
uµî
 =1 && qn->
lowî
 == 0) {

1145 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
SIZE_OP_JUMP
);

1146 i‡(
r
) Ñ;

1147 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
éí
);

1148 i‡(
r
) Ñ;

1149 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

1152 
r
 = 
	`compûe_ønge_ª≥©_node
(
qn
, 
mod_éí
, 
em±y_öfo
, 
ªg
);

1154  
r
;

1155 
	}
}

1159 
	$compûe_Àngth_›ti⁄_node
(
En˛o£Node
* 
node
, 
ªgex_t
* 
ªg
)

1161 
éí
;

1162 
OnigO±i⁄Ty≥
 
¥ev
 = 
ªg
->
›ti⁄s
;

1164 
ªg
->
›ti⁄s
 = 
node
->
›ti⁄
;

1165 
éí
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1166 
ªg
->
›ti⁄s
 = 
¥ev
;

1168 i‡(
éí
 < 0) Ålen;

1170 i‡(
	`IS_DYNAMIC_OPTION
(
¥ev
 ^ 
node
->
›ti⁄
)) {

1171  
SIZE_OP_SET_OPTION_PUSH
 + 
SIZE_OP_SET_OPTION
 + 
SIZE_OP_FAIL


1172 + 
éí
 + 
SIZE_OP_SET_OPTION
;

1175  
éí
;

1176 
	}
}

1179 
	$compûe_›ti⁄_node
(
En˛o£Node
* 
node
, 
ªgex_t
* 
ªg
)

1181 
r
;

1182 
OnigO±i⁄Ty≥
 
¥ev
 = 
ªg
->
›ti⁄s
;

1184 i‡(
	`IS_DYNAMIC_OPTION
(
¥ev
 ^ 
node
->
›ti⁄
)) {

1185 
r
 = 
	`add_›code_›ti⁄
(
ªg
, 
OP_SET_OPTION_PUSH
, 
node
->
›ti⁄
);

1186 i‡(
r
) Ñ;

1187 
r
 = 
	`add_›code_›ti⁄
(
ªg
, 
OP_SET_OPTION
, 
¥ev
);

1188 i‡(
r
) Ñ;

1189 
r
 = 
	`add_›code
(
ªg
, 
OP_FAIL
);

1190 i‡(
r
) Ñ;

1193 
ªg
->
›ti⁄s
 = 
node
->
›ti⁄
;

1194 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1195 
ªg
->
›ti⁄s
 = 
¥ev
;

1197 i‡(
	`IS_DYNAMIC_OPTION
(
¥ev
 ^ 
node
->
›ti⁄
)) {

1198 i‡(
r
) Ñ;

1199 
r
 = 
	`add_›code_›ti⁄
(
ªg
, 
OP_SET_OPTION
, 
¥ev
);

1201  
r
;

1202 
	}
}

1205 
	$compûe_Àngth_í˛o£_node
(
En˛o£Node
* 
node
, 
ªgex_t
* 
ªg
)

1207 
Àn
;

1208 
éí
;

1210 i‡(
node
->
ty≥
 =
ENCLOSE_OPTION
)

1211  
	`compûe_Àngth_›ti⁄_node
(
node
, 
ªg
);

1213 i‡(
node
->
èrgë
) {

1214 
éí
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1215 i‡(
éí
 < 0) Ålen;

1218 
éí
 = 0;

1220 
node
->
ty≥
) {

1221 
ENCLOSE_MEMORY
:

1222 #ifde‡
USE_SUBEXP_CALL


1223 i‡(
	`IS_ENCLOSE_CALLED
(
node
)) {

1224 
Àn
 = 
SIZE_OP_MEMORY_START_PUSH
 + 
éí


1225 + 
SIZE_OP_CALL
 + 
SIZE_OP_JUMP
 + 
SIZE_OP_RETURN
;

1226 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
))

1227 
Àn
 +(
	`IS_ENCLOSE_RECURSION
(
node
)

1228 ? 
SIZE_OP_MEMORY_END_PUSH_REC
 : 
SIZE_OP_MEMORY_END_PUSH
);

1230 
Àn
 +(
	`IS_ENCLOSE_RECURSION
(
node
)

1231 ? 
SIZE_OP_MEMORY_END_REC
 : 
SIZE_OP_MEMORY_END
);

1233 i‡(
	`IS_ENCLOSE_RECURSION
(
node
)) {

1234 
Àn
 = 
SIZE_OP_MEMORY_START_PUSH
;

1235 
Àn
 +
éí
 + (
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
)

1236 ? 
SIZE_OP_MEMORY_END_PUSH_REC
 : 
SIZE_OP_MEMORY_END_REC
);

1241 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
node
->
ªgnum
))

1242 
Àn
 = 
SIZE_OP_MEMORY_START_PUSH
;

1244 
Àn
 = 
SIZE_OP_MEMORY_START
;

1246 
Àn
 +
éí
 + (
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
)

1247 ? 
SIZE_OP_MEMORY_END_PUSH
 : 
SIZE_OP_MEMORY_END
);

1251 
ENCLOSE_STOP_BACKTRACK
:

1252 i‡(
	`IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT
(
node
)) {

1253 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
->
èrgë
);

1254 
éí
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

1255 i‡(
éí
 < 0) Ålen;

1257 
Àn
 = 
éí
 * 
qn
->
lowî


1258 + 
SIZE_OP_PUSH
 + 
éí
 + 
SIZE_OP_POP
 + 
SIZE_OP_JUMP
;

1261 
Àn
 = 
SIZE_OP_PUSH_STOP_BT
 + 
éí
 + 
SIZE_OP_POP_STOP_BT
;

1266  
ONIGERR_TYPE_BUG
;

1270  
Àn
;

1271 
	}
}

1273 
gë_ch¨_Àngth_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
, * 
Àn
);

1276 
	$compûe_í˛o£_node
(
En˛o£Node
* 
node
, 
ªgex_t
* 
ªg
)

1278 
r
, 
Àn
;

1280 i‡(
node
->
ty≥
 =
ENCLOSE_OPTION
)

1281  
	`compûe_›ti⁄_node
(
node
, 
ªg
);

1283 
node
->
ty≥
) {

1284 
ENCLOSE_MEMORY
:

1285 #ifde‡
USE_SUBEXP_CALL


1286 i‡(
	`IS_ENCLOSE_CALLED
(
node
)) {

1287 
r
 = 
	`add_›code
(
ªg
, 
OP_CALL
);

1288 i‡(
r
) Ñ;

1289 
node
->
ˇŒ_addr
 = 
	`BBUF_GET_OFFSET_POS
(
ªg
Ë+ 
SIZE_ABSADDR
 + 
SIZE_OP_JUMP
;

1290 
node
->
°©e
 |
NST_ADDR_FIXED
;

1291 
r
 = 
	`add_abs_addr
(
ªg
, ()
node
->
ˇŒ_addr
);

1292 i‡(
r
) Ñ;

1293 
Àn
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1294 
Àn
 +(
SIZE_OP_MEMORY_START_PUSH
 + 
SIZE_OP_RETURN
);

1295 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
))

1296 
Àn
 +(
	`IS_ENCLOSE_RECURSION
(
node
)

1297 ? 
SIZE_OP_MEMORY_END_PUSH_REC
 : 
SIZE_OP_MEMORY_END_PUSH
);

1299 
Àn
 +(
	`IS_ENCLOSE_RECURSION
(
node
)

1300 ? 
SIZE_OP_MEMORY_END_REC
 : 
SIZE_OP_MEMORY_END
);

1302 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
Àn
);

1303 i‡(
r
) Ñ;

1306 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
node
->
ªgnum
))

1307 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_START_PUSH
);

1309 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_START
);

1310 i‡(
r
) Ñ;

1311 
r
 = 
	`add_mem_num
(
ªg
, 
node
->
ªgnum
);

1312 i‡(
r
) Ñ;

1313 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1314 i‡(
r
) Ñ;

1315 #ifde‡
USE_SUBEXP_CALL


1316 i‡(
	`IS_ENCLOSE_CALLED
(
node
)) {

1317 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
))

1318 
r
 = 
	`add_›code
(
ªg
, (
	`IS_ENCLOSE_RECURSION
(
node
)

1319 ? 
OP_MEMORY_END_PUSH_REC
 : 
OP_MEMORY_END_PUSH
));

1321 
r
 = 
	`add_›code
(
ªg
, (
	`IS_ENCLOSE_RECURSION
(
node
)

1322 ? 
OP_MEMORY_END_REC
 : 
OP_MEMORY_END
));

1324 i‡(
r
) Ñ;

1325 
r
 = 
	`add_mem_num
(
ªg
, 
node
->
ªgnum
);

1326 i‡(
r
) Ñ;

1327 
r
 = 
	`add_›code
(
ªg
, 
OP_RETURN
);

1329 i‡(
	`IS_ENCLOSE_RECURSION
(
node
)) {

1330 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
))

1331 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_END_PUSH_REC
);

1333 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_END_REC
);

1334 i‡(
r
) Ñ;

1335 
r
 = 
	`add_mem_num
(
ªg
, 
node
->
ªgnum
);

1340 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
node
->
ªgnum
))

1341 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_END_PUSH
);

1343 
r
 = 
	`add_›code
(
ªg
, 
OP_MEMORY_END
);

1344 i‡(
r
) Ñ;

1345 
r
 = 
	`add_mem_num
(
ªg
, 
node
->
ªgnum
);

1349 
ENCLOSE_STOP_BACKTRACK
:

1350 i‡(
	`IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT
(
node
)) {

1351 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
->
èrgë
);

1352 
r
 = 
	`compûe_åì_n_times
(
qn
->
èrgë
, qn->
lowî
, 
ªg
);

1353 i‡(
r
) Ñ;

1355 
Àn
 = 
	`compûe_Àngth_åì
(
qn
->
èrgë
, 
ªg
);

1356 i‡(
Àn
 < 0) Üen;

1358 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
Àn
 + 
SIZE_OP_POP
 + 
SIZE_OP_JUMP
);

1359 i‡(
r
) Ñ;

1360 
r
 = 
	`compûe_åì
(
qn
->
èrgë
, 
ªg
);

1361 i‡(
r
) Ñ;

1362 
r
 = 
	`add_›code
(
ªg
, 
OP_POP
);

1363 i‡(
r
) Ñ;

1364 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
,

1365 -(()
SIZE_OP_PUSH
 + 
Àn
 + ()
SIZE_OP_POP
 + ()
SIZE_OP_JUMP
));

1368 
r
 = 
	`add_›code
(
ªg
, 
OP_PUSH_STOP_BT
);

1369 i‡(
r
) Ñ;

1370 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1371 i‡(
r
) Ñ;

1372 
r
 = 
	`add_›code
(
ªg
, 
OP_POP_STOP_BT
);

1377  
ONIGERR_TYPE_BUG
;

1381  
r
;

1382 
	}
}

1385 
	$compûe_Àngth_™ch‹_node
(
Anch‹Node
* 
node
, 
ªgex_t
* 
ªg
)

1387 
Àn
;

1388 
éí
 = 0;

1390 i‡(
node
->
èrgë
) {

1391 
éí
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1392 i‡(
éí
 < 0) Ålen;

1395 
node
->
ty≥
) {

1396 
ANCHOR_PREC_READ
:

1397 
Àn
 = 
SIZE_OP_PUSH_POS
 + 
éí
 + 
SIZE_OP_POP_POS
;

1399 
ANCHOR_PREC_READ_NOT
:

1400 
Àn
 = 
SIZE_OP_PUSH_POS_NOT
 + 
éí
 + 
SIZE_OP_FAIL_POS
;

1402 
ANCHOR_LOOK_BEHIND
:

1403 
Àn
 = 
SIZE_OP_LOOK_BEHIND
 + 
éí
;

1405 
ANCHOR_LOOK_BEHIND_NOT
:

1406 
Àn
 = 
SIZE_OP_PUSH_LOOK_BEHIND_NOT
 + 
éí
 + 
SIZE_OP_FAIL_LOOK_BEHIND_NOT
;

1410 
Àn
 = 
SIZE_OPCODE
;

1414  
Àn
;

1415 
	}
}

1418 
	$compûe_™ch‹_node
(
Anch‹Node
* 
node
, 
ªgex_t
* 
ªg
)

1420 
r
, 
Àn
;

1422 
node
->
ty≥
) {

1423 
ANCHOR_BEGIN_BUF
: 
r
 = 
	`add_›code
(
ªg
, 
OP_BEGIN_BUF
); ;

1424 
ANCHOR_END_BUF
: 
r
 = 
	`add_›code
(
ªg
, 
OP_END_BUF
); ;

1425 
ANCHOR_BEGIN_LINE
: 
r
 = 
	`add_›code
(
ªg
, 
OP_BEGIN_LINE
); ;

1426 
ANCHOR_END_LINE
: 
r
 = 
	`add_›code
(
ªg
, 
OP_END_LINE
); ;

1427 
ANCHOR_SEMI_END_BUF
: 
r
 = 
	`add_›code
(
ªg
, 
OP_SEMI_END_BUF
); ;

1428 
ANCHOR_BEGIN_POSITION
: 
r
 = 
	`add_›code
(
ªg
, 
OP_BEGIN_POSITION
); ;

1430 
ANCHOR_WORD_BOUND
: 
r
 = 
	`add_›code
(
ªg
, 
OP_WORD_BOUND
); ;

1431 
ANCHOR_NOT_WORD_BOUND
: 
r
 = 
	`add_›code
(
ªg
, 
OP_NOT_WORD_BOUND
); ;

1432 #ifde‡
USE_WORD_BEGIN_END


1433 
ANCHOR_WORD_BEGIN
: 
r
 = 
	`add_›code
(
ªg
, 
OP_WORD_BEGIN
); ;

1434 
ANCHOR_WORD_END
: 
r
 = 
	`add_›code
(
ªg
, 
OP_WORD_END
); ;

1437 
ANCHOR_PREC_READ
:

1438 
r
 = 
	`add_›code
(
ªg
, 
OP_PUSH_POS
);

1439 i‡(
r
) Ñ;

1440 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1441 i‡(
r
) Ñ;

1442 
r
 = 
	`add_›code
(
ªg
, 
OP_POP_POS
);

1445 
ANCHOR_PREC_READ_NOT
:

1446 
Àn
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1447 i‡(
Àn
 < 0) Üen;

1448 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH_POS_NOT
, 
Àn
 + 
SIZE_OP_FAIL_POS
);

1449 i‡(
r
) Ñ;

1450 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1451 i‡(
r
) Ñ;

1452 
r
 = 
	`add_›code
(
ªg
, 
OP_FAIL_POS
);

1455 
ANCHOR_LOOK_BEHIND
:

1457 
n
;

1458 
r
 = 
	`add_›code
(
ªg
, 
OP_LOOK_BEHIND
);

1459 i‡(
r
) Ñ;

1460 i‡(
node
->
ch¨_Àn
 < 0) {

1461 
r
 = 
	`gë_ch¨_Àngth_åì
(
node
->
èrgë
, 
ªg
, &
n
);

1462 i‡(
r
Ë 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

1465 
n
 = 
node
->
ch¨_Àn
;

1467 
r
 = 
	`add_Àngth
(
ªg
, 
n
);

1468 i‡(
r
) Ñ;

1469 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1473 
ANCHOR_LOOK_BEHIND_NOT
:

1475 
n
;

1476 
Àn
 = 
	`compûe_Àngth_åì
(
node
->
èrgë
, 
ªg
);

1477 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH_LOOK_BEHIND_NOT
,

1478 
Àn
 + 
SIZE_OP_FAIL_LOOK_BEHIND_NOT
);

1479 i‡(
r
) Ñ;

1480 i‡(
node
->
ch¨_Àn
 < 0) {

1481 
r
 = 
	`gë_ch¨_Àngth_åì
(
node
->
èrgë
, 
ªg
, &
n
);

1482 i‡(
r
Ë 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

1485 
n
 = 
node
->
ch¨_Àn
;

1486 
r
 = 
	`add_Àngth
(
ªg
, 
n
);

1487 i‡(
r
) Ñ;

1488 
r
 = 
	`compûe_åì
(
node
->
èrgë
, 
ªg
);

1489 i‡(
r
) Ñ;

1490 
r
 = 
	`add_›code
(
ªg
, 
OP_FAIL_LOOK_BEHIND_NOT
);

1495  
ONIGERR_TYPE_BUG
;

1499  
r
;

1500 
	}
}

1503 
	$compûe_Àngth_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
)

1505 
Àn
, 
ty≥
, 
r
;

1507 
ty≥
 = 
	`NTYPE
(
node
);

1508 
ty≥
) {

1509 
NT_LIST
:

1510 
Àn
 = 0;

1512 
r
 = 
	`compûe_Àngth_åì
(
	`NCAR
(
node
), 
ªg
);

1513 i‡(
r
 < 0) Ñ;

1514 
Àn
 +
r
;

1515 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1516 
r
 = 
Àn
;

1519 
NT_ALT
:

1521 
n
;

1523 
n
 = 
r
 = 0;

1525 
r
 +
	`compûe_Àngth_åì
(
	`NCAR
(
node
), 
ªg
);

1526 
n
++;

1527 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1528 
r
 +(
SIZE_OP_PUSH
 + 
SIZE_OP_JUMP
Ë* (
n
 - 1);

1532 
NT_STR
:

1533 i‡(
	`NSTRING_IS_RAW
(
node
))

1534 
r
 = 
	`compûe_Àngth_°rög_øw_node
(
	`NSTR
(
node
), 
ªg
);

1536 
r
 = 
	`compûe_Àngth_°rög_node
(
node
, 
ªg
);

1539 
NT_CCLASS
:

1540 
r
 = 
	`compûe_Àngth_c˛ass_node
(
	`NCCLASS
(
node
), 
ªg
);

1543 
NT_CTYPE
:

1544 
NT_CANY
:

1545 
r
 = 
SIZE_OPCODE
;

1548 
NT_BREF
:

1550 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

1552 #ifde‡
USE_BACKREF_WITH_LEVEL


1553 i‡(
	`IS_BACKREF_NEST_LEVEL
(
br
)) {

1554 
r
 = 
SIZE_OPCODE
 + 
SIZE_OPTION
 + 
SIZE_LENGTH
 +

1555 
SIZE_LENGTH
 + (
SIZE_MEMNUM
 * 
br
->
back_num
);

1559 i‡(
br
->
back_num
 == 1) {

1560 
r
 = ((!
	`IS_IGNORECASE
(
ªg
->
›ti⁄s
Ë&& 
br
->
back_°©ic
[0] <= 2)

1561 ? 
SIZE_OPCODE
 : (SIZE_OPCODE + 
SIZE_MEMNUM
));

1564 
r
 = 
SIZE_OPCODE
 + 
SIZE_LENGTH
 + (
SIZE_MEMNUM
 * 
br
->
back_num
);

1569 #ifde‡
USE_SUBEXP_CALL


1570 
NT_CALL
:

1571 
r
 = 
SIZE_OP_CALL
;

1575 
NT_QTFR
:

1576 
r
 = 
	`compûe_Àngth_qu™tifõr_node
(
	`NQTFR
(
node
), 
ªg
);

1579 
NT_ENCLOSE
:

1580 
r
 = 
	`compûe_Àngth_í˛o£_node
(
	`NENCLOSE
(
node
), 
ªg
);

1583 
NT_ANCHOR
:

1584 
r
 = 
	`compûe_Àngth_™ch‹_node
(
	`NANCHOR
(
node
), 
ªg
);

1588  
ONIGERR_TYPE_BUG
;

1592  
r
;

1593 
	}
}

1596 
	$compûe_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
)

1598 
n
, 
ty≥
, 
Àn
, 
pos
, 
r
 = 0;

1600 
ty≥
 = 
	`NTYPE
(
node
);

1601 
ty≥
) {

1602 
NT_LIST
:

1604 
r
 = 
	`compûe_åì
(
	`NCAR
(
node
), 
ªg
);

1605 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1608 
NT_ALT
:

1610 
Node
* 
x
 = 
node
;

1611 
Àn
 = 0;

1613 
Àn
 +
	`compûe_Àngth_åì
(
	`NCAR
(
x
), 
ªg
);

1614 i‡(
	`NCDR
(
x
Ë!
NULL
) {

1615 
Àn
 +
SIZE_OP_PUSH
 + 
SIZE_OP_JUMP
;

1617 } 
	`IS_NOT_NULL
(
x
 = 
	`NCDR
(x)));

1618 
pos
 = 
ªg
->
u£d
 + 
Àn
;

1621 
Àn
 = 
	`compûe_Àngth_åì
(
	`NCAR
(
node
), 
ªg
);

1622 i‡(
	`IS_NOT_NULL
(
	`NCDR
(
node
))) {

1623 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_PUSH
, 
Àn
 + 
SIZE_OP_JUMP
);

1624 i‡(
r
) ;

1626 
r
 = 
	`compûe_åì
(
	`NCAR
(
node
), 
ªg
);

1627 i‡(
r
) ;

1628 i‡(
	`IS_NOT_NULL
(
	`NCDR
(
node
))) {

1629 
Àn
 = 
pos
 - (
ªg
->
u£d
 + 
SIZE_OP_JUMP
);

1630 
r
 = 
	`add_›code_ªl_addr
(
ªg
, 
OP_JUMP
, 
Àn
);

1631 i‡(
r
) ;

1633 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1637 
NT_STR
:

1638 i‡(
	`NSTRING_IS_RAW
(
node
))

1639 
r
 = 
	`compûe_°rög_øw_node
(
	`NSTR
(
node
), 
ªg
);

1641 
r
 = 
	`compûe_°rög_node
(
node
, 
ªg
);

1644 
NT_CCLASS
:

1645 
r
 = 
	`compûe_c˛ass_node
(
	`NCCLASS
(
node
), 
ªg
);

1648 
NT_CTYPE
:

1650 
›
;

1652 
	`NCTYPE
(
node
)->
˘y≥
) {

1653 
ONIGENC_CTYPE_WORD
:

1654 i‡(
	`NCTYPE
(
node
)->
nŸ
 !0Ë
›
 = 
OP_NOT_WORD
;

1655 
›
 = 
OP_WORD
;

1658  
ONIGERR_TYPE_BUG
;

1661 
r
 = 
	`add_›code
(
ªg
, 
›
);

1665 
NT_CANY
:

1666 i‡(
	`IS_MULTILINE
(
ªg
->
›ti⁄s
))

1667 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR_ML
);

1669 
r
 = 
	`add_›code
(
ªg
, 
OP_ANYCHAR
);

1672 
NT_BREF
:

1674 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

1676 #ifde‡
USE_BACKREF_WITH_LEVEL


1677 i‡(
	`IS_BACKREF_NEST_LEVEL
(
br
)) {

1678 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREF_WITH_LEVEL
);

1679 i‡(
r
) Ñ;

1680 
r
 = 
	`add_›ti⁄
(
ªg
, (ªg->
›ti⁄s
 & 
ONIG_OPTION_IGNORECASE
));

1681 i‡(
r
) Ñ;

1682 
r
 = 
	`add_Àngth
(
ªg
, 
br
->
√°_Àvñ
);

1683 i‡(
r
) Ñ;

1685 
add_ba¸ef_mems
;

1689 i‡(
br
->
back_num
 == 1) {

1690 
n
 = 
br
->
back_°©ic
[0];

1691 i‡(
	`IS_IGNORECASE
(
ªg
->
›ti⁄s
)) {

1692 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREFN_IC
);

1693 i‡(
r
) Ñ;

1694 
r
 = 
	`add_mem_num
(
ªg
, 
n
);

1697 
n
) {

1698 1: 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREF1
); ;

1699 2: 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREF2
); ;

1701 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREFN
);

1702 i‡(
r
) Ñ;

1703 
r
 = 
	`add_mem_num
(
ªg
, 
n
);

1709 
i
;

1710 * 
p
;

1712 i‡(
	`IS_IGNORECASE
(
ªg
->
›ti⁄s
)) {

1713 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREF_MULTI_IC
);

1716 
r
 = 
	`add_›code
(
ªg
, 
OP_BACKREF_MULTI
);

1718 i‡(
r
) Ñ;

1720 #ifde‡
USE_BACKREF_WITH_LEVEL


1721 
add_ba¸ef_mems
:

1723 
r
 = 
	`add_Àngth
(
ªg
, 
br
->
back_num
);

1724 i‡(
r
) Ñ;

1725 
p
 = 
	`BACKREFS_P
(
br
);

1726 
i
 = 
br
->
back_num
 - 1; i >= 0; i--) {

1727 
r
 = 
	`add_mem_num
(
ªg
, 
p
[
i
]);

1728 i‡(
r
) Ñ;

1734 #ifde‡
USE_SUBEXP_CALL


1735 
NT_CALL
:

1736 
r
 = 
	`compûe_ˇŒ
(
	`NCALL
(
node
), 
ªg
);

1740 
NT_QTFR
:

1741 
r
 = 
	`compûe_qu™tifõr_node
(
	`NQTFR
(
node
), 
ªg
);

1744 
NT_ENCLOSE
:

1745 
r
 = 
	`compûe_í˛o£_node
(
	`NENCLOSE
(
node
), 
ªg
);

1748 
NT_ANCHOR
:

1749 
r
 = 
	`compûe_™ch‹_node
(
	`NANCHOR
(
node
), 
ªg
);

1753 #ifde‡
ONIG_DEBUG


1754 
	`Ârötf
(
°dîr
, "compûe_åì: undeföedÇodêty≥ %d\n", 
	`NTYPE
(
node
));

1759  
r
;

1760 
	}
}

1762 #ifde‡
USE_NAMED_GROUP


1765 
	$n⁄ame_dißbÀ_m≠
(
Node
** 
∂ök
, 
GroupNumRem≠
* 
m≠
, * 
cou¡î
)

1767 
r
 = 0;

1768 
Node
* 
node
 = *
∂ök
;

1770 
	`NTYPE
(
node
)) {

1771 
NT_LIST
:

1772 
NT_ALT
:

1774 
r
 = 
	`n⁄ame_dißbÀ_m≠
(&(
	`NCAR
(
node
)), 
m≠
, 
cou¡î
);

1775 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1778 
NT_QTFR
:

1780 
Node
** 
±¨gë
 = &(
	`NQTFR
(
node
)->
èrgë
);

1781 
Node
* 
ﬁd
 = *
±¨gë
;

1782 
r
 = 
	`n⁄ame_dißbÀ_m≠
(
±¨gë
, 
m≠
, 
cou¡î
);

1783 i‡(*
±¨gë
 !
ﬁd
 && 
	`NTYPE
(*±¨gëË=
NT_QTFR
) {

1784 
	`⁄ig_ªdu˚_√°ed_qu™tifõr
(
node
, *
±¨gë
);

1789 
NT_ENCLOSE
:

1791 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

1792 i‡(
í
->
ty≥
 =
ENCLOSE_MEMORY
) {

1793 i‡(
	`IS_ENCLOSE_NAMED_GROUP
(
í
)) {

1794 (*
cou¡î
)++;

1795 
m≠
[
í
->
ªgnum
].
√w_vÆ
 = *
cou¡î
;

1796 
í
->
ªgnum
 = *
cou¡î
;

1797 
r
 = 
	`n⁄ame_dißbÀ_m≠
(&(
í
->
èrgë
), 
m≠
, 
cou¡î
);

1800 *
∂ök
 = 
í
->
èrgë
;

1801 
í
->
èrgë
 = 
NULL_NODE
;

1802 
	`⁄ig_node_‰ì
(
node
);

1803 
r
 = 
	`n⁄ame_dißbÀ_m≠
(
∂ök
, 
m≠
, 
cou¡î
);

1807 
r
 = 
	`n⁄ame_dißbÀ_m≠
(&(
í
->
èrgë
), 
m≠
, 
cou¡î
);

1811 
NT_ANCHOR
:

1812 i‡(
	`NANCHOR
(
node
)->
èrgë
)

1813 
r
 = 
	`n⁄ame_dißbÀ_m≠
(&(
	`NANCHOR
(
node
)->
èrgë
), 
m≠
, 
cou¡î
);

1820  
r
;

1821 
	}
}

1824 
	$ªnumbî_node_backªf
(
Node
* 
node
, 
GroupNumRem≠
* 
m≠
)

1826 
i
, 
pos
, 
n
, 
ﬁd_num
;

1827 *
backs
;

1828 
BRefNode
* 
bn
 = 
	`NBREF
(
node
);

1830 i‡(! 
	`IS_BACKREF_NAME_REF
(
bn
))

1831  
ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
;

1833 
ﬁd_num
 = 
bn
->
back_num
;

1834 i‡(
	`IS_NULL
(
bn
->
back_dy«mic
))

1835 
backs
 = 
bn
->
back_°©ic
;

1837 
backs
 = 
bn
->
back_dy«mic
;

1839 
i
 = 0, 
pos
 = 0; i < 
ﬁd_num
; i++) {

1840 
n
 = 
m≠
[
backs
[
i
]].
√w_vÆ
;

1841 i‡(
n
 > 0) {

1842 
backs
[
pos
] = 
n
;

1843 
pos
++;

1847 
bn
->
back_num
 = 
pos
;

1849 
	}
}

1852 
	$ªnumbî_by_m≠
(
Node
* 
node
, 
GroupNumRem≠
* 
m≠
)

1854 
r
 = 0;

1856 
	`NTYPE
(
node
)) {

1857 
NT_LIST
:

1858 
NT_ALT
:

1860 
r
 = 
	`ªnumbî_by_m≠
(
	`NCAR
(
node
), 
m≠
);

1861 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1863 
NT_QTFR
:

1864 
r
 = 
	`ªnumbî_by_m≠
(
	`NQTFR
(
node
)->
èrgë
, 
m≠
);

1866 
NT_ENCLOSE
:

1867 
r
 = 
	`ªnumbî_by_m≠
(
	`NENCLOSE
(
node
)->
èrgë
, 
m≠
);

1870 
NT_BREF
:

1871 
r
 = 
	`ªnumbî_node_backªf
(
node
, 
m≠
);

1874 
NT_ANCHOR
:

1875 i‡(
	`NANCHOR
(
node
)->
èrgë
)

1876 
r
 = 
	`ªnumbî_by_m≠
(
	`NANCHOR
(
node
)->
èrgë
, 
m≠
);

1883  
r
;

1884 
	}
}

1887 
	$numbîed_ªf_check
(
Node
* 
node
)

1889 
r
 = 0;

1891 
	`NTYPE
(
node
)) {

1892 
NT_LIST
:

1893 
NT_ALT
:

1895 
r
 = 
	`numbîed_ªf_check
(
	`NCAR
(
node
));

1896 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

1898 
NT_QTFR
:

1899 
r
 = 
	`numbîed_ªf_check
(
	`NQTFR
(
node
)->
èrgë
);

1901 
NT_ENCLOSE
:

1902 
r
 = 
	`numbîed_ªf_check
(
	`NENCLOSE
(
node
)->
èrgë
);

1905 
NT_BREF
:

1906 i‡(! 
	`IS_BACKREF_NAME_REF
(
	`NBREF
(
node
)))

1907  
ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
;

1910 
NT_ANCHOR
:

1911 i‡(
	`NANCHOR
(
node
)->
èrgë
)

1912 
r
 = 
	`numbîed_ªf_check
(
	`NANCHOR
(
node
)->
èrgë
);

1919  
r
;

1920 
	}
}

1923 
	$dißbÀ_n⁄ame_group_ˇ±uª
(
Node
** 
roŸ
, 
ªgex_t
* 
ªg
, 
SˇnEnv
* 
ív
)

1925 
r
, 
i
, 
pos
, 
cou¡î
;

1926 
BôSètusTy≥
 
loc
;

1927 
GroupNumRem≠
* 
m≠
;

1929 
m≠
 = (
GroupNumRem≠
* )
	`xÆloˇ
((GroupNumRem≠Ë* (
ív
->
num_mem
 + 1));

1930 
	`CHECK_NULL_RETURN_MEMERR
(
m≠
);

1931 
i
 = 1; i <
ív
->
num_mem
; i++) {

1932 
m≠
[
i
].
√w_vÆ
 = 0;

1934 
cou¡î
 = 0;

1935 
r
 = 
	`n⁄ame_dißbÀ_m≠
(
roŸ
, 
m≠
, &
cou¡î
);

1936 i‡(
r
 != 0) Ñ;

1938 
r
 = 
	`ªnumbî_by_m≠
(*
roŸ
, 
m≠
);

1939 i‡(
r
 != 0) Ñ;

1941 
i
 = 1, 
pos
 = 1; i <
ív
->
num_mem
; i++) {

1942 i‡(
m≠
[
i
].
√w_vÆ
 > 0) {

1943 
	`SCANENV_MEM_NODES
(
ív
)[
pos
] = SCANENV_MEM_NODES”nv)[
i
];

1944 
pos
++;

1948 
loc
 = 
ív
->
ˇ±uª_hi°‹y
;

1949 
	`BIT_STATUS_CLEAR
(
ív
->
ˇ±uª_hi°‹y
);

1950 
i
 = 1; i <
ONIG_MAX_CAPTURE_HISTORY_GROUP
; i++) {

1951 i‡(
	`BIT_STATUS_AT
(
loc
, 
i
)) {

1952 
	`BIT_STATUS_ON_AT_SIMPLE
(
ív
->
ˇ±uª_hi°‹y
, 
m≠
[
i
].
√w_vÆ
);

1956 
ív
->
num_mem
 =Énv->
num_«med
;

1957 
ªg
->
num_mem
 = 
ív
->
num_«med
;

1959  
	`⁄ig_ªnumbî_«me_èbÀ
(
ªg
, 
m≠
);

1960 
	}
}

1963 #ifde‡
USE_SUBEXP_CALL


1965 
	$un£t_addr_li°_fix
(
Un£tAddrLi°
* 
u¶i°
, 
ªgex_t
* 
ªg
)

1967 
i
, 
off£t
;

1968 
En˛o£Node
* 
í
;

1969 
AbsAddrTy≥
 
addr
;

1971 
i
 = 0; i < 
u¶i°
->
num
; i++) {

1972 
í
 = 
	`NENCLOSE
(
u¶i°
->
us
[
i
].
èrgë
);

1973 i‡(! 
	`IS_ENCLOSE_ADDR_FIXED
(
í
)Ë 
ONIGERR_PARSER_BUG
;

1974 
addr
 = 
í
->
ˇŒ_addr
;

1975 
off£t
 = 
u¶i°
->
us
[
i
].offset;

1977 
	`BBUF_WRITE
(
ªg
, 
off£t
, &
addr
, 
SIZE_ABSADDR
);

1980 
	}
}

1983 #ifde‡
USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT


1985 
	$qu™tifõrs_mem‹y_node_öfo
(
Node
* 
node
)

1987 
r
 = 0;

1989 
	`NTYPE
(
node
)) {

1990 
NT_LIST
:

1991 
NT_ALT
:

1993 
v
;

1995 
v
 = 
	`qu™tifõrs_mem‹y_node_öfo
(
	`NCAR
(
node
));

1996 i‡(
v
 > 
r
)Ñ = v;

1997 } 
v
 >0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2001 #ifde‡
USE_SUBEXP_CALL


2002 
NT_CALL
:

2003 i‡(
	`IS_CALL_RECURSION
(
	`NCALL
(
node
))) {

2004  
NQ_TARGET_IS_EMPTY_REC
;

2007 
r
 = 
	`qu™tifõrs_mem‹y_node_öfo
(
	`NCALL
(
node
)->
èrgë
);

2011 
NT_QTFR
:

2013 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

2014 i‡(
qn
->
uµî
 != 0) {

2015 
r
 = 
	`qu™tifõrs_mem‹y_node_öfo
(
qn
->
èrgë
);

2020 
NT_ENCLOSE
:

2022 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2023 
í
->
ty≥
) {

2024 
ENCLOSE_MEMORY
:

2025  
NQ_TARGET_IS_EMPTY_MEM
;

2028 
ENCLOSE_OPTION
:

2029 
ENCLOSE_STOP_BACKTRACK
:

2030 
r
 = 
	`qu™tifõrs_mem‹y_node_öfo
(
í
->
èrgë
);

2038 
NT_BREF
:

2039 
NT_STR
:

2040 
NT_CTYPE
:

2041 
NT_CCLASS
:

2042 
NT_CANY
:

2043 
NT_ANCHOR
:

2048  
r
;

2049 
	}
}

2053 
	#GET_CHAR_LEN_VARLEN
 -1

	)

2054 
	#GET_CHAR_LEN_TOP_ALT_VARLEN
 -2

	)

2058 
	$gë_ch¨_Àngth_åì1
(
Node
* 
node
, 
ªgex_t
* 
ªg
, * 
Àn
, 
Àvñ
)

2060 
éí
;

2061 
r
 = 0;

2063 
Àvñ
++;

2064 *
Àn
 = 0;

2065 
	`NTYPE
(
node
)) {

2066 
NT_LIST
:

2068 
r
 = 
	`gë_ch¨_Àngth_åì1
(
	`NCAR
(
node
), 
ªg
, &
éí
, 
Àvñ
);

2069 i‡(
r
 == 0)

2070 *
Àn
 = 
	`di°™˚_add
(*Àn, 
éí
);

2071 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2074 
NT_ALT
:

2076 
éí2
;

2077 
v¨Àn
 = 0;

2079 
r
 = 
	`gë_ch¨_Àngth_åì1
(
	`NCAR
(
node
), 
ªg
, &
éí
, 
Àvñ
);

2080 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node))) {

2081 
r
 = 
	`gë_ch¨_Àngth_åì1
(
	`NCAR
(
node
), 
ªg
, &
éí2
, 
Àvñ
);

2082 i‡(
r
 == 0) {

2083 i‡(
éí
 !
éí2
)

2084 
v¨Àn
 = 1;

2087 i‡(
r
 == 0) {

2088 i‡(
v¨Àn
 != 0) {

2089 i‡(
Àvñ
 == 1)

2090 
r
 = 
GET_CHAR_LEN_TOP_ALT_VARLEN
;

2092 
r
 = 
GET_CHAR_LEN_VARLEN
;

2095 *
Àn
 = 
éí
;

2100 
NT_STR
:

2102 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

2103 
UCh¨
 *
s
 = 
¢
->s;

2104 
s
 < 
¢
->
íd
) {

2105 
s
 +
	`í˛í
(
ªg
->
íc
, s);

2106 (*
Àn
)++;

2111 
NT_QTFR
:

2113 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

2114 i‡(
qn
->
lowî
 =qn->
uµî
) {

2115 
r
 = 
	`gë_ch¨_Àngth_åì1
(
qn
->
èrgë
, 
ªg
, &
éí
, 
Àvñ
);

2116 i‡(
r
 == 0)

2117 *
Àn
 = 
	`di°™˚_mu…ùly
(
éí
, 
qn
->
lowî
);

2120 
r
 = 
GET_CHAR_LEN_VARLEN
;

2124 #ifde‡
USE_SUBEXP_CALL


2125 
NT_CALL
:

2126 i‡(! 
	`IS_CALL_RECURSION
(
	`NCALL
(
node
)))

2127 
r
 = 
	`gë_ch¨_Àngth_åì1
(
	`NCALL
(
node
)->
èrgë
, 
ªg
, 
Àn
, 
Àvñ
);

2129 
r
 = 
GET_CHAR_LEN_VARLEN
;

2133 
NT_CTYPE
:

2134 *
Àn
 = 1;

2137 
NT_CCLASS
:

2138 
NT_CANY
:

2139 *
Àn
 = 1;

2142 
NT_ENCLOSE
:

2144 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2145 
í
->
ty≥
) {

2146 
ENCLOSE_MEMORY
:

2147 #ifde‡
USE_SUBEXP_CALL


2148 i‡(
	`IS_ENCLOSE_CLEN_FIXED
(
í
))

2149 *
Àn
 = 
í
->
ch¨_Àn
;

2151 
r
 = 
	`gë_ch¨_Àngth_åì1
(
í
->
èrgë
, 
ªg
, 
Àn
, 
Àvñ
);

2152 i‡(
r
 == 0) {

2153 
í
->
ch¨_Àn
 = *
Àn
;

2154 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_CLEN_FIXED
);

2159 
ENCLOSE_OPTION
:

2160 
ENCLOSE_STOP_BACKTRACK
:

2161 
r
 = 
	`gë_ch¨_Àngth_åì1
(
í
->
èrgë
, 
ªg
, 
Àn
, 
Àvñ
);

2169 
NT_ANCHOR
:

2173 
r
 = 
GET_CHAR_LEN_VARLEN
;

2177  
r
;

2178 
	}
}

2181 
	$gë_ch¨_Àngth_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
, * 
Àn
)

2183  
	`gë_ch¨_Àngth_åì1
(
node
, 
ªg
, 
Àn
, 0);

2184 
	}
}

2188 
	$is_nŸ_ö˛uded
(
Node
* 
x
, Node* 
y
, 
ªgex_t
* 
ªg
)

2190 
i
, 
Àn
;

2191 
OnigCodePoöt
 
code
;

2192 
UCh¨
 *
p
;

2193 
yty≥
;

2195 
ªåy
:

2196 
yty≥
 = 
	`NTYPE
(
y
);

2197 
	`NTYPE
(
x
)) {

2198 
NT_CTYPE
:

2200 
yty≥
) {

2201 
NT_CTYPE
:

2202 i‡(
	`NCTYPE
(
y
)->
˘y≥
 =NCTYPE(
x
)->ctype &&

2203 
	`NCTYPE
(
y
)->
nŸ
 !NCTYPE(
x
)->not)

2209 
NT_CCLASS
:

2210 
sw≠
:

2212 
Node
* 
tmp
;

2213 
tmp
 = 
x
; x = 
y
; y =Åmp;

2214 
ªåy
;

2218 
NT_STR
:

2219 
sw≠
;

2228 
NT_CCLASS
:

2230 
CCœssNode
* 
xc
 = 
	`NCCLASS
(
x
);

2231 
yty≥
) {

2232 
NT_CTYPE
:

2233 
	`NCTYPE
(
y
)->
˘y≥
) {

2234 
ONIGENC_CTYPE_WORD
:

2235 i‡(
	`NCTYPE
(
y
)->
nŸ
 == 0) {

2236 i‡(
	`IS_NULL
(
xc
->
mbuf
Ë&& !
	`IS_NCCLASS_NOT
(xc)) {

2237 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

2238 i‡(
	`BITSET_AT
(
xc
->
bs
, 
i
)) {

2239 i‡(
	`IS_CODE_SB_WORD
(
ªg
->
íc
, 
i
))  0;

2247 i‡(
	`IS_NOT_NULL
(
xc
->
mbuf
))  0;

2248 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

2249 i‡(! 
	`IS_CODE_SB_WORD
(
ªg
->
íc
, 
i
)) {

2250 i‡(!
	`IS_NCCLASS_NOT
(
xc
)) {

2251 i‡(
	`BITSET_AT
(
xc
->
bs
, 
i
))

2255 i‡(! 
	`BITSET_AT
(
xc
->
bs
, 
i
))

2269 
NT_CCLASS
:

2271 
v
;

2272 
CCœssNode
* 
yc
 = 
	`NCCLASS
(
y
);

2274 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

2275 
v
 = 
	`BITSET_AT
(
xc
->
bs
, 
i
);

2276 i‡((
v
 !0 && !
	`IS_NCCLASS_NOT
(
xc
)) ||

2277 (
v
 =0 && 
	`IS_NCCLASS_NOT
(
xc
))) {

2278 
v
 = 
	`BITSET_AT
(
yc
->
bs
, 
i
);

2279 i‡((
v
 !0 && !
	`IS_NCCLASS_NOT
(
yc
)) ||

2280 (
v
 =0 && 
	`IS_NCCLASS_NOT
(
yc
)))

2284 i‡((
	`IS_NULL
(
xc
->
mbuf
Ë&& !
	`IS_NCCLASS_NOT
(xc)) ||

2285 (
	`IS_NULL
(
yc
->
mbuf
Ë&& !
	`IS_NCCLASS_NOT
(yc)))

2291 
NT_STR
:

2292 
sw≠
;

2301 
NT_STR
:

2303 
SåNode
* 
xs
 = 
	`NSTR
(
x
);

2304 i‡(
	`NSTRING_LEN
(
x
) == 0)

2308 
yty≥
) {

2309 
NT_CTYPE
:

2310 
	`NCTYPE
(
y
)->
˘y≥
) {

2311 
ONIGENC_CTYPE_WORD
:

2312 i‡(
	`ONIGENC_IS_MBC_WORD
(
ªg
->
íc
, 
xs
->
s
, xs->
íd
))

2313  
	`NCTYPE
(
y
)->
nŸ
;

2315  !(
	`NCTYPE
(
y
)->
nŸ
);

2322 
NT_CCLASS
:

2324 
CCœssNode
* 
cc
 = 
	`NCCLASS
(
y
);

2326 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
ªg
->
íc
, 
xs
->
s
,

2327 
xs
->
s
 + 
	`ONIGENC_MBC_MAXLEN
(
ªg
->
íc
));

2328  (
	`⁄ig_is_code_ö_cc
(
ªg
->
íc
, 
code
, 
cc
) != 0 ? 0 : 1);

2332 
NT_STR
:

2334 
UCh¨
 *
q
;

2335 
SåNode
* 
ys
 = 
	`NSTR
(
y
);

2336 
Àn
 = 
	`NSTRING_LEN
(
x
);

2337 i‡(
Àn
 > 
	`NSTRING_LEN
(
y
))Üen = NSTRING_LEN(y);

2338 i‡(
	`NSTRING_IS_AMBIG
(
x
Ë|| NSTRING_IS_AMBIG(
y
)) {

2343 
i
 = 0, 
p
 = 
ys
->
s
, 
q
 = 
xs
->s; i < 
Àn
; i++,Ö++, q++) {

2344 i‡(*
p
 !*
q
)  1;

2361 
	}
}

2363 
Node
*

2364 
	$gë_hód_vÆue_node
(
Node
* 
node
, 
exa˘
, 
ªgex_t
* 
ªg
)

2366 
Node
* 
n
 = 
NULL_NODE
;

2368 
	`NTYPE
(
node
)) {

2369 
NT_BREF
:

2370 
NT_ALT
:

2371 
NT_CANY
:

2372 #ifde‡
USE_SUBEXP_CALL


2373 
NT_CALL
:

2377 
NT_CTYPE
:

2378 
NT_CCLASS
:

2379 i‡(
exa˘
 == 0) {

2380 
n
 = 
node
;

2384 
NT_LIST
:

2385 
n
 = 
	`gë_hód_vÆue_node
(
	`NCAR
(
node
), 
exa˘
, 
ªg
);

2388 
NT_STR
:

2390 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

2392 i‡(
¢
->
íd
 <¢->
s
)

2395 i‡(
exa˘
 != 0 &&

2396 !
	`NSTRING_IS_RAW
(
node
Ë&& 
	`IS_IGNORECASE
(
ªg
->
›ti⁄s
)) {

2399 
n
 = 
node
;

2404 
NT_QTFR
:

2406 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

2407 i‡(
qn
->
lowî
 > 0) {

2408 i‡(
	`IS_NOT_NULL
(
qn
->
hód_exa˘
))

2409 
n
 = 
qn
->
hód_exa˘
;

2411 
n
 = 
	`gë_hód_vÆue_node
(
qn
->
èrgë
, 
exa˘
, 
ªg
);

2416 
NT_ENCLOSE
:

2418 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2419 
í
->
ty≥
) {

2420 
ENCLOSE_OPTION
:

2422 
OnigO±i⁄Ty≥
 
›ti⁄s
 = 
ªg
->options;

2424 
ªg
->
›ti⁄s
 = 
	`NENCLOSE
(
node
)->
›ti⁄
;

2425 
n
 = 
	`gë_hód_vÆue_node
(
	`NENCLOSE
(
node
)->
èrgë
, 
exa˘
, 
ªg
);

2426 
ªg
->
›ti⁄s
 = options;

2430 
ENCLOSE_MEMORY
:

2431 
ENCLOSE_STOP_BACKTRACK
:

2432 
n
 = 
	`gë_hód_vÆue_node
(
í
->
èrgë
, 
exa˘
, 
ªg
);

2438 
NT_ANCHOR
:

2439 i‡(
	`NANCHOR
(
node
)->
ty≥
 =
ANCHOR_PREC_READ
)

2440 
n
 = 
	`gë_hód_vÆue_node
(
	`NANCHOR
(
node
)->
èrgë
, 
exa˘
, 
ªg
);

2447  
n
;

2448 
	}
}

2451 
	$check_ty≥_åì
(
Node
* 
node
, 
ty≥_mask
, 
í˛o£_mask
, 
™ch‹_mask
)

2453 
ty≥
, 
r
 = 0;

2455 
ty≥
 = 
	`NTYPE
(
node
);

2456 i‡((
	`NTYPE2BIT
(
ty≥
Ë& 
ty≥_mask
) == 0)

2459 
ty≥
) {

2460 
NT_LIST
:

2461 
NT_ALT
:

2463 
r
 = 
	`check_ty≥_åì
(
	`NCAR
(
node
), 
ty≥_mask
, 
í˛o£_mask
,

2464 
™ch‹_mask
);

2465 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2468 
NT_QTFR
:

2469 
r
 = 
	`check_ty≥_åì
(
	`NQTFR
(
node
)->
èrgë
, 
ty≥_mask
, 
í˛o£_mask
,

2470 
™ch‹_mask
);

2473 
NT_ENCLOSE
:

2475 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2476 i‡((
í
->
ty≥
 & 
í˛o£_mask
) == 0)

2479 
r
 = 
	`check_ty≥_åì
(
í
->
èrgë
, 
ty≥_mask
, 
í˛o£_mask
, 
™ch‹_mask
);

2483 
NT_ANCHOR
:

2484 
ty≥
 = 
	`NANCHOR
(
node
)->type;

2485 i‡((
ty≥
 & 
™ch‹_mask
) == 0)

2488 i‡(
	`NANCHOR
(
node
)->
èrgë
)

2489 
r
 = 
	`check_ty≥_åì
(
	`NANCHOR
(
node
)->
èrgë
,

2490 
ty≥_mask
, 
í˛o£_mask
, 
™ch‹_mask
);

2496  
r
;

2497 
	}
}

2500 
	$gë_mö_Àn
(
Node
* 
node
, 
OnigLí
 *
mö
, 
SˇnEnv
* 
ív
)

2502 
OnigLí
 
tmö
;

2503 
r
 = 0;

2505 *
mö
 = 0;

2506 
	`NTYPE
(
node
)) {

2507 
NT_BREF
:

2509 
i
;

2510 * 
backs
;

2511 
Node
** 
nodes
 = 
	`SCANENV_MEM_NODES
(
ív
);

2512 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

2513 i‡(
br
->
°©e
 & 
NST_RECURSION
) ;

2515 
backs
 = 
	`BACKREFS_P
(
br
);

2516 i‡(
backs
[0] > 
ív
->
num_mem
Ë 
ONIGERR_INVALID_BACKREF
;

2517 
r
 = 
	`gë_mö_Àn
(
nodes
[
backs
[0]], 
mö
, 
ív
);

2518 i‡(
r
 != 0) ;

2519 
i
 = 1; i < 
br
->
back_num
; i++) {

2520 i‡(
backs
[
i
] > 
ív
->
num_mem
Ë 
ONIGERR_INVALID_BACKREF
;

2521 
r
 = 
	`gë_mö_Àn
(
nodes
[
backs
[
i
]], &
tmö
, 
ív
);

2522 i‡(
r
 != 0) ;

2523 i‡(*
mö
 > 
tmö
) *min =Åmin;

2528 #ifde‡
USE_SUBEXP_CALL


2529 
NT_CALL
:

2530 i‡(
	`IS_CALL_RECURSION
(
	`NCALL
(
node
))) {

2531 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
	`NCALL
(
node
)->
èrgë
);

2532 i‡(
	`IS_ENCLOSE_MIN_FIXED
(
í
))

2533 *
mö
 = 
í
->
mö_Àn
;

2536 
r
 = 
	`gë_mö_Àn
(
	`NCALL
(
node
)->
èrgë
, 
mö
, 
ív
);

2540 
NT_LIST
:

2542 
r
 = 
	`gë_mö_Àn
(
	`NCAR
(
node
), &
tmö
, 
ív
);

2543 i‡(
r
 =0Ë*
mö
 +
tmö
;

2544 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2547 
NT_ALT
:

2549 
Node
 *
x
, *
y
;

2550 
y
 = 
node
;

2552 
x
 = 
	`NCAR
(
y
);

2553 
r
 = 
	`gë_mö_Àn
(
x
, &
tmö
, 
ív
);

2554 i‡(
r
 != 0) ;

2555 i‡(
y
 =
node
Ë*
mö
 = 
tmö
;

2556 i‡(*
mö
 > 
tmö
) *min =Åmin;

2557 } 
r
 =0 && 
	`IS_NOT_NULL
(
y
 = 
	`NCDR
(y)));

2561 
NT_STR
:

2563 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

2564 *
mö
 = 
¢
->
íd
 - sn->
s
;

2568 
NT_CTYPE
:

2569 *
mö
 = 1;

2572 
NT_CCLASS
:

2573 
NT_CANY
:

2574 *
mö
 = 1;

2577 
NT_QTFR
:

2579 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

2581 i‡(
qn
->
lowî
 > 0) {

2582 
r
 = 
	`gë_mö_Àn
(
qn
->
èrgë
, 
mö
, 
ív
);

2583 i‡(
r
 == 0)

2584 *
mö
 = 
	`di°™˚_mu…ùly
(*mö, 
qn
->
lowî
);

2589 
NT_ENCLOSE
:

2591 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2592 
í
->
ty≥
) {

2593 
ENCLOSE_MEMORY
:

2594 i‡(
	`IS_ENCLOSE_MIN_FIXED
(
í
))

2595 *
mö
 = 
í
->
mö_Àn
;

2597 i‡(
	`IS_ENCLOSE_MARK1
(
	`NENCLOSE
(
node
)))

2598 *
mö
 = 0;

2600 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2601 
r
 = 
	`gë_mö_Àn
(
í
->
èrgë
, 
mö
, 
ív
);

2602 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2603 i‡(
r
 == 0) {

2604 
í
->
mö_Àn
 = *
mö
;

2605 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MIN_FIXED
);

2611 
ENCLOSE_OPTION
:

2612 
ENCLOSE_STOP_BACKTRACK
:

2613 
r
 = 
	`gë_mö_Àn
(
í
->
èrgë
, 
mö
, 
ív
);

2619 
NT_ANCHOR
:

2624  
r
;

2625 
	}
}

2628 
	$gë_max_Àn
(
Node
* 
node
, 
OnigLí
 *
max
, 
SˇnEnv
* 
ív
)

2630 
OnigLí
 
tmax
;

2631 
r
 = 0;

2633 *
max
 = 0;

2634 
	`NTYPE
(
node
)) {

2635 
NT_LIST
:

2637 
r
 = 
	`gë_max_Àn
(
	`NCAR
(
node
), &
tmax
, 
ív
);

2638 i‡(
r
 == 0)

2639 *
max
 = 
	`di°™˚_add
(*max, 
tmax
);

2640 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2643 
NT_ALT
:

2645 
r
 = 
	`gë_max_Àn
(
	`NCAR
(
node
), &
tmax
, 
ív
);

2646 i‡(
r
 =0 && *
max
 < 
tmax
) *max =Åmax;

2647 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2650 
NT_STR
:

2652 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

2653 *
max
 = 
¢
->
íd
 - sn->
s
;

2657 
NT_CTYPE
:

2658 *
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
);

2661 
NT_CCLASS
:

2662 
NT_CANY
:

2663 *
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
);

2666 
NT_BREF
:

2668 
i
;

2669 * 
backs
;

2670 
Node
** 
nodes
 = 
	`SCANENV_MEM_NODES
(
ív
);

2671 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

2672 i‡(
br
->
°©e
 & 
NST_RECURSION
) {

2673 *
max
 = 
ONIG_INFINITE_DISTANCE
;

2676 
backs
 = 
	`BACKREFS_P
(
br
);

2677 
i
 = 0; i < 
br
->
back_num
; i++) {

2678 i‡(
backs
[
i
] > 
ív
->
num_mem
Ë 
ONIGERR_INVALID_BACKREF
;

2679 
r
 = 
	`gë_max_Àn
(
nodes
[
backs
[
i
]], &
tmax
, 
ív
);

2680 i‡(
r
 != 0) ;

2681 i‡(*
max
 < 
tmax
) *max =Åmax;

2686 #ifde‡
USE_SUBEXP_CALL


2687 
NT_CALL
:

2688 i‡(! 
	`IS_CALL_RECURSION
(
	`NCALL
(
node
)))

2689 
r
 = 
	`gë_max_Àn
(
	`NCALL
(
node
)->
èrgë
, 
max
, 
ív
);

2691 *
max
 = 
ONIG_INFINITE_DISTANCE
;

2695 
NT_QTFR
:

2697 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

2699 i‡(
qn
->
uµî
 != 0) {

2700 
r
 = 
	`gë_max_Àn
(
qn
->
èrgë
, 
max
, 
ív
);

2701 i‡(
r
 =0 && *
max
 != 0) {

2702 i‡(! 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
))

2703 *
max
 = 
	`di°™˚_mu…ùly
(*max, 
qn
->
uµî
);

2705 *
max
 = 
ONIG_INFINITE_DISTANCE
;

2711 
NT_ENCLOSE
:

2713 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2714 
í
->
ty≥
) {

2715 
ENCLOSE_MEMORY
:

2716 i‡(
	`IS_ENCLOSE_MAX_FIXED
(
í
))

2717 *
max
 = 
í
->
max_Àn
;

2719 i‡(
	`IS_ENCLOSE_MARK1
(
	`NENCLOSE
(
node
)))

2720 *
max
 = 
ONIG_INFINITE_DISTANCE
;

2722 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2723 
r
 = 
	`gë_max_Àn
(
í
->
èrgë
, 
max
, 
ív
);

2724 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2725 i‡(
r
 == 0) {

2726 
í
->
max_Àn
 = *
max
;

2727 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MAX_FIXED
);

2733 
ENCLOSE_OPTION
:

2734 
ENCLOSE_STOP_BACKTRACK
:

2735 
r
 = 
	`gë_max_Àn
(
í
->
èrgë
, 
max
, 
ív
);

2741 
NT_ANCHOR
:

2746  
r
;

2747 
	}
}

2750 #ifde‡
USE_SUBEXP_CALL


2752 
	#RECURSION_EXIST
 1

	)

2753 
	#RECURSION_INFINITE
 2

	)

2756 
	$subexp_öf_ªcursive_check
(
Node
* 
node
, 
SˇnEnv
* 
ív
, 
hód
)

2758 
ty≥
;

2759 
r
 = 0;

2761 
ty≥
 = 
	`NTYPE
(
node
);

2762 
ty≥
) {

2763 
NT_LIST
:

2765 
Node
 *
x
;

2766 
OnigLí
 
mö
;

2767 
ªt
;

2769 
x
 = 
node
;

2771 
ªt
 = 
	`subexp_öf_ªcursive_check
(
	`NCAR
(
x
), 
ív
, 
hód
);

2772 i‡(
ªt
 < 0 ||Ñë =
RECURSION_INFINITE
) Ñet;

2773 
r
 |
ªt
;

2774 i‡(
hód
) {

2775 
ªt
 = 
	`gë_mö_Àn
(
	`NCAR
(
x
), &
mö
, 
ív
);

2776 i‡(
ªt
 != 0) Ñet;

2777 i‡(
mö
 !0Ë
hód
 = 0;

2779 } 
	`IS_NOT_NULL
(
x
 = 
	`NCDR
(x)));

2783 
NT_ALT
:

2785 
ªt
;

2786 
r
 = 
RECURSION_EXIST
;

2788 
ªt
 = 
	`subexp_öf_ªcursive_check
(
	`NCAR
(
node
), 
ív
, 
hód
);

2789 i‡(
ªt
 < 0 ||Ñë =
RECURSION_INFINITE
) Ñet;

2790 
r
 &
ªt
;

2791 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2795 
NT_QTFR
:

2796 
r
 = 
	`subexp_öf_ªcursive_check
(
	`NQTFR
(
node
)->
èrgë
, 
ív
, 
hód
);

2797 i‡(
r
 =
RECURSION_EXIST
) {

2798 i‡(
	`NQTFR
(
node
)->
lowî
 =0Ë
r
 = 0;

2802 
NT_ANCHOR
:

2804 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

2805 
™
->
ty≥
) {

2806 
ANCHOR_PREC_READ
:

2807 
ANCHOR_PREC_READ_NOT
:

2808 
ANCHOR_LOOK_BEHIND
:

2809 
ANCHOR_LOOK_BEHIND_NOT
:

2810 
r
 = 
	`subexp_öf_ªcursive_check
(
™
->
èrgë
, 
ív
, 
hód
);

2816 
NT_CALL
:

2817 
r
 = 
	`subexp_öf_ªcursive_check
(
	`NCALL
(
node
)->
èrgë
, 
ív
, 
hód
);

2820 
NT_ENCLOSE
:

2821 i‡(
	`IS_ENCLOSE_MARK2
(
	`NENCLOSE
(
node
)))

2823 i‡(
	`IS_ENCLOSE_MARK1
(
	`NENCLOSE
(
node
)))

2824  (
hód
 =0 ? 
RECURSION_EXIST
 : 
RECURSION_INFINITE
);

2826 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK2
);

2827 
r
 = 
	`subexp_öf_ªcursive_check
(
	`NENCLOSE
(
node
)->
èrgë
, 
ív
, 
hód
);

2828 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK2
);

2836  
r
;

2837 
	}
}

2840 
	$subexp_öf_ªcursive_check_åav
(
Node
* 
node
, 
SˇnEnv
* 
ív
)

2842 
ty≥
;

2843 
r
 = 0;

2845 
ty≥
 = 
	`NTYPE
(
node
);

2846 
ty≥
) {

2847 
NT_LIST
:

2848 
NT_ALT
:

2850 
r
 = 
	`subexp_öf_ªcursive_check_åav
(
	`NCAR
(
node
), 
ív
);

2851 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2854 
NT_QTFR
:

2855 
r
 = 
	`subexp_öf_ªcursive_check_åav
(
	`NQTFR
(
node
)->
èrgë
, 
ív
);

2858 
NT_ANCHOR
:

2860 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

2861 
™
->
ty≥
) {

2862 
ANCHOR_PREC_READ
:

2863 
ANCHOR_PREC_READ_NOT
:

2864 
ANCHOR_LOOK_BEHIND
:

2865 
ANCHOR_LOOK_BEHIND_NOT
:

2866 
r
 = 
	`subexp_öf_ªcursive_check_åav
(
™
->
èrgë
, 
ív
);

2872 
NT_ENCLOSE
:

2874 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2876 i‡(
	`IS_ENCLOSE_RECURSION
(
í
)) {

2877 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2878 
r
 = 
	`subexp_öf_ªcursive_check
(
í
->
èrgë
, 
ív
, 1);

2879 i‡(
r
 > 0Ë 
ONIGERR_NEVER_ENDING_RECURSION
;

2880 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

2882 
r
 = 
	`subexp_öf_ªcursive_check_åav
(
í
->
èrgë
, 
ív
);

2890  
r
;

2891 
	}
}

2894 
	$subexp_ªcursive_check
(
Node
* 
node
)

2896 
r
 = 0;

2898 
	`NTYPE
(
node
)) {

2899 
NT_LIST
:

2900 
NT_ALT
:

2902 
r
 |
	`subexp_ªcursive_check
(
	`NCAR
(
node
));

2903 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2906 
NT_QTFR
:

2907 
r
 = 
	`subexp_ªcursive_check
(
	`NQTFR
(
node
)->
èrgë
);

2910 
NT_ANCHOR
:

2912 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

2913 
™
->
ty≥
) {

2914 
ANCHOR_PREC_READ
:

2915 
ANCHOR_PREC_READ_NOT
:

2916 
ANCHOR_LOOK_BEHIND
:

2917 
ANCHOR_LOOK_BEHIND_NOT
:

2918 
r
 = 
	`subexp_ªcursive_check
(
™
->
èrgë
);

2924 
NT_CALL
:

2925 
r
 = 
	`subexp_ªcursive_check
(
	`NCALL
(
node
)->
èrgë
);

2926 i‡(
r
 !0Ë
	`SET_CALL_RECURSION
(
node
);

2929 
NT_ENCLOSE
:

2930 i‡(
	`IS_ENCLOSE_MARK2
(
	`NENCLOSE
(
node
)))

2932 i‡(
	`IS_ENCLOSE_MARK1
(
	`NENCLOSE
(
node
)))

2935 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK2
);

2936 
r
 = 
	`subexp_ªcursive_check
(
	`NENCLOSE
(
node
)->
èrgë
);

2937 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK2
);

2945  
r
;

2946 
	}
}

2950 
	$subexp_ªcursive_check_åav
(
Node
* 
node
, 
SˇnEnv
* 
ív
)

2952 
	#FOUND_CALLED_NODE
 1

	)

2954 
ty≥
;

2955 
r
 = 0;

2957 
ty≥
 = 
	`NTYPE
(
node
);

2958 
ty≥
) {

2959 
NT_LIST
:

2960 
NT_ALT
:

2962 
ªt
;

2964 
ªt
 = 
	`subexp_ªcursive_check_åav
(
	`NCAR
(
node
), 
ív
);

2965 i‡(
ªt
 =
FOUND_CALLED_NODE
Ë
r
 = FOUND_CALLED_NODE;

2966 i‡(
ªt
 < 0) Ñet;

2967 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2971 
NT_QTFR
:

2972 
r
 = 
	`subexp_ªcursive_check_åav
(
	`NQTFR
(
node
)->
èrgë
, 
ív
);

2973 i‡(
	`NQTFR
(
node
)->
uµî
 == 0) {

2974 i‡(
r
 =
FOUND_CALLED_NODE
)

2975 
	`NQTFR
(
node
)->
is_ª„ªd
 = 1;

2979 
NT_ANCHOR
:

2981 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

2982 
™
->
ty≥
) {

2983 
ANCHOR_PREC_READ
:

2984 
ANCHOR_PREC_READ_NOT
:

2985 
ANCHOR_LOOK_BEHIND
:

2986 
ANCHOR_LOOK_BEHIND_NOT
:

2987 
r
 = 
	`subexp_ªcursive_check_åav
(
™
->
èrgë
, 
ív
);

2993 
NT_ENCLOSE
:

2995 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

2997 i‡(! 
	`IS_ENCLOSE_RECURSION
(
í
)) {

2998 i‡(
	`IS_ENCLOSE_CALLED
(
í
)) {

2999 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

3000 
r
 = 
	`subexp_ªcursive_check
(
í
->
èrgë
);

3001 i‡(
r
 !0Ë
	`SET_ENCLOSE_STATUS
(
node
, 
NST_RECURSION
);

3002 
	`CLEAR_ENCLOSE_STATUS
(
node
, 
NST_MARK1
);

3005 
r
 = 
	`subexp_ªcursive_check_åav
(
í
->
èrgë
, 
ív
);

3006 i‡(
	`IS_ENCLOSE_CALLED
(
í
))

3007 
r
 |
FOUND_CALLED_NODE
;

3015  
r
;

3016 
	}
}

3019 
	$£tup_subexp_ˇŒ
(
Node
* 
node
, 
SˇnEnv
* 
ív
)

3021 
ty≥
;

3022 
r
 = 0;

3024 
ty≥
 = 
	`NTYPE
(
node
);

3025 
ty≥
) {

3026 
NT_LIST
:

3028 
r
 = 
	`£tup_subexp_ˇŒ
(
	`NCAR
(
node
), 
ív
);

3029 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3032 
NT_ALT
:

3034 
r
 = 
	`£tup_subexp_ˇŒ
(
	`NCAR
(
node
), 
ív
);

3035 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3038 
NT_QTFR
:

3039 
r
 = 
	`£tup_subexp_ˇŒ
(
	`NQTFR
(
node
)->
èrgë
, 
ív
);

3041 
NT_ENCLOSE
:

3042 
r
 = 
	`£tup_subexp_ˇŒ
(
	`NENCLOSE
(
node
)->
èrgë
, 
ív
);

3045 
NT_CALL
:

3047 
CÆlNode
* 
˙
 = 
	`NCALL
(
node
);

3048 
Node
** 
nodes
 = 
	`SCANENV_MEM_NODES
(
ív
);

3050 i‡(
˙
->
group_num
 != 0) {

3051 
gnum
 = 
˙
->
group_num
;

3053 #ifde‡
USE_NAMED_GROUP


3054 i‡(
ív
->
num_«med
 > 0 &&

3055 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
) &&

3056 !
	`ONIG_IS_OPTION_ON
(
ív
->
›ti⁄
, 
ONIG_OPTION_CAPTURE_GROUP
)) {

3057  
ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
;

3060 i‡(
gnum
 > 
ív
->
num_mem
) {

3061 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
,

3062 
ONIGERR_UNDEFINED_GROUP_REFERENCE
, 
˙
->
«me
, cn->
«me_íd
);

3063  
ONIGERR_UNDEFINED_GROUP_REFERENCE
;

3066 #ifde‡
USE_NAMED_GROUP


3067 
£t_ˇŒ_©å
:

3069 
˙
->
èrgë
 = 
nodes
[˙->
group_num
];

3070 i‡(
	`IS_NULL
(
˙
->
èrgë
)) {

3071 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
,

3072 
ONIGERR_UNDEFINED_NAME_REFERENCE
, 
˙
->
«me
, cn->
«me_íd
);

3073  
ONIGERR_UNDEFINED_NAME_REFERENCE
;

3075 
	`SET_ENCLOSE_STATUS
(
˙
->
èrgë
, 
NST_CALLED
);

3076 
	`BIT_STATUS_ON_AT
(
ív
->
bt_mem_°¨t
, 
˙
->
group_num
);

3077 
˙
->
un£t_addr_li°
 = 
ív
->unset_addr_list;

3079 #ifde‡
USE_NAMED_GROUP


3081 *
ªfs
;

3083 
n
 = 
	`⁄ig_«me_to_group_numbîs
(
ív
->
ªg
, 
˙
->
«me
, cn->
«me_íd
,

3084 &
ªfs
);

3085 i‡(
n
 <= 0) {

3086 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
,

3087 
ONIGERR_UNDEFINED_NAME_REFERENCE
, 
˙
->
«me
, cn->
«me_íd
);

3088  
ONIGERR_UNDEFINED_NAME_REFERENCE
;

3090 i‡(
n
 > 1) {

3091 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
,

3092 
ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
, 
˙
->
«me
, cn->
«me_íd
);

3093  
ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
;

3096 
˙
->
group_num
 = 
ªfs
[0];

3097 
£t_ˇŒ_©å
;

3104 
NT_ANCHOR
:

3106 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

3108 
™
->
ty≥
) {

3109 
ANCHOR_PREC_READ
:

3110 
ANCHOR_PREC_READ_NOT
:

3111 
ANCHOR_LOOK_BEHIND
:

3112 
ANCHOR_LOOK_BEHIND_NOT
:

3113 
r
 = 
	`£tup_subexp_ˇŒ
(
™
->
èrgë
, 
ív
);

3123  
r
;

3124 
	}
}

3132 
	$divide_look_behöd_Æã∫©ives
(
Node
* 
node
)

3134 
Node
 *
hód
, *
≈
, *
ö£π_node
;

3135 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

3136 
™c_ty≥
 = 
™
->
ty≥
;

3140 
hód
 = 
™
->
èrgë
;

3141 
≈
 = 
	`NCAR
(
hód
);

3142 
	`sw≠_node
(
node
, 
hód
);

3143 
	`NCAR
(
node
Ë
hód
;

3144 
	`NANCHOR
(
hód
)->
èrgë
 = 
≈
;

3146 
≈
 = 
node
;

3147 (
≈
 = 
	`NCDR
“p)Ë!
NULL_NODE
) {

3148 
ö£π_node
 = 
	`⁄ig_node_√w_™ch‹
(
™c_ty≥
);

3149 
	`CHECK_NULL_RETURN_MEMERR
(
ö£π_node
);

3150 
	`NANCHOR
(
ö£π_node
)->
èrgë
 = 
	`NCAR
(
≈
);

3151 
	`NCAR
(
≈
Ë
ö£π_node
;

3154 i‡(
™c_ty≥
 =
ANCHOR_LOOK_BEHIND_NOT
) {

3155 
≈
 = 
node
;

3157 
	`SET_NTYPE
(
≈
, 
NT_LIST
);

3158 } (
≈
 = 
	`NCDR
“p)Ë!
NULL_NODE
);

3161 
	}
}

3164 
	$£tup_look_behöd
(
Node
* 
node
, 
ªgex_t
* 
ªg
, 
SˇnEnv
* 
ív
)

3166 
r
, 
Àn
;

3167 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

3171 
r
 = 
	`gë_ch¨_Àngth_åì
(
™
->
èrgë
, 
ªg
, &
Àn
);

3172 i‡(
r
 == 0)

3173 
™
->
ch¨_Àn
 = 
Àn
;

3174 i‡(
r
 =
GET_CHAR_LEN_VARLEN
)

3175 
r
 = 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

3176 i‡(
r
 =
GET_CHAR_LEN_TOP_ALT_VARLEN
) {

3177 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND
))

3178 
r
 = 
	`divide_look_behöd_Æã∫©ives
(
node
);

3180 
r
 = 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

3183  
r
;

3184 
	}
}

3187 
	$√xt_£tup
(
Node
* 
node
, Node* 
√xt_node
, 
ªgex_t
* 
ªg
)

3189 
ty≥
;

3191 
ªåy
:

3192 
ty≥
 = 
	`NTYPE
(
node
);

3193 i‡(
ty≥
 =
NT_QTFR
) {

3194 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

3195 i‡(
qn
->
gªedy
 && 
	`IS_REPEAT_INFINITE
(qn->
uµî
)) {

3196 #ifde‡
USE_QTFR_PEEK_NEXT


3197 
Node
* 
n
 = 
	`gë_hód_vÆue_node
(
√xt_node
, 1, 
ªg
);

3199 i‡(
	`IS_NOT_NULL
(
n
Ë&& 
	`NSTR
“)->
s
[0] != '\0') {

3200 
qn
->
√xt_hód_exa˘
 = 
n
;

3204 i‡(
qn
->
lowî
 <= 1) {

3205 
ây≥
 = 
	`NTYPE
(
qn
->
èrgë
);

3206 i‡(
	`IS_NODE_TYPE_SIMPLE
(
ây≥
)) {

3207 
Node
 *
x
, *
y
;

3208 
x
 = 
	`gë_hód_vÆue_node
(
qn
->
èrgë
, 0, 
ªg
);

3209 i‡(
	`IS_NOT_NULL
(
x
)) {

3210 
y
 = 
	`gë_hód_vÆue_node
(
√xt_node
, 0, 
ªg
);

3211 i‡(
	`IS_NOT_NULL
(
y
Ë&& 
	`is_nŸ_ö˛uded
(
x
, y, 
ªg
)) {

3212 
Node
* 
í
 = 
	`⁄ig_node_√w_í˛o£
(
ENCLOSE_STOP_BACKTRACK
);

3213 
	`CHECK_NULL_RETURN_MEMERR
(
í
);

3214 
	`SET_ENCLOSE_STATUS
(
í
, 
NST_STOP_BT_SIMPLE_REPEAT
);

3215 
	`sw≠_node
(
node
, 
í
);

3216 
	`NENCLOSE
(
node
)->
èrgë
 = 
í
;

3223 i‡(
ty≥
 =
NT_ENCLOSE
) {

3224 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

3225 i‡(
í
->
ty≥
 =
ENCLOSE_MEMORY
) {

3226 
node
 = 
í
->
èrgë
;

3227 
ªåy
;

3231 
	}
}

3235 
	$upd©e_°rög_node_ˇ£_fﬁd
(
ªgex_t
* 
ªg
, 
Node
 *
node
)

3237 
UCh¨
 *
p
, *
íd
, 
buf
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

3238 
UCh¨
 *
sbuf
, *
ebuf
, *
•
;

3239 
r
, 
i
, 
Àn
, 
sbuf_size
;

3240 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

3242 
íd
 = 
¢
->end;

3243 
sbuf_size
 = (
íd
 - 
¢
->
s
) * 2;

3244 
sbuf
 = (
UCh¨
* )
	`xmÆloc
(
sbuf_size
);

3245 
	`CHECK_NULL_RETURN_MEMERR
(
sbuf
);

3246 
ebuf
 = 
sbuf
 + 
sbuf_size
;

3248 
•
 = 
sbuf
;

3249 
p
 = 
¢
->
s
;

3250 
p
 < 
íd
) {

3251 
Àn
 = 
	`ONIGENC_MBC_CASE_FOLD
(
ªg
->
íc
,Ñeg->
ˇ£_fﬁd_Êag
, &
p
, 
íd
, 
buf
);

3252 
i
 = 0; i < 
Àn
; i++) {

3253 i‡(
•
 >
ebuf
) {

3254 
sbuf
 = (
UCh¨
* )
	`xªÆloc
(sbuf, 
sbuf_size
 * 2);

3255 
	`CHECK_NULL_RETURN_MEMERR
(
sbuf
);

3256 
•
 = 
sbuf
 + 
sbuf_size
;

3257 
sbuf_size
 *= 2;

3258 
ebuf
 = 
sbuf
 + 
sbuf_size
;

3261 *
•
++ = 
buf
[
i
];

3265 
r
 = 
	`⁄ig_node_°r_£t
(
node
, 
sbuf
, 
•
);

3266 i‡(
r
 != 0) {

3267 
	`x‰ì
(
sbuf
);

3268  
r
;

3271 
	`x‰ì
(
sbuf
);

3273 
	}
}

3276 
	$ex∑nd_ˇ£_fﬁd_make_ªm_°rög
(
Node
** 
∫ode
, 
UCh¨
 *
s
, UCh¨ *
íd
,

3277 
ªgex_t
* 
ªg
)

3279 
r
;

3280 
Node
 *
node
;

3282 
node
 = 
	`⁄ig_node_√w_°r
(
s
, 
íd
);

3283 i‡(
	`IS_NULL
(
node
)Ë 
ONIGERR_MEMORY
;

3285 
r
 = 
	`upd©e_°rög_node_ˇ£_fﬁd
(
ªg
, 
node
);

3286 i‡(
r
 != 0) {

3287 
	`⁄ig_node_‰ì
(
node
);

3288  
r
;

3291 
	`NSTRING_SET_AMBIG
(
node
);

3292 
	`NSTRING_SET_DONT_GET_OPT_INFO
(
node
);

3293 *
∫ode
 = 
node
;

3295 
	}
}

3298 
	$ex∑nd_ˇ£_fﬁd_°rög_Æt
(
ôem_num
, 
OnigCa£FﬁdCodeIãm
 
ôems
[],

3299 
UCh¨
 *
p
, 
¶í
, UCh¨ *
íd
,

3300 
ªgex_t
* 
ªg
, 
Node
 **
∫ode
)

3302 
r
, 
i
, 
j
, 
Àn
, 
v¨Àn
;

3303 
Node
 *
™ode
, *
v¨_™ode
, *
¢ode
, *
xnode
, *
™
;

3304 
UCh¨
 
buf
[
ONIGENC_CODE_TO_MBC_MAXLEN
];

3306 *
∫ode
 = 
v¨_™ode
 = 
NULL_NODE
;

3308 
v¨Àn
 = 0;

3309 
i
 = 0; i < 
ôem_num
; i++) {

3310 i‡(
ôems
[
i
].
byã_Àn
 !
¶í
) {

3311 
v¨Àn
 = 1;

3316 i‡(
v¨Àn
 != 0) {

3317 *
∫ode
 = 
v¨_™ode
 = 
	`⁄ig_node_√w_Æt
(
NULL_NODE
, NULL_NODE);

3318 i‡(
	`IS_NULL
(
v¨_™ode
)Ë 
ONIGERR_MEMORY
;

3320 
xnode
 = 
	`⁄ig_node_√w_li°
(
NULL
, NULL);

3321 i‡(
	`IS_NULL
(
xnode
)Ë
mem_îr
;

3322 
	`NCAR
(
v¨_™ode
Ë
xnode
;

3324 
™ode
 = 
	`⁄ig_node_√w_Æt
(
NULL_NODE
, NULL_NODE);

3325 i‡(
	`IS_NULL
(
™ode
)Ë
mem_îr
;

3326 
	`NCAR
(
xnode
Ë
™ode
;

3329 *
∫ode
 = 
™ode
 = 
	`⁄ig_node_√w_Æt
(
NULL_NODE
, NULL_NODE);

3330 i‡(
	`IS_NULL
(
™ode
)Ë 
ONIGERR_MEMORY
;

3333 
¢ode
 = 
	`⁄ig_node_√w_°r
(
p
,Ö + 
¶í
);

3334 i‡(
	`IS_NULL
(
¢ode
)Ë
mem_îr
;

3336 
	`NCAR
(
™ode
Ë
¢ode
;

3338 
i
 = 0; i < 
ôem_num
; i++) {

3339 
¢ode
 = 
	`⁄ig_node_√w_°r
(
NULL
, NULL);

3340 i‡(
	`IS_NULL
(
¢ode
)Ë
mem_îr
;

3342 
j
 = 0; j < 
ôems
[
i
].
code_Àn
; j++) {

3343 
Àn
 = 
	`ONIGENC_CODE_TO_MBC
(
ªg
->
íc
, 
ôems
[
i
].
code
[
j
], 
buf
);

3344 i‡(
Àn
 < 0) {

3345 
r
 = 
Àn
;

3346 
mem_îr2
;

3349 
r
 = 
	`⁄ig_node_°r_ˇt
(
¢ode
, 
buf
, bu‡+ 
Àn
);

3350 i‡(
r
 !0Ë
mem_îr2
;

3353 
™
 = 
	`⁄ig_node_√w_Æt
(
NULL_NODE
, NULL_NODE);

3354 i‡(
	`IS_NULL
(
™
)) {

3355 
mem_îr2
;

3358 i‡(
ôems
[
i
].
byã_Àn
 !
¶í
) {

3359 
Node
 *
ªm
;

3360 
UCh¨
 *
q
 = 
p
 + 
ôems
[
i
].
byã_Àn
;

3362 i‡(
q
 < 
íd
) {

3363 
r
 = 
	`ex∑nd_ˇ£_fﬁd_make_ªm_°rög
(&
ªm
, 
q
, 
íd
, 
ªg
);

3364 i‡(
r
 != 0) {

3365 
	`⁄ig_node_‰ì
(
™
);

3366 
mem_îr2
;

3369 
xnode
 = 
	`⁄ig_node_li°_add
(
NULL_NODE
, 
¢ode
);

3370 i‡(
	`IS_NULL
(
xnode
)) {

3371 
	`⁄ig_node_‰ì
(
™
);

3372 
	`⁄ig_node_‰ì
(
ªm
);

3373 
mem_îr2
;

3375 i‡(
	`IS_NULL
(
	`⁄ig_node_li°_add
(
xnode
, 
ªm
))) {

3376 
	`⁄ig_node_‰ì
(
™
);

3377 
	`⁄ig_node_‰ì
(
xnode
);

3378 
	`⁄ig_node_‰ì
(
ªm
);

3379 
mem_îr
;

3382 
	`NCAR
(
™
Ë
xnode
;

3385 
	`NCAR
(
™
Ë
¢ode
;

3388 
	`NCDR
(
v¨_™ode
Ë
™
;

3389 
v¨_™ode
 = 
™
;

3392 
	`NCAR
(
™
Ë
¢ode
;

3393 
	`NCDR
(
™ode
Ë
™
;

3394 
™ode
 = 
™
;

3398  
v¨Àn
;

3400 
mem_îr2
:

3401 
	`⁄ig_node_‰ì
(
¢ode
);

3403 
mem_îr
:

3404 
	`⁄ig_node_‰ì
(*
∫ode
);

3406  
ONIGERR_MEMORY
;

3407 
	}
}

3410 
	$ex∑nd_ˇ£_fﬁd_°rög
(
Node
* 
node
, 
ªgex_t
* 
ªg
)

3412 
	#THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION
 8

	)

3414 
r
, 
n
, 
Àn
, 
Æt_num
;

3415 
UCh¨
 *
°¨t
, *
íd
, *
p
;

3416 
Node
 *
t›_roŸ
, *
roŸ
, *
¢ode
, *
¥ev_node
;

3417 
OnigCa£FﬁdCodeIãm
 
ôems
[
ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM
];

3418 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

3420 i‡(
	`NSTRING_IS_AMBIG
(
node
))  0;

3422 
°¨t
 = 
¢
->
s
;

3423 
íd
 = 
¢
->end;

3424 i‡(
°¨t
 >
íd
)  0;

3426 
r
 = 0;

3427 
t›_roŸ
 = 
roŸ
 = 
¥ev_node
 = 
¢ode
 = 
NULL_NODE
;

3428 
Æt_num
 = 1;

3429 
p
 = 
°¨t
;

3430 
p
 < 
íd
) {

3431 
n
 = 
	`ONIGENC_GET_CASE_FOLD_CODES_BY_STR
(
ªg
->
íc
,Ñeg->
ˇ£_fﬁd_Êag
,

3432 
p
, 
íd
, 
ôems
);

3433 i‡(
n
 < 0) {

3434 
r
 = 
n
;

3435 
îr
;

3438 
Àn
 = 
	`í˛í
(
ªg
->
íc
, 
p
);

3440 i‡(
n
 == 0) {

3441 i‡(
	`IS_NULL
(
¢ode
)) {

3442 i‡(
	`IS_NULL
(
roŸ
Ë&& 
	`IS_NOT_NULL
(
¥ev_node
)) {

3443 
t›_roŸ
 = 
roŸ
 = 
	`⁄ig_node_li°_add
(
NULL_NODE
, 
¥ev_node
);

3444 i‡(
	`IS_NULL
(
roŸ
)) {

3445 
	`⁄ig_node_‰ì
(
¥ev_node
);

3446 
mem_îr
;

3450 
¥ev_node
 = 
¢ode
 = 
	`⁄ig_node_√w_°r
(
NULL
, NULL);

3451 i‡(
	`IS_NULL
(
¢ode
)Ë
mem_îr
;

3452 i‡(
	`IS_NOT_NULL
(
roŸ
)) {

3453 i‡(
	`IS_NULL
(
	`⁄ig_node_li°_add
(
roŸ
, 
¢ode
))) {

3454 
	`⁄ig_node_‰ì
(
¢ode
);

3455 
mem_îr
;

3460 
r
 = 
	`⁄ig_node_°r_ˇt
(
¢ode
, 
p
,Ö + 
Àn
);

3461 i‡(
r
 !0Ë
îr
;

3464 
Æt_num
 *(
n
 + 1);

3465 i‡(
Æt_num
 > 
THRESHOLD_CASE_FOLD_ALT_FOR_EXPANSION
) ;

3467 i‡(
	`IS_NULL
(
roŸ
Ë&& 
	`IS_NOT_NULL
(
¥ev_node
)) {

3468 
t›_roŸ
 = 
roŸ
 = 
	`⁄ig_node_li°_add
(
NULL_NODE
, 
¥ev_node
);

3469 i‡(
	`IS_NULL
(
roŸ
)) {

3470 
	`⁄ig_node_‰ì
(
¥ev_node
);

3471 
mem_îr
;

3475 
r
 = 
	`ex∑nd_ˇ£_fﬁd_°rög_Æt
(
n
, 
ôems
, 
p
, 
Àn
, 
íd
, 
ªg
, &
¥ev_node
);

3476 i‡(
r
 < 0Ë
mem_îr
;

3477 i‡(
r
 == 1) {

3478 i‡(
	`IS_NULL
(
roŸ
)) {

3479 
t›_roŸ
 = 
¥ev_node
;

3482 i‡(
	`IS_NULL
(
	`⁄ig_node_li°_add
(
roŸ
, 
¥ev_node
))) {

3483 
	`⁄ig_node_‰ì
(
¥ev_node
);

3484 
mem_îr
;

3488 
roŸ
 = 
	`NCAR
(
¥ev_node
);

3491 i‡(
	`IS_NOT_NULL
(
roŸ
)) {

3492 i‡(
	`IS_NULL
(
	`⁄ig_node_li°_add
(
roŸ
, 
¥ev_node
))) {

3493 
	`⁄ig_node_‰ì
(
¥ev_node
);

3494 
mem_îr
;

3499 
¢ode
 = 
NULL_NODE
;

3502 
p
 +
Àn
;

3505 i‡(
p
 < 
íd
) {

3506 
Node
 *
§em
;

3508 
r
 = 
	`ex∑nd_ˇ£_fﬁd_make_ªm_°rög
(&
§em
, 
p
, 
íd
, 
ªg
);

3509 i‡(
r
 !0Ë
mem_îr
;

3511 i‡(
	`IS_NOT_NULL
(
¥ev_node
Ë&& 
	`IS_NULL
(
roŸ
)) {

3512 
t›_roŸ
 = 
roŸ
 = 
	`⁄ig_node_li°_add
(
NULL_NODE
, 
¥ev_node
);

3513 i‡(
	`IS_NULL
(
roŸ
)) {

3514 
	`⁄ig_node_‰ì
(
§em
);

3515 
	`⁄ig_node_‰ì
(
¥ev_node
);

3516 
mem_îr
;

3520 i‡(
	`IS_NULL
(
roŸ
)) {

3521 
¥ev_node
 = 
§em
;

3524 i‡(
	`IS_NULL
(
	`⁄ig_node_li°_add
(
roŸ
, 
§em
))) {

3525 
	`⁄ig_node_‰ì
(
§em
);

3526 
mem_îr
;

3532 
t›_roŸ
 = (
	`IS_NOT_NULL
—›_roŸË?Å›_roŸ : 
¥ev_node
);

3533 
	`sw≠_node
(
node
, 
t›_roŸ
);

3534 
	`⁄ig_node_‰ì
(
t›_roŸ
);

3537 
mem_îr
:

3538 
r
 = 
ONIGERR_MEMORY
;

3540 
îr
:

3541 
	`⁄ig_node_‰ì
(
t›_roŸ
);

3542  
r
;

3543 
	}
}

3546 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


3548 
	#CEC_THRES_NUM_BIG_REPEAT
 512

	)

3549 
	#CEC_INFINITE_NUM
 0x7fffffff

	)

3551 
	#CEC_IN_INFINITE_REPEAT
 (1<<0)

	)

3552 
	#CEC_IN_FINITE_REPEAT
 (1<<1)

	)

3553 
	#CEC_CONT_BIG_REPEAT
 (1<<2)

	)

3556 
	$£tup_comb_exp_check
(
Node
* 
node
, 
°©e
, 
SˇnEnv
* 
ív
)

3558 
ty≥
;

3559 
r
 = 
°©e
;

3561 
ty≥
 = 
	`NTYPE
(
node
);

3562 
ty≥
) {

3563 
NT_LIST
:

3565 
Node
* 
¥ev
 = 
NULL_NODE
;

3567 
r
 = 
	`£tup_comb_exp_check
(
	`NCAR
(
node
),Ñ, 
ív
);

3568 
¥ev
 = 
	`NCAR
(
node
);

3569 } 
r
 >0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3573 
NT_ALT
:

3575 
ªt
;

3577 
ªt
 = 
	`£tup_comb_exp_check
(
	`NCAR
(
node
), 
°©e
, 
ív
);

3578 
r
 |
ªt
;

3579 } 
ªt
 >0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3583 
NT_QTFR
:

3585 
chûd_°©e
 = 
°©e
;

3586 
add_°©e
 = 0;

3587 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

3588 
Node
* 
èrgë
 = 
qn
->target;

3589 
v¨_num
;

3591 i‡(! 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
)) {

3592 i‡(
qn
->
uµî
 > 1) {

3594 
chûd_°©e
 |
CEC_IN_FINITE_REPEAT
;

3597 i‡(
ív
->
backª„d_mem
 == 0) {

3598 i‡(
	`NTYPE
(
qn
->
èrgë
Ë=
NT_ENCLOSE
) {

3599 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
qn
->
èrgë
);

3600 i‡(
í
->
ty≥
 =
ENCLOSE_MEMORY
) {

3601 i‡(
	`NTYPE
(
í
->
èrgë
Ë=
NT_QTFR
) {

3602 
Qt‰Node
* 
q
 = 
	`NQTFR
(
í
->
èrgë
);

3603 i‡(
	`IS_REPEAT_INFINITE
(
q
->
uµî
)

3604 && 
q
->
gªedy
 =
qn
->greedy) {

3605 
qn
->
uµî
 = (qn->
lowî
 == 0 ? 1 : qn->lower);

3606 i‡(
qn
->
uµî
 == 1)

3607 
chûd_°©e
 = 
°©e
;

3616 i‡(
°©e
 & 
CEC_IN_FINITE_REPEAT
) {

3617 
qn
->
comb_exp_check_num
 = -1;

3620 i‡(
	`IS_REPEAT_INFINITE
(
qn
->
uµî
)) {

3621 
v¨_num
 = 
CEC_INFINITE_NUM
;

3622 
chûd_°©e
 |
CEC_IN_INFINITE_REPEAT
;

3625 
v¨_num
 = 
qn
->
uµî
 - qn->
lowî
;

3628 i‡(
v¨_num
 >
CEC_THRES_NUM_BIG_REPEAT
)

3629 
add_°©e
 |
CEC_CONT_BIG_REPEAT
;

3631 i‡(((
°©e
 & 
CEC_IN_INFINITE_REPEAT
Ë!0 && 
v¨_num
 != 0) ||

3632 ((
°©e
 & 
CEC_CONT_BIG_REPEAT
) != 0 &&

3633 
v¨_num
 >
CEC_THRES_NUM_BIG_REPEAT
)) {

3634 i‡(
qn
->
comb_exp_check_num
 == 0) {

3635 
ív
->
num_comb_exp_check
++;

3636 
qn
->
comb_exp_check_num
 = 
ív
->
num_comb_exp_check
;

3637 i‡(
ív
->
cuº_max_ªgnum
 >Énv->
comb_exp_max_ªgnum
)

3638 
ív
->
comb_exp_max_ªgnum
 =Énv->
cuº_max_ªgnum
;

3643 
r
 = 
	`£tup_comb_exp_check
(
èrgë
, 
chûd_°©e
, 
ív
);

3644 
r
 |
add_°©e
;

3648 
NT_ENCLOSE
:

3650 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

3652 
í
->
ty≥
) {

3653 
ENCLOSE_MEMORY
:

3655 i‡(
ív
->
cuº_max_ªgnum
 < 
í
->
ªgnum
)

3656 
ív
->
cuº_max_ªgnum
 = 
í
->
ªgnum
;

3658 
r
 = 
	`£tup_comb_exp_check
(
í
->
èrgë
, 
°©e
, 
ív
);

3663 
r
 = 
	`£tup_comb_exp_check
(
í
->
èrgë
, 
°©e
, 
ív
);

3669 #ifde‡
USE_SUBEXP_CALL


3670 
NT_CALL
:

3671 i‡(
	`IS_CALL_RECURSION
(
	`NCALL
(
node
)))

3672 
ív
->
has_ªcursi⁄
 = 1;

3674 
r
 = 
	`£tup_comb_exp_check
(
	`NCALL
(
node
)->
èrgë
, 
°©e
, 
ív
);

3682  
r
;

3683 
	}
}

3686 
	#IN_ALT
 (1<<0)

	)

3687 
	#IN_NOT
 (1<<1)

	)

3688 
	#IN_REPEAT
 (1<<2)

	)

3689 
	#IN_VAR_REPEAT
 (1<<3)

	)

3690 
	#IN_CALL
 (1<<4)

	)

3691 
	#IN_RECCALL
 (1<<5)

	)

3702 
	$£tup_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
, 
°©e
, 
SˇnEnv
* 
ív
)

3704 
ty≥
;

3705 
r
 = 0;

3707 
ty≥
 = 
	`NTYPE
(
node
);

3708 
ty≥
) {

3709 
NT_LIST
:

3711 
Node
* 
¥ev
 = 
NULL_NODE
;

3713 
r
 = 
	`£tup_åì
(
	`NCAR
(
node
), 
ªg
, 
°©e
, 
ív
);

3714 i‡(
	`IS_NOT_NULL
(
¥ev
Ë&& 
r
 == 0) {

3715 
r
 = 
	`√xt_£tup
(
¥ev
, 
	`NCAR
(
node
), 
ªg
);

3717 
¥ev
 = 
	`NCAR
(
node
);

3718 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3722 
NT_ALT
:

3724 
r
 = 
	`£tup_åì
(
	`NCAR
(
node
), 
ªg
, (
°©e
 | 
IN_ALT
), 
ív
);

3725 } 
r
 =0 && 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

3728 
NT_CCLASS
:

3731 
NT_STR
:

3732 i‡(
	`IS_IGNORECASE
(
ªg
->
›ti⁄s
Ë&& !
	`NSTRING_IS_RAW
(
node
)) {

3733 
r
 = 
	`ex∑nd_ˇ£_fﬁd_°rög
(
node
, 
ªg
);

3737 
NT_CTYPE
:

3738 
NT_CANY
:

3741 #ifde‡
USE_SUBEXP_CALL


3742 
NT_CALL
:

3746 
NT_BREF
:

3748 
i
;

3749 * 
p
;

3750 
Node
** 
nodes
 = 
	`SCANENV_MEM_NODES
(
ív
);

3751 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

3752 
p
 = 
	`BACKREFS_P
(
br
);

3753 
i
 = 0; i < 
br
->
back_num
; i++) {

3754 i‡(
p
[
i
] > 
ív
->
num_mem
Ë 
ONIGERR_INVALID_BACKREF
;

3755 
	`BIT_STATUS_ON_AT
(
ív
->
backª„d_mem
, 
p
[
i
]);

3756 
	`BIT_STATUS_ON_AT
(
ív
->
bt_mem_°¨t
, 
p
[
i
]);

3757 #ifde‡
USE_BACKREF_WITH_LEVEL


3758 i‡(
	`IS_BACKREF_NEST_LEVEL
(
br
)) {

3759 
	`BIT_STATUS_ON_AT
(
ív
->
bt_mem_íd
, 
p
[
i
]);

3762 
	`SET_ENCLOSE_STATUS
(
nodes
[
p
[
i
]], 
NST_MEM_BACKREFED
);

3767 
NT_QTFR
:

3769 
OnigLí
 
d
;

3770 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

3771 
Node
* 
èrgë
 = 
qn
->target;

3773 i‡((
°©e
 & 
IN_REPEAT
) != 0) {

3774 
qn
->
°©e
 |
NST_IN_REPEAT
;

3777 i‡(
	`IS_REPEAT_INFINITE
(
qn
->
uµî
) || qn->upper >= 1) {

3778 
r
 = 
	`gë_mö_Àn
(
èrgë
, &
d
, 
ív
);

3779 i‡(
r
) ;

3780 i‡(
d
 == 0) {

3781 
qn
->
èrgë_em±y_öfo
 = 
NQ_TARGET_IS_EMPTY
;

3782 #ifde‡
USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT


3783 
r
 = 
	`qu™tifõrs_mem‹y_node_öfo
(
èrgë
);

3784 i‡(
r
 < 0) ;

3785 i‡(
r
 > 0) {

3786 
qn
->
èrgë_em±y_öfo
 = 
r
;

3790 
r
 = 
	`gë_max_Àn
(
èrgë
, &
d
, 
ív
);

3791 i‡(
r
 =0 && 
d
 == 0) {

3793 
qn
->
uµî
 = 1;

3794 i‡(
qn
->
lowî
 > 1) qn->lower = 1;

3795 i‡(
	`NTYPE
(
èrgë
Ë=
NT_STR
) {

3796 
qn
->
uµî
 = qn->
lowî
 = 0;

3803 
°©e
 |
IN_REPEAT
;

3804 i‡(
qn
->
lowî
 !qn->
uµî
)

3805 
°©e
 |
IN_VAR_REPEAT
;

3806 
r
 = 
	`£tup_åì
(
èrgë
, 
ªg
, 
°©e
, 
ív
);

3807 i‡(
r
) ;

3810 
	#EXPAND_STRING_MAX_LENGTH
 100

	)

3811 i‡(
	`NTYPE
(
èrgë
Ë=
NT_STR
) {

3812 i‡(!
	`IS_REPEAT_INFINITE
(
qn
->
lowî
Ë&& qn->lowî =qn->
uµî
 &&

3813 
qn
->
lowî
 > 1 && qn->lowî <
EXPAND_STRING_MAX_LENGTH
) {

3814 
Àn
 = 
	`NSTRING_LEN
(
èrgë
);

3815 
SåNode
* 
¢
 = 
	`NSTR
(
èrgë
);

3817 i‡(
Àn
 * 
qn
->
lowî
 <
EXPAND_STRING_MAX_LENGTH
) {

3818 
i
, 
n
 = 
qn
->
lowî
;

3819 
	`⁄ig_node_c⁄v_to_°r_node
(
node
, 
	`NSTR
(
èrgë
)->
Êag
);

3820 
i
 = 0; i < 
n
; i++) {

3821 
r
 = 
	`⁄ig_node_°r_ˇt
(
node
, 
¢
->
s
, sn->
íd
);

3822 i‡(
r
) ;

3824 
	`⁄ig_node_‰ì
(
èrgë
);

3830 #ifde‡
USE_OP_PUSH_OR_JUMP_EXACT


3831 i‡(
qn
->
gªedy
 && (qn->
èrgë_em±y_öfo
 != 0)) {

3832 i‡(
	`NTYPE
(
èrgë
Ë=
NT_QTFR
) {

3833 
Qt‰Node
* 
tqn
 = 
	`NQTFR
(
èrgë
);

3834 i‡(
	`IS_NOT_NULL
(
tqn
->
hód_exa˘
)) {

3835 
qn
->
hód_exa˘
 = 
tqn
->head_exact;

3836 
tqn
->
hód_exa˘
 = 
NULL
;

3840 
qn
->
hód_exa˘
 = 
	`gë_hód_vÆue_node
(qn->
èrgë
, 1, 
ªg
);

3847 
NT_ENCLOSE
:

3849 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

3851 
í
->
ty≥
) {

3852 
ENCLOSE_OPTION
:

3854 
OnigO±i⁄Ty≥
 
›ti⁄s
 = 
ªg
->options;

3855 
ªg
->
›ti⁄s
 = 
	`NENCLOSE
(
node
)->
›ti⁄
;

3856 
r
 = 
	`£tup_åì
(
	`NENCLOSE
(
node
)->
èrgë
, 
ªg
, 
°©e
, 
ív
);

3857 
ªg
->
›ti⁄s
 = options;

3861 
ENCLOSE_MEMORY
:

3862 i‡((
°©e
 & (
IN_ALT
 | 
IN_NOT
 | 
IN_VAR_REPEAT
 | 
IN_CALL
)) != 0) {

3863 
	`BIT_STATUS_ON_AT
(
ív
->
bt_mem_°¨t
, 
í
->
ªgnum
);

3866 i‡(
	`IS_ENCLOSE_CALLED
(
í
))

3867 
°©e
 |
IN_CALL
;

3868 i‡(
	`IS_ENCLOSE_RECURSION
(
í
))

3869 
°©e
 |
IN_RECCALL
;

3870 i‡((
°©e
 & 
IN_RECCALL
) != 0)

3871 
	`SET_CALL_RECURSION
(
node
);

3872 
r
 = 
	`£tup_åì
(
í
->
èrgë
, 
ªg
, 
°©e
, 
ív
);

3875 
ENCLOSE_STOP_BACKTRACK
:

3877 
Node
* 
èrgë
 = 
í
->target;

3878 
r
 = 
	`£tup_åì
(
èrgë
, 
ªg
, 
°©e
, 
ív
);

3879 i‡(
	`NTYPE
(
èrgë
Ë=
NT_QTFR
) {

3880 
Qt‰Node
* 
tqn
 = 
	`NQTFR
(
èrgë
);

3881 i‡(
	`IS_REPEAT_INFINITE
(
tqn
->
uµî
Ë&&Åqn->
lowî
 <= 1 &&

3882 
tqn
->
gªedy
 != 0) {

3883 
qty≥
 = 
	`NTYPE
(
tqn
->
èrgë
);

3884 i‡(
	`IS_NODE_TYPE_SIMPLE
(
qty≥
))

3885 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_STOP_BT_SIMPLE_REPEAT
);

3894 
NT_ANCHOR
:

3896 
Anch‹Node
* 
™
 = 
	`NANCHOR
(
node
);

3898 
™
->
ty≥
) {

3899 
ANCHOR_PREC_READ
:

3900 
r
 = 
	`£tup_åì
(
™
->
èrgë
, 
ªg
, 
°©e
, 
ív
);

3902 
ANCHOR_PREC_READ_NOT
:

3903 
r
 = 
	`£tup_åì
(
™
->
èrgë
, 
ªg
, (
°©e
 | 
IN_NOT
), 
ív
);

3907 
	#ALLOWED_TYPE_IN_LB
 \

3908 –
BIT_NT_LIST
 | 
BIT_NT_ALT
 | 
BIT_NT_STR
 | 
BIT_NT_CCLASS
 | 
BIT_NT_CTYPE
 | \

3909 
BIT_NT_CANY
 | 
BIT_NT_ANCHOR
 | 
BIT_NT_ENCLOSE
 | 
BIT_NT_QTFR
 | 
BIT_NT_CALL
 )

	)

3911 
	#ALLOWED_ENCLOSE_IN_LB
 ( 
ENCLOSE_MEMORY
 | 
ENCLOSE_OPTION
 )

	)

3912 
	#ALLOWED_ENCLOSE_IN_LB_NOT
 
ENCLOSE_OPTION


	)

3914 
	#ALLOWED_ANCHOR_IN_LB
 \

3915 –
ANCHOR_LOOK_BEHIND
 | 
ANCHOR_BEGIN_LINE
 | 
ANCHOR_END_LINE
 | 
ANCHOR_BEGIN_BUF
 | 
ANCHOR_BEGIN_POSITION
 | 
ANCHOR_WORD_BOUND
 | 
ANCHOR_NOT_WORD_BOUND
 | 
ANCHOR_WORD_BEGIN
 | 
ANCHOR_WORD_END
 )

	)

3917 
	#ALLOWED_ANCHOR_IN_LB_NOT
 \

3918 –
ANCHOR_LOOK_BEHIND
 | 
ANCHOR_LOOK_BEHIND_NOT
 | 
ANCHOR_BEGIN_LINE
 | 
ANCHOR_END_LINE
 | 
ANCHOR_BEGIN_BUF
 | 
ANCHOR_BEGIN_POSITION
 | 
ANCHOR_WORD_BOUND
 | 
ANCHOR_NOT_WORD_BOUND
 | 
ANCHOR_WORD_BEGIN
 | 
ANCHOR_WORD_END
 )

	)

3920 
ANCHOR_LOOK_BEHIND
:

3922 
r
 = 
	`check_ty≥_åì
(
™
->
èrgë
, 
ALLOWED_TYPE_IN_LB
,

3923 
ALLOWED_ENCLOSE_IN_LB
, 
ALLOWED_ANCHOR_IN_LB
);

3924 i‡(
r
 < 0) Ñ;

3925 i‡(
r
 > 0Ë 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

3926 
r
 = 
	`£tup_åì
(
™
->
èrgë
, 
ªg
, 
°©e
, 
ív
);

3927 i‡(
r
 != 0) Ñ;

3928 
r
 = 
	`£tup_look_behöd
(
node
, 
ªg
, 
ív
);

3932 
ANCHOR_LOOK_BEHIND_NOT
:

3934 
r
 = 
	`check_ty≥_åì
(
™
->
èrgë
, 
ALLOWED_TYPE_IN_LB
,

3935 
ALLOWED_ENCLOSE_IN_LB_NOT
, 
ALLOWED_ANCHOR_IN_LB_NOT
);

3936 i‡(
r
 < 0) Ñ;

3937 i‡(
r
 > 0Ë 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
;

3938 
r
 = 
	`£tup_åì
(
™
->
èrgë
, 
ªg
, (
°©e
 | 
IN_NOT
), 
ív
);

3939 i‡(
r
 != 0) Ñ;

3940 
r
 = 
	`£tup_look_behöd
(
node
, 
ªg
, 
ív
);

3951  
r
;

3952 
	}
}

3956 
	$£t_bm_skù
(
UCh¨
* 
s
, UCh¨* 
íd
, 
OnigEncodög
 
íc
 
ARG_UNUSED
,

3957 
UCh¨
 
skù
[], ** 
öt_skù
)

3959 
i
, 
Àn
;

3961 
Àn
 = 
íd
 - 
s
;

3962 i‡(
Àn
 < 
ONIG_CHAR_TABLE_SIZE
) {

3963 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++Ë
skù
[i] = 
Àn
;

3965 
i
 = 0; i < 
Àn
 - 1; i++)

3966 
skù
[
s
[
i
]] = 
Àn
 - 1 - i;

3969 i‡(
	`IS_NULL
(*
öt_skù
)) {

3970 *
öt_skù
 = (* )
	`xmÆloc
((Ë* 
ONIG_CHAR_TABLE_SIZE
);

3971 i‡(
	`IS_NULL
(*
öt_skù
)Ë 
ONIGERR_MEMORY
;

3973 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++Ë(*
öt_skù
)[i] = 
Àn
;

3975 
i
 = 0; i < 
Àn
 - 1; i++)

3976 (*
öt_skù
)[
s
[
i
]] = 
Àn
 - 1 - i;

3979 
	}
}

3981 
	#OPT_EXACT_MAXLEN
 24

	)

3984 
OnigLí
 
	mmö
;

3985 
OnigLí
 
	mmax
;

3986 } 
	tMöMaxLí
;

3989 
MöMaxLí
 
	mmmd
;

3990 
OnigEncodög
 
	míc
;

3991 
OnigO±i⁄Ty≥
 
	m›ti⁄s
;

3992 
OnigCa£FﬁdTy≥
 
	mˇ£_fﬁd_Êag
;

3993 
SˇnEnv
* 
	msˇn_ív
;

3994 } 
	tO±Env
;

3997 
	mÀ·_™ch‹
;

3998 
	mright_™ch‹
;

3999 } 
	tO±AncInfo
;

4002 
MöMaxLí
 
	mmmd
;

4003 
O±AncInfo
 
	m™c
;

4005 
	mªach_íd
;

4006 
	mign‹e_ˇ£
;

4007 
	mÀn
;

4008 
UCh¨
 
	ms
[
OPT_EXACT_MAXLEN
];

4009 } 
	tO±Exa˘Info
;

4012 
MöMaxLí
 
	mmmd
;

4013 
O±AncInfo
 
	m™c
;

4015 
	mvÆue
;

4016 
UCh¨
 
	mm≠
[
ONIG_CHAR_TABLE_SIZE
];

4017 } 
	tO±M≠Info
;

4020 
MöMaxLí
 
	mÀn
;

4022 
O±AncInfo
 
	m™c
;

4023 
O±Exa˘Info
 
	mexb
;

4024 
O±Exa˘Info
 
	mexm
;

4025 
O±Exa˘Info
 
	mex¥
;

4027 
O±M≠Info
 
	mm≠
;

4028 } 
	tNodeO±Info
;

4032 
	$m≠_posôi⁄_vÆue
(
OnigEncodög
 
íc
, 
i
)

4034 c⁄° 
ByãVÆTabÀ
[] = {

4045 i‡(
i
 < ()((
ByãVÆTabÀ
)/(ByteValTable[0]))) {

4046 i‡(
i
 =0 && 
	`ONIGENC_MBC_MINLEN
(
íc
) > 1)

4049  ()
ByãVÆTabÀ
[
i
];

4053 
	}
}

4056 
	$di°™˚_vÆue
(
MöMaxLí
* 
mm
)

4059 c⁄° 
di°_vÆs
[] = {

4072 
OnigLí
 
d
;

4074 i‡(
mm
->
max
 =
ONIG_INFINITE_DISTANCE
)  0;

4076 
d
 = 
mm
->
max
 - mm->
mö
;

4077 i‡(
d
 < (
OnigLí
 )((
di°_vÆs
)/(dist_vals[0])))

4079  ()
di°_vÆs
[
d
];

4082 
	}
}

4085 
	$comp_di°™˚_vÆue
(
MöMaxLí
* 
d1
, MöMaxLí* 
d2
, 
v1
, 
v2
)

4087 i‡(
v2
 <= 0)  -1;

4088 i‡(
v1
 <= 0)  1;

4090 
v1
 *
	`di°™˚_vÆue
(
d1
);

4091 
v2
 *
	`di°™˚_vÆue
(
d2
);

4093 i‡(
v2
 > 
v1
)  1;

4094 i‡(
v2
 < 
v1
)  -1;

4096 i‡(
d2
->
mö
 < 
d1
->min)  1;

4097 i‡(
d2
->
mö
 > 
d1
->min)  -1;

4099 
	}
}

4102 
	$is_equÆ_mml
(
MöMaxLí
* 
a
, MöMaxLí* 
b
)

4104  (
a
->
mö
 =
b
->mö &&á->
max
 == b->max) ? 1 : 0;

4105 
	}
}

4109 
	$£t_mml
(
MöMaxLí
* 
mml
, 
OnigLí
 
mö
, OnigLí 
max
)

4111 
mml
->
mö
 = min;

4112 
mml
->
max
 = max;

4113 
	}
}

4116 
	$˛ór_mml
(
MöMaxLí
* 
mml
)

4118 
mml
->
mö
 = mml->
max
 = 0;

4119 
	}
}

4122 
	$c›y_mml
(
MöMaxLí
* 
to
, MöMaxLí* 
‰om
)

4124 
to
->
mö
 = 
‰om
->min;

4125 
to
->
max
 = 
‰om
->max;

4126 
	}
}

4129 
	$add_mml
(
MöMaxLí
* 
to
, MöMaxLí* 
‰om
)

4131 
to
->
mö
 = 
	`di°™˚_add
—o->mö, 
‰om
->min);

4132 
to
->
max
 = 
	`di°™˚_add
—o->max, 
‰om
->max);

4133 
	}
}

4137 
	$add_Àn_mml
(
MöMaxLí
* 
to
, 
OnigLí
 
Àn
)

4139 
to
->
mö
 = 
	`di°™˚_add
—o->mö, 
Àn
);

4140 
to
->
max
 = 
	`di°™˚_add
—o->max, 
Àn
);

4141 
	}
}

4145 
	$Æt_mîge_mml
(
MöMaxLí
* 
to
, MöMaxLí* 
‰om
)

4147 i‡(
to
->
mö
 > 
‰om
->min)Åo->min = from->min;

4148 i‡(
to
->
max
 < 
‰om
->max)Åo->max = from->max;

4149 
	}
}

4152 
	$c›y_›t_ív
(
O±Env
* 
to
, O±Env* 
‰om
)

4154 *
to
 = *
‰om
;

4155 
	}
}

4158 
	$˛ór_›t_™c_öfo
(
O±AncInfo
* 
™c
)

4160 
™c
->
À·_™ch‹
 = 0;

4161 
™c
->
right_™ch‹
 = 0;

4162 
	}
}

4165 
	$c›y_›t_™c_öfo
(
O±AncInfo
* 
to
, O±AncInfo* 
‰om
)

4167 *
to
 = *
‰om
;

4168 
	}
}

4171 
	$c⁄ˇt_›t_™c_öfo
(
O±AncInfo
* 
to
, O±AncInfo* 
À·
, O±AncInfo* 
right
,

4172 
OnigLí
 
À·_Àn
, OnigLí 
right_Àn
)

4174 
	`˛ór_›t_™c_öfo
(
to
);

4176 
to
->
À·_™ch‹
 = 
À·
->left_anchor;

4177 i‡(
À·_Àn
 == 0) {

4178 
to
->
À·_™ch‹
 |
right
->left_anchor;

4181 
to
->
right_™ch‹
 = 
right
->right_anchor;

4182 i‡(
right_Àn
 == 0) {

4183 
to
->
right_™ch‹
 |
À·
->right_anchor;

4186 
to
->
right_™ch‹
 |(
À·
->right_™ch‹ & 
ANCHOR_PREC_READ_NOT
);

4188 
	}
}

4191 
	$is_À·_™ch‹
(
™c
)

4193 i‡(
™c
 =
ANCHOR_END_BUF
 ||án¯=
ANCHOR_SEMI_END_BUF
 ||

4194 
™c
 =
ANCHOR_END_LINE
 ||án¯=
ANCHOR_PREC_READ
 ||

4195 
™c
 =
ANCHOR_PREC_READ_NOT
)

4199 
	}
}

4202 
	$is_£t_›t_™c_öfo
(
O±AncInfo
* 
to
, 
™c
)

4204 i‡((
to
->
À·_™ch‹
 & 
™c
) != 0)  1;

4206  ((
to
->
right_™ch‹
 & 
™c
) != 0 ? 1 : 0);

4207 
	}
}

4210 
	$add_›t_™c_öfo
(
O±AncInfo
* 
to
, 
™c
)

4212 i‡(
	`is_À·_™ch‹
(
™c
))

4213 
to
->
À·_™ch‹
 |
™c
;

4215 
to
->
right_™ch‹
 |
™c
;

4216 
	}
}

4219 
	$ªmove_›t_™c_öfo
(
O±AncInfo
* 
to
, 
™c
)

4221 i‡(
	`is_À·_™ch‹
(
™c
))

4222 
to
->
À·_™ch‹
 &~
™c
;

4224 
to
->
right_™ch‹
 &~
™c
;

4225 
	}
}

4228 
	$Æt_mîge_›t_™c_öfo
(
O±AncInfo
* 
to
, O±AncInfo* 
add
)

4230 
to
->
À·_™ch‹
 &
add
->left_anchor;

4231 
to
->
right_™ch‹
 &
add
->right_anchor;

4232 
	}
}

4235 
	$is_fuŒ_›t_exa˘_öfo
(
O±Exa˘Info
* 
ex
)

4237  (
ex
->
Àn
 >
OPT_EXACT_MAXLEN
 ? 1 : 0);

4238 
	}
}

4241 
	$˛ór_›t_exa˘_öfo
(
O±Exa˘Info
* 
ex
)

4243 
	`˛ór_mml
(&
ex
->
mmd
);

4244 
	`˛ór_›t_™c_öfo
(&
ex
->
™c
);

4245 
ex
->
ªach_íd
 = 0;

4246 
ex
->
ign‹e_ˇ£
 = 0;

4247 
ex
->
Àn
 = 0;

4248 
ex
->
s
[0] = '\0';

4249 
	}
}

4252 
	$c›y_›t_exa˘_öfo
(
O±Exa˘Info
* 
to
, O±Exa˘Info* 
‰om
)

4254 *
to
 = *
‰om
;

4255 
	}
}

4258 
	$c⁄ˇt_›t_exa˘_öfo
(
O±Exa˘Info
* 
to
, O±Exa˘Info* 
add
, 
OnigEncodög
 
íc
)

4260 
i
, 
j
, 
Àn
;

4261 
UCh¨
 *
p
, *
íd
;

4262 
O±AncInfo
 
ènc
;

4264 i‡(! 
to
->
ign‹e_ˇ£
 && 
add
->ignore_case) {

4265 i‡(
to
->
Àn
 >
add
->len)  ;

4267 
to
->
ign‹e_ˇ£
 = 1;

4270 
p
 = 
add
->
s
;

4271 
íd
 = 
p
 + 
add
->
Àn
;

4272 
i
 = 
to
->
Àn
; 
p
 < 
íd
; ) {

4273 
Àn
 = 
	`í˛í
(
íc
, 
p
);

4274 i‡(
i
 + 
Àn
 > 
OPT_EXACT_MAXLEN
) ;

4275 
j
 = 0; j < 
Àn
 && 
p
 < 
íd
; j++)

4276 
to
->
s
[
i
++] = *
p
++;

4279 
to
->
Àn
 = 
i
;

4280 
to
->
ªach_íd
 = (
p
 =
íd
 ? 
add
->reach_end : 0);

4282 
	`c⁄ˇt_›t_™c_öfo
(&
ènc
, &
to
->
™c
, &
add
->anc, 1, 1);

4283 i‡(! 
to
->
ªach_íd
Ë
ènc
.
right_™ch‹
 = 0;

4284 
	`c›y_›t_™c_öfo
(&
to
->
™c
, &
ènc
);

4285 
	}
}

4288 
	$c⁄ˇt_›t_exa˘_öfo_°r
(
O±Exa˘Info
* 
to
, 
UCh¨
* 
s
, UCh¨* 
íd
,

4289 
øw
 
ARG_UNUSED
, 
OnigEncodög
 
íc
)

4291 
i
, 
j
, 
Àn
;

4292 
UCh¨
 *
p
;

4294 
i
 = 
to
->
Àn
, 
p
 = 
s
;Ö < 
íd
 && i < 
OPT_EXACT_MAXLEN
; ) {

4295 
Àn
 = 
	`í˛í
(
íc
, 
p
);

4296 i‡(
i
 + 
Àn
 > 
OPT_EXACT_MAXLEN
) ;

4297 
j
 = 0; j < 
Àn
 && 
p
 < 
íd
; j++)

4298 
to
->
s
[
i
++] = *
p
++;

4301 
to
->
Àn
 = 
i
;

4302 
	}
}

4305 
	$Æt_mîge_›t_exa˘_öfo
(
O±Exa˘Info
* 
to
, O±Exa˘Info* 
add
, 
O±Env
* 
ív
)

4307 
i
, 
j
, 
Àn
;

4309 i‡(
add
->
Àn
 =0 || 
to
->len == 0) {

4310 
	`˛ór_›t_exa˘_öfo
(
to
);

4314 i‡(! 
	`is_equÆ_mml
(&
to
->
mmd
, &
add
->mmd)) {

4315 
	`˛ór_›t_exa˘_öfo
(
to
);

4319 
i
 = 0; i < 
to
->
Àn
 && i < 
add
->len; ) {

4320 i‡(
to
->
s
[
i
] !
add
->s[i]) ;

4321 
Àn
 = 
	`í˛í
(
ív
->
íc
, 
to
->
s
 + 
i
);

4323 
j
 = 1; j < 
Àn
; j++) {

4324 i‡(
to
->
s
[
i
+
j
] !
add
->s[i+j]) ;

4326 i‡(
j
 < 
Àn
) ;

4327 
i
 +
Àn
;

4330 i‡(! 
add
->
ªach_íd
 || 
i
 <ádd->
Àn
 || i < 
to
->len) {

4331 
to
->
ªach_íd
 = 0;

4333 
to
->
Àn
 = 
i
;

4334 
to
->
ign‹e_ˇ£
 |
add
->ignore_case;

4336 
	`Æt_mîge_›t_™c_öfo
(&
to
->
™c
, &
add
->anc);

4337 i‡(! 
to
->
ªach_íd
Ëto->
™c
.
right_™ch‹
 = 0;

4338 
	}
}

4341 
	$£À˘_›t_exa˘_öfo
(
OnigEncodög
 
íc
, 
O±Exa˘Info
* 
now
, O±Exa˘Info* 
Æt
)

4343 
v1
, 
v2
;

4345 
v1
 = 
now
->
Àn
;

4346 
v2
 = 
Æt
->
Àn
;

4348 i‡(
v2
 == 0) {

4351 i‡(
v1
 == 0) {

4352 
	`c›y_›t_exa˘_öfo
(
now
, 
Æt
);

4355 i‡(
v1
 <2 && 
v2
 <= 2) {

4357 
v2
 = 
	`m≠_posôi⁄_vÆue
(
íc
, 
now
->
s
[0]);

4358 
v1
 = 
	`m≠_posôi⁄_vÆue
(
íc
, 
Æt
->
s
[0]);

4360 i‡(
now
->
Àn
 > 1Ë
v1
 += 5;

4361 i‡(
Æt
->
Àn
 > 1Ë
v2
 += 5;

4364 i‡(
now
->
ign‹e_ˇ£
 =0Ë
v1
 *= 2;

4365 i‡(
Æt
->
ign‹e_ˇ£
 =0Ë
v2
 *= 2;

4367 i‡(
	`comp_di°™˚_vÆue
(&
now
->
mmd
, &
Æt
->mmd, 
v1
, 
v2
) > 0)

4368 
	`c›y_›t_exa˘_öfo
(
now
, 
Æt
);

4369 
	}
}

4372 
	$˛ór_›t_m≠_öfo
(
O±M≠Info
* 
m≠
)

4374 c⁄° 
O±M≠Info
 
˛ón_öfo
 = {

4396 
	`xmem˝y
(
m≠
, &
˛ón_öfo
, (
O±M≠Info
));

4397 
	}
}

4400 
	$c›y_›t_m≠_öfo
(
O±M≠Info
* 
to
, O±M≠Info* 
‰om
)

4402 *
to
 = *
‰om
;

4403 
	}
}

4406 
	$add_ch¨_›t_m≠_öfo
(
O±M≠Info
* 
m≠
, 
UCh¨
 
c
, 
OnigEncodög
 
íc
)

4408 i‡(
m≠
->m≠[
c
] == 0) {

4409 
m≠
->m≠[
c
] = 1;

4410 
m≠
->
vÆue
 +
	`m≠_posôi⁄_vÆue
(
íc
, 
c
);

4412 
	}
}

4415 
	$add_ch¨_amb_›t_m≠_öfo
(
O±M≠Info
* 
m≠
, 
UCh¨
* 
p
, UCh¨* 
íd
,

4416 
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
ˇ£_fﬁd_Êag
)

4418 
OnigCa£FﬁdCodeIãm
 
ôems
[
ONIGENC_GET_CASE_FOLD_CODES_MAX_NUM
];

4419 
UCh¨
 
buf
[
ONIGENC_CODE_TO_MBC_MAXLEN
];

4420 
i
, 
n
;

4422 
	`add_ch¨_›t_m≠_öfo
(
m≠
, 
p
[0], 
íc
);

4424 
ˇ£_fﬁd_Êag
 = 
	`DISABLE_CASE_FOLD_MULTI_CHAR
(case_fold_flag);

4425 
n
 = 
	`ONIGENC_GET_CASE_FOLD_CODES_BY_STR
(
íc
, 
ˇ£_fﬁd_Êag
, 
p
, 
íd
, 
ôems
);

4426 i‡(
n
 < 0) Ç;

4428 
i
 = 0; i < 
n
; i++) {

4429 
	`ONIGENC_CODE_TO_MBC
(
íc
, 
ôems
[
i
].
code
[0], 
buf
);

4430 
	`add_ch¨_›t_m≠_öfo
(
m≠
, 
buf
[0], 
íc
);

4434 
	}
}

4437 
	$£À˘_›t_m≠_öfo
(
O±M≠Info
* 
now
, O±M≠Info* 
Æt
)

4439 
z
 = 1<<15;

4441 
v1
, 
v2
;

4443 i‡(
Æt
->
vÆue
 == 0)  ;

4444 i‡(
now
->
vÆue
 == 0) {

4445 
	`c›y_›t_m≠_öfo
(
now
, 
Æt
);

4449 
v1
 = 
z
 / 
now
->
vÆue
;

4450 
v2
 = 
z
 / 
Æt
->
vÆue
;

4451 i‡(
	`comp_di°™˚_vÆue
(&
now
->
mmd
, &
Æt
->mmd, 
v1
, 
v2
) > 0)

4452 
	`c›y_›t_m≠_öfo
(
now
, 
Æt
);

4453 
	}
}

4456 
	$comp_›t_exa˘_‹_m≠_öfo
(
O±Exa˘Info
* 
e
, 
O±M≠Info
* 
m
)

4458 
	#COMP_EM_BASE
 20

	)

4459 
ve
, 
vm
;

4461 i‡(
m
->
vÆue
 <= 0)  -1;

4463 
ve
 = 
COMP_EM_BASE
 * 
e
->
Àn
 * (e->
ign‹e_ˇ£
 ? 1 : 2);

4464 
vm
 = 
COMP_EM_BASE
 * 5 * 2 / 
m
->
vÆue
;

4465  
	`comp_di°™˚_vÆue
(&
e
->
mmd
, &
m
->mmd, 
ve
, 
vm
);

4466 
	}
}

4469 
	$Æt_mîge_›t_m≠_öfo
(
OnigEncodög
 
íc
, 
O±M≠Info
* 
to
, O±M≠Info* 
add
)

4471 
i
, 
vÆ
;

4474 i‡(
to
->
vÆue
 == 0)  ;

4475 i‡(
add
->
vÆue
 =0 || 
to
->
mmd
.
max
 <ádd->mmd.
mö
) {

4476 
	`˛ór_›t_m≠_öfo
(
to
);

4480 
	`Æt_mîge_mml
(&
to
->
mmd
, &
add
->mmd);

4482 
vÆ
 = 0;

4483 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++) {

4484 i‡(
add
->
m≠
[
i
])

4485 
to
->
m≠
[
i
] = 1;

4487 i‡(
to
->
m≠
[
i
])

4488 
vÆ
 +
	`m≠_posôi⁄_vÆue
(
íc
, 
i
);

4490 
to
->
vÆue
 = 
vÆ
;

4492 
	`Æt_mîge_›t_™c_öfo
(&
to
->
™c
, &
add
->anc);

4493 
	}
}

4496 
	$£t_bound_node_›t_öfo
(
NodeO±Info
* 
›t
, 
MöMaxLí
* 
mmd
)

4498 
	`c›y_mml
(&(
›t
->
exb
.
mmd
), mmd);

4499 
	`c›y_mml
(&(
›t
->
ex¥
.
mmd
), mmd);

4500 
	`c›y_mml
(&(
›t
->
m≠
.
mmd
), mmd);

4501 
	}
}

4504 
	$˛ór_node_›t_öfo
(
NodeO±Info
* 
›t
)

4506 
	`˛ór_mml
(&
›t
->
Àn
);

4507 
	`˛ór_›t_™c_öfo
(&
›t
->
™c
);

4508 
	`˛ór_›t_exa˘_öfo
(&
›t
->
exb
);

4509 
	`˛ór_›t_exa˘_öfo
(&
›t
->
exm
);

4510 
	`˛ór_›t_exa˘_öfo
(&
›t
->
ex¥
);

4511 
	`˛ór_›t_m≠_öfo
(&
›t
->
m≠
);

4512 
	}
}

4515 
	$c›y_node_›t_öfo
(
NodeO±Info
* 
to
, NodeO±Info* 
‰om
)

4517 *
to
 = *
‰om
;

4518 
	}
}

4521 
	$c⁄ˇt_À·_node_›t_öfo
(
OnigEncodög
 
íc
, 
NodeO±Info
* 
to
, NodeO±Info* 
add
)

4523 
exb_ªach
, 
exm_ªach
;

4524 
O±AncInfo
 
ènc
;

4526 
	`c⁄ˇt_›t_™c_öfo
(&
ènc
, &
to
->
™c
, &
add
->™c,Åo->
Àn
.
max
,ádd->len.max);

4527 
	`c›y_›t_™c_öfo
(&
to
->
™c
, &
ènc
);

4529 i‡(
add
->
exb
.
Àn
 > 0 && 
to
->Àn.
max
 == 0) {

4530 
	`c⁄ˇt_›t_™c_öfo
(&
ènc
, &
to
->
™c
, &
add
->
exb
.anc,

4531 
to
->
Àn
.
max
, 
add
->len.max);

4532 
	`c›y_›t_™c_öfo
(&
add
->
exb
.
™c
, &
ènc
);

4535 i‡(
add
->
m≠
.
vÆue
 > 0 && 
to
->
Àn
.
max
 == 0) {

4536 i‡(
add
->
m≠
.
mmd
.
max
 == 0)

4537 
add
->
m≠
.
™c
.
À·_™ch‹
 |
to
->anc.left_anchor;

4540 
exb_ªach
 = 
to
->
exb
.
ªach_íd
;

4541 
exm_ªach
 = 
to
->
exm
.
ªach_íd
;

4543 i‡(
add
->
Àn
.
max
 != 0)

4544 
to
->
exb
.
ªach_íd
 =Åo->
exm
.reach_end = 0;

4546 i‡(
add
->
exb
.
Àn
 > 0) {

4547 i‡(
exb_ªach
) {

4548 
	`c⁄ˇt_›t_exa˘_öfo
(&
to
->
exb
, &
add
->exb, 
íc
);

4549 
	`˛ór_›t_exa˘_öfo
(&
add
->
exb
);

4551 i‡(
exm_ªach
) {

4552 
	`c⁄ˇt_›t_exa˘_öfo
(&
to
->
exm
, &
add
->
exb
, 
íc
);

4553 
	`˛ór_›t_exa˘_öfo
(&
add
->
exb
);

4556 
	`£À˘_›t_exa˘_öfo
(
íc
, &
to
->
exm
, &
add
->
exb
);

4557 
	`£À˘_›t_exa˘_öfo
(
íc
, &
to
->
exm
, &
add
->exm);

4559 i‡(
to
->
ex¥
.
Àn
 > 0) {

4560 i‡(
add
->
Àn
.
max
 > 0) {

4561 i‡(
to
->
ex¥
.
Àn
 > ()
add
->Àn.
max
)

4562 
to
->
ex¥
.
Àn
 = 
add
->Àn.
max
;

4564 i‡(
to
->
ex¥
.
mmd
.
max
 == 0)

4565 
	`£À˘_›t_exa˘_öfo
(
íc
, &
to
->
exb
, &to->
ex¥
);

4567 
	`£À˘_›t_exa˘_öfo
(
íc
, &
to
->
exm
, &to->
ex¥
);

4570 i‡(
add
->
ex¥
.
Àn
 > 0) {

4571 
	`c›y_›t_exa˘_öfo
(&
to
->
ex¥
, &
add
->expr);

4574 
	`£À˘_›t_m≠_öfo
(&
to
->
m≠
, &
add
->map);

4576 
	`add_mml
(&
to
->
Àn
, &
add
->len);

4577 
	}
}

4580 
	$Æt_mîge_node_›t_öfo
(
NodeO±Info
* 
to
, NodeO±Info* 
add
, 
O±Env
* 
ív
)

4582 
	`Æt_mîge_›t_™c_öfo
 (&
to
->
™c
, &
add
->anc);

4583 
	`Æt_mîge_›t_exa˘_öfo
(&
to
->
exb
, &
add
->exb, 
ív
);

4584 
	`Æt_mîge_›t_exa˘_öfo
(&
to
->
exm
, &
add
->exm, 
ív
);

4585 
	`Æt_mîge_›t_exa˘_öfo
(&
to
->
ex¥
, &
add
->ex¥, 
ív
);

4586 
	`Æt_mîge_›t_m≠_öfo
(
ív
->
íc
, &
to
->
m≠
, &
add
->map);

4588 
	`Æt_mîge_mml
(&
to
->
Àn
, &
add
->len);

4589 
	}
}

4592 
	#MAX_NODE_OPT_INFO_REF_COUNT
 5

	)

4595 
	$›timize_node_À·
(
Node
* 
node
, 
NodeO±Info
* 
›t
, 
O±Env
* 
ív
)

4597 
ty≥
;

4598 
r
 = 0;

4600 
	`˛ór_node_›t_öfo
(
›t
);

4601 
	`£t_bound_node_›t_öfo
(
›t
, &
ív
->
mmd
);

4603 
ty≥
 = 
	`NTYPE
(
node
);

4604 
ty≥
) {

4605 
NT_LIST
:

4607 
O±Env
 
√nv
;

4608 
NodeO±Info
 
n›t
;

4609 
Node
* 
nd
 = 
node
;

4611 
	`c›y_›t_ív
(&
√nv
, 
ív
);

4613 
r
 = 
	`›timize_node_À·
(
	`NCAR
(
nd
), &
n›t
, &
√nv
);

4614 i‡(
r
 == 0) {

4615 
	`add_mml
(&
√nv
.
mmd
, &
n›t
.
Àn
);

4616 
	`c⁄ˇt_À·_node_›t_öfo
(
ív
->
íc
, 
›t
, &
n›t
);

4618 } 
r
 =0 && 
	`IS_NOT_NULL
(
nd
 = 
	`NCDR
(nd)));

4622 
NT_ALT
:

4624 
NodeO±Info
 
n›t
;

4625 
Node
* 
nd
 = 
node
;

4628 
r
 = 
	`›timize_node_À·
(
	`NCAR
(
nd
), &
n›t
, 
ív
);

4629 i‡(
r
 == 0) {

4630 i‡(
nd
 =
node
Ë
	`c›y_node_›t_öfo
(
›t
, &
n›t
);

4631 
	`Æt_mîge_node_›t_öfo
(
›t
, &
n›t
, 
ív
);

4633 } (
r
 =0Ë&& 
	`IS_NOT_NULL
(
nd
 = 
	`NCDR
(nd)));

4637 
NT_STR
:

4639 
SåNode
* 
¢
 = 
	`NSTR
(
node
);

4640 
¶í
 = 
¢
->
íd
 - sn->
s
;

4641 
is_øw
 = 
	`NSTRING_IS_RAW
(
node
);

4643 i‡(! 
	`NSTRING_IS_AMBIG
(
node
)) {

4644 
	`c⁄ˇt_›t_exa˘_öfo_°r
(&
›t
->
exb
, 
¢
->
s
, sn->
íd
,

4645 
	`NSTRING_IS_RAW
(
node
), 
ív
->
íc
);

4646 i‡(
¶í
 > 0) {

4647 
	`add_ch¨_›t_m≠_öfo
(&
›t
->
m≠
, *(
¢
->
s
), 
ív
->
íc
);

4649 
	`£t_mml
(&
›t
->
Àn
, 
¶í
, slen);

4652 
max
;

4654 i‡(
	`NSTRING_IS_DONT_GET_OPT_INFO
(
node
)) {

4655 
n
 = 
	`⁄igíc_°æí
(
ív
->
íc
, 
¢
->
s
, sn->
íd
);

4656 
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
Ë* 
n
;

4659 
	`c⁄ˇt_›t_exa˘_öfo_°r
(&
›t
->
exb
, 
¢
->
s
, sn->
íd
,

4660 
is_øw
, 
ív
->
íc
);

4661 
›t
->
exb
.
ign‹e_ˇ£
 = 1;

4663 i‡(
¶í
 > 0) {

4664 
r
 = 
	`add_ch¨_amb_›t_m≠_öfo
(&
›t
->
m≠
, 
¢
->
s
, sn->
íd
,

4665 
ív
->
íc
,Énv->
ˇ£_fﬁd_Êag
);

4666 i‡(
r
 != 0) ;

4669 
max
 = 
¶í
;

4672 
	`£t_mml
(&
›t
->
Àn
, 
¶í
, 
max
);

4675 i‡(
›t
->
exb
.
Àn
 =
¶í
)

4676 
›t
->
exb
.
ªach_íd
 = 1;

4680 
NT_CCLASS
:

4682 
i
, 
z
;

4683 
CCœssNode
* 
cc
 = 
	`NCCLASS
(
node
);

4687 i‡(
	`IS_NOT_NULL
(
cc
->
mbuf
Ë|| 
	`IS_NCCLASS_NOT
(cc)) {

4688 
OnigLí
 
mö
 = 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
);

4689 
OnigLí
 
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
);

4691 
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4694 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

4695 
z
 = 
	`BITSET_AT
(
cc
->
bs
, 
i
);

4696 i‡((
z
 && !
	`IS_NCCLASS_NOT
(
cc
)) || (!z && IS_NCCLASS_NOT(cc))) {

4697 
	`add_ch¨_›t_m≠_öfo
(&
›t
->
m≠
, (
UCh¨
 )
i
, 
ív
->
íc
);

4700 
	`£t_mml
(&
›t
->
Àn
, 1, 1);

4705 
NT_CTYPE
:

4707 
i
, 
mö
, 
max
;

4709 
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
);

4711 i‡(
max
 == 1) {

4712 
mö
 = 1;

4714 
	`NCTYPE
(
node
)->
˘y≥
) {

4715 
ONIGENC_CTYPE_WORD
:

4716 i‡(
	`NCTYPE
(
node
)->
nŸ
 != 0) {

4717 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

4718 i‡(! 
	`ONIGENC_IS_CODE_WORD
(
ív
->
íc
, 
i
)) {

4719 
	`add_ch¨_›t_m≠_öfo
(&
›t
->
m≠
, (
UCh¨
 )
i
, 
ív
->
íc
);

4724 
i
 = 0; i < 
SINGLE_BYTE_SIZE
; i++) {

4725 i‡(
	`ONIGENC_IS_CODE_WORD
(
ív
->
íc
, 
i
)) {

4726 
	`add_ch¨_›t_m≠_öfo
(&
›t
->
m≠
, (
UCh¨
 )
i
, 
ív
->
íc
);

4734 
mö
 = 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
);

4736 
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4740 
NT_CANY
:

4742 
OnigLí
 
mö
 = 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
);

4743 
OnigLí
 
max
 = 
	`ONIGENC_MBC_MAXLEN_DIST
(
ív
->
íc
);

4744 
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4748 
NT_ANCHOR
:

4749 
	`NANCHOR
(
node
)->
ty≥
) {

4750 
ANCHOR_BEGIN_BUF
:

4751 
ANCHOR_BEGIN_POSITION
:

4752 
ANCHOR_BEGIN_LINE
:

4753 
ANCHOR_END_BUF
:

4754 
ANCHOR_SEMI_END_BUF
:

4755 
ANCHOR_END_LINE
:

4756 
ANCHOR_PREC_READ_NOT
:

4757 
ANCHOR_LOOK_BEHIND
:

4758 
	`add_›t_™c_öfo
(&
›t
->
™c
, 
	`NANCHOR
(
node
)->
ty≥
);

4761 
ANCHOR_PREC_READ
:

4763 
NodeO±Info
 
n›t
;

4765 
r
 = 
	`›timize_node_À·
(
	`NANCHOR
(
node
)->
èrgë
, &
n›t
, 
ív
);

4766 i‡(
r
 == 0) {

4767 i‡(
n›t
.
exb
.
Àn
 > 0)

4768 
	`c›y_›t_exa˘_öfo
(&
›t
->
ex¥
, &
n›t
.
exb
);

4769 i‡(
n›t
.
exm
.
Àn
 > 0)

4770 
	`c›y_›t_exa˘_öfo
(&
›t
->
ex¥
, &
n›t
.
exm
);

4772 
›t
->
ex¥
.
ªach_íd
 = 0;

4774 i‡(
n›t
.
m≠
.
vÆue
 > 0)

4775 
	`c›y_›t_m≠_öfo
(&
›t
->
m≠
, &
n›t
.map);

4780 
ANCHOR_LOOK_BEHIND_NOT
:

4785 
NT_BREF
:

4787 
i
;

4788 * 
backs
;

4789 
OnigLí
 
mö
, 
max
, 
tmö
, 
tmax
;

4790 
Node
** 
nodes
 = 
	`SCANENV_MEM_NODES
(
ív
->
sˇn_ív
);

4791 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

4793 i‡(
br
->
°©e
 & 
NST_RECURSION
) {

4794 
	`£t_mml
(&
›t
->
Àn
, 0, 
ONIG_INFINITE_DISTANCE
);

4797 
backs
 = 
	`BACKREFS_P
(
br
);

4798 
r
 = 
	`gë_mö_Àn
(
nodes
[
backs
[0]], &
mö
, 
ív
->
sˇn_ív
);

4799 i‡(
r
 != 0) ;

4800 
r
 = 
	`gë_max_Àn
(
nodes
[
backs
[0]], &
max
, 
ív
->
sˇn_ív
);

4801 i‡(
r
 != 0) ;

4802 
i
 = 1; i < 
br
->
back_num
; i++) {

4803 
r
 = 
	`gë_mö_Àn
(
nodes
[
backs
[
i
]], &
tmö
, 
ív
->
sˇn_ív
);

4804 i‡(
r
 != 0) ;

4805 
r
 = 
	`gë_max_Àn
(
nodes
[
backs
[
i
]], &
tmax
, 
ív
->
sˇn_ív
);

4806 i‡(
r
 != 0) ;

4807 i‡(
mö
 > 
tmö
) min =Åmin;

4808 i‡(
max
 < 
tmax
) max =Åmax;

4810 i‡(
r
 =0Ë
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4814 #ifde‡
USE_SUBEXP_CALL


4815 
NT_CALL
:

4816 i‡(
	`IS_CALL_RECURSION
(
	`NCALL
(
node
)))

4817 
	`£t_mml
(&
›t
->
Àn
, 0, 
ONIG_INFINITE_DISTANCE
);

4819 
OnigO±i⁄Ty≥
 
ßve
 = 
ív
->
›ti⁄s
;

4820 
ív
->
›ti⁄s
 = 
	`NENCLOSE
(
	`NCALL
(
node
)->
èrgë
)->
›ti⁄
;

4821 
r
 = 
	`›timize_node_À·
(
	`NCALL
(
node
)->
èrgë
, 
›t
, 
ív
);

4822 
ív
->
›ti⁄s
 = 
ßve
;

4827 
NT_QTFR
:

4829 
i
;

4830 
OnigLí
 
mö
, 
max
;

4831 
NodeO±Info
 
n›t
;

4832 
Qt‰Node
* 
qn
 = 
	`NQTFR
(
node
);

4834 
r
 = 
	`›timize_node_À·
(
qn
->
èrgë
, &
n›t
, 
ív
);

4835 i‡(
r
) ;

4837 i‡(
qn
->
lowî
 =0 && 
	`IS_REPEAT_INFINITE
(qn->
uµî
)) {

4838 i‡(
ív
->
mmd
.
max
 == 0 &&

4839 
	`NTYPE
(
qn
->
èrgë
Ë=
NT_CANY
 && qn->
gªedy
) {

4840 i‡(
	`IS_MULTILINE
(
ív
->
›ti⁄s
))

4841 
	`add_›t_™c_öfo
(&
›t
->
™c
, 
ANCHOR_ANYCHAR_STAR_ML
);

4843 
	`add_›t_™c_öfo
(&
›t
->
™c
, 
ANCHOR_ANYCHAR_STAR
);

4847 i‡(
qn
->
lowî
 > 0) {

4848 
	`c›y_node_›t_öfo
(
›t
, &
n›t
);

4849 i‡(
n›t
.
exb
.
Àn
 > 0) {

4850 i‡(
n›t
.
exb
.
ªach_íd
) {

4851 
i
 = 2; i <
qn
->
lowî
 &&

4852 ! 
	`is_fuŒ_›t_exa˘_öfo
(&
›t
->
exb
); 
i
++) {

4853 
	`c⁄ˇt_›t_exa˘_öfo
(&
›t
->
exb
, &
n›t
.exb, 
ív
->
íc
);

4855 i‡(
i
 < 
qn
->
lowî
) {

4856 
›t
->
exb
.
ªach_íd
 = 0;

4861 i‡(
qn
->
lowî
 !qn->
uµî
) {

4862 
›t
->
exb
.
ªach_íd
 = 0;

4863 
›t
->
exm
.
ªach_íd
 = 0;

4865 i‡(
qn
->
lowî
 > 1)

4866 
›t
->
exm
.
ªach_íd
 = 0;

4870 
mö
 = 
	`di°™˚_mu…ùly
(
n›t
.
Àn
.mö, 
qn
->
lowî
);

4871 i‡(
	`IS_REPEAT_INFINITE
(
qn
->
uµî
))

4872 
max
 = (
n›t
.
Àn
.max > 0 ? 
ONIG_INFINITE_DISTANCE
 : 0);

4874 
max
 = 
	`di°™˚_mu…ùly
(
n›t
.
Àn
.max, 
qn
->
uµî
);

4876 
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4880 
NT_ENCLOSE
:

4882 
En˛o£Node
* 
í
 = 
	`NENCLOSE
(
node
);

4884 
í
->
ty≥
) {

4885 
ENCLOSE_OPTION
:

4887 
OnigO±i⁄Ty≥
 
ßve
 = 
ív
->
›ti⁄s
;

4889 
ív
->
›ti⁄s
 = 
í
->
›ti⁄
;

4890 
r
 = 
	`›timize_node_À·
(
í
->
èrgë
, 
›t
, 
ív
);

4891 
ív
->
›ti⁄s
 = 
ßve
;

4895 
ENCLOSE_MEMORY
:

4896 #ifde‡
USE_SUBEXP_CALL


4897 
í
->
›t_cou¡
++;

4898 i‡(
í
->
›t_cou¡
 > 
MAX_NODE_OPT_INFO_REF_COUNT
) {

4899 
OnigLí
 
mö
, 
max
;

4901 
mö
 = 0;

4902 
max
 = 
ONIG_INFINITE_DISTANCE
;

4903 i‡(
	`IS_ENCLOSE_MIN_FIXED
(
í
)Ë
mö
 =Én->
mö_Àn
;

4904 i‡(
	`IS_ENCLOSE_MAX_FIXED
(
í
)Ë
max
 =Én->
max_Àn
;

4905 
	`£t_mml
(&
›t
->
Àn
, 
mö
, 
max
);

4910 
r
 = 
	`›timize_node_À·
(
í
->
èrgë
, 
›t
, 
ív
);

4912 i‡(
	`is_£t_›t_™c_öfo
(&
›t
->
™c
, 
ANCHOR_ANYCHAR_STAR_MASK
)) {

4913 i‡(
	`BIT_STATUS_AT
(
ív
->
sˇn_ív
->
backª„d_mem
, 
í
->
ªgnum
))

4914 
	`ªmove_›t_™c_öfo
(&
›t
->
™c
, 
ANCHOR_ANYCHAR_STAR_MASK
);

4919 
ENCLOSE_STOP_BACKTRACK
:

4920 
r
 = 
	`›timize_node_À·
(
í
->
èrgë
, 
›t
, 
ív
);

4927 #ifde‡
ONIG_DEBUG


4928 
	`Ârötf
(
°dîr
, "optimize_node_left: undefinedÇodeÅype %d\n",

4929 
	`NTYPE
(
node
));

4931 
r
 = 
ONIGERR_TYPE_BUG
;

4935  
r
;

4936 
	}
}

4939 
	$£t_›timize_exa˘_öfo
(
ªgex_t
* 
ªg
, 
O±Exa˘Info
* 
e
)

4941 
r
;

4943 i‡(
e
->
Àn
 == 0)  0;

4945 i‡(
e
->
ign‹e_ˇ£
) {

4946 
ªg
->
exa˘
 = (
UCh¨
* )
	`xmÆloc
(
e
->
Àn
);

4947 
	`CHECK_NULL_RETURN_MEMERR
(
ªg
->
exa˘
);

4948 
	`xmem˝y
(
ªg
->
exa˘
, 
e
->
s
,É->
Àn
);

4949 
ªg
->
exa˘_íd
 =Ñeg->
exa˘
 + 
e
->
Àn
;

4950 
ªg
->
›timize
 = 
ONIG_OPTIMIZE_EXACT_IC
;

4953 
Ælow_ªvî£
;

4955 
ªg
->
exa˘
 = 
	`°r_dup
(
e
->
s
,É->†+É->
Àn
);

4956 
	`CHECK_NULL_RETURN_MEMERR
(
ªg
->
exa˘
);

4957 
ªg
->
exa˘_íd
 =Ñeg->
exa˘
 + 
e
->
Àn
;

4959 
Ælow_ªvî£
 =

4960 
	`ONIGENC_IS_ALLOWED_REVERSE_MATCH
(
ªg
->
íc
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
);

4962 i‡(
e
->
Àn
 >3 || (e->À¿>2 && 
Ælow_ªvî£
)) {

4963 
r
 = 
	`£t_bm_skù
(
ªg
->
exa˘
,Ñeg->
exa˘_íd
,Ñeg->
íc
,

4964 
ªg
->
m≠
, &‘eg->
öt_m≠
));

4965 i‡(
r
) Ñ;

4967 
ªg
->
›timize
 = (
Ælow_ªvî£
 != 0

4968 ? 
ONIG_OPTIMIZE_EXACT_BM
 : 
ONIG_OPTIMIZE_EXACT_BM_NOT_REV
);

4971 
ªg
->
›timize
 = 
ONIG_OPTIMIZE_EXACT
;

4975 
ªg
->
dmö
 = 
e
->
mmd
.
mö
;

4976 
ªg
->
dmax
 = 
e
->
mmd
.
max
;

4978 i‡(
ªg
->
dmö
 !
ONIG_INFINITE_DISTANCE
) {

4979 
ªg
->
thªshﬁd_Àn
 =Ñeg->
dmö
 + (ªg->
exa˘_íd
 -Ñeg->
exa˘
);

4983 
	}
}

4986 
	$£t_›timize_m≠_öfo
(
ªgex_t
* 
ªg
, 
O±M≠Info
* 
m
)

4988 
i
;

4990 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++)

4991 
ªg
->
m≠
[
i
] = 
m
->map[i];

4993 
ªg
->
›timize
 = 
ONIG_OPTIMIZE_MAP
;

4994 
ªg
->
dmö
 = 
m
->
mmd
.
mö
;

4995 
ªg
->
dmax
 = 
m
->
mmd
.
max
;

4997 i‡(
ªg
->
dmö
 !
ONIG_INFINITE_DISTANCE
) {

4998 
ªg
->
thªshﬁd_Àn
 =Ñeg->
dmö
 + 1;

5000 
	}
}

5003 
	$£t_sub_™ch‹
(
ªgex_t
* 
ªg
, 
O±AncInfo
* 
™c
)

5005 
ªg
->
sub_™ch‹
 |
™c
->
À·_™ch‹
 & 
ANCHOR_BEGIN_LINE
;

5006 
ªg
->
sub_™ch‹
 |
™c
->
right_™ch‹
 & 
ANCHOR_END_LINE
;

5007 
	}
}

5009 #ifde‡
ONIG_DEBUG


5010 
¥öt_›timize_öfo
(
FILE
* 
f
, 
ªgex_t
* 
ªg
);

5014 
	$£t_›timize_öfo_‰om_åì
(
Node
* 
node
, 
ªgex_t
* 
ªg
, 
SˇnEnv
* 
sˇn_ív
)

5017 
r
;

5018 
NodeO±Info
 
›t
;

5019 
O±Env
 
ív
;

5021 
ív
.
íc
 = 
ªg
->enc;

5022 
ív
.
›ti⁄s
 = 
ªg
->options;

5023 
ív
.
ˇ£_fﬁd_Êag
 = 
ªg
->case_fold_flag;

5024 
ív
.
sˇn_ív
 = scan_env;

5025 
	`˛ór_mml
(&
ív
.
mmd
);

5027 
r
 = 
	`›timize_node_À·
(
node
, &
›t
, &
ív
);

5028 i‡(
r
) Ñ;

5030 
ªg
->
™ch‹
 = 
›t
.
™c
.
À·_™ch‹
 & (
ANCHOR_BEGIN_BUF
 |

5031 
ANCHOR_BEGIN_POSITION
 | 
ANCHOR_ANYCHAR_STAR
 | 
ANCHOR_ANYCHAR_STAR_ML
 |

5032 
ANCHOR_LOOK_BEHIND
);

5034 i‡((
›t
.
™c
.
À·_™ch‹
 & (
ANCHOR_LOOK_BEHIND
 | 
ANCHOR_PREC_READ_NOT
)) != 0)

5035 
ªg
->
™ch‹
 &~
ANCHOR_ANYCHAR_STAR_ML
;

5037 
ªg
->
™ch‹
 |
›t
.
™c
.
right_™ch‹
 & (
ANCHOR_END_BUF
 | 
ANCHOR_SEMI_END_BUF
 |

5038 
ANCHOR_PREC_READ_NOT
);

5040 i‡(
ªg
->
™ch‹
 & (
ANCHOR_END_BUF
 | 
ANCHOR_SEMI_END_BUF
)) {

5041 
ªg
->
™ch‹_dmö
 = 
›t
.
Àn
.
mö
;

5042 
ªg
->
™ch‹_dmax
 = 
›t
.
Àn
.
max
;

5045 i‡(
›t
.
exb
.
Àn
 > 0 || o±.
exm
.len > 0) {

5046 
	`£À˘_›t_exa˘_öfo
(
ªg
->
íc
, &
›t
.
exb
, &›t.
exm
);

5047 i‡(
›t
.
m≠
.
vÆue
 > 0 &&

5048 
	`comp_›t_exa˘_‹_m≠_öfo
(&
›t
.
exb
, &›t.
m≠
) > 0) {

5049 
£t_m≠
;

5052 
r
 = 
	`£t_›timize_exa˘_öfo
(
ªg
, &
›t
.
exb
);

5053 
	`£t_sub_™ch‹
(
ªg
, &
›t
.
exb
.
™c
);

5056 i‡(
›t
.
m≠
.
vÆue
 > 0) {

5057 
£t_m≠
:

5058 
	`£t_›timize_m≠_öfo
(
ªg
, &
›t
.
m≠
);

5059 
	`£t_sub_™ch‹
(
ªg
, &
›t
.
m≠
.
™c
);

5062 
ªg
->
sub_™ch‹
 |
›t
.
™c
.
À·_™ch‹
 & 
ANCHOR_BEGIN_LINE
;

5063 i‡(
›t
.
Àn
.
max
 == 0)

5064 
ªg
->
sub_™ch‹
 |
›t
.
™c
.
right_™ch‹
 & 
ANCHOR_END_LINE
;

5067 #i‡
	`deföed
(
ONIG_DEBUG_COMPILE
Ë|| deföed(
ONIG_DEBUG_MATCH
)

5068 
	`¥öt_›timize_öfo
(
°dîr
, 
ªg
);

5070  
r
;

5071 
	}
}

5074 
	$˛ór_›timize_öfo
(
ªgex_t
* 
ªg
)

5076 
ªg
->
›timize
 = 
ONIG_OPTIMIZE_NONE
;

5077 
ªg
->
™ch‹
 = 0;

5078 
ªg
->
™ch‹_dmö
 = 0;

5079 
ªg
->
™ch‹_dmax
 = 0;

5080 
ªg
->
sub_™ch‹
 = 0;

5081 
ªg
->
exa˘_íd
 = (
UCh¨
* )
NULL
;

5082 
ªg
->
thªshﬁd_Àn
 = 0;

5083 i‡(
	`IS_NOT_NULL
(
ªg
->
exa˘
)) {

5084 
	`x‰ì
(
ªg
->
exa˘
);

5085 
ªg
->
exa˘
 = (
UCh¨
* )
NULL
;

5087 
	}
}

5089 #ifde‡
ONIG_DEBUG


5091 
	$¥öt_íc_°rög
(
FILE
* 
Â
, 
OnigEncodög
 
íc
,

5092 c⁄° 
UCh¨
 *
s
, c⁄° UCh¨ *
íd
)

5094 
	`Ârötf
(
Â
, "\nPATTERN: /");

5096 i‡(
	`ONIGENC_MBC_MINLEN
(
íc
) > 1) {

5097 c⁄° 
UCh¨
 *
p
;

5098 
OnigCodePoöt
 
code
;

5100 
p
 = 
s
;

5101 
p
 < 
íd
) {

5102 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

5103 i‡(
code
 >= 0x80) {

5104 
	`Ârötf
(
Â
, " 0x%04x ", ()
code
);

5107 
	`Âutc
(()
code
, 
Â
);

5110 
p
 +
	`í˛í
(
íc
,Ö);

5114 
s
 < 
íd
) {

5115 
	`Âutc
(()*
s
, 
Â
);

5116 
s
++;

5120 
	`Ârötf
(
Â
, "/\n");

5121 
	}
}

5124 
	$¥öt_di°™˚_ønge
(
FILE
* 
f
, 
OnigLí
 
a
, OnigLí 
b
)

5126 i‡(
a
 =
ONIG_INFINITE_DISTANCE
)

5127 
	`Âuts
("öf", 
f
);

5129 
	`Ârötf
(
f
, "(%u)", 
a
);

5131 
	`Âuts
("-", 
f
);

5133 i‡(
b
 =
ONIG_INFINITE_DISTANCE
)

5134 
	`Âuts
("öf", 
f
);

5136 
	`Ârötf
(
f
, "(%u)", 
b
);

5137 
	}
}

5140 
	$¥öt_™ch‹
(
FILE
* 
f
, 
™ch‹
)

5142 
q
 = 0;

5144 
	`Ârötf
(
f
, "[");

5146 i‡(
™ch‹
 & 
ANCHOR_BEGIN_BUF
) {

5147 
	`Ârötf
(
f
, "begin-buf");

5148 
q
 = 1;

5150 i‡(
™ch‹
 & 
ANCHOR_BEGIN_LINE
) {

5151 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5152 
q
 = 1;

5153 
	`Ârötf
(
f
, "begin-line");

5155 i‡(
™ch‹
 & 
ANCHOR_BEGIN_POSITION
) {

5156 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5157 
q
 = 1;

5158 
	`Ârötf
(
f
, "begin-pos");

5160 i‡(
™ch‹
 & 
ANCHOR_END_BUF
) {

5161 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5162 
q
 = 1;

5163 
	`Ârötf
(
f
, "end-buf");

5165 i‡(
™ch‹
 & 
ANCHOR_SEMI_END_BUF
) {

5166 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5167 
q
 = 1;

5168 
	`Ârötf
(
f
, "semi-end-buf");

5170 i‡(
™ch‹
 & 
ANCHOR_END_LINE
) {

5171 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5172 
q
 = 1;

5173 
	`Ârötf
(
f
, "end-line");

5175 i‡(
™ch‹
 & 
ANCHOR_ANYCHAR_STAR
) {

5176 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5177 
q
 = 1;

5178 
	`Ârötf
(
f
, "anychar-star");

5180 i‡(
™ch‹
 & 
ANCHOR_ANYCHAR_STAR_ML
) {

5181 i‡(
q
Ë
	`Ârötf
(
f
, ", ");

5182 
	`Ârötf
(
f
, "anychar-star-ml");

5185 
	`Ârötf
(
f
, "]");

5186 
	}
}

5189 
	$¥öt_›timize_öfo
(
FILE
* 
f
, 
ªgex_t
* 
ªg
)

5191 c⁄° * 
⁄
[] = { "NONE", "EXACT", "EXACT_BM", "EXACT_BM_NOT_REV",

5194 
	`Ârötf
(
f
, "›timize: %s\n", 
⁄
[
ªg
->
›timize
]);

5195 
	`Ârötf
(
f
, "ánch‹: "); 
	`¥öt_™ch‹
(f, 
ªg
->
™ch‹
);

5196 i‡((
ªg
->
™ch‹
 & 
ANCHOR_END_BUF_MASK
) != 0)

5197 
	`¥öt_di°™˚_ønge
(
f
, 
ªg
->
™ch‹_dmö
,Ñeg->
™ch‹_dmax
);

5198 
	`Ârötf
(
f
, "\n");

5200 i‡(
ªg
->
›timize
) {

5201 
	`Ârötf
(
f
, " subánch‹: "); 
	`¥öt_™ch‹
(f, 
ªg
->
sub_™ch‹
);

5202 
	`Ârötf
(
f
, "\n");

5204 
	`Ârötf
(
f
, "\n");

5206 i‡(
ªg
->
exa˘
) {

5207 
UCh¨
 *
p
;

5208 
	`Ârötf
(
f
, "exact: [");

5209 
p
 = 
ªg
->
exa˘
;Ö <Ñeg->
exa˘_íd
;Ö++) {

5210 
	`Âutc
(*
p
, 
f
);

5212 
	`Ârötf
(
f
, "]:Üígth: %ld\n", (
ªg
->
exa˘_íd
 -Ñeg->
exa˘
));

5214 i‡(
ªg
->
›timize
 & 
ONIG_OPTIMIZE_MAP
) {

5215 
c
, 
i
, 
n
 = 0;

5217 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++)

5218 i‡(
ªg
->
m≠
[
i
]Ë
n
++;

5220 
	`Ârötf
(
f
, "m≠:Ç=%d\n", 
n
);

5221 i‡(
n
 > 0) {

5222 
c
 = 0;

5223 
	`Âutc
('[', 
f
);

5224 
i
 = 0; i < 
ONIG_CHAR_TABLE_SIZE
; i++) {

5225 i‡(
ªg
->
m≠
[
i
] != 0) {

5226 i‡(
c
 > 0Ë
	`Âuts
(", ", 
f
);

5227 
c
++;

5228 i‡(
	`ONIGENC_MBC_MAXLEN
(
ªg
->
íc
) == 1 &&

5229 
	`ONIGENC_IS_CODE_PRINT
(
ªg
->
íc
, (
OnigCodePoöt
 )
i
))

5230 
	`Âutc
(
i
, 
f
);

5232 
	`Ârötf
(
f
, "%d", 
i
);

5235 
	`Ârötf
(
f
, "]\n");

5238 
	}
}

5243 
	$⁄ig_‰ì_body
(
ªgex_t
* 
ªg
)

5245 i‡(
	`IS_NOT_NULL
(
ªg
)) {

5246 i‡(
	`IS_NOT_NULL
(
ªg
->
p
)Ë
	`x‰ì
(reg->p);

5247 i‡(
	`IS_NOT_NULL
(
ªg
->
exa˘
)Ë
	`x‰ì
(reg->exact);

5248 i‡(
	`IS_NOT_NULL
(
ªg
->
öt_m≠
)Ë
	`x‰ì
(reg->int_map);

5249 i‡(
	`IS_NOT_NULL
(
ªg
->
öt_m≠_backw¨d
)Ë
	`x‰ì
(reg->int_map_backward);

5250 i‡(
	`IS_NOT_NULL
(
ªg
->
ª≥©_ønge
)Ë
	`x‰ì
(reg->repeat_range);

5251 i‡(
	`IS_NOT_NULL
(
ªg
->
chaö
)Ë
	`⁄ig_‰ì
(reg->chain);

5253 #ifde‡
USE_NAMED_GROUP


5254 
	`⁄ig_«mes_‰ì
(
ªg
);

5257 
	}
}

5260 
	$⁄ig_‰ì
(
ªgex_t
* 
ªg
)

5262 i‡(
	`IS_NOT_NULL
(
ªg
)) {

5263 
	`⁄ig_‰ì_body
(
ªg
);

5264 
	`x‰ì
(
ªg
);

5266 
	}
}

5268 
	#REGEX_TRANSFER
(
to
,
‰om
) do {\

5269 
	`⁄ig_‰ì_body
(
to
);\

5270 
	`xmem˝y
(
to
, 
‰om
, (
ªgex_t
));\

5271 
	`x‰ì
(
‰om
);\

5272 } 0)

	)

5275 
	$⁄ig_å™s„r
(
ªgex_t
* 
to
,Ñegex_t* 
‰om
)

5277 
	`REGEX_TRANSFER
(
to
, 
‰om
);

5278 
	}
}

5281 #ifde‡
ONIG_DEBUG


5282 
¥öt_compûed_byã_code_li°
 
P_
((
FILE
* 
f
, 
ªgex_t
* 
ªg
));

5284 #ifde‡
ONIG_DEBUG_PARSE_TREE


5285 
¥öt_åì
 
P_
((
FILE
* 
f
, 
Node
* 
node
));

5289 
	$⁄ig_compûe
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
∑âîn_íd
,

5290 
OnigEº‹Info
* 
eöfo
)

5292 
	#COMPILE_INIT_SIZE
 20

	)

5294 
r
, 
öô_size
;

5295 
Node
* 
roŸ
;

5296 
SˇnEnv
 
sˇn_ív
;

5297 #ifde‡
USE_SUBEXP_CALL


5298 
Un£tAddrLi°
 
u¶i°
;

5301 
roŸ
 = 0;

5302 i‡(
	`IS_NOT_NULL
(
eöfo
)Ëeöfo->
∑r
 = (
UCh¨
* )
NULL
;

5304 #ifde‡
ONIG_DEBUG


5305 
	`¥öt_íc_°rög
(
°dîr
, 
ªg
->
íc
, 
∑âîn
, 
∑âîn_íd
);

5308 i‡(
ªg
->
Æloc
 == 0) {

5309 
öô_size
 = (
∑âîn_íd
 - 
∑âîn
) * 2;

5310 i‡(
öô_size
 <0Ëöô_sizê
COMPILE_INIT_SIZE
;

5311 
r
 = 
	`BBUF_INIT
(
ªg
, 
öô_size
);

5312 i‡(
r
 !0Ë
íd
;

5315 
ªg
->
u£d
 = 0;

5317 
ªg
->
num_mem
 = 0;

5318 
ªg
->
num_ª≥©
 = 0;

5319 
ªg
->
num_nuŒ_check
 = 0;

5320 
ªg
->
ª≥©_ønge_Æloc
 = 0;

5321 
ªg
->
ª≥©_ønge
 = (
OnigRïótR™ge
* )
NULL
;

5322 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


5323 
ªg
->
num_comb_exp_check
 = 0;

5326 
r
 = 
	`⁄ig_∑r£_make_åì
(&
roŸ
, 
∑âîn
, 
∑âîn_íd
, 
ªg
, &
sˇn_ív
);

5327 i‡(
r
 !0Ë
îr
;

5329 #ifde‡
USE_NAMED_GROUP


5331 i‡(
sˇn_ív
.
num_«med
 > 0 &&

5332 
	`IS_SYNTAX_BV
(
sˇn_ív
.
sy¡ax
, 
ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
) &&

5333 !
	`ONIG_IS_OPTION_ON
(
ªg
->
›ti⁄s
, 
ONIG_OPTION_CAPTURE_GROUP
)) {

5334 i‡(
sˇn_ív
.
num_«med
 !sˇn_ív.
num_mem
)

5335 
r
 = 
	`dißbÀ_n⁄ame_group_ˇ±uª
(&
roŸ
, 
ªg
, &
sˇn_ív
);

5337 
r
 = 
	`numbîed_ªf_check
(
roŸ
);

5339 i‡(
r
 !0Ë
îr
;

5343 #ifde‡
USE_SUBEXP_CALL


5344 i‡(
sˇn_ív
.
num_ˇŒ
 > 0) {

5345 
r
 = 
	`un£t_addr_li°_öô
(&
u¶i°
, 
sˇn_ív
.
num_ˇŒ
);

5346 i‡(
r
 !0Ë
îr
;

5347 
sˇn_ív
.
un£t_addr_li°
 = &
u¶i°
;

5348 
r
 = 
	`£tup_subexp_ˇŒ
(
roŸ
, &
sˇn_ív
);

5349 i‡(
r
 !0Ë
îr_un£t
;

5350 
r
 = 
	`subexp_ªcursive_check_åav
(
roŸ
, &
sˇn_ív
);

5351 i‡(
r
 < 0Ë
îr_un£t
;

5352 
r
 = 
	`subexp_öf_ªcursive_check_åav
(
roŸ
, &
sˇn_ív
);

5353 i‡(
r
 !0Ë
îr_un£t
;

5355 
ªg
->
num_ˇŒ
 = 
sˇn_ív
.num_call;

5358 
ªg
->
num_ˇŒ
 = 0;

5361 
r
 = 
	`£tup_åì
(
roŸ
, 
ªg
, 0, &
sˇn_ív
);

5362 i‡(
r
 !0Ë
îr_un£t
;

5364 #ifde‡
ONIG_DEBUG_PARSE_TREE


5365 
	`¥öt_åì
(
°dîr
, 
roŸ
);

5368 
ªg
->
ˇ±uª_hi°‹y
 = 
sˇn_ív
.capture_history;

5369 
ªg
->
bt_mem_°¨t
 = 
sˇn_ív
.bt_mem_start;

5370 
ªg
->
bt_mem_°¨t
 |ªg->
ˇ±uª_hi°‹y
;

5371 i‡(
	`IS_FIND_CONDITION
(
ªg
->
›ti⁄s
))

5372 
	`BIT_STATUS_ON_ALL
(
ªg
->
bt_mem_íd
);

5374 
ªg
->
bt_mem_íd
 = 
sˇn_ív
.bt_mem_end;

5375 
ªg
->
bt_mem_íd
 |ªg->
ˇ±uª_hi°‹y
;

5378 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


5379 i‡(
sˇn_ív
.
backª„d_mem
 == 0

5380 #ifde‡
USE_SUBEXP_CALL


5381 || 
sˇn_ív
.
num_ˇŒ
 == 0

5384 
	`£tup_comb_exp_check
(
roŸ
, 0, &
sˇn_ív
);

5385 #ifde‡
USE_SUBEXP_CALL


5386 i‡(
sˇn_ív
.
has_ªcursi⁄
 != 0) {

5387 
sˇn_ív
.
num_comb_exp_check
 = 0;

5391 i‡(
sˇn_ív
.
comb_exp_max_ªgnum
 > 0) {

5392 
i
;

5393 
i
 = 1; i <
sˇn_ív
.
comb_exp_max_ªgnum
; i++) {

5394 i‡(
	`BIT_STATUS_AT
(
sˇn_ív
.
backª„d_mem
, 
i
) != 0) {

5395 
sˇn_ív
.
num_comb_exp_check
 = 0;

5402 
ªg
->
num_comb_exp_check
 = 
sˇn_ív
.num_comb_exp_check;

5405 
	`˛ór_›timize_öfo
(
ªg
);

5406 #i‚de‡
ONIG_DONT_OPTIMIZE


5407 
r
 = 
	`£t_›timize_öfo_‰om_åì
(
roŸ
, 
ªg
, &
sˇn_ív
);

5408 i‡(
r
 !0Ë
îr_un£t
;

5411 i‡(
	`IS_NOT_NULL
(
sˇn_ív
.
mem_nodes_dy«mic
)) {

5412 
	`x‰ì
(
sˇn_ív
.
mem_nodes_dy«mic
);

5413 
sˇn_ív
.
mem_nodes_dy«mic
 = (
Node
** )
NULL
;

5416 
r
 = 
	`compûe_åì
(
roŸ
, 
ªg
);

5417 i‡(
r
 == 0) {

5418 
r
 = 
	`add_›code
(
ªg
, 
OP_END
);

5419 #ifde‡
USE_SUBEXP_CALL


5420 i‡(
sˇn_ív
.
num_ˇŒ
 > 0) {

5421 
r
 = 
	`un£t_addr_li°_fix
(&
u¶i°
, 
ªg
);

5422 
	`un£t_addr_li°_íd
(&
u¶i°
);

5423 i‡(
r
Ë
îr
;

5427 i‡((
ªg
->
num_ª≥©
 !0Ë|| (ªg->
bt_mem_íd
 != 0))

5428 
ªg
->
°ack_p›_Àvñ
 = 
STACK_POP_LEVEL_ALL
;

5430 i‡(
ªg
->
bt_mem_°¨t
 != 0)

5431 
ªg
->
°ack_p›_Àvñ
 = 
STACK_POP_LEVEL_MEM_START
;

5433 
ªg
->
°ack_p›_Àvñ
 = 
STACK_POP_LEVEL_FREE
;

5436 #ifde‡
USE_SUBEXP_CALL


5437 i‡(
sˇn_ív
.
num_ˇŒ
 > 0) {

5438 
	`un£t_addr_li°_íd
(&
u¶i°
);

5441 
	`⁄ig_node_‰ì
(
roŸ
);

5443 #ifde‡
ONIG_DEBUG_COMPILE


5444 #ifde‡
USE_NAMED_GROUP


5445 
	`⁄ig_¥öt_«mes
(
°dîr
, 
ªg
);

5447 
	`¥öt_compûed_byã_code_li°
(
°dîr
, 
ªg
);

5450 
íd
:

5451  
r
;

5453 
îr_un£t
:

5454 #ifde‡
USE_SUBEXP_CALL


5455 i‡(
sˇn_ív
.
num_ˇŒ
 > 0) {

5456 
	`un£t_addr_li°_íd
(&
u¶i°
);

5459 
îr
:

5460 i‡(
	`IS_NOT_NULL
(
sˇn_ív
.
îr‹
)) {

5461 i‡(
	`IS_NOT_NULL
(
eöfo
)) {

5462 
eöfo
->
íc
 = 
sˇn_ív
.enc;

5463 
eöfo
->
∑r
 = 
sˇn_ív
.
îr‹
;

5464 
eöfo
->
∑r_íd
 = 
sˇn_ív
.
îr‹_íd
;

5468 
	`⁄ig_node_‰ì
(
roŸ
);

5469 i‡(
	`IS_NOT_NULL
(
sˇn_ív
.
mem_nodes_dy«mic
))

5470 
	`x‰ì
(
sˇn_ív
.
mem_nodes_dy«mic
);

5471  
r
;

5472 
	}
}

5475 
⁄ig_öôed
 = 0;

5478 
	$⁄ig_ªg_öô
(
ªgex_t
* 
ªg
, 
OnigO±i⁄Ty≥
 
›ti⁄
,

5479 
OnigCa£FﬁdTy≥
 
ˇ£_fﬁd_Êag
,

5480 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
sy¡ax
)

5482 
r
;

5484 
	`xmem£t
(
ªg
, 0, (*reg));

5486 i‡(
⁄ig_öôed
 == 0) {

5488  
ONIGERR_LIBRARY_IS_NOT_INITIALIZED
;

5490 
r
 = 
	`⁄ig_öôülize
(
NULL
, 0);

5491 i‡(
r
 != 0)

5492  
ONIGERR_FAIL_TO_INITIALIZE
;

5494 
r
 = 
	`⁄ig_öôülize_ícodög
(
íc
);

5495 i‡(
r
 != 0)

5496  
ONIGERR_FAIL_TO_INITIALIZE
;

5498 
	`⁄ig_w¨nög
("You didn't call onig_initialize()Éxplicitly");

5502 i‡(
	`IS_NULL
(
ªg
))

5503  
ONIGERR_INVALID_ARGUMENT
;

5505 i‡(
	`ONIGENC_IS_UNDEF
(
íc
))

5506  
ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED
;

5508 i‡((
›ti⁄
 & (
ONIG_OPTION_DONT_CAPTURE_GROUP
|
ONIG_OPTION_CAPTURE_GROUP
))

5509 =(
ONIG_OPTION_DONT_CAPTURE_GROUP
|
ONIG_OPTION_CAPTURE_GROUP
)) {

5510  
ONIGERR_INVALID_COMBINATION_OF_OPTIONS
;

5513 i‡((
›ti⁄
 & 
ONIG_OPTION_NEGATE_SINGLELINE
) != 0) {

5514 
›ti⁄
 |
sy¡ax
->
›ti⁄s
;

5515 
›ti⁄
 &~
ONIG_OPTION_SINGLELINE
;

5518 
›ti⁄
 |
sy¡ax
->
›ti⁄s
;

5520 (
ªg
)->
íc
 =Énc;

5521 (
ªg
)->
›ti⁄s
 = 
›ti⁄
;

5522 (
ªg
)->
sy¡ax
 = syntax;

5523 (
ªg
)->
›timize
 = 0;

5524 (
ªg
)->
exa˘
 = (
UCh¨
* )
NULL
;

5525 (
ªg
)->
öt_m≠
 = (* )
NULL
;

5526 (
ªg
)->
öt_m≠_backw¨d
 = (* )
NULL
;

5527 (
ªg
)->
chaö
 = (
ªgex_t
* )
NULL
;

5529 (
ªg
)->
p
 = (
UCh¨
* )
NULL
;

5530 (
ªg
)->
Æloc
 = 0;

5531 (
ªg
)->
u£d
 = 0;

5532 (
ªg
)->
«me_èbÀ
 = (* )
NULL
;

5534 (
ªg
)->
ˇ£_fﬁd_Êag
 = case_fold_flag;

5536 
	}
}

5539 
	$⁄ig_√w_wôhout_Æloc
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
∑âîn
,

5540 c⁄° 
UCh¨
* 
∑âîn_íd
, 
OnigO±i⁄Ty≥
 
›ti⁄
, 
OnigEncodög
 
íc
,

5541 
OnigSy¡axTy≥
* 
sy¡ax
, 
OnigEº‹Info
* 
eöfo
)

5543 
r
;

5545 
r
 = 
	`⁄ig_ªg_öô
(
ªg
, 
›ti⁄
, 
ONIGENC_CASE_FOLD_DEFAULT
, 
íc
, 
sy¡ax
);

5546 i‡(
r
) Ñ;

5548 
r
 = 
	`⁄ig_compûe
(
ªg
, 
∑âîn
, 
∑âîn_íd
, 
eöfo
);

5549  
r
;

5550 
	}
}

5553 
	$⁄ig_√w
(
ªgex_t
** 
ªg
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
∑âîn_íd
,

5554 
OnigO±i⁄Ty≥
 
›ti⁄
, 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
sy¡ax
,

5555 
OnigEº‹Info
* 
eöfo
)

5557 
r
;

5559 *
ªg
 = (
ªgex_t
* )
	`xmÆloc
((regex_t));

5560 i‡(
	`IS_NULL
(*
ªg
)Ë 
ONIGERR_MEMORY
;

5562 
r
 = 
	`⁄ig_ªg_öô
(*
ªg
, 
›ti⁄
, 
ONIGENC_CASE_FOLD_DEFAULT
, 
íc
, 
sy¡ax
);

5563 i‡(
r
Ë
îr
;

5565 
r
 = 
	`⁄ig_compûe
(*
ªg
, 
∑âîn
, 
∑âîn_íd
, 
eöfo
);

5566 i‡(
r
) {

5567 
îr
:

5568 
	`⁄ig_‰ì
(*
ªg
);

5569 *
ªg
 = 
NULL
;

5571  
r
;

5572 
	}
}

5575 
	$⁄ig_öôülize
(
OnigEncodög
 
ícodögs
[], 
n
)

5577 
i
;

5578 
r
;

5580 i‡(
⁄ig_öôed
 != 0)

5583 
	`⁄igíc_öô
();

5585 
⁄ig_öôed
 = 1;

5587 
i
 = 0; i < 
n
; i++) {

5588 
OnigEncodög
 
íc
 = 
ícodögs
[
i
];

5589 
r
 = 
	`⁄ig_öôülize_ícodög
(
íc
);

5590 i‡(
r
 != 0)

5591  
r
;

5595 
	}
}

5597 
OnigEndCÆlLi°IãmTy≥
* 
EndCÆlT›
;

5599 
	$⁄ig_add_íd_ˇŒ
((*
func
)())

5601 
OnigEndCÆlLi°IãmTy≥
* 
ôem
;

5603 
ôem
 = (
OnigEndCÆlLi°IãmTy≥
* )
	`xmÆloc
((*item));

5604 i‡(
ôem
 == 0)  ;

5606 
ôem
->
√xt
 = 
EndCÆlT›
;

5607 
ôem
->
func
 = func;

5609 
EndCÆlT›
 = 
ôem
;

5610 
	}
}

5613 
	$exec_íd_ˇŒ_li°
()

5615 
OnigEndCÆlLi°IãmTy≥
* 
¥ev
;

5616 (*
func
)();

5618 
EndCÆlT›
 != 0) {

5619 
func
 = 
EndCÆlT›
->func;

5620 (*
func
)();

5622 
¥ev
 = 
EndCÆlT›
;

5623 
EndCÆlT›
 = EndCÆlT›->
√xt
;

5624 
	`x‰ì
(
¥ev
);

5626 
	}
}

5629 
	$⁄ig_íd
()

5631 
	`exec_íd_ˇŒ_li°
();

5633 
⁄ig_öôed
 = 0;

5636 
	}
}

5639 
	$⁄ig_is_ö_code_ønge
(c⁄° 
UCh¨
* 
p
, 
OnigCodePoöt
 
code
)

5641 
OnigCodePoöt
 
n
, *
d©a
;

5642 
OnigCodePoöt
 
low
, 
high
, 
x
;

5644 
	`GET_CODE_POINT
(
n
, 
p
);

5645 
d©a
 = (
OnigCodePoöt
* )
p
;

5646 
d©a
++;

5648 
low
 = 0, 
high
 = 
n
;Üow < high; ) {

5649 
x
 = (
low
 + 
high
) >> 1;

5650 i‡(
code
 > 
d©a
[
x
 * 2 + 1])

5651 
low
 = 
x
 + 1;

5653 
high
 = 
x
;

5656  ((
low
 < 
n
 && 
code
 >
d©a
[low * 2]) ? 1 : 0);

5657 
	}
}

5660 
	$⁄ig_is_code_ö_cc_Àn
(
ñí
, 
OnigCodePoöt
 
code
, 
CCœssNode
* 
cc
)

5662 
found
;

5664 i‡(
ñí
 > 1 || (
code
 >
SINGLE_BYTE_SIZE
)) {

5665 i‡(
	`IS_NULL
(
cc
->
mbuf
)) {

5666 
found
 = 0;

5669 
found
 = (
	`⁄ig_is_ö_code_ønge
(
cc
->
mbuf
->
p
, 
code
) != 0 ? 1 : 0);

5673 
found
 = (
	`BITSET_AT
(
cc
->
bs
, 
code
) == 0 ? 0 : 1);

5676 i‡(
	`IS_NCCLASS_NOT
(
cc
))

5677  !
found
;

5679  
found
;

5680 
	}
}

5683 
	$⁄ig_is_code_ö_cc
(
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
CCœssNode
* 
cc
)

5685 
Àn
;

5687 i‡(
	`ONIGENC_MBC_MINLEN
(
íc
) > 1) {

5688 
Àn
 = 2;

5691 
Àn
 = 
	`ONIGENC_CODE_TO_MBCLEN
(
íc
, 
code
);

5693  
	`⁄ig_is_code_ö_cc_Àn
(
Àn
, 
code
, 
cc
);

5694 
	}
}

5697 #ifde‡
ONIG_DEBUG


5700 
	#ARG_SPECIAL
 -1

	)

5701 
	#ARG_NON
 0

	)

5702 
	#ARG_RELADDR
 1

	)

5703 
	#ARG_ABSADDR
 2

	)

5704 
	#ARG_LENGTH
 3

	)

5705 
	#ARG_MEMNUM
 4

	)

5706 
	#ARG_OPTION
 5

	)

5707 
	#ARG_STATE_CHECK
 6

	)

5709 
OnigOpInfoTy≥
 
OnigOpInfo
[] = {

5710 { 
OP_FINISH
, "föish", 
ARG_NON
 },

5711 { 
OP_END
, "íd", 
ARG_NON
 },

5712 { 
OP_EXACT1
, "exa˘1", 
ARG_SPECIAL
 },

5713 { 
OP_EXACT2
, "exa˘2", 
ARG_SPECIAL
 },

5714 { 
OP_EXACT3
, "exa˘3", 
ARG_SPECIAL
 },

5715 { 
OP_EXACT4
, "exa˘4", 
ARG_SPECIAL
 },

5716 { 
OP_EXACT5
, "exa˘5", 
ARG_SPECIAL
 },

5717 { 
OP_EXACTN
, "exa˘n", 
ARG_SPECIAL
 },

5718 { 
OP_EXACTMB2N1
, "exa˘mb2-n1", 
ARG_SPECIAL
 },

5719 { 
OP_EXACTMB2N2
, "exa˘mb2-n2", 
ARG_SPECIAL
 },

5720 { 
OP_EXACTMB2N3
, "exa˘mb2-n3", 
ARG_SPECIAL
 },

5721 { 
OP_EXACTMB2N
, "exa˘mb2-n", 
ARG_SPECIAL
 },

5722 { 
OP_EXACTMB3N
, "exa˘mb3n" , 
ARG_SPECIAL
 },

5723 { 
OP_EXACTMBN
, "exa˘mbn", 
ARG_SPECIAL
 },

5724 { 
OP_EXACT1_IC
, "exa˘1-ic", 
ARG_SPECIAL
 },

5725 { 
OP_EXACTN_IC
, "exa˘n-ic", 
ARG_SPECIAL
 },

5726 { 
OP_CCLASS
, "c˛ass", 
ARG_SPECIAL
 },

5727 { 
OP_CCLASS_MB
, "c˛ass-mb", 
ARG_SPECIAL
 },

5728 { 
OP_CCLASS_MIX
, "c˛ass-mix", 
ARG_SPECIAL
 },

5729 { 
OP_CCLASS_NOT
, "c˛ass-nŸ", 
ARG_SPECIAL
 },

5730 { 
OP_CCLASS_MB_NOT
, "c˛ass-mb-nŸ", 
ARG_SPECIAL
 },

5731 { 
OP_CCLASS_MIX_NOT
, "c˛ass-mix-nŸ", 
ARG_SPECIAL
 },

5732 { 
OP_CCLASS_NODE
, "c˛ass-node", 
ARG_SPECIAL
 },

5733 { 
OP_ANYCHAR
, "™ych¨", 
ARG_NON
 },

5734 { 
OP_ANYCHAR_ML
, "™ych¨-ml", 
ARG_NON
 },

5735 { 
OP_ANYCHAR_STAR
, "™ych¨*", 
ARG_NON
 },

5736 { 
OP_ANYCHAR_ML_STAR
, "™ych¨-ml*", 
ARG_NON
 },

5737 { 
OP_ANYCHAR_STAR_PEEK_NEXT
, "™ych¨*-≥ek-√xt", 
ARG_SPECIAL
 },

5738 { 
OP_ANYCHAR_ML_STAR_PEEK_NEXT
, "™ych¨-ml*-≥ek-√xt", 
ARG_SPECIAL
 },

5739 { 
OP_WORD
, "w‹d", 
ARG_NON
 },

5740 { 
OP_NOT_WORD
, "nŸ-w‹d", 
ARG_NON
 },

5741 { 
OP_WORD_BOUND
, "w‹d-bound", 
ARG_NON
 },

5742 { 
OP_NOT_WORD_BOUND
, "nŸ-w‹d-bound", 
ARG_NON
 },

5743 { 
OP_WORD_BEGIN
, "w‹d-begö", 
ARG_NON
 },

5744 { 
OP_WORD_END
, "w‹d-íd", 
ARG_NON
 },

5745 { 
OP_BEGIN_BUF
, "begö-buf", 
ARG_NON
 },

5746 { 
OP_END_BUF
, "íd-buf", 
ARG_NON
 },

5747 { 
OP_BEGIN_LINE
, "begö-löe", 
ARG_NON
 },

5748 { 
OP_END_LINE
, "íd-löe", 
ARG_NON
 },

5749 { 
OP_SEMI_END_BUF
, "£mi-íd-buf", 
ARG_NON
 },

5750 { 
OP_BEGIN_POSITION
, "begö-posôi⁄", 
ARG_NON
 },

5751 { 
OP_BACKREF1
, "backªf1", 
ARG_NON
 },

5752 { 
OP_BACKREF2
, "backªf2", 
ARG_NON
 },

5753 { 
OP_BACKREFN
, "backª‚", 
ARG_MEMNUM
 },

5754 { 
OP_BACKREFN_IC
, "backª‚-ic", 
ARG_SPECIAL
 },

5755 { 
OP_BACKREF_MULTI
, "backªf_mu…i", 
ARG_SPECIAL
 },

5756 { 
OP_BACKREF_MULTI_IC
, "backªf_mu…i-ic", 
ARG_SPECIAL
 },

5757 { 
OP_BACKREF_WITH_LEVEL
, "backªf_©_Àvñ", 
ARG_SPECIAL
 },

5758 { 
OP_MEMORY_START_PUSH
, "mem-°¨t-push", 
ARG_MEMNUM
 },

5759 { 
OP_MEMORY_START
, "mem-°¨t", 
ARG_MEMNUM
 },

5760 { 
OP_MEMORY_END_PUSH
, "mem-íd-push", 
ARG_MEMNUM
 },

5761 { 
OP_MEMORY_END_PUSH_REC
, "mem-íd-push-ªc", 
ARG_MEMNUM
 },

5762 { 
OP_MEMORY_END
, "mem-íd", 
ARG_MEMNUM
 },

5763 { 
OP_MEMORY_END_REC
, "mem-íd-ªc", 
ARG_MEMNUM
 },

5764 { 
OP_SET_OPTION_PUSH
, "£t-›ti⁄-push", 
ARG_OPTION
 },

5765 { 
OP_SET_OPTION
, "£t-›ti⁄", 
ARG_OPTION
 },

5766 { 
OP_FAIL
, "Áû", 
ARG_NON
 },

5767 { 
OP_JUMP
, "jump", 
ARG_RELADDR
 },

5768 { 
OP_PUSH
, "push", 
ARG_RELADDR
 },

5769 { 
OP_POP
, "p›", 
ARG_NON
 },

5770 { 
OP_PUSH_OR_JUMP_EXACT1
, "push-‹-jump-e1", 
ARG_SPECIAL
 },

5771 { 
OP_PUSH_IF_PEEK_NEXT
, "push-if-≥ek-√xt", 
ARG_SPECIAL
 },

5772 { 
OP_REPEAT
, "ª≥©", 
ARG_SPECIAL
 },

5773 { 
OP_REPEAT_NG
, "ª≥©-ng", 
ARG_SPECIAL
 },

5774 { 
OP_REPEAT_INC
, "ª≥©-öc", 
ARG_MEMNUM
 },

5775 { 
OP_REPEAT_INC_NG
, "ª≥©-öc-ng", 
ARG_MEMNUM
 },

5776 { 
OP_REPEAT_INC_SG
, "ª≥©-öc-sg", 
ARG_MEMNUM
 },

5777 { 
OP_REPEAT_INC_NG_SG
, "ª≥©-öc-ng-sg", 
ARG_MEMNUM
 },

5778 { 
OP_NULL_CHECK_START
, "nuŒ-check-°¨t", 
ARG_MEMNUM
 },

5779 { 
OP_NULL_CHECK_END
, "nuŒ-check-íd", 
ARG_MEMNUM
 },

5780 { 
OP_NULL_CHECK_END_MEMST
,"nuŒ-check-íd-mem°", 
ARG_MEMNUM
 },

5781 { 
OP_NULL_CHECK_END_MEMST_PUSH
,"nuŒ-check-íd-mem°-push", 
ARG_MEMNUM
 },

5782 { 
OP_PUSH_POS
, "push-pos", 
ARG_NON
 },

5783 { 
OP_POP_POS
, "p›-pos", 
ARG_NON
 },

5784 { 
OP_PUSH_POS_NOT
, "push-pos-nŸ", 
ARG_RELADDR
 },

5785 { 
OP_FAIL_POS
, "Áû-pos", 
ARG_NON
 },

5786 { 
OP_PUSH_STOP_BT
, "push-°›-bt", 
ARG_NON
 },

5787 { 
OP_POP_STOP_BT
, "p›-°›-bt", 
ARG_NON
 },

5788 { 
OP_LOOK_BEHIND
, "look-behöd", 
ARG_SPECIAL
 },

5789 { 
OP_PUSH_LOOK_BEHIND_NOT
, "push-look-behöd-nŸ", 
ARG_SPECIAL
 },

5790 { 
OP_FAIL_LOOK_BEHIND_NOT
, "Áû-look-behöd-nŸ", 
ARG_NON
 },

5791 { 
OP_CALL
, "ˇŒ", 
ARG_ABSADDR
 },

5792 { 
OP_RETURN
, "ªtu∫", 
ARG_NON
 },

5793 { 
OP_STATE_CHECK_PUSH
, "°©e-check-push", 
ARG_SPECIAL
 },

5794 { 
OP_STATE_CHECK_PUSH_OR_JUMP
, "°©e-check-push-‹-jump", 
ARG_SPECIAL
 },

5795 { 
OP_STATE_CHECK
, "°©e-check", 
ARG_STATE_CHECK
 },

5796 { 
OP_STATE_CHECK_ANYCHAR_STAR
, "°©e-check-™ych¨*", 
ARG_STATE_CHECK
 },

5797 { 
OP_STATE_CHECK_ANYCHAR_ML_STAR
,

5798 "°©e-check-™ych¨-ml*", 
ARG_STATE_CHECK
 },

5799 { -1, "", 
ARG_NON
 }

5803 
	$›2«me
(
›code
)

5805 
i
;

5807 
i
 = 0; 
OnigOpInfo
[i].
›code
 >= 0; i++) {

5808 i‡(
›code
 =
OnigOpInfo
[
i
].opcode)

5809  
OnigOpInfo
[
i
].
«me
;

5812 
	}
}

5815 
	$›2¨g_ty≥
(
›code
)

5817 
i
;

5819 
i
 = 0; 
OnigOpInfo
[i].
›code
 >= 0; i++) {

5820 i‡(
›code
 =
OnigOpInfo
[
i
].opcode)

5821  
OnigOpInfo
[
i
].
¨g_ty≥
;

5823  
ARG_SPECIAL
;

5824 
	}
}

5827 
	$Indít
(
FILE
* 
f
, 
ödít
)

5829 
i
;

5830 
i
 = 0; i < 
ödít
; i++Ë
	`putc
(' ', 
f
);

5831 
	}
}

5834 
	$p_°rög
(
FILE
* 
f
, 
Àn
, 
UCh¨
* 
s
)

5836 
	`Âuts
(":", 
f
);

5837 
Àn
-- > 0Ë{ 
	`Âutc
(*
s
++, 
f
); }

5838 
	}
}

5841 
	$p_Àn_°rög
(
FILE
* 
f
, 
LígthTy≥
 
Àn
, 
mb_Àn
, 
UCh¨
* 
s
)

5843 
x
 = 
Àn
 * 
mb_Àn
;

5845 
	`Ârötf
(
f
, ":%d:", 
Àn
);

5846 
x
-- > 0Ë{ 
	`Âutc
(*
s
++, 
f
); }

5847 
	}
}

5850 
	$⁄ig_¥öt_compûed_byã_code
(
FILE
* 
f
, 
UCh¨
* 
bp
, UCh¨** 
√xç
,

5851 
OnigEncodög
 
íc
)

5853 
i
, 
n
, 
¨g_ty≥
;

5854 
RñAddrTy≥
 
addr
;

5855 
LígthTy≥
 
Àn
;

5856 
MemNumTy≥
 
mem
;

5857 
SèãCheckNumTy≥
 
s˙
;

5858 
OnigCodePoöt
 
code
;

5859 
UCh¨
 *
q
;

5861 
	`Ârötf
(
f
, "[%s", 
	`›2«me
(*
bp
));

5862 
¨g_ty≥
 = 
	`›2¨g_ty≥
(*
bp
);

5863 i‡(
¨g_ty≥
 !
ARG_SPECIAL
) {

5864 
bp
++;

5865 
¨g_ty≥
) {

5866 
ARG_NON
:

5868 
ARG_RELADDR
:

5869 
	`GET_RELADDR_INC
(
addr
, 
bp
);

5870 
	`Ârötf
(
f
, ":(%d)", 
addr
);

5872 
ARG_ABSADDR
:

5873 
	`GET_ABSADDR_INC
(
addr
, 
bp
);

5874 
	`Ârötf
(
f
, ":(%d)", 
addr
);

5876 
ARG_LENGTH
:

5877 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5878 
	`Ârötf
(
f
, ":%d", 
Àn
);

5880 
ARG_MEMNUM
:

5881 
mem
 = *((
MemNumTy≥
* )
bp
);

5882 
bp
 +
SIZE_MEMNUM
;

5883 
	`Ârötf
(
f
, ":%d", 
mem
);

5885 
ARG_OPTION
:

5887 
OnigO±i⁄Ty≥
 
›ti⁄
 = *((OnigO±i⁄Ty≥* )
bp
);

5888 
bp
 +
SIZE_OPTION
;

5889 
	`Ârötf
(
f
, ":%d", 
›ti⁄
);

5893 
ARG_STATE_CHECK
:

5894 
s˙
 = *((
SèãCheckNumTy≥
* )
bp
);

5895 
bp
 +
SIZE_STATE_CHECK_NUM
;

5896 
	`Ârötf
(
f
, ":%d", 
s˙
);

5901 *
bp
++) {

5902 
OP_EXACT1
:

5903 
OP_ANYCHAR_STAR_PEEK_NEXT
:

5904 
OP_ANYCHAR_ML_STAR_PEEK_NEXT
:

5905 
	`p_°rög
(
f
, 1, 
bp
++); ;

5906 
OP_EXACT2
:

5907 
	`p_°rög
(
f
, 2, 
bp
); bp += 2; ;

5908 
OP_EXACT3
:

5909 
	`p_°rög
(
f
, 3, 
bp
); bp += 3; ;

5910 
OP_EXACT4
:

5911 
	`p_°rög
(
f
, 4, 
bp
); bp += 4; ;

5912 
OP_EXACT5
:

5913 
	`p_°rög
(
f
, 5, 
bp
); bp += 5; ;

5914 
OP_EXACTN
:

5915 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5916 
	`p_Àn_°rög
(
f
, 
Àn
, 1, 
bp
);

5917 
bp
 +
Àn
;

5920 
OP_EXACTMB2N1
:

5921 
	`p_°rög
(
f
, 2, 
bp
); bp += 2; ;

5922 
OP_EXACTMB2N2
:

5923 
	`p_°rög
(
f
, 4, 
bp
); bp += 4; ;

5924 
OP_EXACTMB2N3
:

5925 
	`p_°rög
(
f
, 6, 
bp
); bp += 6; ;

5926 
OP_EXACTMB2N
:

5927 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5928 
	`p_Àn_°rög
(
f
, 
Àn
, 2, 
bp
);

5929 
bp
 +
Àn
 * 2;

5931 
OP_EXACTMB3N
:

5932 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5933 
	`p_Àn_°rög
(
f
, 
Àn
, 3, 
bp
);

5934 
bp
 +
Àn
 * 3;

5936 
OP_EXACTMBN
:

5938 
mb_Àn
;

5940 
	`GET_LENGTH_INC
(
mb_Àn
, 
bp
);

5941 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5942 
	`Ârötf
(
f
, ":%d:%d:", 
mb_Àn
, 
Àn
);

5943 
n
 = 
Àn
 * 
mb_Àn
;

5944 
n
-- > 0Ë{ 
	`Âutc
(*
bp
++, 
f
); }

5948 
OP_EXACT1_IC
:

5949 
Àn
 = 
	`í˛í
(
íc
, 
bp
);

5950 
	`p_°rög
(
f
, 
Àn
, 
bp
);

5951 
bp
 +
Àn
;

5953 
OP_EXACTN_IC
:

5954 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5955 
	`p_Àn_°rög
(
f
, 
Àn
, 1, 
bp
);

5956 
bp
 +
Àn
;

5959 
OP_CCLASS
:

5960 
n
 = 
	`bô£t_⁄_num
((
BôSëRef
 )
bp
);

5961 
bp
 +
SIZE_BITSET
;

5962 
	`Ârötf
(
f
, ":%d", 
n
);

5965 
OP_CCLASS_NOT
:

5966 
n
 = 
	`bô£t_⁄_num
((
BôSëRef
 )
bp
);

5967 
bp
 +
SIZE_BITSET
;

5968 
	`Ârötf
(
f
, ":%d", 
n
);

5971 
OP_CCLASS_MB
:

5972 
OP_CCLASS_MB_NOT
:

5973 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5974 
q
 = 
bp
;

5975 #i‚de‡
PLATFORM_UNALIGNED_WORD_ACCESS


5976 
	`ALIGNMENT_RIGHT
(
q
);

5978 
	`GET_CODE_POINT
(
code
, 
q
);

5979 
bp
 +
Àn
;

5980 
	`Ârötf
(
f
, ":%d:%d", ()
code
, 
Àn
);

5983 
OP_CCLASS_MIX
:

5984 
OP_CCLASS_MIX_NOT
:

5985 
n
 = 
	`bô£t_⁄_num
((
BôSëRef
 )
bp
);

5986 
bp
 +
SIZE_BITSET
;

5987 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

5988 
q
 = 
bp
;

5989 #i‚de‡
PLATFORM_UNALIGNED_WORD_ACCESS


5990 
	`ALIGNMENT_RIGHT
(
q
);

5992 
	`GET_CODE_POINT
(
code
, 
q
);

5993 
bp
 +
Àn
;

5994 
	`Ârötf
(
f
, ":%d:%d:%d", 
n
, ()
code
, 
Àn
);

5997 
OP_CCLASS_NODE
:

5999 
CCœssNode
 *
cc
;

6001 
	`GET_POINTER_INC
(
cc
, 
bp
);

6002 
n
 = 
	`bô£t_⁄_num
(
cc
->
bs
);

6003 
	`Ârötf
(
f
, ":%p:%d", 
cc
, 
n
);

6007 
OP_BACKREFN_IC
:

6008 
mem
 = *((
MemNumTy≥
* )
bp
);

6009 
bp
 +
SIZE_MEMNUM
;

6010 
	`Ârötf
(
f
, ":%d", 
mem
);

6013 
OP_BACKREF_MULTI_IC
:

6014 
OP_BACKREF_MULTI
:

6015 
	`Âuts
(" ", 
f
);

6016 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

6017 
i
 = 0; i < 
Àn
; i++) {

6018 
	`GET_MEMNUM_INC
(
mem
, 
bp
);

6019 i‡(
i
 > 0Ë
	`Âuts
(", ", 
f
);

6020 
	`Ârötf
(
f
, "%d", 
mem
);

6024 
OP_BACKREF_WITH_LEVEL
:

6026 
OnigO±i⁄Ty≥
 
›ti⁄
;

6027 
LígthTy≥
 
Àvñ
;

6029 
	`GET_OPTION_INC
(
›ti⁄
, 
bp
);

6030 
	`Ârötf
(
f
, ":%d", 
›ti⁄
);

6031 
	`GET_LENGTH_INC
(
Àvñ
, 
bp
);

6032 
	`Ârötf
(
f
, ":%d", 
Àvñ
);

6034 
	`Âuts
(" ", 
f
);

6035 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

6036 
i
 = 0; i < 
Àn
; i++) {

6037 
	`GET_MEMNUM_INC
(
mem
, 
bp
);

6038 i‡(
i
 > 0Ë
	`Âuts
(", ", 
f
);

6039 
	`Ârötf
(
f
, "%d", 
mem
);

6044 
OP_REPEAT
:

6045 
OP_REPEAT_NG
:

6047 
mem
 = *((
MemNumTy≥
* )
bp
);

6048 
bp
 +
SIZE_MEMNUM
;

6049 
addr
 = *((
RñAddrTy≥
* )
bp
);

6050 
bp
 +
SIZE_RELADDR
;

6051 
	`Ârötf
(
f
, ":%d:%d", 
mem
, 
addr
);

6055 
OP_PUSH_OR_JUMP_EXACT1
:

6056 
OP_PUSH_IF_PEEK_NEXT
:

6057 
addr
 = *((
RñAddrTy≥
* )
bp
);

6058 
bp
 +
SIZE_RELADDR
;

6059 
	`Ârötf
(
f
, ":(%d)", 
addr
);

6060 
	`p_°rög
(
f
, 1, 
bp
);

6061 
bp
 += 1;

6064 
OP_LOOK_BEHIND
:

6065 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

6066 
	`Ârötf
(
f
, ":%d", 
Àn
);

6069 
OP_PUSH_LOOK_BEHIND_NOT
:

6070 
	`GET_RELADDR_INC
(
addr
, 
bp
);

6071 
	`GET_LENGTH_INC
(
Àn
, 
bp
);

6072 
	`Ârötf
(
f
, ":%d:(%d)", 
Àn
, 
addr
);

6075 
OP_STATE_CHECK_PUSH
:

6076 
OP_STATE_CHECK_PUSH_OR_JUMP
:

6077 
s˙
 = *((
SèãCheckNumTy≥
* )
bp
);

6078 
bp
 +
SIZE_STATE_CHECK_NUM
;

6079 
addr
 = *((
RñAddrTy≥
* )
bp
);

6080 
bp
 +
SIZE_RELADDR
;

6081 
	`Ârötf
(
f
, ":%d:(%d)", 
s˙
, 
addr
);

6085 
	`Ârötf
(
°dîr
, "onig_print_compiled_byte_code: undefined code %d\n",

6086 *--
bp
);

6089 
	`Âuts
("]", 
f
);

6090 i‡(
√xç
Ë*√xç = 
bp
;

6091 
	}
}

6094 
	$¥öt_compûed_byã_code_li°
(
FILE
* 
f
, 
ªgex_t
* 
ªg
)

6096 
ncode
;

6097 
UCh¨
* 
bp
 = 
ªg
->
p
;

6098 
UCh¨
* 
íd
 = 
ªg
->
p
 +Ñeg->
u£d
;

6100 
	`Ârötf
(
f
, "codêÀngth: %d\n", 
ªg
->
u£d
);

6102 
ncode
 = 0;

6103 
bp
 < 
íd
) {

6104 
ncode
++;

6105 i‡(
bp
 > 
ªg
->
p
) {

6106 i‡(
ncode
 % 5 == 0)

6107 
	`Ârötf
(
f
, "\n");

6109 
	`Âuts
(" ", 
f
);

6111 
	`⁄ig_¥öt_compûed_byã_code
(
f
, 
bp
, &bp, 
ªg
->
íc
);

6114 
	`Ârötf
(
f
, "\n");

6115 
	}
}

6118 
	$¥öt_ödít_åì
(
FILE
* 
f
, 
Node
* 
node
, 
ödít
)

6120 
i
, 
ty≥
;

6121 
add
 = 3;

6122 
UCh¨
* 
p
;

6124 
	`Indít
(
f
, 
ödít
);

6125 i‡(
	`IS_NULL
(
node
)) {

6126 
	`Ârötf
(
f
, "ERROR:ÇullÇode!!!\n");

6127 
	`exô
 (0);

6130 
ty≥
 = 
	`NTYPE
(
node
);

6131 
ty≥
) {

6132 
NT_LIST
:

6133 
NT_ALT
:

6134 i‡(
	`NTYPE
(
node
Ë=
NT_LIST
)

6135 
	`Ârötf
(
f
, "<li°:%p>\n", 
node
);

6137 
	`Ârötf
(
f
, "<Æt:%p>\n", 
node
);

6139 
	`¥öt_ödít_åì
(
f
, 
	`NCAR
(
node
), 
ödít
 + 
add
);

6140 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node))) {

6141 i‡(
	`NTYPE
(
node
Ë!
ty≥
) {

6142 
	`Ârötf
(
f
, "ERROR:Üi°/Æàrighài†nŸá c⁄s. %d\n", 
	`NTYPE
(
node
));

6143 
	`exô
(0);

6145 
	`¥öt_ödít_åì
(
f
, 
	`NCAR
(
node
), 
ödít
 + 
add
);

6149 
NT_STR
:

6150 
	`Ârötf
(
f
, "<string%s:%p>",

6151 (
	`NSTRING_IS_RAW
(
node
) ? "-raw" : ""),Çode);

6152 
p
 = 
	`NSTR
(
node
)->
s
;Ö < NSTR“ode)->
íd
;Ö++) {

6153 i‡(*
p
 >= 0x20 && *p < 0x7f)

6154 
	`Âutc
(*
p
, 
f
);

6156 
	`Ârötf
(
f
, " 0x%02x", *
p
);

6161 
NT_CCLASS
:

6162 
	`Ârötf
(
f
, "<c˛ass:%p>", 
node
);

6163 i‡(
	`IS_NCCLASS_NOT
(
	`NCCLASS
(
node
))Ë
	`Âuts
("ÇŸ", 
f
);

6164 i‡(
	`NCCLASS
(
node
)->
mbuf
) {

6165 
BBuf
* 
bbuf
 = 
	`NCCLASS
(
node
)->
mbuf
;

6166 
i
 = 0; i < 
bbuf
->
u£d
; i++) {

6167 i‡(
i
 > 0Ë
	`Ârötf
(
f
, ",");

6168 
	`Ârötf
(
f
, "%0x", 
bbuf
->
p
[
i
]);

6173 
NT_CTYPE
:

6174 
	`Ârötf
(
f
, "<˘y≥:%p> ", 
node
);

6175 
	`NCTYPE
(
node
)->
˘y≥
) {

6176 
ONIGENC_CTYPE_WORD
:

6177 i‡(
	`NCTYPE
(
node
)->
nŸ
 != 0)

6178 
	`Âuts
("nŸ w‹d", 
f
);

6180 
	`Âuts
("w‹d", 
f
);

6184 
	`Ârötf
(
f
, "ERROR: undefined ctype.\n");

6185 
	`exô
(0);

6189 
NT_CANY
:

6190 
	`Ârötf
(
f
, "<™ych¨:%p>", 
node
);

6193 
NT_ANCHOR
:

6194 
	`Ârötf
(
f
, "<™ch‹:%p> ", 
node
);

6195 
	`NANCHOR
(
node
)->
ty≥
) {

6196 
ANCHOR_BEGIN_BUF
: 
	`Âuts
("begö buf", 
f
); ;

6197 
ANCHOR_END_BUF
: 
	`Âuts
("íd buf", 
f
); ;

6198 
ANCHOR_BEGIN_LINE
: 
	`Âuts
("begöÜöe", 
f
); ;

6199 
ANCHOR_END_LINE
: 
	`Âuts
("ídÜöe", 
f
); ;

6200 
ANCHOR_SEMI_END_BUF
: 
	`Âuts
("£mòíd buf", 
f
); ;

6201 
ANCHOR_BEGIN_POSITION
: 
	`Âuts
("begöÖosôi⁄", 
f
); ;

6203 
ANCHOR_WORD_BOUND
: 
	`Âuts
("w‹d bound", 
f
); ;

6204 
ANCHOR_NOT_WORD_BOUND
: 
	`Âuts
("nŸ w‹d bound", 
f
); ;

6205 #ifde‡
USE_WORD_BEGIN_END


6206 
ANCHOR_WORD_BEGIN
: 
	`Âuts
("w‹d begö", 
f
); ;

6207 
ANCHOR_WORD_END
: 
	`Âuts
("w‹dÉnd", 
f
); ;

6209 
ANCHOR_PREC_READ
:

6210 
	`Ârötf
(
f
, "precÑead\n");

6211 
	`¥öt_ödít_åì
(
f
, 
	`NANCHOR
(
node
)->
èrgë
, 
ödít
 + 
add
);

6213 
ANCHOR_PREC_READ_NOT
:

6214 
	`Ârötf
(
f
, "precÑeadÇot\n");

6215 
	`¥öt_ödít_åì
(
f
, 
	`NANCHOR
(
node
)->
èrgë
, 
ödít
 + 
add
);

6217 
ANCHOR_LOOK_BEHIND
:

6218 
	`Ârötf
(
f
, "look behind\n");

6219 
	`¥öt_ödít_åì
(
f
, 
	`NANCHOR
(
node
)->
èrgë
, 
ödít
 + 
add
);

6221 
ANCHOR_LOOK_BEHIND_NOT
:

6222 
	`Ârötf
(
f
, "look behindÇot\n");

6223 
	`¥öt_ödít_åì
(
f
, 
	`NANCHOR
(
node
)->
èrgë
, 
ödít
 + 
add
);

6227 
	`Ârötf
(
f
, "ERROR: undefinedánchorÅype.\n");

6232 
NT_BREF
:

6234 * 
p
;

6235 
BRefNode
* 
br
 = 
	`NBREF
(
node
);

6236 
p
 = 
	`BACKREFS_P
(
br
);

6237 
	`Ârötf
(
f
, "<backªf:%p>", 
node
);

6238 
i
 = 0; i < 
br
->
back_num
; i++) {

6239 i‡(
i
 > 0Ë
	`Âuts
(", ", 
f
);

6240 
	`Ârötf
(
f
, "%d", 
p
[
i
]);

6245 #ifde‡
USE_SUBEXP_CALL


6246 
NT_CALL
:

6248 
CÆlNode
* 
˙
 = 
	`NCALL
(
node
);

6249 
	`Ârötf
(
f
, "<ˇŒ:%p>", 
node
);

6250 
	`p_°rög
(
f
, 
˙
->
«me_íd
 - cn->
«me
, cn->name);

6255 
NT_QTFR
:

6256 
	`Ârötf
(
f
, "<qu™tifõr:%p>{%d,%d}%s\n", 
node
,

6257 
	`NQTFR
(
node
)->
lowî
, NQTFR“ode)->
uµî
,

6258 (
	`NQTFR
(
node
)->
gªedy
 ? "" : "?"));

6259 
	`¥öt_ödít_åì
(
f
, 
	`NQTFR
(
node
)->
èrgë
, 
ödít
 + 
add
);

6262 
NT_ENCLOSE
:

6263 
	`Ârötf
(
f
, "<í˛o£:%p> ", 
node
);

6264 
	`NENCLOSE
(
node
)->
ty≥
) {

6265 
ENCLOSE_OPTION
:

6266 
	`Ârötf
(
f
, "›ti⁄:%d", 
	`NENCLOSE
(
node
)->
›ti⁄
);

6268 
ENCLOSE_MEMORY
:

6269 
	`Ârötf
(
f
, "mem‹y:%d", 
	`NENCLOSE
(
node
)->
ªgnum
);

6271 
ENCLOSE_STOP_BACKTRACK
:

6272 
	`Ârötf
(
f
, "stop-bt");

6278 
	`Ârötf
(
f
, "\n");

6279 
	`¥öt_ödít_åì
(
f
, 
	`NENCLOSE
(
node
)->
èrgë
, 
ödít
 + 
add
);

6283 
	`Ârötf
(
f
, "¥öt_ödít_åì: undeföedÇodêty≥ %d\n", 
	`NTYPE
(
node
));

6287 i‡(
ty≥
 !
NT_LIST
 &&Åy≥ !
NT_ALT
 &&Åy≥ !
NT_QTFR
 &&

6288 
ty≥
 !
NT_ENCLOSE
)

6289 
	`Ârötf
(
f
, "\n");

6290 
	`fÊush
(
f
);

6291 
	}
}

6294 #ifde‡
ONIG_DEBUG_PARSE_TREE


6296 
	$¥öt_åì
(
FILE
* 
f
, 
Node
* 
node
)

6298 
	`¥öt_ödít_åì
(
f
, 
node
, 0);

6299 
	}
}

	@modules/oniguruma/src/regenc.c

30 
	~"ªgöt.h
"

32 
OnigEncodög
 
	gOnigEncDeÁu…Ch¨Encodög
 = 
ONIG_ENCODING_INIT_DEFAULT
;

35 
	$⁄igíc_öô
()

38 
	}
}

41 
	$⁄ig_öôülize_ícodög
(
OnigEncodög
 
íc
)

43 i‡(
íc
->
öô
 !0 && (íc->
	`is_öôülized
() == 0)) {

44 
r
 = (
íc
->
öô
)();

45  
r
;

49 
	}
}

51 
OnigEncodög


52 
	$⁄igíc_gë_deÁu…_ícodög
()

54  
OnigEncDeÁu…Ch¨Encodög
;

55 
	}
}

58 
	$⁄igíc_£t_deÁu…_ícodög
(
OnigEncodög
 
íc
)

60 
OnigEncDeÁu…Ch¨Encodög
 = 
íc
;

62 
	}
}

64 
UCh¨
*

65 
	$⁄igíc_gë_right_adju°_ch¨_hód
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

67 
UCh¨
* 
p
 = 
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
°¨t
, 
s
);

68 i‡(
p
 < 
s
) {

69 
p
 +
	`í˛í
(
íc
,Ö);

71  
p
;

72 
	}
}

74 
UCh¨
*

75 
	$⁄igíc_gë_right_adju°_ch¨_hód_wôh_¥ev
(
OnigEncodög
 
íc
,

76 c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
, c⁄° UCh¨** 
¥ev
)

78 
UCh¨
* 
p
 = 
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
°¨t
, 
s
);

80 i‡(
p
 < 
s
) {

81 i‡(
¥ev
Ë*¥ev = (c⁄° 
UCh¨
* )
p
;

82 
p
 +
	`í˛í
(
íc
,Ö);

85 i‡(
¥ev
Ë*¥ev = (c⁄° 
UCh¨
* )
NULL
;

87  
p
;

88 
	}
}

90 
UCh¨
*

91 
	$⁄igíc_gë_¥ev_ch¨_hód
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

93 i‡(
s
 <
°¨t
)

94  (
UCh¨
* )
NULL
;

96  
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
°¨t
, 
s
 - 1);

97 
	}
}

99 
UCh¨
*

100 
	$⁄igíc_°ï_back
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
, 
n
)

102 
	`ONIG_IS_NOT_NULL
(
s
Ë&& 
n
-- > 0) {

103 i‡(
s
 <
°¨t
)

104  (
UCh¨
* )
NULL
;

106 
s
 = 
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
°¨t
, s - 1);

108  (
UCh¨
* )
s
;

109 
	}
}

113 
	$⁄igíc_mbc_íc_Àn_íd
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

115 
Àn
;

116 
n
;

118 
Àn
 = 
	`ONIGENC_MBC_ENC_LEN
(
íc
, 
p
);

119 
n
 = ()(
íd
 - 
p
);

121  (
n
 < 
Àn
 ?Ç :Üen);

122 
	}
}

125 
UCh¨
*

126 
	$⁄igíc_°ï
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
, 
n
)

128 
UCh¨
* 
q
 = (UCh¨* )
p
;

129 
n
-- > 0) {

130 
q
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
, q);

132  (
q
 <
íd
 ? q : 
NULL
);

133 
	}
}

136 
	$⁄igíc_°æí
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

138 
n
 = 0;

139 
UCh¨
* 
q
 = (UCh¨* )
p
;

141 
q
 < 
íd
) {

142 
q
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
, q);

143 
n
++;

145  
n
;

146 
	}
}

149 
	$⁄igíc_°æí_nuŒ
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
s
)

151 
n
 = 0;

152 
UCh¨
* 
p
 = (UCh¨* )
s
;

155 i‡(*
p
 == '\0') {

156 
UCh¨
* 
q
;

157 
Àn
 = 
	`ONIGENC_MBC_MINLEN
(
íc
);

159 i‡(
Àn
 =1Ë 
n
;

160 
q
 = 
p
 + 1;

161 
Àn
 > 1) {

162 i‡(*
q
 != '\0') ;

163 
q
++;

164 
Àn
--;

166 i‡(
Àn
 =1Ë 
n
;

168 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö);

169 
n
++;

171 
	}
}

174 
	$⁄igíc_°r_byãÀn_nuŒ
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
s
)

176 
UCh¨
* 
°¨t
 = (UCh¨* )
s
;

177 
UCh¨
* 
p
 = (UCh¨* )
s
;

180 i‡(*
p
 == '\0') {

181 
UCh¨
* 
q
;

182 
Àn
 = 
	`ONIGENC_MBC_MINLEN
(
íc
);

184 i‡(
Àn
 =1Ë ()(
p
 - 
°¨t
);

185 
q
 = 
p
 + 1;

186 
Àn
 > 1) {

187 i‡(*
q
 != '\0') ;

188 
q
++;

189 
Àn
--;

191 i‡(
Àn
 =1Ë ()(
p
 - 
°¨t
);

193 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö);

195 
	}
}

197 c⁄° 
UCh¨
 
OnigEncAsciiToLowîCa£TabÀ
[] = {

232 #ifde‡
USE_UPPER_CASE_TABLE


233 c⁄° 
UCh¨
 
	gOnigEncAsciiToUµîCa£TabÀ
[256] = {

269 c⁄° 
	gOnigEncAsciiCty≥TabÀ
[256] = {

304 c⁄° 
UCh¨
 
	gOnigEncISO_8859_1_ToLowîCa£TabÀ
[256] = {

339 #ifde‡
USE_UPPER_CASE_TABLE


340 c⁄° 
UCh¨
 
	gOnigEncISO_8859_1_ToUµîCa£TabÀ
[256] = {

377 
	$⁄igíc_£t_deÁu…_ˇ£c⁄v_èbÀ
(c⁄° 
UCh¨
* 
èbÀ
 
ARG_UNUSED
)

381 
	}
}

383 
UCh¨
*

384 
	$⁄igíc_gë_À·_adju°_ch¨_hód
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

386  
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
°¨t
, 
s
);

387 
	}
}

389 c⁄° 
OnigPaúCa£FﬁdCodes
 
OnigAsciiLowîM≠
[] = {

419 
	$⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

420 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

422 
OnigCodePoöt
 
code
;

423 
i
, 
r
;

425 
i
 = 0;

426 
i
 < ()((
OnigAsciiLowîM≠
)/(
OnigPaúCa£FﬁdCodes
));

427 
i
++) {

428 
code
 = 
OnigAsciiLowîM≠
[
i
].
to
;

429 
r
 = (*
f
)(
OnigAsciiLowîM≠
[
i
].
‰om
, &
code
, 1, 
¨g
);

430 i‡(
r
 != 0) Ñ;

432 
code
 = 
OnigAsciiLowîM≠
[
i
].
‰om
;

433 
r
 = (*
f
)(
OnigAsciiLowîM≠
[
i
].
to
, &
code
, 1, 
¨g
);

434 i‡(
r
 != 0) Ñ;

438 
	}
}

441 
	$⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

442 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
 
ARG_UNUSED
,

443 
OnigCa£FﬁdCodeIãm
 
ôems
[])

445 i‡(0x41 <*
p
 && *p <= 0x5a) {

446 
ôems
[0].
byã_Àn
 = 1;

447 
ôems
[0].
code_Àn
 = 1;

448 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 + 0x20);

451 i‡(0x61 <*
p
 && *p <= 0x7a) {

452 
ôems
[0].
byã_Àn
 = 1;

453 
ôems
[0].
code_Àn
 = 1;

454 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 - 0x20);

459 
	}
}

462 
	$ss_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

463 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

465 
OnigCodePoöt
 
ss
[] = { 0x73, 0x73 };

467  (*
f
)((
OnigCodePoöt
 )0xdf, 
ss
, 2, 
¨g
);

468 
	}
}

471 
	$⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
(
m≠_size
,

472 c⁄° 
OnigPaúCa£FﬁdCodes
 
m≠
[],

473 
ess_t£â_Êag
, 
OnigCa£FﬁdTy≥
 
Êag
,

474 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

476 
OnigCodePoöt
 
code
;

477 
i
, 
r
;

479 
r
 = 
	`⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
(
Êag
, 
f
, 
¨g
);

480 i‡(
r
 != 0) Ñ;

482 
i
 = 0; i < 
m≠_size
; i++) {

483 
code
 = 
m≠
[
i
].
to
;

484 
r
 = (*
f
)(
m≠
[
i
].
‰om
, &
code
, 1, 
¨g
);

485 i‡(
r
 != 0) Ñ;

487 
code
 = 
m≠
[
i
].
‰om
;

488 
r
 = (*
f
)(
m≠
[
i
].
to
, &
code
, 1, 
¨g
);

489 i‡(
r
 != 0) Ñ;

492 i‡(
ess_t£â_Êag
 != 0)

493  
	`ss_≠∂y_Æl_ˇ£_fﬁd
(
Êag
, 
f
, 
¨g
);

496 
	}
}

499 
	$⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
(
m≠_size
,

500 c⁄° 
OnigPaúCa£FﬁdCodes
 
m≠
[],

501 
ess_t£â_Êag
, 
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

502 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

504 i‡(0x41 <*
p
 && *p <= 0x5a) {

505 
ôems
[0].
byã_Àn
 = 1;

506 
ôems
[0].
code_Àn
 = 1;

507 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 + 0x20);

508 i‡(*
p
 =0x53 && 
ess_t£â_Êag
 !0 && 
íd
 >Ö + 1

509 && (*(
p
+1) == 0x53 || *(p+1) == 0x73)) {

511 
ôems
[1].
byã_Àn
 = 2;

512 
ôems
[1].
code_Àn
 = 1;

513 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )0xdf;

519 i‡(0x61 <*
p
 && *p <= 0x7a) {

520 
ôems
[0].
byã_Àn
 = 1;

521 
ôems
[0].
code_Àn
 = 1;

522 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )(*
p
 - 0x20);

523 i‡(*
p
 =0x73 && 
ess_t£â_Êag
 !0 && 
íd
 >Ö + 1

524 && (*(
p
+1) == 0x73 || *(p+1) == 0x53)) {

526 
ôems
[1].
byã_Àn
 = 2;

527 
ôems
[1].
code_Àn
 = 1;

528 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )0xdf;

534 i‡(*
p
 =0xd‡&& 
ess_t£â_Êag
 != 0) {

535 
ôems
[0].
byã_Àn
 = 1;

536 
ôems
[0].
code_Àn
 = 2;

537 
ôems
[0].
code
[0] = (
OnigCodePoöt
 )'s';

538 
ôems
[0].
code
[1] = (
OnigCodePoöt
 )'s';

540 
ôems
[1].
byã_Àn
 = 1;

541 
ôems
[1].
code_Àn
 = 2;

542 
ôems
[1].
code
[0] = (
OnigCodePoöt
 )'S';

543 
ôems
[1].
code
[1] = (
OnigCodePoöt
 )'S';

545 
ôems
[2].
byã_Àn
 = 1;

546 
ôems
[2].
code_Àn
 = 2;

547 
ôems
[2].
code
[0] = (
OnigCodePoöt
 )'s';

548 
ôems
[2].
code
[1] = (
OnigCodePoöt
 )'S';

550 
ôems
[3].
byã_Àn
 = 1;

551 
ôems
[3].
code_Àn
 = 2;

552 
ôems
[3].
code
[0] = (
OnigCodePoöt
 )'S';

553 
ôems
[3].
code
[1] = (
OnigCodePoöt
 )'s';

558 
i
;

560 
i
 = 0; i < 
m≠_size
; i++) {

561 i‡(*
p
 =
m≠
[
i
].
‰om
) {

562 
ôems
[0].
byã_Àn
 = 1;

563 
ôems
[0].
code_Àn
 = 1;

564 
ôems
[0].
code
[0] = 
m≠
[
i
].
to
;

567 i‡(*
p
 =
m≠
[
i
].
to
) {

568 
ôems
[0].
byã_Àn
 = 1;

569 
ôems
[0].
code_Àn
 = 1;

570 
ôems
[0].
code
[0] = 
m≠
[
i
].
‰om
;

577 
	}
}

581 
	$⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
(
OnigCty≥
 
˘y≥
 
ARG_UNUSED
,

582 
OnigCodePoöt
* 
sb_out
 
ARG_UNUSED
,

583 c⁄° 
OnigCodePoöt
* 
ønges
[] 
ARG_UNUSED
)

585  
ONIG_NO_SUPPORT_CONFIG
;

586 
	}
}

589 
	$⁄igíc_is_mbc_√wlöe_0x0a
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

591 i‡(
p
 < 
íd
) {

592 i‡(*
p
 == 0x0a)  1;

595 
	}
}

599 
	$⁄igíc_ascii_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
, c⁄° 
UCh¨
** 
p
,

600 c⁄° 
UCh¨
*
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

602 *
lowî
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(**
p
);

604 (*
p
)++;

606 
	}
}

610 
	$⁄igíc_ascii_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

611 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

613 c⁄° 
UCh¨
* 
p
 = *
µ
;

615 (*
µ
)++;

616  
	`ONIGENC_IS_ASCII_CODE_CASE_AMBIG
(*
p
);

617 
	}
}

621 
	$⁄igíc_sögÀ_byã_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
 
ARG_UNUSED
)

624 
	}
}

626 
OnigCodePoöt


627 
	$⁄igíc_sögÀ_byã_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

629  (
OnigCodePoöt
 )(*
p
);

630 
	}
}

633 
	$⁄igíc_sögÀ_byã_code_to_mb˛í
(
OnigCodePoöt
 
code
 
ARG_UNUSED
)

635  (
code
 < 0x100 ? 1 : 
ONIGERR_INVALID_CODE_POINT_VALUE
);

636 
	}
}

639 
	$⁄igíc_sögÀ_byã_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

641 *
buf
 = (
UCh¨
 )(
code
 & 0xff);

643 
	}
}

645 
UCh¨
*

646 
	$⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
 
ARG_UNUSED
,

647 c⁄° 
UCh¨
* 
s
)

649  (
UCh¨
* )
s
;

650 
	}
}

653 
	$⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
 
ARG_UNUSED
,

654 c⁄° 
UCh¨
* 
íd
 
ARG_UNUSED
)

656  
TRUE
;

657 
	}
}

660 
	$⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
 
ARG_UNUSED
,

661 c⁄° 
UCh¨
* 
íd
 
ARG_UNUSED
)

663  
FALSE
;

664 
	}
}

667 
	$⁄igíc_Æways_åue_is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
s
 
ARG_UNUSED
,

668 c⁄° 
UCh¨
* 
íd
 
ARG_UNUSED
)

670  
TRUE
;

671 
	}
}

674 
	$⁄igíc_Àngth_check_is_vÆid_mbc_°rög
(
OnigEncodög
 
íc
,

675 c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

677 
p
 < 
íd
) {

678 
p
 +
	`í˛í
(
íc
,Ö);

681 i‡(
p
 !
íd
)

682  
FALSE
;

684  
TRUE
;

685 
	}
}

688 
	$⁄igíc_is_vÆid_mbc_°rög
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

690  
	`ONIGENC_IS_VALID_MBC_STRING
(
íc
, 
s
, 
íd
);

691 
	}
}

693 
OnigCodePoöt


694 
	$⁄igíc_mbn_mbc_to_code
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

696 
c
, 
i
, 
Àn
;

697 
OnigCodePoöt
 
n
;

699 
Àn
 = 
	`í˛í
(
íc
, 
p
);

700 
n
 = (
OnigCodePoöt
 )(*
p
++);

701 i‡(
Àn
 =1Ë 
n
;

703 
i
 = 1; i < 
Àn
; i++) {

704 i‡(
p
 >
íd
) ;

705 
c
 = *
p
++;

706 
n
 <<8;Ç +
c
;

708  
n
;

709 
	}
}

712 
	$⁄igíc_mbn_mbc_ˇ£_fﬁd
(
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

713 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
,

714 
UCh¨
* 
lowî
)

716 
Àn
;

717 c⁄° 
UCh¨
 *
p
 = *
µ
;

719 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

720 *
lowî
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

721 (*
µ
)++;

725 
i
;

727 
Àn
 = 
	`í˛í
(
íc
, 
p
);

728 
i
 = 0; i < 
Àn
; i++) {

729 *
lowî
++ = *
p
++;

731 (*
µ
Ë+
Àn
;

732  
Àn
;

734 
	}
}

738 
	$⁄igíc_mbn_is_mbc_ambiguous
(
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
Êag
,

739 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

741 c⁄° 
UCh¨
* 
p
 = *
µ
;

743 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

744 (*
µ
)++;

745  
	`ONIGENC_IS_ASCII_CODE_CASE_AMBIG
(*
p
);

748 (*
µ
Ë+
	`í˛í
(
íc
, 
p
);

749  
FALSE
;

750 
	}
}

754 
	$⁄igíc_mb2_code_to_mb˛í
(
OnigCodePoöt
 
code
)

756 i‡((
code
 & 0xff00) != 0)  2;

758 
	}
}

761 
	$⁄igíc_mb4_code_to_mb˛í
(
OnigCodePoöt
 
code
)

763 i‡((
code
 & 0xff000000) != 0)  4;

764 i‡((
code
 & 0xff0000) != 0)  3;

765 i‡((
code
 & 0xff00) != 0)  2;

767 
	}
}

770 
	$⁄igíc_mb2_code_to_mbc
(
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

772 
UCh¨
 *
p
 = 
buf
;

774 i‡((
code
 & 0xff00) != 0) {

775 *
p
++ = (
UCh¨
 )((
code
 >> 8) & 0xff);

777 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

780 i‡(
	`í˛í
(
íc
, 
buf
Ë!(
p
 - buf))

781  
ONIGERR_INVALID_CODE_POINT_VALUE
;

783  
p
 - 
buf
;

784 
	}
}

787 
	$⁄igíc_mb4_code_to_mbc
(
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

789 
UCh¨
 *
p
 = 
buf
;

791 i‡((
code
 & 0xff000000) != 0) {

792 *
p
++ = (
UCh¨
 )((
code
 >> 24) & 0xff);

794 i‡((
code
 & 0xff0000Ë!0 || 
p
 !
buf
) {

795 *
p
++ = (
UCh¨
 )((
code
 >> 16) & 0xff);

797 i‡((
code
 & 0xff00Ë!0 || 
p
 !
buf
) {

798 *
p
++ = (
UCh¨
 )((
code
 >> 8) & 0xff);

800 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

803 i‡(
	`í˛í
(
íc
, 
buf
Ë!(
p
 - buf))

804  
ONIGERR_INVALID_CODE_POINT_VALUE
;

806  
p
 - 
buf
;

807 
	}
}

810 
	$⁄igíc_möimum_¥›îty_«me_to_˘y≥
(
OnigEncodög
 
íc
, 
UCh¨
* 
p
, UCh¨* 
íd
)

812 
PosixBøckëE¡ryTy≥
 
PBS
[] = {

813 { (
UCh¨
* )"A um", 
ONIGENC_CTYPE_ALNUM
, 5 },

814 { (
UCh¨
* )"AÕha", 
ONIGENC_CTYPE_ALPHA
, 5 },

815 { (
UCh¨
* )"Bœnk", 
ONIGENC_CTYPE_BLANK
, 5 },

816 { (
UCh¨
* )"C¡æ", 
ONIGENC_CTYPE_CNTRL
, 5 },

817 { (
UCh¨
* )"Digô", 
ONIGENC_CTYPE_DIGIT
, 5 },

818 { (
UCh¨
* )"Gøph", 
ONIGENC_CTYPE_GRAPH
, 5 },

819 { (
UCh¨
* )"Lowî", 
ONIGENC_CTYPE_LOWER
, 5 },

820 { (
UCh¨
* )"Pröt", 
ONIGENC_CTYPE_PRINT
, 5 },

821 { (
UCh¨
* )"Pun˘", 
ONIGENC_CTYPE_PUNCT
, 5 },

822 { (
UCh¨
* )"S∑˚", 
ONIGENC_CTYPE_SPACE
, 5 },

823 { (
UCh¨
* )"Uµî", 
ONIGENC_CTYPE_UPPER
, 5 },

824 { (
UCh¨
* )"XDigô", 
ONIGENC_CTYPE_XDIGIT
, 6 },

825 { (
UCh¨
* )"ASCII", 
ONIGENC_CTYPE_ASCII
, 5 },

826 { (
UCh¨
* )"W‹d", 
ONIGENC_CTYPE_WORD
, 4 },

827 { (
UCh¨
* )
NULL
, -1, 0 }

830 
PosixBøckëE¡ryTy≥
 *
pb
;

831 
Àn
;

833 
Àn
 = 
	`⁄igíc_°æí
(
íc
, 
p
, 
íd
);

834 
pb
 = 
PBS
; 
	`IS_NOT_NULL
’b->
«me
);Öb++) {

835 i‡(
Àn
 =
pb
->len &&

836 
	`⁄igíc_wôh_ascii_°∫cmp
(
íc
, 
p
, 
íd
, 
pb
->
«me
,Öb->
Àn
) == 0)

837  
pb
->
˘y≥
;

840  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

841 
	}
}

844 
	$⁄igíc_mb2_is_code_˘y≥
(
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
,

845 
˘y≥
)

847 i‡(
code
 < 128)

848  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

850 i‡(
	`CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
)) {

851  (
	`ONIGENC_CODE_TO_MBCLEN
(
íc
, 
code
Ë> 1 ? 
TRUE
 : 
FALSE
);

855  
FALSE
;

856 
	}
}

859 
	$⁄igíc_mb4_is_code_˘y≥
(
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
,

860 
˘y≥
)

862 i‡(
code
 < 128)

863  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

865 i‡(
	`CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
)) {

866  (
	`ONIGENC_CODE_TO_MBCLEN
(
íc
, 
code
Ë> 1 ? 
TRUE
 : 
FALSE
);

870  
FALSE
;

871 
	}
}

874 
	$⁄igíc_wôh_ascii_°∫cmp
(
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
,

875 c⁄° 
UCh¨
* 
ßscii
 , 
n
)

877 
x
, 
c
;

879 
n
-- > 0) {

880 i‡(
p
 >
íd
Ë ()(*
ßscii
);

882 
c
 = ()
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

883 
x
 = *
ßscii
 - 
c
;

884 i‡(
x
)  x;

886 
ßscii
++;

887 
p
 +
	`í˛í
(
íc
,Ö);

890 
	}
}

893 
	$⁄ig_codes_cmp
(
OnigCodePoöt
 
a
[], OnigCodePoöà
b
[], 
n
)

895 
i
;

897 
i
 = 0; i < 
n
; i++) {

898 i‡(
a
[
i
] !
b
[i])

903 
	}
}

906 
	$⁄ig_codes_byã_©
(
OnigCodePoöt
 
codes
[], 
©
)

908 
ödex
;

909 
b
;

910 
OnigCodePoöt
 
code
;

912 
ödex
 = 
©
 / 3;

913 
b
 = 
©
 % 3;

914 
code
 = 
codes
[
ödex
];

916  ((
code
 >> ((2 - 
b
) * 8)) & 0xff);

917 
	}
}

	@modules/oniguruma/src/regenc.h

1 #i‚de‡
REGENC_H


2 
	#REGENC_H


	)

32 #i‚de‡
PACKAGE


34 
	~"c⁄fig.h
"

37 #ifde‡
ONIG_ESCAPE_UCHAR_COLLISION


38 #unde‡
ONIG_ESCAPE_UCHAR_COLLISION


41 
	~"⁄iguruma.h
"

44 
OnigCodePoöt
 
	m‰om
;

45 
OnigCodePoöt
 
	mto
;

46 } 
	tOnigPaúCa£FﬁdCodes
;

49 #i‚de‡
NULL


50 
	#NULL
 ((* )0)

	)

53 #i‚de‡
TRUE


54 
	#TRUE
 1

	)

57 #i‚de‡
FALSE


58 
	#FALSE
 0

	)

61 #i‚de‡
ARG_UNUSED


62 #i‡
deföed
(
__GNUC__
)

63 
	#ARG_UNUSED
 
	`__©åibuã__
 ((
unu£d
))

	)

65 
	#ARG_UNUSED


	)

69 
	#ONIG_IS_NULL
(
p
Ë(((*)’)Ë=(*)0)

	)

70 
	#ONIG_IS_NOT_NULL
(
p
Ë(((*)’)Ë!(*)0)

	)

71 
	#ONIG_CHECK_NULL_RETURN
(
p
Ëi‡(
	`ONIG_IS_NULL
’)Ë 
NULL


	)

72 
	#ONIG_CHECK_NULL_RETURN_VAL
(
p
,
vÆ
Ëi‡(
	`ONIG_IS_NULL
’)Ë (vÆ)

	)

74 
	#í˛í
(
íc
,
p
Ë
	`ONIGENC_MBC_ENC_LEN
”nc,p)

	)

77 
	#BIT_CTYPE_NEWLINE
 (1<< 
ONIGENC_CTYPE_NEWLINE
)

	)

78 
	#BIT_CTYPE_ALPHA
 (1<< 
ONIGENC_CTYPE_ALPHA
)

	)

79 
	#BIT_CTYPE_BLANK
 (1<< 
ONIGENC_CTYPE_BLANK
)

	)

80 
	#BIT_CTYPE_CNTRL
 (1<< 
ONIGENC_CTYPE_CNTRL
)

	)

81 
	#BIT_CTYPE_DIGIT
 (1<< 
ONIGENC_CTYPE_DIGIT
)

	)

82 
	#BIT_CTYPE_GRAPH
 (1<< 
ONIGENC_CTYPE_GRAPH
)

	)

83 
	#BIT_CTYPE_LOWER
 (1<< 
ONIGENC_CTYPE_LOWER
)

	)

84 
	#BIT_CTYPE_PRINT
 (1<< 
ONIGENC_CTYPE_PRINT
)

	)

85 
	#BIT_CTYPE_PUNCT
 (1<< 
ONIGENC_CTYPE_PUNCT
)

	)

86 
	#BIT_CTYPE_SPACE
 (1<< 
ONIGENC_CTYPE_SPACE
)

	)

87 
	#BIT_CTYPE_UPPER
 (1<< 
ONIGENC_CTYPE_UPPER
)

	)

88 
	#BIT_CTYPE_XDIGIT
 (1<< 
ONIGENC_CTYPE_XDIGIT
)

	)

89 
	#BIT_CTYPE_WORD
 (1<< 
ONIGENC_CTYPE_WORD
)

	)

90 
	#BIT_CTYPE_ALNUM
 (1<< 
ONIGENC_CTYPE_ALNUM
)

	)

91 
	#BIT_CTYPE_ASCII
 (1<< 
ONIGENC_CTYPE_ASCII
)

	)

93 
	#CTYPE_TO_BIT
(
˘y≥
Ë(1<<(˘y≥))

	)

94 
	#CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
) \

95 ((
˘y≥
Ë=
ONIGENC_CTYPE_WORD
 || (˘y≥Ë=
ONIGENC_CTYPE_GRAPH
 ||\

96 (
˘y≥
Ë=
ONIGENC_CTYPE_PRINT
)

	)

100 
UCh¨
 *
	m«me
;

101 
	m˘y≥
;

102 
	mÀn
;

103 } 
	tPosixBøckëE¡ryTy≥
;

105 
	sPr›îtyNameCty≥
 {

106 *
	m«me
;

107 
	m˘y≥
;

111 
	#USE_UNICODE_PROPERTIES


	)

116 
	#ONIG_ENCODING_INIT_DEFAULT
 
ONIG_ENCODING_ASCII


	)

119 
ONIG_EXTERN
 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
 
P_
((
OnigCa£FﬁdTy≥
 
Êag
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
));

120 
ONIG_EXTERN
 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
 
P_
((
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[]));

121 
ONIG_EXTERN
 
⁄igíc_≠∂y_Æl_ˇ£_fﬁd_wôh_m≠
 
P_
((
m≠_size
, c⁄° 
OnigPaúCa£FﬁdCodes
 
m≠
[], 
ess_t£â_Êag
, 
OnigCa£FﬁdTy≥
 
Êag
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
));

122 
ONIG_EXTERN
 
⁄igíc_gë_ˇ£_fﬁd_codes_by_°r_wôh_m≠
 
P_
((
m≠_size
, c⁄° 
OnigPaúCa£FﬁdCodes
 
m≠
[], 
ess_t£â_Êag
, 
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[]));

123 
ONIG_EXTERN
 
⁄igíc_nŸ_suµ‹t_gë_˘y≥_code_ønge
 
P_
((
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
* 
sb_out
, c⁄° OnigCodePoöt* 
ønges
[]));

124 
ONIG_EXTERN
 
⁄igíc_is_mbc_√wlöe_0x0a
 
P_
((c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
));

128 
ONIG_EXTERN
 
⁄igíc_ascii_mbc_ˇ£_fﬁd
 
P_
((
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
p
, c⁄° UCh¨* 
íd
, UCh¨* 
lowî
));

129 
ONIG_EXTERN
 
⁄igíc_sögÀ_byã_mbc_íc_Àn
 
P_
((c⁄° 
UCh¨
* 
p
));

130 
ONIG_EXTERN
 
OnigCodePoöt
 
⁄igíc_sögÀ_byã_mbc_to_code
 
P_
((c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
));

131 
ONIG_EXTERN
 
⁄igíc_sögÀ_byã_code_to_mb˛í
 
P_
((
OnigCodePoöt
 
code
));

132 
ONIG_EXTERN
 
⁄igíc_sögÀ_byã_code_to_mbc
 
P_
((
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
));

133 
ONIG_EXTERN
 
UCh¨
* 
⁄igíc_sögÀ_byã_À·_adju°_ch¨_hód
 
P_
((c⁄° UCh¨* 
°¨t
, c⁄° UCh¨* 
s
));

134 
ONIG_EXTERN
 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
 
P_
((c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

135 
ONIG_EXTERN
 
⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
 
P_
((c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

136 
ONIG_EXTERN
 
⁄igíc_Æways_åue_is_vÆid_mbc_°rög
 
P_
((c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

137 
ONIG_EXTERN
 
⁄igíc_Àngth_check_is_vÆid_mbc_°rög
 
P_
((
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

140 
ONIG_EXTERN
 
OnigCodePoöt
 
⁄igíc_mbn_mbc_to_code
 
P_
((
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
));

141 
ONIG_EXTERN
 
⁄igíc_mbn_mbc_ˇ£_fﬁd
 
P_
((
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
p
, c⁄° UCh¨* 
íd
, UCh¨* 
lowî
));

142 
ONIG_EXTERN
 
⁄igíc_mb2_code_to_mb˛í
 
P_
((
OnigCodePoöt
 
code
));

143 
ONIG_EXTERN
 
⁄igíc_mb2_code_to_mbc
 
P_
((
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
));

144 
ONIG_EXTERN
 
⁄igíc_möimum_¥›îty_«me_to_˘y≥
 
P_
((
OnigEncodög
 
íc
, 
UCh¨
* 
p
, UCh¨* 
íd
));

145 
ONIG_EXTERN
 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
 
P_
((
OnigEncodög
 
íc
, 
UCh¨
* 
p
, UCh¨* 
íd
));

146 
ONIG_EXTERN
 
⁄igíc_mb2_is_code_˘y≥
 
P_
((
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
˘y≥
));

147 
ONIG_EXTERN
 
⁄igíc_mb4_code_to_mb˛í
 
P_
((
OnigCodePoöt
 
code
));

148 
ONIG_EXTERN
 
⁄igíc_mb4_code_to_mbc
 
P_
((
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
));

149 
ONIG_EXTERN
 
⁄igíc_mb4_is_code_˘y≥
 
P_
((
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
˘y≥
));

150 
ONIG_EXTERN
 
Pr›îtyNameCty≥
* 
euc_jp_lookup_¥›îty_«me
 
P_
((c⁄° *
°r
, 
Àn
));

151 
ONIG_EXTERN
 
Pr›îtyNameCty≥
* 
sjis_lookup_¥›îty_«me
 
P_
((c⁄° *
°r
, 
Àn
));

155 
ONIG_EXTERN
 
⁄igíc_unicode_is_code_˘y≥
 
P_
((
OnigCodePoöt
 
code
, 
˘y≥
));

156 
ONIG_EXTERN
 
⁄igíc_utf16_32_gë_˘y≥_code_ønge
 
P_
((
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
 *
sb_out
, c⁄° OnigCodePoöt* 
ønges
[]));

157 
ONIG_EXTERN
 
⁄igíc_unicode_˘y≥_code_ønge
 
P_
((
˘y≥
, c⁄° 
OnigCodePoöt
* 
ønges
[]));

158 
ONIG_EXTERN
 
⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
 
P_
((
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[]));

159 
ONIG_EXTERN
 
⁄igíc_unicode_mbc_ˇ£_fﬁd
 
P_
((
OnigEncodög
 
íc
, 
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
, UCh¨* 
fﬁd
));

160 
ONIG_EXTERN
 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
 
P_
((
OnigCa£FﬁdTy≥
 
Êag
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
));

163 
	#UTF16_IS_SURROGATE_FIRST
(
c
Ë(((cË& 0xfcË=0xd8)

	)

164 
	#UTF16_IS_SURROGATE_SECOND
(
c
Ë(((cË& 0xfcË=0xdc)

	)

167 
	#FOLDS1_FOLD
(
i
Ë(
OnigUnicodeFﬁds1
 + (i))

	)

168 
	#FOLDS2_FOLD
(
i
Ë(
OnigUnicodeFﬁds2
 + (i))

	)

169 
	#FOLDS3_FOLD
(
i
Ë(
OnigUnicodeFﬁds3
 + (i))

	)

170 
	#FOLDS1_UNFOLDS_NUM
(
i
Ë(
OnigUnicodeFﬁds1
[(i)+1])

	)

171 
	#FOLDS2_UNFOLDS_NUM
(
i
Ë(
OnigUnicodeFﬁds2
[(i)+2])

	)

172 
	#FOLDS3_UNFOLDS_NUM
(
i
Ë(
OnigUnicodeFﬁds3
[(i)+3])

	)

173 
	#FOLDS1_UNFOLDS
(
i
Ë(
OnigUnicodeFﬁds1
 + (iË+ 2)

	)

174 
	#FOLDS2_UNFOLDS
(
i
Ë(
OnigUnicodeFﬁds2
 + (iË+ 3)

	)

175 
	#FOLDS3_UNFOLDS
(
i
Ë(
OnigUnicodeFﬁds3
 + (iË+ 4)

	)

176 
	#FOLDS1_NEXT_INDEX
(
i
Ë((iË+ 2 + 
OnigUnicodeFﬁds1
[(i)+1])

	)

177 
	#FOLDS2_NEXT_INDEX
(
i
Ë((iË+ 3 + 
OnigUnicodeFﬁds2
[(i)+2])

	)

178 
	#FOLDS3_NEXT_INDEX
(
i
Ë((iË+ 4 + 
OnigUnicodeFﬁds3
[(i)+3])

	)

180 
	#FOLDS_FOLD_ADDR_BUK
(
buk
, 
addr
) do {\

181 i‡((
buk
)->
fﬁd_Àn
 == 1)\

182 
addr
 = 
OnigUnicodeFﬁds1
 + (
buk
)->
ödex
;\

183 i‡((
buk
)->
fﬁd_Àn
 == 2)\

184 
addr
 = 
OnigUnicodeFﬁds2
 + (
buk
)->
ödex
;\

185 i‡((
buk
)->
fﬁd_Àn
 == 3)\

186 
addr
 = 
OnigUnicodeFﬁds3
 + (
buk
)->
ödex
;\

188 
addr
 = 0;\

189 } 0)

	)

191 
OnigCodePoöt
 
OnigUnicodeFﬁds1
[];

192 
OnigCodePoöt
 
OnigUnicodeFﬁds2
[];

193 
OnigCodePoöt
 
OnigUnicodeFﬁds3
[];

195 
	sByUnfﬁdKey
 {

196 
OnigCodePoöt
 
	mcode
;

197 
	mödex
;

198 
	mfﬁd_Àn
;

201 c⁄° 
ByUnfﬁdKey
* 
unicode_unfﬁd_key
(
OnigCodePoöt
 
code
);

202 
unicode_fﬁd1_key
(
OnigCodePoöt
 
code
[]);

203 
unicode_fﬁd2_key
(
OnigCodePoöt
 
code
[]);

204 
unicode_fﬁd3_key
(
OnigCodePoöt
 
code
[]);

206 
⁄ig_codes_cmp
(
OnigCodePoöt
 
a
[], OnigCodePoöà
b
[], 
n
);

207 
⁄ig_codes_byã_©
(
OnigCodePoöt
 
code
[], 
©
);

211 
	#ONIGENC_ISO_8859_1_TO_LOWER_CASE
(
c
) \

212 
OnigEncISO_8859_1_ToLowîCa£TabÀ
[
c
]

	)

213 
	#ONIGENC_ISO_8859_1_TO_UPPER_CASE
(
c
) \

214 
OnigEncISO_8859_1_ToUµîCa£TabÀ
[
c
]

	)

216 
ONIG_EXTERN
 c⁄° 
UCh¨
 
	gOnigEncISO_8859_1_ToLowîCa£TabÀ
[];

217 
ONIG_EXTERN
 c⁄° 
UCh¨
 
	gOnigEncISO_8859_1_ToUµîCa£TabÀ
[];

219 
ONIG_EXTERN
 

220 
⁄igíc_wôh_ascii_°∫cmp
 
P_
((
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
, c⁄° UCh¨* 
ßscii
 , 
n
));

221 
ONIG_EXTERN
 
UCh¨
*

222 
⁄igíc_°ï
 
P_
((
OnigEncodög
 
íc
, c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
, 
n
));

225 
⁄ig_is_ö_code_ønge
 
P_
((c⁄° 
UCh¨
* 
p
, 
OnigCodePoöt
 
code
));

227 
ONIG_EXTERN
 
OnigEncodög
 
	gOnigEncDeÁu…Ch¨Encodög
;

228 
ONIG_EXTERN
 c⁄° 
UCh¨
 
	gOnigEncAsciiToLowîCa£TabÀ
[];

229 
ONIG_EXTERN
 c⁄° 
UCh¨
 
	gOnigEncAsciiToUµîCa£TabÀ
[];

230 
ONIG_EXTERN
 c⁄° 
	gOnigEncAsciiCty≥TabÀ
[];

233 
	#ONIGENC_IS_ASCII_CODE
(
code
Ë((codeË< 0x80)

	)

234 
	#ONIGENC_ASCII_CODE_TO_LOWER_CASE
(
c
Ë
OnigEncAsciiToLowîCa£TabÀ
[c]

	)

235 
	#ONIGENC_ASCII_CODE_TO_UPPER_CASE
(
c
Ë
OnigEncAsciiToUµîCa£TabÀ
[c]

	)

236 
	#ONIGENC_IS_ASCII_CODE_CTYPE
(
code
,
˘y≥
) \

237 ((
OnigEncAsciiCty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

238 
	#ONIGENC_IS_ASCII_CODE_CASE_AMBIG
(
code
) \

239 (
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
ONIGENC_CTYPE_UPPER
) ||\

240 
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
ONIGENC_CTYPE_LOWER
))

	)

	@modules/oniguruma/src/regerror.c

30 
	~"ªgöt.h
"

31 
	~<°dio.h
>

33 #ifde‡
HAVE_STDARG_PROTOTYPES


34 
	~<°d¨g.h
>

35 
	#va_öô_li°
(
a
,
b
Ë
	`va_°¨t
◊,b)

	)

37 
	~<v¨¨gs.h
>

38 
	#va_öô_li°
(
a
,
b
Ë
	`va_°¨t
◊)

	)

41 
UCh¨
*

42 
	$⁄ig_îr‹_code_to_f‹m©
(
code
)

44 *
p
;

46 i‡(
code
 >0Ë (
UCh¨
* )0;

48 
code
) {

49 
ONIG_MISMATCH
:

50 
p
 = "mismatch"; ;

51 
ONIG_NO_SUPPORT_CONFIG
:

52 
p
 = "no support inÅhis configuration"; ;

53 
ONIGERR_MEMORY
:

54 
p
 = "failÅo memoryállocation"; ;

55 
ONIGERR_MATCH_STACK_LIMIT_OVER
:

56 
p
 = "match-stackÜimit over"; ;

57 
ONIGERR_PARSE_DEPTH_LIMIT_OVER
:

58 
p
 = "parse depthÜimit over"; ;

59 
ONIGERR_TYPE_BUG
:

60 
p
 = "undefinedÅype (bug)"; ;

61 
ONIGERR_PARSER_BUG
:

62 
p
 = "internalÖarserÉrror (bug)"; ;

63 
ONIGERR_STACK_BUG
:

64 
p
 = "stackÉrror (bug)"; ;

65 
ONIGERR_UNDEFINED_BYTECODE
:

66 
p
 = "undefined bytecode (bug)"; ;

67 
ONIGERR_UNEXPECTED_BYTECODE
:

68 
p
 = "unexpected bytecode (bug)"; ;

69 
ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED
:

70 
p
 = "default multibyte-encoding isÇot setted"; ;

71 
ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR
:

72 
p
 = "can't convertÅo wide-char on specified multibyte-encoding"; ;

73 
ONIGERR_FAIL_TO_INITIALIZE
:

74 
p
 = "failÅo initialize"; ;

75 
ONIGERR_INVALID_ARGUMENT
:

76 
p
 = "invalidárgument"; ;

77 
ONIGERR_END_PATTERN_AT_LEFT_BRACE
:

78 
p
 = "endÖatternátÜeft brace"; ;

79 
ONIGERR_END_PATTERN_AT_LEFT_BRACKET
:

80 
p
 = "endÖatternátÜeft bracket"; ;

81 
ONIGERR_EMPTY_CHAR_CLASS
:

82 
p
 = "empty char-class"; ;

83 
ONIGERR_PREMATURE_END_OF_CHAR_CLASS
:

84 
p
 = "prematureÉnd of char-class"; ;

85 
ONIGERR_END_PATTERN_AT_ESCAPE
:

86 
p
 = "endÖatternátÉscape"; ;

87 
ONIGERR_END_PATTERN_AT_META
:

88 
p
 = "endÖatternát meta"; ;

89 
ONIGERR_END_PATTERN_AT_CONTROL
:

90 
p
 = "endÖatternát control"; ;

91 
ONIGERR_META_CODE_SYNTAX
:

92 
p
 = "invalid meta-code syntax"; ;

93 
ONIGERR_CONTROL_CODE_SYNTAX
:

94 
p
 = "invalid control-code syntax"; ;

95 
ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE
:

96 
p
 = "char-class valueátÉnd ofÑange"; ;

97 
ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE
:

98 
p
 = "char-class valueát start ofÑange"; ;

99 
ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS
:

100 
p
 = "unmatchedÑange specifier in char-class"; ;

101 
ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED
:

102 
p
 = "target ofÑepeat operator isÇot specified"; ;

103 
ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID
:

104 
p
 = "target ofÑepeat operator is invalid"; ;

105 
ONIGERR_NESTED_REPEAT_OPERATOR
:

106 
p
 = "nestedÑepeat operator"; ;

107 
ONIGERR_UNMATCHED_CLOSE_PARENTHESIS
:

108 
p
 = "unmatched closeÖarenthesis"; ;

109 
ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
:

110 
p
 = "endÖattern with unmatchedÖarenthesis"; ;

111 
ONIGERR_END_PATTERN_IN_GROUP
:

112 
p
 = "endÖattern in group"; ;

113 
ONIGERR_UNDEFINED_GROUP_OPTION
:

114 
p
 = "undefined group option"; ;

115 
ONIGERR_INVALID_POSIX_BRACKET_TYPE
:

116 
p
 = "invalid POSIX bracketÅype"; ;

117 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
:

118 
p
 = "invalidÖattern inÜook-behind"; ;

119 
ONIGERR_INVALID_REPEAT_RANGE_PATTERN
:

120 
p
 = "invalidÑepeatÑange {lower,upper}"; ;

121 
ONIGERR_TOO_BIG_NUMBER
:

122 
p
 = "too bigÇumber"; ;

123 
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
:

124 
p
 = "too bigÇumber forÑepeatÑange"; ;

125 
ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE
:

126 
p
 = "upper is smallerÅhanÜower inÑepeatÑange"; ;

127 
ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
:

128 
p
 = "emptyÑange in char class"; ;

129 
ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE
:

130 
p
 = "mismatch multibyte codeÜength in char-classÑange"; ;

131 
ONIGERR_TOO_MANY_MULTI_BYTE_RANGES
:

132 
p
 = "too many multibyte codeÑangesáre specified"; ;

133 
ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
:

134 
p
 = "too short multibyte code string"; ;

135 
ONIGERR_TOO_BIG_BACKREF_NUMBER
:

136 
p
 = "too big backrefÇumber"; ;

137 
ONIGERR_INVALID_BACKREF
:

138 #ifde‡
USE_NAMED_GROUP


139 
p
 = "invalid backrefÇumber/name"; ;

141 
p
 = "invalid backrefÇumber"; ;

143 
ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
:

144 
p
 = "numbered backref/call isÇotállowed. (useÇame)"; ;

145 
ONIGERR_TOO_MANY_CAPTURES
:

146 
p
 = "too many captures"; ;

147 
ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
:

148 
p
 = "too big wide-char value"; ;

149 
ONIGERR_TOO_LONG_WIDE_CHAR_VALUE
:

150 
p
 = "tooÜong wide-char value"; ;

151 
ONIGERR_INVALID_CODE_POINT_VALUE
:

152 
p
 = "invalid codeÖoint value"; ;

153 
ONIGERR_EMPTY_GROUP_NAME
:

154 
p
 = "groupÇame isÉmpty"; ;

155 
ONIGERR_INVALID_GROUP_NAME
:

156 
p
 = "invalid groupÇame <%n>"; ;

157 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
:

158 #ifde‡
USE_NAMED_GROUP


159 
p
 = "invalid char in groupÇame <%n>"; ;

161 
p
 = "invalid char in groupÇumber <%n>"; ;

163 
ONIGERR_UNDEFINED_NAME_REFERENCE
:

164 
p
 = "undefinedÇame <%n>Ñeference"; ;

165 
ONIGERR_UNDEFINED_GROUP_REFERENCE
:

166 
p
 = "undefined group <%n>Ñeference"; ;

167 
ONIGERR_MULTIPLEX_DEFINED_NAME
:

168 
p
 = "multiplex definedÇame <%n>"; ;

169 
ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
:

170 
p
 = "multiplex definitionÇame <%n> call"; ;

171 
ONIGERR_NEVER_ENDING_RECURSION
:

172 
p
 = "neverÉndingÑecursion"; ;

173 
ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY
:

174 
p
 = "groupÇumber isÅoo big for capture history"; ;

175 
ONIGERR_INVALID_CHAR_PROPERTY_NAME
:

176 
p
 = "invalid characterÖropertyÇame {%n}"; ;

177 
ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION
:

178 
p
 = "not supportedÉncoding combination"; ;

179 
ONIGERR_INVALID_COMBINATION_OF_OPTIONS
:

180 
p
 = "invalid combination of options"; ;

181 
ONIGERR_LIBRARY_IS_NOT_INITIALIZED
:

182 
p
 = "library isÇot initialized"; ;

185 
p
 = "undefinedÉrror code"; ;

188  (
UCh¨
* )
p
;

189 
	}
}

191 
	$•röt_byã
(* 
s
, 
v
)

193 
	`x¢¥ötf
(
s
, 3, "%02x", (
v
 & 0377));

194 
	}
}

196 
	$•röt_byã_wôh_x
(* 
s
, 
v
)

198 
	`x¢¥ötf
(
s
, 5, "\\x%02x", (
v
 & 0377));

199 
	}
}

201 
	$to_ascii
(
OnigEncodög
 
íc
, 
UCh¨
 *
s
, UCh¨ *
íd
,

202 
UCh¨
 
buf
[], 
buf_size
, *
is_ovî
)

204 
Àn
;

205 
UCh¨
 *
p
;

206 
OnigCodePoöt
 
code
;

208 i‡(
	`ONIGENC_MBC_MINLEN
(
íc
) > 1) {

209 
p
 = 
s
;

210 
Àn
 = 0;

211 
p
 < 
íd
) {

212 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

213 i‡(
code
 >= 0x80) {

214 i‡(
code
 > 0xfff‡&& 
Àn
 + 10 <
buf_size
) {

215 
	`•röt_byã_wôh_x
((*)(&(
buf
[
Àn
])), ()(
code
 >> 24));

216 
	`•röt_byã
((*)(&(
buf
[
Àn
+4])), ()(
code
 >> 16));

217 
	`•röt_byã
((*)(&(
buf
[
Àn
+6])), ()(
code
 >> 8));

218 
	`•röt_byã
((*)(&(
buf
[
Àn
+8])), ()
code
);

219 
Àn
 += 10;

221 i‡(
Àn
 + 6 <
buf_size
) {

222 
	`•röt_byã_wôh_x
((*)(&(
buf
[
Àn
])), ()(
code
 >> 8));

223 
	`•röt_byã
((*)(&(
buf
[
Àn
+4])), ()
code
);

224 
Àn
 += 6;

231 
buf
[
Àn
++] = (
UCh¨
 )
code
;

234 
p
 +
	`í˛í
(
íc
,Ö);

235 i‡(
Àn
 >
buf_size
) ;

238 *
is_ovî
 = ((
p
 < 
íd
) ? 1 : 0);

241 
Àn
 = 
	`MIN
((
íd
 - 
s
), 
buf_size
);

242 
	`xmem˝y
(
buf
, 
s
, (
size_t
 )
Àn
);

243 *
is_ovî
 = ((
buf_size
 < (
íd
 - 
s
)) ? 1 : 0);

246  
Àn
;

247 
	}
}

251 
	#MAX_ERROR_PAR_LEN
 30

	)

254 #ifde‡
HAVE_STDARG_PROTOTYPES


255 
	$⁄ig_îr‹_code_to_°r
(
UCh¨
* 
s
, 
code
, ...)

257 
	$⁄ig_îr‹_code_to_°r
(
s
, 
code
, 
va_Æi°
)

258 
UCh¨
* 
s
;

259 
code
;

260 
va_d˛


263 
UCh¨
 *
p
, *
q
;

264 
OnigEº‹Info
* 
eöfo
;

265 
Àn
, 
is_ovî
;

266 
UCh¨
 
∑rbuf
[
MAX_ERROR_PAR_LEN
];

267 
va_li°
 
v¨gs
;

269 
	`va_öô_li°
(
v¨gs
, 
code
);

271 
code
) {

272 
ONIGERR_UNDEFINED_NAME_REFERENCE
:

273 
ONIGERR_UNDEFINED_GROUP_REFERENCE
:

274 
ONIGERR_MULTIPLEX_DEFINED_NAME
:

275 
ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
:

276 
ONIGERR_INVALID_GROUP_NAME
:

277 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
:

278 
ONIGERR_INVALID_CHAR_PROPERTY_NAME
:

279 
eöfo
 = 
	`va_¨g
(
v¨gs
, 
OnigEº‹Info
*);

280 
Àn
 = 
	`to_ascii
(
eöfo
->
íc
,Éöfo->
∑r
,Éöfo->
∑r_íd
,

281 
∑rbuf
, 
MAX_ERROR_PAR_LEN
 - 3, &
is_ovî
);

282 
q
 = 
	`⁄ig_îr‹_code_to_f‹m©
(
code
);

283 
p
 = 
s
;

284 *
q
 != '\0') {

285 i‡(*
q
 == '%') {

286 
q
++;

287 i‡(*
q
 == 'n') {

288 
	`xmem˝y
(
p
, 
∑rbuf
, 
Àn
);

289 
p
 +
Àn
;

290 i‡(
is_ovî
 != 0) {

291 
	`xmem˝y
(
p
, "...", 3);

292 
p
 += 3;

294 
q
++;

297 
n‹mÆ_ch¨
;

300 
n‹mÆ_ch¨
:

301 *
p
++ = *
q
++;

304 *
p
 = '\0';

305 
Àn
 = 
p
 - 
s
;

309 
q
 = 
	`⁄ig_îr‹_code_to_f‹m©
(
code
);

310 
Àn
 = 
	`⁄igíc_°r_byãÀn_nuŒ
(
ONIG_ENCODING_ASCII
, 
q
);

311 
	`xmem˝y
(
s
, 
q
, 
Àn
);

312 
s
[
Àn
] = '\0';

316 
	`va_íd
(
v¨gs
);

317  
Àn
;

318 
	}
}

322 #ifde‡
HAVE_STDARG_PROTOTYPES


323 
	$⁄ig_¢¥ötf_wôh_∑âîn
(
UCh¨
 
buf
[], 
bufsize
, 
OnigEncodög
 
íc
,

324 
UCh¨
* 
∑t
, UCh¨* 
∑t_íd
, c⁄° UCh¨ *
fmt
, ...)

326 
	$⁄ig_¢¥ötf_wôh_∑âîn
(
buf
, 
bufsize
, 
íc
, 
∑t
, 
∑t_íd
, 
fmt
, 
va_Æi°
)

327 
UCh¨
 
buf
[];

328 
bufsize
;

329 
OnigEncodög
 
íc
;

330 
UCh¨
* 
∑t
;

331 
UCh¨
* 
∑t_íd
;

332 c⁄° 
UCh¨
 *
fmt
;

333 
va_d˛


336 
n
, 
√ed
, 
Àn
;

337 
UCh¨
 *
p
, *
s
, *
bp
;

338 
UCh¨
 
bs
[6];

339 
va_li°
 
¨gs
;

341 
	`va_öô_li°
(
¨gs
, 
fmt
);

342 
n
 = 
	`xv¢¥ötf
((* )
buf
, 
bufsize
, (c⁄° * )
fmt
, 
¨gs
);

343 
	`va_íd
(
¨gs
);

345 
√ed
 = (
∑t_íd
 - 
∑t
) * 4 + 4;

347 i‡(
n
 + 
√ed
 < 
bufsize
) {

348 
	`x°rˇt
((* )
buf
, ": /", 
bufsize
);

349 
s
 = 
buf
 + 
	`⁄igíc_°r_byãÀn_nuŒ
(
ONIG_ENCODING_ASCII
, buf);

351 
p
 = 
∑t
;

352 
p
 < 
∑t_íd
) {

353 i‡(
	`ONIGENC_IS_MBC_HEAD
(
íc
, 
p
)) {

354 
Àn
 = 
	`í˛í
(
íc
, 
p
);

355 i‡(
	`ONIGENC_MBC_MINLEN
(
íc
) == 1) {

356 
Àn
-- > 0Ë*
s
++ = *
p
++;

359 
bÀn
;

361 
Àn
-- > 0) {

362 
	`•röt_byã_wôh_x
((* )
bs
, ()(*
p
++));

363 
bÀn
 = 
	`⁄igíc_°r_byãÀn_nuŒ
(
ONIG_ENCODING_ASCII
, 
bs
);

364 
bp
 = 
bs
;

365 
bÀn
-- > 0Ë*
s
++ = *
bp
++;

369 i‡(*
p
 == '\\') {

370 *
s
++ = *
p
++;

371 
Àn
 = 
	`í˛í
(
íc
, 
p
);

372 
Àn
-- > 0Ë*
s
++ = *
p
++;

374 i‡(*
p
 == '/') {

375 *
s
++ = ()'\\';

376 *
s
++ = *
p
++;

378 i‡(!
	`ONIGENC_IS_CODE_PRINT
(
íc
, *
p
) &&

379 !
	`ONIGENC_IS_CODE_SPACE
(
íc
, *
p
)) {

380 
	`•röt_byã_wôh_x
((* )
bs
, ()(*
p
++));

381 
Àn
 = 
	`⁄igíc_°r_byãÀn_nuŒ
(
ONIG_ENCODING_ASCII
, 
bs
);

382 
bp
 = 
bs
;

383 
Àn
-- > 0Ë*
s
++ = *
bp
++;

386 *
s
++ = *
p
++;

390 *
s
++ = '/';

391 *
s
 = '\0';

393 
	}
}

	@modules/oniguruma/src/regexec.c

30 
	~"ªgöt.h
"

32 
	#USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


	)

34 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


35 
	#ONIGENC_IS_MBC_CRNL
(
íc
,
p
,
íd
) \

36 (
	`ONIGENC_MBC_TO_CODE
(
íc
,
p
,
íd
) == 13 && \

37 
	`ONIGENC_IS_MBC_NEWLINE
(
íc
,(
p
+
	`í˛í
”nc,p)),
íd
))

	)

40 #ifde‡
USE_CAPTURE_HISTORY


41 
hi°‹y_åì_‰ì
(
OnigC≠tuªTªeNode
* 
node
);

44 
	$hi°‹y_åì_˛ór
(
OnigC≠tuªTªeNode
* 
node
)

46 
i
;

48 i‡(
	`IS_NOT_NULL
(
node
)) {

49 
i
 = 0; i < 
node
->
num_chûds
; i++) {

50 i‡(
	`IS_NOT_NULL
(
node
->
chûds
[
i
])) {

51 
	`hi°‹y_åì_‰ì
(
node
->
chûds
[
i
]);

54 
i
 = 0; i < 
node
->
Æloˇãd
; i++) {

55 
node
->
chûds
[
i
] = (
OnigC≠tuªTªeNode
* )0;

57 
node
->
num_chûds
 = 0;

58 
node
->
beg
 = 
ONIG_REGION_NOTPOS
;

59 
node
->
íd
 = 
ONIG_REGION_NOTPOS
;

60 
node
->
group
 = -1;

62 
	}
}

65 
	$hi°‹y_åì_‰ì
(
OnigC≠tuªTªeNode
* 
node
)

67 
	`hi°‹y_åì_˛ór
(
node
);

68 
	`x‰ì
(
node
);

69 
	}
}

72 
	$hi°‹y_roŸ_‰ì
(
OnigRegi⁄
* 
r
)

74 i‡(
	`IS_NOT_NULL
(
r
->
hi°‹y_roŸ
)) {

75 
	`hi°‹y_åì_‰ì
(
r
->
hi°‹y_roŸ
);

76 
r
->
hi°‹y_roŸ
 = (
OnigC≠tuªTªeNode
* )0;

78 
	}
}

80 
OnigC≠tuªTªeNode
*

81 
	$hi°‹y_node_√w
()

83 
OnigC≠tuªTªeNode
* 
node
;

85 
node
 = (
OnigC≠tuªTªeNode
* )
	`xmÆloc
((OnigCaptureTreeNode));

86 
	`CHECK_NULL_RETURN
(
node
);

87 
node
->
chûds
 = (
OnigC≠tuªTªeNode
** )0;

88 
node
->
Æloˇãd
 = 0;

89 
node
->
num_chûds
 = 0;

90 
node
->
group
 = -1;

91 
node
->
beg
 = 
ONIG_REGION_NOTPOS
;

92 
node
->
íd
 = 
ONIG_REGION_NOTPOS
;

94  
node
;

95 
	}
}

98 
	$hi°‹y_åì_add_chûd
(
OnigC≠tuªTªeNode
* 
∑ª¡
, OnigC≠tuªTªeNode* 
chûd
)

100 
	#HISTORY_TREE_INIT_ALLOC_SIZE
 8

	)

102 i‡(
∑ª¡
->
num_chûds
 >∑ª¡->
Æloˇãd
) {

103 
n
, 
i
;

105 i‡(
	`IS_NULL
(
∑ª¡
->
chûds
)) {

106 
n
 = 
HISTORY_TREE_INIT_ALLOC_SIZE
;

107 
∑ª¡
->
chûds
 =

108 (
OnigC≠tuªTªeNode
** )
	`xmÆloc
((OnigC≠tuªTªeNode*Ë* 
n
);

111 
n
 = 
∑ª¡
->
Æloˇãd
 * 2;

112 
∑ª¡
->
chûds
 =

113 (
OnigC≠tuªTªeNode
** )
	`xªÆloc
(
∑ª¡
->
chûds
,

114 (
OnigC≠tuªTªeNode
*Ë* 
n
);

116 
	`CHECK_NULL_RETURN_MEMERR
(
∑ª¡
->
chûds
);

117 
i
 = 
∑ª¡
->
Æloˇãd
; i < 
n
; i++) {

118 
∑ª¡
->
chûds
[
i
] = (
OnigC≠tuªTªeNode
* )0;

120 
∑ª¡
->
Æloˇãd
 = 
n
;

123 
∑ª¡
->
chûds
[∑ª¡->
num_chûds
] = 
chûd
;

124 
∑ª¡
->
num_chûds
++;

126 
	}
}

128 
OnigC≠tuªTªeNode
*

129 
	$hi°‹y_åì_˛⁄e
(
OnigC≠tuªTªeNode
* 
node
)

131 
i
;

132 
OnigC≠tuªTªeNode
 *
˛⁄e
, *
chûd
;

134 
˛⁄e
 = 
	`hi°‹y_node_√w
();

135 
	`CHECK_NULL_RETURN
(
˛⁄e
);

137 
˛⁄e
->
beg
 = 
node
->beg;

138 
˛⁄e
->
íd
 = 
node
->end;

139 
i
 = 0; i < 
node
->
num_chûds
; i++) {

140 
chûd
 = 
	`hi°‹y_åì_˛⁄e
(
node
->
chûds
[
i
]);

141 i‡(
	`IS_NULL
(
chûd
)) {

142 
	`hi°‹y_åì_‰ì
(
˛⁄e
);

143  (
OnigC≠tuªTªeNode
* )0;

145 
	`hi°‹y_åì_add_chûd
(
˛⁄e
, 
chûd
);

148  
˛⁄e
;

149 
	}
}

151 
OnigC≠tuªTªeNode
*

152 
	$⁄ig_gë_ˇ±uª_åì
(
OnigRegi⁄
* 
ªgi⁄
)

154  
ªgi⁄
->
hi°‹y_roŸ
;

155 
	}
}

159 
	$⁄ig_ªgi⁄_˛ór
(
OnigRegi⁄
* 
ªgi⁄
)

161 
i
;

163 
i
 = 0; i < 
ªgi⁄
->
num_ªgs
; i++) {

164 
ªgi⁄
->
beg
[
i
] =Ñegi⁄->
íd
[i] = 
ONIG_REGION_NOTPOS
;

166 #ifde‡
USE_CAPTURE_HISTORY


167 
	`hi°‹y_roŸ_‰ì
(
ªgi⁄
);

169 
	}
}

172 
	$⁄ig_ªgi⁄_ªsize
(
OnigRegi⁄
* 
ªgi⁄
, 
n
)

174 
ªgi⁄
->
num_ªgs
 = 
n
;

176 i‡(
n
 < 
ONIG_NREGION
)

177 
n
 = 
ONIG_NREGION
;

179 i‡(
ªgi⁄
->
Æloˇãd
 == 0) {

180 
ªgi⁄
->
beg
 = (* )
	`xmÆloc
(
n
 * ());

181 
ªgi⁄
->
íd
 = (* )
	`xmÆloc
(
n
 * ());

183 i‡(
ªgi⁄
->
beg
 =0 ||Ñegi⁄->
íd
 == 0)

184  
ONIGERR_MEMORY
;

186 
ªgi⁄
->
Æloˇãd
 = 
n
;

188 i‡(
ªgi⁄
->
Æloˇãd
 < 
n
) {

189 
ªgi⁄
->
beg
 = (* )
	`xªÆloc
‘egi⁄->beg, 
n
 * ());

190 
ªgi⁄
->
íd
 = (* )
	`xªÆloc
‘egi⁄->íd, 
n
 * ());

192 i‡(
ªgi⁄
->
beg
 =0 ||Ñegi⁄->
íd
 == 0)

193  
ONIGERR_MEMORY
;

195 
ªgi⁄
->
Æloˇãd
 = 
n
;

199 
	}
}

202 
	$⁄ig_ªgi⁄_ªsize_˛ór
(
OnigRegi⁄
* 
ªgi⁄
, 
n
)

204 
r
;

206 
r
 = 
	`⁄ig_ªgi⁄_ªsize
(
ªgi⁄
, 
n
);

207 i‡(
r
 != 0) Ñ;

208 
	`⁄ig_ªgi⁄_˛ór
(
ªgi⁄
);

210 
	}
}

213 
	$⁄ig_ªgi⁄_£t
(
OnigRegi⁄
* 
ªgi⁄
, 
©
, 
beg
, 
íd
)

215 i‡(
©
 < 0Ë 
ONIGERR_INVALID_ARGUMENT
;

217 i‡(
©
 >
ªgi⁄
->
Æloˇãd
) {

218 
r
 = 
	`⁄ig_ªgi⁄_ªsize
(
ªgi⁄
, 
©
 + 1);

219 i‡(
r
 < 0) Ñ;

222 
ªgi⁄
->
beg
[
©
] = beg;

223 
ªgi⁄
->
íd
[
©
] =Énd;

225 
	}
}

228 
	$⁄ig_ªgi⁄_öô
(
OnigRegi⁄
* 
ªgi⁄
)

230 
ªgi⁄
->
num_ªgs
 = 0;

231 
ªgi⁄
->
Æloˇãd
 = 0;

232 
ªgi⁄
->
beg
 = (* )0;

233 
ªgi⁄
->
íd
 = (* )0;

234 
ªgi⁄
->
hi°‹y_roŸ
 = (
OnigC≠tuªTªeNode
* )0;

235 
	}
}

237 
OnigRegi⁄
*

238 
	$⁄ig_ªgi⁄_√w
()

240 
OnigRegi⁄
* 
r
;

242 
r
 = (
OnigRegi⁄
* )
	`xmÆloc
((OnigRegion));

243 
	`⁄ig_ªgi⁄_öô
(
r
);

244  
r
;

245 
	}
}

248 
	$⁄ig_ªgi⁄_‰ì
(
OnigRegi⁄
* 
r
, 
‰ì_£lf
)

250 i‡(
r
) {

251 i‡(
r
->
Æloˇãd
 > 0) {

252 i‡(
r
->
beg
Ë
	`x‰ì
(r->beg);

253 i‡(
r
->
íd
Ë
	`x‰ì
(r->end);

254 
r
->
Æloˇãd
 = 0;

256 #ifde‡
USE_CAPTURE_HISTORY


257 
	`hi°‹y_roŸ_‰ì
(
r
);

259 i‡(
‰ì_£lf
Ë
	`x‰ì
(
r
);

261 
	}
}

264 
	$⁄ig_ªgi⁄_c›y
(
OnigRegi⁄
* 
to
, OnigRegi⁄* 
‰om
)

266 
	#RREGC_SIZE
 ((Ë* 
‰om
->
num_ªgs
)

	)

267 
i
;

269 i‡(
to
 =
‰om
) ;

271 i‡(
to
->
Æloˇãd
 == 0) {

272 i‡(
‰om
->
num_ªgs
 > 0) {

273 
to
->
beg
 = (* )
	`xmÆloc
(
RREGC_SIZE
);

274 
to
->
íd
 = (* )
	`xmÆloc
(
RREGC_SIZE
);

275 
to
->
Æloˇãd
 = 
‰om
->
num_ªgs
;

278 i‡(
to
->
Æloˇãd
 < 
‰om
->
num_ªgs
) {

279 
to
->
beg
 = (* )
	`xªÆloc
—o->beg, 
RREGC_SIZE
);

280 
to
->
íd
 = (* )
	`xªÆloc
—o->íd, 
RREGC_SIZE
);

281 
to
->
Æloˇãd
 = 
‰om
->
num_ªgs
;

284 
i
 = 0; i < 
‰om
->
num_ªgs
; i++) {

285 
to
->
beg
[
i
] = 
‰om
->beg[i];

286 
to
->
íd
[
i
] = 
‰om
->end[i];

288 
to
->
num_ªgs
 = 
‰om
->num_regs;

290 #ifde‡
USE_CAPTURE_HISTORY


291 
	`hi°‹y_roŸ_‰ì
(
to
);

293 i‡(
	`IS_NOT_NULL
(
‰om
->
hi°‹y_roŸ
)) {

294 
to
->
hi°‹y_roŸ
 = 
	`hi°‹y_åì_˛⁄e
(
‰om
->history_root);

297 
	}
}

301 
	#INVALID_STACK_INDEX
 -1

	)

305 
	#STK_ALT
 0x0001

	)

306 
	#STK_LOOK_BEHIND_NOT
 0x0002

	)

307 
	#STK_POS_NOT
 0x0003

	)

309 
	#STK_MEM_START
 0x0100

	)

310 
	#STK_MEM_END
 0x8200

	)

311 
	#STK_REPEAT_INC
 0x0300

	)

312 
	#STK_STATE_CHECK_MARK
 0x1000

	)

314 
	#STK_NULL_CHECK_START
 0x3000

	)

315 
	#STK_NULL_CHECK_END
 0x5000

	)

316 
	#STK_MEM_END_MARK
 0x8400

	)

317 
	#STK_POS
 0x0500

	)

318 
	#STK_STOP_BT
 0x0600

	)

319 
	#STK_REPEAT
 0x0700

	)

320 
	#STK_CALL_FRAME
 0x0800

	)

321 
	#STK_RETURN
 0x0900

	)

322 
	#STK_VOID
 0x0a00

	)

325 
	#STK_MASK_POP_USED
 0x00ff

	)

326 
	#STK_MASK_TO_VOID_TARGET
 0x10ff

	)

327 
	#STK_MASK_MEM_END_OR_MARK
 0x8000

	)

329 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


330 
	#MATCH_ARG_INIT
(
mß
, 
ªg
, 
¨g_›ti⁄
, 
¨g_ªgi⁄
, 
¨g_°¨t
) do {\

331 (
mß
).
°ack_p
 = (* )0;\

332 (
mß
).
›ti⁄s
 = (
¨g_›ti⁄
);\

333 (
mß
).
ªgi⁄
 = (
¨g_ªgi⁄
);\

334 (
mß
).
°¨t
 = (
¨g_°¨t
);\

335 (
mß
).
be°_Àn
 = 
ONIG_MISMATCH
;\

336 (
mß
).
±r_num
 = (
ªg
)->
num_ª≥©
 + (ªg)->
num_mem
 * 2;\

337 } 0)

	)

339 
	#MATCH_ARG_INIT
(
mß
, 
ªg
, 
¨g_›ti⁄
, 
¨g_ªgi⁄
, 
¨g_°¨t
) do {\

340 (
mß
).
°ack_p
 = (* )0;\

341 (
mß
).
›ti⁄s
 = (
¨g_›ti⁄
);\

342 (
mß
).
ªgi⁄
 = (
¨g_ªgi⁄
);\

343 (
mß
).
°¨t
 = (
¨g_°¨t
);\

344 (
mß
).
±r_num
 = (
ªg
)->
num_ª≥©
 + (ªg)->
num_mem
 * 2;\

345 } 0)

	)

348 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


350 
	#STATE_CHECK_BUFF_MALLOC_THRESHOLD_SIZE
 16

	)

352 
	#STATE_CHECK_BUFF_INIT
(
mß
, 
°r_Àn
, 
off£t
, 
°©e_num
) do { \

353 i‡((
°©e_num
Ë> 0 && 
°r_Àn
 >
STATE_CHECK_STRING_THRESHOLD_LEN
) {\

354 
size
 = ()(((
°r_Àn
Ë+ 1Ë* (
°©e_num
) + 7) >> 3;\

355 
off£t
 = ((off£tË* (
°©e_num
)) >> 3;\

356 i‡(
size
 > 0 && 
off£t
 < sizê&& sizê< 
STATE_CHECK_BUFF_MAX_SIZE
) {\

357 i‡(
size
 >
STATE_CHECK_BUFF_MALLOC_THRESHOLD_SIZE
) \

358 (
mß
).
°©e_check_buff
 = (* )
	`xmÆloc
(
size
);\

360 (
mß
).
°©e_check_buff
 = (* )
	`xÆloˇ
(
size
);\

361 
	`xmem£t
(((* )((
mß
).
°©e_check_buff
)+(
off£t
)), 0, \

362 (
size_t
 )(
size
 - (
off£t
))); \

363 (
mß
).
°©e_check_buff_size
 = 
size
;\

366 (
mß
).
°©e_check_buff
 = (* )0;\

367 (
mß
).
°©e_check_buff_size
 = 0;\

371 (
mß
).
°©e_check_buff
 = (* )0;\

372 (
mß
).
°©e_check_buff_size
 = 0;\

374 } 0)

	)

376 
	#MATCH_ARG_FREE
(
mß
) do {\

377 i‡((
mß
).
°ack_p
Ë
	`x‰ì
((msa).stack_p);\

378 i‡((
mß
).
°©e_check_buff_size
 >
STATE_CHECK_BUFF_MALLOC_THRESHOLD_SIZE
) { \

379 i‡((
mß
).
°©e_check_buff
Ë
	`x‰ì
((msa).state_check_buff);\

381 } 0)

	)

383 
	#STATE_CHECK_BUFF_INIT
(
mß
, 
°r_Àn
, 
off£t
, 
°©e_num
)

	)

384 
	#MATCH_ARG_FREE
(
mß
Ëi‡((mß).
°ack_p
Ë
	`x‰ì
((mß).°ack_p)

	)

388 
	#ALLOCA_PTR_NUM_LIMIT
 50

	)

390 
	#STACK_INIT
(
°ack_num
) do {\

391 i‡(
mß
->
°ack_p
) {\

392 
is_Æloˇ
 = 0;\

393 
Æloc_ba£
 = 
mß
->
°ack_p
;\

394 
°k_ba£
 = (
OnigSèckTy≥
* )(
Æloc_ba£
\

395 + ((
OnigSèckIndex
Ë* 
mß
->
±r_num
));\

396 
°k
 = 
°k_ba£
;\

397 
°k_íd
 = 
°k_ba£
 + 
mß
->
°ack_n
;\

399 i‡(
mß
->
±r_num
 > 
ALLOCA_PTR_NUM_LIMIT
) {\

400 
is_Æloˇ
 = 0;\

401 
Æloc_ba£
 = (* )
	`xmÆloc
((
OnigSèckIndex
Ë* 
mß
->
±r_num
\

402 + (
OnigSèckTy≥
Ë* (
°ack_num
));\

403 
°k_ba£
 = (
OnigSèckTy≥
* )(
Æloc_ba£
\

404 + ((
OnigSèckIndex
Ë* 
mß
->
±r_num
));\

405 
°k
 = 
°k_ba£
;\

406 
°k_íd
 = 
°k_ba£
 + (
°ack_num
);\

409 
is_Æloˇ
 = 1;\

410 
Æloc_ba£
 = (* )
	`xÆloˇ
((
OnigSèckIndex
Ë* 
mß
->
±r_num
\

411 + (
OnigSèckTy≥
Ë* (
°ack_num
));\

412 
°k_ba£
 = (
OnigSèckTy≥
* )(
Æloc_ba£
\

413 + ((
OnigSèckIndex
Ë* 
mß
->
±r_num
));\

414 
°k
 = 
°k_ba£
;\

415 
°k_íd
 = 
°k_ba£
 + (
°ack_num
);\

417 } 0);

	)

420 
	#STACK_SAVE
 do{\

421 
mß
->
°ack_n
 = 
°k_íd
 - 
°k_ba£
;\

422 i‡(
is_Æloˇ
 != 0) {\

423 
size_t
 
size
 = (
OnigSèckIndex
Ë* 
mß
->
±r_num
 \

424 + (
OnigSèckTy≥
Ë* 
mß
->
°ack_n
;\

425 
mß
->
°ack_p
 = 
	`xmÆloc
(
size
);\

426 
	`xmem˝y
(
mß
->
°ack_p
, 
Æloc_ba£
, 
size
);\

429 
mß
->
°ack_p
 = 
Æloc_ba£
;\

431 } 0)

	)

433 
	#UPDATE_FOR_STACK_REALLOC
 do{\

434 
ª≥©_°k
 = (
OnigSèckIndex
* )
Æloc_ba£
;\

435 
mem_°¨t_°k
 = (
OnigSèckIndex
* )(
ª≥©_°k
 + 
ªg
->
num_ª≥©
);\

436 
mem_íd_°k
 = 
mem_°¨t_°k
 + 
num_mem
;\

437 
mem_°¨t_°k
--; \

438 
mem_íd_°k
--; \

439 } 0)

	)

441 
	gM©chSèckLimôSize
 = 
DEFAULT_MATCH_STACK_LIMIT_SIZE
;

444 
	$⁄ig_gë_m©ch_°ack_limô_size
()

446  
M©chSèckLimôSize
;

447 
	}
}

450 
	$⁄ig_£t_m©ch_°ack_limô_size
(
size
)

452 
M©chSèckLimôSize
 = 
size
;

454 
	}
}

457 
	$°ack_doubÀ
(
is_Æloˇ
, ** 
¨g_Æloc_ba£
,

458 
OnigSèckTy≥
** 
¨g_°k_ba£
,

459 
OnigSèckTy≥
** 
¨g_°k_íd
, OnigSèckTy≥** 
¨g_°k
,

460 
OnigM©chArg
* 
mß
)

462 
n
;

463 
u£d
;

464 
size_t
 
size
;

465 
size_t
 
√w_size
;

466 * 
Æloc_ba£
;

467 * 
√w_Æloc_ba£
;

468 
OnigSèckTy≥
 *
°k_ba£
, *
°k_íd
, *
°k
;

470 
Æloc_ba£
 = *
¨g_Æloc_ba£
;

471 
°k_ba£
 = *
¨g_°k_ba£
;

472 
°k_íd
 = *
¨g_°k_íd
;

473 
°k
 = *
¨g_°k
;

475 
n
 = 
°k_íd
 - 
°k_ba£
;

476 
size
 = (
OnigSèckIndex
Ë* 
mß
->
±r_num
 + (
OnigSèckTy≥
Ë* 
n
;

477 
n
 *= 2;

478 
√w_size
 = (
OnigSèckIndex
Ë* 
mß
->
±r_num
 + (
OnigSèckTy≥
Ë* 
n
;

479 i‡(
is_Æloˇ
 != 0) {

480 
√w_Æloc_ba£
 = (* )
	`xmÆloc
(
√w_size
);

481 i‡(
	`IS_NULL
(
√w_Æloc_ba£
)) {

482 
STACK_SAVE
;

483  
ONIGERR_MEMORY
;

485 
	`xmem˝y
(
√w_Æloc_ba£
, 
Æloc_ba£
, 
size
);

488 i‡(
M©chSèckLimôSize
 !0 && 
n
 > MatchStackLimitSize) {

489 i‡(()(
°k_íd
 - 
°k_ba£
Ë=
M©chSèckLimôSize
)

490  
ONIGERR_MATCH_STACK_LIMIT_OVER
;

492 
n
 = 
M©chSèckLimôSize
;

494 
√w_Æloc_ba£
 = (* )
	`xªÆloc
(
Æloc_ba£
, 
√w_size
);

495 i‡(
	`IS_NULL
(
√w_Æloc_ba£
)) {

496 
STACK_SAVE
;

497  
ONIGERR_MEMORY
;

501 
Æloc_ba£
 = 
√w_Æloc_ba£
;

502 
u£d
 = 
°k
 - 
°k_ba£
;

503 *
¨g_Æloc_ba£
 = 
Æloc_ba£
;

504 *
¨g_°k_ba£
 = (
OnigSèckTy≥
* )(
Æloc_ba£


505 + ((
OnigSèckIndex
Ë* 
mß
->
±r_num
));

506 *
¨g_°k
 = *
¨g_°k_ba£
 + 
u£d
;

507 *
¨g_°k_íd
 = *
¨g_°k_ba£
 + 
n
;

509 
	}
}

511 
	#STACK_ENSURE
(
n
) do {\

512 i‡(
°k_íd
 - 
°k
 < (
n
)) {\

513 
r
 = 
	`°ack_doubÀ
(
is_Æloˇ
, &
Æloc_ba£
, &
°k_ba£
, &
°k_íd
, &
°k
,\

514 
mß
);\

515 i‡(
r
 !0Ë{ 
STACK_SAVE
; Ñ; } \

516 
is_Æloˇ
 = 0;\

517 
UPDATE_FOR_STACK_REALLOC
;\

519 } 0)

	)

521 
	#STACK_AT
(
ödex
Ë(
°k_ba£
 + (ödex))

	)

522 
	#GET_STACK_INDEX
(
°k
Ë((°kË- 
°k_ba£
)

	)

524 
	#STACK_PUSH_TYPE
(
°ack_ty≥
) do {\

525 
	`STACK_ENSURE
(1);\

526 
°k
->
ty≥
 = (
°ack_ty≥
);\

527 
STACK_INC
;\

528 } 0)

	)

530 
	#IS_TO_VOID_TARGET
(
°k
Ë(((°k)->
ty≥
 & 
STK_MASK_TO_VOID_TARGET
Ë!0)

	)

532 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


533 
	#STATE_CHECK_POS
(
s
,
¢um
) \

534 (((
s
Ë- 
°r
Ë* 
num_comb_exp_check
 + ((
¢um
Ë- 1))

	)

535 
	#STATE_CHECK_VAL
(
v
,
¢um
) do {\

536 i‡(
°©e_check_buff
 !
NULL
) {\

537 
x
 = 
	`STATE_CHECK_POS
(
s
,
¢um
);\

538 (
v
Ë
°©e_check_buff
[
x
/8] & (1<<(x%8));\

540 (
v
) = 0;\

541 } 0)

	)

544 
	#ELSE_IF_STATE_CHECK_MARK
(
°k
) \

545 i‡((
°k
)->
ty≥
 =
STK_STATE_CHECK_MARK
) { \

546 
x
 = 
	`STATE_CHECK_POS
(
°k
->
u
.
°©e
.
p°r
, stk->u.°©e.
°©e_check
);\

547 
°©e_check_buff
[
x
/8] |= (1<<(x%8)); \

548 }

	)

550 
	#STACK_PUSH
(
°ack_ty≥
,
∑t
,
s
,
•ªv
) do {\

551 
	`STACK_ENSURE
(1);\

552 
°k
->
ty≥
 = (
°ack_ty≥
);\

553 
°k
->
u
.
°©e
.
pcode
 = (
∑t
);\

554 
°k
->
u
.
°©e
.
p°r
 = (
s
);\

555 
°k
->
u
.
°©e
.
p°r_¥ev
 = (
•ªv
);\

556 
°k
->
u
.
°©e
.
°©e_check
 = 0;\

557 
STACK_INC
;\

558 } 0)

	)

560 
	#STACK_PUSH_ENSURED
(
°ack_ty≥
,
∑t
) do {\

561 
°k
->
ty≥
 = (
°ack_ty≥
);\

562 
°k
->
u
.
°©e
.
pcode
 = (
∑t
);\

563 
°k
->
u
.
°©e
.
°©e_check
 = 0;\

564 
STACK_INC
;\

565 } 0)

	)

567 
	#STACK_PUSH_ALT_WITH_STATE_CHECK
(
∑t
,
s
,
•ªv
,
¢um
) do {\

568 
	`STACK_ENSURE
(1);\

569 
°k
->
ty≥
 = 
STK_ALT
;\

570 
°k
->
u
.
°©e
.
pcode
 = (
∑t
);\

571 
°k
->
u
.
°©e
.
p°r
 = (
s
);\

572 
°k
->
u
.
°©e
.
p°r_¥ev
 = (
•ªv
);\

573 
°k
->
u
.
°©e
.
°©e_check
 = ((
°©e_check_buff
 !
NULL
Ë? (
¢um
) : 0);\

574 
STACK_INC
;\

575 } 0)

	)

577 
	#STACK_PUSH_STATE_CHECK
(
s
,
¢um
) do {\

578 i‡(
°©e_check_buff
 !
NULL
) {\

579 
	`STACK_ENSURE
(1);\

580 
°k
->
ty≥
 = 
STK_STATE_CHECK_MARK
;\

581 
°k
->
u
.
°©e
.
p°r
 = (
s
);\

582 
°k
->
u
.
°©e
.
°©e_check
 = (
¢um
);\

583 
STACK_INC
;\

585 } 0)

	)

589 
	#ELSE_IF_STATE_CHECK_MARK
(
°k
)

	)

591 
	#STACK_PUSH
(
°ack_ty≥
,
∑t
,
s
,
•ªv
) do {\

592 
	`STACK_ENSURE
(1);\

593 
°k
->
ty≥
 = (
°ack_ty≥
);\

594 
°k
->
u
.
°©e
.
pcode
 = (
∑t
);\

595 
°k
->
u
.
°©e
.
p°r
 = (
s
);\

596 
°k
->
u
.
°©e
.
p°r_¥ev
 = (
•ªv
);\

597 
STACK_INC
;\

598 } 0)

	)

600 
	#STACK_PUSH_ENSURED
(
°ack_ty≥
,
∑t
) do {\

601 
°k
->
ty≥
 = (
°ack_ty≥
);\

602 
°k
->
u
.
°©e
.
pcode
 = (
∑t
);\

603 
STACK_INC
;\

604 } 0)

	)

607 
	#STACK_PUSH_ALT
(
∑t
,
s
,
•ªv
Ë
	`STACK_PUSH
(
STK_ALT
,∑t,s,•ªv)

	)

608 
	#STACK_PUSH_POS
(
s
,
•ªv
Ë
	`STACK_PUSH
(
STK_POS
,
NULL_UCHARP
,s,•ªv)

	)

609 
	#STACK_PUSH_POS_NOT
(
∑t
,
s
,
•ªv
Ë
	`STACK_PUSH
(
STK_POS_NOT
,∑t,s,•ªv)

	)

610 
	#STACK_PUSH_STOP_BT
 
	`STACK_PUSH_TYPE
(
STK_STOP_BT
)

	)

611 
	#STACK_PUSH_LOOK_BEHIND_NOT
(
∑t
,
s
,
•ªv
) \

612 
	`STACK_PUSH
(
STK_LOOK_BEHIND_NOT
,
∑t
,
s
,
•ªv
)

	)

614 
	#STACK_PUSH_REPEAT
(
id
, 
∑t
) do {\

615 
	`STACK_ENSURE
(1);\

616 
°k
->
ty≥
 = 
STK_REPEAT
;\

617 
°k
->
u
.
ª≥©
.
num
 = (
id
);\

618 
°k
->
u
.
ª≥©
.
pcode
 = (
∑t
);\

619 
°k
->
u
.
ª≥©
.
cou¡
 = 0;\

620 
STACK_INC
;\

621 } 0)

	)

623 
	#STACK_PUSH_REPEAT_INC
(
södex
) do {\

624 
	`STACK_ENSURE
(1);\

625 
°k
->
ty≥
 = 
STK_REPEAT_INC
;\

626 
°k
->
u
.
ª≥©_öc
.
si
 = (
södex
);\

627 
STACK_INC
;\

628 } 0)

	)

630 
	#STACK_PUSH_MEM_START
(
mnum
, 
s
) do {\

631 
	`STACK_ENSURE
(1);\

632 
°k
->
ty≥
 = 
STK_MEM_START
;\

633 
°k
->
u
.
mem
.
num
 = (
mnum
);\

634 
°k
->
u
.
mem
.
p°r
 = (
s
);\

635 
°k
->
u
.
mem
.
°¨t
 = 
mem_°¨t_°k
[
mnum
];\

636 
°k
->
u
.
mem
.
íd
 = 
mem_íd_°k
[
mnum
];\

637 
mem_°¨t_°k
[
mnum
] = 
	`GET_STACK_INDEX
(
°k
);\

638 
mem_íd_°k
[
mnum
] = 
INVALID_STACK_INDEX
;\

639 
STACK_INC
;\

640 } 0)

	)

642 
	#STACK_PUSH_MEM_END
(
mnum
, 
s
) do {\

643 
	`STACK_ENSURE
(1);\

644 
°k
->
ty≥
 = 
STK_MEM_END
;\

645 
°k
->
u
.
mem
.
num
 = (
mnum
);\

646 
°k
->
u
.
mem
.
p°r
 = (
s
);\

647 
°k
->
u
.
mem
.
°¨t
 = 
mem_°¨t_°k
[
mnum
];\

648 
°k
->
u
.
mem
.
íd
 = 
mem_íd_°k
[
mnum
];\

649 
mem_íd_°k
[
mnum
] = 
	`GET_STACK_INDEX
(
°k
);\

650 
STACK_INC
;\

651 } 0)

	)

653 
	#STACK_PUSH_MEM_END_MARK
(
mnum
) do {\

654 
	`STACK_ENSURE
(1);\

655 
°k
->
ty≥
 = 
STK_MEM_END_MARK
;\

656 
°k
->
u
.
mem
.
num
 = (
mnum
);\

657 
STACK_INC
;\

658 } 0)

	)

660 
	#STACK_GET_MEM_START
(
mnum
, 
k
) do {\

661 
Àvñ
 = 0;\

662 
k
 = 
°k
;\

663 
k
 > 
°k_ba£
) {\

664 
k
--;\

665 i‡((
k
->
ty≥
 & 
STK_MASK_MEM_END_OR_MARK
) != 0 \

666 && 
k
->
u
.
mem
.
num
 =(
mnum
)) {\

667 
Àvñ
++;\

669 i‡(
k
->
ty≥
 =
STK_MEM_START
 && k->
u
.
mem
.
num
 =(
mnum
)) {\

670 i‡(
Àvñ
 == 0) ;\

671 
Àvñ
--;\

674 } 0)

	)

676 
	#STACK_GET_MEM_RANGE
(
k
, 
mnum
, 
°¨t
, 
íd
) do {\

677 
Àvñ
 = 0;\

678 
k
 < 
°k
) {\

679 i‡(
k
->
ty≥
 =
STK_MEM_START
 && k->
u
.
mem
.
num
 =(
mnum
)) {\

680 i‡(
Àvñ
 =0Ë(
°¨t
Ë
k
->
u
.
mem
.
p°r
;\

681 
Àvñ
++;\

683 i‡(
k
->
ty≥
 =
STK_MEM_END
 && k->
u
.
mem
.
num
 =(
mnum
)) {\

684 
Àvñ
--;\

685 i‡(
Àvñ
 == 0) {\

686 (
íd
Ë
k
->
u
.
mem
.
p°r
;\

690 
k
++;\

692 } 0)

	)

694 
	#STACK_PUSH_NULL_CHECK_START
(
˙um
, 
s
) do {\

695 
	`STACK_ENSURE
(1);\

696 
°k
->
ty≥
 = 
STK_NULL_CHECK_START
;\

697 
°k
->
u
.
nuŒ_check
.
num
 = (
˙um
);\

698 
°k
->
u
.
nuŒ_check
.
p°r
 = (
s
);\

699 
STACK_INC
;\

700 } 0)

	)

702 
	#STACK_PUSH_NULL_CHECK_END
(
˙um
) do {\

703 
	`STACK_ENSURE
(1);\

704 
°k
->
ty≥
 = 
STK_NULL_CHECK_END
;\

705 
°k
->
u
.
nuŒ_check
.
num
 = (
˙um
);\

706 
STACK_INC
;\

707 } 0)

	)

709 
	#STACK_PUSH_CALL_FRAME
(
∑t
) do {\

710 
	`STACK_ENSURE
(1);\

711 
°k
->
ty≥
 = 
STK_CALL_FRAME
;\

712 
°k
->
u
.
ˇŒ_‰ame
.
ªt_addr
 = (
∑t
);\

713 
STACK_INC
;\

714 } 0)

	)

716 
	#STACK_PUSH_RETURN
 do {\

717 
	`STACK_ENSURE
(1);\

718 
°k
->
ty≥
 = 
STK_RETURN
;\

719 
STACK_INC
;\

720 } 0)

	)

723 #ifde‡
ONIG_DEBUG


724 
	#STACK_BASE_CHECK
(
p
, 
©
) \

725 i‡((
p
Ë< 
°k_ba£
) {\

726 
	`Ârötf
(
°dîr
, "© %s\n", 
©
);\

727 
°ack_îr‹
;\

728 }

	)

730 
	#STACK_BASE_CHECK
(
p
, 
©
)

	)

733 
	#STACK_POP_ONE
 do {\

734 
°k
--;\

735 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP_ONE"); \

736 } 0)

	)

738 
	#STACK_POP
 do {\

739 
p›_Àvñ
) {\

740 
STACK_POP_LEVEL_FREE
:\

742 
°k
--;\

743 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP"); \

744 i‡((
°k
->
ty≥
 & 
STK_MASK_POP_USED
) != 0) ;\

745 
	`ELSE_IF_STATE_CHECK_MARK
(
°k
);\

748 
STACK_POP_LEVEL_MEM_START
:\

750 
°k
--;\

751 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP 2"); \

752 i‡((
°k
->
ty≥
 & 
STK_MASK_POP_USED
) != 0) ;\

753 i‡(
°k
->
ty≥
 =
STK_MEM_START
) {\

754 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

755 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

757 
	`ELSE_IF_STATE_CHECK_MARK
(
°k
);\

762 
°k
--;\

763 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP 3"); \

764 i‡((
°k
->
ty≥
 & 
STK_MASK_POP_USED
) != 0) ;\

765 i‡(
°k
->
ty≥
 =
STK_MEM_START
) {\

766 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

767 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

769 i‡(
°k
->
ty≥
 =
STK_REPEAT_INC
) {\

770 
	`STACK_AT
(
°k
->
u
.
ª≥©_öc
.
si
)->u.
ª≥©
.
cou¡
--;\

772 i‡(
°k
->
ty≥
 =
STK_MEM_END
) {\

773 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

774 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

776 
	`ELSE_IF_STATE_CHECK_MARK
(
°k
);\

780 } 0)

	)

782 
	#STACK_POP_TIL_POS_NOT
 do {\

784 
°k
--;\

785 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP_TIL_POS_NOT"); \

786 i‡(
°k
->
ty≥
 =
STK_POS_NOT
) ;\

787 i‡(
°k
->
ty≥
 =
STK_MEM_START
) {\

788 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

789 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

791 i‡(
°k
->
ty≥
 =
STK_REPEAT_INC
) {\

792 
	`STACK_AT
(
°k
->
u
.
ª≥©_öc
.
si
)->u.
ª≥©
.
cou¡
--;\

794 i‡(
°k
->
ty≥
 =
STK_MEM_END
) {\

795 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

796 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

798 
	`ELSE_IF_STATE_CHECK_MARK
(
°k
);\

800 } 0)

	)

802 
	#STACK_POP_TIL_LOOK_BEHIND_NOT
 do {\

804 
°k
--;\

805 
	`STACK_BASE_CHECK
(
°k
, "STACK_POP_TIL_LOOK_BEHIND_NOT"); \

806 i‡(
°k
->
ty≥
 =
STK_LOOK_BEHIND_NOT
) ;\

807 i‡(
°k
->
ty≥
 =
STK_MEM_START
) {\

808 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

809 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

811 i‡(
°k
->
ty≥
 =
STK_REPEAT_INC
) {\

812 
	`STACK_AT
(
°k
->
u
.
ª≥©_öc
.
si
)->u.
ª≥©
.
cou¡
--;\

814 i‡(
°k
->
ty≥
 =
STK_MEM_END
) {\

815 
mem_°¨t_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
°¨t
;\

816 
mem_íd_°k
[
°k
->
u
.
mem
.
num
] = stk->u.mem.
íd
;\

818 
	`ELSE_IF_STATE_CHECK_MARK
(
°k
);\

820 } 0)

	)

822 
	#STACK_POS_END
(
k
) do {\

823 
k
 = 
°k
;\

825 
k
--;\

826 
	`STACK_BASE_CHECK
(
k
, "STACK_POS_END"); \

827 i‡(
	`IS_TO_VOID_TARGET
(
k
)) {\

828 
k
->
ty≥
 = 
STK_VOID
;\

830 i‡(
k
->
ty≥
 =
STK_POS
) {\

831 
k
->
ty≥
 = 
STK_VOID
;\

835 } 0)

	)

837 
	#STACK_STOP_BT_END
 do {\

838 
OnigSèckTy≥
 *
k
 = 
°k
;\

840 
k
--;\

841 
	`STACK_BASE_CHECK
(
k
, "STACK_STOP_BT_END"); \

842 i‡(
	`IS_TO_VOID_TARGET
(
k
)) {\

843 
k
->
ty≥
 = 
STK_VOID
;\

845 i‡(
k
->
ty≥
 =
STK_STOP_BT
) {\

846 
k
->
ty≥
 = 
STK_VOID
;\

850 } 0)

	)

852 
	#STACK_NULL_CHECK
(
i¢uŒ
,
id
,
s
) do {\

853 
OnigSèckTy≥
* 
k
 = 
°k
;\

855 
k
--;\

856 
	`STACK_BASE_CHECK
(
k
, "STACK_NULL_CHECK"); \

857 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_START
) {\

858 i‡(
k
->
u
.
nuŒ_check
.
num
 =(
id
)) {\

859 (
i¢uŒ
Ë(
k
->
u
.
nuŒ_check
.
p°r
 =(
s
));\

864 } 0)

	)

866 
	#STACK_NULL_CHECK_REC
(
i¢uŒ
,
id
,
s
) do {\

867 
Àvñ
 = 0;\

868 
OnigSèckTy≥
* 
k
 = 
°k
;\

870 
k
--;\

871 
	`STACK_BASE_CHECK
(
k
, "STACK_NULL_CHECK_REC"); \

872 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_START
) {\

873 i‡(
k
->
u
.
nuŒ_check
.
num
 =(
id
)) {\

874 i‡(
Àvñ
 == 0) {\

875 (
i¢uŒ
Ë(
k
->
u
.
nuŒ_check
.
p°r
 =(
s
));\

878 
Àvñ
--;\

881 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_END
) {\

882 
Àvñ
++;\

885 } 0)

	)

887 
	#STACK_NULL_CHECK_MEMST
(
i¢uŒ
,
id
,
s
,
ªg
) do {\

888 
OnigSèckTy≥
* 
k
 = 
°k
;\

890 
k
--;\

891 
	`STACK_BASE_CHECK
(
k
, "STACK_NULL_CHECK_MEMST"); \

892 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_START
) {\

893 i‡(
k
->
u
.
nuŒ_check
.
num
 =(
id
)) {\

894 i‡(
k
->
u
.
nuŒ_check
.
p°r
 !(
s
)) {\

895 (
i¢uŒ
) = 0;\

899 
UCh¨
* 
ídp
;\

900 (
i¢uŒ
) = 1;\

901 
k
 < 
°k
) {\

902 i‡(
k
->
ty≥
 =
STK_MEM_START
) {\

903 i‡(
k
->
u
.
mem
.
íd
 =
INVALID_STACK_INDEX
) {\

904 (
i¢uŒ
) = 0; ;\

906 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
k
->
u
.
mem
.
num
))\

907 
ídp
 = 
	`STACK_AT
(
k
->
u
.
mem
.
íd
)->u.mem.
p°r
;\

909 
ídp
 = (
UCh¨
* )
k
->
u
.
mem
.
íd
;\

910 i‡(
	`STACK_AT
(
k
->
u
.
mem
.
°¨t
)->u.mem.
p°r
 !
ídp
) {\

911 (
i¢uŒ
) = 0; ;\

913 i‡(
ídp
 !
s
) {\

914 (
i¢uŒ
) = -1; \

917 
k
++;\

924 } 0)

	)

926 
	#STACK_NULL_CHECK_MEMST_REC
(
i¢uŒ
,
id
,
s
,
ªg
) do {\

927 
Àvñ
 = 0;\

928 
OnigSèckTy≥
* 
k
 = 
°k
;\

930 
k
--;\

931 
	`STACK_BASE_CHECK
(
k
, "STACK_NULL_CHECK_MEMST_REC"); \

932 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_START
) {\

933 i‡(
k
->
u
.
nuŒ_check
.
num
 =(
id
)) {\

934 i‡(
Àvñ
 == 0) {\

935 i‡(
k
->
u
.
nuŒ_check
.
p°r
 !(
s
)) {\

936 (
i¢uŒ
) = 0;\

940 
UCh¨
* 
ídp
;\

941 (
i¢uŒ
) = 1;\

942 
k
 < 
°k
) {\

943 i‡(
k
->
ty≥
 =
STK_MEM_START
) {\

944 i‡(
k
->
u
.
mem
.
íd
 =
INVALID_STACK_INDEX
) {\

945 (
i¢uŒ
) = 0; ;\

947 i‡(
	`BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
k
->
u
.
mem
.
num
))\

948 
ídp
 = 
	`STACK_AT
(
k
->
u
.
mem
.
íd
)->u.mem.
p°r
;\

950 
ídp
 = (
UCh¨
* )
k
->
u
.
mem
.
íd
;\

951 i‡(
	`STACK_AT
(
k
->
u
.
mem
.
°¨t
)->u.mem.
p°r
 !
ídp
) {\

952 (
i¢uŒ
) = 0; ;\

954 i‡(
ídp
 !
s
) {\

955 (
i¢uŒ
) = -1; \

958 
k
++;\

964 
Àvñ
--;\

968 i‡(
k
->
ty≥
 =
STK_NULL_CHECK_END
) {\

969 i‡(
k
->
u
.
nuŒ_check
.
num
 =(
id
)Ë
Àvñ
++;\

972 } 0)

	)

974 
	#STACK_GET_REPEAT
(
id
, 
k
) do {\

975 
Àvñ
 = 0;\

976 
k
 = 
°k
;\

978 
k
--;\

979 
	`STACK_BASE_CHECK
(
k
, "STACK_GET_REPEAT"); \

980 i‡(
k
->
ty≥
 =
STK_REPEAT
) {\

981 i‡(
Àvñ
 == 0) {\

982 i‡(
k
->
u
.
ª≥©
.
num
 =(
id
)) {\

987 i‡(
k
->
ty≥
 =
STK_CALL_FRAME
Ë
Àvñ
--;\

988 i‡(
k
->
ty≥
 =
STK_RETURN
Ë
Àvñ
++;\

990 } 0)

	)

992 
	#STACK_RETURN
(
addr
) do {\

993 
Àvñ
 = 0;\

994 
OnigSèckTy≥
* 
k
 = 
°k
;\

996 
k
--;\

997 
	`STACK_BASE_CHECK
(
k
, "STACK_RETURN"); \

998 i‡(
k
->
ty≥
 =
STK_CALL_FRAME
) {\

999 i‡(
Àvñ
 == 0) {\

1000 (
addr
Ë
k
->
u
.
ˇŒ_‰ame
.
ªt_addr
;\

1003 
Àvñ
--;\

1005 i‡(
k
->
ty≥
 =
STK_RETURN
)\

1006 
Àvñ
++;\

1008 } 0)

	)

1011 
	#STRING_CMP
(
s1
,
s2
,
Àn
) do {\

1012 
Àn
-- > 0) {\

1013 i‡(*
s1
++ !*
s2
++Ë
Áû
;\

1015 } 0)

	)

1017 
	#STRING_CMP_IC
(
ˇ£_fﬁd_Êag
,
s1
,
ps2
,
Àn
) do {\

1018 i‡(
	`°rög_cmp_ic
(
ícode
, 
ˇ£_fﬁd_Êag
, 
s1
, 
ps2
, 
Àn
) == 0) \

1019 
Áû
; \

1020 } 0)

	)

1022 
	$°rög_cmp_ic
(
OnigEncodög
 
íc
, 
ˇ£_fﬁd_Êag
,

1023 
UCh¨
* 
s1
, UCh¨** 
ps2
, 
mbÀn
)

1025 
UCh¨
 
buf1
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

1026 
UCh¨
 
buf2
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

1027 
UCh¨
 *
p1
, *
p2
, *
íd1
, *
s2
, *
íd2
;

1028 
Àn1
, 
Àn2
;

1030 
s2
 = *
ps2
;

1031 
íd1
 = 
s1
 + 
mbÀn
;

1032 
íd2
 = 
s2
 + 
mbÀn
;

1033 
s1
 < 
íd1
) {

1034 
Àn1
 = 
	`ONIGENC_MBC_CASE_FOLD
(
íc
, 
ˇ£_fﬁd_Êag
, &
s1
, 
íd1
, 
buf1
);

1035 
Àn2
 = 
	`ONIGENC_MBC_CASE_FOLD
(
íc
, 
ˇ£_fﬁd_Êag
, &
s2
, 
íd2
, 
buf2
);

1036 i‡(
Àn1
 !
Àn2
)  0;

1037 
p1
 = 
buf1
;

1038 
p2
 = 
buf2
;

1039 
Àn1
-- > 0) {

1040 i‡(*
p1
 !*
p2
)  0;

1041 
p1
++;

1042 
p2
++;

1046 *
ps2
 = 
s2
;

1048 
	}
}

1050 
	#STRING_CMP_VALUE
(
s1
,
s2
,
Àn
,
is_Áû
) do {\

1051 
is_Áû
 = 0;\

1052 
Àn
-- > 0) {\

1053 i‡(*
s1
++ !*
s2
++) {\

1054 
is_Áû
 = 1; ;\

1057 } 0)

	)

1059 
	#STRING_CMP_VALUE_IC
(
ˇ£_fﬁd_Êag
,
s1
,
ps2
,
Àn
,
is_Áû
) do {\

1060 i‡(
	`°rög_cmp_ic
(
ícode
, 
ˇ£_fﬁd_Êag
, 
s1
, 
ps2
, 
Àn
) == 0) \

1061 
is_Áû
 = 1; \

1063 
is_Áû
 = 0; \

1064 } 0)

	)

1067 
	#IS_EMPTY_STR
 (
°r
 =
íd
)

	)

1068 
	#ON_STR_BEGIN
(
s
Ë((sË=
°r
)

	)

1069 
	#ON_STR_END
(
s
Ë((sË=
íd
)

	)

1070 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


1071 
	#DATA_ENSURE_CHECK1
 (
s
 < 
right_ønge
)

	)

1072 
	#DATA_ENSURE_CHECK
(
n
Ë(
s
 + (nË<
right_ønge
)

	)

1073 
	#DATA_ENSURE
(
n
Ëi‡(
s
 + (nË> 
right_ønge
Ë
Áû


	)

1075 
	#DATA_ENSURE_CHECK1
 (
s
 < 
íd
)

	)

1076 
	#DATA_ENSURE_CHECK
(
n
Ë(
s
 + (nË<
íd
)

	)

1077 
	#DATA_ENSURE
(
n
Ëi‡(
s
 + (nË> 
íd
Ë
Áû


	)

1081 #ifde‡
USE_CAPTURE_HISTORY


1083 
	$make_ˇ±uª_hi°‹y_åì
(
OnigC≠tuªTªeNode
* 
node
, 
OnigSèckTy≥
** 
kp
,

1084 
OnigSèckTy≥
* 
°k_t›
, 
UCh¨
* 
°r
, 
ªgex_t
* 
ªg
)

1086 
n
, 
r
;

1087 
OnigC≠tuªTªeNode
* 
chûd
;

1088 
OnigSèckTy≥
* 
k
 = *
kp
;

1090 
k
 < 
°k_t›
) {

1091 i‡(
k
->
ty≥
 =
STK_MEM_START
) {

1092 
n
 = 
k
->
u
.
mem
.
num
;

1093 i‡(
n
 <
ONIG_MAX_CAPTURE_HISTORY_GROUP
 &&

1094 
	`BIT_STATUS_AT
(
ªg
->
ˇ±uª_hi°‹y
, 
n
) != 0) {

1095 
chûd
 = 
	`hi°‹y_node_√w
();

1096 
	`CHECK_NULL_RETURN_MEMERR
(
chûd
);

1097 
chûd
->
group
 = 
n
;

1098 
chûd
->
beg
 = ()(
k
->
u
.
mem
.
p°r
 - 
°r
);

1099 
r
 = 
	`hi°‹y_åì_add_chûd
(
node
, 
chûd
);

1100 i‡(
r
 != 0) Ñ;

1101 *
kp
 = (
k
 + 1);

1102 
r
 = 
	`make_ˇ±uª_hi°‹y_åì
(
chûd
, 
kp
, 
°k_t›
, 
°r
, 
ªg
);

1103 i‡(
r
 != 0) Ñ;

1105 
k
 = *
kp
;

1106 
chûd
->
íd
 = ()(
k
->
u
.
mem
.
p°r
 - 
°r
);

1109 i‡(
k
->
ty≥
 =
STK_MEM_END
) {

1110 i‡(
k
->
u
.
mem
.
num
 =
node
->
group
) {

1111 
node
->
íd
 = ()(
k
->
u
.
mem
.
p°r
 - 
°r
);

1112 *
kp
 = 
k
;

1116 
k
++;

1120 
	}
}

1123 #ifde‡
USE_BACKREF_WITH_LEVEL


1124 
	$mem_is_ö_memp
(
mem
, 
num
, 
UCh¨
* 
memp
)

1126 
i
;

1127 
MemNumTy≥
 
m
;

1129 
i
 = 0; i < 
num
; i++) {

1130 
	`GET_MEMNUM_INC
(
m
, 
memp
);

1131 i‡(
mem
 =()
m
)  1;

1134 
	}
}

1136 
	$backªf_m©ch_©_√°ed_Àvñ
(
ªgex_t
* 
ªg


1137 , 
OnigSèckTy≥
* 
t›
, OnigSèckTy≥* 
°k_ba£


1138 , 
ign‹e_ˇ£
, 
ˇ£_fﬁd_Êag


1139 , 
√°
, 
mem_num
, 
UCh¨
* 
memp
, UCh¨** 
s
, c⁄° UCh¨* 
£nd
)

1141 
UCh¨
 *
ss
, *
p
, *
p°¨t
, *
≥nd
 = 
NULL_UCHARP
;

1142 
Àvñ
;

1143 
OnigSèckTy≥
* 
k
;

1145 
Àvñ
 = 0;

1146 
k
 = 
t›
;

1147 
k
--;

1148 
k
 >
°k_ba£
) {

1149 i‡(
k
->
ty≥
 =
STK_CALL_FRAME
) {

1150 
Àvñ
--;

1152 i‡(
k
->
ty≥
 =
STK_RETURN
) {

1153 
Àvñ
++;

1155 i‡(
Àvñ
 =
√°
) {

1156 i‡(
k
->
ty≥
 =
STK_MEM_START
) {

1157 i‡(
	`mem_is_ö_memp
(
k
->
u
.
mem
.
num
, 
mem_num
, 
memp
)) {

1158 
p°¨t
 = 
k
->
u
.
mem
.
p°r
;

1159 i‡(
≥nd
 !
NULL_UCHARP
) {

1160 i‡(
≥nd
 - 
p°¨t
 > 
£nd
 - *
s
)  0;

1161 
p
 = 
p°¨t
;

1162 
ss
 = *
s
;

1164 i‡(
ign‹e_ˇ£
 != 0) {

1165 i‡(
	`°rög_cmp_ic
(
ªg
->
íc
, 
ˇ£_fﬁd_Êag
,

1166 
p°¨t
, &
ss
, ()(
≥nd
 -Östart)) == 0)

1170 
p
 < 
≥nd
) {

1171 i‡(*
p
++ !*
ss
++)  0;

1175 *
s
 = 
ss
;

1180 i‡(
k
->
ty≥
 =
STK_MEM_END
) {

1181 i‡(
	`mem_is_ö_memp
(
k
->
u
.
mem
.
num
, 
mem_num
, 
memp
)) {

1182 
≥nd
 = 
k
->
u
.
mem
.
p°r
;

1186 
k
--;

1190 
	}
}

1194 #ifde‡
ONIG_DEBUG_STATISTICS


1196 
	#USE_TIMEOFDAY


	)

1198 #ifde‡
USE_TIMEOFDAY


1199 #ifde‡
HAVE_SYS_TIME_H


1200 
	~<sys/time.h
>

1202 #ifde‡
HAVE_UNISTD_H


1203 
	~<uni°d.h
>

1205 
timevÆ
 
ts
, 
ã
;

1206 
	#GETTIME
(
t
Ë
	`gëtimeofday
(&—), (
timez⁄e
* )0)

	)

1207 
	#TIMEDIFF
(
ã
,
ts
Ë((—e).
tv_u£c
 - (ts).tv_usec) + \

1208 (((
ã
).
tv_£c
 - (
ts
).tv_£c)*1000000))

	)

1210 #ifde‡
HAVE_SYS_TIMES_H


1211 
	~<sys/times.h
>

1213 
tms
 
	gts
, 
	gã
;

1214 
	#GETTIME
(
t
Ë
	`times
(&—))

	)

1215 
	#TIMEDIFF
(
ã
,
ts
Ë(—e).
tms_utime
 - (ts).tms_utime)

	)

1218 
	gOpCou¡î
[256];

1219 
	gOpPªvCou¡î
[256];

1220 
	gOpTime
[256];

1221 
	gOpCuº
 = 
OP_FINISH
;

1222 
	gOpPªvT¨gë
 = 
OP_FAIL
;

1223 
	gMaxSèckDïth
 = 0;

1225 
	#MOP_IN
(
›code
) do {\

1226 i‡(
›code
 =
OpPªvT¨gë
Ë
OpPªvCou¡î
[
OpCuº
]++;\

1227 
OpCuº
 = 
›code
;\

1228 
OpCou¡î
[
›code
]++;\

1229 
	`GETTIME
(
ts
);\

1230 } 0)

	)

1232 
	#MOP_OUT
 do {\

1233 
	`GETTIME
(
ã
);\

1234 
OpTime
[
OpCuº
] +
	`TIMEDIFF
(
ã
, 
ts
);\

1235 } 0)

	)

1238 
	$⁄ig_°©i°ics_öô
()

1240 
i
;

1241 
i
 = 0; i < 256; i++) {

1242 
OpCou¡î
[
i
] = 
OpPªvCou¡î
[i] = 0; 
OpTime
[i] = 0;

1244 
MaxSèckDïth
 = 0;

1245 
	}
}

1248 
	$⁄ig_¥öt_°©i°ics
(
FILE
* 
f
)

1250 
i
;

1251 
	`Ârötf
(
f
, " countÖrevÅime\n");

1252 
i
 = 0; 
OnigOpInfo
[i].
›code
 >= 0; i++) {

1253 
	`Ârötf
(
f
, "%8d: %8d: %10ld: %s\n",

1254 
OpCou¡î
[
i
], 
OpPªvCou¡î
[i], 
OpTime
[i], 
OnigOpInfo
[i].
«me
);

1256 
	`Ârötf
(
f
, "\nmax sèck dïth: %d\n", 
MaxSèckDïth
);

1257 
	}
}

1259 
	#STACK_INC
 do {\

1260 
°k
++;\

1261 i‡(
°k
 - 
°k_ba£
 > 
MaxSèckDïth
) \

1262 
MaxSèckDïth
 = 
°k
 - 
°k_ba£
;\

1263 } 0)

	)

1266 
	#STACK_INC
 
°k
++

	)

1268 
	#MOP_IN
(
›code
)

	)

1269 
	#MOP_OUT


	)

1274 
	tªgoff_t
;

1277 
ªgoff_t
 
	mrm_so
;

1278 
ªgoff_t
 
	mrm_eo
;

1279 } 
	tposix_ªgm©ch_t
;

1284 
m©ch_©
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
,

1285 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


1286 c⁄° 
UCh¨
* 
right_ønge
,

1288 c⁄° 
UCh¨
* 
s°¨t
, UCh¨* 
•ªv
, 
OnigM©chArg
* 
mß
)

1290 
UCh¨
 
	gFöishCode
[] = { 
OP_FINISH
 };

1292 
	gi
, 
	gn
, 
	gnum_mem
, 
	gbe°_Àn
, 
	gp›_Àvñ
;

1293 
LígthTy≥
 
	géí
, 
	géí2
;

1294 
MemNumTy≥
 
	gmem
;

1295 
RñAddrTy≥
 
	gaddr
;

1296 
UCh¨
 *
	gs
, *
	gq
, *
	gsbegö
;

1297 
	gis_Æloˇ
;

1298 *
	gÆloc_ba£
;

1299 
OnigSèckTy≥
 *
	g°k_ba£
, *
	g°k
, *
	g°k_íd
;

1300 
OnigSèckTy≥
 *
	g°kp
;

1301 
OnigSèckIndex
 
	gsi
;

1302 
OnigSèckIndex
 *
	gª≥©_°k
;

1303 
OnigSèckIndex
 *
	gmem_°¨t_°k
, *
	gmem_íd_°k
;

1304 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


1305 
	gscv
;

1306 * 
	g°©e_check_buff
 = 
mß
->
°©e_check_buff
;

1307 
	gnum_comb_exp_check
 = 
ªg
->
num_comb_exp_check
;

1309 
UCh¨
 *
	gp
 = 
ªg
->
p
;

1310 
OnigO±i⁄Ty≥
 
	g›ti⁄
 = 
ªg
->
›ti⁄s
;

1311 
OnigEncodög
 
	gícode
 = 
ªg
->
íc
;

1312 
OnigCa£FﬁdTy≥
 
	gˇ£_fﬁd_Êag
 = 
ªg
->
ˇ£_fﬁd_Êag
;

1315 
	gp›_Àvñ
 = 
ªg
->
°ack_p›_Àvñ
;

1316 
	gnum_mem
 = 
ªg
->
num_mem
;

1317 
STACK_INIT
(
INIT_MATCH_STACK_SIZE
);

1318 
	gUPDATE_FOR_STACK_REALLOC
;

1319 
	gi
 = 1; i <
num_mem
; i++) {

1320 
	gmem_°¨t_°k
[
i
] = 
mem_íd_°k
[i] = 
INVALID_STACK_INDEX
;

1323 #ifde‡
ONIG_DEBUG_MATCH


1324 
Ârötf
(
°dîr
, "match_at: str: %d,Énd: %d, start: %d, sprev: %d\n",

1325 ()
°r
, ()
íd
, ()
s°¨t
, ()
•ªv
);

1326 
Ârötf
(
°dîr
, "size: %d, start offset: %d\n",

1327 ()(
íd
 - 
°r
), ()(
s°¨t
 - str));

1330 
STACK_PUSH_ENSURED
(
STK_ALT
, 
FöishCode
);

1331 
	gbe°_Àn
 = 
ONIG_MISMATCH
;

1332 
	gs
 = (
UCh¨
* )
s°¨t
;

1334 #ifde‡
ONIG_DEBUG_MATCH


1336 
UCh¨
 *
	gq
, *
	gbp
, 
	gbuf
[50];

1337 
	gÀn
;

1338 
Ârötf
(
°dîr
, "%4d> \"", ()(
s
 - 
°r
));

1339 
	gbp
 = 
buf
;

1340 
	gi
 = 0, 
	gq
 = 
s
; i < 7 && q < 
	gíd
; i++) {

1341 
	gÀn
 = 
í˛í
(
ícode
, 
q
);

1342 
	gÀn
-- > 0Ë*
	gbp
++ = *
q
++;

1344 i‡(
	gq
 < 
	gíd
Ë{ 
xmem˝y
(
bp
, "...\"", 4); 
	gbp
 += 4; }

1345 { 
xmem˝y
(
bp
, "\"", 1); 
	gbp
 += 1; }

1346 *
	gbp
 = 0;

1347 
Âuts
((* )
buf
, 
°dîr
);

1348 
	gi
 = 0; i < 20 - (
	gbp
 - 
	gbuf
); i++Ë
Âutc
(' ', 
°dîr
);

1349 
⁄ig_¥öt_compûed_byã_code
(
°dîr
, 
p
, 
NULL
, 
ícode
);

1350 
Ârötf
(
°dîr
, "\n");

1354 
	gsbegö
 = 
s
;

1355 *
	gp
++) {

1356 
	gOP_END
: 
MOP_IN
(
OP_END
);

1357 
	gn
 = 
s
 - 
s°¨t
;

1358 i‡(
	gn
 > 
	gbe°_Àn
) {

1359 
OnigRegi⁄
* 
	gªgi⁄
;

1360 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


1361 i‡(
IS_FIND_LONGEST
(
›ti⁄
)) {

1362 i‡(
	gn
 > 
	gmß
->
	gbe°_Àn
) {

1363 
	gmß
->
	gbe°_Àn
 = 
n
;

1364 
	gmß
->
	gbe°_s
 = (
UCh¨
* )
s°¨t
;

1367 
	gíd_be°_Àn
;

1370 
	gbe°_Àn
 = 
n
;

1371 
	gªgi⁄
 = 
mß
->
ªgi⁄
;

1372 i‡(
	gªgi⁄
) {

1373 #ifde‡
USE_POSIX_API_REGION_OPTION


1374 i‡(
IS_POSIX_REGION
(
mß
->
›ti⁄s
)) {

1375 
posix_ªgm©ch_t
* 
	grmt
 = (posix_ªgm©ch_t* )
ªgi⁄
;

1377 
	grmt
[0].
	grm_so
 = 
s°¨t
 - 
°r
;

1378 
	grmt
[0].
	grm_eo
 = 
s
 - 
°r
;

1379 
	gi
 = 1; i <
num_mem
; i++) {

1380 i‡(
	gmem_íd_°k
[
i
] !
INVALID_STACK_INDEX
) {

1381 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
i
))

1382 
rmt
[
i
].
rm_so
 = 
STACK_AT
(
mem_°¨t_°k
[i])->
u
.
mem
.
p°r
 - 
°r
;

1384 
	grmt
[
i
].
	grm_so
 = (
UCh¨
* )((* )(
mem_°¨t_°k
[i])Ë- 
°r
;

1386 
	grmt
[
i
].
	grm_eo
 = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, i)

1387 ? 
STACK_AT
(
mem_íd_°k
[
i
])->
	gu
.
	gmem
.
	gp°r


1388 : (
UCh¨
* )((* )
mem_íd_°k
[
i
])Ë- 
°r
;

1391 
	grmt
[
i
].
	grm_so
 = 
rmt
[i].
rm_eo
 = 
ONIG_REGION_NOTPOS
;

1397 
	gªgi⁄
->
	gbeg
[0] = 
s°¨t
 - 
°r
;

1398 
	gªgi⁄
->
	gíd
[0] = 
s
 - 
°r
;

1399 
	gi
 = 1; i <
num_mem
; i++) {

1400 i‡(
	gmem_íd_°k
[
i
] !
INVALID_STACK_INDEX
) {

1401 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
i
))

1402 
ªgi⁄
->
beg
[
i
] = 
STACK_AT
(
mem_°¨t_°k
[i])->
u
.
mem
.
p°r
 - 
°r
;

1404 
	gªgi⁄
->
	gbeg
[
i
] = (
UCh¨
* )((* )
mem_°¨t_°k
[i]Ë- 
°r
;

1406 
	gªgi⁄
->
	gíd
[
i
] = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, i)

1407 ? 
STACK_AT
(
mem_íd_°k
[
i
])->
	gu
.
	gmem
.
	gp°r


1408 : (
UCh¨
* )((* )
mem_íd_°k
[
i
])Ë- 
°r
;

1411 
	gªgi⁄
->
	gbeg
[
i
] = 
ªgi⁄
->
íd
[i] = 
ONIG_REGION_NOTPOS
;

1415 #ifde‡
USE_CAPTURE_HISTORY


1416 i‡(
	gªg
->
	gˇ±uª_hi°‹y
 != 0) {

1417 
r
;

1418 
OnigC≠tuªTªeNode
* 
	gnode
;

1420 i‡(
IS_NULL
(
ªgi⁄
->
hi°‹y_roŸ
)) {

1421 
	gªgi⁄
->
	ghi°‹y_roŸ
 = 
node
 = 
hi°‹y_node_√w
();

1422 
CHECK_NULL_RETURN_MEMERR
(
node
);

1425 
	gnode
 = 
ªgi⁄
->
hi°‹y_roŸ
;

1426 
hi°‹y_åì_˛ór
(
node
);

1429 
	gnode
->
	ggroup
 = 0;

1430 
	gnode
->
	gbeg
 = 
s°¨t
 - 
°r
;

1431 
	gnode
->
	gíd
 = 
s
 - 
°r
;

1433 
	g°kp
 = 
°k_ba£
;

1434 
	gr
 = 
make_ˇ±uª_hi°‹y_åì
(
ªgi⁄
->
hi°‹y_roŸ
, &
°kp
,

1435 
°k
, (
UCh¨
* )
°r
, 
ªg
);

1436 i‡(
	gr
 < 0) {

1437 
	gbe°_Àn
 = 
r
;

1438 
	gföish
;

1442 #ifde‡
USE_POSIX_API_REGION_OPTION


1448 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


1449 
	gíd_be°_Àn
:

1451 
MOP_OUT
;

1453 i‡(
IS_FIND_CONDITION
(
›ti⁄
)) {

1454 i‡(
IS_FIND_NOT_EMPTY
(
›ti⁄
Ë&& 
	gs
 =
s°¨t
) {

1455 
be°_Àn
 = 
ONIG_MISMATCH
;

1456 
	gÁû
;

1458 i‡(
IS_FIND_LONGEST
(
›ti⁄
Ë&& 
	gDATA_ENSURE_CHECK1
) {

1459 
	gÁû
;

1464 
	gföish
;

1467 
	gOP_EXACT1
: 
MOP_IN
(
OP_EXACT1
);

1469 
DATA_ENSURE
(1);

1470 i‡(*
	gp
 !*
s
Ë
Áû
;

1471 
	gp
++; 
	gs
++;

1473 i‡(*
	gp
 !*
s
++Ë
Áû
;

1474 
DATA_ENSURE
(0);

1475 
	gp
++;

1476 
	gMOP_OUT
;

1479 
	gOP_EXACT1_IC
: 
MOP_IN
(
OP_EXACT1_IC
);

1481 
	gÀn
;

1482 
UCh¨
 *
	gq
, 
	glowbuf
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

1484 
DATA_ENSURE
(1);

1485 
	gÀn
 = 
ONIGENC_MBC_CASE_FOLD
(
ícode
,

1487 
ˇ£_fﬁd_Êag
,

1488 &
s
, 
íd
, 
lowbuf
);

1489 
DATA_ENSURE
(0);

1490 
	gq
 = 
lowbuf
;

1491 
	gÀn
-- > 0) {

1492 i‡(*
	gp
 !*
q
) {

1493 
Áû
;

1495 
	gp
++; 
	gq
++;

1498 
	gMOP_OUT
;

1501 
	gOP_EXACT2
: 
MOP_IN
(
OP_EXACT2
);

1502 
DATA_ENSURE
(2);

1503 i‡(*
	gp
 !*
s
Ë
Áû
;

1504 
	gp
++; 
	gs
++;

1505 i‡(*
	gp
 !*
s
Ë
Áû
;

1506 
	g•ªv
 = 
s
;

1507 
	gp
++; 
	gs
++;

1508 
	gMOP_OUT
;

1512 
	gOP_EXACT3
: 
MOP_IN
(
OP_EXACT3
);

1513 
DATA_ENSURE
(3);

1514 i‡(*
	gp
 !*
s
Ë
Áû
;

1515 
	gp
++; 
	gs
++;

1516 i‡(*
	gp
 !*
s
Ë
Áû
;

1517 
	gp
++; 
	gs
++;

1518 i‡(*
	gp
 !*
s
Ë
Áû
;

1519 
	g•ªv
 = 
s
;

1520 
	gp
++; 
	gs
++;

1521 
	gMOP_OUT
;

1525 
	gOP_EXACT4
: 
MOP_IN
(
OP_EXACT4
);

1526 
DATA_ENSURE
(4);

1527 i‡(*
	gp
 !*
s
Ë
Áû
;

1528 
	gp
++; 
	gs
++;

1529 i‡(*
	gp
 !*
s
Ë
Áû
;

1530 
	gp
++; 
	gs
++;

1531 i‡(*
	gp
 !*
s
Ë
Áû
;

1532 
	gp
++; 
	gs
++;

1533 i‡(*
	gp
 !*
s
Ë
Áû
;

1534 
	g•ªv
 = 
s
;

1535 
	gp
++; 
	gs
++;

1536 
	gMOP_OUT
;

1540 
	gOP_EXACT5
: 
MOP_IN
(
OP_EXACT5
);

1541 
DATA_ENSURE
(5);

1542 i‡(*
	gp
 !*
s
Ë
Áû
;

1543 
	gp
++; 
	gs
++;

1544 i‡(*
	gp
 !*
s
Ë
Áû
;

1545 
	gp
++; 
	gs
++;

1546 i‡(*
	gp
 !*
s
Ë
Áû
;

1547 
	gp
++; 
	gs
++;

1548 i‡(*
	gp
 !*
s
Ë
Áû
;

1549 
	gp
++; 
	gs
++;

1550 i‡(*
	gp
 !*
s
Ë
Áû
;

1551 
	g•ªv
 = 
s
;

1552 
	gp
++; 
	gs
++;

1553 
	gMOP_OUT
;

1557 
	gOP_EXACTN
: 
MOP_IN
(
OP_EXACTN
);

1558 
GET_LENGTH_INC
(
éí
, 
p
);

1559 
DATA_ENSURE
(
éí
);

1560 
	géí
-- > 0) {

1561 i‡(*
	gp
++ !*
s
++Ë
Áû
;

1563 
	g•ªv
 = 
s
 - 1;

1564 
	gMOP_OUT
;

1568 
	gOP_EXACTN_IC
: 
MOP_IN
(
OP_EXACTN_IC
);

1570 
	gÀn
;

1571 
UCh¨
 *
	gq
, *
	gídp
, 
	glowbuf
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

1573 
GET_LENGTH_INC
(
éí
, 
p
);

1574 
	gídp
 = 
p
 + 
éí
;

1576 
	gp
 < 
	gídp
) {

1577 
	g•ªv
 = 
s
;

1578 
DATA_ENSURE
(1);

1579 
	gÀn
 = 
ONIGENC_MBC_CASE_FOLD
(
ícode
,

1581 
ˇ£_fﬁd_Êag
,

1582 &
s
, 
íd
, 
lowbuf
);

1583 
DATA_ENSURE
(0);

1584 
	gq
 = 
lowbuf
;

1585 
	gÀn
-- > 0) {

1586 i‡(*
	gp
 !*
q
Ë
Áû
;

1587 
	gp
++; 
	gq
++;

1592 
	gMOP_OUT
;

1596 
	gOP_EXACTMB2N1
: 
MOP_IN
(
OP_EXACTMB2N1
);

1597 
DATA_ENSURE
(2);

1598 i‡(*
	gp
 !*
s
Ë
Áû
;

1599 
	gp
++; 
	gs
++;

1600 i‡(*
	gp
 !*
s
Ë
Áû
;

1601 
	gp
++; 
	gs
++;

1602 
	gMOP_OUT
;

1605 
	gOP_EXACTMB2N2
: 
MOP_IN
(
OP_EXACTMB2N2
);

1606 
DATA_ENSURE
(4);

1607 i‡(*
	gp
 !*
s
Ë
Áû
;

1608 
	gp
++; 
	gs
++;

1609 i‡(*
	gp
 !*
s
Ë
Áû
;

1610 
	gp
++; 
	gs
++;

1611 
	g•ªv
 = 
s
;

1612 i‡(*
	gp
 !*
s
Ë
Áû
;

1613 
	gp
++; 
	gs
++;

1614 i‡(*
	gp
 !*
s
Ë
Áû
;

1615 
	gp
++; 
	gs
++;

1616 
	gMOP_OUT
;

1620 
	gOP_EXACTMB2N3
: 
MOP_IN
(
OP_EXACTMB2N3
);

1621 
DATA_ENSURE
(6);

1622 i‡(*
	gp
 !*
s
Ë
Áû
;

1623 
	gp
++; 
	gs
++;

1624 i‡(*
	gp
 !*
s
Ë
Áû
;

1625 
	gp
++; 
	gs
++;

1626 i‡(*
	gp
 !*
s
Ë
Áû
;

1627 
	gp
++; 
	gs
++;

1628 i‡(*
	gp
 !*
s
Ë
Áû
;

1629 
	gp
++; 
	gs
++;

1630 
	g•ªv
 = 
s
;

1631 i‡(*
	gp
 !*
s
Ë
Áû
;

1632 
	gp
++; 
	gs
++;

1633 i‡(*
	gp
 !*
s
Ë
Áû
;

1634 
	gp
++; 
	gs
++;

1635 
	gMOP_OUT
;

1639 
	gOP_EXACTMB2N
: 
MOP_IN
(
OP_EXACTMB2N
);

1640 
GET_LENGTH_INC
(
éí
, 
p
);

1641 
DATA_ENSURE
(
éí
 * 2);

1642 
	géí
-- > 0) {

1643 i‡(*
	gp
 !*
s
Ë
Áû
;

1644 
	gp
++; 
	gs
++;

1645 i‡(*
	gp
 !*
s
Ë
Áû
;

1646 
	gp
++; 
	gs
++;

1648 
	g•ªv
 = 
s
 - 2;

1649 
	gMOP_OUT
;

1653 
	gOP_EXACTMB3N
: 
MOP_IN
(
OP_EXACTMB3N
);

1654 
GET_LENGTH_INC
(
éí
, 
p
);

1655 
DATA_ENSURE
(
éí
 * 3);

1656 
	géí
-- > 0) {

1657 i‡(*
	gp
 !*
s
Ë
Áû
;

1658 
	gp
++; 
	gs
++;

1659 i‡(*
	gp
 !*
s
Ë
Áû
;

1660 
	gp
++; 
	gs
++;

1661 i‡(*
	gp
 !*
s
Ë
Áû
;

1662 
	gp
++; 
	gs
++;

1664 
	g•ªv
 = 
s
 - 3;

1665 
	gMOP_OUT
;

1669 
	gOP_EXACTMBN
: 
MOP_IN
(
OP_EXACTMBN
);

1670 
GET_LENGTH_INC
(
éí
, 
p
);

1671 
GET_LENGTH_INC
(
éí2
, 
p
);

1672 
	géí2
 *
éí
;

1673 
DATA_ENSURE
(
éí2
);

1674 
	géí2
-- > 0) {

1675 i‡(*
	gp
 !*
s
Ë
Áû
;

1676 
	gp
++; 
	gs
++;

1678 
	g•ªv
 = 
s
 - 
éí
;

1679 
	gMOP_OUT
;

1683 
	gOP_CCLASS
: 
MOP_IN
(
OP_CCLASS
);

1684 
DATA_ENSURE
(1);

1685 i‡(
BITSET_AT
(((
BôSëRef
 )
p
), *
s
Ë=0Ë
Áû
;

1686 
	gp
 +
SIZE_BITSET
;

1687 
	gs
 +
í˛í
(
ícode
, 
s
);

1688 
	gMOP_OUT
;

1691 
	gOP_CCLASS_MB
: 
MOP_IN
(
OP_CCLASS_MB
);

1692 i‡(! 
ONIGENC_IS_MBC_HEAD
(
ícode
, 
s
)Ë
	gÁû
;

1694 
	gc˛ass_mb
:

1695 
GET_LENGTH_INC
(
éí
, 
p
);

1697 
OnigCodePoöt
 
	gcode
;

1698 
UCh¨
 *
	gss
;

1699 
	gmb_Àn
;

1701 
DATA_ENSURE
(1);

1702 
	gmb_Àn
 = 
í˛í
(
ícode
, 
s
);

1703 
DATA_ENSURE
(
mb_Àn
);

1704 
	gss
 = 
s
;

1705 
	gs
 +
mb_Àn
;

1706 
	gcode
 = 
ONIGENC_MBC_TO_CODE
(
ícode
, 
ss
, 
s
);

1708 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


1709 i‡(! 
⁄ig_is_ö_code_ønge
(
p
, 
code
)Ë
	gÁû
;

1711 
	gq
 = 
p
;

1712 
ALIGNMENT_RIGHT
(
q
);

1713 i‡(! 
⁄ig_is_ö_code_ønge
(
q
, 
code
)Ë
	gÁû
;

1716 
	gp
 +
éí
;

1717 
	gMOP_OUT
;

1720 
	gOP_CCLASS_MIX
: 
MOP_IN
(
OP_CCLASS_MIX
);

1721 
DATA_ENSURE
(1);

1722 i‡(
ONIGENC_IS_MBC_HEAD
(
ícode
, 
s
)) {

1723 
	gp
 +
SIZE_BITSET
;

1724 
	gc˛ass_mb
;

1727 i‡(
BITSET_AT
(((
BôSëRef
 )
p
), *
s
) == 0)

1728 
Áû
;

1730 
	gp
 +
SIZE_BITSET
;

1731 
GET_LENGTH_INC
(
éí
, 
p
);

1732 
	gp
 +
éí
;

1733 
	gs
++;

1735 
	gMOP_OUT
;

1738 
	gOP_CCLASS_NOT
: 
MOP_IN
(
OP_CCLASS_NOT
);

1739 
DATA_ENSURE
(1);

1740 i‡(
BITSET_AT
(((
BôSëRef
 )
p
), *
s
Ë!0Ë
Áû
;

1741 
	gp
 +
SIZE_BITSET
;

1742 
	gs
 +
í˛í
(
ícode
, 
s
);

1743 
	gMOP_OUT
;

1746 
	gOP_CCLASS_MB_NOT
: 
MOP_IN
(
OP_CCLASS_MB_NOT
);

1747 
DATA_ENSURE
(1);

1748 i‡(! 
ONIGENC_IS_MBC_HEAD
(
ícode
, 
s
)) {

1749 
	gs
++;

1750 
GET_LENGTH_INC
(
éí
, 
p
);

1751 
	gp
 +
éí
;

1752 
	gcc_mb_nŸ_suc˚ss
;

1755 
	gc˛ass_mb_nŸ
:

1756 
GET_LENGTH_INC
(
éí
, 
p
);

1758 
OnigCodePoöt
 
	gcode
;

1759 
UCh¨
 *
	gss
;

1760 
	gmb_Àn
 = 
í˛í
(
ícode
, 
s
);

1762 i‡(! 
DATA_ENSURE_CHECK
(
mb_Àn
)) {

1763 
DATA_ENSURE
(1);

1764 
	gs
 = (
UCh¨
* )
íd
;

1765 
	gp
 +
éí
;

1766 
	gcc_mb_nŸ_suc˚ss
;

1769 
	gss
 = 
s
;

1770 
	gs
 +
mb_Àn
;

1771 
	gcode
 = 
ONIGENC_MBC_TO_CODE
(
ícode
, 
ss
, 
s
);

1773 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


1774 i‡(
⁄ig_is_ö_code_ønge
(
p
, 
code
)Ë
	gÁû
;

1776 
	gq
 = 
p
;

1777 
ALIGNMENT_RIGHT
(
q
);

1778 i‡(
⁄ig_is_ö_code_ønge
(
q
, 
code
)Ë
	gÁû
;

1781 
	gp
 +
éí
;

1783 
	gcc_mb_nŸ_suc˚ss
:

1784 
MOP_OUT
;

1787 
	gOP_CCLASS_MIX_NOT
: 
MOP_IN
(
OP_CCLASS_MIX_NOT
);

1788 
DATA_ENSURE
(1);

1789 i‡(
ONIGENC_IS_MBC_HEAD
(
ícode
, 
s
)) {

1790 
	gp
 +
SIZE_BITSET
;

1791 
	gc˛ass_mb_nŸ
;

1794 i‡(
BITSET_AT
(((
BôSëRef
 )
p
), *
s
) != 0)

1795 
Áû
;

1797 
	gp
 +
SIZE_BITSET
;

1798 
GET_LENGTH_INC
(
éí
, 
p
);

1799 
	gp
 +
éí
;

1800 
	gs
++;

1802 
	gMOP_OUT
;

1805 
	gOP_CCLASS_NODE
: 
MOP_IN
(
OP_CCLASS_NODE
);

1807 
OnigCodePoöt
 
	gcode
;

1808 *
	gnode
;

1809 
	gmb_Àn
;

1810 
UCh¨
 *
	gss
;

1812 
DATA_ENSURE
(1);

1813 
GET_POINTER_INC
(
node
, 
p
);

1814 
	gmb_Àn
 = 
í˛í
(
ícode
, 
s
);

1815 
	gss
 = 
s
;

1816 
	gs
 +
mb_Àn
;

1817 
DATA_ENSURE
(0);

1818 
	gcode
 = 
ONIGENC_MBC_TO_CODE
(
ícode
, 
ss
, 
s
);

1819 i‡(
⁄ig_is_code_ö_cc_Àn
(
mb_Àn
, 
code
, 
node
Ë=0Ë
Áû
;

1821 
	gMOP_OUT
;

1824 
	gOP_ANYCHAR
: 
MOP_IN
(
OP_ANYCHAR
);

1825 
DATA_ENSURE
(1);

1826 
	gn
 = 
í˛í
(
ícode
, 
s
);

1827 
DATA_ENSURE
(
n
);

1828 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
)Ë
	gÁû
;

1829 
	gs
 +
n
;

1830 
	gMOP_OUT
;

1833 
	gOP_ANYCHAR_ML
: 
MOP_IN
(
OP_ANYCHAR_ML
);

1834 
DATA_ENSURE
(1);

1835 
	gn
 = 
í˛í
(
ícode
, 
s
);

1836 
DATA_ENSURE
(
n
);

1837 
	gs
 +
n
;

1838 
	gMOP_OUT
;

1841 
	gOP_ANYCHAR_STAR
: 
MOP_IN
(
OP_ANYCHAR_STAR
);

1842 
	gDATA_ENSURE_CHECK1
) {

1843 
STACK_PUSH_ALT
(
p
, 
s
, 
•ªv
);

1844 
	gn
 = 
í˛í
(
ícode
, 
s
);

1845 
DATA_ENSURE
(
n
);

1846 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
)Ë
	gÁû
;

1847 
	g•ªv
 = 
s
;

1848 
	gs
 +
n
;

1850 
	gMOP_OUT
;

1853 
	gOP_ANYCHAR_ML_STAR
: 
MOP_IN
(
OP_ANYCHAR_ML_STAR
);

1854 
	gDATA_ENSURE_CHECK1
) {

1855 
STACK_PUSH_ALT
(
p
, 
s
, 
•ªv
);

1856 
	gn
 = 
í˛í
(
ícode
, 
s
);

1857 i‡(
	gn
 > 1) {

1858 
DATA_ENSURE
(
n
);

1859 
	g•ªv
 = 
s
;

1860 
	gs
 +
n
;

1863 
	g•ªv
 = 
s
;

1864 
	gs
++;

1867 
	gMOP_OUT
;

1870 
	gOP_ANYCHAR_STAR_PEEK_NEXT
: 
MOP_IN
(
OP_ANYCHAR_STAR_PEEK_NEXT
);

1871 
	gDATA_ENSURE_CHECK1
) {

1872 i‡(*
	gp
 =*
s
) {

1873 
STACK_PUSH_ALT
(
p
 + 1, 
s
, 
•ªv
);

1875 
	gn
 = 
í˛í
(
ícode
, 
s
);

1876 
DATA_ENSURE
(
n
);

1877 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
)Ë
	gÁû
;

1878 
	g•ªv
 = 
s
;

1879 
	gs
 +
n
;

1881 
	gp
++;

1882 
	gMOP_OUT
;

1885 
	gOP_ANYCHAR_ML_STAR_PEEK_NEXT
:
MOP_IN
(
OP_ANYCHAR_ML_STAR_PEEK_NEXT
);

1886 
	gDATA_ENSURE_CHECK1
) {

1887 i‡(*
	gp
 =*
s
) {

1888 
STACK_PUSH_ALT
(
p
 + 1, 
s
, 
•ªv
);

1890 
	gn
 = 
í˛í
(
ícode
, 
s
);

1891 i‡(
	gn
 > 1) {

1892 
DATA_ENSURE
(
n
);

1893 
	g•ªv
 = 
s
;

1894 
	gs
 +
n
;

1897 
	g•ªv
 = 
s
;

1898 
	gs
++;

1901 
	gp
++;

1902 
	gMOP_OUT
;

1905 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


1906 
	gOP_STATE_CHECK_ANYCHAR_STAR
: 
MOP_IN
(
OP_STATE_CHECK_ANYCHAR_STAR
);

1907 
GET_STATE_CHECK_NUM_INC
(
mem
, 
p
);

1908 
	gDATA_ENSURE_CHECK1
) {

1909 
STATE_CHECK_VAL
(
scv
, 
mem
);

1910 i‡(
	gscv
Ë
	gÁû
;

1912 
STACK_PUSH_ALT_WITH_STATE_CHECK
(
p
, 
s
, 
•ªv
, 
mem
);

1913 
	gn
 = 
í˛í
(
ícode
, 
s
);

1914 
DATA_ENSURE
(
n
);

1915 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
)Ë
	gÁû
;

1916 
	g•ªv
 = 
s
;

1917 
	gs
 +
n
;

1919 
	gMOP_OUT
;

1922 
	gOP_STATE_CHECK_ANYCHAR_ML_STAR
:

1923 
MOP_IN
(
OP_STATE_CHECK_ANYCHAR_ML_STAR
);

1925 
GET_STATE_CHECK_NUM_INC
(
mem
, 
p
);

1926 
	gDATA_ENSURE_CHECK1
) {

1927 
STATE_CHECK_VAL
(
scv
, 
mem
);

1928 i‡(
	gscv
Ë
	gÁû
;

1930 
STACK_PUSH_ALT_WITH_STATE_CHECK
(
p
, 
s
, 
•ªv
, 
mem
);

1931 
	gn
 = 
í˛í
(
ícode
, 
s
);

1932 i‡(
	gn
 > 1) {

1933 
DATA_ENSURE
(
n
);

1934 
	g•ªv
 = 
s
;

1935 
	gs
 +
n
;

1938 
	g•ªv
 = 
s
;

1939 
	gs
++;

1942 
	gMOP_OUT
;

1946 
	gOP_WORD
: 
MOP_IN
(
OP_WORD
);

1947 
DATA_ENSURE
(1);

1948 i‡(! 
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
))

1949 
	gÁû
;

1951 
	gs
 +
í˛í
(
ícode
, 
s
);

1952 
	gMOP_OUT
;

1955 
	gOP_NOT_WORD
: 
MOP_IN
(
OP_NOT_WORD
);

1956 
DATA_ENSURE
(1);

1957 i‡(
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
))

1958 
	gÁû
;

1960 
	gs
 +
í˛í
(
ícode
, 
s
);

1961 
	gMOP_OUT
;

1964 
	gOP_WORD_BOUND
: 
MOP_IN
(
OP_WORD_BOUND
);

1965 i‡(
ON_STR_BEGIN
(
s
)) {

1966 
DATA_ENSURE
(1);

1967 i‡(! 
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
))

1968 
	gÁû
;

1970 i‡(
ON_STR_END
(
s
)) {

1971 i‡(! 
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
))

1972 
	gÁû
;

1975 i‡(
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
)

1976 =
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
))

1977 
	gÁû
;

1979 
	gMOP_OUT
;

1983 
	gOP_NOT_WORD_BOUND
: 
MOP_IN
(
OP_NOT_WORD_BOUND
);

1984 i‡(
ON_STR_BEGIN
(
s
)) {

1985 i‡(
	gDATA_ENSURE_CHECK1
 && 
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
))

1986 
	gÁû
;

1988 i‡(
ON_STR_END
(
s
)) {

1989 i‡(
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
))

1990 
	gÁû
;

1993 i‡(
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
)

1994 !
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
))

1995 
	gÁû
;

1997 
	gMOP_OUT
;

2001 #ifde‡
USE_WORD_BEGIN_END


2002 
	gOP_WORD_BEGIN
: 
MOP_IN
(
OP_WORD_BEGIN
);

2003 i‡(
	gDATA_ENSURE_CHECK1
 && 
ONIGENC_IS_MBC_WORD
(
ícode
, 
s
, 
íd
)) {

2004 i‡(
ON_STR_BEGIN
(
s
Ë|| !
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
)) {

2005 
	gMOP_OUT
;

2009 
	gÁû
;

2012 
	gOP_WORD_END
: 
MOP_IN
(
OP_WORD_END
);

2013 i‡(!
ON_STR_BEGIN
(
s
Ë&& 
ONIGENC_IS_MBC_WORD
(
ícode
, 
•ªv
, 
íd
)) {

2014 i‡(
ON_STR_END
(
s
Ë|| !
ONIGENC_IS_MBC_WORD
(
ícode
, s, 
íd
)) {

2015 
	gMOP_OUT
;

2019 
	gÁû
;

2023 
	gOP_BEGIN_BUF
: 
MOP_IN
(
OP_BEGIN_BUF
);

2024 i‡(! 
ON_STR_BEGIN
(
s
)Ë
	gÁû
;

2026 
	gMOP_OUT
;

2030 
	gOP_END_BUF
: 
MOP_IN
(
OP_END_BUF
);

2031 i‡(! 
ON_STR_END
(
s
)Ë
	gÁû
;

2033 
	gMOP_OUT
;

2037 
	gOP_BEGIN_LINE
: 
MOP_IN
(
OP_BEGIN_LINE
);

2038 i‡(
ON_STR_BEGIN
(
s
)) {

2039 i‡(
IS_NOTBOL
(
mß
->
›ti⁄s
)Ë
	gÁû
;

2040 
	gMOP_OUT
;

2043 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
•ªv
, 
íd
Ë&& !
ON_STR_END
(
s
)) {

2044 
	gMOP_OUT
;

2047 
	gÁû
;

2050 
	gOP_END_LINE
: 
MOP_IN
(
OP_END_LINE
);

2051 i‡(
ON_STR_END
(
s
)) {

2052 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


2053 i‡(
	gIS_EMPTY_STR
 || !
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
•ªv
, 
íd
)) {

2055 i‡(
IS_NOTEOL
(
mß
->
›ti⁄s
)Ë
	gÁû
;

2056 
	gMOP_OUT
;

2058 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


2062 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
)) {

2063 
	gMOP_OUT
;

2066 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


2067 i‡(
ONIGENC_IS_MBC_CRNL
(
ícode
, 
s
, 
íd
)) {

2068 
	gMOP_OUT
;

2072 
	gÁû
;

2075 
	gOP_SEMI_END_BUF
: 
MOP_IN
(
OP_SEMI_END_BUF
);

2076 i‡(
ON_STR_END
(
s
)) {

2077 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


2078 i‡(
	gIS_EMPTY_STR
 || !
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
•ªv
, 
íd
)) {

2080 i‡(
IS_NOTEOL
(
mß
->
›ti⁄s
)Ë
	gÁû
;

2081 
	gMOP_OUT
;

2083 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


2087 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ícode
, 
s
, 
íd
) &&

2088 
ON_STR_END
(
s
 + 
í˛í
(
ícode
, s))) {

2089 
	gMOP_OUT
;

2092 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


2093 i‡(
ONIGENC_IS_MBC_CRNL
(
ícode
, 
s
, 
íd
)) {

2094 
UCh¨
* 
	gss
 = 
s
 + 
í˛í
(
ícode
, s);

2095 
	gss
 +
í˛í
(
ícode
, 
ss
);

2096 i‡(
ON_STR_END
(
ss
)) {

2097 
	gMOP_OUT
;

2102 
	gÁû
;

2105 
	gOP_BEGIN_POSITION
: 
MOP_IN
(
OP_BEGIN_POSITION
);

2106 i‡(
	gs
 !
mß
->
°¨t
)

2107 
Áû
;

2109 
	gMOP_OUT
;

2113 
	gOP_MEMORY_START_PUSH
: 
MOP_IN
(
OP_MEMORY_START_PUSH
);

2114 
GET_MEMNUM_INC
(
mem
, 
p
);

2115 
STACK_PUSH_MEM_START
(
mem
, 
s
);

2116 
	gMOP_OUT
;

2120 
	gOP_MEMORY_START
: 
MOP_IN
(
OP_MEMORY_START
);

2121 
GET_MEMNUM_INC
(
mem
, 
p
);

2122 
	gmem_°¨t_°k
[
mem
] = (
OnigSèckIndex
 )((* )
s
);

2123 
	gMOP_OUT
;

2127 
	gOP_MEMORY_END_PUSH
: 
MOP_IN
(
OP_MEMORY_END_PUSH
);

2128 
GET_MEMNUM_INC
(
mem
, 
p
);

2129 
STACK_PUSH_MEM_END
(
mem
, 
s
);

2130 
	gMOP_OUT
;

2134 
	gOP_MEMORY_END
: 
MOP_IN
(
OP_MEMORY_END
);

2135 
GET_MEMNUM_INC
(
mem
, 
p
);

2136 
	gmem_íd_°k
[
mem
] = (
OnigSèckIndex
 )((* )
s
);

2137 
	gMOP_OUT
;

2141 #ifde‡
USE_SUBEXP_CALL


2142 
	gOP_MEMORY_END_PUSH_REC
: 
MOP_IN
(
OP_MEMORY_END_PUSH_REC
);

2143 
GET_MEMNUM_INC
(
mem
, 
p
);

2144 
STACK_GET_MEM_START
(
mem
, 
°kp
);

2145 
STACK_PUSH_MEM_END
(
mem
, 
s
);

2146 
	gmem_°¨t_°k
[
mem
] = 
GET_STACK_INDEX
(
°kp
);

2147 
	gMOP_OUT
;

2151 
	gOP_MEMORY_END_REC
: 
MOP_IN
(
OP_MEMORY_END_REC
);

2152 
GET_MEMNUM_INC
(
mem
, 
p
);

2153 
	gmem_íd_°k
[
mem
] = (
OnigSèckIndex
 )((* )
s
);

2154 
STACK_GET_MEM_START
(
mem
, 
°kp
);

2156 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
mem
))

2157 
	gmem_°¨t_°k
[
mem
] = 
GET_STACK_INDEX
(
°kp
);

2159 
	gmem_°¨t_°k
[
mem
] = (
OnigSèckIndex
 )((* )
°kp
->
u
.mem.
p°r
);

2161 
STACK_PUSH_MEM_END_MARK
(
mem
);

2162 
	gMOP_OUT
;

2167 
	gOP_BACKREF1
: 
MOP_IN
(
OP_BACKREF1
);

2168 
	gmem
 = 1;

2169 
	gbackªf
;

2172 
	gOP_BACKREF2
: 
MOP_IN
(
OP_BACKREF2
);

2173 
	gmem
 = 2;

2174 
	gbackªf
;

2177 
	gOP_BACKREFN
: 
MOP_IN
(
OP_BACKREFN
);

2178 
GET_MEMNUM_INC
(
mem
, 
p
);

2179 
	gbackªf
:

2181 
Àn
;

2182 
UCh¨
 *
	gp°¨t
, *
	g≥nd
;

2186 i‡(
	gmem
 > 
	gnum_mem
Ë
	gÁû
;

2187 i‡(
	gmem_íd_°k
[
mem
] =
INVALID_STACK_INDEX
Ë
Áû
;

2188 i‡(
	gmem_°¨t_°k
[
mem
] =
INVALID_STACK_INDEX
Ë
Áû
;

2190 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
mem
))

2191 
	gp°¨t
 = 
STACK_AT
(
mem_°¨t_°k
[
mem
])->
u
.mem.
p°r
;

2193 
	gp°¨t
 = (
UCh¨
* )((* )
mem_°¨t_°k
[
mem
]);

2195 
	g≥nd
 = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
mem
)

2196 ? 
STACK_AT
(
mem_íd_°k
[
mem
])->
	gu
.
	gmem
.
	gp°r


2197 : (
UCh¨
* )((* )
mem_íd_°k
[
mem
]));

2198 
	gn
 = 
≥nd
 - 
p°¨t
;

2199 
DATA_ENSURE
(
n
);

2200 
	g•ªv
 = 
s
;

2201 
STRING_CMP
(
p°¨t
, 
s
, 
n
);

2202 
	g•ªv
 + (
	gÀn
 = 
í˛í
(
ícode
, 
•ªv
)Ë< 
	gs
)

2203 
	g•ªv
 +
Àn
;

2205 
	gMOP_OUT
;

2210 
	gOP_BACKREFN_IC
: 
MOP_IN
(
OP_BACKREFN_IC
);

2211 
GET_MEMNUM_INC
(
mem
, 
p
);

2213 
	gÀn
;

2214 
UCh¨
 *
	gp°¨t
, *
	g≥nd
;

2218 i‡(
	gmem
 > 
	gnum_mem
Ë
	gÁû
;

2219 i‡(
	gmem_íd_°k
[
mem
] =
INVALID_STACK_INDEX
Ë
Áû
;

2220 i‡(
	gmem_°¨t_°k
[
mem
] =
INVALID_STACK_INDEX
Ë
Áû
;

2222 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
mem
))

2223 
	gp°¨t
 = 
STACK_AT
(
mem_°¨t_°k
[
mem
])->
u
.mem.
p°r
;

2225 
	gp°¨t
 = (
UCh¨
* )((* )
mem_°¨t_°k
[
mem
]);

2227 
	g≥nd
 = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
mem
)

2228 ? 
STACK_AT
(
mem_íd_°k
[
mem
])->
	gu
.
	gmem
.
	gp°r


2229 : (
UCh¨
* )((* )
mem_íd_°k
[
mem
]));

2230 
	gn
 = 
≥nd
 - 
p°¨t
;

2231 
DATA_ENSURE
(
n
);

2232 
	g•ªv
 = 
s
;

2233 
STRING_CMP_IC
(
ˇ£_fﬁd_Êag
, 
p°¨t
, &
s
, 
n
);

2234 
	g•ªv
 + (
	gÀn
 = 
í˛í
(
ícode
, 
•ªv
)Ë< 
	gs
)

2235 
	g•ªv
 +
Àn
;

2237 
	gMOP_OUT
;

2242 
	gOP_BACKREF_MULTI
: 
MOP_IN
(
OP_BACKREF_MULTI
);

2244 
	gÀn
, 
	gis_Áû
;

2245 
UCh¨
 *
	gp°¨t
, *
	g≥nd
, *
	gsw‹k
;

2247 
GET_LENGTH_INC
(
éí
, 
p
);

2248 
	gi
 = 0; i < 
	géí
; i++) {

2249 
GET_MEMNUM_INC
(
mem
, 
p
);

2251 i‡(
	gmem_íd_°k
[
mem
] =
INVALID_STACK_INDEX
) ;

2252 i‡(
	gmem_°¨t_°k
[
mem
] =
INVALID_STACK_INDEX
) ;

2254 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
mem
))

2255 
	gp°¨t
 = 
STACK_AT
(
mem_°¨t_°k
[
mem
])->
u
.mem.
p°r
;

2257 
	gp°¨t
 = (
UCh¨
* )((* )
mem_°¨t_°k
[
mem
]);

2259 
	g≥nd
 = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
mem
)

2260 ? 
STACK_AT
(
mem_íd_°k
[
mem
])->
	gu
.
	gmem
.
	gp°r


2261 : (
UCh¨
* )((* )
mem_íd_°k
[
mem
]));

2262 
	gn
 = 
≥nd
 - 
p°¨t
;

2263 
DATA_ENSURE
(
n
);

2264 
	g•ªv
 = 
s
;

2265 
	gsw‹k
 = 
s
;

2266 
STRING_CMP_VALUE
(
p°¨t
, 
sw‹k
, 
n
, 
is_Áû
);

2267 i‡(
	gis_Áû
) ;

2268 
	gs
 = 
sw‹k
;

2269 
	g•ªv
 + (
	gÀn
 = 
í˛í
(
ícode
, 
•ªv
)Ë< 
	gs
)

2270 
	g•ªv
 +
Àn
;

2272 
	gp
 +(
SIZE_MEMNUM
 * (
éí
 - 
i
 - 1));

2275 i‡(
	gi
 =
éí
Ë
Áû
;

2276 
	gMOP_OUT
;

2281 
	gOP_BACKREF_MULTI_IC
: 
MOP_IN
(
OP_BACKREF_MULTI_IC
);

2283 
	gÀn
, 
	gis_Áû
;

2284 
UCh¨
 *
	gp°¨t
, *
	g≥nd
, *
	gsw‹k
;

2286 
GET_LENGTH_INC
(
éí
, 
p
);

2287 
	gi
 = 0; i < 
	géí
; i++) {

2288 
GET_MEMNUM_INC
(
mem
, 
p
);

2290 i‡(
	gmem_íd_°k
[
mem
] =
INVALID_STACK_INDEX
) ;

2291 i‡(
	gmem_°¨t_°k
[
mem
] =
INVALID_STACK_INDEX
) ;

2293 i‡(
BIT_STATUS_AT
(
ªg
->
bt_mem_°¨t
, 
mem
))

2294 
	gp°¨t
 = 
STACK_AT
(
mem_°¨t_°k
[
mem
])->
u
.mem.
p°r
;

2296 
	gp°¨t
 = (
UCh¨
* )((* )
mem_°¨t_°k
[
mem
]);

2298 
	g≥nd
 = (
BIT_STATUS_AT
(
ªg
->
bt_mem_íd
, 
mem
)

2299 ? 
STACK_AT
(
mem_íd_°k
[
mem
])->
	gu
.
	gmem
.
	gp°r


2300 : (
UCh¨
* )((* )
mem_íd_°k
[
mem
]));

2301 
	gn
 = 
≥nd
 - 
p°¨t
;

2302 
DATA_ENSURE
(
n
);

2303 
	g•ªv
 = 
s
;

2304 
	gsw‹k
 = 
s
;

2305 
STRING_CMP_VALUE_IC
(
ˇ£_fﬁd_Êag
, 
p°¨t
, &
sw‹k
, 
n
, 
is_Áû
);

2306 i‡(
	gis_Áû
) ;

2307 
	gs
 = 
sw‹k
;

2308 
	g•ªv
 + (
	gÀn
 = 
í˛í
(
ícode
, 
•ªv
)Ë< 
	gs
)

2309 
	g•ªv
 +
Àn
;

2311 
	gp
 +(
SIZE_MEMNUM
 * (
éí
 - 
i
 - 1));

2314 i‡(
	gi
 =
éí
Ë
Áû
;

2315 
	gMOP_OUT
;

2320 #ifde‡
USE_BACKREF_WITH_LEVEL


2321 
	gOP_BACKREF_WITH_LEVEL
:

2323 
Àn
;

2324 
OnigO±i⁄Ty≥
 
	gic
;

2325 
LígthTy≥
 
	gÀvñ
;

2327 
GET_OPTION_INC
(
ic
, 
p
);

2328 
GET_LENGTH_INC
(
Àvñ
, 
p
);

2329 
GET_LENGTH_INC
(
éí
, 
p
);

2331 
	g•ªv
 = 
s
;

2332 i‡(
backªf_m©ch_©_√°ed_Àvñ
(
ªg
, 
°k
, 
°k_ba£
, 
ic


2333 , 
ˇ£_fﬁd_Êag
, ()
Àvñ
, ()
éí
, 
p
, &
s
, 
íd
)) {

2334 
	g•ªv
 + (
	gÀn
 = 
í˛í
(
ícode
, 
•ªv
)Ë< 
	gs
)

2335 
	g•ªv
 +
Àn
;

2337 
	gp
 +(
SIZE_MEMNUM
 * 
éí
);

2340 
	gÁû
;

2342 
	gMOP_OUT
;

2349 
	gOP_SET_OPTION_PUSH
: 
MOP_IN
(
OP_SET_OPTION_PUSH
);

2350 
GET_OPTION_INC
(
›ti⁄
, 
p
);

2351 
STACK_PUSH_ALT
(
p
, 
s
, 
•ªv
);

2352 
	gp
 +
SIZE_OP_SET_OPTION
 + 
SIZE_OP_FAIL
;

2353 
	gMOP_OUT
;

2357 
	gOP_SET_OPTION
: 
MOP_IN
(
OP_SET_OPTION
);

2358 
GET_OPTION_INC
(
›ti⁄
, 
p
);

2359 
	gMOP_OUT
;

2364 
	gOP_NULL_CHECK_START
: 
MOP_IN
(
OP_NULL_CHECK_START
);

2365 
GET_MEMNUM_INC
(
mem
, 
p
);

2366 
STACK_PUSH_NULL_CHECK_START
(
mem
, 
s
);

2367 
	gMOP_OUT
;

2371 
	gOP_NULL_CHECK_END
: 
MOP_IN
(
OP_NULL_CHECK_END
);

2373 
	gi¢uŒ
;

2375 
GET_MEMNUM_INC
(
mem
, 
p
);

2376 
STACK_NULL_CHECK
(
i¢uŒ
, 
mem
, 
s
);

2377 i‡(
	gi¢uŒ
) {

2378 #ifde‡
ONIG_DEBUG_MATCH


2379 
Ârötf
(
°dîr
, "NULL_CHECK_END: skip id:%d, s:%d\n",

2380 ()
mem
, ()
s
);

2382 
	gnuŒ_check_found
:

2384 *
p
++) {

2385 
OP_JUMP
:

2386 
OP_PUSH
:

2387 
p
 +
SIZE_RELADDR
;

2389 
	gOP_REPEAT_INC
:

2390 
OP_REPEAT_INC_NG
:

2391 
OP_REPEAT_INC_SG
:

2392 
OP_REPEAT_INC_NG_SG
:

2393 
p
 +
SIZE_MEMNUM
;

2396 
u√x≥˘ed_byãcode_îr‹
;

2401 
	gMOP_OUT
;

2405 #ifde‡
USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT


2406 
	gOP_NULL_CHECK_END_MEMST
: 
MOP_IN
(
OP_NULL_CHECK_END_MEMST
);

2408 
	gi¢uŒ
;

2410 
GET_MEMNUM_INC
(
mem
, 
p
);

2411 
STACK_NULL_CHECK_MEMST
(
i¢uŒ
, 
mem
, 
s
, 
ªg
);

2412 i‡(
	gi¢uŒ
) {

2413 #ifde‡
ONIG_DEBUG_MATCH


2414 
Ârötf
(
°dîr
, "NULL_CHECK_END_MEMST: skip id:%d, s:%d\n",

2415 ()
mem
, ()
s
);

2417 i‡(
	gi¢uŒ
 =-1Ë
Áû
;

2418 
	gnuŒ_check_found
;

2421 
	gMOP_OUT
;

2426 #ifde‡
USE_SUBEXP_CALL


2427 
	gOP_NULL_CHECK_END_MEMST_PUSH
:

2428 
MOP_IN
(
OP_NULL_CHECK_END_MEMST_PUSH
);

2430 
	gi¢uŒ
;

2432 
GET_MEMNUM_INC
(
mem
, 
p
);

2433 #ifde‡
USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT


2434 
STACK_NULL_CHECK_MEMST_REC
(
i¢uŒ
, 
mem
, 
s
, 
ªg
);

2436 
STACK_NULL_CHECK_REC
(
i¢uŒ
, 
mem
, 
s
);

2438 i‡(
	gi¢uŒ
) {

2439 #ifde‡
ONIG_DEBUG_MATCH


2440 
Ârötf
(
°dîr
, "NULL_CHECK_END_MEMST_PUSH: skip id:%d, s:%d\n",

2441 ()
mem
, ()
s
);

2443 i‡(
	gi¢uŒ
 =-1Ë
Áû
;

2444 
	gnuŒ_check_found
;

2447 
STACK_PUSH_NULL_CHECK_END
(
mem
);

2450 
	gMOP_OUT
;

2455 
	gOP_JUMP
: 
MOP_IN
(
OP_JUMP
);

2456 
GET_RELADDR_INC
(
addr
, 
p
);

2457 
	gp
 +
addr
;

2458 
	gMOP_OUT
;

2459 
	gCHECK_INTERRUPT_IN_MATCH_AT
;

2463 
	gOP_PUSH
: 
MOP_IN
(
OP_PUSH
);

2464 
GET_RELADDR_INC
(
addr
, 
p
);

2465 
STACK_PUSH_ALT
(
p
 + 
addr
, 
s
, 
•ªv
);

2466 
	gMOP_OUT
;

2470 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


2471 
	gOP_STATE_CHECK_PUSH
: 
MOP_IN
(
OP_STATE_CHECK_PUSH
);

2472 
GET_STATE_CHECK_NUM_INC
(
mem
, 
p
);

2473 
STATE_CHECK_VAL
(
scv
, 
mem
);

2474 i‡(
	gscv
Ë
	gÁû
;

2476 
GET_RELADDR_INC
(
addr
, 
p
);

2477 
STACK_PUSH_ALT_WITH_STATE_CHECK
(
p
 + 
addr
, 
s
, 
•ªv
, 
mem
);

2478 
	gMOP_OUT
;

2482 
	gOP_STATE_CHECK_PUSH_OR_JUMP
: 
MOP_IN
(
OP_STATE_CHECK_PUSH_OR_JUMP
);

2483 
GET_STATE_CHECK_NUM_INC
(
mem
, 
p
);

2484 
GET_RELADDR_INC
(
addr
, 
p
);

2485 
STATE_CHECK_VAL
(
scv
, 
mem
);

2486 i‡(
	gscv
) {

2487 
	gp
 +
addr
;

2490 
STACK_PUSH_ALT_WITH_STATE_CHECK
(
p
 + 
addr
, 
s
, 
•ªv
, 
mem
);

2492 
	gMOP_OUT
;

2496 
	gOP_STATE_CHECK
: 
MOP_IN
(
OP_STATE_CHECK
);

2497 
GET_STATE_CHECK_NUM_INC
(
mem
, 
p
);

2498 
STATE_CHECK_VAL
(
scv
, 
mem
);

2499 i‡(
	gscv
Ë
	gÁû
;

2501 
STACK_PUSH_STATE_CHECK
(
s
, 
mem
);

2502 
	gMOP_OUT
;

2507 
	gOP_POP
: 
MOP_IN
(
OP_POP
);

2508 
	gSTACK_POP_ONE
;

2509 
	gMOP_OUT
;

2513 
	gOP_PUSH_OR_JUMP_EXACT1
: 
MOP_IN
(
OP_PUSH_OR_JUMP_EXACT1
);

2514 
GET_RELADDR_INC
(
addr
, 
p
);

2515 i‡(*
	gp
 =*
s
 && 
DATA_ENSURE_CHECK1
) {

2516 
p
++;

2517 
STACK_PUSH_ALT
(
p
 + 
addr
, 
s
, 
•ªv
);

2518 
	gMOP_OUT
;

2521 
	gp
 +(
addr
 + 1);

2522 
	gMOP_OUT
;

2526 
	gOP_PUSH_IF_PEEK_NEXT
: 
MOP_IN
(
OP_PUSH_IF_PEEK_NEXT
);

2527 
GET_RELADDR_INC
(
addr
, 
p
);

2528 i‡(*
	gp
 =*
s
) {

2529 
p
++;

2530 
STACK_PUSH_ALT
(
p
 + 
addr
, 
s
, 
•ªv
);

2531 
	gMOP_OUT
;

2534 
	gp
++;

2535 
	gMOP_OUT
;

2539 
	gOP_REPEAT
: 
MOP_IN
(
OP_REPEAT
);

2541 
GET_MEMNUM_INC
(
mem
, 
p
);

2542 
GET_RELADDR_INC
(
addr
, 
p
);

2544 
STACK_ENSURE
(1);

2545 
	gª≥©_°k
[
mem
] = 
GET_STACK_INDEX
(
°k
);

2546 
STACK_PUSH_REPEAT
(
mem
, 
p
);

2548 i‡(
	gªg
->
	gª≥©_ønge
[
mem
].
	glowî
 == 0) {

2549 
STACK_PUSH_ALT
(
p
 + 
addr
, 
s
, 
•ªv
);

2552 
	gMOP_OUT
;

2556 
	gOP_REPEAT_NG
: 
MOP_IN
(
OP_REPEAT_NG
);

2558 
GET_MEMNUM_INC
(
mem
, 
p
);

2559 
GET_RELADDR_INC
(
addr
, 
p
);

2561 
STACK_ENSURE
(1);

2562 
	gª≥©_°k
[
mem
] = 
GET_STACK_INDEX
(
°k
);

2563 
STACK_PUSH_REPEAT
(
mem
, 
p
);

2565 i‡(
	gªg
->
	gª≥©_ønge
[
mem
].
	glowî
 == 0) {

2566 
STACK_PUSH_ALT
(
p
, 
s
, 
•ªv
);

2567 
	gp
 +
addr
;

2570 
	gMOP_OUT
;

2574 
	gOP_REPEAT_INC
: 
MOP_IN
(
OP_REPEAT_INC
);

2575 
GET_MEMNUM_INC
(
mem
, 
p
);

2576 
	gsi
 = 
ª≥©_°k
[
mem
];

2577 
	g°kp
 = 
STACK_AT
(
si
);

2579 
	gª≥©_öc
:

2580 
°kp
->
u
.
ª≥©
.
cou¡
++;

2581 i‡(
	g°kp
->
	gu
.
	gª≥©
.
	gcou¡
 >
ªg
->
ª≥©_ønge
[
mem
].
uµî
) {

2584 i‡(
°kp
->
u
.
ª≥©
.
cou¡
 >
ªg
->
ª≥©_ønge
[
mem
].
lowî
) {

2585 
STACK_PUSH_ALT
(
p
, 
s
, 
•ªv
);

2586 
	gp
 = 
STACK_AT
(
si
)->
u
.
ª≥©
.
pcode
;

2589 
	gp
 = 
°kp
->
u
.
ª≥©
.
pcode
;

2591 
STACK_PUSH_REPEAT_INC
(
si
);

2592 
	gMOP_OUT
;

2593 
	gCHECK_INTERRUPT_IN_MATCH_AT
;

2597 
	gOP_REPEAT_INC_SG
: 
MOP_IN
(
OP_REPEAT_INC_SG
);

2598 
GET_MEMNUM_INC
(
mem
, 
p
);

2599 
STACK_GET_REPEAT
(
mem
, 
°kp
);

2600 
	gsi
 = 
GET_STACK_INDEX
(
°kp
);

2601 
	gª≥©_öc
;

2604 
	gOP_REPEAT_INC_NG
: 
MOP_IN
(
OP_REPEAT_INC_NG
);

2605 
GET_MEMNUM_INC
(
mem
, 
p
);

2606 
	gsi
 = 
ª≥©_°k
[
mem
];

2607 
	g°kp
 = 
STACK_AT
(
si
);

2609 
	gª≥©_öc_ng
:

2610 
°kp
->
u
.
ª≥©
.
cou¡
++;

2611 i‡(
	g°kp
->
	gu
.
	gª≥©
.
	gcou¡
 < 
	gªg
->
	gª≥©_ønge
[
mem
].
	guµî
) {

2612 i‡(
	g°kp
->
	gu
.
	gª≥©
.
	gcou¡
 >
ªg
->
ª≥©_ønge
[
mem
].
lowî
) {

2613 
UCh¨
* 
pcode
 = 
°kp
->
u
.
ª≥©
.pcode;

2615 
STACK_PUSH_REPEAT_INC
(
si
);

2616 
STACK_PUSH_ALT
(
pcode
, 
s
, 
•ªv
);

2619 
	gp
 = 
°kp
->
u
.
ª≥©
.
pcode
;

2620 
STACK_PUSH_REPEAT_INC
(
si
);

2623 i‡(
	g°kp
->
	gu
.
	gª≥©
.
	gcou¡
 =
ªg
->
ª≥©_ønge
[
mem
].
uµî
) {

2624 
STACK_PUSH_REPEAT_INC
(
si
);

2626 
	gMOP_OUT
;

2627 
	gCHECK_INTERRUPT_IN_MATCH_AT
;

2631 
	gOP_REPEAT_INC_NG_SG
: 
MOP_IN
(
OP_REPEAT_INC_NG_SG
);

2632 
GET_MEMNUM_INC
(
mem
, 
p
);

2633 
STACK_GET_REPEAT
(
mem
, 
°kp
);

2634 
	gsi
 = 
GET_STACK_INDEX
(
°kp
);

2635 
	gª≥©_öc_ng
;

2638 
	gOP_PUSH_POS
: 
MOP_IN
(
OP_PUSH_POS
);

2639 
STACK_PUSH_POS
(
s
, 
•ªv
);

2640 
	gMOP_OUT
;

2644 
	gOP_POP_POS
: 
MOP_IN
(
OP_POP_POS
);

2646 
STACK_POS_END
(
°kp
);

2647 
	gs
 = 
°kp
->
u
.
°©e
.
p°r
;

2648 
	g•ªv
 = 
°kp
->
u
.
°©e
.
p°r_¥ev
;

2650 
	gMOP_OUT
;

2654 
	gOP_PUSH_POS_NOT
: 
MOP_IN
(
OP_PUSH_POS_NOT
);

2655 
GET_RELADDR_INC
(
addr
, 
p
);

2656 
STACK_PUSH_POS_NOT
(
p
 + 
addr
, 
s
, 
•ªv
);

2657 
	gMOP_OUT
;

2661 
	gOP_FAIL_POS
: 
MOP_IN
(
OP_FAIL_POS
);

2662 
	gSTACK_POP_TIL_POS_NOT
;

2663 
	gÁû
;

2666 
	gOP_PUSH_STOP_BT
: 
MOP_IN
(
OP_PUSH_STOP_BT
);

2667 
	gSTACK_PUSH_STOP_BT
;

2668 
	gMOP_OUT
;

2672 
	gOP_POP_STOP_BT
: 
MOP_IN
(
OP_POP_STOP_BT
);

2673 
	gSTACK_STOP_BT_END
;

2674 
	gMOP_OUT
;

2678 
	gOP_LOOK_BEHIND
: 
MOP_IN
(
OP_LOOK_BEHIND
);

2679 
GET_LENGTH_INC
(
éí
, 
p
);

2680 
	gs
 = (
UCh¨
* )
ONIGENC_STEP_BACK
(
ícode
, 
°r
, 
s
, ()
éí
);

2681 i‡(
IS_NULL
(
s
)Ë
	gÁû
;

2682 
	g•ªv
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
ícode
, 
°r
, 
s
);

2683 
	gMOP_OUT
;

2687 
	gOP_PUSH_LOOK_BEHIND_NOT
: 
MOP_IN
(
OP_PUSH_LOOK_BEHIND_NOT
);

2688 
GET_RELADDR_INC
(
addr
, 
p
);

2689 
GET_LENGTH_INC
(
éí
, 
p
);

2690 
	gq
 = (
UCh¨
* )
ONIGENC_STEP_BACK
(
ícode
, 
°r
, 
s
, ()
éí
);

2691 i‡(
IS_NULL
(
q
)) {

2694 
	gp
 +
addr
;

2698 
STACK_PUSH_LOOK_BEHIND_NOT
(
p
 + 
addr
, 
s
, 
•ªv
);

2699 
	gs
 = 
q
;

2700 
	g•ªv
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
ícode
, 
°r
, 
s
);

2702 
	gMOP_OUT
;

2706 
	gOP_FAIL_LOOK_BEHIND_NOT
: 
MOP_IN
(
OP_FAIL_LOOK_BEHIND_NOT
);

2707 
	gSTACK_POP_TIL_LOOK_BEHIND_NOT
;

2708 
	gÁû
;

2711 #ifde‡
USE_SUBEXP_CALL


2712 
	gOP_CALL
: 
MOP_IN
(
OP_CALL
);

2713 
GET_ABSADDR_INC
(
addr
, 
p
);

2714 
STACK_PUSH_CALL_FRAME
(
p
);

2715 
	gp
 = 
ªg
->
p
 + 
addr
;

2716 
	gMOP_OUT
;

2720 
	gOP_RETURN
: 
MOP_IN
(
OP_RETURN
);

2721 
STACK_RETURN
(
p
);

2722 
	gSTACK_PUSH_RETURN
;

2723 
	gMOP_OUT
;

2728 
	gOP_FINISH
:

2729 
föish
;

2732 
	gÁû
:

2733 
MOP_OUT
;

2735 
	gOP_FAIL
: 
MOP_IN
(
OP_FAIL
);

2736 
	gSTACK_POP
;

2737 
	gp
 = 
°k
->
u
.
°©e
.
pcode
;

2738 
	gs
 = 
°k
->
u
.
°©e
.
p°r
;

2739 
	g•ªv
 = 
°k
->
u
.
°©e
.
p°r_¥ev
;

2741 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


2742 i‡(
	g°k
->
	gu
.
	g°©e
.
	g°©e_check
 != 0) {

2743 
°k
->
ty≥
 = 
STK_STATE_CHECK_MARK
;

2744 
	g°k
++;

2748 
	gMOP_OUT
;

2753 
byãcode_îr‹
;

2756 
	g•ªv
 = 
sbegö
;

2759 
	gföish
:

2760 
STACK_SAVE
;

2761  
	gbe°_Àn
;

2763 #ifde‡
ONIG_DEBUG


2764 
	g°ack_îr‹
:

2765 
STACK_SAVE
;

2766  
	gONIGERR_STACK_BUG
;

2769 
	gbyãcode_îr‹
:

2770 
STACK_SAVE
;

2771  
	gONIGERR_UNDEFINED_BYTECODE
;

2773 
	gu√x≥˘ed_byãcode_îr‹
:

2774 
STACK_SAVE
;

2775  
	gONIGERR_UNEXPECTED_BYTECODE
;

2779 
UCh¨
*

2780 
¶ow_£¨ch
(
OnigEncodög
 
íc
, 
UCh¨
* 
èrgë
, UCh¨* 
èrgë_íd
,

2781 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
ãxt_íd
, UCh¨* 
ãxt_ønge
)

2783 
UCh¨
 *
	gt
, *
	gp
, *
	gs
, *
	gíd
;

2785 
	gíd
 = (
UCh¨
* )
ãxt_íd
;

2786 
	gíd
 -
èrgë_íd
 - 
èrgë
 - 1;

2787 i‡(
	gíd
 > 
	gãxt_ønge
)

2788 
	gíd
 = 
ãxt_ønge
;

2790 
	gs
 = (
UCh¨
* )
ãxt
;

2792 
	gs
 < 
	gíd
) {

2793 i‡(*
	gs
 =*
èrgë
) {

2794 
p
 = 
s
 + 1;

2795 
	gt
 = 
èrgë
 + 1;

2796 
	gt
 < 
	gèrgë_íd
) {

2797 i‡(*
	gt
 !*
p
++)

2799 
	gt
++;

2801 i‡(
	gt
 =
èrgë_íd
)

2802  
s
;

2804 
	gs
 +
í˛í
(
íc
, 
s
);

2807  (
	gUCh¨
* )
	gNULL
;

2811 
°r_lowî_ˇ£_m©ch
(
OnigEncodög
 
íc
, 
ˇ£_fﬁd_Êag
,

2812 c⁄° 
UCh¨
* 
t
, c⁄° UCh¨* 
ãnd
,

2813 c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

2815 
	glowÀn
;

2816 
UCh¨
 *
	gq
, 
	glowbuf
[
ONIGENC_MBC_CASE_FOLD_MAXLEN
];

2818 
	gt
 < 
	gãnd
) {

2819 
	glowÀn
 = 
ONIGENC_MBC_CASE_FOLD
(
íc
, 
ˇ£_fﬁd_Êag
, &
p
, 
íd
, 
lowbuf
);

2820 
	gq
 = 
lowbuf
;

2821 
	glowÀn
 > 0) {

2822 i‡(*
	gt
++ !*
q
++)  0;

2823 
	glowÀn
--;

2830 
UCh¨
*

2831 
¶ow_£¨ch_ic
(
OnigEncodög
 
íc
, 
ˇ£_fﬁd_Êag
,

2832 
UCh¨
* 
èrgë
, UCh¨* 
èrgë_íd
,

2833 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
ãxt_íd
, UCh¨* 
ãxt_ønge
)

2835 
UCh¨
 *
	gs
, *
	gíd
;

2837 
	gíd
 = (
UCh¨
* )
ãxt_íd
;

2838 
	gíd
 -
èrgë_íd
 - 
èrgë
 - 1;

2839 i‡(
	gíd
 > 
	gãxt_ønge
)

2840 
	gíd
 = 
ãxt_ønge
;

2842 
	gs
 = (
UCh¨
* )
ãxt
;

2844 
	gs
 < 
	gíd
) {

2845 i‡(
°r_lowî_ˇ£_m©ch
(
íc
, 
ˇ£_fﬁd_Êag
, 
èrgë
, 
èrgë_íd
,

2846 
s
, 
ãxt_íd
))

2847  
	gs
;

2849 
	gs
 +
í˛í
(
íc
, 
s
);

2852  (
	gUCh¨
* )
	gNULL
;

2855 
UCh¨
*

2856 
¶ow_£¨ch_backw¨d
(
OnigEncodög
 
íc
, 
UCh¨
* 
èrgë
, UCh¨* 
èrgë_íd
,

2857 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
adju°_ãxt
,

2858 c⁄° 
UCh¨
* 
ãxt_íd
, c⁄° UCh¨* 
ãxt_°¨t
)

2860 
UCh¨
 *
	gt
, *
	gp
, *
	gs
;

2862 
	gs
 = (
UCh¨
* )
ãxt_íd
;

2863 
	gs
 -(
èrgë_íd
 - 
èrgë
);

2864 i‡(
	gs
 > 
	gãxt_°¨t
)

2865 
	gs
 = (
UCh¨
* )
ãxt_°¨t
;

2867 
	gs
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
adju°_ãxt
, 
s
);

2869 
	gs
 >
ãxt
) {

2870 i‡(*
s
 =*
èrgë
) {

2871 
p
 = 
s
 + 1;

2872 
	gt
 = 
èrgë
 + 1;

2873 
	gt
 < 
	gèrgë_íd
) {

2874 i‡(*
	gt
 !*
p
++)

2876 
	gt
++;

2878 i‡(
	gt
 =
èrgë_íd
)

2879  
s
;

2881 
	gs
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
íc
, 
adju°_ãxt
, 
s
);

2884  (
	gUCh¨
* )
	gNULL
;

2887 
UCh¨
*

2888 
¶ow_£¨ch_backw¨d_ic
(
OnigEncodög
 
íc
, 
ˇ£_fﬁd_Êag
,

2889 
UCh¨
* 
èrgë
, UCh¨* 
èrgë_íd
,

2890 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
adju°_ãxt
,

2891 c⁄° 
UCh¨
* 
ãxt_íd
, c⁄° UCh¨* 
ãxt_°¨t
)

2893 
UCh¨
 *
	gs
;

2895 
	gs
 = (
UCh¨
* )
ãxt_íd
;

2896 
	gs
 -(
èrgë_íd
 - 
èrgë
);

2897 i‡(
	gs
 > 
	gãxt_°¨t
)

2898 
	gs
 = (
UCh¨
* )
ãxt_°¨t
;

2900 
	gs
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
íc
, 
adju°_ãxt
, 
s
);

2902 
	gs
 >
ãxt
) {

2903 i‡(
°r_lowî_ˇ£_m©ch
(
íc
, 
ˇ£_fﬁd_Êag
,

2904 
èrgë
, 
èrgë_íd
, 
s
, 
ãxt_íd
))

2905  
s
;

2907 
	gs
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
íc
, 
adju°_ãxt
, 
s
);

2910  (
	gUCh¨
* )
	gNULL
;

2913 
UCh¨
*

2914 
bm_£¨ch_nŸªv
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
èrgë
, c⁄° UCh¨* 
èrgë_íd
,

2915 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
ãxt_íd
,

2916 c⁄° 
UCh¨
* 
ãxt_ønge
)

2918 c⁄° 
UCh¨
 *
	gs
, *
	g£
, *
	gt
, *
	gp
, *
	gíd
;

2919 c⁄° 
UCh¨
 *
	gèû
;

2920 
	gskù
, 
	géí1
;

2922 #ifde‡
ONIG_DEBUG_SEARCH


2923 
Ârötf
(
°dîr
, "bm_search_notrev:Åext: %d,Åext_end: %d,Åext_range: %d\n",

2924 ()
ãxt
, ()
ãxt_íd
, ()
ãxt_ønge
);

2927 
	gèû
 = 
èrgë_íd
 - 1;

2928 
	géí1
 = 
èû
 - 
èrgë
;

2929 
	gíd
 = 
ãxt_ønge
;

2930 i‡(
	gíd
 + 
	géí1
 > 
	gãxt_íd
)

2931 
	gíd
 = 
ãxt_íd
 - 
éí1
;

2933 
	gs
 = 
ãxt
;

2935 i‡(
IS_NULL
(
ªg
->
öt_m≠
)) {

2936 
	gs
 < 
	gíd
) {

2937 
	gp
 = 
£
 = 
s
 + 
éí1
;

2938 
	gt
 = 
èû
;

2939 *
	gp
 =*
t
) {

2940 i‡(
t
 =
èrgë
Ë (
UCh¨
* )
s
;

2941 
	gp
--; 
	gt
--;

2943 
	gskù
 = 
ªg
->
m≠
[*
£
];

2944 
	gt
 = 
s
;

2946 
	gs
 +
í˛í
(
ªg
->
íc
, 
s
);

2947 } (
	gs
 - 
	gt
Ë< 
	gskù
 && s < 
	gíd
);

2951 
	gs
 < 
	gíd
) {

2952 
	gp
 = 
£
 = 
s
 + 
éí1
;

2953 
	gt
 = 
èû
;

2954 *
	gp
 =*
t
) {

2955 i‡(
t
 =
èrgë
Ë (
UCh¨
* )
s
;

2956 
	gp
--; 
	gt
--;

2958 
	gskù
 = 
ªg
->
öt_m≠
[*
£
];

2959 
	gt
 = 
s
;

2961 
	gs
 +
í˛í
(
ªg
->
íc
, 
s
);

2962 } (
	gs
 - 
	gt
Ë< 
	gskù
 && s < 
	gíd
);

2966  (
	gUCh¨
* )
	gNULL
;

2969 
UCh¨
*

2970 
bm_£¨ch
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
èrgë
, c⁄° UCh¨* 
èrgë_íd
,

2971 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
ãxt_íd
, c⁄° UCh¨* 
ãxt_ønge
)

2973 c⁄° 
UCh¨
 *
	gs
, *
	gt
, *
	gp
, *
	gíd
;

2974 c⁄° 
UCh¨
 *
	gèû
;

2976 
	gíd
 = 
ãxt_ønge
 + (
èrgë_íd
 - 
èrgë
) - 1;

2977 i‡(
	gíd
 > 
	gãxt_íd
)

2978 
	gíd
 = 
ãxt_íd
;

2980 
	gèû
 = 
èrgë_íd
 - 1;

2981 
	gs
 = 
ãxt
 + (
èrgë_íd
 - 
èrgë
) - 1;

2982 i‡(
IS_NULL
(
ªg
->
öt_m≠
)) {

2983 
	gs
 < 
	gíd
) {

2984 
	gp
 = 
s
;

2985 
	gt
 = 
èû
;

2986 *
	gp
 =*
t
) {

2987 i‡(
t
 =
èrgë
Ë (
UCh¨
* )
p
;

2988 
	gp
--; 
	gt
--;

2990 
	gs
 +
ªg
->
m≠
[*
s
];

2994 
	gs
 < 
	gíd
) {

2995 
	gp
 = 
s
;

2996 
	gt
 = 
èû
;

2997 *
	gp
 =*
t
) {

2998 i‡(
t
 =
èrgë
Ë (
UCh¨
* )
p
;

2999 
	gp
--; 
	gt
--;

3001 
	gs
 +
ªg
->
öt_m≠
[*
s
];

3004  (
	gUCh¨
* )
	gNULL
;

3007 #ifde‡
USE_INT_MAP_BACKWARD


3009 
£t_bm_backw¨d_skù
(
UCh¨
* 
s
, UCh¨* 
íd
, 
OnigEncodög
 
íc
 
ARG_UNUSED
,

3010 ** 
skù
)

3013 
	gi
, 
	gÀn
;

3015 i‡(
IS_NULL
(*
skù
)) {

3016 *
	gskù
 = (* )
xmÆloc
((Ë* 
ONIG_CHAR_TABLE_SIZE
);

3017 i‡(
IS_NULL
(*
skù
)Ë 
	gONIGERR_MEMORY
;

3020 
	gÀn
 = 
íd
 - 
s
;

3021 
	gi
 = 0; i < 
	gONIG_CHAR_TABLE_SIZE
; i++)

3022 (*
	gskù
)[
i
] = 
Àn
;

3024 
	gi
 = 
Àn
 - 1; i > 0; i--)

3025 (*
	gskù
)[
s
[
i
]] = i;

3030 
UCh¨
*

3031 
bm_£¨ch_backw¨d
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
èrgë
, c⁄° UCh¨* 
èrgë_íd
,

3032 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
adju°_ãxt
,

3033 c⁄° 
UCh¨
* 
ãxt_íd
, c⁄° UCh¨* 
ãxt_°¨t
)

3035 c⁄° 
UCh¨
 *
	gs
, *
	gt
, *
	gp
;

3037 
	gs
 = 
ãxt_íd
 - (
èrgë_íd
 - 
èrgë
);

3038 i‡(
	gãxt_°¨t
 < 
	gs
)

3039 
	gs
 = 
ãxt_°¨t
;

3041 
	gs
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
, 
adju°_ãxt
, 
s
);

3043 
	gs
 >
ãxt
) {

3044 
p
 = 
s
;

3045 
	gt
 = 
èrgë
;

3046 
	gt
 < 
	gèrgë_íd
 && *
	gp
 =*
t
) {

3047 
p
++; 
	gt
++;

3049 i‡(
	gt
 =
èrgë_íd
)

3050  (
UCh¨
* )
s
;

3052 
	gs
 -
ªg
->
öt_m≠_backw¨d
[*
s
];

3053 
	gs
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
, 
adju°_ãxt
, 
s
);

3056  (
	gUCh¨
* )
	gNULL
;

3060 
UCh¨
*

3061 
m≠_£¨ch
(
OnigEncodög
 
íc
, 
UCh¨
 
m≠
[],

3062 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
ãxt_ønge
)

3064 c⁄° 
UCh¨
 *
	gs
 = 
ãxt
;

3066 
	gs
 < 
	gãxt_ønge
) {

3067 i‡(
	gm≠
[*
s
]Ë (
	gUCh¨
* )
	gs
;

3069 
	gs
 +
í˛í
(
íc
, 
s
);

3071  (
	gUCh¨
* )
	gNULL
;

3074 
UCh¨
*

3075 
m≠_£¨ch_backw¨d
(
OnigEncodög
 
íc
, 
UCh¨
 
m≠
[],

3076 c⁄° 
UCh¨
* 
ãxt
, c⁄° UCh¨* 
adju°_ãxt
,

3077 c⁄° 
UCh¨
* 
ãxt_°¨t
)

3079 c⁄° 
UCh¨
 *
	gs
 = 
ãxt_°¨t
;

3081 
	gs
 >
ãxt
) {

3082 i‡(
m≠
[*
s
]Ë (
UCh¨
* )s;

3084 
	gs
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
íc
, 
adju°_ãxt
, 
s
);

3086  (
	gUCh¨
* )
	gNULL
;

3090 
⁄ig_m©ch
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
, c⁄° UCh¨* 
©
, 
OnigRegi⁄
* 
ªgi⁄
,

3091 
OnigO±i⁄Ty≥
 
›ti⁄
)

3093 
r
;

3094 
UCh¨
 *
¥ev
;

3095 
OnigM©chArg
 
mß
;

3097 
MATCH_ARG_INIT
(
mß
, 
ªg
, 
›ti⁄
, 
ªgi⁄
, 
©
);

3098 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


3100 
off£t
 = 
©
 - 
°r
;

3101 
STATE_CHECK_BUFF_INIT
(
mß
, 
íd
 - 
°r
, 
off£t
, 
ªg
->
num_comb_exp_check
);

3105 i‡(
ªgi⁄


3106 #ifde‡
USE_POSIX_API_REGION_OPTION


3107 && !
IS_POSIX_REGION
(
›ti⁄
)

3110 
r
 = 
⁄ig_ªgi⁄_ªsize_˛ór
(
ªgi⁄
, 
ªg
->
num_mem
 + 1);

3113 
r
 = 0;

3115 i‡(
r
 == 0) {

3116 i‡(
ONIG_IS_OPTION_ON
(
›ti⁄
, 
ONIG_OPTION_CHECK_VALIDITY_OF_STRING
)) {

3117 i‡(! 
ONIGENC_IS_VALID_MBC_STRING
(
ªg
->
íc
, 
°r
, 
íd
)) {

3118 
r
 = 
ONIGERR_INVALID_WIDE_CHAR_VALUE
;

3119 
íd
;

3123 
¥ev
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
°r
, 
©
);

3124 
r
 = 
m©ch_©
(
ªg
, 
°r
, 
íd
,

3125 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


3126 
íd
,

3128 
©
, 
¥ev
, &
mß
);

3131 
íd
:

3132 
MATCH_ARG_FREE
(
mß
);

3133  
r
;

3137 
f‹w¨d_£¨ch_ønge
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
, UCh¨* 
s
,

3138 
UCh¨
* 
ønge
, UCh¨** 
low
, UCh¨** 
high
, UCh¨** 
low_¥ev
)

3140 
UCh¨
 *
p
, *
µªv
 = (UCh¨* )
NULL
;

3142 #ifde‡
ONIG_DEBUG_SEARCH


3143 
Ârötf
(
°dîr
, "forward_search_range: str: %d,Énd: %d, s: %d,Ñange: %d\n",

3144 ()
°r
, ()
íd
, ()
s
, ()
ønge
);

3147 
p
 = 
s
;

3148 i‡(
ªg
->
dmö
 > 0) {

3149 i‡(
ONIGENC_IS_SINGLEBYTE
(
ªg
->
íc
)) {

3150 
p
 +
ªg
->
dmö
;

3153 
UCh¨
 *
q
 = 
p
 + 
ªg
->
dmö
;

3154 
p
 < 
q
Ë∞+
í˛í
(
ªg
->
íc
,Ö);

3158 
ªåy
:

3159 
ªg
->
›timize
) {

3160 
ONIG_OPTIMIZE_EXACT
:

3161 
p
 = 
¶ow_£¨ch
(
ªg
->
íc
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
,Ö, 
íd
, 
ønge
);

3163 
ONIG_OPTIMIZE_EXACT_IC
:

3164 
p
 = 
¶ow_£¨ch_ic
(
ªg
->
íc
,Ñeg->
ˇ£_fﬁd_Êag
,

3165 
ªg
->
exa˘
,Ñeg->
exa˘_íd
, 
p
, 
íd
, 
ønge
);

3168 
ONIG_OPTIMIZE_EXACT_BM
:

3169 
p
 = 
bm_£¨ch
(
ªg
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
,Ö, 
íd
, 
ønge
);

3172 
ONIG_OPTIMIZE_EXACT_BM_NOT_REV
:

3173 
p
 = 
bm_£¨ch_nŸªv
(
ªg
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
,Ö, 
íd
, 
ønge
);

3176 
ONIG_OPTIMIZE_MAP
:

3177 
p
 = 
m≠_£¨ch
(
ªg
->
íc
,Ñeg->
m≠
,Ö, 
ønge
);

3181 i‡(
p
 &&Ö < 
ønge
) {

3182 i‡(
p
 - 
ªg
->
dmö
 < 
s
) {

3183 
ªåy_g©e
:

3184 
µªv
 = 
p
;

3185 
p
 +
í˛í
(
ªg
->
íc
,Ö);

3186 
ªåy
;

3189 i‡(
ªg
->
sub_™ch‹
) {

3190 
UCh¨
* 
¥ev
;

3192 
ªg
->
sub_™ch‹
) {

3193 
ANCHOR_BEGIN_LINE
:

3194 i‡(!
ON_STR_BEGIN
(
p
)) {

3195 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
,

3196 (
µªv
 ?Ö¥ev : 
°r
), 
p
);

3197 i‡(!
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
¥ev
, 
íd
))

3198 
ªåy_g©e
;

3202 
ANCHOR_END_LINE
:

3203 i‡(
ON_STR_END
(
p
)) {

3204 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


3205 
¥ev
 = (
UCh¨
* )
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
,

3206 (
µªv
 ?Ö¥ev : 
°r
), 
p
);

3207 i‡(
¥ev
 && 
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
,Öªv, 
íd
))

3208 
ªåy_g©e
;

3211 i‡(! 
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
p
, 
íd
)

3212 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


3213 && ! 
ONIGENC_IS_MBC_CRNL
(
ªg
->
íc
, 
p
, 
íd
)

3216 
ªåy_g©e
;

3221 i‡(
ªg
->
dmax
 == 0) {

3222 *
low
 = 
p
;

3223 i‡(
low_¥ev
) {

3224 i‡(*
low
 > 
s
)

3225 *
low_¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
s
, 
p
);

3227 *
low_¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
,

3228 (
µªv
 ?Ö¥ev : 
°r
), 
p
);

3232 i‡(
ªg
->
dmax
 !
ONIG_INFINITE_DISTANCE
) {

3233 *
low
 = 
p
 - 
ªg
->
dmax
;

3234 i‡(*
low
 > 
s
) {

3235 *
low
 = 
⁄igíc_gë_right_adju°_ch¨_hód_wôh_¥ev
(
ªg
->
íc
, 
s
,

3236 *
low
, (c⁄° 
UCh¨
** )
low_¥ev
);

3237 i‡(
low_¥ev
 && 
IS_NULL
(*low_prev))

3238 *
low_¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
,

3239 (
µªv
 ?Ö¥ev : 
s
), *
low
);

3242 i‡(
low_¥ev
)

3243 *
low_¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
,

3244 (
µªv
 ?Ö¥ev : 
°r
), *
low
);

3249 *
high
 = 
p
 - 
ªg
->
dmö
;

3251 #ifde‡
ONIG_DEBUG_SEARCH


3252 
Ârötf
(
°dîr
,

3254 ()(*
low
 - 
°r
), ()(*
high
 - så), 
ªg
->
dmö
,Ñeg->
dmax
);

3263 
	#BM_BACKWARD_SEARCH_LENGTH_THRESHOLD
 100

	)

3266 
backw¨d_£¨ch_ønge
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
,

3267 
UCh¨
* 
s
, c⁄° UCh¨* 
ønge
, UCh¨* 
adjønge
,

3268 
UCh¨
** 
low
, UCh¨** 
high
)

3270 
UCh¨
 *
p
;

3272 
ønge
 +
ªg
->
dmö
;

3273 
p
 = 
s
;

3275 
ªåy
:

3276 
ªg
->
›timize
) {

3277 
ONIG_OPTIMIZE_EXACT
:

3278 
exa˘_mëhod
:

3279 
p
 = 
¶ow_£¨ch_backw¨d
(
ªg
->
íc
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
,

3280 
ønge
, 
adjønge
, 
íd
, 
p
);

3283 
ONIG_OPTIMIZE_EXACT_IC
:

3284 
p
 = 
¶ow_£¨ch_backw¨d_ic
(
ªg
->
íc
,Ñeg->
ˇ£_fﬁd_Êag
,

3285 
ªg
->
exa˘
,Ñeg->
exa˘_íd
,

3286 
ønge
, 
adjønge
, 
íd
, 
p
);

3289 
ONIG_OPTIMIZE_EXACT_BM
:

3290 
ONIG_OPTIMIZE_EXACT_BM_NOT_REV
:

3291 #ifde‡
USE_INT_MAP_BACKWARD


3292 i‡(
IS_NULL
(
ªg
->
öt_m≠_backw¨d
)) {

3293 
r
;

3295 i‡(
s
 - 
ønge
 < 
BM_BACKWARD_SEARCH_LENGTH_THRESHOLD
)

3296 
exa˘_mëhod
;

3298 
r
 = 
£t_bm_backw¨d_skù
(
ªg
->
exa˘
,Ñeg->
exa˘_íd
,Ñeg->
íc
,

3299 &(
ªg
->
öt_m≠_backw¨d
));

3300 i‡(
r
) Ñ;

3302 
p
 = 
bm_£¨ch_backw¨d
(
ªg
,Ñeg->
exa˘
,Ñeg->
exa˘_íd
, 
ønge
, 
adjønge
,

3303 
íd
, 
p
);

3305 
exa˘_mëhod
;

3309 
ONIG_OPTIMIZE_MAP
:

3310 
p
 = 
m≠_£¨ch_backw¨d
(
ªg
->
íc
,Ñeg->
m≠
, 
ønge
, 
adjønge
,Ö);

3314 i‡(
p
) {

3315 i‡(
ªg
->
sub_™ch‹
) {

3316 
UCh¨
* 
¥ev
;

3318 
ªg
->
sub_™ch‹
) {

3319 
ANCHOR_BEGIN_LINE
:

3320 i‡(!
ON_STR_BEGIN
(
p
)) {

3321 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
°r
, 
p
);

3322 i‡(!
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
¥ev
, 
íd
)) {

3323 
p
 = 
¥ev
;

3324 
ªåy
;

3329 
ANCHOR_END_LINE
:

3330 i‡(
ON_STR_END
(
p
)) {

3331 #i‚de‡
USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


3332 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
adjønge
, 
p
);

3333 i‡(
IS_NULL
(
¥ev
)Ë
Áû
;

3334 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
¥ev
, 
íd
)) {

3335 
p
 = 
¥ev
;

3336 
ªåy
;

3340 i‡(! 
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
p
, 
íd
)

3341 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


3342 && ! 
ONIGENC_IS_MBC_CRNL
(
ªg
->
íc
, 
p
, 
íd
)

3345 
p
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
adjønge
,Ö);

3346 i‡(
IS_NULL
(
p
)Ë
Áû
;

3347 
ªåy
;

3354 i‡(
ªg
->
dmax
 !
ONIG_INFINITE_DISTANCE
) {

3355 *
low
 = 
p
 - 
ªg
->
dmax
;

3356 *
high
 = 
p
 - 
ªg
->
dmö
;

3357 *
high
 = 
⁄igíc_gë_right_adju°_ch¨_hód
(
ªg
->
íc
, 
adjønge
, *high);

3360 #ifde‡
ONIG_DEBUG_SEARCH


3361 
Ârötf
(
°dîr
, "backward_search_range:Üow: %d, high: %d\n",

3362 ()(*
low
 - 
°r
), ()(*
high
 - str));

3367 
Áû
:

3368 #ifde‡
ONIG_DEBUG_SEARCH


3369 
Ârötf
(
°dîr
, "backward_search_range: fail.\n");

3376 
⁄ig_£¨ch
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
,

3377 c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
ønge
, 
OnigRegi⁄
* 
ªgi⁄
, 
OnigO±i⁄Ty≥
 
›ti⁄
)

3379 
r
;

3380 
UCh¨
 *
s
, *
¥ev
;

3381 
OnigM©chArg
 
mß
;

3382 c⁄° 
UCh¨
 *
‹ig_°¨t
 = 
°¨t
;

3383 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


3384 c⁄° 
UCh¨
 *
‹ig_ønge
 = 
ønge
;

3387 #ifde‡
ONIG_DEBUG_SEARCH


3388 
Ârötf
(
°dîr
,

3390 ()
°r
, ()(
íd
 - så), ()(
°¨t
 - så), ()(
ønge
 - str));

3393 i‡(
ªgi⁄


3394 #ifde‡
USE_POSIX_API_REGION_OPTION


3395 && !
IS_POSIX_REGION
(
›ti⁄
)

3398 
r
 = 
⁄ig_ªgi⁄_ªsize_˛ór
(
ªgi⁄
, 
ªg
->
num_mem
 + 1);

3399 i‡(
r
Ë
föish_no_mß
;

3402 i‡(
°¨t
 > 
íd
 || sèπ < 
°r
Ë
mism©ch_no_mß
;

3404 i‡(
ONIG_IS_OPTION_ON
(
›ti⁄
, 
ONIG_OPTION_CHECK_VALIDITY_OF_STRING
)) {

3405 i‡(! 
ONIGENC_IS_VALID_MBC_STRING
(
ªg
->
íc
, 
°r
, 
íd
)) {

3406 
r
 = 
ONIGERR_INVALID_WIDE_CHAR_VALUE
;

3407 
föish_no_mß
;

3412 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


3413 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


3414 
	#MATCH_AND_RETURN_CHECK
(
uµî_ønge
) \

3415 
r
 = 
	`m©ch_©
(
ªg
, 
°r
, 
íd
, (
uµî_ønge
), 
s
, 
¥ev
, &
mß
); \

3416 i‡(
r
 !
ONIG_MISMATCH
) {\

3417 i‡(
r
 >= 0) {\

3418 i‡(! 
	`IS_FIND_LONGEST
(
ªg
->
›ti⁄s
)) {\

3419 
m©ch
;\

3422 
föish
; \

3423 }

	)

3425 
	#MATCH_AND_RETURN_CHECK
(
uµî_ønge
) \

3426 
r
 = 
	`m©ch_©
(
ªg
, 
°r
, 
íd
, (
uµî_ønge
), 
s
, 
¥ev
, &
mß
); \

3427 i‡(
r
 !
ONIG_MISMATCH
) {\

3428 i‡(
r
 >= 0) {\

3429 
m©ch
;\

3431 
föish
; \

3432 }

	)

3435 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


3436 
	#MATCH_AND_RETURN_CHECK
(
n⁄e
) \

3437 
r
 = 
	`m©ch_©
(
ªg
, 
°r
, 
íd
, 
s
, 
¥ev
, &
mß
);\

3438 i‡(
r
 !
ONIG_MISMATCH
) {\

3439 i‡(
r
 >= 0) {\

3440 i‡(! 
	`IS_FIND_LONGEST
(
ªg
->
›ti⁄s
)) {\

3441 
m©ch
;\

3444 
föish
; \

3445 }

	)

3447 
	#MATCH_AND_RETURN_CHECK
(
n⁄e
) \

3448 
r
 = 
	`m©ch_©
(
ªg
, 
°r
, 
íd
, 
s
, 
¥ev
, &
mß
);\

3449 i‡(
r
 !
ONIG_MISMATCH
) {\

3450 i‡(
r
 >= 0) {\

3451 
m©ch
;\

3453 
föish
; \

3454 }

	)

3460 i‡(
ªg
->
™ch‹
 !0 && 
°r
 < 
íd
) {

3461 
UCh¨
 *
mö_£mi_íd
, *
max_£mi_íd
;

3463 i‡(
ªg
->
™ch‹
 & 
ANCHOR_BEGIN_POSITION
) {

3465 
begö_posôi⁄
:

3466 i‡(
ønge
 > 
°¨t
)

3467 
ønge
 = 
°¨t
 + 1;

3469 
ønge
 = 
°¨t
;

3471 i‡(
ªg
->
™ch‹
 & 
ANCHOR_BEGIN_BUF
) {

3473 i‡(
ønge
 > 
°¨t
) {

3474 i‡(
°¨t
 !
°r
Ë
mism©ch_no_mß
;

3475 
ønge
 = 
°r
 + 1;

3478 i‡(
ønge
 <
°r
) {

3479 
°¨t
 = 
°r
;

3480 
ønge
 = 
°r
;

3483 
mism©ch_no_mß
;

3486 i‡(
ªg
->
™ch‹
 & 
ANCHOR_END_BUF
) {

3487 
mö_£mi_íd
 = 
max_£mi_íd
 = (
UCh¨
* )
íd
;

3489 
íd_buf
:

3490 i‡((
OnigLí
 )(
max_£mi_íd
 - 
°r
Ë< 
ªg
->
™ch‹_dmö
)

3491 
mism©ch_no_mß
;

3493 i‡(
ønge
 > 
°¨t
) {

3494 i‡((
OnigLí
 )(
mö_£mi_íd
 - 
°¨t
Ë> 
ªg
->
™ch‹_dmax
) {

3495 
°¨t
 = 
mö_£mi_íd
 - 
ªg
->
™ch‹_dmax
;

3496 i‡(
°¨t
 < 
íd
)

3497 
°¨t
 = 
⁄igíc_gë_right_adju°_ch¨_hód
(
ªg
->
íc
, 
°r
, start);

3499 i‡((
OnigLí
 )(
max_£mi_íd
 - (
ønge
 - 1)Ë< 
ªg
->
™ch‹_dmö
) {

3500 
ønge
 = 
max_£mi_íd
 - 
ªg
->
™ch‹_dmö
 + 1;

3503 i‡(
°¨t
 > 
ønge
Ë
mism©ch_no_mß
;

3508 i‡((
OnigLí
 )(
mö_£mi_íd
 - 
ønge
Ë> 
ªg
->
™ch‹_dmax
) {

3509 
ønge
 = 
mö_£mi_íd
 - 
ªg
->
™ch‹_dmax
;

3511 i‡((
OnigLí
 )(
max_£mi_íd
 - 
°¨t
Ë< 
ªg
->
™ch‹_dmö
) {

3512 
°¨t
 = 
max_£mi_íd
 - 
ªg
->
™ch‹_dmö
;

3513 
°¨t
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
, 
°r
, start);

3515 i‡(
ønge
 > 
°¨t
Ë
mism©ch_no_mß
;

3518 i‡(
ªg
->
™ch‹
 & 
ANCHOR_SEMI_END_BUF
) {

3519 
UCh¨
* 
¥e_íd
 = 
ONIGENC_STEP_BACK
(
ªg
->
íc
, 
°r
, 
íd
, 1);

3521 
max_£mi_íd
 = (
UCh¨
* )
íd
;

3522 i‡(
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
¥e_íd
, 
íd
)) {

3523 
mö_£mi_íd
 = 
¥e_íd
;

3525 #ifde‡
USE_CRNL_AS_LINE_TERMINATOR


3526 
¥e_íd
 = 
ONIGENC_STEP_BACK
(
ªg
->
íc
, 
°r
,Öre_end, 1);

3527 i‡(
IS_NOT_NULL
(
¥e_íd
) &&

3528 
ONIGENC_IS_MBC_CRNL
(
ªg
->
íc
, 
¥e_íd
, 
íd
)) {

3529 
mö_£mi_íd
 = 
¥e_íd
;

3532 i‡(
mö_£mi_íd
 > 
°r
 && 
°¨t
 <= min_semi_end) {

3533 
íd_buf
;

3537 
mö_£mi_íd
 = (
UCh¨
* )
íd
;

3538 
íd_buf
;

3541 i‡((
ªg
->
™ch‹
 & 
ANCHOR_ANYCHAR_STAR_ML
)) {

3542 
begö_posôi⁄
;

3545 i‡(
°r
 =
íd
) {

3546 c⁄° 
UCh¨
* 
addªss_f‹_em±y_°rög
 = (UChar* )"";

3548 #ifde‡
ONIG_DEBUG_SEARCH


3549 
Ârötf
(
°dîr
, "onig_search:Émpty string.\n");

3552 i‡(
ªg
->
thªshﬁd_Àn
 == 0) {

3553 
°¨t
 = 
íd
 = 
°r
 = 
addªss_f‹_em±y_°rög
;

3554 
s
 = (
UCh¨
* )
°¨t
;

3555 
¥ev
 = (
UCh¨
* )
NULL
;

3557 
MATCH_ARG_INIT
(
mß
, 
ªg
, 
›ti⁄
, 
ªgi⁄
, 
°¨t
);

3558 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


3559 
mß
.
°©e_check_buff
 = (* )0;

3560 
mß
.
°©e_check_buff_size
 = 0;

3562 
MATCH_AND_RETURN_CHECK
(
íd
);

3563 
mism©ch
;

3565 
mism©ch_no_mß
;

3568 #ifde‡
ONIG_DEBUG_SEARCH


3569 
Ârötf
(
°dîr
, "onig_search(applyánchor):Énd: %d, start: %d,Ñange: %d\n",

3570 ()(
íd
 - 
°r
), ()(
°¨t
 - så), ()(
ønge
 - str));

3573 
MATCH_ARG_INIT
(
mß
, 
ªg
, 
›ti⁄
, 
ªgi⁄
, 
‹ig_°¨t
);

3574 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


3576 
off£t
 = (
MIN
(
°¨t
, 
ønge
Ë- 
°r
);

3577 
STATE_CHECK_BUFF_INIT
(
mß
, 
íd
 - 
°r
, 
off£t
, 
ªg
->
num_comb_exp_check
);

3581 
s
 = (
UCh¨
* )
°¨t
;

3582 i‡(
ønge
 > 
°¨t
) {

3583 i‡(
s
 > 
°r
)

3584 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
°r
, 
s
);

3586 
¥ev
 = (
UCh¨
* )
NULL
;

3588 i‡(
ªg
->
›timize
 !
ONIG_OPTIMIZE_NONE
) {

3589 
UCh¨
 *
sch_ønge
, *
low
, *
high
, *
low_¥ev
;

3591 
sch_ønge
 = (
UCh¨
* )
ønge
;

3592 i‡(
ªg
->
dmax
 != 0) {

3593 i‡(
ªg
->
dmax
 =
ONIG_INFINITE_DISTANCE
)

3594 
sch_ønge
 = (
UCh¨
* )
íd
;

3596 
sch_ønge
 +
ªg
->
dmax
;

3597 i‡(
sch_ønge
 > 
íd
Ësch_øngê(
UCh¨
* )end;

3601 i‡((
íd
 - 
°¨t
Ë< 
ªg
->
thªshﬁd_Àn
)

3602 
mism©ch
;

3604 i‡(
ªg
->
dmax
 !
ONIG_INFINITE_DISTANCE
) {

3606 i‡(! 
f‹w¨d_£¨ch_ønge
(
ªg
, 
°r
, 
íd
, 
s
, 
sch_ønge
,

3607 &
low
, &
high
, &
low_¥ev
)Ë
mism©ch
;

3608 i‡(
s
 < 
low
) {

3609 
s
 = 
low
;

3610 
¥ev
 = 
low_¥ev
;

3612 
s
 <
high
) {

3613 
MATCH_AND_RETURN_CHECK
(
‹ig_ønge
);

3614 
¥ev
 = 
s
;

3615 
s
 +
í˛í
(
ªg
->
íc
, s);

3617 } 
s
 < 
ønge
);

3618 
mism©ch
;

3621 i‡(! 
f‹w¨d_£¨ch_ønge
(
ªg
, 
°r
, 
íd
, 
s
, 
sch_ønge
,

3622 &
low
, &
high
, (
UCh¨
** )
NULL
)Ë
mism©ch
;

3624 i‡((
ªg
->
™ch‹
 & 
ANCHOR_ANYCHAR_STAR
) != 0) {

3626 
MATCH_AND_RETURN_CHECK
(
‹ig_ønge
);

3627 
¥ev
 = 
s
;

3628 
s
 +
í˛í
(
ªg
->
íc
, s);

3630 i‡((
ªg
->
™ch‹
 & (
ANCHOR_LOOK_BEHIND
 | 
ANCHOR_PREC_READ_NOT
)) == 0) {

3631 !
ONIGENC_IS_MBC_NEWLINE
(
ªg
->
íc
, 
¥ev
, 
íd
Ë&& 
s
 < 
ønge
) {

3632 
¥ev
 = 
s
;

3633 
s
 +
í˛í
(
ªg
->
íc
, s);

3636 } 
s
 < 
ønge
);

3637 
mism©ch
;

3643 
MATCH_AND_RETURN_CHECK
(
‹ig_ønge
);

3644 
¥ev
 = 
s
;

3645 
s
 +
í˛í
(
ªg
->
íc
, s);

3646 } 
s
 < 
ønge
);

3648 i‡(
s
 =
ønge
) {

3649 
MATCH_AND_RETURN_CHECK
(
‹ig_ønge
);

3653 #ifde‡
USE_MATCH_RANGE_MUST_BE_INSIDE_OF_SPECIFIED_RANGE


3654 i‡(
‹ig_°¨t
 < 
íd
)

3655 
‹ig_°¨t
 +
í˛í
(
ªg
->
íc
, orig_start);

3658 i‡(
ªg
->
›timize
 !
ONIG_OPTIMIZE_NONE
) {

3659 
UCh¨
 *
low
, *
high
, *
adjønge
, *
sch_°¨t
;

3661 i‡(
ønge
 < 
íd
)

3662 
adjønge
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
, 
°r
, 
ønge
);

3664 
adjønge
 = (
UCh¨
* )
íd
;

3666 i‡(
ªg
->
dmax
 !
ONIG_INFINITE_DISTANCE
 &&

3667 (
íd
 - 
ønge
Ë>
ªg
->
thªshﬁd_Àn
) {

3669 
sch_°¨t
 = 
s
 + 
ªg
->
dmax
;

3670 i‡(
sch_°¨t
 > 
íd
Ësch_°¨à(
UCh¨
* )end;

3671 i‡(
backw¨d_£¨ch_ønge
(
ªg
, 
°r
, 
íd
, 
sch_°¨t
, 
ønge
, 
adjønge
,

3672 &
low
, &
high
) <= 0)

3673 
mism©ch
;

3675 i‡(
s
 > 
high
)

3676 
s
 = 
high
;

3678 
s
 >
low
) {

3679 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
°r
, 
s
);

3680 
MATCH_AND_RETURN_CHECK
(
‹ig_°¨t
);

3681 
s
 = 
¥ev
;

3683 } 
s
 >
ønge
);

3684 
mism©ch
;

3687 i‡((
íd
 - 
ønge
Ë< 
ªg
->
thªshﬁd_Àn
Ë
mism©ch
;

3689 
sch_°¨t
 = 
s
;

3690 i‡(
ªg
->
dmax
 != 0) {

3691 i‡(
ªg
->
dmax
 =
ONIG_INFINITE_DISTANCE
)

3692 
sch_°¨t
 = (
UCh¨
* )
íd
;

3694 
sch_°¨t
 +
ªg
->
dmax
;

3695 i‡(
sch_°¨t
 > 
íd
Ësch_°¨à(
UCh¨
* )end;

3697 
sch_°¨t
 = 
ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
,

3698 
°¨t
, 
sch_°¨t
);

3701 i‡(
backw¨d_£¨ch_ønge
(
ªg
, 
°r
, 
íd
, 
sch_°¨t
, 
ønge
, 
adjønge
,

3702 &
low
, &
high
Ë<0Ë
mism©ch
;

3707 
¥ev
 = 
⁄igíc_gë_¥ev_ch¨_hód
(
ªg
->
íc
, 
°r
, 
s
);

3708 
MATCH_AND_RETURN_CHECK
(
‹ig_°¨t
);

3709 
s
 = 
¥ev
;

3710 } 
s
 >
ønge
);

3713 
mism©ch
:

3714 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


3715 i‡(
IS_FIND_LONGEST
(
ªg
->
›ti⁄s
)) {

3716 i‡(
mß
.
be°_Àn
 >= 0) {

3717 
s
 = 
mß
.
be°_s
;

3718 
m©ch
;

3722 
r
 = 
ONIG_MISMATCH
;

3724 
föish
:

3725 
MATCH_ARG_FREE
(
mß
);

3729 i‡(
IS_FIND_NOT_EMPTY
(
ªg
->
›ti⁄s
Ë&& 
ªgi⁄


3730 #ifde‡
USE_POSIX_API_REGION_OPTION


3731 && !
IS_POSIX_REGION
(
›ti⁄
)

3734 
⁄ig_ªgi⁄_˛ór
(
ªgi⁄
);

3737 #ifde‡
ONIG_DEBUG


3738 i‡(
r
 !
ONIG_MISMATCH
)

3739 
Ârötf
(
°dîr
, "⁄ig_£¨ch:Éº‹ %d\n", 
r
);

3741  
r
;

3743 
mism©ch_no_mß
:

3744 
r
 = 
ONIG_MISMATCH
;

3745 
föish_no_mß
:

3746 #ifde‡
ONIG_DEBUG


3747 i‡(
r
 !
ONIG_MISMATCH
)

3748 
Ârötf
(
°dîr
, "⁄ig_£¨ch:Éº‹ %d\n", 
r
);

3750  
r
;

3752 
m©ch
:

3753 
MATCH_ARG_FREE
(
mß
);

3754  
s
 - 
°r
;

3758 
⁄ig_sˇn
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
°r
, c⁄° UCh¨* 
íd
,

3759 
OnigRegi⁄
* 
ªgi⁄
, 
OnigO±i⁄Ty≥
 
›ti⁄
,

3760 (*
sˇn_ˇŒback
)(, , 
OnigRegi⁄
*, *),

3761 * 
ˇŒback_¨g
)

3763 
r
;

3764 
n
;

3765 
rs
;

3766 c⁄° 
UCh¨
* 
°¨t
;

3768 i‡(
ONIG_IS_OPTION_ON
(
›ti⁄
, 
ONIG_OPTION_CHECK_VALIDITY_OF_STRING
)) {

3769 i‡(! 
ONIGENC_IS_VALID_MBC_STRING
(
ªg
->
íc
, 
°r
, 
íd
))

3770  
ONIGERR_INVALID_WIDE_CHAR_VALUE
;

3772 
ONIG_OPTION_OFF
(
›ti⁄
, 
ONIG_OPTION_CHECK_VALIDITY_OF_STRING
);

3775 
n
 = 0;

3776 
°¨t
 = 
°r
;

3778 
r
 = 
⁄ig_£¨ch
(
ªg
, 
°r
, 
íd
, 
°¨t
,Énd, 
ªgi⁄
, 
›ti⁄
);

3779 i‡(
r
 >= 0) {

3780 
rs
 = 
sˇn_ˇŒback
(
n
, 
r
, 
ªgi⁄
, 
ˇŒback_¨g
);

3781 
n
++;

3782 i‡(
rs
 != 0)

3783  
rs
;

3785 i‡(
ªgi⁄
->
íd
[0] =
°¨t
 - 
°r
)

3786 
°¨t
++;

3788 
°¨t
 = 
°r
 + 
ªgi⁄
->
íd
[0];

3790 i‡(
°¨t
 > 
íd
)

3793 i‡(
r
 =
ONIG_MISMATCH
) {

3797  
r
;

3801  
n
;

3804 
OnigEncodög


3805 
⁄ig_gë_ícodög
(
ªgex_t
* 
ªg
)

3807  
ªg
->
íc
;

3810 
OnigO±i⁄Ty≥


3811 
⁄ig_gë_›ti⁄s
(
ªgex_t
* 
ªg
)

3813  
ªg
->
›ti⁄s
;

3816 
OnigCa£FﬁdTy≥


3817 
⁄ig_gë_ˇ£_fﬁd_Êag
(
ªgex_t
* 
ªg
)

3819  
ªg
->
ˇ£_fﬁd_Êag
;

3822 
OnigSy¡axTy≥
*

3823 
⁄ig_gë_sy¡ax
(
ªgex_t
* 
ªg
)

3825  
ªg
->
sy¡ax
;

3829 
⁄ig_numbî_of_ˇ±uªs
(
ªgex_t
* 
ªg
)

3831  
ªg
->
num_mem
;

3835 
⁄ig_numbî_of_ˇ±uª_hi°‹õs
(
ªgex_t
* 
ªg
)

3837 #ifde‡
USE_CAPTURE_HISTORY


3838 
i
, 
n
;

3840 
n
 = 0;

3841 
i
 = 0; i <
ONIG_MAX_CAPTURE_HISTORY_GROUP
; i++) {

3842 i‡(
BIT_STATUS_AT
(
ªg
->
ˇ±uª_hi°‹y
, 
i
) != 0)

3843 
n
++;

3845  
n
;

3852 
⁄ig_c›y_ícodög
(
OnigEncodög
 
to
, OnigEncodög 
‰om
)

3854 *
to
 = *
‰om
;

	@modules/oniguruma/src/regext.c

30 
	~"ªgöt.h
"

33 
	$c⁄v_ext0be32
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

35 
s
 < 
íd
) {

36 *
c⁄v
++ = '\0';

37 *
c⁄v
++ = '\0';

38 *
c⁄v
++ = '\0';

39 *
c⁄v
++ = *
s
++;

41 
	}
}

44 
	$c⁄v_ext0À32
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

46 
s
 < 
íd
) {

47 *
c⁄v
++ = *
s
++;

48 *
c⁄v
++ = '\0';

49 *
c⁄v
++ = '\0';

50 *
c⁄v
++ = '\0';

52 
	}
}

55 
	$c⁄v_ext0be
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

57 
s
 < 
íd
) {

58 *
c⁄v
++ = '\0';

59 *
c⁄v
++ = *
s
++;

61 
	}
}

64 
	$c⁄v_ext0À
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

66 
s
 < 
íd
) {

67 *
c⁄v
++ = *
s
++;

68 *
c⁄v
++ = '\0';

70 
	}
}

73 
	$c⁄v_sw≠4byãs
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

75 
s
 < 
íd
) {

76 *
c⁄v
++ = 
s
[3];

77 *
c⁄v
++ = 
s
[2];

78 *
c⁄v
++ = 
s
[1];

79 *
c⁄v
++ = 
s
[0];

80 
s
 += 4;

82 
	}
}

85 
	$c⁄v_sw≠2byãs
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
, UCh¨* 
c⁄v
)

87 
s
 < 
íd
) {

88 *
c⁄v
++ = 
s
[1];

89 *
c⁄v
++ = 
s
[0];

90 
s
 += 2;

92 
	}
}

95 
	$c⁄v_ícodög
(
OnigEncodög
 
‰om
, OnigEncodög 
to
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
,

96 
UCh¨
** 
c⁄v
, UCh¨** 
c⁄v_íd
)

98 
Àn
 = 
íd
 - 
s
;

100 i‡(
to
 =
ONIG_ENCODING_UTF16_BE
) {

101 i‡(
‰om
 =
ONIG_ENCODING_ASCII
 || from =
ONIG_ENCODING_ISO_8859_1
) {

102 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
 * 2);

103 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

104 *
c⁄v_íd
 = *
c⁄v
 + (
Àn
 * 2);

105 
	`c⁄v_ext0be
(
s
, 
íd
, *
c⁄v
);

108 i‡(
‰om
 =
ONIG_ENCODING_UTF16_LE
) {

109 
sw≠16
:

110 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
);

111 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

112 *
c⁄v_íd
 = *
c⁄v
 + 
Àn
;

113 
	`c⁄v_sw≠2byãs
(
s
, 
íd
, *
c⁄v
);

117 i‡(
to
 =
ONIG_ENCODING_UTF16_LE
) {

118 i‡(
‰om
 =
ONIG_ENCODING_ASCII
 || from =
ONIG_ENCODING_ISO_8859_1
) {

119 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
 * 2);

120 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

121 *
c⁄v_íd
 = *
c⁄v
 + (
Àn
 * 2);

122 
	`c⁄v_ext0À
(
s
, 
íd
, *
c⁄v
);

125 i‡(
‰om
 =
ONIG_ENCODING_UTF16_BE
) {

126 
sw≠16
;

129 i‡(
to
 =
ONIG_ENCODING_UTF32_BE
) {

130 i‡(
‰om
 =
ONIG_ENCODING_ASCII
 || from =
ONIG_ENCODING_ISO_8859_1
) {

131 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
 * 4);

132 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

133 *
c⁄v_íd
 = *
c⁄v
 + (
Àn
 * 4);

134 
	`c⁄v_ext0be32
(
s
, 
íd
, *
c⁄v
);

137 i‡(
‰om
 =
ONIG_ENCODING_UTF32_LE
) {

138 
sw≠32
:

139 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
);

140 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

141 *
c⁄v_íd
 = *
c⁄v
 + 
Àn
;

142 
	`c⁄v_sw≠4byãs
(
s
, 
íd
, *
c⁄v
);

146 i‡(
to
 =
ONIG_ENCODING_UTF32_LE
) {

147 i‡(
‰om
 =
ONIG_ENCODING_ASCII
 || from =
ONIG_ENCODING_ISO_8859_1
) {

148 *
c⁄v
 = (
UCh¨
* )
	`xmÆloc
(
Àn
 * 4);

149 
	`CHECK_NULL_RETURN_MEMERR
(*
c⁄v
);

150 *
c⁄v_íd
 = *
c⁄v
 + (
Àn
 * 4);

151 
	`c⁄v_ext0À32
(
s
, 
íd
, *
c⁄v
);

154 i‡(
‰om
 =
ONIG_ENCODING_UTF32_BE
) {

155 
sw≠32
;

159  
ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION
;

160 
	}
}

163 
	$⁄ig_√w_dñuxe
(
ªgex_t
** 
ªg
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
∑âîn_íd
,

164 
OnigCompûeInfo
* 
ci
, 
OnigEº‹Info
* 
eöfo
)

166 
r
;

167 
UCh¨
 *
˝©
, *
˝©_íd
;

169 i‡(
	`IS_NOT_NULL
(
eöfo
)Ëeöfo->
∑r
 = (
UCh¨
* )
NULL
;

171 i‡(
ci
->
∑âîn_íc
 !ci->
èrgë_íc
) {

172 
r
 = 
	`c⁄v_ícodög
(
ci
->
∑âîn_íc
, ci->
èrgë_íc
, 
∑âîn
, 
∑âîn_íd
,

173 &
˝©
, &
˝©_íd
);

174 i‡(
r
) Ñ;

177 
˝©
 = (
UCh¨
* )
∑âîn
;

178 
˝©_íd
 = (
UCh¨
* )
∑âîn_íd
;

181 *
ªg
 = (
ªgex_t
* )
	`xmÆloc
((regex_t));

182 i‡(
	`IS_NULL
(*
ªg
)) {

183 
r
 = 
ONIGERR_MEMORY
;

184 
îr2
;

187 
r
 = 
	`⁄ig_ªg_öô
(*
ªg
, 
ci
->
›ti⁄
, ci->
ˇ£_fﬁd_Êag
, ci->
èrgë_íc
,

188 
ci
->
sy¡ax
);

189 i‡(
r
Ë
îr
;

191 
r
 = 
	`⁄ig_compûe
(*
ªg
, 
˝©
, 
˝©_íd
, 
eöfo
);

192 i‡(
r
) {

193 
îr
:

194 
	`⁄ig_‰ì
(*
ªg
);

195 *
ªg
 = 
NULL
;

198 
îr2
:

199 i‡(
˝©
 !
∑âîn
Ë
	`x‰ì
(cpat);

201  
r
;

202 
	}
}

	@modules/oniguruma/src/reggnu.c

30 
	~"ªgöt.h
"

32 #i‚de‡
ONIGGNU_H


33 
	~"⁄iggnu.h
"

37 
	$ª_‰ì_ªgi°îs
(
OnigRegi⁄
* 
r
)

40 
	`⁄ig_ªgi⁄_‰ì
(
r
, 0);

41 
	}
}

44 
	$ª_adju°_°¨ços
(
ªgex_t
* 
ªg
, c⁄° * 
°rög
, 
size
,

45 
°¨ços
, 
ønge
)

47 i‡(
°¨ços
 > 0 && 
	`ONIGENC_MBC_MAXLEN
(
ªg
->
íc
Ë!1 && sèπpo†< 
size
) {

48 
UCh¨
 *
p
;

49 
UCh¨
 *
s
 = (UCh¨* )
°rög
 + 
°¨ços
;

51 i‡(
ønge
 > 0) {

52 
p
 = 
	`⁄igíc_gë_right_adju°_ch¨_hód
(
ªg
->
íc
, (
UCh¨
* )
°rög
, 
s
);

55 
p
 = 
	`ONIGENC_LEFT_ADJUST_CHAR_HEAD
(
ªg
->
íc
, (
UCh¨
* )
°rög
, 
s
);

57  
p
 - (
UCh¨
* )
°rög
;

60  
°¨ços
;

61 
	}
}

64 
	$ª_m©ch
(
ªgex_t
* 
ªg
, c⁄° * 
°r
, 
size
, 
pos
,

65 
ª_ªgi°îs
* 
ªgs
)

67  
	`⁄ig_m©ch
(
ªg
, (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
size
),

68 (
UCh¨
* )(
°r
 + 
pos
), 
ªgs
, 
ONIG_OPTION_NONE
);

69 
	}
}

72 
	$ª_£¨ch
(
ªgex_t
* 
buÂ
, c⁄° * 
°rög
, 
size
, 
°¨ços
, 
ønge
,

73 
ª_ªgi°îs
* 
ªgs
)

75  
	`⁄ig_£¨ch
(
buÂ
, (
UCh¨
* )
°rög
, (UCh¨* )(°rög + 
size
),

76 (
UCh¨
* )(
°rög
 + 
°¨ços
),

77 (
UCh¨
* )(
°rög
 + 
°¨ços
 + 
ønge
),

78 
ªgs
, 
ONIG_OPTION_NONE
);

79 
	}
}

82 
	$ª_compûe_∑âîn
(c⁄° * 
∑âîn
, 
size
, 
ªgex_t
* 
ªg
, * 
ebuf
)

84 
r
;

85 
OnigEº‹Info
 
eöfo
;

87 
r
 = 
	`⁄ig_compûe
(
ªg
, (
UCh¨
* )
∑âîn
, (UCh¨* )’©ã∫ + 
size
), &
eöfo
);

88 i‡(
r
 !
ONIG_NORMAL
) {

89 i‡(
	`IS_NOT_NULL
(
ebuf
))

90 ()
	`⁄ig_îr‹_code_to_°r
((
UCh¨
* )
ebuf
, 
r
, &
eöfo
);

93  
r
;

94 
	}
}

97 
	$ª_‰ì_∑âîn
(
ªgex_t
* 
ªg
)

99 
	`⁄ig_‰ì
(
ªg
);

100 
	}
}

103 
	$ª_Æloc_∑âîn
(
ªgex_t
** 
ªg
)

105 *
ªg
 = (
ªgex_t
* )
	`xmÆloc
((regex_t));

106 i‡(
	`IS_NULL
(*
ªg
)Ë 
ONIGERR_MEMORY
;

108  
	`⁄ig_ªg_öô
(*
ªg
, 
ONIG_OPTION_DEFAULT
,

109 
ONIGENC_CASE_FOLD_DEFAULT
,

110 
OnigEncDeÁu…Ch¨Encodög
,

111 
OnigDeÁu…Sy¡ax
);

112 
	}
}

115 
	$ª_£t_ˇ£èbÀ
(c⁄° * 
èbÀ
)

117 
	`⁄igíc_£t_deÁu…_ˇ£c⁄v_èbÀ
((
UCh¨
* )
èbÀ
);

118 
	}
}

121 
	$ª_mbcöô
(
mb_code
)

123 
OnigEncodög
 
íc
;

125 
mb_code
) {

126 
RE_MBCTYPE_ASCII
:

127 
íc
 = 
ONIG_ENCODING_ASCII
;

129 
RE_MBCTYPE_EUC
:

130 
íc
 = 
ONIG_ENCODING_EUC_JP
;

132 
RE_MBCTYPE_SJIS
:

133 
íc
 = 
ONIG_ENCODING_SJIS
;

135 
RE_MBCTYPE_UTF8
:

136 
íc
 = 
ONIG_ENCODING_UTF8
;

143 
	`⁄ig_öôülize
(0, 0);

144 
	`⁄ig_öôülize_ícodög
(
íc
);

146 
	`⁄igíc_£t_deÁu…_ícodög
(
íc
);

147 
	}
}

	@modules/oniguruma/src/regint.h

1 #i‚de‡
REGINT_H


2 
	#REGINT_H


	)

42 #i‡
deföed
(
ONIG_DEBUG_PARSE_TREE
Ë|| deföed(
ONIG_DEBUG_MATCH
) || \

43 
deföed
(
ONIG_DEBUG_SEARCH
Ë|| deföed(
ONIG_DEBUG_COMPILE
) || \

44 
	$deföed
(
ONIG_DEBUG_STATISTICS
)

45 #i‚de‡
ONIG_DEBUG


46 
	#ONIG_DEBUG


	)

50 #i‡
	`deföed
(
__i386
Ë|| deföed(
__i386__
Ë|| deföed(
_M_IX86
) || \

51 (
	`deföed
(
__µc__
Ë&& deföed(
__APPLE__
)) || \

52 
	`deföed
(
__x86_64
Ë|| deföed(
__x86_64__
) || \

53 
	$deföed
(
__mc68020__
)

54 
	#PLATFORM_UNALIGNED_WORD_ACCESS


	)

59 
	#USE_NAMED_GROUP


	)

60 
	#USE_SUBEXP_CALL


	)

61 
	#USE_BACKREF_WITH_LEVEL


	)

62 
	#USE_MONOMANIAC_CHECK_CAPTURES_IN_ENDLESS_REPEAT


	)

63 
	#USE_NEWLINE_AT_END_OF_STRING_HAS_EMPTY_LINE


	)

64 
	#USE_WARNING_REDUNDANT_NESTED_REPEAT_OPERATOR


	)

68 
	#USE_OP_PUSH_OR_JUMP_EXACT


	)

69 
	#USE_QTFR_PEEK_NEXT


	)

70 
	#USE_ST_LIBRARY


	)

72 
	#INIT_MATCH_STACK_SIZE
 160

	)

73 
	#DEFAULT_MATCH_STACK_LIMIT_SIZE
 0

	)

74 
	#DEFAULT_PARSE_DEPTH_LIMIT
 4096

	)

76 #i‡
	`deföed
(
__GNUC__
)

77 
	#ARG_UNUSED
 
	`__©åibuã__
 ((
unu£d
))

	)

79 
	#ARG_UNUSED


	)

84 
	~"c⁄fig.h
"

85 #ifde‡
ONIG_ESCAPE_UCHAR_COLLISION


86 #unde‡
ONIG_ESCAPE_UCHAR_COLLISION


89 
	#USE_WORD_BEGIN_END


	)

90 
	#USE_CAPTURE_HISTORY


	)

91 
	#USE_VARIABLE_META_CHARS


	)

92 
	#USE_POSIX_API_REGION_OPTION


	)

93 
	#USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


	)

96 
	#xmÆloc
 
mÆloc


	)

97 
	#xªÆloc
 
ªÆloc


	)

98 
	#xˇŒoc
 
ˇŒoc


	)

99 
	#x‰ì
 
‰ì


	)

101 
	#CHECK_INTERRUPT_IN_MATCH_AT


	)

103 
	#°_öô_èbÀ
 
⁄ig_°_öô_èbÀ


	)

104 
	#°_öô_èbÀ_wôh_size
 
⁄ig_°_öô_èbÀ_wôh_size


	)

105 
	#°_öô_numèbÀ
 
⁄ig_°_öô_numèbÀ


	)

106 
	#°_öô_numèbÀ_wôh_size
 
⁄ig_°_öô_numèbÀ_wôh_size


	)

107 
	#°_öô_°πabÀ
 
⁄ig_°_öô_°πabÀ


	)

108 
	#°_öô_°πabÀ_wôh_size
 
⁄ig_°_öô_°πabÀ_wôh_size


	)

109 
	#°_dñëe
 
⁄ig_°_dñëe


	)

110 
	#°_dñëe_ß„
 
⁄ig_°_dñëe_ß„


	)

111 
	#°_ö£π
 
⁄ig_°_ö£π


	)

112 
	#°_lookup
 
⁄ig_°_lookup


	)

113 
	#°_f‹óch
 
⁄ig_°_f‹óch


	)

114 
	#°_add_dúe˘
 
⁄ig_°_add_dúe˘


	)

115 
	#°_‰ì_èbÀ
 
⁄ig_°_‰ì_èbÀ


	)

116 
	#°_˛ónup_ß„
 
⁄ig_°_˛ónup_ß„


	)

117 
	#°_c›y
 
⁄ig_°_c›y


	)

118 
	#°_nŸhög_key_˛⁄e
 
⁄ig_°_nŸhög_key_˛⁄e


	)

119 
	#°_nŸhög_key_‰ì
 
⁄ig_°_nŸhög_key_‰ì


	)

121 
	#⁄ig_°_is_membî
 
°_is_membî


	)

123 
	#STATE_CHECK_STRING_THRESHOLD_LEN
 7

	)

124 
	#STATE_CHECK_BUFF_MAX_SIZE
 0x4000

	)

126 
	#xmem£t
 
mem£t


	)

127 
	#xmem˝y
 
mem˝y


	)

128 
	#xmemmove
 
memmove


	)

130 #i‡
	`deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
)

131 
	#xÆloˇ
 
_Æloˇ


	)

132 
	#xv¢¥ötf
(
buf
,
size
,
fmt
,
¨gs
Ë
	`_v¢¥ötf_s
(buf,size,
_TRUNCATE
,fmt,¨gs)

	)

133 
	#x¢¥ötf
 
•rötf_s


	)

134 
	#x°rˇt
(
de°
,
§c
,
size
Ë
	`°rˇt_s
(de°,size,§c)

	)

136 
	#xÆloˇ
 
Æloˇ


	)

137 
	#xv¢¥ötf
 
v¢¥ötf


	)

138 
	#x¢¥ötf
 
¢¥ötf


	)

139 
	#x°rˇt
(
de°
,
§c
,
size
Ë
	`°rˇt
(de°,§c)

	)

143 #ifde‡
HAVE_STDLIB_H


144 
	~<°dlib.h
>

147 #i‡
	`deföed
(
HAVE_ALLOCA_H
Ë&& !deföed(
__GNUC__
)

148 
	~<Æloˇ.h
>

151 #ifde‡
HAVE_STRING_H


152 
	~<°rög.h
>

154 
	~<°rögs.h
>

157 
	~<˘y≥.h
>

158 #ifde‡
HAVE_SYS_TYPES_H


159 #i‚de‡
__BORLANDC__


160 
	~<sys/ty≥s.h
>

164 #ifde‡
__BORLANDC__


165 
	~<mÆloc.h
>

168 #ifde‡
ONIG_DEBUG


169 
	~<°dio.h
>

172 
	~"ªgíc.h
"

174 #ifde‡
MIN


175 #unde‡
MIN


177 #ifde‡
MAX


178 #unde‡
MAX


180 
	#MIN
(
a
,
b
Ë((◊)>(b))?(b):◊))

	)

181 
	#MAX
(
a
,
b
Ë((◊)<(b))?(b):◊))

	)

183 
	#IS_NULL
(
p
Ë(((*)’)Ë=(*)0)

	)

184 
	#IS_NOT_NULL
(
p
Ë(((*)’)Ë!(*)0)

	)

185 
	#CHECK_NULL_RETURN
(
p
Ëi‡(
	`IS_NULL
’)Ë 
NULL


	)

186 
	#CHECK_NULL_RETURN_MEMERR
(
p
Ëi‡(
	`IS_NULL
’)Ë 
ONIGERR_MEMORY


	)

187 
	#NULL_UCHARP
 ((
UCh¨
* )0)

	)

189 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


191 
	#PLATFORM_GET_INC
(
vÆ
,
p
,
ty≥
) do{\

192 
vÆ
 = *(
ty≥
* )
p
;\

193 (
p
Ë+(
ty≥
);\

194 
	}
} 0)

	)

198 
	#PLATFORM_GET_INC
(
vÆ
,
p
,
ty≥
) do{\

199 
	`xmem˝y
(&
vÆ
, (
p
), (
ty≥
));\

200 (
p
Ë+(
ty≥
);\

201 } 0)

	)

204 
	#WORD_ALIGNMENT_SIZE
 
SIZEOF_LONG


	)

206 
	#GET_ALIGNMENT_PAD_SIZE
(
addr
,
∑d_size
) do {\

207 (
∑d_size
Ë
WORD_ALIGNMENT_SIZE
 \

208 - (()(
addr
Ë% 
WORD_ALIGNMENT_SIZE
);\

209 i‡((
∑d_size
Ë=
WORD_ALIGNMENT_SIZE
) (pad_size) = 0;\

210 } 0)

	)

212 
	#ALIGNMENT_RIGHT
(
addr
) do {\

213 (
addr
Ë+(
WORD_ALIGNMENT_SIZE
 - 1);\

214 (
addr
Ë-(()◊ddrË% 
WORD_ALIGNMENT_SIZE
);\

215 } 0)

	)

220 
	#STACK_POP_LEVEL_FREE
 0

	)

221 
	#STACK_POP_LEVEL_MEM_START
 1

	)

222 
	#STACK_POP_LEVEL_ALL
 2

	)

225 
	#ONIG_OPTIMIZE_NONE
 0

	)

226 
	#ONIG_OPTIMIZE_EXACT
 1

	)

227 
	#ONIG_OPTIMIZE_EXACT_BM
 2

	)

228 
	#ONIG_OPTIMIZE_EXACT_BM_NOT_REV
 3

	)

229 
	#ONIG_OPTIMIZE_EXACT_IC
 4

	)

230 
	#ONIG_OPTIMIZE_MAP
 5

	)

233 
	tBôSètusTy≥
;

235 
	#BIT_STATUS_BITS_NUM
 ((
BôSètusTy≥
Ë* 8)

	)

236 
	#BIT_STATUS_CLEAR
(
°©s
Ë(°©sË0

	)

237 
	#BIT_STATUS_ON_ALL
(
°©s
Ë(°©sË~((
BôSètusTy≥
 )0)

	)

238 
	#BIT_STATUS_AT
(
°©s
,
n
) \

239 ((
n
Ë< ()
BIT_STATUS_BITS_NUM
 ? ((
°©s
Ë& (1 <<Ç)Ë: ((°©sË& 1))

	)

241 
	#BIT_STATUS_ON_AT
(
°©s
,
n
) do {\

242 i‡((
n
Ë< ()
BIT_STATUS_BITS_NUM
) \

243 (
°©s
Ë|(1 << (
n
));\

245 (
°©s
) |= 1;\

246 } 0)

	)

248 
	#BIT_STATUS_ON_AT_SIMPLE
(
°©s
,
n
) do {\

249 i‡((
n
Ë< ()
BIT_STATUS_BITS_NUM
)\

250 (
°©s
Ë|(1 << (
n
));\

251 } 0)

	)

254 
	#INT_MAX_LIMIT
 ((1UL << (
SIZEOF_INT
 * 8 - 1)Ë- 1)

	)

256 
	#DIGITVAL
(
code
Ë((codeË- '0')

	)

257 
	#ODIGITVAL
(
code
Ë
	`DIGITVAL
(code)

	)

258 
	#XDIGITVAL
(
íc
,
code
) \

259 (
	`ONIGENC_IS_CODE_DIGIT
(
íc
,
code
Ë? 
	`DIGITVAL
(code) \

260 : (
	`ONIGENC_IS_CODE_UPPER
(
íc
,
code
Ë? (codeË- 'A' + 10 : (codeË- 'a' + 10))

	)

262 
	#IS_SINGLELINE
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_SINGLELINE
)

	)

263 
	#IS_MULTILINE
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_MULTILINE
)

	)

264 
	#IS_IGNORECASE
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_IGNORECASE
)

	)

265 
	#IS_EXTEND
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_EXTEND
)

	)

266 
	#IS_FIND_LONGEST
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_FIND_LONGEST
)

	)

267 
	#IS_FIND_NOT_EMPTY
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_FIND_NOT_EMPTY
)

	)

268 
	#IS_FIND_CONDITION
(
›ti⁄
) ((option) & \

269 (
ONIG_OPTION_FIND_LONGEST
 | 
ONIG_OPTION_FIND_NOT_EMPTY
))

	)

270 
	#IS_NOTBOL
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_NOTBOL
)

	)

271 
	#IS_NOTEOL
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_NOTEOL
)

	)

272 
	#IS_POSIX_REGION
(
›ti⁄
Ë((›ti⁄Ë& 
ONIG_OPTION_POSIX_REGION
)

	)

279 
	#IS_DYNAMIC_OPTION
(
›ti⁄
Ë0

	)

281 
	#DISABLE_CASE_FOLD_MULTI_CHAR
(
ˇ£_fﬁd_Êag
) \

282 ((
ˇ£_fﬁd_Êag
Ë& ~
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
)

	)

284 
	#REPEAT_INFINITE
 -1

	)

285 
	#IS_REPEAT_INFINITE
(
n
Ë(“Ë=
REPEAT_INFINITE
)

	)

288 
	#BITS_PER_BYTE
 8

	)

289 
	#SINGLE_BYTE_SIZE
 (1 << 
BITS_PER_BYTE
)

	)

290 
	#BITS_IN_ROOM
 ((
Bôs
Ë* 
BITS_PER_BYTE
)

	)

291 
	#BITSET_SIZE
 (
SINGLE_BYTE_SIZE
 / 
BITS_IN_ROOM
)

	)

293 #ifde‡
PLATFORM_UNALIGNED_WORD_ACCESS


294 
	tBôs
;

296 
	tBôs
;

298 
Bôs
 
	tBôSë
[
BITSET_SIZE
];

299 
Bôs
* 
	tBôSëRef
;

301 
	#SIZE_BITSET
 (
BôSë
)

	)

303 
	#BITSET_CLEAR
(
bs
) do {\

304 
i
;\

305 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ (
bs
)[i] = 0; } \

306 } 0)

	)

308 
	#BS_ROOM
(
bs
,
pos
Ë(bs)[po†/ 
BITS_IN_ROOM
]

	)

309 
	#BS_BIT
(
pos
Ë(1 << (po†% 
BITS_IN_ROOM
))

	)

311 
	#BITSET_AT
(
bs
, 
pos
Ë(
	`BS_ROOM
(bs,posË& 
	`BS_BIT
’os))

	)

312 
	#BITSET_SET_BIT
(
bs
, 
pos
Ë
	`BS_ROOM
(bs,posË|
	`BS_BIT
’os)

	)

313 
	#BITSET_CLEAR_BIT
(
bs
, 
pos
Ë
	`BS_ROOM
(bs,posË&~(
	`BS_BIT
’os))

	)

314 
	#BITSET_INVERT_BIT
(
bs
, 
pos
Ë
	`BS_ROOM
(bs,posË^
	`BS_BIT
’os)

	)

317 
	s_BBuf
 {

318 
UCh¨
* 
	mp
;

319 
	mu£d
;

320 
	mÆloc
;

321 } 
	tBBuf
;

323 
	#BBUF_INIT
(
buf
,
size
Ë
	`⁄ig_bbuf_öô
((
BBuf
* )(buf), (size))

	)

325 
	#BBUF_SIZE_INC
(
buf
,
öc
) do{\

326 (
buf
)->
Æloc
 +(
öc
);\

327 (
buf
)->
p
 = (
UCh¨
* )
	`xªÆloc
((buf)->p, (buf)->
Æloc
);\

328 i‡(
	`IS_NULL
((
buf
)->
p
)Ë(
ONIGERR_MEMORY
);\

329 } 0)

	)

331 
	#BBUF_EXPAND
(
buf
,
low
) do{\

332 dÿ{ (
buf
)->
Æloc
 *2; } (buf)->Ælo¯< ()
low
);\

333 (
buf
)->
p
 = (
UCh¨
* )
	`xªÆloc
((buf)->p, (buf)->
Æloc
);\

334 i‡(
	`IS_NULL
((
buf
)->
p
)Ë(
ONIGERR_MEMORY
);\

335 } 0)

	)

337 
	#BBUF_ENSURE_SIZE
(
buf
,
size
) do{\

338 
√w_Æloc
 = (
buf
)->
Æloc
;\

339 
√w_Æloc
 < ()(
size
)) {Çew_alloc *= 2; }\

340 i‡((
buf
)->
Æloc
 !
√w_Æloc
) {\

341 (
buf
)->
p
 = (
UCh¨
* )
	`xªÆloc
((buf)->p, 
√w_Æloc
);\

342 i‡(
	`IS_NULL
((
buf
)->
p
)Ë(
ONIGERR_MEMORY
);\

343 (
buf
)->
Æloc
 = 
√w_Æloc
;\

345 } 0)

	)

347 
	#BBUF_WRITE
(
buf
,
pos
,
byãs
,
n
) do{\

348 
u£d
 = (
pos
Ë+ (
n
);\

349 i‡((
buf
)->
Æloc
 < ()
u£d
Ë
	`BBUF_EXPAND
((buf),used);\

350 
	`xmem˝y
((
buf
)->
p
 + (
pos
), (
byãs
), (
n
));\

351 i‡((
buf
)->
u£d
 < ()used) (buf)->used = used;\

352 } 0)

	)

354 
	#BBUF_WRITE1
(
buf
,
pos
,
byã
) do{\

355 
u£d
 = (
pos
) + 1;\

356 i‡((
buf
)->
Æloc
 < ()
u£d
Ë
	`BBUF_EXPAND
((buf),used);\

357 (
buf
)->
p
[(
pos
)] = (
byã
);\

358 i‡((
buf
)->
u£d
 < ()used) (buf)->used = used;\

359 } 0)

	)

361 
	#BBUF_ADD
(
buf
,
byãs
,
n
Ë
	`BBUF_WRITE
((buf),(buf)->
u£d
,(byãs),“))

	)

362 
	#BBUF_ADD1
(
buf
,
byã
Ë
	`BBUF_WRITE1
((buf),(buf)->
u£d
,(byã))

	)

363 
	#BBUF_GET_ADD_ADDRESS
(
buf
Ë((buf)->
p
 + (buf)->
u£d
)

	)

364 
	#BBUF_GET_OFFSET_POS
(
buf
Ë((buf)->
u£d
)

	)

367 
	#BBUF_MOVE_RIGHT
(
buf
,
‰om
,
to
,
n
) do {\

368 i‡(()((
to
)+(
n
)Ë> (
buf
)->
Æloc
Ë
	`BBUF_EXPAND
((buf),(to) + (n));\

369 
	`xmemmove
((
buf
)->
p
 + (
to
), (buf)->∞+ (
‰om
), (
n
));\

370 i‡(()((
to
)+(
n
)Ë> (
buf
)->
u£d
) (buf)->used = (to) + (n);\

371 } 0)

	)

374 
	#BBUF_MOVE_LEFT
(
buf
,
‰om
,
to
,
n
) do {\

375 
	`xmemmove
((
buf
)->
p
 + (
to
), (buf)->∞+ (
‰om
), (
n
));\

376 } 0)

	)

379 
	#BBUF_MOVE_LEFT_REDUCE
(
buf
,
‰om
,
to
) do {\

380 
	`xmemmove
((
buf
)->
p
 + (
to
), (buf)->∞+ (
‰om
), (buf)->
u£d
 - (from));\

381 (
buf
)->
u£d
 -(
‰om
 - 
to
);\

382 } 0)

	)

384 
	#BBUF_INSERT
(
buf
,
pos
,
byãs
,
n
) do {\

385 i‡(
pos
 >(
buf
)->
u£d
) {\

386 
	`BBUF_WRITE
(
buf
,
pos
,
byãs
,
n
);\

389 
	`BBUF_MOVE_RIGHT
((
buf
),(
pos
),’osË+ (
n
),((buf)->
u£d
 - (pos)));\

390 
	`xmem˝y
((
buf
)->
p
 + (
pos
), (
byãs
), (
n
));\

392 } 0)

	)

394 
	#BBUF_GET_BYTE
(
buf
, 
pos
Ë(buf)->
p
[’os)]

	)

397 
	#ANCHOR_BEGIN_BUF
 (1<<0)

	)

398 
	#ANCHOR_BEGIN_LINE
 (1<<1)

	)

399 
	#ANCHOR_BEGIN_POSITION
 (1<<2)

	)

400 
	#ANCHOR_END_BUF
 (1<<3)

	)

401 
	#ANCHOR_SEMI_END_BUF
 (1<<4)

	)

402 
	#ANCHOR_END_LINE
 (1<<5)

	)

404 
	#ANCHOR_WORD_BOUND
 (1<<6)

	)

405 
	#ANCHOR_NOT_WORD_BOUND
 (1<<7)

	)

406 
	#ANCHOR_WORD_BEGIN
 (1<<8)

	)

407 
	#ANCHOR_WORD_END
 (1<<9)

	)

408 
	#ANCHOR_PREC_READ
 (1<<10)

	)

409 
	#ANCHOR_PREC_READ_NOT
 (1<<11)

	)

410 
	#ANCHOR_LOOK_BEHIND
 (1<<12)

	)

411 
	#ANCHOR_LOOK_BEHIND_NOT
 (1<<13)

	)

413 
	#ANCHOR_ANYCHAR_STAR
 (1<<14Ë

	)

414 
	#ANCHOR_ANYCHAR_STAR_ML
 (1<<15Ë

	)

417 
	eOpCode
 {

418 
	mOP_FINISH
 = 0,

419 
	mOP_END
 = 1,

421 
	mOP_EXACT1
 = 2,

422 
	mOP_EXACT2
,

423 
	mOP_EXACT3
,

424 
	mOP_EXACT4
,

425 
	mOP_EXACT5
,

426 
	mOP_EXACTN
,

427 
	mOP_EXACTMB2N1
,

428 
	mOP_EXACTMB2N2
,

429 
	mOP_EXACTMB2N3
,

430 
	mOP_EXACTMB2N
,

431 
	mOP_EXACTMB3N
,

432 
	mOP_EXACTMBN
,

434 
	mOP_EXACT1_IC
,

435 
	mOP_EXACTN_IC
,

437 
	mOP_CCLASS
,

438 
	mOP_CCLASS_MB
,

439 
	mOP_CCLASS_MIX
,

440 
	mOP_CCLASS_NOT
,

441 
	mOP_CCLASS_MB_NOT
,

442 
	mOP_CCLASS_MIX_NOT
,

443 
	mOP_CCLASS_NODE
,

445 
	mOP_ANYCHAR
,

446 
	mOP_ANYCHAR_ML
,

447 
	mOP_ANYCHAR_STAR
,

448 
	mOP_ANYCHAR_ML_STAR
,

449 
	mOP_ANYCHAR_STAR_PEEK_NEXT
,

450 
	mOP_ANYCHAR_ML_STAR_PEEK_NEXT
,

452 
	mOP_WORD
,

453 
	mOP_NOT_WORD
,

454 
	mOP_WORD_BOUND
,

455 
	mOP_NOT_WORD_BOUND
,

456 
	mOP_WORD_BEGIN
,

457 
	mOP_WORD_END
,

459 
	mOP_BEGIN_BUF
,

460 
	mOP_END_BUF
,

461 
	mOP_BEGIN_LINE
,

462 
	mOP_END_LINE
,

463 
	mOP_SEMI_END_BUF
,

464 
	mOP_BEGIN_POSITION
,

466 
	mOP_BACKREF1
,

467 
	mOP_BACKREF2
,

468 
	mOP_BACKREFN
,

469 
	mOP_BACKREFN_IC
,

470 
	mOP_BACKREF_MULTI
,

471 
	mOP_BACKREF_MULTI_IC
,

472 
	mOP_BACKREF_WITH_LEVEL
,

474 
	mOP_MEMORY_START
,

475 
	mOP_MEMORY_START_PUSH
,

476 
	mOP_MEMORY_END_PUSH
,

477 
	mOP_MEMORY_END_PUSH_REC
,

478 
	mOP_MEMORY_END
,

479 
	mOP_MEMORY_END_REC
,

481 
	mOP_FAIL
,

482 
	mOP_JUMP
,

483 
	mOP_PUSH
,

484 
	mOP_POP
,

485 
	mOP_PUSH_OR_JUMP_EXACT1
,

486 
	mOP_PUSH_IF_PEEK_NEXT
,

487 
	mOP_REPEAT
,

488 
	mOP_REPEAT_NG
,

489 
	mOP_REPEAT_INC
,

490 
	mOP_REPEAT_INC_NG
,

491 
	mOP_REPEAT_INC_SG
,

492 
	mOP_REPEAT_INC_NG_SG
,

493 
	mOP_NULL_CHECK_START
,

494 
	mOP_NULL_CHECK_END
,

495 
	mOP_NULL_CHECK_END_MEMST
,

496 
	mOP_NULL_CHECK_END_MEMST_PUSH
,

498 
	mOP_PUSH_POS
,

499 
	mOP_POP_POS
,

500 
	mOP_PUSH_POS_NOT
,

501 
	mOP_FAIL_POS
,

502 
	mOP_PUSH_STOP_BT
,

503 
	mOP_POP_STOP_BT
,

504 
	mOP_LOOK_BEHIND
,

505 
	mOP_PUSH_LOOK_BEHIND_NOT
,

506 
	mOP_FAIL_LOOK_BEHIND_NOT
,

508 
	mOP_CALL
,

509 
	mOP_RETURN
,

511 
	mOP_STATE_CHECK_PUSH
,

512 
	mOP_STATE_CHECK_PUSH_OR_JUMP
,

513 
	mOP_STATE_CHECK
,

514 
	mOP_STATE_CHECK_ANYCHAR_STAR
,

515 
	mOP_STATE_CHECK_ANYCHAR_ML_STAR
,

518 
	mOP_SET_OPTION_PUSH
,

519 
	mOP_SET_OPTION


522 
	tRñAddrTy≥
;

523 
	tAbsAddrTy≥
;

524 
	tLígthTy≥
;

525 
	tRïótNumTy≥
;

526 
	tMemNumTy≥
;

527 
	tSèãCheckNumTy≥
;

528 * 
	tPoöãrTy≥
;

530 
	#SIZE_OPCODE
 1

	)

531 
	#SIZE_RELADDR
 (
RñAddrTy≥
)

	)

532 
	#SIZE_ABSADDR
 (
AbsAddrTy≥
)

	)

533 
	#SIZE_LENGTH
 (
LígthTy≥
)

	)

534 
	#SIZE_MEMNUM
 (
MemNumTy≥
)

	)

535 
	#SIZE_STATE_CHECK_NUM
 (
SèãCheckNumTy≥
)

	)

536 
	#SIZE_REPEATNUM
 (
RïótNumTy≥
)

	)

537 
	#SIZE_OPTION
 (
OnigO±i⁄Ty≥
)

	)

538 
	#SIZE_CODE_POINT
 (
OnigCodePoöt
)

	)

539 
	#SIZE_POINTER
 (
PoöãrTy≥
)

	)

542 
	#GET_RELADDR_INC
(
addr
,
p
Ë
	`PLATFORM_GET_INC
◊ddr,Ö, 
RñAddrTy≥
)

	)

543 
	#GET_ABSADDR_INC
(
addr
,
p
Ë
	`PLATFORM_GET_INC
◊ddr,Ö, 
AbsAddrTy≥
)

	)

544 
	#GET_LENGTH_INC
(
Àn
,
p
Ë
	`PLATFORM_GET_INC
÷í,Ö, 
LígthTy≥
)

	)

545 
	#GET_MEMNUM_INC
(
num
,
p
Ë
	`PLATFORM_GET_INC
“um,Ö, 
MemNumTy≥
)

	)

546 
	#GET_REPEATNUM_INC
(
num
,
p
Ë
	`PLATFORM_GET_INC
“um,Ö, 
RïótNumTy≥
)

	)

547 
	#GET_OPTION_INC
(
›ti⁄
,
p
Ë
	`PLATFORM_GET_INC
(›ti⁄,Ö, 
OnigO±i⁄Ty≥
)

	)

548 
	#GET_POINTER_INC
(
±r
,
p
Ë
	`PLATFORM_GET_INC
’å,Ö, 
PoöãrTy≥
)

	)

549 
	#GET_STATE_CHECK_NUM_INC
(
num
,
p
Ë
	`PLATFORM_GET_INC
“um,Ö, 
SèãCheckNumTy≥
)

	)

552 
	#GET_CODE_POINT
(
code
,
p
Ëcodê*((
OnigCodePoöt
* )’))

	)

553 
	#GET_BYTE_INC
(
byã
,
p
) do{\

554 
byã
 = *(
p
);\

555 (
p
)++;\

556 } 0)

	)

560 
	#SIZE_OP_ANYCHAR_STAR
 
SIZE_OPCODE


	)

561 
	#SIZE_OP_ANYCHAR_STAR_PEEK_NEXT
 (
SIZE_OPCODE
 + 1)

	)

562 
	#SIZE_OP_JUMP
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
)

	)

563 
	#SIZE_OP_PUSH
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
)

	)

564 
	#SIZE_OP_POP
 
SIZE_OPCODE


	)

565 
	#SIZE_OP_PUSH_OR_JUMP_EXACT1
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
 + 1)

	)

566 
	#SIZE_OP_PUSH_IF_PEEK_NEXT
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
 + 1)

	)

567 
	#SIZE_OP_REPEAT_INC
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

568 
	#SIZE_OP_REPEAT_INC_NG
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

569 
	#SIZE_OP_PUSH_POS
 
SIZE_OPCODE


	)

570 
	#SIZE_OP_PUSH_POS_NOT
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
)

	)

571 
	#SIZE_OP_POP_POS
 
SIZE_OPCODE


	)

572 
	#SIZE_OP_FAIL_POS
 
SIZE_OPCODE


	)

573 
	#SIZE_OP_SET_OPTION
 (
SIZE_OPCODE
 + 
SIZE_OPTION
)

	)

574 
	#SIZE_OP_SET_OPTION_PUSH
 (
SIZE_OPCODE
 + 
SIZE_OPTION
)

	)

575 
	#SIZE_OP_FAIL
 
SIZE_OPCODE


	)

576 
	#SIZE_OP_MEMORY_START
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

577 
	#SIZE_OP_MEMORY_START_PUSH
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

578 
	#SIZE_OP_MEMORY_END_PUSH
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

579 
	#SIZE_OP_MEMORY_END_PUSH_REC
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

580 
	#SIZE_OP_MEMORY_END
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

581 
	#SIZE_OP_MEMORY_END_REC
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

582 
	#SIZE_OP_PUSH_STOP_BT
 
SIZE_OPCODE


	)

583 
	#SIZE_OP_POP_STOP_BT
 
SIZE_OPCODE


	)

584 
	#SIZE_OP_NULL_CHECK_START
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

585 
	#SIZE_OP_NULL_CHECK_END
 (
SIZE_OPCODE
 + 
SIZE_MEMNUM
)

	)

586 
	#SIZE_OP_LOOK_BEHIND
 (
SIZE_OPCODE
 + 
SIZE_LENGTH
)

	)

587 
	#SIZE_OP_PUSH_LOOK_BEHIND_NOT
 (
SIZE_OPCODE
 + 
SIZE_RELADDR
 + 
SIZE_LENGTH
)

	)

588 
	#SIZE_OP_FAIL_LOOK_BEHIND_NOT
 
SIZE_OPCODE


	)

589 
	#SIZE_OP_CALL
 (
SIZE_OPCODE
 + 
SIZE_ABSADDR
)

	)

590 
	#SIZE_OP_RETURN
 
SIZE_OPCODE


	)

592 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


593 
	#SIZE_OP_STATE_CHECK
 (
SIZE_OPCODE
 + 
SIZE_STATE_CHECK_NUM
)

	)

594 
	#SIZE_OP_STATE_CHECK_PUSH
 (
SIZE_OPCODE
 + 
SIZE_STATE_CHECK_NUM
 + 
SIZE_RELADDR
)

	)

595 
	#SIZE_OP_STATE_CHECK_PUSH_OR_JUMP
 (
SIZE_OPCODE
 + 
SIZE_STATE_CHECK_NUM
 + 
SIZE_RELADDR
)

	)

596 
	#SIZE_OP_STATE_CHECK_ANYCHAR_STAR
 (
SIZE_OPCODE
 + 
SIZE_STATE_CHECK_NUM
)

	)

599 
	#MC_ESC
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
esc


	)

600 
	#MC_ANYCHAR
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
™ych¨


	)

601 
	#MC_ANYTIME
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
™ytime


	)

602 
	#MC_ZERO_OR_ONE_TIME
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
zîo_‹_⁄e_time


	)

603 
	#MC_ONE_OR_MORE_TIME
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
⁄e_‹_m‹e_time


	)

604 
	#MC_ANYCHAR_ANYTIME
(
syn
Ë(syn)->
mëa_ch¨_èbÀ
.
™ych¨_™ytime


	)

606 
	#IS_MC_ESC_CODE
(
code
, 
syn
) \

607 ((
code
Ë=
	`MC_ESC
(
syn
) && \

608 !
	`IS_SYNTAX_OP2
((
syn
), 
ONIG_SYN_OP2_INEFFECTIVE_ESCAPE
))

	)

611 
	#SYN_POSIX_COMMON_OP
 \

612 –
ONIG_SYN_OP_DOT_ANYCHAR
 | 
ONIG_SYN_OP_POSIX_BRACKET
 | \

613 
ONIG_SYN_OP_DECIMAL_BACKREF
 | \

614 
ONIG_SYN_OP_BRACKET_CC
 | 
ONIG_SYN_OP_ASTERISK_ZERO_INF
 | \

615 
ONIG_SYN_OP_LINE_ANCHOR
 | \

616 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 )

	)

618 
	#SYN_GNU_REGEX_OP
 \

619 –
ONIG_SYN_OP_DOT_ANYCHAR
 | 
ONIG_SYN_OP_BRACKET_CC
 | \

620 
ONIG_SYN_OP_POSIX_BRACKET
 | 
ONIG_SYN_OP_DECIMAL_BACKREF
 | \

621 
ONIG_SYN_OP_BRACE_INTERVAL
 | 
ONIG_SYN_OP_LPAREN_SUBEXP
 | \

622 
ONIG_SYN_OP_VBAR_ALT
 | \

623 
ONIG_SYN_OP_ASTERISK_ZERO_INF
 | 
ONIG_SYN_OP_PLUS_ONE_INF
 | \

624 
ONIG_SYN_OP_QMARK_ZERO_ONE
 | \

625 
ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR
 | 
ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR
 | \

626 
ONIG_SYN_OP_ESC_W_WORD
 | \

627 
ONIG_SYN_OP_ESC_B_WORD_BOUND
 | 
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 | \

628 
ONIG_SYN_OP_ESC_S_WHITE_SPACE
 | 
ONIG_SYN_OP_ESC_D_DIGIT
 | \

629 
ONIG_SYN_OP_LINE_ANCHOR
 )

	)

631 
	#SYN_GNU_REGEX_BV
 \

632 –
ONIG_SYN_CONTEXT_INDEP_ANCHORS
 | 
ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS
 | \

633 
ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS
 | 
ONIG_SYN_ALLOW_INVALID_INTERVAL
 | \

634 
ONIG_SYN_BACKSLASH_ESCAPE_IN_CC
 | 
ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC
 )

	)

637 
	#NCCLASS_FLAGS
(
cc
Ë((cc)->
Êags
)

	)

638 
	#NCCLASS_FLAG_SET
(
cc
,
Êag
Ë(
	`NCCLASS_FLAGS
(ccË|(Êag))

	)

639 
	#NCCLASS_FLAG_CLEAR
(
cc
,
Êag
Ë(
	`NCCLASS_FLAGS
(ccË&~(Êag))

	)

640 
	#IS_NCCLASS_FLAG_ON
(
cc
,
Êag
Ë((
	`NCCLASS_FLAGS
(ccË& (Êag)Ë!0)

	)

643 
	#FLAG_NCCLASS_NOT
 (1<<0)

	)

644 
	#FLAG_NCCLASS_SHARE
 (1<<1)

	)

646 
	#NCCLASS_SET_NOT
(
nd
Ë
	`NCCLASS_FLAG_SET
“d, 
FLAG_NCCLASS_NOT
)

	)

647 
	#NCCLASS_SET_SHARE
(
nd
Ë
	`NCCLASS_FLAG_SET
“d, 
FLAG_NCCLASS_SHARE
)

	)

648 
	#NCCLASS_CLEAR_NOT
(
nd
Ë
	`NCCLASS_FLAG_CLEAR
“d, 
FLAG_NCCLASS_NOT
)

	)

649 
	#IS_NCCLASS_NOT
(
nd
Ë
	`IS_NCCLASS_FLAG_ON
“d, 
FLAG_NCCLASS_NOT
)

	)

650 
	#IS_NCCLASS_SHARE
(
nd
Ë
	`IS_NCCLASS_FLAG_ON
“d, 
FLAG_NCCLASS_SHARE
)

	)

653 
	mty≥
;

656 } 
	tNodeBa£
;

659 
NodeBa£
 
	mba£
;

660 
	mÊags
;

661 
BôSë
 
	mbs
;

662 
BBuf
* 
	mmbuf
;

663 } 
	tCCœssNode
;

665 
	tOnigSèckIndex
;

667 
	s_OnigSèckTy≥
 {

668 
	mty≥
;

671 
UCh¨
 *
	mpcode
;

672 
UCh¨
 *
	mp°r
;

673 
UCh¨
 *
	mp°r_¥ev
;

674 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


675 
	m°©e_check
;

677 } 
	m°©e
;

679 
	mcou¡
;

680 
UCh¨
 *
	mpcode
;

681 
	mnum
;

682 } 
	mª≥©
;

684 
OnigSèckIndex
 
	msi
;

685 } 
	mª≥©_öc
;

687 
	mnum
;

688 
UCh¨
 *
	mp°r
;

690 
OnigSèckIndex
 
	m°¨t
;

691 
OnigSèckIndex
 
	míd
;

692 } 
	mmem
;

694 
	mnum
;

695 
UCh¨
 *
	mp°r
;

696 } 
	mnuŒ_check
;

697 #ifde‡
USE_SUBEXP_CALL


699 
UCh¨
 *
	mªt_addr
;

700 
	mnum
;

701 
UCh¨
 *
	mp°r
;

702 } 
	mˇŒ_‰ame
;

704 } 
	mu
;

705 } 
	tOnigSèckTy≥
;

708 * 
	m°ack_p
;

709 
	m°ack_n
;

710 
OnigO±i⁄Ty≥
 
	m›ti⁄s
;

711 
OnigRegi⁄
* 
	mªgi⁄
;

712 
	m±r_num
;

713 c⁄° 
UCh¨
* 
	m°¨t
;

714 #ifde‡
USE_FIND_LONGEST_SEARCH_ALL_OF_RANGE


715 
	mbe°_Àn
;

716 
UCh¨
* 
	mbe°_s
;

718 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


719 * 
	m°©e_check_buff
;

720 
	m°©e_check_buff_size
;

722 } 
	tOnigM©chArg
;

725 
	#IS_CODE_SB_WORD
(
íc
,
code
) \

726 (
	`ONIGENC_IS_CODE_ASCII
(
code
Ë&& 
	`ONIGENC_IS_CODE_WORD
(
íc
,code))

	)

728 
	sOnigEndCÆlLi°Iãm
 {

729 
OnigEndCÆlLi°Iãm
* 
	m√xt
;

730 (*
	mfunc
)();

731 } 
	tOnigEndCÆlLi°IãmTy≥
;

733 
⁄ig_add_íd_ˇŒ
((*
func
)());

736 #ifde‡
ONIG_DEBUG


739 
›code
;

740 * 
«me
;

741 
¨g_ty≥
;

742 } 
	tOnigOpInfoTy≥
;

744 
OnigOpInfoTy≥
 
OnigOpInfo
[];

747 
⁄ig_¥öt_compûed_byã_code
 
	`P_
((
FILE
* 
f
, 
UCh¨
* 
bp
, UCh¨** 
√xç
, 
OnigEncodög
 
íc
));

749 #ifde‡
ONIG_DEBUG_STATISTICS


750 
⁄ig_°©i°ics_öô
 
	`P_
(());

751 
⁄ig_¥öt_°©i°ics
 
	`P_
((
FILE
* 
f
));

755 
	`⁄ig_w¨nög
(c⁄° * 
s
);

756 
UCh¨
* 
⁄ig_îr‹_code_to_f‹m©
 
	`P_
((
code
));

757 
⁄ig_¢¥ötf_wôh_∑âîn
 
	`PV_
((
UCh¨
 
buf
[], 
bufsize
, 
OnigEncodög
 
íc
, UCh¨* 
∑t
, UCh¨* 
∑t_íd
, c⁄° UCh¨ *
fmt
, ...));

758 
⁄ig_bbuf_öô
 
	`P_
((
BBuf
* 
buf
, 
size
));

759 
⁄ig_compûe
 
	`P_
((
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
∑âîn_íd
, 
OnigEº‹Info
* 
eöfo
));

760 
⁄ig_å™s„r
 
	`P_
((
ªgex_t
* 
to
,Ñegex_t* 
‰om
));

761 
⁄ig_is_code_ö_cc
 
	`P_
((
OnigEncodög
 
íc
, 
OnigCodePoöt
 
code
, 
CCœssNode
* 
cc
));

762 
⁄ig_is_code_ö_cc_Àn
 
	`P_
((
í˛í
, 
OnigCodePoöt
 
code
, 
CCœssNode
* 
cc
));

765 
	thash_èbÀ_ty≥
;

766 #ifde‡
_WIN32


767 
	~<wödows.h
>

768 
ULONG_PTR
 
	thash_d©a_ty≥
;

770 
	thash_d©a_ty≥
;

773 
hash_èbÀ_ty≥
* 
⁄ig_°_öô_°ªnd_èbÀ_wôh_size
 
	`P_
((
size
));

774 
⁄ig_°_lookup_°ªnd
 
	`P_
((
hash_èbÀ_ty≥
* 
èbÀ
, c⁄° 
UCh¨
* 
°r_key
, c⁄° UCh¨* 
íd_key
, 
hash_d©a_ty≥
 *
vÆue
));

775 
⁄ig_°_ö£π_°ªnd
 
	`P_
((
hash_èbÀ_ty≥
* 
èbÀ
, c⁄° 
UCh¨
* 
°r_key
, c⁄° UCh¨* 
íd_key
, 
hash_d©a_ty≥
 
vÆue
));

777 (*
	tONIGENC_INIT_PROPERTY_LIST_FUNC_TYPE
)();

	@modules/oniguruma/src/regparse.c

29 
	~"ªg∑r£.h
"

30 
	~"°.h
"

32 #ifde‡
DEBUG_NODE_FREE


33 
	~<°dio.h
>

36 
	#WARN_BUFSIZE
 256

	)

38 
	#CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS


	)

41 
OnigSy¡axTy≥
 
	gOnigSy¡axRuby
 = {

42 (–
SYN_GNU_REGEX_OP
 | 
ONIG_SYN_OP_QMARK_NON_GREEDY
 |

43 
ONIG_SYN_OP_ESC_OCTAL3
 | 
ONIG_SYN_OP_ESC_X_HEX2
 |

44 
ONIG_SYN_OP_ESC_X_BRACE_HEX8
 | 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 |

45 
ONIG_SYN_OP_ESC_C_CONTROL
 )

46 & ~
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 )

47 , ( 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
 |

48 
ONIG_SYN_OP2_OPTION_RUBY
 |

49 
ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
 | 
ONIG_SYN_OP2_ESC_K_NAMED_BACKREF
 |

50 
ONIG_SYN_OP2_ESC_G_SUBEXP_CALL
 |

51 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
 |

52 
ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
 |

53 
ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT
 |

54 
ONIG_SYN_OP2_CCLASS_SET_OP
 | 
ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL
 |

55 
ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META
 | 
ONIG_SYN_OP2_ESC_V_VTAB
 |

56 
ONIG_SYN_OP2_ESC_H_XDIGIT
 )

57 , ( 
SYN_GNU_REGEX_BV
 |

58 
ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV
 |

59 
ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND
 |

60 
ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
 |

61 
ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME
 |

62 
ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY
 |

63 
ONIG_SYN_WARN_CC_OP_NOT_ESCAPED
 |

64 
ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT
 )

65 , 
ONIG_OPTION_NONE


68 (
OnigCodePoöt
 )'\\'

69 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


70 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


71 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


72 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


73 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


77 
OnigSy¡axTy≥
* 
	gOnigDeÁu…Sy¡ax
 = 
ONIG_SYNTAX_RUBY
;

79 
	$⁄ig_nuŒ_w¨n
(c⁄° * 
s
 
ARG_UNUSED
Ë{ 
	}
}

81 #ifde‡
DEFAULT_WARN_FUNCTION


82 
OnigW¨nFunc
 
⁄ig_w¨n
 = (OnigW¨nFun¯)
DEFAULT_WARN_FUNCTION
;

84 
OnigW¨nFunc
 
	g⁄ig_w¨n
 = 
⁄ig_nuŒ_w¨n
;

87 #ifde‡
DEFAULT_VERB_WARN_FUNCTION


88 
OnigW¨nFunc
 
	g⁄ig_vîb_w¨n
 = (OnigW¨nFun¯)
DEFAULT_VERB_WARN_FUNCTION
;

90 
OnigW¨nFunc
 
	g⁄ig_vîb_w¨n
 = 
⁄ig_nuŒ_w¨n
;

93 
	$⁄ig_£t_w¨n_func
(
OnigW¨nFunc
 
f
)

95 
⁄ig_w¨n
 = 
f
;

96 
	}
}

98 
	$⁄ig_£t_vîb_w¨n_func
(
OnigW¨nFunc
 
f
)

100 
⁄ig_vîb_w¨n
 = 
f
;

101 
	}
}

104 
	$⁄ig_w¨nög
(c⁄° * 
s
)

106 i‡(
⁄ig_w¨n
 =
⁄ig_nuŒ_w¨n
)  ;

108 (*
⁄ig_w¨n
)(
s
);

109 
	}
}

112 
P¨£DïthLimô
 = 
DEFAULT_PARSE_DEPTH_LIMIT
;

115 
	$⁄ig_gë_∑r£_dïth_limô
()

117  
P¨£DïthLimô
;

118 
	}
}

121 
	$⁄ig_£t_∑r£_dïth_limô
(
dïth
)

123 i‡(
dïth
 == 0)

124 
P¨£DïthLimô
 = 
DEFAULT_PARSE_DEPTH_LIMIT
;

126 
P¨£DïthLimô
 = 
dïth
;

128 
	}
}

132 
	$bbuf_‰ì
(
BBuf
* 
bbuf
)

134 i‡(
	`IS_NOT_NULL
(
bbuf
)) {

135 i‡(
	`IS_NOT_NULL
(
bbuf
->
p
)Ë
	`x‰ì
(bbuf->p);

136 
	`x‰ì
(
bbuf
);

138 
	}
}

141 
	$bbuf_˛⁄e
(
BBuf
** 
πo
, BBuf* 
‰om
)

143 
r
;

144 
BBuf
 *
to
;

146 *
πo
 = 
to
 = (
BBuf
* )
	`xmÆloc
((BBuf));

147 
	`CHECK_NULL_RETURN_MEMERR
(
to
);

148 
r
 = 
	`BBUF_INIT
(
to
, 
‰om
->
Æloc
);

149 i‡(
r
 != 0) Ñ;

150 
to
->
u£d
 = 
‰om
->used;

151 
	`xmem˝y
(
to
->
p
, 
‰om
->p, from->
u£d
);

153 
	}
}

155 
	#BACKREF_REL_TO_ABS
(
ªl_no
, 
ív
) \

156 ((
ív
)->
num_mem
 + 1 + (
ªl_no
))

	)

158 
	#ONOFF
(
v
,
f
,
√g©ive
Ë“eg©iveË? ((vË&~(f)Ë: ((vË|(f))

	)

160 
	#MBCODE_START_POS
(
íc
) \

161 (
OnigCodePoöt
 )(
	`ONIGENC_MBC_MINLEN
(
íc
Ë> 1 ? 0 : 0x80)

	)

163 
	#SET_ALL_MULTI_BYTE_RANGE
(
íc
, 
pbuf
) \

164 
	`add_code_ønge_to_buf
(
pbuf
, 
	`MBCODE_START_POS
(
íc
), ~((
OnigCodePoöt
 )0))

	)

166 
	#ADD_ALL_MULTI_BYTE_RANGE
(
íc
, 
mbuf
) do {\

167 i‡(! 
	`ONIGENC_IS_SINGLEBYTE
(
íc
)) {\

168 
r
 = 
	`SET_ALL_MULTI_BYTE_RANGE
(
íc
, &(
mbuf
));\

169 i‡(
r
) Ñ;\

171 } 0)

	)

174 
	#BITSET_IS_EMPTY
(
bs
,
em±y
) do {\

175 
i
;\

176 
em±y
 = 1;\

177 
i
 = 0; i < ()
BITSET_SIZE
; i++) {\

178 i‡((
bs
)[
i
] != 0) {\

179 
em±y
 = 0; ;\

182 } 0)

	)

185 
	$bô£t_£t_ønge
(
BôSëRef
 
bs
, 
‰om
, 
to
)

187 
i
;

188 
i
 = 
‰om
; i <
to
 && i < 
SINGLE_BYTE_SIZE
; i++) {

189 
	`BITSET_SET_BIT
(
bs
, 
i
);

191 
	}
}

195 
	$bô£t_£t_Æl
(
BôSëRef
 
bs
)

197 
i
;

198 
i
 = 0; i < 
BITSET_SIZE
; i++Ë{ 
bs
[i] = ~((
Bôs
 )0); }

199 
	}
}

203 
	$bô£t_övît
(
BôSëRef
 
bs
)

205 
i
;

206 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ 
bs
[i] = ~(bs[i]); }

207 
	}
}

210 
	$bô£t_övît_to
(
BôSëRef
 
‰om
, BôSëRe‡
to
)

212 
i
;

213 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ 
to
[i] = ~(
‰om
[i]); }

214 
	}
}

217 
	$bô£t_™d
(
BôSëRef
 
de°
, BôSëRe‡
bs
)

219 
i
;

220 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ 
de°
[i] &
bs
[i]; }

221 
	}
}

224 
	$bô£t_‹
(
BôSëRef
 
de°
, BôSëRe‡
bs
)

226 
i
;

227 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ 
de°
[i] |
bs
[i]; }

228 
	}
}

231 
	$bô£t_c›y
(
BôSëRef
 
de°
, BôSëRe‡
bs
)

233 
i
;

234 
i
 = 0; i < ()
BITSET_SIZE
; i++Ë{ 
de°
[i] = 
bs
[i]; }

235 
	}
}

238 
	$⁄ig_°∫cmp
(c⁄° 
UCh¨
* 
s1
, c⁄° UCh¨* 
s2
, 
n
)

240 
x
;

242 
n
-- > 0) {

243 
x
 = *
s2
++ - *
s1
++;

244 i‡(
x
)  x;

247 
	}
}

250 
	$⁄ig_°r˝y
(
UCh¨
* 
de°
, c⁄° UCh¨* 
§c
, c⁄° UCh¨* 
íd
)

252 
Àn
 = 
íd
 - 
§c
;

253 i‡(
Àn
 > 0) {

254 
	`xmem˝y
(
de°
, 
§c
, 
Àn
);

255 
de°
[
Àn
] = (
UCh¨
 )0;

257 
	}
}

259 #ifde‡
USE_NAMED_GROUP


260 
UCh¨
*

261 
	$°rdup_wôh_nuŒ
(
OnigEncodög
 
íc
, 
UCh¨
* 
s
, UCh¨* 
íd
)

263 
¶í
, 
ãrm_Àn
, 
i
;

264 
UCh¨
 *
r
;

266 
¶í
 = 
íd
 - 
s
;

267 
ãrm_Àn
 = 
	`ONIGENC_MBC_MINLEN
(
íc
);

269 
r
 = (
UCh¨
* )
	`xmÆloc
(
¶í
 + 
ãrm_Àn
);

270 
	`CHECK_NULL_RETURN
(
r
);

271 
	`xmem˝y
(
r
, 
s
, 
¶í
);

273 
i
 = 0; i < 
ãrm_Àn
; i++)

274 
r
[
¶í
 + 
i
] = (
UCh¨
 )0;

276  
r
;

277 
	}
}

281 
	#PEND_VALUE
 0

	)

283 
	#PFETCH_READY
 
UCh¨
* 
p„tch_¥ev


	)

284 
	#PEND
 (
p
 < 
íd
 ? 0 : 1)

	)

285 
	#PUNFETCH
 
p
 = 
p„tch_¥ev


	)

286 
	#PINC
 do { \

287 
p„tch_¥ev
 = 
p
; \

288 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö); \

289 } 0)

	)

290 
	#PFETCH
(
c
) do { \

291 
c
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
); \

292 
p„tch_¥ev
 = 
p
; \

293 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö); \

294 } 0)

	)

296 
	#PINC_S
 do { \

297 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö); \

298 } 0)

	)

299 
	#PFETCH_S
(
c
) do { \

300 
c
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
); \

301 
p
 +
	`ONIGENC_MBC_ENC_LEN
(
íc
,Ö); \

302 } 0)

	)

304 
	#PPEEK
 (
p
 < 
íd
 ? 
	`ONIGENC_MBC_TO_CODE
(
íc
,Ö,ÉndË: 
PEND_VALUE
)

	)

305 
	#PPEEK_IS
(
c
Ë(
PPEEK
 =(
OnigCodePoöt
 )c)

	)

307 
UCh¨
*

308 
	$°rˇt_ˇ∑
(
UCh¨
* 
de°
, UCh¨* 
de°_íd
, c⁄° UCh¨* 
§c
, c⁄° UCh¨* 
§c_íd
,

309 
ˇ∑
)

311 
UCh¨
* 
r
;

313 i‡(
de°
)

314 
r
 = (
UCh¨
* )
	`xªÆloc
(
de°
, 
ˇ∑
 + 1);

316 
r
 = (
UCh¨
* )
	`xmÆloc
(
ˇ∑
 + 1);

318 
	`CHECK_NULL_RETURN
(
r
);

319 
	`⁄ig_°r˝y
(
r
 + (
de°_íd
 - 
de°
), 
§c
, 
§c_íd
);

320  
r
;

321 
	}
}

324 
UCh¨
*

325 
	$°rˇt_ˇ∑_‰om_°©ic
(
UCh¨
* 
de°
, UCh¨* 
de°_íd
,

326 c⁄° 
UCh¨
* 
§c
, c⁄° UCh¨* 
§c_íd
, 
ˇ∑
)

328 
UCh¨
* 
r
;

330 
r
 = (
UCh¨
* )
	`xmÆloc
(
ˇ∑
 + 1);

331 
	`CHECK_NULL_RETURN
(
r
);

332 
	`⁄ig_°r˝y
(
r
, 
de°
, 
de°_íd
);

333 
	`⁄ig_°r˝y
(
r
 + (
de°_íd
 - 
de°
), 
§c
, 
§c_íd
);

334  
r
;

335 
	}
}

338 #ifde‡
USE_ST_LIBRARY


341 
UCh¨
* 
s
;

342 
UCh¨
* 
íd
;

343 } 
	t°_°r_íd_key
;

346 
	$°r_íd_cmp
(
°_°r_íd_key
* 
x
, st_°r_íd_key* 
y
)

348 
UCh¨
 *
p
, *
q
;

349 
c
;

351 i‡((
x
->
íd
 - x->
s
Ë!(
y
->end - y->s))

354 
p
 = 
x
->
s
;

355 
q
 = 
y
->
s
;

356 
p
 < 
x
->
íd
) {

357 
c
 = ()*
p
 - ()*
q
;

358 i‡(
c
 != 0)  c;

360 
p
++; 
q
++;

364 
	}
}

367 
	$°r_íd_hash
(
°_°r_íd_key
* 
x
)

369 
UCh¨
 *
p
;

370 
vÆ
 = 0;

372 
p
 = 
x
->
s
;

373 
p
 < 
x
->
íd
) {

374 
vÆ
 = vÆ * 997 + ()*
p
++;

377  
vÆ
 + (val >> 5);

378 
	}
}

380 
hash_èbÀ_ty≥
*

381 
	$⁄ig_°_öô_°ªnd_èbÀ_wôh_size
(
size
)

383 
°_hash_ty≥
 
hashTy≥
 = {

384 
°r_íd_cmp
,

385 
°r_íd_hash
,

388  (
hash_èbÀ_ty≥
* )

389 
	`⁄ig_°_öô_èbÀ_wôh_size
(&
hashTy≥
, 
size
);

390 
	}
}

393 
	$⁄ig_°_lookup_°ªnd
(
hash_èbÀ_ty≥
* 
èbÀ
, c⁄° 
UCh¨
* 
°r_key
,

394 c⁄° 
UCh¨
* 
íd_key
, 
hash_d©a_ty≥
 *
vÆue
)

396 
°_°r_íd_key
 
key
;

398 
key
.
s
 = (
UCh¨
* )
°r_key
;

399 
key
.
íd
 = (
UCh¨
* )
íd_key
;

401  
	`⁄ig_°_lookup
(
èbÀ
, (
°_d©a_t
 )(&
key
), 
vÆue
);

402 
	}
}

405 
	$⁄ig_°_ö£π_°ªnd
(
hash_èbÀ_ty≥
* 
èbÀ
, c⁄° 
UCh¨
* 
°r_key
,

406 c⁄° 
UCh¨
* 
íd_key
, 
hash_d©a_ty≥
 
vÆue
)

408 
°_°r_íd_key
* 
key
;

409 
ªsu…
;

411 
key
 = (
°_°r_íd_key
* )
	`xmÆloc
((st_str_end_key));

412 
key
->
s
 = (
UCh¨
* )
°r_key
;

413 
key
->
íd
 = (
UCh¨
* )
íd_key
;

414 
ªsu…
 = 
	`⁄ig_°_ö£π
(
èbÀ
, (
°_d©a_t
 )
key
, 
vÆue
);

415 i‡(
ªsu…
) {

416 
	`x‰ì
(
key
);

418  
ªsu…
;

419 
	}
}

424 #ifde‡
USE_NAMED_GROUP


426 
	#INIT_NAME_BACKREFS_ALLOC_NUM
 8

	)

429 
UCh¨
* 
«me
;

430 
«me_Àn
;

431 
back_num
;

432 
back_Æloc
;

433 
back_ªf1
;

434 * 
back_ªfs
;

435 } 
	tNameE¡ry
;

437 #ifde‡
USE_ST_LIBRARY


439 
°_èbÀ
 
	tNameTabÀ
;

440 
°_d©a_t
 
	tHashD©aTy≥
;

442 
	#NAMEBUF_SIZE
 24

	)

443 
	#NAMEBUF_SIZE_1
 25

	)

445 #ifde‡
ONIG_DEBUG


447 
	$i_¥öt_«me_íåy
(
UCh¨
* 
key
, 
NameE¡ry
* 
e
, * 
¨g
)

449 
i
;

450 
FILE
* 
Â
 = (FILE* )
¨g
;

452 
	`Ârötf
(
Â
, "%s: ", 
e
->
«me
);

453 i‡(
e
->
back_num
 == 0)

454 
	`Âuts
("-", 
Â
);

455 i‡(
e
->
back_num
 == 1)

456 
	`Ârötf
(
Â
, "%d", 
e
->
back_ªf1
);

458 
i
 = 0; i < 
e
->
back_num
; i++) {

459 i‡(
i
 > 0Ë
	`Ârötf
(
Â
, ", ");

460 
	`Ârötf
(
Â
, "%d", 
e
->
back_ªfs
[
i
]);

463 
	`Âuts
("\n", 
Â
);

464  
ST_CONTINUE
;

465 
	}
}

468 
	$⁄ig_¥öt_«mes
(
FILE
* 
Â
, 
ªgex_t
* 
ªg
)

470 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

472 i‡(
	`IS_NOT_NULL
(
t
)) {

473 
	`Ârötf
(
Â
, "nameÅable\n");

474 
	`⁄ig_°_f‹óch
(
t
, 
i_¥öt_«me_íåy
, (
HashD©aTy≥
 )
Â
);

475 
	`Âuts
("\n", 
Â
);

478 
	}
}

482 
	$i_‰ì_«me_íåy
(
UCh¨
* 
key
, 
NameE¡ry
* 
e
, * 
¨g
 
ARG_UNUSED
)

484 
	`x‰ì
(
e
->
«me
);

485 i‡(
	`IS_NOT_NULL
(
e
->
back_ªfs
)Ë
	`x‰ì
(e->back_refs);

486 
	`x‰ì
(
key
);

487 
	`x‰ì
(
e
);

488  
ST_DELETE
;

489 
	}
}

492 
	$«mes_˛ór
(
ªgex_t
* 
ªg
)

494 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

496 i‡(
	`IS_NOT_NULL
(
t
)) {

497 
	`⁄ig_°_f‹óch
(
t
, 
i_‰ì_«me_íåy
, 0);

500 
	}
}

503 
	$⁄ig_«mes_‰ì
(
ªgex_t
* 
ªg
)

505 
r
;

506 
NameTabÀ
* 
t
;

508 
r
 = 
	`«mes_˛ór
(
ªg
);

509 i‡(
r
) Ñ;

511 
t
 = (
NameTabÀ
* )
ªg
->
«me_èbÀ
;

512 i‡(
	`IS_NOT_NULL
(
t
)Ë
	`⁄ig_°_‰ì_èbÀ
(t);

513 
ªg
->
«me_èbÀ
 = (* )
NULL
;

515 
	}
}

517 
NameE¡ry
*

518 
	$«me_föd
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
«me
, c⁄° UCh¨* 
«me_íd
)

520 
NameE¡ry
* 
e
;

521 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

523 
e
 = (
NameE¡ry
* )
NULL
;

524 i‡(
	`IS_NOT_NULL
(
t
)) {

525 
	`⁄ig_°_lookup_°ªnd
(
t
, 
«me
, 
«me_íd
, (
HashD©aTy≥
* )((* )(&
e
)));

527  
e
;

528 
	}
}

531 (*
func
)(c⁄° 
UCh¨
*, c⁄° UCh¨*,,*,
ªgex_t
*,*);

532 
ªgex_t
* 
ªg
;

533 * 
¨g
;

534 
ªt
;

535 
OnigEncodög
 
íc
;

536 } 
	tINamesArg
;

539 
	$i_«mes
(
UCh¨
* 
key
 
ARG_UNUSED
, 
NameE¡ry
* 
e
, 
INamesArg
* 
¨g
)

541 
r
 = (*(
¨g
->
func
))(
e
->
«me
,

542 
e
->
«me
 +É->
«me_Àn
,

543 
e
->
back_num
,

544 (
e
->
back_num
 > 1 ?É->
back_ªfs
 : &”->
back_ªf1
)),

545 
¨g
->
ªg
,árg->arg);

546 i‡(
r
 != 0) {

547 
¨g
->
ªt
 = 
r
;

548  
ST_STOP
;

550  
ST_CONTINUE
;

551 
	}
}

554 
	$⁄ig_f‹óch_«me
(
ªgex_t
* 
ªg
,

555 (*
func
)(c⁄° 
UCh¨
*, c⁄° UCh¨*,,*,
ªgex_t
*,*), * 
¨g
)

557 
INamesArg
 
«rg
;

558 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

560 
«rg
.
ªt
 = 0;

561 i‡(
	`IS_NOT_NULL
(
t
)) {

562 
«rg
.
func
 = func;

563 
«rg
.
ªg
 =Ñeg;

564 
«rg
.
¨g
 =árg;

565 
«rg
.
íc
 = 
ªg
->enc;

566 
	`⁄ig_°_f‹óch
(
t
, 
i_«mes
, (
HashD©aTy≥
 )&
«rg
);

568  
«rg
.
ªt
;

569 
	}
}

572 
	$i_ªnumbî_«me
(
UCh¨
* 
key
 
ARG_UNUSED
, 
NameE¡ry
* 
e
, 
GroupNumRem≠
* 
m≠
)

574 
i
;

576 i‡(
e
->
back_num
 > 1) {

577 
i
 = 0; i < 
e
->
back_num
; i++) {

578 
e
->
back_ªfs
[
i
] = 
m≠
[e->back_ªfs[i]].
√w_vÆ
;

581 i‡(
e
->
back_num
 == 1) {

582 
e
->
back_ªf1
 = 
m≠
[e->back_ªf1].
√w_vÆ
;

585  
ST_CONTINUE
;

586 
	}
}

589 
	$⁄ig_ªnumbî_«me_èbÀ
(
ªgex_t
* 
ªg
, 
GroupNumRem≠
* 
m≠
)

591 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

593 i‡(
	`IS_NOT_NULL
(
t
)) {

594 
	`⁄ig_°_f‹óch
(
t
, 
i_ªnumbî_«me
, (
HashD©aTy≥
 )
m≠
);

597 
	}
}

601 
	$⁄ig_numbî_of_«mes
(
ªgex_t
* 
ªg
)

603 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

605 i‡(
	`IS_NOT_NULL
(
t
))

606  
t
->
num_íåõs
;

609 
	}
}

613 
	#INIT_NAMES_ALLOC_NUM
 8

	)

616 
NameE¡ry
* 
e
;

617 
num
;

618 
Æloc
;

619 } 
	tNameTabÀ
;

621 #ifde‡
ONIG_DEBUG


623 
	$⁄ig_¥öt_«mes
(
FILE
* 
Â
, 
ªgex_t
* 
ªg
)

625 
i
, 
j
;

626 
NameE¡ry
* 
e
;

627 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

629 i‡(
	`IS_NOT_NULL
(
t
Ë&&Å->
num
 > 0) {

630 
	`Ârötf
(
Â
, "nameÅable\n");

631 
i
 = 0; i < 
t
->
num
; i++) {

632 
e
 = &(
t
->e[
i
]);

633 
	`Ârötf
(
Â
, "%s: ", 
e
->
«me
);

634 i‡(
e
->
back_num
 == 0) {

635 
	`Âuts
("-", 
Â
);

637 i‡(
e
->
back_num
 == 1) {

638 
	`Ârötf
(
Â
, "%d", 
e
->
back_ªf1
);

641 
j
 = 0; j < 
e
->
back_num
; j++) {

642 i‡(
j
 > 0Ë
	`Ârötf
(
Â
, ", ");

643 
	`Ârötf
(
Â
, "%d", 
e
->
back_ªfs
[
j
]);

646 
	`Âuts
("\n", 
Â
);

648 
	`Âuts
("\n", 
Â
);

651 
	}
}

655 
	$«mes_˛ór
(
ªgex_t
* 
ªg
)

657 
i
;

658 
NameE¡ry
* 
e
;

659 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

661 i‡(
	`IS_NOT_NULL
(
t
)) {

662 
i
 = 0; i < 
t
->
num
; i++) {

663 
e
 = &(
t
->e[
i
]);

664 i‡(
	`IS_NOT_NULL
(
e
->
«me
)) {

665 
	`x‰ì
(
e
->
«me
);

666 
e
->
«me
 = 
NULL
;

667 
e
->
«me_Àn
 = 0;

668 
e
->
back_num
 = 0;

669 
e
->
back_Æloc
 = 0;

670 i‡(
	`IS_NOT_NULL
(
e
->
back_ªfs
)Ë
	`x‰ì
(e->back_refs);

671 
e
->
back_ªfs
 = (* )
NULL
;

674 i‡(
	`IS_NOT_NULL
(
t
->
e
)) {

675 
	`x‰ì
(
t
->
e
);

676 
t
->
e
 = 
NULL
;

678 
t
->
num
 = 0;

681 
	}
}

684 
	$⁄ig_«mes_‰ì
(
ªgex_t
* 
ªg
)

686 
r
;

687 
NameTabÀ
* 
t
;

689 
r
 = 
	`«mes_˛ór
(
ªg
);

690 i‡(
r
) Ñ;

692 
t
 = (
NameTabÀ
* )
ªg
->
«me_èbÀ
;

693 i‡(
	`IS_NOT_NULL
(
t
)Ë
	`x‰ì
(t);

694 
ªg
->
«me_èbÀ
 = 
NULL
;

696 
	}
}

698 
NameE¡ry
*

699 
	$«me_föd
(
ªgex_t
* 
ªg
, 
UCh¨
* 
«me
, UCh¨* 
«me_íd
)

701 
i
, 
Àn
;

702 
NameE¡ry
* 
e
;

703 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

705 i‡(
	`IS_NOT_NULL
(
t
)) {

706 
Àn
 = 
«me_íd
 - 
«me
;

707 
i
 = 0; i < 
t
->
num
; i++) {

708 
e
 = &(
t
->e[
i
]);

709 i‡(
Àn
 =
e
->
«me_Àn
 && 
	`⁄ig_°∫cmp
(
«me
,É->name,Üen) == 0)

710  
e
;

713  (
NameE¡ry
* )
NULL
;

714 
	}
}

717 
	$⁄ig_f‹óch_«me
(
ªgex_t
* 
ªg
,

718 (*
func
)(c⁄° 
UCh¨
*, c⁄° UCh¨*,,*,
ªgex_t
*,*), * 
¨g
)

720 
i
, 
r
;

721 
NameE¡ry
* 
e
;

722 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

724 i‡(
	`IS_NOT_NULL
(
t
)) {

725 
i
 = 0; i < 
t
->
num
; i++) {

726 
e
 = &(
t
->e[
i
]);

727 
r
 = (*
func
)(
e
->
«me
,É->«mê+É->
«me_Àn
,É->
back_num
,

728 (
e
->
back_num
 > 1 ?É->
back_ªfs
 : &”->
back_ªf1
)),

729 
ªg
, 
¨g
);

730 i‡(
r
 != 0) Ñ;

734 
	}
}

737 
	$⁄ig_numbî_of_«mes
(
ªgex_t
* 
ªg
)

739 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

741 i‡(
	`IS_NOT_NULL
(
t
))

742  
t
->
num
;

745 
	}
}

750 
	$«me_add
(
ªgex_t
* 
ªg
, 
UCh¨
* 
«me
, UCh¨* 
«me_íd
, 
backªf
, 
SˇnEnv
* 
ív
)

752 
Æloc
;

753 
NameE¡ry
* 
e
;

754 
NameTabÀ
* 
t
 = (NameTabÀ* )
ªg
->
«me_èbÀ
;

756 i‡(
«me_íd
 - 
«me
 <= 0)

757  
ONIGERR_EMPTY_GROUP_NAME
;

759 
e
 = 
	`«me_föd
(
ªg
, 
«me
, 
«me_íd
);

760 i‡(
	`IS_NULL
(
e
)) {

761 #ifde‡
USE_ST_LIBRARY


762 i‡(
	`IS_NULL
(
t
)) {

763 
t
 = 
	`⁄ig_°_öô_°ªnd_èbÀ_wôh_size
(5);

764 
ªg
->
«me_èbÀ
 = (* )
t
;

766 
e
 = (
NameE¡ry
* )
	`xmÆloc
((NameEntry));

767 
	`CHECK_NULL_RETURN_MEMERR
(
e
);

769 
e
->
«me
 = 
	`°rdup_wôh_nuŒ
(
ªg
->
íc
,Çame, 
«me_íd
);

770 i‡(
	`IS_NULL
(
e
->
«me
)) {

771 
	`x‰ì
(
e
);  
ONIGERR_MEMORY
;

773 
	`⁄ig_°_ö£π_°ªnd
(
t
, 
e
->
«me
, (e->«mê+ (
«me_íd
 -Çame)),

774 (
HashD©aTy≥
 )
e
);

776 
e
->
«me_Àn
 = 
«me_íd
 - 
«me
;

777 
e
->
back_num
 = 0;

778 
e
->
back_Æloc
 = 0;

779 
e
->
back_ªfs
 = (* )
NULL
;

783 i‡(
	`IS_NULL
(
t
)) {

784 
Æloc
 = 
INIT_NAMES_ALLOC_NUM
;

785 
t
 = (
NameTabÀ
* )
	`xmÆloc
((NameTable));

786 
	`CHECK_NULL_RETURN_MEMERR
(
t
);

787 
t
->
e
 = 
NULL
;

788 
t
->
Æloc
 = 0;

789 
t
->
num
 = 0;

791 
t
->
e
 = (
NameE¡ry
* )
	`xmÆloc
((NameE¡ryË* 
Æloc
);

792 i‡(
	`IS_NULL
(
t
->
e
)) {

793 
	`x‰ì
(
t
);

794  
ONIGERR_MEMORY
;

796 
t
->
Æloc
 =álloc;

797 
ªg
->
«me_èbÀ
 = 
t
;

798 
˛ór
;

800 i‡(
t
->
num
 =t->
Æloc
) {

801 
i
;

803 
Æloc
 = 
t
->alloc * 2;

804 
t
->
e
 = (
NameE¡ry
* )
	`xªÆloc
—->e, (NameE¡ryË* 
Æloc
);

805 
	`CHECK_NULL_RETURN_MEMERR
(
t
->
e
);

806 
t
->
Æloc
 =álloc;

808 
˛ór
:

809 
i
 = 
t
->
num
; i <Å->
Æloc
; i++) {

810 
t
->
e
[
i
].
«me
 = 
NULL
;

811 
t
->
e
[
i
].
«me_Àn
 = 0;

812 
t
->
e
[
i
].
back_num
 = 0;

813 
t
->
e
[
i
].
back_Æloc
 = 0;

814 
t
->
e
[
i
].
back_ªfs
 = (* )
NULL
;

817 
e
 = &(
t
->e[t->
num
]);

818 
t
->
num
++;

819 
e
->
«me
 = 
	`°rdup_wôh_nuŒ
(
ªg
->
íc
,Çame, 
«me_íd
);

820 i‡(
	`IS_NULL
(
e
->
«me
)Ë 
ONIGERR_MEMORY
;

821 
e
->
«me_Àn
 = 
«me_íd
 - 
«me
;

825 i‡(
e
->
back_num
 >= 1 &&

826 ! 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME
)) {

827 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
, 
ONIGERR_MULTIPLEX_DEFINED_NAME
,

828 
«me
, 
«me_íd
);

829  
ONIGERR_MULTIPLEX_DEFINED_NAME
;

832 
e
->
back_num
++;

833 i‡(
e
->
back_num
 == 1) {

834 
e
->
back_ªf1
 = 
backªf
;

837 i‡(
e
->
back_num
 == 2) {

838 
Æloc
 = 
INIT_NAME_BACKREFS_ALLOC_NUM
;

839 
e
->
back_ªfs
 = (* )
	`xmÆloc
((Ë* 
Æloc
);

840 
	`CHECK_NULL_RETURN_MEMERR
(
e
->
back_ªfs
);

841 
e
->
back_Æloc
 = 
Æloc
;

842 
e
->
back_ªfs
[0] =É->
back_ªf1
;

843 
e
->
back_ªfs
[1] = 
backªf
;

846 i‡(
e
->
back_num
 >É->
back_Æloc
) {

847 
Æloc
 = 
e
->
back_Æloc
 * 2;

848 
e
->
back_ªfs
 = (* )
	`xªÆloc
”->back_ªfs, (Ë* 
Æloc
);

849 
	`CHECK_NULL_RETURN_MEMERR
(
e
->
back_ªfs
);

850 
e
->
back_Æloc
 = 
Æloc
;

852 
e
->
back_ªfs
[e->
back_num
 - 1] = 
backªf
;

857 
	}
}

860 
	$⁄ig_«me_to_group_numbîs
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
«me
,

861 c⁄° 
UCh¨
* 
«me_íd
, ** 
nums
)

863 
NameE¡ry
* 
e
 = 
	`«me_föd
(
ªg
, 
«me
, 
«me_íd
);

865 i‡(
	`IS_NULL
(
e
)Ë 
ONIGERR_UNDEFINED_NAME_REFERENCE
;

867 
e
->
back_num
) {

871 *
nums
 = &(
e
->
back_ªf1
);

874 *
nums
 = 
e
->
back_ªfs
;

877  
e
->
back_num
;

878 
	}
}

881 
	$⁄ig_«me_to_backªf_numbî
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
«me
,

882 c⁄° 
UCh¨
* 
«me_íd
, 
OnigRegi⁄
 *
ªgi⁄
)

884 
i
, 
n
, *
nums
;

886 
n
 = 
	`⁄ig_«me_to_group_numbîs
(
ªg
, 
«me
, 
«me_íd
, &
nums
);

887 i‡(
n
 < 0)

888  
n
;

889 i‡(
n
 == 0)

890  
ONIGERR_PARSER_BUG
;

891 i‡(
n
 == 1)

892  
nums
[0];

894 i‡(
	`IS_NOT_NULL
(
ªgi⁄
)) {

895 
i
 = 
n
 - 1; i >= 0; i--) {

896 i‡(
ªgi⁄
->
beg
[
nums
[
i
]] !
ONIG_REGION_NOTPOS
)

897  
nums
[
i
];

900  
nums
[
n
 - 1];

902 
	}
}

907 
	$⁄ig_«me_to_group_numbîs
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
«me
,

908 c⁄° 
UCh¨
* 
«me_íd
, ** 
nums
)

910  
ONIG_NO_SUPPORT_CONFIG
;

911 
	}
}

914 
	$⁄ig_«me_to_backªf_numbî
(
ªgex_t
* 
ªg
, c⁄° 
UCh¨
* 
«me
,

915 c⁄° 
UCh¨
* 
«me_íd
, 
OnigRegi⁄
* 
ªgi⁄
)

917  
ONIG_NO_SUPPORT_CONFIG
;

918 
	}
}

921 
	$⁄ig_f‹óch_«me
(
ªgex_t
* 
ªg
,

922 (*
func
)(c⁄° 
UCh¨
*, c⁄° UCh¨*,,*,
ªgex_t
*,*), * 
¨g
)

924  
ONIG_NO_SUPPORT_CONFIG
;

925 
	}
}

928 
	$⁄ig_numbî_of_«mes
(
ªgex_t
* 
ªg
)

931 
	}
}

935 
	$⁄ig_n⁄ame_group_ˇ±uª_is_a˘ive
(
ªgex_t
* 
ªg
)

937 i‡(
	`ONIG_IS_OPTION_ON
(
ªg
->
›ti⁄s
, 
ONIG_OPTION_DONT_CAPTURE_GROUP
))

940 #ifde‡
USE_NAMED_GROUP


941 i‡(
	`⁄ig_numbî_of_«mes
(
ªg
) > 0 &&

942 
	`IS_SYNTAX_BV
(
ªg
->
sy¡ax
, 
ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
) &&

943 !
	`ONIG_IS_OPTION_ON
(
ªg
->
›ti⁄s
, 
ONIG_OPTION_CAPTURE_GROUP
)) {

949 
	}
}

952 
	#INIT_SCANENV_MEMNODES_ALLOC_SIZE
 16

	)

955 
	$sˇn_ív_˛ór
(
SˇnEnv
* 
ív
)

957 
i
;

959 
	`BIT_STATUS_CLEAR
(
ív
->
ˇ±uª_hi°‹y
);

960 
	`BIT_STATUS_CLEAR
(
ív
->
bt_mem_°¨t
);

961 
	`BIT_STATUS_CLEAR
(
ív
->
bt_mem_íd
);

962 
	`BIT_STATUS_CLEAR
(
ív
->
backª„d_mem
);

963 
ív
->
îr‹
 = (
UCh¨
* )
NULL
;

964 
ív
->
îr‹_íd
 = (
UCh¨
* )
NULL
;

965 
ív
->
num_ˇŒ
 = 0;

966 
ív
->
num_mem
 = 0;

967 #ifde‡
USE_NAMED_GROUP


968 
ív
->
num_«med
 = 0;

970 
ív
->
mem_Æloc
 = 0;

971 
ív
->
mem_nodes_dy«mic
 = (
Node
** )
NULL
;

973 
i
 = 0; i < 
SCANENV_MEMNODES_SIZE
; i++)

974 
ív
->
mem_nodes_°©ic
[
i
] = 
NULL_NODE
;

976 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


977 
ív
->
num_comb_exp_check
 = 0;

978 
ív
->
comb_exp_max_ªgnum
 = 0;

979 
ív
->
cuº_max_ªgnum
 = 0;

980 
ív
->
has_ªcursi⁄
 = 0;

982 
ív
->
∑r£_dïth
 = 0;

983 
	}
}

986 
	$sˇn_ív_add_mem_íåy
(
SˇnEnv
* 
ív
)

988 
i
, 
√ed
, 
Æloc
;

989 
Node
** 
p
;

991 
√ed
 = 
ív
->
num_mem
 + 1;

992 i‡(
√ed
 > 
ONIG_MAX_CAPTURE_NUM
)

993  
ONIGERR_TOO_MANY_CAPTURES
;

995 i‡(
√ed
 >
SCANENV_MEMNODES_SIZE
) {

996 i‡(
ív
->
mem_Æloc
 <
√ed
) {

997 i‡(
	`IS_NULL
(
ív
->
mem_nodes_dy«mic
)) {

998 
Æloc
 = 
INIT_SCANENV_MEMNODES_ALLOC_SIZE
;

999 
p
 = (
Node
** )
	`xmÆloc
((Node*Ë* 
Æloc
);

1000 
	`xmem˝y
(
p
, 
ív
->
mem_nodes_°©ic
,

1001 (
Node
*Ë* 
SCANENV_MEMNODES_SIZE
);

1004 
Æloc
 = 
ív
->
mem_Æloc
 * 2;

1005 
p
 = (
Node
** )
	`xªÆloc
(
ív
->
mem_nodes_dy«mic
, (Node*Ë* 
Æloc
);

1007 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

1009 
i
 = 
ív
->
num_mem
 + 1; i < 
Æloc
; i++)

1010 
p
[
i
] = 
NULL_NODE
;

1012 
ív
->
mem_nodes_dy«mic
 = 
p
;

1013 
ív
->
mem_Æloc
 = 
Æloc
;

1017 
ív
->
num_mem
++;

1018  
ív
->
num_mem
;

1019 
	}
}

1022 
	$sˇn_ív_£t_mem_node
(
SˇnEnv
* 
ív
, 
num
, 
Node
* 
node
)

1024 i‡(
ív
->
num_mem
 >
num
)

1025 
	`SCANENV_MEM_NODES
(
ív
)[
num
] = 
node
;

1027  
ONIGERR_PARSER_BUG
;

1029 
	}
}

1032 
	$⁄ig_node_‰ì
(
Node
* 
node
)

1034 
°¨t
:

1035 i‡(
	`IS_NULL
(
node
))  ;

1037 #ifde‡
DEBUG_NODE_FREE


1038 
	`Ârötf
(
°dîr
, "⁄ig_node_‰ì: %p\n", 
node
);

1041 
	`NTYPE
(
node
)) {

1042 
NT_STR
:

1043 i‡(
	`NSTR
(
node
)->
ˇ∑
 != 0 &&

1044 
	`IS_NOT_NULL
(
	`NSTR
(
node
)->
s
Ë&& NSTR“ode)->†!NSTR“ode)->
buf
) {

1045 
	`x‰ì
(
	`NSTR
(
node
)->
s
);

1049 
NT_LIST
:

1050 
NT_ALT
:

1051 
	`⁄ig_node_‰ì
(
	`NCAR
(
node
));

1053 
Node
* 
√xt_node
 = 
	`NCDR
(
node
);

1055 
	`x‰ì
(
node
);

1056 
node
 = 
√xt_node
;

1057 
°¨t
;

1061 
NT_CCLASS
:

1063 
CCœssNode
* 
cc
 = 
	`NCCLASS
(
node
);

1065 i‡(
	`IS_NCCLASS_SHARE
(
cc
))  ;

1066 i‡(
cc
->
mbuf
)

1067 
	`bbuf_‰ì
(
cc
->
mbuf
);

1071 
NT_QTFR
:

1072 i‡(
	`NQTFR
(
node
)->
èrgë
)

1073 
	`⁄ig_node_‰ì
(
	`NQTFR
(
node
)->
èrgë
);

1076 
NT_ENCLOSE
:

1077 i‡(
	`NENCLOSE
(
node
)->
èrgë
)

1078 
	`⁄ig_node_‰ì
(
	`NENCLOSE
(
node
)->
èrgë
);

1081 
NT_BREF
:

1082 i‡(
	`IS_NOT_NULL
(
	`NBREF
(
node
)->
back_dy«mic
))

1083 
	`x‰ì
(
	`NBREF
(
node
)->
back_dy«mic
);

1086 
NT_ANCHOR
:

1087 i‡(
	`NANCHOR
(
node
)->
èrgë
)

1088 
	`⁄ig_node_‰ì
(
	`NANCHOR
(
node
)->
èrgë
);

1092 
	`x‰ì
(
node
);

1093 
	}
}

1095 
Node
*

1096 
	$node_√w
()

1098 
Node
* 
node
;

1100 
node
 = (
Node
* )
	`xmÆloc
((Node));

1102 #ifde‡
DEBUG_NODE_FREE


1103 
	`Ârötf
(
°dîr
, "node_√w: %p\n", 
node
);

1105  
node
;

1106 
	}
}

1110 
	$öôülize_c˛ass
(
CCœssNode
* 
cc
)

1112 
	`BITSET_CLEAR
(
cc
->
bs
);

1114 
cc
->
Êags
 = 0;

1115 
cc
->
mbuf
 = 
NULL
;

1116 
	}
}

1118 
Node
*

1119 
	$node_√w_c˛ass
()

1121 
Node
* 
node
 = 
	`node_√w
();

1122 
	`CHECK_NULL_RETURN
(
node
);

1124 
	`SET_NTYPE
(
node
, 
NT_CCLASS
);

1125 
	`öôülize_c˛ass
(
	`NCCLASS
(
node
));

1126  
node
;

1127 
	}
}

1129 
Node
*

1130 
	$node_√w_˘y≥
(
ty≥
, 
nŸ
)

1132 
Node
* 
node
 = 
	`node_√w
();

1133 
	`CHECK_NULL_RETURN
(
node
);

1135 
	`SET_NTYPE
(
node
, 
NT_CTYPE
);

1136 
	`NCTYPE
(
node
)->
˘y≥
 = 
ty≥
;

1137 
	`NCTYPE
(
node
)->
nŸ
 =Çot;

1138  
node
;

1139 
	}
}

1141 
Node
*

1142 
	$node_√w_™ych¨
()

1144 
Node
* 
node
 = 
	`node_√w
();

1145 
	`CHECK_NULL_RETURN
(
node
);

1147 
	`SET_NTYPE
(
node
, 
NT_CANY
);

1148  
node
;

1149 
	}
}

1151 
Node
*

1152 
	$node_√w_li°
(
Node
* 
À·
, Node* 
right
)

1154 
Node
* 
node
 = 
	`node_√w
();

1155 
	`CHECK_NULL_RETURN
(
node
);

1157 
	`SET_NTYPE
(
node
, 
NT_LIST
);

1158 
	`NCAR
(
node
Ë
À·
;

1159 
	`NCDR
(
node
Ë
right
;

1160  
node
;

1161 
	}
}

1163 
Node
*

1164 
	$⁄ig_node_√w_li°
(
Node
* 
À·
, Node* 
right
)

1166  
	`node_√w_li°
(
À·
, 
right
);

1167 
	}
}

1169 
Node
*

1170 
	$⁄ig_node_li°_add
(
Node
* 
li°
, Node* 
x
)

1172 
Node
 *
n
;

1174 
n
 = 
	`⁄ig_node_√w_li°
(
x
, 
NULL
);

1175 i‡(
	`IS_NULL
(
n
)Ë 
NULL_NODE
;

1177 i‡(
	`IS_NOT_NULL
(
li°
)) {

1178 
	`IS_NOT_NULL
(
	`NCDR
(
li°
)))

1179 
li°
 = 
	`NCDR
(list);

1181 
	`NCDR
(
li°
Ë
n
;

1184  
n
;

1185 
	}
}

1187 
Node
*

1188 
	$⁄ig_node_√w_Æt
(
Node
* 
À·
, Node* 
right
)

1190 
Node
* 
node
 = 
	`node_√w
();

1191 
	`CHECK_NULL_RETURN
(
node
);

1193 
	`SET_NTYPE
(
node
, 
NT_ALT
);

1194 
	`NCAR
(
node
Ë
À·
;

1195 
	`NCDR
(
node
Ë
right
;

1196  
node
;

1197 
	}
}

1199 
Node
*

1200 
	$⁄ig_node_√w_™ch‹
(
ty≥
)

1202 
Node
* 
node
 = 
	`node_√w
();

1203 
	`CHECK_NULL_RETURN
(
node
);

1205 
	`SET_NTYPE
(
node
, 
NT_ANCHOR
);

1206 
	`NANCHOR
(
node
)->
ty≥
 =Åype;

1207 
	`NANCHOR
(
node
)->
èrgë
 = 
NULL
;

1208 
	`NANCHOR
(
node
)->
ch¨_Àn
 = -1;

1209  
node
;

1210 
	}
}

1212 
Node
*

1213 
node_√w_backªf
(
back_num
, * 
backªfs
, 
by_«me
,

1214 #ifde‡
USE_BACKREF_WITH_LEVEL


1215 
exi°_Àvñ
, 
√°_Àvñ
,

1217 
SˇnEnv
* 
ív
)

1219 
i
;

1220 
Node
* 
node
 = 
node_√w
();

1222 
CHECK_NULL_RETURN
(
node
);

1224 
SET_NTYPE
(
node
, 
NT_BREF
);

1225 
NBREF
(
node
)->
°©e
 = 0;

1226 
NBREF
(
node
)->
back_num
 = back_num;

1227 
NBREF
(
node
)->
back_dy«mic
 = (* )
NULL
;

1228 i‡(
by_«me
 != 0)

1229 
NBREF
(
node
)->
°©e
 |
NST_NAME_REF
;

1231 #ifde‡
USE_BACKREF_WITH_LEVEL


1232 i‡(
exi°_Àvñ
 != 0) {

1233 
NBREF
(
node
)->
°©e
 |
NST_NEST_LEVEL
;

1234 
NBREF
(
node
)->
√°_Àvñ
 =Çest_level;

1238 
i
 = 0; i < 
back_num
; i++) {

1239 i‡(
backªfs
[
i
] <
ív
->
num_mem
 &&

1240 
IS_NULL
(
SCANENV_MEM_NODES
(
ív
)[
backªfs
[
i
]])) {

1241 
NBREF
(
node
)->
°©e
 |
NST_RECURSION
;

1246 i‡(
back_num
 <
NODE_BACKREFS_SIZE
) {

1247 
i
 = 0; i < 
back_num
; i++)

1248 
NBREF
(
node
)->
back_°©ic
[
i
] = 
backªfs
[i];

1251 * 
p
 = (* )
xmÆloc
((Ë* 
back_num
);

1252 i‡(
IS_NULL
(
p
)) {

1253 
⁄ig_node_‰ì
(
node
);

1254  
NULL
;

1256 
NBREF
(
node
)->
back_dy«mic
 = 
p
;

1257 
i
 = 0; i < 
back_num
; i++)

1258 
p
[
i
] = 
backªfs
[i];

1260  
node
;

1263 #ifde‡
USE_SUBEXP_CALL


1264 
Node
*

1265 
	$node_√w_ˇŒ
(
UCh¨
* 
«me
, UCh¨* 
«me_íd
, 
gnum
)

1267 
Node
* 
node
 = 
	`node_√w
();

1268 
	`CHECK_NULL_RETURN
(
node
);

1270 
	`SET_NTYPE
(
node
, 
NT_CALL
);

1271 
	`NCALL
(
node
)->
°©e
 = 0;

1272 
	`NCALL
(
node
)->
èrgë
 = 
NULL_NODE
;

1273 
	`NCALL
(
node
)->
«me
 =Çame;

1274 
	`NCALL
(
node
)->
«me_íd
 =Çame_end;

1275 
	`NCALL
(
node
)->
group_num
 = 
gnum
;

1276  
node
;

1277 
	}
}

1280 
Node
*

1281 
	$node_√w_qu™tifõr
(
lowî
, 
uµî
, 
by_numbî
)

1283 
Node
* 
node
 = 
	`node_√w
();

1284 
	`CHECK_NULL_RETURN
(
node
);

1286 
	`SET_NTYPE
(
node
, 
NT_QTFR
);

1287 
	`NQTFR
(
node
)->
°©e
 = 0;

1288 
	`NQTFR
(
node
)->
èrgë
 = 
NULL
;

1289 
	`NQTFR
(
node
)->
lowî
 =Üower;

1290 
	`NQTFR
(
node
)->
uµî
 = upper;

1291 
	`NQTFR
(
node
)->
gªedy
 = 1;

1292 
	`NQTFR
(
node
)->
èrgë_em±y_öfo
 = 
NQ_TARGET_ISNOT_EMPTY
;

1293 
	`NQTFR
(
node
)->
hód_exa˘
 = 
NULL_NODE
;

1294 
	`NQTFR
(
node
)->
√xt_hód_exa˘
 = 
NULL_NODE
;

1295 
	`NQTFR
(
node
)->
is_ª„ªd
 = 0;

1296 i‡(
by_numbî
 != 0)

1297 
	`NQTFR
(
node
)->
°©e
 |
NST_BY_NUMBER
;

1299 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


1300 
	`NQTFR
(
node
)->
comb_exp_check_num
 = 0;

1303  
node
;

1304 
	}
}

1306 
Node
*

1307 
	$node_√w_í˛o£
(
ty≥
)

1309 
Node
* 
node
 = 
	`node_√w
();

1310 
	`CHECK_NULL_RETURN
(
node
);

1312 
	`SET_NTYPE
(
node
, 
NT_ENCLOSE
);

1313 
	`NENCLOSE
(
node
)->
ty≥
 =Åype;

1314 
	`NENCLOSE
(
node
)->
°©e
 = 0;

1315 
	`NENCLOSE
(
node
)->
ªgnum
 = 0;

1316 
	`NENCLOSE
(
node
)->
›ti⁄
 = 0;

1317 
	`NENCLOSE
(
node
)->
èrgë
 = 
NULL
;

1318 
	`NENCLOSE
(
node
)->
ˇŒ_addr
 = -1;

1319 
	`NENCLOSE
(
node
)->
›t_cou¡
 = 0;

1320  
node
;

1321 
	}
}

1323 
Node
*

1324 
	$⁄ig_node_√w_í˛o£
(
ty≥
)

1326  
	`node_√w_í˛o£
(
ty≥
);

1327 
	}
}

1329 
Node
*

1330 
	$node_√w_í˛o£_mem‹y
(
OnigO±i⁄Ty≥
 
›ti⁄
, 
is_«med
)

1332 
Node
* 
node
 = 
	`node_√w_í˛o£
(
ENCLOSE_MEMORY
);

1333 
	`CHECK_NULL_RETURN
(
node
);

1334 i‡(
is_«med
 != 0)

1335 
	`SET_ENCLOSE_STATUS
(
node
, 
NST_NAMED_GROUP
);

1337 #ifde‡
USE_SUBEXP_CALL


1338 
	`NENCLOSE
(
node
)->
›ti⁄
 = option;

1340  
node
;

1341 
	}
}

1343 
Node
*

1344 
	$node_√w_›ti⁄
(
OnigO±i⁄Ty≥
 
›ti⁄
)

1346 
Node
* 
node
 = 
	`node_√w_í˛o£
(
ENCLOSE_OPTION
);

1347 
	`CHECK_NULL_RETURN
(
node
);

1348 
	`NENCLOSE
(
node
)->
›ti⁄
 = option;

1349  
node
;

1350 
	}
}

1353 
	$⁄ig_node_°r_ˇt
(
Node
* 
node
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

1355 
addÀn
 = 
íd
 - 
s
;

1357 i‡(
addÀn
 > 0) {

1358 
Àn
 = 
	`NSTR
(
node
)->
íd
 - NSTR“ode)->
s
;

1360 i‡(
	`NSTR
(
node
)->
ˇ∑
 > 0 || (
Àn
 + 
addÀn
 > 
NODE_STR_BUF_SIZE
 - 1)) {

1361 
UCh¨
* 
p
;

1362 
ˇ∑
 = 
Àn
 + 
addÀn
 + 
NODE_STR_MARGIN
;

1364 i‡(
ˇ∑
 <
	`NSTR
(
node
)->capa) {

1365 
	`⁄ig_°r˝y
(
	`NSTR
(
node
)->
s
 + 
Àn
, s, 
íd
);

1368 i‡(
	`NSTR
(
node
)->
s
 =NSTR“ode)->
buf
)

1369 
p
 = 
	`°rˇt_ˇ∑_‰om_°©ic
(
	`NSTR
(
node
)->
s
, NSTR“ode)->
íd
,

1370 
s
, 
íd
, 
ˇ∑
);

1372 
p
 = 
	`°rˇt_ˇ∑
(
	`NSTR
(
node
)->
s
, NSTR“ode)->
íd
, s,Énd, 
ˇ∑
);

1374 
	`CHECK_NULL_RETURN_MEMERR
(
p
);

1375 
	`NSTR
(
node
)->
s
 = 
p
;

1376 
	`NSTR
(
node
)->
ˇ∑
 = capa;

1380 
	`⁄ig_°r˝y
(
	`NSTR
(
node
)->
s
 + 
Àn
, s, 
íd
);

1382 
	`NSTR
(
node
)->
íd
 = NSTR“ode)->
s
 + 
Àn
 + 
addÀn
;

1386 
	}
}

1389 
	$⁄ig_node_°r_£t
(
Node
* 
node
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

1391 
	`⁄ig_node_°r_˛ór
(
node
);

1392  
	`⁄ig_node_°r_ˇt
(
node
, 
s
, 
íd
);

1393 
	}
}

1396 
	$node_°r_ˇt_ch¨
(
Node
* 
node
, 
UCh¨
 
c
)

1398 
UCh¨
 
s
[1];

1400 
s
[0] = 
c
;

1401  
	`⁄ig_node_°r_ˇt
(
node
, 
s
, s + 1);

1402 
	}
}

1405 
	$⁄ig_node_c⁄v_to_°r_node
(
Node
* 
node
, 
Êag
)

1407 
	`SET_NTYPE
(
node
, 
NT_STR
);

1408 
	`NSTR
(
node
)->
Êag
 = flag;

1409 
	`NSTR
(
node
)->
ˇ∑
 = 0;

1410 
	`NSTR
(
node
)->
s
 = NSTR“ode)->
buf
;

1411 
	`NSTR
(
node
)->
íd
 = NSTR“ode)->
buf
;

1412 
	}
}

1415 
	$⁄ig_node_°r_˛ór
(
Node
* 
node
)

1417 i‡(
	`NSTR
(
node
)->
ˇ∑
 != 0 &&

1418 
	`IS_NOT_NULL
(
	`NSTR
(
node
)->
s
Ë&& NSTR“ode)->†!NSTR“ode)->
buf
) {

1419 
	`x‰ì
(
	`NSTR
(
node
)->
s
);

1422 
	`NSTR
(
node
)->
ˇ∑
 = 0;

1423 
	`NSTR
(
node
)->
Êag
 = 0;

1424 
	`NSTR
(
node
)->
s
 = NSTR“ode)->
buf
;

1425 
	`NSTR
(
node
)->
íd
 = NSTR“ode)->
buf
;

1426 
	}
}

1428 
Node
*

1429 
	$node_√w_°r
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

1431 
Node
* 
node
 = 
	`node_√w
();

1432 
	`CHECK_NULL_RETURN
(
node
);

1434 
	`SET_NTYPE
(
node
, 
NT_STR
);

1435 
	`NSTR
(
node
)->
ˇ∑
 = 0;

1436 
	`NSTR
(
node
)->
Êag
 = 0;

1437 
	`NSTR
(
node
)->
s
 = NSTR“ode)->
buf
;

1438 
	`NSTR
(
node
)->
íd
 = NSTR“ode)->
buf
;

1439 i‡(
	`⁄ig_node_°r_ˇt
(
node
, 
s
, 
íd
)) {

1440 
	`⁄ig_node_‰ì
(
node
);

1441  
NULL
;

1443  
node
;

1444 
	}
}

1446 
Node
*

1447 
	$⁄ig_node_√w_°r
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

1449  
	`node_√w_°r
(
s
, 
íd
);

1450 
	}
}

1452 
Node
*

1453 
	$node_√w_°r_øw
(
UCh¨
* 
s
, UCh¨* 
íd
)

1455 
Node
* 
node
 = 
	`node_√w_°r
(
s
, 
íd
);

1456 
	`NSTRING_SET_RAW
(
node
);

1457  
node
;

1458 
	}
}

1460 
Node
*

1461 
	$node_√w_em±y
()

1463  
	`node_√w_°r
(
NULL
, NULL);

1464 
	}
}

1466 
Node
*

1467 
	$node_√w_°r_øw_ch¨
(
UCh¨
 
c
)

1469 
UCh¨
 
p
[1];

1471 
p
[0] = 
c
;

1472  
	`node_√w_°r_øw
(
p
,Ö + 1);

1473 
	}
}

1475 
Node
*

1476 
	$°r_node_•lô_œ°_ch¨
(
SåNode
* 
¢
, 
OnigEncodög
 
íc
)

1478 c⁄° 
UCh¨
 *
p
;

1479 
Node
* 
n
 = 
NULL_NODE
;

1481 i‡(
¢
->
íd
 > sn->
s
) {

1482 
p
 = 
	`⁄igíc_gë_¥ev_ch¨_hód
(
íc
, 
¢
->
s
, sn->
íd
);

1483 i‡(
p
 &&Ö > 
¢
->
s
) {

1484 
n
 = 
	`node_√w_°r
(
p
, 
¢
->
íd
);

1485 i‡((
¢
->
Êag
 & 
NSTR_RAW
) != 0)

1486 
	`NSTRING_SET_RAW
(
n
);

1488 
¢
->
íd
 = (
UCh¨
* )
p
;

1491  
n
;

1492 
	}
}

1495 
	$°r_node_ˇn_be_•lô
(
SåNode
* 
¢
, 
OnigEncodög
 
íc
)

1497 i‡(
¢
->
íd
 > sn->
s
) {

1498  ((
	`í˛í
(
íc
, 
¢
->
s
Ë< sn->
íd
 - sn->s) ? 1 : 0);

1501 
	}
}

1503 #ifde‡
USE_PAD_TO_SHORT_BYTE_CHAR


1505 
	$node_°r_hód_∑d
(
SåNode
* 
¢
, 
num
, 
UCh¨
 
vÆ
)

1507 
UCh¨
 
buf
[
NODE_STR_BUF_SIZE
];

1508 
i
, 
Àn
;

1510 
Àn
 = 
¢
->
íd
 - sn->
s
;

1511 
	`⁄ig_°r˝y
(
buf
, 
¢
->
s
, sn->
íd
);

1512 
	`⁄ig_°r˝y
(&(
¢
->
s
[
num
]), 
buf
, bu‡+ 
Àn
);

1513 
¢
->
íd
 +
num
;

1515 
i
 = 0; i < 
num
; i++) {

1516 
¢
->
s
[
i
] = 
vÆ
;

1518 
	}
}

1522 
	$⁄ig_sˇn_unsig√d_numbî
(
UCh¨
** 
§c
, c⁄° UCh¨* 
íd
, 
OnigEncodög
 
íc
)

1524 
num
, 
vÆ
;

1525 
OnigCodePoöt
 
c
;

1526 
UCh¨
* 
p
 = *
§c
;

1527 
PFETCH_READY
;

1529 
num
 = 0;

1530 !
PEND
) {

1531 
	`PFETCH
(
c
);

1532 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

1533 
vÆ
 = ()
	`DIGITVAL
(
c
);

1534 i‡((
INT_MAX_LIMIT
 - 
vÆ
Ë/ 10UL < 
num
)

1537 
num
 =Çum * 10 + 
vÆ
;

1540 
PUNFETCH
;

1544 *
§c
 = 
p
;

1545  
num
;

1546 
	}
}

1549 
	$sˇn_unsig√d_hexadecimÆ_numbî
(
UCh¨
** 
§c
, UCh¨* 
íd
, 
maxÀn
,

1550 
OnigEncodög
 
íc
)

1552 
OnigCodePoöt
 
c
;

1553 
num
, 
vÆ
;

1554 
UCh¨
* 
p
 = *
§c
;

1555 
PFETCH_READY
;

1557 
num
 = 0;

1558 ! 
PEND
 && 
maxÀn
-- != 0) {

1559 
	`PFETCH
(
c
);

1560 i‡(
	`ONIGENC_IS_CODE_XDIGIT
(
íc
, 
c
)) {

1561 
vÆ
 = ()
	`XDIGITVAL
(
íc
,
c
);

1562 i‡((
INT_MAX_LIMIT
 - 
vÆ
Ë/ 16UL < 
num
)

1565 
num
 = (num << 4Ë+ 
	`XDIGITVAL
(
íc
,
c
);

1568 
PUNFETCH
;

1572 *
§c
 = 
p
;

1573  
num
;

1574 
	}
}

1577 
	$sˇn_unsig√d_o˘Æ_numbî
(
UCh¨
** 
§c
, UCh¨* 
íd
, 
maxÀn
,

1578 
OnigEncodög
 
íc
)

1580 
OnigCodePoöt
 
c
;

1581 
num
, 
vÆ
;

1582 
UCh¨
* 
p
 = *
§c
;

1583 
PFETCH_READY
;

1585 
num
 = 0;

1586 !
PEND
 && 
maxÀn
-- != 0) {

1587 
	`PFETCH
(
c
);

1588 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
) && c < '8') {

1589 
vÆ
 = 
	`ODIGITVAL
(
c
);

1590 i‡((
INT_MAX_LIMIT
 - 
vÆ
Ë/ 8UL < 
num
)

1593 
num
 = (num << 3Ë+ 
vÆ
;

1596 
PUNFETCH
;

1600 *
§c
 = 
p
;

1601  
num
;

1602 
	}
}

1605 
	#BBUF_WRITE_CODE_POINT
(
bbuf
,
pos
,
code
) \

1606 
	`BBUF_WRITE
(
bbuf
, 
pos
, &(
code
), 
SIZE_CODE_POINT
)

	)

1613 
	$√w_code_ønge
(
BBuf
** 
pbuf
)

1615 
	#INIT_MULTI_BYTE_RANGE_SIZE
 (
SIZE_CODE_POINT
 * 5)

	)

1616 
r
;

1617 
OnigCodePoöt
 
n
;

1618 
BBuf
* 
bbuf
;

1620 
bbuf
 = *
pbuf
 = (
BBuf
* )
	`xmÆloc
((BBuf));

1621 
	`CHECK_NULL_RETURN_MEMERR
(*
pbuf
);

1622 
r
 = 
	`BBUF_INIT
(*
pbuf
, 
INIT_MULTI_BYTE_RANGE_SIZE
);

1623 i‡(
r
) Ñ;

1625 
n
 = 0;

1626 
	`BBUF_WRITE_CODE_POINT
(
bbuf
, 0, 
n
);

1628 
	}
}

1631 
	$add_code_ønge_to_buf
(
BBuf
** 
pbuf
, 
OnigCodePoöt
 
‰om
, OnigCodePoöà
to
)

1633 
r
, 
öc_n
, 
pos
;

1634 
low
, 
high
, 
bound
, 
x
;

1635 
OnigCodePoöt
 
n
, *
d©a
;

1636 
BBuf
* 
bbuf
;

1638 i‡(
‰om
 > 
to
) {

1639 
n
 = 
‰om
; from = 
to
;Åo =Ç;

1642 i‡(
	`IS_NULL
(*
pbuf
)) {

1643 
r
 = 
	`√w_code_ønge
(
pbuf
);

1644 i‡(
r
) Ñ;

1645 
bbuf
 = *
pbuf
;

1646 
n
 = 0;

1649 
bbuf
 = *
pbuf
;

1650 
	`GET_CODE_POINT
(
n
, 
bbuf
->
p
);

1652 
d©a
 = (
OnigCodePoöt
* )(
bbuf
->
p
);

1653 
d©a
++;

1655 
low
 = 0, 
bound
 = 
n
;Üow < bound; ) {

1656 
x
 = (
low
 + 
bound
) >> 1;

1657 i‡(
‰om
 > 
d©a
[
x
*2 + 1])

1658 
low
 = 
x
 + 1;

1660 
bound
 = 
x
;

1663 
high
 = (
to
 =~((
OnigCodePoöt
 )0)Ë? 
n
 : 
low
;

1664 
bound
 = 
n
; 
high
 < bound; ) {

1665 
x
 = (
high
 + 
bound
) >> 1;

1666 i‡(
to
 + 1 >
d©a
[
x
*2])

1667 
high
 = 
x
 + 1;

1669 
bound
 = 
x
;

1672 
öc_n
 = 
low
 + 1 - 
high
;

1673 i‡(
n
 + 
öc_n
 > 
ONIG_MAX_MULTI_BYTE_RANGES_NUM
)

1674  
ONIGERR_TOO_MANY_MULTI_BYTE_RANGES
;

1676 i‡(
öc_n
 != 1) {

1677 i‡(
‰om
 > 
d©a
[
low
*2])

1678 
‰om
 = 
d©a
[
low
*2];

1679 i‡(
to
 < 
d©a
[(
high
 - 1)*2 + 1])

1680 
to
 = 
d©a
[(
high
 - 1)*2 + 1];

1683 i‡(
öc_n
 !0 && (
OnigCodePoöt
 )
high
 < 
n
) {

1684 
‰om_pos
 = 
SIZE_CODE_POINT
 * (1 + 
high
 * 2);

1685 
to_pos
 = 
SIZE_CODE_POINT
 * (1 + (
low
 + 1) * 2);

1686 
size
 = (
n
 - 
high
Ë* 2 * 
SIZE_CODE_POINT
;

1688 i‡(
öc_n
 > 0) {

1689 
	`BBUF_MOVE_RIGHT
(
bbuf
, 
‰om_pos
, 
to_pos
, 
size
);

1692 
	`BBUF_MOVE_LEFT_REDUCE
(
bbuf
, 
‰om_pos
, 
to_pos
);

1696 
pos
 = 
SIZE_CODE_POINT
 * (1 + 
low
 * 2);

1697 
	`BBUF_ENSURE_SIZE
(
bbuf
, 
pos
 + 
SIZE_CODE_POINT
 * 2);

1698 
	`BBUF_WRITE_CODE_POINT
(
bbuf
, 
pos
, 
‰om
);

1699 
	`BBUF_WRITE_CODE_POINT
(
bbuf
, 
pos
 + 
SIZE_CODE_POINT
, 
to
);

1700 
n
 +
öc_n
;

1701 
	`BBUF_WRITE_CODE_POINT
(
bbuf
, 0, 
n
);

1704 
	}
}

1707 
	$add_code_ønge
(
BBuf
** 
pbuf
, 
SˇnEnv
* 
ív
, 
OnigCodePoöt
 
‰om
, OnigCodePoöà
to
)

1709 i‡(
‰om
 > 
to
) {

1710 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC
))

1713  
ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
;

1716  
	`add_code_ønge_to_buf
(
pbuf
, 
‰om
, 
to
);

1717 
	}
}

1720 
	$nŸ_code_ønge_buf
(
OnigEncodög
 
íc
, 
BBuf
* 
bbuf
, BBuf** 
pbuf
)

1722 
r
, 
i
, 
n
;

1723 
OnigCodePoöt
 
¥e
, 
‰om
, *
d©a
, 
to
 = 0;

1725 *
pbuf
 = (
BBuf
* )
NULL
;

1726 i‡(
	`IS_NULL
(
bbuf
)) {

1727 
£t_Æl
:

1728  
	`SET_ALL_MULTI_BYTE_RANGE
(
íc
, 
pbuf
);

1731 
d©a
 = (
OnigCodePoöt
* )(
bbuf
->
p
);

1732 
	`GET_CODE_POINT
(
n
, 
d©a
);

1733 
d©a
++;

1734 i‡(
n
 <0Ë
£t_Æl
;

1736 
r
 = 0;

1737 
¥e
 = 
	`MBCODE_START_POS
(
íc
);

1738 
i
 = 0; i < 
n
; i++) {

1739 
‰om
 = 
d©a
[
i
*2];

1740 
to
 = 
d©a
[
i
*2+1];

1741 i‡(
¥e
 <
‰om
 - 1) {

1742 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
¥e
, 
‰om
 - 1);

1743 i‡(
r
 != 0) Ñ;

1745 i‡(
to
 =~((
OnigCodePoöt
 )0)) ;

1746 
¥e
 = 
to
 + 1;

1748 i‡(
to
 < ~((
OnigCodePoöt
 )0)) {

1749 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
to
 + 1, ~((
OnigCodePoöt
 )0));

1751  
r
;

1752 
	}
}

1754 
	#SWAP_BBUF_NOT
(
bbuf1
, 
nŸ1
, 
bbuf2
, 
nŸ2
) do {\

1755 
BBuf
 *
tbuf
; \

1756 
äŸ
; \

1757 
äŸ
 = 
nŸ1
;ÇŸ1 = 
nŸ2
;Çot2 =Ånot; \

1758 
tbuf
 = 
bbuf1
; bbuf1 = 
bbuf2
; bbuf2 =Åbuf; \

1759 } 0)

	)

1762 
	$‹_code_ønge_buf
(
OnigEncodög
 
íc
, 
BBuf
* 
bbuf1
, 
nŸ1
,

1763 
BBuf
* 
bbuf2
, 
nŸ2
, BBuf** 
pbuf
)

1765 
r
;

1766 
OnigCodePoöt
 
i
, 
n1
, *
d©a1
;

1767 
OnigCodePoöt
 
‰om
, 
to
;

1769 *
pbuf
 = (
BBuf
* )
NULL
;

1770 i‡(
	`IS_NULL
(
bbuf1
Ë&& IS_NULL(
bbuf2
)) {

1771 i‡(
nŸ1
 !0 || 
nŸ2
 != 0)

1772  
	`SET_ALL_MULTI_BYTE_RANGE
(
íc
, 
pbuf
);

1776 
r
 = 0;

1777 i‡(
	`IS_NULL
(
bbuf2
))

1778 
	`SWAP_BBUF_NOT
(
bbuf1
, 
nŸ1
, 
bbuf2
, 
nŸ2
);

1780 i‡(
	`IS_NULL
(
bbuf1
)) {

1781 i‡(
nŸ1
 != 0) {

1782  
	`SET_ALL_MULTI_BYTE_RANGE
(
íc
, 
pbuf
);

1785 i‡(
nŸ2
 == 0) {

1786  
	`bbuf_˛⁄e
(
pbuf
, 
bbuf2
);

1789  
	`nŸ_code_ønge_buf
(
íc
, 
bbuf2
, 
pbuf
);

1794 i‡(
nŸ1
 != 0)

1795 
	`SWAP_BBUF_NOT
(
bbuf1
, 
nŸ1
, 
bbuf2
, 
nŸ2
);

1797 
d©a1
 = (
OnigCodePoöt
* )(
bbuf1
->
p
);

1798 
	`GET_CODE_POINT
(
n1
, 
d©a1
);

1799 
d©a1
++;

1801 i‡(
nŸ2
 =0 && 
nŸ1
 == 0) {

1802 
r
 = 
	`bbuf_˛⁄e
(
pbuf
, 
bbuf2
);

1804 i‡(
nŸ1
 == 0) {

1805 
r
 = 
	`nŸ_code_ønge_buf
(
íc
, 
bbuf2
, 
pbuf
);

1807 i‡(
r
 != 0) Ñ;

1809 
i
 = 0; i < 
n1
; i++) {

1810 
‰om
 = 
d©a1
[
i
*2];

1811 
to
 = 
d©a1
[
i
*2+1];

1812 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
‰om
, 
to
);

1813 i‡(
r
 != 0) Ñ;

1816 
	}
}

1819 
	$™d_code_ønge1
(
BBuf
** 
pbuf
, 
OnigCodePoöt
 
‰om1
, OnigCodePoöà
to1
,

1820 
OnigCodePoöt
* 
d©a
, 
n
)

1822 
i
, 
r
;

1823 
OnigCodePoöt
 
‰om2
, 
to2
;

1825 
i
 = 0; i < 
n
; i++) {

1826 
‰om2
 = 
d©a
[
i
*2];

1827 
to2
 = 
d©a
[
i
*2+1];

1828 i‡(
‰om2
 < 
‰om1
) {

1829 i‡(
to2
 < 
‰om1
) ;

1831 
‰om1
 = 
to2
 + 1;

1834 i‡(
‰om2
 <
to1
) {

1835 i‡(
to2
 < 
to1
) {

1836 i‡(
‰om1
 <
‰om2
 - 1) {

1837 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
‰om1
, 
‰om2
-1);

1838 i‡(
r
 != 0) Ñ;

1840 
‰om1
 = 
to2
 + 1;

1843 
to1
 = 
‰om2
 - 1;

1847 
‰om1
 = 
‰om2
;

1849 i‡(
‰om1
 > 
to1
) ;

1851 i‡(
‰om1
 <
to1
) {

1852 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
‰om1
, 
to1
);

1853 i‡(
r
 != 0) Ñ;

1856 
	}
}

1859 
	$™d_code_ønge_buf
(
BBuf
* 
bbuf1
, 
nŸ1
, BBuf* 
bbuf2
, 
nŸ2
, BBuf** 
pbuf
)

1861 
r
;

1862 
OnigCodePoöt
 
i
, 
j
, 
n1
, 
n2
, *
d©a1
, *
d©a2
;

1863 
OnigCodePoöt
 
‰om
, 
to
, 
‰om1
, 
to1
, 
‰om2
, 
to2
;

1865 *
pbuf
 = (
BBuf
* )
NULL
;

1866 i‡(
	`IS_NULL
(
bbuf1
)) {

1867 i‡(
nŸ1
 !0 && 
	`IS_NOT_NULL
(
bbuf2
))

1868  
	`bbuf_˛⁄e
(
pbuf
, 
bbuf2
);

1871 i‡(
	`IS_NULL
(
bbuf2
)) {

1872 i‡(
nŸ2
 != 0)

1873  
	`bbuf_˛⁄e
(
pbuf
, 
bbuf1
);

1877 i‡(
nŸ1
 != 0)

1878 
	`SWAP_BBUF_NOT
(
bbuf1
, 
nŸ1
, 
bbuf2
, 
nŸ2
);

1880 
d©a1
 = (
OnigCodePoöt
* )(
bbuf1
->
p
);

1881 
d©a2
 = (
OnigCodePoöt
* )(
bbuf2
->
p
);

1882 
	`GET_CODE_POINT
(
n1
, 
d©a1
);

1883 
	`GET_CODE_POINT
(
n2
, 
d©a2
);

1884 
d©a1
++;

1885 
d©a2
++;

1887 i‡(
nŸ2
 =0 && 
nŸ1
 == 0) {

1888 
i
 = 0; i < 
n1
; i++) {

1889 
‰om1
 = 
d©a1
[
i
*2];

1890 
to1
 = 
d©a1
[
i
*2+1];

1891 
j
 = 0; j < 
n2
; j++) {

1892 
‰om2
 = 
d©a2
[
j
*2];

1893 
to2
 = 
d©a2
[
j
*2+1];

1894 i‡(
‰om2
 > 
to1
) ;

1895 i‡(
to2
 < 
‰om1
) ;

1896 
‰om
 = 
	`MAX
(
‰om1
, 
‰om2
);

1897 
to
 = 
	`MIN
(
to1
, 
to2
);

1898 
r
 = 
	`add_code_ønge_to_buf
(
pbuf
, 
‰om
, 
to
);

1899 i‡(
r
 != 0) Ñ;

1903 i‡(
nŸ1
 == 0) {

1904 
i
 = 0; i < 
n1
; i++) {

1905 
‰om1
 = 
d©a1
[
i
*2];

1906 
to1
 = 
d©a1
[
i
*2+1];

1907 
r
 = 
	`™d_code_ønge1
(
pbuf
, 
‰om1
, 
to1
, 
d©a2
, 
n2
);

1908 i‡(
r
 != 0) Ñ;

1913 
	}
}

1916 
	$™d_c˛ass
(
CCœssNode
* 
de°
, CCœssNode* 
cc
, 
OnigEncodög
 
íc
)

1918 
r
, 
nŸ1
, 
nŸ2
;

1919 
BBuf
 *
buf1
, *
buf2
, *
pbuf
;

1920 
BôSëRef
 
b§1
, 
b§2
;

1921 
BôSë
 
bs1
, 
bs2
;

1923 
nŸ1
 = 
	`IS_NCCLASS_NOT
(
de°
);

1924 
b§1
 = 
de°
->
bs
;

1925 
buf1
 = 
de°
->
mbuf
;

1926 
nŸ2
 = 
	`IS_NCCLASS_NOT
(
cc
);

1927 
b§2
 = 
cc
->
bs
;

1928 
buf2
 = 
cc
->
mbuf
;

1930 i‡(
nŸ1
 != 0) {

1931 
	`bô£t_övît_to
(
b§1
, 
bs1
);

1932 
b§1
 = 
bs1
;

1934 i‡(
nŸ2
 != 0) {

1935 
	`bô£t_övît_to
(
b§2
, 
bs2
);

1936 
b§2
 = 
bs2
;

1938 
	`bô£t_™d
(
b§1
, 
b§2
);

1939 i‡(
b§1
 !
de°
->
bs
) {

1940 
	`bô£t_c›y
(
de°
->
bs
, 
b§1
);

1941 
b§1
 = 
de°
->
bs
;

1943 i‡(
nŸ1
 != 0) {

1944 
	`bô£t_övît
(
de°
->
bs
);

1947 i‡(! 
	`ONIGENC_IS_SINGLEBYTE
(
íc
)) {

1948 i‡(
nŸ1
 !0 && 
nŸ2
 != 0) {

1949 
r
 = 
	`‹_code_ønge_buf
(
íc
, 
buf1
, 0, 
buf2
, 0, &
pbuf
);

1952 
r
 = 
	`™d_code_ønge_buf
(
buf1
, 
nŸ1
, 
buf2
, 
nŸ2
, &
pbuf
);

1953 i‡(
r
 =0 && 
nŸ1
 != 0) {

1954 
BBuf
 *
tbuf
;

1955 
r
 = 
	`nŸ_code_ønge_buf
(
íc
, 
pbuf
, &
tbuf
);

1956 i‡(
r
 != 0) {

1957 
	`bbuf_‰ì
(
pbuf
);

1958  
r
;

1960 
	`bbuf_‰ì
(
pbuf
);

1961 
pbuf
 = 
tbuf
;

1964 i‡(
r
 != 0) Ñ;

1966 
de°
->
mbuf
 = 
pbuf
;

1967 
	`bbuf_‰ì
(
buf1
);

1968  
r
;

1971 
	}
}

1974 
	$‹_c˛ass
(
CCœssNode
* 
de°
, CCœssNode* 
cc
, 
OnigEncodög
 
íc
)

1976 
r
, 
nŸ1
, 
nŸ2
;

1977 
BBuf
 *
buf1
, *
buf2
, *
pbuf
;

1978 
BôSëRef
 
b§1
, 
b§2
;

1979 
BôSë
 
bs1
, 
bs2
;

1981 
nŸ1
 = 
	`IS_NCCLASS_NOT
(
de°
);

1982 
b§1
 = 
de°
->
bs
;

1983 
buf1
 = 
de°
->
mbuf
;

1984 
nŸ2
 = 
	`IS_NCCLASS_NOT
(
cc
);

1985 
b§2
 = 
cc
->
bs
;

1986 
buf2
 = 
cc
->
mbuf
;

1988 i‡(
nŸ1
 != 0) {

1989 
	`bô£t_övît_to
(
b§1
, 
bs1
);

1990 
b§1
 = 
bs1
;

1992 i‡(
nŸ2
 != 0) {

1993 
	`bô£t_övît_to
(
b§2
, 
bs2
);

1994 
b§2
 = 
bs2
;

1996 
	`bô£t_‹
(
b§1
, 
b§2
);

1997 i‡(
b§1
 !
de°
->
bs
) {

1998 
	`bô£t_c›y
(
de°
->
bs
, 
b§1
);

1999 
b§1
 = 
de°
->
bs
;

2001 i‡(
nŸ1
 != 0) {

2002 
	`bô£t_övît
(
de°
->
bs
);

2005 i‡(! 
	`ONIGENC_IS_SINGLEBYTE
(
íc
)) {

2006 i‡(
nŸ1
 !0 && 
nŸ2
 != 0) {

2007 
r
 = 
	`™d_code_ønge_buf
(
buf1
, 0, 
buf2
, 0, &
pbuf
);

2010 
r
 = 
	`‹_code_ønge_buf
(
íc
, 
buf1
, 
nŸ1
, 
buf2
, 
nŸ2
, &
pbuf
);

2011 i‡(
r
 =0 && 
nŸ1
 != 0) {

2012 
BBuf
 *
tbuf
;

2013 
r
 = 
	`nŸ_code_ønge_buf
(
íc
, 
pbuf
, &
tbuf
);

2014 i‡(
r
 != 0) {

2015 
	`bbuf_‰ì
(
pbuf
);

2016  
r
;

2018 
	`bbuf_‰ì
(
pbuf
);

2019 
pbuf
 = 
tbuf
;

2022 i‡(
r
 != 0) Ñ;

2024 
de°
->
mbuf
 = 
pbuf
;

2025 
	`bbuf_‰ì
(
buf1
);

2026  
r
;

2030 
	}
}

2032 
OnigCodePoöt


2033 
	$c⁄v_back¶ash_vÆue
(
OnigCodePoöt
 
c
, 
SˇnEnv
* 
ív
)

2035 i‡(
	`IS_SYNTAX_OP
(
ív
->
sy¡ax
, 
ONIG_SYN_OP_ESC_CONTROL_CHARS
)) {

2036 
c
) {

2045 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_ESC_V_VTAB
))

2053  
c
;

2054 
	}
}

2057 
	$is_övÆid_qu™tifõr_èrgë
(
Node
* 
node
)

2059 
	`NTYPE
(
node
)) {

2060 
NT_ANCHOR
:

2064 
NT_ENCLOSE
:

2069 
NT_LIST
:

2071 i‡(! 
	`is_övÆid_qu™tifõr_èrgë
(
	`NCAR
(
node
)))  0;

2072 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2076 
NT_ALT
:

2078 i‡(
	`is_övÆid_qu™tifõr_èrgë
(
	`NCAR
(
node
)))  1;

2079 } 
	`IS_NOT_NULL
(
node
 = 
	`NCDR
(node)));

2086 
	}
}

2090 
	$p›uœr_qu™tifõr_num
(
Qt‰Node
* 
q
)

2092 i‡(
q
->
gªedy
) {

2093 i‡(
q
->
lowî
 == 0) {

2094 i‡(
q
->
uµî
 == 1)  0;

2095 i‡(
	`IS_REPEAT_INFINITE
(
q
->
uµî
))  1;

2097 i‡(
q
->
lowî
 == 1) {

2098 i‡(
	`IS_REPEAT_INFINITE
(
q
->
uµî
))  2;

2102 i‡(
q
->
lowî
 == 0) {

2103 i‡(
q
->
uµî
 == 1)  3;

2104 i‡(
	`IS_REPEAT_INFINITE
(
q
->
uµî
))  4;

2106 i‡(
q
->
lowî
 == 1) {

2107 i‡(
	`IS_REPEAT_INFINITE
(
q
->
uµî
))  5;

2111 
	}
}

2114 
	eRedu˚Ty≥
 {

2115 
RQ_ASIS
 = 0,

2116 
RQ_DEL
 = 1,

2117 
RQ_A
,

2118 
RQ_AQ
,

2119 
RQ_QQ
,

2120 
RQ_P_QQ
,

2121 
RQ_PQ_Q


2124 
Redu˚Ty≥
 
	gRedu˚Ty≥TabÀ
[6][6] = {

2125 {
RQ_DEL
, 
RQ_A
, RQ_A, 
RQ_QQ
, 
RQ_AQ
, 
RQ_ASIS
},

2126 {
RQ_DEL
, RQ_DEL, RQ_DEL, 
RQ_P_QQ
, RQ_P_QQ, RQ_DEL},

2127 {
RQ_A
, RQ_A, 
RQ_DEL
, 
RQ_ASIS
, 
RQ_P_QQ
, RQ_DEL},

2128 {
RQ_DEL
, 
RQ_AQ
, RQ_AQ, RQ_DEL, RQ_AQ, RQ_AQ},

2129 {
RQ_DEL
, RQ_DEL, RQ_DEL, RQ_DEL, RQ_DEL, RQ_DEL},

2130 {
RQ_ASIS
, 
RQ_PQ_Q
, 
RQ_DEL
, 
RQ_AQ
, RQ_AQ, RQ_DEL}

2134 
	$⁄ig_ªdu˚_√°ed_qu™tifõr
(
Node
* 
≤ode
, Node* 
˙ode
)

2136 
≤um
, 
˙um
;

2137 
Qt‰Node
 *
p
, *
c
;

2139 
p
 = 
	`NQTFR
(
≤ode
);

2140 
c
 = 
	`NQTFR
(
˙ode
);

2141 
≤um
 = 
	`p›uœr_qu™tifõr_num
(
p
);

2142 
˙um
 = 
	`p›uœr_qu™tifõr_num
(
c
);

2143 i‡(
≤um
 < 0 || 
˙um
 < 0)  ;

2145 
Redu˚Ty≥TabÀ
[
˙um
][
≤um
]) {

2146 
RQ_DEL
:

2147 *
≤ode
 = *
˙ode
;

2149 
RQ_A
:

2150 
p
->
èrgë
 = 
c
->target;

2151 
p
->
lowî
 = 0;Ö->
uµî
 = 
REPEAT_INFINITE
;Ö->
gªedy
 = 1;

2153 
RQ_AQ
:

2154 
p
->
èrgë
 = 
c
->target;

2155 
p
->
lowî
 = 0;Ö->
uµî
 = 
REPEAT_INFINITE
;Ö->
gªedy
 = 0;

2157 
RQ_QQ
:

2158 
p
->
èrgë
 = 
c
->target;

2159 
p
->
lowî
 = 0;Ö->
uµî
 = 1;Ö->
gªedy
 = 0;

2161 
RQ_P_QQ
:

2162 
p
->
èrgë
 = 
˙ode
;

2163 
p
->
lowî
 = 0;Ö->
uµî
 = 1;Ö->
gªedy
 = 0;

2164 
c
->
lowî
 = 1; c->
uµî
 = 
REPEAT_INFINITE
; c->
gªedy
 = 1;

2167 
RQ_PQ_Q
:

2168 
p
->
èrgë
 = 
˙ode
;

2169 
p
->
lowî
 = 0;Ö->
uµî
 = 1;Ö->
gªedy
 = 1;

2170 
c
->
lowî
 = 1; c->
uµî
 = 
REPEAT_INFINITE
; c->
gªedy
 = 0;

2173 
RQ_ASIS
:

2174 
p
->
èrgë
 = 
˙ode
;

2179 
c
->
èrgë
 = 
NULL_NODE
;

2180 
	`⁄ig_node_‰ì
(
˙ode
);

2181 
	}
}

2184 
	eTokíSyms
 {

2185 
TK_EOT
 = 0,

2186 
TK_RAW_BYTE
 = 1,

2187 
TK_CHAR
,

2188 
TK_STRING
,

2189 
TK_CODE_POINT
,

2190 
TK_ANYCHAR
,

2191 
TK_CHAR_TYPE
,

2192 
TK_BACKREF
,

2193 
TK_CALL
,

2194 
TK_ANCHOR
,

2195 
TK_OP_REPEAT
,

2196 
TK_INTERVAL
,

2197 
TK_ANYCHAR_ANYTIME
,

2198 
TK_ALT
,

2199 
TK_SUBEXP_OPEN
,

2200 
TK_SUBEXP_CLOSE
,

2201 
TK_CC_OPEN
,

2202 
TK_QUOTE_OPEN
,

2203 
TK_CHAR_PROPERTY
,

2205 
TK_CC_CLOSE
,

2206 
TK_CC_RANGE
,

2207 
TK_POSIX_BRACKET_OPEN
,

2208 
TK_CC_AND
,

2209 
TK_CC_CC_OPEN


2213 
TokíSyms
 
	mty≥
;

2214 
	mesˇ≥d
;

2215 
	mba£
;

2216 
UCh¨
* 
	mbackp
;

2218 
UCh¨
* 
	ms
;

2219 
	mc
;

2220 
OnigCodePoöt
 
	mcode
;

2221 
	m™ch‹
;

2222 
	msubty≥
;

2224 
	mlowî
;

2225 
	muµî
;

2226 
	mgªedy
;

2227 
	mpos£ssive
;

2228 } 
	mª≥©
;

2230 
	mnum
;

2231 
	mªf1
;

2232 * 
	mªfs
;

2233 
	mby_«me
;

2234 #ifde‡
USE_BACKREF_WITH_LEVEL


2235 
	mexi°_Àvñ
;

2236 
	mÀvñ
;

2238 } 
	mbackªf
;

2240 
UCh¨
* 
	m«me
;

2241 
UCh¨
* 
	m«me_íd
;

2242 
	mgnum
;

2243 } 
	mˇŒ
;

2245 
	m˘y≥
;

2246 
	mnŸ
;

2247 } 
	m¥›
;

2248 } 
	mu
;

2249 } 
	tOnigTokí
;

2253 
	$„tch_ønge_qu™tifõr
(
UCh¨
** 
§c
, UCh¨* 
íd
, 
OnigTokí
* 
tok
, 
SˇnEnv
* 
ív
)

2255 
low
, 
up
, 
syn_Ælow
, 
n⁄_low
 = 0;

2256 
r
 = 0;

2257 
OnigCodePoöt
 
c
;

2258 
OnigEncodög
 
íc
 = 
ív
->enc;

2259 
UCh¨
* 
p
 = *
§c
;

2260 
PFETCH_READY
;

2262 
syn_Ælow
 = 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_INVALID_INTERVAL
);

2264 i‡(
PEND
) {

2265 i‡(
syn_Ælow
)

2268  
ONIGERR_END_PATTERN_AT_LEFT_BRACE
;

2271 i‡(! 
syn_Ælow
) {

2272 
c
 = 
PPEEK
;

2273 i‡(
c
 == ')' || c == '(' || c == '|') {

2274  
ONIGERR_END_PATTERN_AT_LEFT_BRACE
;

2278 
low
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
p
, 
íd
, 
ív
->
íc
);

2279 i‡(
low
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
;

2280 i‡(
low
 > 
ONIG_MAX_REPEAT_NUM
)

2281  
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
;

2283 i‡(
p
 =*
§c
) {

2284 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV
)) {

2286 
low
 = 0;

2287 
n⁄_low
 = 1;

2290 
övÆid
;

2293 i‡(
PEND
Ë
övÆid
;

2294 
	`PFETCH
(
c
);

2295 i‡(
c
 == ',') {

2296 
UCh¨
* 
¥ev
 = 
p
;

2297 
up
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
p
, 
íd
, 
ív
->
íc
);

2298 i‡(
up
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
;

2299 i‡(
up
 > 
ONIG_MAX_REPEAT_NUM
)

2300  
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
;

2302 i‡(
p
 =
¥ev
) {

2303 i‡(
n⁄_low
 != 0)

2304 
övÆid
;

2305 
up
 = 
REPEAT_INFINITE
;

2309 i‡(
n⁄_low
 != 0)

2310 
övÆid
;

2312 
PUNFETCH
;

2313 
up
 = 
low
;

2314 
r
 = 2;

2317 i‡(
PEND
Ë
övÆid
;

2318 
	`PFETCH
(
c
);

2319 i‡(
	`IS_SYNTAX_OP
(
ív
->
sy¡ax
, 
ONIG_SYN_OP_ESC_BRACE_INTERVAL
)) {

2320 i‡(
c
 !
	`MC_ESC
(
ív
->
sy¡ax
)Ë
övÆid
;

2321 
	`PFETCH
(
c
);

2323 i‡(
c
 !'}'Ë
övÆid
;

2325 i‡(!
	`IS_REPEAT_INFINITE
(
up
Ë&& 
low
 > up) {

2326  
ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE
;

2329 
tok
->
ty≥
 = 
TK_INTERVAL
;

2330 
tok
->
u
.
ª≥©
.
lowî
 = 
low
;

2331 
tok
->
u
.
ª≥©
.
uµî
 = 
up
;

2332 *
§c
 = 
p
;

2333  
r
;

2335 
övÆid
:

2336 i‡(
syn_Ælow
) {

2341  
ONIGERR_INVALID_REPEAT_RANGE_PATTERN
;

2342 
	}
}

2346 
	$„tch_esˇ≥d_vÆue
(
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
, 
OnigCodePoöt
* 
vÆ
)

2348 
v
;

2349 
OnigCodePoöt
 
c
;

2350 
OnigEncodög
 
íc
 = 
ív
->enc;

2351 
UCh¨
* 
p
 = *
§c
;

2353 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_ESCAPE
;

2355 
	`PFETCH_S
(
c
);

2356 
c
) {

2358 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META
)) {

2359 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_META
;

2360 
	`PFETCH_S
(
c
);

2361 i‡(
c
 !'-'Ë 
ONIGERR_META_CODE_SYNTAX
;

2362 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_META
;

2363 
	`PFETCH_S
(
c
);

2364 i‡(
c
 =
	`MC_ESC
(
ív
->
sy¡ax
)) {

2365 
v
 = 
	`„tch_esˇ≥d_vÆue
(&
p
, 
íd
, 
ív
, &
c
);

2366 i‡(
v
 < 0)  v;

2368 
c
 = ((c & 0xff) | 0x80);

2371 
back¶ash
;

2375 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL
)) {

2376 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_CONTROL
;

2377 
	`PFETCH_S
(
c
);

2378 i‡(
c
 !'-'Ë 
ONIGERR_CONTROL_CODE_SYNTAX
;

2379 
c⁄åﬁ
;

2382 
back¶ash
;

2385 i‡(
	`IS_SYNTAX_OP
(
ív
->
sy¡ax
, 
ONIG_SYN_OP_ESC_C_CONTROL
)) {

2386 
c⁄åﬁ
:

2387 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_CONTROL
;

2388 
	`PFETCH_S
(
c
);

2389 i‡(
c
 == '?') {

2390 
c
 = 0177;

2393 i‡(
c
 =
	`MC_ESC
(
ív
->
sy¡ax
)) {

2394 
v
 = 
	`„tch_esˇ≥d_vÆue
(&
p
, 
íd
, 
ív
, &
c
);

2395 i‡(
v
 < 0)  v;

2397 
c
 &= 0x9f;

2405 
back¶ash
:

2406 
c
 = 
	`c⁄v_back¶ash_vÆue
(c, 
ív
);

2411 *
§c
 = 
p
;

2412 *
vÆ
 = 
c
;

2414 
	}
}

2416 
„tch_tokí
(
OnigTokí
* 
tok
, 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
);

2418 
OnigCodePoöt


2419 
	$gë_«me_íd_code_poöt
(
OnigCodePoöt
 
°¨t
)

2421 
°¨t
) {

2422 '<':  (
OnigCodePoöt
 )'>'; ;

2423 '\'':  (
OnigCodePoöt
 )'\''; ;

2428  (
OnigCodePoöt
 )0;

2429 
	}
}

2431 #ifde‡
USE_NAMED_GROUP


2432 #ifde‡
USE_BACKREF_WITH_LEVEL


2439 
	$„tch_«me_wôh_Àvñ
(
OnigCodePoöt
 
°¨t_code
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

2440 
UCh¨
** 
∫ame_íd
, 
SˇnEnv
* 
ív
,

2441 * 
rback_num
, * 
æevñ
)

2443 
r
, 
sign
, 
is_num
, 
exi°_Àvñ
;

2444 
OnigCodePoöt
 
íd_code
;

2445 
OnigCodePoöt
 
c
 = 0;

2446 
OnigEncodög
 
íc
 = 
ív
->enc;

2447 
UCh¨
 *
«me_íd
;

2448 
UCh¨
 *
≤um_hód
;

2449 
UCh¨
 *
p
 = *
§c
;

2450 
PFETCH_READY
;

2452 *
rback_num
 = 0;

2453 
is_num
 = 
exi°_Àvñ
 = 0;

2454 
sign
 = 1;

2455 
≤um_hód
 = *
§c
;

2457 
íd_code
 = 
	`gë_«me_íd_code_poöt
(
°¨t_code
);

2459 
«me_íd
 = 
íd
;

2460 
r
 = 0;

2461 i‡(
PEND
) {

2462  
ONIGERR_EMPTY_GROUP_NAME
;

2465 
	`PFETCH
(
c
);

2466 i‡(
c
 =
íd_code
)

2467  
ONIGERR_EMPTY_GROUP_NAME
;

2469 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

2470 
is_num
 = 1;

2472 i‡(
c
 == '-') {

2473 
is_num
 = 2;

2474 
sign
 = -1;

2475 
≤um_hód
 = 
p
;

2477 i‡(!
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
)) {

2478 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2482 !
PEND
) {

2483 
«me_íd
 = 
p
;

2484 
	`PFETCH
(
c
);

2485 i‡(
c
 =
íd_code
 || c == ')' || c == '+' || c == '-') {

2486 i‡(
is_num
 =2Ë
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2490 i‡(
is_num
 != 0) {

2491 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

2492 
is_num
 = 1;

2495 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2496 
is_num
 = 0;

2499 i‡(!
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
)) {

2500 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2504 i‡(
r
 =0 && 
c
 !
íd_code
) {

2505 i‡(
c
 == '+' || c == '-') {

2506 
Àvñ
;

2507 
Êag
 = (
c
 == '-' ? -1 : 1);

2509 i‡(
PEND
) {

2510 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2511 
íd
;

2513 
	`PFETCH
(
c
);

2514 i‡(! 
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)Ë
îr
;

2515 
PUNFETCH
;

2516 
Àvñ
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
p
, 
íd
, 
íc
);

2517 i‡(
Àvñ
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2518 *
æevñ
 = (
Àvñ
 * 
Êag
);

2519 
exi°_Àvñ
 = 1;

2521 i‡(!
PEND
) {

2522 
	`PFETCH
(
c
);

2523 i‡(
c
 =
íd_code
)

2524 
íd
;

2528 
îr
:

2529 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2530 
«me_íd
 = 
íd
;

2533 
íd
:

2534 i‡(
r
 == 0) {

2535 i‡(
is_num
 != 0) {

2536 *
rback_num
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
≤um_hód
, 
«me_íd
, 
íc
);

2537 i‡(*
rback_num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2538 i‡(*
rback_num
 =0Ë
îr
;

2540 *
rback_num
 *
sign
;

2543 *
∫ame_íd
 = 
«me_íd
;

2544 *
§c
 = 
p
;

2545  (
exi°_Àvñ
 ? 1 : 0);

2548 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
, 
r
, *
§c
, 
«me_íd
);

2549  
r
;

2551 
	}
}

2559 
	$„tch_«me
(
OnigCodePoöt
 
°¨t_code
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

2560 
UCh¨
** 
∫ame_íd
, 
SˇnEnv
* 
ív
, * 
rback_num
, 
ªf
)

2562 
r
, 
is_num
, 
sign
;

2563 
OnigCodePoöt
 
íd_code
;

2564 
OnigCodePoöt
 
c
 = 0;

2565 
OnigEncodög
 
íc
 = 
ív
->enc;

2566 
UCh¨
 *
«me_íd
;

2567 
UCh¨
 *
≤um_hód
;

2568 
UCh¨
 *
p
 = *
§c
;

2570 *
rback_num
 = 0;

2572 
íd_code
 = 
	`gë_«me_íd_code_poöt
(
°¨t_code
);

2574 
«me_íd
 = 
íd
;

2575 
≤um_hód
 = *
§c
;

2576 
r
 = 0;

2577 
is_num
 = 0;

2578 
sign
 = 1;

2579 i‡(
PEND
) {

2580  
ONIGERR_EMPTY_GROUP_NAME
;

2583 
	`PFETCH_S
(
c
);

2584 i‡(
c
 =
íd_code
)

2585  
ONIGERR_EMPTY_GROUP_NAME
;

2587 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

2588 i‡(
ªf
 == 1)

2589 
is_num
 = 1;

2591 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2592 
is_num
 = 0;

2595 i‡(
c
 == '-') {

2596 i‡(
ªf
 == 1) {

2597 
is_num
 = 2;

2598 
sign
 = -1;

2599 
≤um_hód
 = 
p
;

2602 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2603 
is_num
 = 0;

2606 i‡(!
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
)) {

2607 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2611 i‡(
r
 == 0) {

2612 !
PEND
) {

2613 
«me_íd
 = 
p
;

2614 
	`PFETCH_S
(
c
);

2615 i‡(
c
 =
íd_code
 || c == ')') {

2616 i‡(
is_num
 =2Ë
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2620 i‡(
is_num
 != 0) {

2621 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

2622 
is_num
 = 1;

2625 i‡(!
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
))

2626 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2628 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2629 
is_num
 = 0;

2633 i‡(!
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
)) {

2634 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2639 i‡(
c
 !
íd_code
) {

2640 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2641 
«me_íd
 = 
íd
;

2644 i‡(
is_num
 != 0) {

2645 *
rback_num
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
≤um_hód
, 
«me_íd
, 
íc
);

2646 i‡(*
rback_num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2647 i‡(*
rback_num
 == 0) {

2648 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2649 
îr
;

2652 *
rback_num
 *
sign
;

2655 *
∫ame_íd
 = 
«me_íd
;

2656 *
§c
 = 
p
;

2660 !
PEND
) {

2661 
«me_íd
 = 
p
;

2662 
	`PFETCH_S
(
c
);

2663 i‡(
c
 =
íd_code
 || c == ')')

2666 i‡(
PEND
)

2667 
«me_íd
 = 
íd
;

2669 
îr
:

2670 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
, 
r
, *
§c
, 
«me_íd
);

2671  
r
;

2673 
	}
}

2676 
	$„tch_«me
(
OnigCodePoöt
 
°¨t_code
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

2677 
UCh¨
** 
∫ame_íd
, 
SˇnEnv
* 
ív
, * 
rback_num
, 
ªf
)

2679 
r
, 
is_num
, 
sign
;

2680 
OnigCodePoöt
 
íd_code
;

2681 
OnigCodePoöt
 
c
 = 0;

2682 
UCh¨
 *
«me_íd
;

2683 
OnigEncodög
 
íc
 = 
ív
->enc;

2684 
UCh¨
 *
≤um_hód
;

2685 
UCh¨
 *
p
 = *
§c
;

2686 
PFETCH_READY
;

2688 *
rback_num
 = 0;

2690 
íd_code
 = 
	`gë_«me_íd_code_poöt
(
°¨t_code
);

2692 *
∫ame_íd
 = 
«me_íd
 = 
íd
;

2693 
r
 = 0;

2694 
≤um_hód
 = *
§c
;

2695 
is_num
 = 0;

2696 
sign
 = 1;

2698 i‡(
PEND
) {

2699  
ONIGERR_EMPTY_GROUP_NAME
;

2702 
	`PFETCH
(
c
);

2703 i‡(
c
 =
íd_code
)

2704  
ONIGERR_EMPTY_GROUP_NAME
;

2706 i‡(
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
)) {

2707 
is_num
 = 1;

2709 i‡(
c
 == '-') {

2710 
is_num
 = 2;

2711 
sign
 = -1;

2712 
≤um_hód
 = 
p
;

2715 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2719 !
PEND
) {

2720 
«me_íd
 = 
p
;

2722 
	`PFETCH
(
c
);

2723 i‡(
c
 =
íd_code
 || c == ')') ;

2724 i‡(! 
	`ONIGENC_IS_CODE_DIGIT
(
íc
, 
c
))

2725 
r
 = 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
;

2727 i‡(
r
 =0 && 
c
 !
íd_code
) {

2728 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2729 
«me_íd
 = 
íd
;

2732 i‡(
r
 == 0) {

2733 *
rback_num
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
≤um_hód
, 
«me_íd
, 
íc
);

2734 i‡(*
rback_num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2735 i‡(*
rback_num
 == 0) {

2736 
r
 = 
ONIGERR_INVALID_GROUP_NAME
;

2737 
îr
;

2739 *
rback_num
 *
sign
;

2741 *
∫ame_íd
 = 
«me_íd
;

2742 *
§c
 = 
p
;

2746 
îr
:

2747 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
, 
r
, *
§c
, 
«me_íd
);

2748  
r
;

2750 
	}
}

2754 
	$CC_ESC_WARN
(
SˇnEnv
* 
ív
, 
UCh¨
 *
c
)

2756 i‡(
⁄ig_w¨n
 =
⁄ig_nuŒ_w¨n
)  ;

2758 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_WARN_CC_OP_NOT_ESCAPED
) &&

2759 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_BACKSLASH_ESCAPE_IN_CC
)) {

2760 
UCh¨
 
buf
[
WARN_BUFSIZE
];

2761 
	`⁄ig_¢¥ötf_wôh_∑âîn
(
buf
, 
WARN_BUFSIZE
, 
ív
->
íc
,

2762 
ív
->
∑âîn
,Énv->
∑âîn_íd
,

2763 (
UCh¨
* )"ch¨a˘î cœs†ha†'%s' wôhouàesˇ≥", 
c
);

2764 (*
⁄ig_w¨n
)((* )
buf
);

2766 
	}
}

2769 
	$CLOSE_BRACKET_WITHOUT_ESC_WARN
(
SˇnEnv
* 
ív
, 
UCh¨
* 
c
)

2771 i‡(
⁄ig_w¨n
 =
⁄ig_nuŒ_w¨n
)  ;

2773 i‡(
	`IS_SYNTAX_BV
((
ív
)->
sy¡ax
, 
ONIG_SYN_WARN_CC_OP_NOT_ESCAPED
)) {

2774 
UCh¨
 
buf
[
WARN_BUFSIZE
];

2775 
	`⁄ig_¢¥ötf_wôh_∑âîn
(
buf
, 
WARN_BUFSIZE
, (
ív
)->
íc
,

2776 (
ív
)->
∑âîn
, (ív)->
∑âîn_íd
,

2777 (
UCh¨
* )"ªguœ∏ex¥essi⁄ ha†'%s' wôhouàesˇ≥", 
c
);

2778 (*
⁄ig_w¨n
)((* )
buf
);

2780 
	}
}

2782 
UCh¨
*

2783 
	$föd_°r_posôi⁄
(
OnigCodePoöt
 
s
[], 
n
, 
UCh¨
* 
‰om
, UCh¨* 
to
,

2784 
UCh¨
 **
√xt
, 
OnigEncodög
 
íc
)

2786 
i
;

2787 
OnigCodePoöt
 
x
;

2788 
UCh¨
 *
q
;

2789 
UCh¨
 *
p
 = 
‰om
;

2791 
p
 < 
to
) {

2792 
x
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
to
);

2793 
q
 = 
p
 + 
	`í˛í
(
íc
,Ö);

2794 i‡(
x
 =
s
[0]) {

2795 
i
 = 1; i < 
n
 && 
q
 < 
to
; i++) {

2796 
x
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
q
, 
to
);

2797 i‡(
x
 !
s
[
i
]) ;

2798 
q
 +
	`í˛í
(
íc
, q);

2800 i‡(
i
 >
n
) {

2801 i‡(
	`IS_NOT_NULL
(
√xt
))

2802 *
√xt
 = 
q
;

2803  
p
;

2806 
p
 = 
q
;

2808  
NULL_UCHARP
;

2809 
	}
}

2812 
	$°r_exi°_check_wôh_esc
(
OnigCodePoöt
 
s
[], 
n
, 
UCh¨
* 
‰om
, UCh¨* 
to
,

2813 
OnigCodePoöt
 
bad
, 
OnigEncodög
 
íc
, 
OnigSy¡axTy≥
* 
syn
)

2815 
i
, 
ö_esc
;

2816 
OnigCodePoöt
 
x
;

2817 
UCh¨
 *
q
;

2818 
UCh¨
 *
p
 = 
‰om
;

2820 
ö_esc
 = 0;

2821 
p
 < 
to
) {

2822 i‡(
ö_esc
) {

2823 
ö_esc
 = 0;

2824 
p
 +
	`í˛í
(
íc
,Ö);

2827 
x
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
to
);

2828 
q
 = 
p
 + 
	`í˛í
(
íc
,Ö);

2829 i‡(
x
 =
s
[0]) {

2830 
i
 = 1; i < 
n
 && 
q
 < 
to
; i++) {

2831 
x
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
q
, 
to
);

2832 i‡(
x
 !
s
[
i
]) ;

2833 
q
 +
	`í˛í
(
íc
, q);

2835 i‡(
i
 >
n
)  1;

2836 
p
 +
	`í˛í
(
íc
,Ö);

2839 
x
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
to
);

2840 i‡(
x
 =
bad
)  0;

2841 i‡(
x
 =
	`MC_ESC
(
syn
)Ë
ö_esc
 = 1;

2842 
p
 = 
q
;

2847 
	}
}

2850 
	$„tch_tokí_ö_cc
(
OnigTokí
* 
tok
, 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

2852 
num
;

2853 
OnigCodePoöt
 
c
, 
c2
;

2854 
OnigSy¡axTy≥
* 
syn
 = 
ív
->
sy¡ax
;

2855 
OnigEncodög
 
íc
 = 
ív
->enc;

2856 
UCh¨
* 
¥ev
;

2857 
UCh¨
* 
p
 = *
§c
;

2858 
PFETCH_READY
;

2860 i‡(
PEND
) {

2861 
tok
->
ty≥
 = 
TK_EOT
;

2862  
tok
->
ty≥
;

2865 
	`PFETCH
(
c
);

2866 
tok
->
ty≥
 = 
TK_CHAR
;

2867 
tok
->
ba£
 = 0;

2868 
tok
->
u
.
c
 = c;

2869 
tok
->
esˇ≥d
 = 0;

2871 i‡(
c
 == ']') {

2872 
tok
->
ty≥
 = 
TK_CC_CLOSE
;

2874 i‡(
c
 == '-') {

2875 
tok
->
ty≥
 = 
TK_CC_RANGE
;

2877 i‡(
c
 =
	`MC_ESC
(
syn
)) {

2878 i‡(! 
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_BACKSLASH_ESCAPE_IN_CC
))

2879 
íd
;

2881 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_ESCAPE
;

2883 
	`PFETCH
(
c
);

2884 
tok
->
esˇ≥d
 = 1;

2885 
tok
->
u
.
c
 = c;

2886 
c
) {

2888 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2889 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_WORD
;

2890 
tok
->
u
.
¥›
.
nŸ
 = 0;

2893 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2894 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_WORD
;

2895 
tok
->
u
.
¥›
.
nŸ
 = 1;

2898 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2899 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_DIGIT
;

2900 
tok
->
u
.
¥›
.
nŸ
 = 0;

2903 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2904 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_DIGIT
;

2905 
tok
->
u
.
¥›
.
nŸ
 = 1;

2908 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2909 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_SPACE
;

2910 
tok
->
u
.
¥›
.
nŸ
 = 0;

2913 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2914 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_SPACE
;

2915 
tok
->
u
.
¥›
.
nŸ
 = 1;

2918 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_H_XDIGIT
)) ;

2919 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2920 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_XDIGIT
;

2921 
tok
->
u
.
¥›
.
nŸ
 = 0;

2924 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_H_XDIGIT
)) ;

2925 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

2926 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_XDIGIT
;

2927 
tok
->
u
.
¥›
.
nŸ
 = 1;

2932 i‡(
PEND
) ;

2934 
c2
 = 
PPEEK
;

2935 i‡(
c2
 == '{' &&

2936 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
)) {

2937 
PINC
;

2938 
tok
->
ty≥
 = 
TK_CHAR_PROPERTY
;

2939 
tok
->
u
.
¥›
.
nŸ
 = (
c
 == 'P' ? 1 : 0);

2941 i‡(!
PEND
 && 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
)) {

2942 
	`PFETCH
(
c2
);

2943 i‡(
c2
 == '^') {

2944 
tok
->
u
.
¥›
.
nŸ
 = (tok->u.prop.not == 0 ? 1 : 0);

2947 
PUNFETCH
;

2953 i‡(
PEND
) ;

2955 
¥ev
 = 
p
;

2956 i‡(
	`PPEEK_IS
('{'Ë&& 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_X_BRACE_HEX8
)) {

2957 
PINC
;

2958 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 8, 
íc
);

2959 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
;

2960 i‡(!
PEND
) {

2961 
c2
 = 
PPEEK
;

2962 i‡(
	`ONIGENC_IS_CODE_XDIGIT
(
íc
, 
c2
))

2963  
ONIGERR_TOO_LONG_WIDE_CHAR_VALUE
;

2966 i‡(
p
 > 
¥ev
 + 
	`í˛í
(
íc
,ÖªvË&& !
PEND
 && (
	`PPEEK_IS
('}'))) {

2967 
PINC
;

2968 
tok
->
ty≥
 = 
TK_CODE_POINT
;

2969 
tok
->
ba£
 = 16;

2970 
tok
->
u
.
code
 = (
OnigCodePoöt
 )
num
;

2974 
p
 = 
¥ev
;

2977 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_X_HEX2
)) {

2978 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 2, 
íc
);

2979 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2980 i‡(
p
 =
¥ev
) {

2981 
num
 = 0;

2983 
tok
->
ty≥
 = 
TK_RAW_BYTE
;

2984 
tok
->
ba£
 = 16;

2985 
tok
->
u
.
c
 = 
num
;

2990 i‡(
PEND
) ;

2992 
¥ev
 = 
p
;

2993 i‡(
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_U_HEX4
)) {

2994 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 4, 
íc
);

2995 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

2996 i‡(
p
 =
¥ev
) {

2997 
num
 = 0;

2999 
tok
->
ty≥
 = 
TK_CODE_POINT
;

3000 
tok
->
ba£
 = 16;

3001 
tok
->
u
.
code
 = (
OnigCodePoöt
 )
num
;

3007 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_OCTAL3
)) {

3008 
PUNFETCH
;

3009 
¥ev
 = 
p
;

3010 
num
 = 
	`sˇn_unsig√d_o˘Æ_numbî
(&
p
, 
íd
, 3, 
íc
);

3011 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

3012 i‡(
p
 =
¥ev
) {

3013 
num
 = 0;

3015 
tok
->
ty≥
 = 
TK_RAW_BYTE
;

3016 
tok
->
ba£
 = 8;

3017 
tok
->
u
.
c
 = 
num
;

3022 
PUNFETCH
;

3023 
num
 = 
	`„tch_esˇ≥d_vÆue
(&
p
, 
íd
, 
ív
, &
c2
);

3024 i‡(
num
 < 0) Çum;

3025 i‡(
tok
->
u
.
c
 !
c2
) {

3026 
tok
->
u
.
code
 = 
c2
;

3027 
tok
->
ty≥
 = 
TK_CODE_POINT
;

3032 i‡(
c
 == '[') {

3033 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_POSIX_BRACKET
Ë&& (
	`PPEEK_IS
(':'))) {

3034 
OnigCodePoöt
 
£nd
[] = { (OnigCodePoint )':', (OnigCodePoint )']' };

3035 
tok
->
backp
 = 
p
;

3036 
PINC
;

3037 i‡(
	`°r_exi°_check_wôh_esc
(
£nd
, 2, 
p
, 
íd
,

3038 (
OnigCodePoöt
 )']', 
íc
, 
syn
)) {

3039 
tok
->
ty≥
 = 
TK_POSIX_BRACKET_OPEN
;

3042 
PUNFETCH
;

3043 
cc_ö_cc
;

3047 
cc_ö_cc
:

3048 i‡(
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_CCLASS_SET_OP
)) {

3049 
tok
->
ty≥
 = 
TK_CC_CC_OPEN
;

3052 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"[");

3056 i‡(
c
 == '&') {

3057 i‡(
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_CCLASS_SET_OP
) &&

3058 !
PEND
 && (
	`PPEEK_IS
('&'))) {

3059 
PINC
;

3060 
tok
->
ty≥
 = 
TK_CC_AND
;

3064 
íd
:

3065 *
§c
 = 
p
;

3066  
tok
->
ty≥
;

3067 
	}
}

3070 
	$„tch_tokí
(
OnigTokí
* 
tok
, 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

3072 
r
, 
num
;

3073 
OnigCodePoöt
 
c
;

3074 
OnigEncodög
 
íc
 = 
ív
->enc;

3075 
OnigSy¡axTy≥
* 
syn
 = 
ív
->
sy¡ax
;

3076 
UCh¨
* 
¥ev
;

3077 
UCh¨
* 
p
 = *
§c
;

3078 
PFETCH_READY
;

3080 
°¨t
:

3081 i‡(
PEND
) {

3082 
tok
->
ty≥
 = 
TK_EOT
;

3083  
tok
->
ty≥
;

3086 
tok
->
ty≥
 = 
TK_STRING
;

3087 
tok
->
ba£
 = 0;

3088 
tok
->
backp
 = 
p
;

3090 
	`PFETCH
(
c
);

3091 i‡(
	`IS_MC_ESC_CODE
(
c
, 
syn
)) {

3092 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_AT_ESCAPE
;

3094 
tok
->
backp
 = 
p
;

3095 
	`PFETCH
(
c
);

3097 
tok
->
u
.
c
 = c;

3098 
tok
->
esˇ≥d
 = 1;

3099 
c
) {

3101 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF
)) ;

3102 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3103 
tok
->
u
.
ª≥©
.
lowî
 = 0;

3104 
tok
->
u
.
ª≥©
.
uµî
 = 
REPEAT_INFINITE
;

3105 
gªedy_check
;

3109 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_PLUS_ONE_INF
)) ;

3110 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3111 
tok
->
u
.
ª≥©
.
lowî
 = 1;

3112 
tok
->
u
.
ª≥©
.
uµî
 = 
REPEAT_INFINITE
;

3113 
gªedy_check
;

3117 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_QMARK_ZERO_ONE
)) ;

3118 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3119 
tok
->
u
.
ª≥©
.
lowî
 = 0;

3120 
tok
->
u
.
ª≥©
.
uµî
 = 1;

3121 
gªedy_check
:

3122 i‡(!
PEND
 && 
	`PPEEK_IS
('?') &&

3123 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_QMARK_NON_GREEDY
)) {

3124 
	`PFETCH
(
c
);

3125 
tok
->
u
.
ª≥©
.
gªedy
 = 0;

3126 
tok
->
u
.
ª≥©
.
pos£ssive
 = 0;

3129 
pos£ssive_check
:

3130 i‡(!
PEND
 && 
	`PPEEK_IS
('+') &&

3131 ((
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT
) &&

3132 
tok
->
ty≥
 !
TK_INTERVAL
) ||

3133 (
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL
) &&

3134 
tok
->
ty≥
 =
TK_INTERVAL
))) {

3135 
	`PFETCH
(
c
);

3136 
tok
->
u
.
ª≥©
.
gªedy
 = 1;

3137 
tok
->
u
.
ª≥©
.
pos£ssive
 = 1;

3140 
tok
->
u
.
ª≥©
.
gªedy
 = 1;

3141 
tok
->
u
.
ª≥©
.
pos£ssive
 = 0;

3147 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_BRACE_INTERVAL
)) ;

3148 
r
 = 
	`„tch_ønge_qu™tifõr
(&
p
, 
íd
, 
tok
, 
ív
);

3149 i‡(
r
 < 0) Ñ;

3150 i‡(
r
 =0Ë
gªedy_check
;

3151 i‡(
r
 == 2) {

3152 i‡(
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY
))

3153 
pos£ssive_check
;

3155 
gªedy_check
;

3161 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_VBAR_ALT
)) ;

3162 
tok
->
ty≥
 = 
TK_ALT
;

3166 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_LPAREN_SUBEXP
)) ;

3167 
tok
->
ty≥
 = 
TK_SUBEXP_OPEN
;

3171 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_LPAREN_SUBEXP
)) ;

3172 
tok
->
ty≥
 = 
TK_SUBEXP_CLOSE
;

3176 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_W_WORD
)) ;

3177 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3178 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_WORD
;

3179 
tok
->
u
.
¥›
.
nŸ
 = 0;

3183 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_W_WORD
)) ;

3184 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3185 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_WORD
;

3186 
tok
->
u
.
¥›
.
nŸ
 = 1;

3190 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_B_WORD_BOUND
)) ;

3191 
tok
->
ty≥
 = 
TK_ANCHOR
;

3192 
tok
->
u
.
™ch‹
 = 
ANCHOR_WORD_BOUND
;

3196 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_B_WORD_BOUND
)) ;

3197 
tok
->
ty≥
 = 
TK_ANCHOR
;

3198 
tok
->
u
.
™ch‹
 = 
ANCHOR_NOT_WORD_BOUND
;

3201 #ifde‡
USE_WORD_BEGIN_END


3203 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
)) ;

3204 
tok
->
ty≥
 = 
TK_ANCHOR
;

3205 
tok
->
u
.
™ch‹
 = 
ANCHOR_WORD_BEGIN
;

3209 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
)) ;

3210 
tok
->
ty≥
 = 
TK_ANCHOR
;

3211 
tok
->
u
.
™ch‹
 = 
ANCHOR_WORD_END
;

3216 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_S_WHITE_SPACE
)) ;

3217 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3218 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_SPACE
;

3219 
tok
->
u
.
¥›
.
nŸ
 = 0;

3223 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_S_WHITE_SPACE
)) ;

3224 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3225 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_SPACE
;

3226 
tok
->
u
.
¥›
.
nŸ
 = 1;

3230 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_D_DIGIT
)) ;

3231 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3232 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_DIGIT
;

3233 
tok
->
u
.
¥›
.
nŸ
 = 0;

3237 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_D_DIGIT
)) ;

3238 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3239 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_DIGIT
;

3240 
tok
->
u
.
¥›
.
nŸ
 = 1;

3244 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_H_XDIGIT
)) ;

3245 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3246 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_XDIGIT
;

3247 
tok
->
u
.
¥›
.
nŸ
 = 0;

3251 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_H_XDIGIT
)) ;

3252 
tok
->
ty≥
 = 
TK_CHAR_TYPE
;

3253 
tok
->
u
.
¥›
.
˘y≥
 = 
ONIGENC_CTYPE_XDIGIT
;

3254 
tok
->
u
.
¥›
.
nŸ
 = 1;

3258 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR
)) ;

3259 
begö_buf
:

3260 
tok
->
ty≥
 = 
TK_ANCHOR
;

3261 
tok
->
u
.
subty≥
 = 
ANCHOR_BEGIN_BUF
;

3265 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR
)) ;

3266 
tok
->
ty≥
 = 
TK_ANCHOR
;

3267 
tok
->
u
.
subty≥
 = 
ANCHOR_SEMI_END_BUF
;

3271 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR
)) ;

3272 
íd_buf
:

3273 
tok
->
ty≥
 = 
TK_ANCHOR
;

3274 
tok
->
u
.
subty≥
 = 
ANCHOR_END_BUF
;

3278 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR
)) ;

3279 
tok
->
ty≥
 = 
TK_ANCHOR
;

3280 
tok
->
u
.
subty≥
 = 
ANCHOR_BEGIN_POSITION
;

3284 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR
)) ;

3285 
begö_buf
;

3289 i‡(! 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR
)) ;

3290 
íd_buf
;

3294 i‡(
PEND
) ;

3296 
¥ev
 = 
p
;

3297 i‡(
	`PPEEK_IS
('{'Ë&& 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_X_BRACE_HEX8
)) {

3298 
PINC
;

3299 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 8, 
íc
);

3300 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
;

3301 i‡(!
PEND
) {

3302 i‡(
	`ONIGENC_IS_CODE_XDIGIT
(
íc
, 
PPEEK
))

3303  
ONIGERR_TOO_LONG_WIDE_CHAR_VALUE
;

3306 i‡((
p
 > 
¥ev
 + 
	`í˛í
(
íc
,Öªv)Ë&& !
PEND
 && 
	`PPEEK_IS
('}')) {

3307 
PINC
;

3308 
tok
->
ty≥
 = 
TK_CODE_POINT
;

3309 
tok
->
u
.
code
 = (
OnigCodePoöt
 )
num
;

3313 
p
 = 
¥ev
;

3316 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_X_HEX2
)) {

3317 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 2, 
íc
);

3318 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

3319 i‡(
p
 =
¥ev
) {

3320 
num
 = 0;

3322 
tok
->
ty≥
 = 
TK_RAW_BYTE
;

3323 
tok
->
ba£
 = 16;

3324 
tok
->
u
.
c
 = 
num
;

3329 i‡(
PEND
) ;

3331 
¥ev
 = 
p
;

3332 i‡(
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_U_HEX4
)) {

3333 
num
 = 
	`sˇn_unsig√d_hexadecimÆ_numbî
(&
p
, 
íd
, 4, 
íc
);

3334 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

3335 i‡(
p
 =
¥ev
) {

3336 
num
 = 0;

3338 
tok
->
ty≥
 = 
TK_CODE_POINT
;

3339 
tok
->
ba£
 = 16;

3340 
tok
->
u
.
code
 = (
OnigCodePoöt
 )
num
;

3346 
PUNFETCH
;

3347 
¥ev
 = 
p
;

3348 
num
 = 
	`⁄ig_sˇn_unsig√d_numbî
(&
p
, 
íd
, 
íc
);

3349 i‡(
num
 < 0 ||Çum > 
ONIG_MAX_BACKREF_NUM
) {

3350 
skù_backªf
;

3353 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_DECIMAL_BACKREF
) &&

3354 (
num
 <
ív
->
num_mem
 ||Çum <= 9)) {

3355 i‡(
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_STRICT_CHECK_BACKREF
)) {

3356 i‡(
num
 > 
ív
->
num_mem
 || 
	`IS_NULL
(
	`SCANENV_MEM_NODES
(env)[num]))

3357  
ONIGERR_INVALID_BACKREF
;

3360 
tok
->
ty≥
 = 
TK_BACKREF
;

3361 
tok
->
u
.
backªf
.
num
 = 1;

3362 
tok
->
u
.
backªf
.
ªf1
 = 
num
;

3363 
tok
->
u
.
backªf
.
by_«me
 = 0;

3364 #ifde‡
USE_BACKREF_WITH_LEVEL


3365 
tok
->
u
.
backªf
.
exi°_Àvñ
 = 0;

3370 
skù_backªf
:

3371 i‡(
c
 == '8' || c == '9') {

3373 
p
 = 
¥ev
; 
PINC
;

3377 
p
 = 
¥ev
;

3380 i‡(
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ESC_OCTAL3
)) {

3381 
¥ev
 = 
p
;

3382 
num
 = 
	`sˇn_unsig√d_o˘Æ_numbî
(&
p
, 
íd
, (
c
 ='0' ? 2:3), 
íc
);

3383 i‡(
num
 < 0Ë 
ONIGERR_TOO_BIG_NUMBER
;

3384 i‡(
p
 =
¥ev
) {

3385 
num
 = 0;

3387 
tok
->
ty≥
 = 
TK_RAW_BYTE
;

3388 
tok
->
ba£
 = 8;

3389 
tok
->
u
.
c
 = 
num
;

3391 i‡(
c
 != '0') {

3392 
PINC
;

3396 #ifde‡
USE_NAMED_GROUP


3398 i‡(!
PEND
 && 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_K_NAMED_BACKREF
)) {

3399 
	`PFETCH
(
c
);

3400 i‡(
c
 == '<' || c == '\'') {

3401 
UCh¨
* 
«me_íd
;

3402 * 
backs
;

3403 
back_num
;

3405 
¥ev
 = 
p
;

3407 #ifde‡
USE_BACKREF_WITH_LEVEL


3408 
«me_íd
 = 
NULL_UCHARP
;

3409 
r
 = 
	`„tch_«me_wôh_Àvñ
((
OnigCodePoöt
 )
c
, &
p
, 
íd
, &
«me_íd
,

3410 
ív
, &
back_num
, &
tok
->
u
.
backªf
.
Àvñ
);

3411 i‡(
r
 =1Ë
tok
->
u
.
backªf
.
exi°_Àvñ
 = 1;

3412 
tok
->
u
.
backªf
.
exi°_Àvñ
 = 0;

3414 
r
 = 
	`„tch_«me
(&
p
, 
íd
, &
«me_íd
, 
ív
, &
back_num
, 1);

3416 i‡(
r
 < 0) Ñ;

3418 i‡(
back_num
 != 0) {

3419 i‡(
back_num
 < 0) {

3420 
back_num
 = 
	`BACKREF_REL_TO_ABS
(back_num, 
ív
);

3421 i‡(
back_num
 <= 0)

3422  
ONIGERR_INVALID_BACKREF
;

3425 i‡(
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_STRICT_CHECK_BACKREF
)) {

3426 i‡(
back_num
 > 
ív
->
num_mem
 ||

3427 
	`IS_NULL
(
	`SCANENV_MEM_NODES
(
ív
)[
back_num
]))

3428  
ONIGERR_INVALID_BACKREF
;

3430 
tok
->
ty≥
 = 
TK_BACKREF
;

3431 
tok
->
u
.
backªf
.
by_«me
 = 0;

3432 
tok
->
u
.
backªf
.
num
 = 1;

3433 
tok
->
u
.
backªf
.
ªf1
 = 
back_num
;

3436 
num
 = 
	`⁄ig_«me_to_group_numbîs
(
ív
->
ªg
, 
¥ev
, 
«me_íd
, &
backs
);

3437 i‡(
num
 <= 0) {

3438 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
,

3439 
ONIGERR_UNDEFINED_NAME_REFERENCE
, 
¥ev
, 
«me_íd
);

3440  
ONIGERR_UNDEFINED_NAME_REFERENCE
;

3442 i‡(
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_STRICT_CHECK_BACKREF
)) {

3443 
i
;

3444 
i
 = 0; i < 
num
; i++) {

3445 i‡(
backs
[
i
] > 
ív
->
num_mem
 ||

3446 
	`IS_NULL
(
	`SCANENV_MEM_NODES
(
ív
)[
backs
[
i
]]))

3447  
ONIGERR_INVALID_BACKREF
;

3451 
tok
->
ty≥
 = 
TK_BACKREF
;

3452 
tok
->
u
.
backªf
.
by_«me
 = 1;

3453 i‡(
num
 == 1) {

3454 
tok
->
u
.
backªf
.
num
 = 1;

3455 
tok
->
u
.
backªf
.
ªf1
 = 
backs
[0];

3458 
tok
->
u
.
backªf
.
num
 =Çum;

3459 
tok
->
u
.
backªf
.
ªfs
 = 
backs
;

3464 
PUNFETCH
;

3469 #ifde‡
USE_SUBEXP_CALL


3471 i‡(!
PEND
 && 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_G_SUBEXP_CALL
)) {

3472 
	`PFETCH
(
c
);

3473 i‡(
c
 == '<' || c == '\'') {

3474 
gnum
;

3475 
UCh¨
* 
«me_íd
;

3477 
¥ev
 = 
p
;

3478 
r
 = 
	`„tch_«me
((
OnigCodePoöt
 )
c
, &
p
, 
íd
, &
«me_íd
, 
ív
, &
gnum
, 1);

3479 i‡(
r
 < 0) Ñ;

3481 
tok
->
ty≥
 = 
TK_CALL
;

3482 
tok
->
u
.
ˇŒ
.
«me
 = 
¥ev
;

3483 
tok
->
u
.
ˇŒ
.
«me_íd
 =Çame_end;

3484 
tok
->
u
.
ˇŒ
.
gnum
 = gnum;

3487 
PUNFETCH
;

3493 i‡(
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE
)) {

3494 
tok
->
ty≥
 = 
TK_QUOTE_OPEN
;

3500 i‡(!
PEND
 && 
	`PPEEK_IS
('{') &&

3501 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
)) {

3502 
PINC
;

3503 
tok
->
ty≥
 = 
TK_CHAR_PROPERTY
;

3504 
tok
->
u
.
¥›
.
nŸ
 = (
c
 == 'P' ? 1 : 0);

3506 i‡(!
PEND
 &&

3507 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
)) {

3508 
	`PFETCH
(
c
);

3509 i‡(
c
 == '^') {

3510 
tok
->
u
.
¥›
.
nŸ
 = (tok->u.prop.not == 0 ? 1 : 0);

3513 
PUNFETCH
;

3520 
OnigCodePoöt
 
c2
;

3522 
PUNFETCH
;

3523 
num
 = 
	`„tch_esˇ≥d_vÆue
(&
p
, 
íd
, 
ív
, &
c2
);

3524 i‡(
num
 < 0) Çum;

3526 i‡(
tok
->
u
.
c
 !
c2
) {

3527 
tok
->
ty≥
 = 
TK_CODE_POINT
;

3528 
tok
->
u
.
code
 = 
c2
;

3531 
p
 = 
tok
->
backp
 + 
	`í˛í
(
íc
,Åok->backp);

3538 
tok
->
u
.
c
 = c;

3539 
tok
->
esˇ≥d
 = 0;

3541 #ifde‡
USE_VARIABLE_META_CHARS


3542 i‡((
c
 !
ONIG_INEFFECTIVE_META_CHAR
) &&

3543 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_VARIABLE_META_CHARACTERS
)) {

3544 i‡(
c
 =
	`MC_ANYCHAR
(
syn
))

3545 
™y_ch¨
;

3546 i‡(
c
 =
	`MC_ANYTIME
(
syn
))

3547 
™ytime
;

3548 i‡(
c
 =
	`MC_ZERO_OR_ONE_TIME
(
syn
))

3549 
zîo_‹_⁄e_time
;

3550 i‡(
c
 =
	`MC_ONE_OR_MORE_TIME
(
syn
))

3551 
⁄e_‹_m‹e_time
;

3552 i‡(
c
 =
	`MC_ANYCHAR_ANYTIME
(
syn
)) {

3553 
tok
->
ty≥
 = 
TK_ANYCHAR_ANYTIME
;

3554 
out
;

3559 
c
) {

3561 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_DOT_ANYCHAR
)) ;

3562 #ifde‡
USE_VARIABLE_META_CHARS


3563 
™y_ch¨
:

3565 
tok
->
ty≥
 = 
TK_ANYCHAR
;

3569 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_ASTERISK_ZERO_INF
)) ;

3570 #ifde‡
USE_VARIABLE_META_CHARS


3571 
™ytime
:

3573 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3574 
tok
->
u
.
ª≥©
.
lowî
 = 0;

3575 
tok
->
u
.
ª≥©
.
uµî
 = 
REPEAT_INFINITE
;

3576 
gªedy_check
;

3580 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_PLUS_ONE_INF
)) ;

3581 #ifde‡
USE_VARIABLE_META_CHARS


3582 
⁄e_‹_m‹e_time
:

3584 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3585 
tok
->
u
.
ª≥©
.
lowî
 = 1;

3586 
tok
->
u
.
ª≥©
.
uµî
 = 
REPEAT_INFINITE
;

3587 
gªedy_check
;

3591 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_QMARK_ZERO_ONE
)) ;

3592 #ifde‡
USE_VARIABLE_META_CHARS


3593 
zîo_‹_⁄e_time
:

3595 
tok
->
ty≥
 = 
TK_OP_REPEAT
;

3596 
tok
->
u
.
ª≥©
.
lowî
 = 0;

3597 
tok
->
u
.
ª≥©
.
uµî
 = 1;

3598 
gªedy_check
;

3602 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_BRACE_INTERVAL
)) ;

3603 
r
 = 
	`„tch_ønge_qu™tifõr
(&
p
, 
íd
, 
tok
, 
ív
);

3604 i‡(
r
 < 0) Ñ;

3605 i‡(
r
 =0Ë
gªedy_check
;

3606 i‡(
r
 == 2) {

3607 i‡(
	`IS_SYNTAX_BV
(
syn
, 
ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY
))

3608 
pos£ssive_check
;

3610 
gªedy_check
;

3616 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_VBAR_ALT
)) ;

3617 
tok
->
ty≥
 = 
TK_ALT
;

3621 i‡(!
PEND
 && 
	`PPEEK_IS
('?') &&

3622 
	`IS_SYNTAX_OP2
(
syn
, 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
)) {

3623 
PINC
;

3624 i‡(!
PEND
 && 
	`PPEEK_IS
('#')) {

3625 
	`PFETCH
(
c
);

3627 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_IN_GROUP
;

3628 
	`PFETCH
(
c
);

3629 i‡(
c
 =
	`MC_ESC
(
syn
)) {

3630 i‡(!
PEND
Ë
	`PFETCH
(
c
);

3633 i‡(
c
 == ')') ;

3636 
°¨t
;

3638 
PUNFETCH
;

3641 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_LPAREN_SUBEXP
)) ;

3642 
tok
->
ty≥
 = 
TK_SUBEXP_OPEN
;

3646 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_LPAREN_SUBEXP
)) ;

3647 
tok
->
ty≥
 = 
TK_SUBEXP_CLOSE
;

3651 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_LINE_ANCHOR
)) ;

3652 
tok
->
ty≥
 = 
TK_ANCHOR
;

3653 
tok
->
u
.
subty≥
 = (
	`IS_SINGLELINE
(
ív
->
›ti⁄
)

3654 ? 
ANCHOR_BEGIN_BUF
 : 
ANCHOR_BEGIN_LINE
);

3658 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_LINE_ANCHOR
)) ;

3659 
tok
->
ty≥
 = 
TK_ANCHOR
;

3660 
tok
->
u
.
subty≥
 = (
	`IS_SINGLELINE
(
ív
->
›ti⁄
)

3661 ? 
ANCHOR_SEMI_END_BUF
 : 
ANCHOR_END_LINE
);

3665 i‡(! 
	`IS_SYNTAX_OP
(
syn
, 
ONIG_SYN_OP_BRACKET_CC
)) ;

3666 
tok
->
ty≥
 = 
TK_CC_OPEN
;

3670 i‡(*
§c
 > 
ív
->
∑âîn
)

3671 
	`CLOSE_BRACKET_WITHOUT_ESC_WARN
(
ív
, (
UCh¨
* )"]");

3675 i‡(
	`IS_EXTEND
(
ív
->
›ti⁄
)) {

3676 !
PEND
) {

3677 
	`PFETCH
(
c
);

3678 i‡(
	`ONIGENC_IS_CODE_NEWLINE
(
íc
, 
c
))

3681 
°¨t
;

3687 i‡(
	`IS_EXTEND
(
ív
->
›ti⁄
))

3688 
°¨t
;

3697 #ifde‡
USE_VARIABLE_META_CHARS


3698 
out
:

3700 *
§c
 = 
p
;

3701  
tok
->
ty≥
;

3702 
	}
}

3705 
	$add_˘y≥_to_cc_by_ønge
(
CCœssNode
* 
cc
, 
˘y≥
 
ARG_UNUSED
, 
nŸ
,

3706 
OnigEncodög
 
íc
 
ARG_UNUSED
,

3707 
OnigCodePoöt
 
sb_out
, c⁄° OnigCodePoöà
mbr
[])

3709 
i
, 
r
;

3710 
OnigCodePoöt
 
j
;

3712 
n
 = 
	`ONIGENC_CODE_RANGE_NUM
(
mbr
);

3714 i‡(
nŸ
 == 0) {

3715 
i
 = 0; i < 
n
; i++) {

3716 
j
 = 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
);

3717 
j
 <
	`ONIGENC_CODE_RANGE_TO
(
mbr
, 
i
); j++) {

3718 i‡(
j
 >
sb_out
) {

3719 i‡(
j
 > 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
)) {

3720 
r
 = 
	`add_code_ønge_to_buf
(&(
cc
->
mbuf
), 
j
,

3721 
	`ONIGENC_CODE_RANGE_TO
(
mbr
, 
i
));

3722 i‡(
r
 != 0) Ñ;

3723 
i
++;

3726 
sb_íd
;

3728 
	`BITSET_SET_BIT
(
cc
->
bs
, 
j
);

3732 
sb_íd
:

3733  ; 
i
 < 
n
; i++) {

3734 
r
 = 
	`add_code_ønge_to_buf
(&(
cc
->
mbuf
),

3735 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
),

3736 
	`ONIGENC_CODE_RANGE_TO
(
mbr
, 
i
));

3737 i‡(
r
 != 0) Ñ;

3741 
OnigCodePoöt
 
¥ev
 = 0;

3743 
i
 = 0; i < 
n
; i++) {

3744 
j
 = 
¥ev
;

3745 
j
 < 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
); j++) {

3746 i‡(
j
 >
sb_out
) {

3747 
sb_íd2
;

3749 
	`BITSET_SET_BIT
(
cc
->
bs
, 
j
);

3751 
¥ev
 = 
	`ONIGENC_CODE_RANGE_TO
(
mbr
, 
i
) + 1;

3753 
j
 = 
¥ev
; j < 
sb_out
; j++) {

3754 
	`BITSET_SET_BIT
(
cc
->
bs
, 
j
);

3757 
sb_íd2
:

3758 
¥ev
 = 
sb_out
;

3760 
i
 = 0; i < 
n
; i++) {

3761 i‡(
¥ev
 < 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
)) {

3762 
r
 = 
	`add_code_ønge_to_buf
(&(
cc
->
mbuf
), 
¥ev
,

3763 
	`ONIGENC_CODE_RANGE_FROM
(
mbr
, 
i
) - 1);

3764 i‡(
r
 != 0) Ñ;

3766 
¥ev
 = 
	`ONIGENC_CODE_RANGE_TO
(
mbr
, 
i
) + 1;

3768 i‡(
¥ev
 < 0x7fffffff) {

3769 
r
 = 
	`add_code_ønge_to_buf
(&(
cc
->
mbuf
), 
¥ev
, 0x7fffffff);

3770 i‡(
r
 != 0) Ñ;

3775 
	}
}

3778 
	$add_˘y≥_to_cc
(
CCœssNode
* 
cc
, 
˘y≥
, 
nŸ
, 
SˇnEnv
* 
ív
)

3780 
c
, 
r
;

3781 c⁄° 
OnigCodePoöt
 *
ønges
;

3782 
OnigCodePoöt
 
sb_out
;

3783 
OnigEncodög
 
íc
 = 
ív
->enc;

3785 
r
 = 
	`ONIGENC_GET_CTYPE_CODE_RANGE
(
íc
, 
˘y≥
, &
sb_out
, &
ønges
);

3786 i‡(
r
 == 0) {

3787  
	`add_˘y≥_to_cc_by_ønge
(
cc
, 
˘y≥
, 
nŸ
, 
ív
->
íc
, 
sb_out
, 
ønges
);

3789 i‡(
r
 !
ONIG_NO_SUPPORT_CONFIG
) {

3790  
r
;

3793 
r
 = 0;

3794 
˘y≥
) {

3795 
ONIGENC_CTYPE_ALPHA
:

3796 
ONIGENC_CTYPE_BLANK
:

3797 
ONIGENC_CTYPE_CNTRL
:

3798 
ONIGENC_CTYPE_DIGIT
:

3799 
ONIGENC_CTYPE_LOWER
:

3800 
ONIGENC_CTYPE_PUNCT
:

3801 
ONIGENC_CTYPE_SPACE
:

3802 
ONIGENC_CTYPE_UPPER
:

3803 
ONIGENC_CTYPE_XDIGIT
:

3804 
ONIGENC_CTYPE_ASCII
:

3805 
ONIGENC_CTYPE_ALNUM
:

3806 i‡(
nŸ
 != 0) {

3807 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3808 i‡(! 
	`ONIGENC_IS_CODE_CTYPE
(
íc
, (
OnigCodePoöt
 )
c
, 
˘y≥
))

3809 
	`BITSET_SET_BIT
(
cc
->
bs
, 
c
);

3811 
	`ADD_ALL_MULTI_BYTE_RANGE
(
íc
, 
cc
->
mbuf
);

3814 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3815 i‡(
	`ONIGENC_IS_CODE_CTYPE
(
íc
, (
OnigCodePoöt
 )
c
, 
˘y≥
))

3816 
	`BITSET_SET_BIT
(
cc
->
bs
, 
c
);

3821 
ONIGENC_CTYPE_GRAPH
:

3822 
ONIGENC_CTYPE_PRINT
:

3823 i‡(
nŸ
 != 0) {

3824 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3825 i‡(! 
	`ONIGENC_IS_CODE_CTYPE
(
íc
, (
OnigCodePoöt
 )
c
, 
˘y≥
))

3826 
	`BITSET_SET_BIT
(
cc
->
bs
, 
c
);

3830 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3831 i‡(
	`ONIGENC_IS_CODE_CTYPE
(
íc
, (
OnigCodePoöt
 )
c
, 
˘y≥
))

3832 
	`BITSET_SET_BIT
(
cc
->
bs
, 
c
);

3834 
	`ADD_ALL_MULTI_BYTE_RANGE
(
íc
, 
cc
->
mbuf
);

3838 
ONIGENC_CTYPE_WORD
:

3839 i‡(
nŸ
 == 0) {

3840 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3841 i‡(
	`IS_CODE_SB_WORD
(
íc
, 
c
)Ë
	`BITSET_SET_BIT
(
cc
->
bs
, c);

3843 
	`ADD_ALL_MULTI_BYTE_RANGE
(
íc
, 
cc
->
mbuf
);

3846 
c
 = 0; c < 
SINGLE_BYTE_SIZE
; c++) {

3847 i‡((
	`ONIGENC_CODE_TO_MBCLEN
(
íc
, 
c
) > 0)

3848 && ! 
	`ONIGENC_IS_CODE_WORD
(
íc
, 
c
))

3849 
	`BITSET_SET_BIT
(
cc
->
bs
, 
c
);

3855  
ONIGERR_PARSER_BUG
;

3859  
r
;

3860 
	}
}

3863 
	$∑r£_posix_bøckë
(
CCœssNode
* 
cc
, 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

3865 
	#POSIX_BRACKET_CHECK_LIMIT_LENGTH
 20

	)

3866 
	#POSIX_BRACKET_NAME_MIN_LEN
 4

	)

3868 
PosixBøckëE¡ryTy≥
 
PBS
[] = {

3869 { (
UCh¨
* )"Ænum", 
ONIGENC_CTYPE_ALNUM
, 5 },

3870 { (
UCh¨
* )"Æpha", 
ONIGENC_CTYPE_ALPHA
, 5 },

3871 { (
UCh¨
* )"bœnk", 
ONIGENC_CTYPE_BLANK
, 5 },

3872 { (
UCh¨
* )"˙ål", 
ONIGENC_CTYPE_CNTRL
, 5 },

3873 { (
UCh¨
* )"digô", 
ONIGENC_CTYPE_DIGIT
, 5 },

3874 { (
UCh¨
* )"gøph", 
ONIGENC_CTYPE_GRAPH
, 5 },

3875 { (
UCh¨
* )"lowî", 
ONIGENC_CTYPE_LOWER
, 5 },

3876 { (
UCh¨
* )"¥öt", 
ONIGENC_CTYPE_PRINT
, 5 },

3877 { (
UCh¨
* )"pun˘", 
ONIGENC_CTYPE_PUNCT
, 5 },

3878 { (
UCh¨
* )"•a˚", 
ONIGENC_CTYPE_SPACE
, 5 },

3879 { (
UCh¨
* )"uµî", 
ONIGENC_CTYPE_UPPER
, 5 },

3880 { (
UCh¨
* )"xdigô", 
ONIGENC_CTYPE_XDIGIT
, 6 },

3881 { (
UCh¨
* )"ascii", 
ONIGENC_CTYPE_ASCII
, 5 },

3882 { (
UCh¨
* )"w‹d", 
ONIGENC_CTYPE_WORD
, 4 },

3883 { (
UCh¨
* )
NULL
, -1, 0 }

3886 
PosixBøckëE¡ryTy≥
 *
pb
;

3887 
nŸ
, 
i
, 
r
;

3888 
OnigCodePoöt
 
c
;

3889 
OnigEncodög
 
íc
 = 
ív
->enc;

3890 
UCh¨
 *
p
 = *
§c
;

3892 i‡(
	`PPEEK_IS
('^')) {

3893 
PINC_S
;

3894 
nŸ
 = 1;

3897 
nŸ
 = 0;

3899 i‡(
	`⁄igíc_°æí
(
íc
, 
p
, 
íd
Ë< 
POSIX_BRACKET_NAME_MIN_LEN
 + 3)

3900 
nŸ_posix_bøckë
;

3902 
pb
 = 
PBS
; 
	`IS_NOT_NULL
’b->
«me
);Öb++) {

3903 i‡(
	`⁄igíc_wôh_ascii_°∫cmp
(
íc
, 
p
, 
íd
, 
pb
->
«me
,Öb->
Àn
) == 0) {

3904 
p
 = (
UCh¨
* )
	`⁄igíc_°ï
(
íc
,Ö, 
íd
, 
pb
->
Àn
);

3905 i‡(
	`⁄igíc_wôh_ascii_°∫cmp
(
íc
, 
p
, 
íd
, (
UCh¨
* )":]", 2) != 0)

3906  
ONIGERR_INVALID_POSIX_BRACKET_TYPE
;

3908 
r
 = 
	`add_˘y≥_to_cc
(
cc
, 
pb
->
˘y≥
, 
nŸ
, 
ív
);

3909 i‡(
r
 != 0) Ñ;

3911 
PINC_S
; PINC_S;

3912 *
§c
 = 
p
;

3917 
nŸ_posix_bøckë
:

3918 
c
 = 0;

3919 
i
 = 0;

3920 !
PEND
 && ((
c
 = 
PPEEK
) != ':') && c != ']') {

3921 
PINC_S
;

3922 i‡(++
i
 > 
POSIX_BRACKET_CHECK_LIMIT_LENGTH
) ;

3924 i‡(
c
 =':' && ! 
PEND
) {

3925 
PINC_S
;

3926 i‡(! 
PEND
) {

3927 
	`PFETCH_S
(
c
);

3928 i‡(
c
 == ']')

3929  
ONIGERR_INVALID_POSIX_BRACKET_TYPE
;

3934 
	}
}

3937 
	$„tch_ch¨_¥›îty_to_˘y≥
(
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

3939 
r
;

3940 
OnigCodePoöt
 
c
;

3941 
OnigEncodög
 
íc
 = 
ív
->enc;

3942 
UCh¨
 *
¥ev
, *
°¨t
, *
p
 = *
§c
;

3944 
r
 = 0;

3945 
°¨t
 = 
¥ev
 = 
p
;

3947 !
PEND
) {

3948 
¥ev
 = 
p
;

3949 
	`PFETCH_S
(
c
);

3950 i‡(
c
 == '}') {

3951 
r
 = 
	`ONIGENC_PROPERTY_NAME_TO_CTYPE
(
íc
, 
°¨t
, 
¥ev
);

3952 i‡(
r
 < 0) ;

3954 *
§c
 = 
p
;

3955  
r
;

3957 i‡(
c
 == '(' || c == ')' || c == '{' || c == '|') {

3958 
r
 = 
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

3963 
	`⁄ig_sˇn_ív_£t_îr‹_°rög
(
ív
, 
r
, *
§c
, 
¥ev
);

3964  
r
;

3965 
	}
}

3968 
	$∑r£_ch¨_¥›îty
(
Node
** 
≈
, 
OnigTokí
* 
tok
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

3969 
SˇnEnv
* 
ív
)

3971 
r
, 
˘y≥
;

3972 
CCœssNode
* 
cc
;

3974 
˘y≥
 = 
	`„tch_ch¨_¥›îty_to_˘y≥
(
§c
, 
íd
, 
ív
);

3975 i‡(
˘y≥
 < 0)  ctype;

3977 *
≈
 = 
	`node_√w_c˛ass
();

3978 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

3979 
cc
 = 
	`NCCLASS
(*
≈
);

3980 
r
 = 
	`add_˘y≥_to_cc
(
cc
, 
˘y≥
, 0, 
ív
);

3981 i‡(
r
 != 0) Ñ;

3982 i‡(
tok
->
u
.
¥›
.
nŸ
 !0Ë
	`NCCLASS_SET_NOT
(
cc
);

3985 
	}
}

3988 
	eCCSTATE
 {

3989 
	mCCS_VALUE
,

3990 
	mCCS_RANGE
,

3991 
	mCCS_COMPLETE
,

3992 
	mCCS_START


3995 
	eCCVALTYPE
 {

3996 
	mCCV_SB
,

3997 
	mCCV_CODE_POINT
,

3998 
	mCCV_CLASS


4002 
	$√xt_°©e_˛ass
(
CCœssNode
* 
cc
, 
OnigCodePoöt
* 
vs
, 
CCVALTYPE
* 
ty≥
,

4003 
CCSTATE
* 
°©e
, 
SˇnEnv
* 
ív
)

4005 
r
;

4007 i‡(*
°©e
 =
CCS_RANGE
)

4008  
ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE
;

4010 i‡(*
°©e
 =
CCS_VALUE
 && *
ty≥
 !
CCV_CLASS
) {

4011 i‡(*
ty≥
 =
CCV_SB
)

4012 
	`BITSET_SET_BIT
(
cc
->
bs
, ()(*
vs
));

4013 i‡(*
ty≥
 =
CCV_CODE_POINT
) {

4014 
r
 = 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, *
vs
, *vs);

4015 i‡(
r
 < 0) Ñ;

4019 *
°©e
 = 
CCS_VALUE
;

4020 *
ty≥
 = 
CCV_CLASS
;

4022 
	}
}

4025 
	$√xt_°©e_vÆ
(
CCœssNode
* 
cc
, 
OnigCodePoöt
 *
vs
, OnigCodePoöà
v
,

4026 * 
vs_i§aw
, 
v_i§aw
,

4027 
CCVALTYPE
 
öty≥
, CCVALTYPE* 
ty≥
,

4028 
CCSTATE
* 
°©e
, 
SˇnEnv
* 
ív
)

4030 
r
;

4032 *
°©e
) {

4033 
CCS_VALUE
:

4034 i‡(*
ty≥
 =
CCV_SB
) {

4035 
	`BITSET_SET_BIT
(
cc
->
bs
, ()(*
vs
));

4037 i‡(*
ty≥
 =
CCV_CODE_POINT
) {

4038 
r
 = 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, *
vs
, *vs);

4039 i‡(
r
 < 0) Ñ;

4043 
CCS_RANGE
:

4044 i‡(
öty≥
 =*
ty≥
) {

4045 i‡(
öty≥
 =
CCV_SB
) {

4046 i‡(*
vs
 > 0xf‡|| 
v
 > 0xff)

4047  
ONIGERR_INVALID_CODE_POINT_VALUE
;

4049 i‡(*
vs
 > 
v
) {

4050 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC
))

4051 
ccs_ønge_íd
;

4053  
ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
;

4055 
	`bô£t_£t_ønge
(
cc
->
bs
, ()*
vs
, ()
v
);

4058 
r
 = 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, *
vs
, 
v
);

4059 i‡(
r
 < 0) Ñ;

4064 i‡(
öty≥
 =
CCV_CODE_POINT
 && *
ty≥
 =
CCV_SB
) {

4066 i‡(*
vs
 > 
v
) {

4067 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC
))

4068 
ccs_ønge_íd
;

4070  
ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
;

4072 
	`bô£t_£t_ønge
(
cc
->
bs
, ()*
vs
, ()(
v
 < 0xff ? v : 0xff));

4073 
r
 = 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, (
OnigCodePoöt
 )*
vs
, 
v
);

4074 i‡(
r
 < 0) Ñ;

4078  
ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE
;

4081 
ccs_ønge_íd
:

4082 *
°©e
 = 
CCS_COMPLETE
;

4085 
CCS_COMPLETE
:

4086 
CCS_START
:

4087 *
°©e
 = 
CCS_VALUE
;

4094 *
vs_i§aw
 = 
v_i§aw
;

4095 *
vs
 = 
v
;

4096 *
ty≥
 = 
öty≥
;

4098 
	}
}

4101 
	$code_exi°_check
(
OnigCodePoöt
 
c
, 
UCh¨
* 
‰om
, UCh¨* 
íd
, 
ign‹e_esˇ≥d
,

4102 
SˇnEnv
* 
ív
)

4104 
ö_esc
;

4105 
OnigCodePoöt
 
code
;

4106 
OnigEncodög
 
íc
 = 
ív
->enc;

4107 
UCh¨
* 
p
 = 
‰om
;

4109 
ö_esc
 = 0;

4110 ! 
PEND
) {

4111 i‡(
ign‹e_esˇ≥d
 && 
ö_esc
) {

4112 
ö_esc
 = 0;

4115 
	`PFETCH_S
(
code
);

4116 i‡(
code
 =
c
)  1;

4117 i‡(
code
 =
	`MC_ESC
(
ív
->
sy¡ax
)Ë
ö_esc
 = 1;

4121 
	}
}

4124 
	$∑r£_ch¨_˛ass
(
Node
** 
≈
, 
OnigTokí
* 
tok
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

4125 
SˇnEnv
* 
ív
)

4127 
r
, 
√g
, 
Àn
, 
„tched
, 
™d_°¨t
;

4128 
OnigCodePoöt
 
v
, 
vs
;

4129 
UCh¨
 *
p
;

4130 
Node
* 
node
;

4131 
CCœssNode
 *
cc
, *
¥ev_cc
;

4132 
CCœssNode
 
w‹k_cc
;

4134 
CCSTATE
 
°©e
;

4135 
CCVALTYPE
 
vÆ_ty≥
, 
ö_ty≥
;

4136 
vÆ_i§aw
, 
ö_i§aw
;

4138 *
≈
 = 
NULL_NODE
;

4139 
ív
->
∑r£_dïth
++;

4140 i‡(
ív
->
∑r£_dïth
 > 
P¨£DïthLimô
)

4141  
ONIGERR_PARSE_DEPTH_LIMIT_OVER
;

4142 
¥ev_cc
 = (
CCœssNode
* )
NULL
;

4143 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, 
§c
, 
íd
, 
ív
);

4144 i‡(
r
 =
TK_CHAR
 && 
tok
->
u
.
c
 ='^' &&Åok->
esˇ≥d
 == 0) {

4145 
√g
 = 1;

4146 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, 
§c
, 
íd
, 
ív
);

4149 
√g
 = 0;

4152 i‡(
r
 < 0) Ñ;

4153 i‡(
r
 =
TK_CC_CLOSE
) {

4154 i‡(! 
	`code_exi°_check
((
OnigCodePoöt
 )']',

4155 *
§c
, 
ív
->
∑âîn_íd
, 1,Énv))

4156  
ONIGERR_EMPTY_CHAR_CLASS
;

4158 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"]");

4159 
r
 = 
tok
->
ty≥
 = 
TK_CHAR
;

4162 *
≈
 = 
node
 = 
	`node_√w_c˛ass
();

4163 
	`CHECK_NULL_RETURN_MEMERR
(
node
);

4164 
cc
 = 
	`NCCLASS
(
node
);

4166 
™d_°¨t
 = 0;

4167 
°©e
 = 
CCS_START
;

4168 
p
 = *
§c
;

4169 
r
 !
TK_CC_CLOSE
) {

4170 
„tched
 = 0;

4171 
r
) {

4172 
TK_CHAR
:

4173 
™y_ch¨_ö
:

4174 
Àn
 = 
	`ONIGENC_CODE_TO_MBCLEN
(
ív
->
íc
, 
tok
->
u
.
c
);

4175 i‡(
Àn
 > 1) {

4176 
ö_ty≥
 = 
CCV_CODE_POINT
;

4178 i‡(
Àn
 < 0) {

4179 
r
 = 
Àn
;

4180 
îr
;

4184 
ö_ty≥
 = 
CCV_SB
;

4186 
v
 = (
OnigCodePoöt
 )
tok
->
u
.
c
;

4187 
ö_i§aw
 = 0;

4188 
vÆ_íåy2
;

4191 
TK_RAW_BYTE
:

4193 i‡(! 
	`ONIGENC_IS_SINGLEBYTE
(
ív
->
íc
Ë&& 
tok
->
ba£
 != 0) {

4194 
UCh¨
 
buf
[
ONIGENC_CODE_TO_MBC_MAXLEN
];

4195 
UCh¨
* 
bu„
 = 
buf
 + 
ONIGENC_CODE_TO_MBC_MAXLEN
;

4196 
UCh¨
* 
pßve
 = 
p
;

4197 
i
, 
ba£
 = 
tok
->base;

4199 
buf
[0] = 
tok
->
u
.
c
;

4200 
i
 = 1; i < 
	`ONIGENC_MBC_MAXLEN
(
ív
->
íc
); i++) {

4201 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4202 i‡(
r
 < 0Ë
îr
;

4203 i‡(
r
 !
TK_RAW_BYTE
 || 
tok
->
ba£
 != base) {

4204 
„tched
 = 1;

4207 
buf
[
i
] = 
tok
->
u
.
c
;

4210 i‡(
i
 < 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
)) {

4211 
r
 = 
ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
;

4212 
îr
;

4215 
Àn
 = 
	`í˛í
(
ív
->
íc
, 
buf
);

4216 i‡(
i
 < 
Àn
) {

4217 
r
 = 
ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
;

4218 
îr
;

4220 i‡(
i
 > 
Àn
) {

4221 
p
 = 
pßve
;

4222 
i
 = 1; i < 
Àn
; i++) {

4223 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4225 
„tched
 = 0;

4228 i‡(
i
 == 1) {

4229 
v
 = (
OnigCodePoöt
 )
buf
[0];

4230 
øw_sögÀ
;

4233 
v
 = 
	`ONIGENC_MBC_TO_CODE
(
ív
->
íc
, 
buf
, 
bu„
);

4234 
ö_ty≥
 = 
CCV_CODE_POINT
;

4238 
v
 = (
OnigCodePoöt
 )
tok
->
u
.
c
;

4239 
øw_sögÀ
:

4240 
ö_ty≥
 = 
CCV_SB
;

4242 
ö_i§aw
 = 1;

4243 
vÆ_íåy2
;

4246 
TK_CODE_POINT
:

4247 
v
 = 
tok
->
u
.
code
;

4248 
ö_i§aw
 = 1;

4249 
vÆ_íåy
:

4250 
Àn
 = 
	`ONIGENC_CODE_TO_MBCLEN
(
ív
->
íc
, 
v
);

4251 i‡(
Àn
 < 0) {

4252 
r
 = 
Àn
;

4253 
îr
;

4255 
ö_ty≥
 = (
Àn
 =1 ? 
CCV_SB
 : 
CCV_CODE_POINT
);

4256 
vÆ_íåy2
:

4257 
r
 = 
	`√xt_°©e_vÆ
(
cc
, &
vs
, 
v
, &
vÆ_i§aw
, 
ö_i§aw
, 
ö_ty≥
, &
vÆ_ty≥
,

4258 &
°©e
, 
ív
);

4259 i‡(
r
 !0Ë
îr
;

4262 
TK_POSIX_BRACKET_OPEN
:

4263 
r
 = 
	`∑r£_posix_bøckë
(
cc
, &
p
, 
íd
, 
ív
);

4264 i‡(
r
 < 0Ë
îr
;

4265 i‡(
r
 == 1) {

4266 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"[");

4267 
p
 = 
tok
->
backp
;

4268 
v
 = (
OnigCodePoöt
 )
tok
->
u
.
c
;

4269 
ö_i§aw
 = 0;

4270 
vÆ_íåy
;

4272 
√xt_˛ass
;

4275 
TK_CHAR_TYPE
:

4276 
r
 = 
	`add_˘y≥_to_cc
(
cc
, 
tok
->
u
.
¥›
.
˘y≥
,Åok->u.¥›.
nŸ
, 
ív
);

4277 i‡(
r
 != 0) Ñ;

4279 
√xt_˛ass
:

4280 
r
 = 
	`√xt_°©e_˛ass
(
cc
, &
vs
, &
vÆ_ty≥
, &
°©e
, 
ív
);

4281 i‡(
r
 !0Ë
îr
;

4284 
TK_CHAR_PROPERTY
:

4286 
˘y≥
;

4288 
˘y≥
 = 
	`„tch_ch¨_¥›îty_to_˘y≥
(&
p
, 
íd
, 
ív
);

4289 i‡(
˘y≥
 < 0)  ctype;

4290 
r
 = 
	`add_˘y≥_to_cc
(
cc
, 
˘y≥
, 
tok
->
u
.
¥›
.
nŸ
, 
ív
);

4291 i‡(
r
 != 0) Ñ;

4292 
√xt_˛ass
;

4296 
TK_CC_RANGE
:

4297 i‡(
°©e
 =
CCS_VALUE
) {

4298 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4299 i‡(
r
 < 0Ë
îr
;

4300 
„tched
 = 1;

4301 i‡(
r
 =
TK_CC_CLOSE
) {

4302 
ønge_íd_vÆ
:

4303 
v
 = (
OnigCodePoöt
 )'-';

4304 
ö_i§aw
 = 0;

4305 
vÆ_íåy
;

4307 i‡(
r
 =
TK_CC_AND
) {

4308 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"-");

4309 
ønge_íd_vÆ
;

4311 
°©e
 = 
CCS_RANGE
;

4313 i‡(
°©e
 =
CCS_START
) {

4315 
v
 = (
OnigCodePoöt
 )
tok
->
u
.
c
;

4316 
ö_i§aw
 = 0;

4318 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4319 i‡(
r
 < 0Ë
îr
;

4320 
„tched
 = 1;

4322 i‡(
r
 =
TK_CC_RANGE
 || 
™d_°¨t
 != 0)

4323 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"-");

4325 
vÆ_íåy
;

4327 i‡(
°©e
 =
CCS_RANGE
) {

4328 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"-");

4329 
™y_ch¨_ö
;

4332 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4333 i‡(
r
 < 0Ë
îr
;

4334 
„tched
 = 1;

4335 i‡(
r
 =
TK_CC_CLOSE
Ë
ønge_íd_vÆ
;

4336 i‡(
r
 =
TK_CC_AND
) {

4337 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"-");

4338 
ønge_íd_vÆ
;

4341 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC
)) {

4342 
	`CC_ESC_WARN
(
ív
, (
UCh¨
* )"-");

4343 
ønge_íd_vÆ
;

4345 
r
 = 
ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS
;

4346 
îr
;

4350 
TK_CC_CC_OPEN
:

4352 
Node
 *
™ode
;

4353 
CCœssNode
* 
acc
;

4355 
r
 = 
	`∑r£_ch¨_˛ass
(&
™ode
, 
tok
, &
p
, 
íd
, 
ív
);

4356 i‡(
r
 != 0) {

4357 
	`⁄ig_node_‰ì
(
™ode
);

4358 
cc_›í_îr
;

4360 
acc
 = 
	`NCCLASS
(
™ode
);

4361 
r
 = 
	`‹_c˛ass
(
cc
, 
acc
, 
ív
->
íc
);

4363 
	`⁄ig_node_‰ì
(
™ode
);

4364 
cc_›í_îr
:

4365 i‡(
r
 !0Ë
îr
;

4369 
TK_CC_AND
:

4371 i‡(
°©e
 =
CCS_VALUE
) {

4372 
r
 = 
	`√xt_°©e_vÆ
(
cc
, &
vs
, 0, &
vÆ_i§aw
, 0, 
vÆ_ty≥
,

4373 &
vÆ_ty≥
, &
°©e
, 
ív
);

4374 i‡(
r
 !0Ë
îr
;

4377 
™d_°¨t
 = 1;

4378 
°©e
 = 
CCS_START
;

4380 i‡(
	`IS_NOT_NULL
(
¥ev_cc
)) {

4381 
r
 = 
	`™d_c˛ass
(
¥ev_cc
, 
cc
, 
ív
->
íc
);

4382 i‡(
r
 !0Ë
îr
;

4383 
	`bbuf_‰ì
(
cc
->
mbuf
);

4386 
¥ev_cc
 = 
cc
;

4387 
cc
 = &
w‹k_cc
;

4389 
	`öôülize_c˛ass
(
cc
);

4393 
TK_EOT
:

4394 
r
 = 
ONIGERR_PREMATURE_END_OF_CHAR_CLASS
;

4395 
îr
;

4398 
r
 = 
ONIGERR_PARSER_BUG
;

4399 
îr
;

4403 i‡(
„tched
)

4404 
r
 = 
tok
->
ty≥
;

4406 
r
 = 
	`„tch_tokí_ö_cc
(
tok
, &
p
, 
íd
, 
ív
);

4407 i‡(
r
 < 0Ë
îr
;

4411 i‡(
°©e
 =
CCS_VALUE
) {

4412 
r
 = 
	`√xt_°©e_vÆ
(
cc
, &
vs
, 0, &
vÆ_i§aw
, 0, 
vÆ_ty≥
,

4413 &
vÆ_ty≥
, &
°©e
, 
ív
);

4414 i‡(
r
 !0Ë
îr
;

4417 i‡(
	`IS_NOT_NULL
(
¥ev_cc
)) {

4418 
r
 = 
	`™d_c˛ass
(
¥ev_cc
, 
cc
, 
ív
->
íc
);

4419 i‡(
r
 !0Ë
îr
;

4420 
	`bbuf_‰ì
(
cc
->
mbuf
);

4421 
cc
 = 
¥ev_cc
;

4424 i‡(
√g
 != 0)

4425 
	`NCCLASS_SET_NOT
(
cc
);

4427 
	`NCCLASS_CLEAR_NOT
(
cc
);

4428 i‡(
	`IS_NCCLASS_NOT
(
cc
) &&

4429 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC
)) {

4430 
is_em±y
;

4432 
is_em±y
 = (
	`IS_NULL
(
cc
->
mbuf
) ? 1 : 0);

4433 i‡(
is_em±y
 != 0)

4434 
	`BITSET_IS_EMPTY
(
cc
->
bs
, 
is_em±y
);

4436 i‡(
is_em±y
 == 0) {

4437 
	#NEWLINE_CODE
 0x0a

	)

4439 i‡(
	`ONIGENC_IS_CODE_NEWLINE
(
ív
->
íc
, 
NEWLINE_CODE
)) {

4440 i‡(
	`ONIGENC_CODE_TO_MBCLEN
(
ív
->
íc
, 
NEWLINE_CODE
) == 1)

4441 
	`BITSET_SET_BIT
(
cc
->
bs
, 
NEWLINE_CODE
);

4443 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, 
NEWLINE_CODE
, NEWLINE_CODE);

4447 *
§c
 = 
p
;

4448 
ív
->
∑r£_dïth
--;

4451 
îr
:

4452 i‡(
cc
 !
	`NCCLASS
(*
≈
))

4453 
	`bbuf_‰ì
(
cc
->
mbuf
);

4454  
r
;

4455 
	}
}

4457 
∑r£_subexp
(
Node
** 
t›
, 
OnigTokí
* 
tok
, 
ãrm
,

4458 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
);

4461 
	$∑r£_í˛o£
(
Node
** 
≈
, 
OnigTokí
* 
tok
, 
ãrm
, 
UCh¨
** 
§c
, UCh¨* 
íd
,

4462 
SˇnEnv
* 
ív
)

4464 
r
, 
num
;

4465 
Node
 *
èrgë
;

4466 
OnigO±i⁄Ty≥
 
›ti⁄
;

4467 
OnigCodePoöt
 
c
;

4468 
OnigEncodög
 
íc
 = 
ív
->enc;

4470 #ifde‡
USE_NAMED_GROUP


4471 
li°_ˇ±uª
;

4474 
UCh¨
* 
p
 = *
§c
;

4475 
PFETCH_READY
;

4477 *
≈
 = 
NULL
;

4478 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
;

4480 
›ti⁄
 = 
ív
->option;

4481 i‡(
	`PPEEK_IS
('?') &&

4482 
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
)) {

4483 
PINC
;

4484 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_IN_GROUP
;

4486 
	`PFETCH
(
c
);

4487 
c
) {

4489 
group
:

4490 
r
 = 
	`„tch_tokí
(
tok
, &
p
, 
íd
, 
ív
);

4491 i‡(
r
 < 0) Ñ;

4492 
r
 = 
	`∑r£_subexp
(
≈
, 
tok
, 
ãrm
, &
p
, 
íd
, 
ív
);

4493 i‡(
r
 < 0) Ñ;

4494 *
§c
 = 
p
;

4499 *
≈
 = 
	`⁄ig_node_√w_™ch‹
(
ANCHOR_PREC_READ
);

4502 *
≈
 = 
	`⁄ig_node_√w_™ch‹
(
ANCHOR_PREC_READ_NOT
);

4505 *
≈
 = 
	`node_√w_í˛o£
(
ENCLOSE_STOP_BACKTRACK
);

4508 #ifde‡
USE_NAMED_GROUP


4510 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
)) {

4511 
«med_group1
;

4514  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4519 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
;

4520 
	`PFETCH
(
c
);

4521 i‡(
c
 == '=')

4522 *
≈
 = 
	`⁄ig_node_√w_™ch‹
(
ANCHOR_LOOK_BEHIND
);

4523 i‡(
c
 == '!')

4524 *
≈
 = 
	`⁄ig_node_√w_™ch‹
(
ANCHOR_LOOK_BEHIND_NOT
);

4525 #ifde‡
USE_NAMED_GROUP


4527 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
)) {

4528 
UCh¨
 *
«me
;

4529 
UCh¨
 *
«me_íd
;

4531 
PUNFETCH
;

4532 
c
 = '<';

4534 
«med_group1
:

4535 
li°_ˇ±uª
 = 0;

4537 
«med_group2
:

4538 
«me
 = 
p
;

4539 
r
 = 
	`„tch_«me
((
OnigCodePoöt
 )
c
, &
p
, 
íd
, &
«me_íd
, 
ív
, &
num
, 0);

4540 i‡(
r
 < 0) Ñ;

4542 
num
 = 
	`sˇn_ív_add_mem_íåy
(
ív
);

4543 i‡(
num
 < 0) Çum;

4544 i‡(
li°_ˇ±uª
 !0 && 
num
 >()
BIT_STATUS_BITS_NUM
)

4545  
ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY
;

4547 
r
 = 
	`«me_add
(
ív
->
ªg
, 
«me
, 
«me_íd
, 
num
,Énv);

4548 i‡(
r
 != 0) Ñ;

4549 *
≈
 = 
	`node_√w_í˛o£_mem‹y
(
ív
->
›ti⁄
, 1);

4550 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4551 
	`NENCLOSE
(*
≈
)->
ªgnum
 = 
num
;

4552 i‡(
li°_ˇ±uª
 != 0)

4553 
	`BIT_STATUS_ON_AT_SIMPLE
(
ív
->
ˇ±uª_hi°‹y
, 
num
);

4554 
ív
->
num_«med
++;

4557  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4562  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4568 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY
)) {

4569 #ifde‡
USE_NAMED_GROUP


4570 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
)) {

4571 
	`PFETCH
(
c
);

4572 i‡(
c
 == '<' || c == '\'') {

4573 
li°_ˇ±uª
 = 1;

4574 
«med_group2
;

4576 
PUNFETCH
;

4579 *
≈
 = 
	`node_√w_í˛o£_mem‹y
(
ív
->
›ti⁄
, 0);

4580 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4581 
num
 = 
	`sˇn_ív_add_mem_íåy
(
ív
);

4582 i‡(
num
 < 0) {

4583  
num
;

4585 i‡(
num
 >()
BIT_STATUS_BITS_NUM
) {

4586  
ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY
;

4588 
	`NENCLOSE
(*
≈
)->
ªgnum
 = 
num
;

4589 
	`BIT_STATUS_ON_AT_SIMPLE
(
ív
->
ˇ±uª_hi°‹y
, 
num
);

4592  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4596 #ifde‡
USE_POSIXLINE_OPTION


4601 
√g
 = 0;

4604 
c
) {

4609 '-': 
√g
 = 1; ;

4610 'x': 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_EXTEND
, 
√g
); ;

4611 'i': 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_IGNORECASE
, 
√g
); ;

4613 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_OPTION_PERL
)) {

4614 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_MULTILINE
, 
√g
);

4617  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4621 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_OPTION_PERL
)) {

4622 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_SINGLELINE
, (
√g
 == 0 ? 1 : 0));

4624 i‡(
	`IS_SYNTAX_OP2
(
ív
->
sy¡ax
, 
ONIG_SYN_OP2_OPTION_RUBY
)) {

4625 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_MULTILINE
, 
√g
);

4628  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4630 #ifde‡
USE_POSIXLINE_OPTION


4632 
	`ONOFF
(
›ti⁄
, 
ONIG_OPTION_MULTILINE
|
ONIG_OPTION_SINGLELINE
, 
√g
);

4636  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4639 i‡(
c
 == ')') {

4640 *
≈
 = 
	`node_√w_›ti⁄
(
›ti⁄
);

4641 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4642 *
§c
 = 
p
;

4645 i‡(
c
 == ':') {

4646 
OnigO±i⁄Ty≥
 
¥ev
 = 
ív
->
›ti⁄
;

4648 
ív
->
›ti⁄
 = option;

4649 
r
 = 
	`„tch_tokí
(
tok
, &
p
, 
íd
, 
ív
);

4650 i‡(
r
 < 0) Ñ;

4651 
r
 = 
	`∑r£_subexp
(&
èrgë
, 
tok
, 
ãrm
, &
p
, 
íd
, 
ív
);

4652 
ív
->
›ti⁄
 = 
¥ev
;

4653 i‡(
r
 < 0) {

4654 
	`⁄ig_node_‰ì
(
èrgë
);

4655  
r
;

4657 *
≈
 = 
	`node_√w_›ti⁄
(
›ti⁄
);

4658 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4659 
	`NENCLOSE
(*
≈
)->
èrgë
 =Åarget;

4660 *
§c
 = 
p
;

4664 i‡(
PEND
Ë 
ONIGERR_END_PATTERN_IN_GROUP
;

4665 
	`PFETCH
(
c
);

4671  
ONIGERR_UNDEFINED_GROUP_OPTION
;

4675 i‡(
	`ONIG_IS_OPTION_ON
(
ív
->
›ti⁄
, 
ONIG_OPTION_DONT_CAPTURE_GROUP
))

4676 
group
;

4678 *
≈
 = 
	`node_√w_í˛o£_mem‹y
(
ív
->
›ti⁄
, 0);

4679 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4680 
num
 = 
	`sˇn_ív_add_mem_íåy
(
ív
);

4681 i‡(
num
 < 0) Çum;

4682 
	`NENCLOSE
(*
≈
)->
ªgnum
 = 
num
;

4685 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4686 
r
 = 
	`„tch_tokí
(
tok
, &
p
, 
íd
, 
ív
);

4687 i‡(
r
 < 0) Ñ;

4688 
r
 = 
	`∑r£_subexp
(&
èrgë
, 
tok
, 
ãrm
, &
p
, 
íd
, 
ív
);

4689 i‡(
r
 < 0) {

4690 
	`⁄ig_node_‰ì
(
èrgë
);

4691  
r
;

4694 i‡(
	`NTYPE
(*
≈
Ë=
NT_ANCHOR
)

4695 
	`NANCHOR
(*
≈
)->
èrgë
 =Åarget;

4697 
	`NENCLOSE
(*
≈
)->
èrgë
 =Åarget;

4698 i‡(
	`NENCLOSE
(*
≈
)->
ty≥
 =
ENCLOSE_MEMORY
) {

4700 
r
 = 
	`sˇn_ív_£t_mem_node
(
ív
, 
	`NENCLOSE
(*
≈
)->
ªgnum
, *np);

4701 i‡(
r
 != 0) Ñ;

4705 *
§c
 = 
p
;

4707 
	}
}

4709 c⁄° * 
	gP›uœrQSå
[] = {

4713 c⁄° * 
	gRedu˚QSå
[] = {

4718 
	$£t_qu™tifõr
(
Node
* 
qnode
, Node* 
èrgë
, 
group
, 
SˇnEnv
* 
ív
)

4720 
Qt‰Node
* 
qn
;

4722 
qn
 = 
	`NQTFR
(
qnode
);

4723 i‡(
qn
->
lowî
 =1 && qn->
uµî
 == 1) {

4727 
	`NTYPE
(
èrgë
)) {

4728 
NT_STR
:

4729 i‡(! 
group
) {

4730 
SåNode
* 
¢
 = 
	`NSTR
(
èrgë
);

4731 i‡(
	`°r_node_ˇn_be_•lô
(
¢
, 
ív
->
íc
)) {

4732 
Node
* 
n
 = 
	`°r_node_•lô_œ°_ch¨
(
¢
, 
ív
->
íc
);

4733 i‡(
	`IS_NOT_NULL
(
n
)) {

4734 
qn
->
èrgë
 = 
n
;

4741 
NT_QTFR
:

4744 
Qt‰Node
* 
q¡
 = 
	`NQTFR
(
èrgë
);

4745 
√°q_num
 = 
	`p›uœr_qu™tifõr_num
(
qn
);

4746 
èrgëq_num
 = 
	`p›uœr_qu™tifõr_num
(
q¡
);

4748 #ifde‡
USE_WARNING_REDUNDANT_NESTED_REPEAT_OPERATOR


4749 i‡(!
	`IS_QUANTIFIER_BY_NUMBER
(
qn
Ë&& !IS_QUANTIFIER_BY_NUMBER(
q¡
) &&

4750 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT
)) {

4751 
UCh¨
 
buf
[
WARN_BUFSIZE
];

4753 
Redu˚Ty≥TabÀ
[
èrgëq_num
][
√°q_num
]) {

4754 
RQ_ASIS
:

4757 
RQ_DEL
:

4758 i‡(
⁄ig_vîb_w¨n
 !
⁄ig_nuŒ_w¨n
) {

4759 
	`⁄ig_¢¥ötf_wôh_∑âîn
(
buf
, 
WARN_BUFSIZE
, 
ív
->
íc
,

4760 
ív
->
∑âîn
,Énv->
∑âîn_íd
,

4761 (
UCh¨
* )"redundantÇestedÑepeat operator");

4762 (*
⁄ig_vîb_w¨n
)((* )
buf
);

4764 
w¨n_exô
;

4768 i‡(
⁄ig_vîb_w¨n
 !
⁄ig_nuŒ_w¨n
) {

4769 
	`⁄ig_¢¥ötf_wôh_∑âîn
(
buf
, 
WARN_BUFSIZE
, 
ív
->
íc
,

4770 
ív
->
∑âîn
,Énv->
∑âîn_íd
,

4771 (
UCh¨
* )"nestedÑepeat operator %sánd %s wasÑeplaced with '%s'",

4772 
P›uœrQSå
[
èrgëq_num
], P›uœrQSå[
√°q_num
],

4773 
Redu˚QSå
[
Redu˚Ty≥TabÀ
[
èrgëq_num
][
√°q_num
]]);

4774 (*
⁄ig_vîb_w¨n
)((* )
buf
);

4776 
w¨n_exô
;

4781 
w¨n_exô
:

4783 i‡(
èrgëq_num
 >= 0) {

4784 i‡(
√°q_num
 >= 0) {

4785 
	`⁄ig_ªdu˚_√°ed_qu™tifõr
(
qnode
, 
èrgë
);

4786 
q_exô
;

4788 i‡(
èrgëq_num
 == 1 ||Åargetq_num == 2) {

4790 i‡(! 
	`IS_REPEAT_INFINITE
(
qn
->
uµî
Ë&& qn->uµî > 1 && qn->
gªedy
) {

4791 
qn
->
uµî
 = (qn->
lowî
 == 0 ? 1 : qn->lower);

4802 
qn
->
èrgë
 =Åarget;

4803 
q_exô
:

4805 
	}
}

4808 #i‚de‡
CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS


4810 
	$˛ór_nŸ_Êag_c˛ass
(
CCœssNode
* 
cc
, 
OnigEncodög
 
íc
)

4812 
BBuf
 *
tbuf
;

4813 
r
;

4815 i‡(
	`IS_NCCLASS_NOT
(
cc
)) {

4816 
	`bô£t_övît
(
cc
->
bs
);

4818 i‡(! 
	`ONIGENC_IS_SINGLEBYTE
(
íc
)) {

4819 
r
 = 
	`nŸ_code_ønge_buf
(
íc
, 
cc
->
mbuf
, &
tbuf
);

4820 i‡(
r
 != 0) Ñ;

4822 
	`bbuf_‰ì
(
cc
->
mbuf
);

4823 
cc
->
mbuf
 = 
tbuf
;

4826 
	`NCCLASS_CLEAR_NOT
(
cc
);

4830 
	}
}

4834 
SˇnEnv
* 
	mív
;

4835 
CCœssNode
* 
	mcc
;

4836 
Node
* 
	mÆt_roŸ
;

4837 
Node
** 
	m±aû
;

4838 } 
	tIAµlyCa£FﬁdArg
;

4841 
	$i_≠∂y_ˇ£_fﬁd
(
OnigCodePoöt
 
‰om
, OnigCodePoöà
to
[],

4842 
to_Àn
, * 
¨g
)

4844 
IAµlyCa£FﬁdArg
* 
ürg
;

4845 
SˇnEnv
* 
ív
;

4846 
CCœssNode
* 
cc
;

4847 
BôSëRef
 
bs
;

4849 
ürg
 = (
IAµlyCa£FﬁdArg
* )
¨g
;

4850 
ív
 = 
ürg
->env;

4851 
cc
 = 
ürg
->cc;

4852 
bs
 = 
cc
->bs;

4854 i‡(
to_Àn
 == 1) {

4855 
is_ö
 = 
	`⁄ig_is_code_ö_cc
(
ív
->
íc
, 
‰om
, 
cc
);

4856 #ifde‡
CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS


4857 i‡((
is_ö
 !0 && !
	`IS_NCCLASS_NOT
(
cc
)) ||

4858 (
is_ö
 =0 && 
	`IS_NCCLASS_NOT
(
cc
))) {

4859 i‡(
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
Ë> 1 || *
to
 >
SINGLE_BYTE_SIZE
) {

4860 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, *
to
, *to);

4863 
	`BITSET_SET_BIT
(
bs
, *
to
);

4867 i‡(
is_ö
 != 0) {

4868 i‡(
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
Ë> 1 || *
to
 >
SINGLE_BYTE_SIZE
) {

4869 i‡(
	`IS_NCCLASS_NOT
(
cc
)Ë
	`˛ór_nŸ_Êag_c˛ass
(cc, 
ív
->
íc
);

4870 
	`add_code_ønge
(&(
cc
->
mbuf
), 
ív
, *
to
, *to);

4873 i‡(
	`IS_NCCLASS_NOT
(
cc
)) {

4874 
	`BITSET_CLEAR_BIT
(
bs
, *
to
);

4877 
	`BITSET_SET_BIT
(
bs
, *
to
);

4883 
r
, 
i
, 
Àn
;

4884 
UCh¨
 
buf
[
ONIGENC_CODE_TO_MBC_MAXLEN
];

4885 
Node
 *
¢ode
 = 
NULL_NODE
;

4887 i‡(
	`⁄ig_is_code_ö_cc
(
ív
->
íc
, 
‰om
, 
cc
)

4888 #ifde‡
CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS


4889 && !
	`IS_NCCLASS_NOT
(
cc
)

4892 
i
 = 0; i < 
to_Àn
; i++) {

4893 
Àn
 = 
	`ONIGENC_CODE_TO_MBC
(
ív
->
íc
, 
to
[
i
], 
buf
);

4894 i‡(
i
 == 0) {

4895 
¢ode
 = 
	`⁄ig_node_√w_°r
(
buf
, bu‡+ 
Àn
);

4896 
	`CHECK_NULL_RETURN_MEMERR
(
¢ode
);

4900 
	`NSTRING_SET_AMBIG
(
¢ode
);

4903 
r
 = 
	`⁄ig_node_°r_ˇt
(
¢ode
, 
buf
, bu‡+ 
Àn
);

4904 i‡(
r
 < 0) {

4905 
	`⁄ig_node_‰ì
(
¢ode
);

4906  
r
;

4911 *(
ürg
->
±aû
Ë
	`⁄ig_node_√w_Æt
(
¢ode
, 
NULL_NODE
);

4912 
	`CHECK_NULL_RETURN_MEMERR
(*(
ürg
->
±aû
));

4913 
ürg
->
±aû
 = &(
	`NCDR
((*(iarg->ptail))));

4918 
	}
}

4921 
	$∑r£_exp
(
Node
** 
≈
, 
OnigTokí
* 
tok
, 
ãrm
,

4922 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

4924 
r
, 
Àn
, 
group
 = 0;

4925 
Node
* 
qn
;

4926 
Node
** 
èrgëp
;

4928 *
≈
 = 
NULL
;

4929 i‡(
tok
->
ty≥
 =(
TokíSyms
 )
ãrm
)

4930 
íd_of_tokí
;

4932 
tok
->
ty≥
) {

4933 
TK_ALT
:

4934 
TK_EOT
:

4935 
íd_of_tokí
:

4936 *
≈
 = 
	`node_√w_em±y
();

4937  
tok
->
ty≥
;

4940 
TK_SUBEXP_OPEN
:

4941 
r
 = 
	`∑r£_í˛o£
(
≈
, 
tok
, 
TK_SUBEXP_CLOSE
, 
§c
, 
íd
, 
ív
);

4942 i‡(
r
 < 0) Ñ;

4943 i‡(
r
 =1Ë
group
 = 1;

4944 i‡(
r
 == 2) {

4945 
Node
* 
èrgë
;

4946 
OnigO±i⁄Ty≥
 
¥ev
 = 
ív
->
›ti⁄
;

4948 
ív
->
›ti⁄
 = 
	`NENCLOSE
(*
≈
)->option;

4949 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

4950 i‡(
r
 < 0) Ñ;

4951 
r
 = 
	`∑r£_subexp
(&
èrgë
, 
tok
, 
ãrm
, 
§c
, 
íd
, 
ív
);

4952 
ív
->
›ti⁄
 = 
¥ev
;

4953 i‡(
r
 < 0) {

4954 
	`⁄ig_node_‰ì
(
èrgë
);

4955  
r
;

4957 
	`NENCLOSE
(*
≈
)->
èrgë
 =Åarget;

4958  
tok
->
ty≥
;

4962 
TK_SUBEXP_CLOSE
:

4963 i‡(! 
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP
))

4964  
ONIGERR_UNMATCHED_CLOSE_PARENTHESIS
;

4966 i‡(
tok
->
esˇ≥d
Ë
tk_øw_byã
;

4967 
tk_byã
;

4970 
TK_STRING
:

4971 
tk_byã
:

4973 *
≈
 = 
	`node_√w_°r
(
tok
->
backp
, *
§c
);

4974 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4977 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

4978 i‡(
r
 < 0) Ñ;

4979 i‡(
r
 !
TK_STRING
) ;

4981 
r
 = 
	`⁄ig_node_°r_ˇt
(*
≈
, 
tok
->
backp
, *
§c
);

4982 i‡(
r
 < 0) Ñ;

4985 
°rög_íd
:

4986 
èrgëp
 = 
≈
;

4987 
ª≥©
;

4991 
TK_RAW_BYTE
:

4992 
tk_øw_byã
:

4994 *
≈
 = 
	`node_√w_°r_øw_ch¨
((
UCh¨
 )
tok
->
u
.
c
);

4995 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

4996 
Àn
 = 1;

4998 i‡(
Àn
 >
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
)) {

4999 i‡(
Àn
 =
	`í˛í
(
ív
->
íc
, 
	`NSTR
(*
≈
)->
s
)) {

5000 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

5001 
	`NSTRING_CLEAR_RAW
(*
≈
);

5002 
°rög_íd
;

5006 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

5007 i‡(
r
 < 0) Ñ;

5008 i‡(
r
 !
TK_RAW_BYTE
) {

5010 #ifde‡
USE_PAD_TO_SHORT_BYTE_CHAR


5011 
ªm
;

5012 i‡(
Àn
 < 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
)) {

5013 
ªm
 = 
	`ONIGENC_MBC_MINLEN
(
ív
->
íc
Ë- 
Àn
;

5014 ()
	`node_°r_hód_∑d
(
	`NSTR
(*
≈
), 
ªm
, (
UCh¨
 )0);

5015 i‡(
Àn
 + 
ªm
 =
	`í˛í
(
ív
->
íc
, 
	`NSTR
(*
≈
)->
s
)) {

5016 
	`NSTRING_CLEAR_RAW
(*
≈
);

5017 
°rög_íd
;

5021  
ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
;

5024 
r
 = 
	`node_°r_ˇt_ch¨
(*
≈
, (
UCh¨
 )
tok
->
u
.
c
);

5025 i‡(
r
 < 0) Ñ;

5027 
Àn
++;

5032 
TK_CODE_POINT
:

5034 
UCh¨
 
buf
[
ONIGENC_CODE_TO_MBC_MAXLEN
];

5035 
num
 = 
	`ONIGENC_CODE_TO_MBC
(
ív
->
íc
, 
tok
->
u
.
code
, 
buf
);

5036 i‡(
num
 < 0) Çum;

5037 #ifde‡
NUMBERED_CHAR_IS_NOT_CASE_AMBIG


5038 *
≈
 = 
	`node_√w_°r_øw
(
buf
, bu‡+ 
num
);

5040 *
≈
 = 
	`node_√w_°r
(
buf
, bu‡+ 
num
);

5042 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5046 
TK_QUOTE_OPEN
:

5048 
OnigCodePoöt
 
íd_›
[2];

5049 
UCh¨
 *
q°¨t
, *
qíd
, *
√xç
;

5051 
íd_›
[0] = (
OnigCodePoöt
 )
	`MC_ESC
(
ív
->
sy¡ax
);

5052 
íd_›
[1] = (
OnigCodePoöt
 )'E';

5053 
q°¨t
 = *
§c
;

5054 
qíd
 = 
	`föd_°r_posôi⁄
(
íd_›
, 2, 
q°¨t
, 
íd
, &
√xç
, 
ív
->
íc
);

5055 i‡(
	`IS_NULL
(
qíd
)) {

5056 
√xç
 = 
qíd
 = 
íd
;

5058 *
≈
 = 
	`node_√w_°r
(
q°¨t
, 
qíd
);

5059 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5060 *
§c
 = 
√xç
;

5064 
TK_CHAR_TYPE
:

5066 
tok
->
u
.
¥›
.
˘y≥
) {

5067 
ONIGENC_CTYPE_WORD
:

5068 *
≈
 = 
	`node_√w_˘y≥
(
tok
->
u
.
¥›
.
˘y≥
,Åok->u.¥›.
nŸ
);

5069 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5072 
ONIGENC_CTYPE_SPACE
:

5073 
ONIGENC_CTYPE_DIGIT
:

5074 
ONIGENC_CTYPE_XDIGIT
:

5076 
CCœssNode
* 
cc
;

5078 *
≈
 = 
	`node_√w_c˛ass
();

5079 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5080 
cc
 = 
	`NCCLASS
(*
≈
);

5081 
	`add_˘y≥_to_cc
(
cc
, 
tok
->
u
.
¥›
.
˘y≥
, 0, 
ív
);

5082 i‡(
tok
->
u
.
¥›
.
nŸ
 !0Ë
	`NCCLASS_SET_NOT
(
cc
);

5087  
ONIGERR_PARSER_BUG
;

5093 
TK_CHAR_PROPERTY
:

5094 
r
 = 
	`∑r£_ch¨_¥›îty
(
≈
, 
tok
, 
§c
, 
íd
, 
ív
);

5095 i‡(
r
 != 0) Ñ;

5098 
TK_CC_OPEN
:

5100 
CCœssNode
* 
cc
;

5102 
r
 = 
	`∑r£_ch¨_˛ass
(
≈
, 
tok
, 
§c
, 
íd
, 
ív
);

5103 i‡(
r
 != 0) Ñ;

5105 
cc
 = 
	`NCCLASS
(*
≈
);

5106 i‡(
	`IS_IGNORECASE
(
ív
->
›ti⁄
)) {

5107 
IAµlyCa£FﬁdArg
 
ürg
;

5109 
ürg
.
ív
 =Énv;

5110 
ürg
.
cc
 = cc;

5111 
ürg
.
Æt_roŸ
 = 
NULL_NODE
;

5112 
ürg
.
±aû
 = &(ürg.
Æt_roŸ
);

5114 
r
 = 
	`ONIGENC_APPLY_ALL_CASE_FOLD
(
ív
->
íc
,Énv->
ˇ£_fﬁd_Êag
,

5115 
i_≠∂y_ˇ£_fﬁd
, &
ürg
);

5116 i‡(
r
 != 0) {

5117 
	`⁄ig_node_‰ì
(
ürg
.
Æt_roŸ
);

5118  
r
;

5120 i‡(
	`IS_NOT_NULL
(
ürg
.
Æt_roŸ
)) {

5121 
Node
* 
w‹k
 = 
	`⁄ig_node_√w_Æt
(*
≈
, 
ürg
.
Æt_roŸ
);

5122 i‡(
	`IS_NULL
(
w‹k
)) {

5123 
	`⁄ig_node_‰ì
(
ürg
.
Æt_roŸ
);

5124  
ONIGERR_MEMORY
;

5126 *
≈
 = 
w‹k
;

5132 
TK_ANYCHAR
:

5133 *
≈
 = 
	`node_√w_™ych¨
();

5134 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5137 
TK_ANYCHAR_ANYTIME
:

5138 *
≈
 = 
	`node_√w_™ych¨
();

5139 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5140 
qn
 = 
	`node_√w_qu™tifõr
(0, 
REPEAT_INFINITE
, 0);

5141 
	`CHECK_NULL_RETURN_MEMERR
(
qn
);

5142 
	`NQTFR
(
qn
)->
èrgë
 = *
≈
;

5143 *
≈
 = 
qn
;

5146 
TK_BACKREF
:

5147 
Àn
 = 
tok
->
u
.
backªf
.
num
;

5148 *
≈
 = 
	`node_√w_backªf
(
Àn
,

5149 (
Àn
 > 1 ? 
tok
->
u
.
backªf
.
ªfs
 : &—ok->u.backªf.
ªf1
)),

5150 
tok
->
u
.
backªf
.
by_«me
,

5151 #ifde‡
USE_BACKREF_WITH_LEVEL


5152 
tok
->
u
.
backªf
.
exi°_Àvñ
,

5153 
tok
->
u
.
backªf
.
Àvñ
,

5155 
ív
);

5156 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5159 #ifde‡
USE_SUBEXP_CALL


5160 
TK_CALL
:

5162 
gnum
 = 
tok
->
u
.
ˇŒ
.gnum;

5164 i‡(
gnum
 < 0) {

5165 
gnum
 = 
	`BACKREF_REL_TO_ABS
(gnum, 
ív
);

5166 i‡(
gnum
 <= 0)

5167  
ONIGERR_INVALID_BACKREF
;

5169 *
≈
 = 
	`node_√w_ˇŒ
(
tok
->
u
.
ˇŒ
.
«me
,Åok->u.ˇŒ.
«me_íd
, 
gnum
);

5170 
	`CHECK_NULL_RETURN_MEMERR
(*
≈
);

5171 
ív
->
num_ˇŒ
++;

5176 
TK_ANCHOR
:

5177 *
≈
 = 
	`⁄ig_node_√w_™ch‹
(
tok
->
u
.
™ch‹
);

5180 
TK_OP_REPEAT
:

5181 
TK_INTERVAL
:

5182 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS
)) {

5183 i‡(
	`IS_SYNTAX_BV
(
ív
->
sy¡ax
, 
ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS
))

5184  
ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED
;

5186 *
≈
 = 
	`node_√w_em±y
();

5189 
tk_byã
;

5194  
ONIGERR_PARSER_BUG
;

5199 
èrgëp
 = 
≈
;

5201 
ª_íåy
:

5202 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

5203 i‡(
r
 < 0) Ñ;

5205 
ª≥©
:

5206 i‡(
r
 =
TK_OP_REPEAT
 ||Ñ =
TK_INTERVAL
) {

5207 i‡(
	`is_övÆid_qu™tifõr_èrgë
(*
èrgëp
))

5208  
ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID
;

5210 
qn
 = 
	`node_√w_qu™tifõr
(
tok
->
u
.
ª≥©
.
lowî
,Åok->u.ª≥©.
uµî
,

5211 (
r
 =
TK_INTERVAL
 ? 1 : 0));

5212 
	`CHECK_NULL_RETURN_MEMERR
(
qn
);

5213 
	`NQTFR
(
qn
)->
gªedy
 = 
tok
->
u
.
ª≥©
.greedy;

5214 
r
 = 
	`£t_qu™tifõr
(
qn
, *
èrgëp
, 
group
, 
ív
);

5215 i‡(
r
 < 0) {

5216 
	`⁄ig_node_‰ì
(
qn
);

5217  
r
;

5220 i‡(
tok
->
u
.
ª≥©
.
pos£ssive
 != 0) {

5221 
Node
* 
í
;

5222 
í
 = 
	`node_√w_í˛o£
(
ENCLOSE_STOP_BACKTRACK
);

5223 i‡(
	`IS_NULL
(
í
)) {

5224 
	`⁄ig_node_‰ì
(
qn
);

5225  
ONIGERR_MEMORY
;

5227 
	`NENCLOSE
(
í
)->
èrgë
 = 
qn
;

5228 
qn
 = 
í
;

5231 i‡(
r
 == 0) {

5232 *
èrgëp
 = 
qn
;

5234 i‡(
r
 == 1) {

5235 
	`⁄ig_node_‰ì
(
qn
);

5237 i‡(
r
 == 2) {

5238 
Node
 *
tmp
;

5240 *
èrgëp
 = 
	`node_√w_li°
(*èrgëp, 
NULL
);

5241 i‡(
	`IS_NULL
(*
èrgëp
)) {

5242 
	`⁄ig_node_‰ì
(
qn
);

5243  
ONIGERR_MEMORY
;

5245 
tmp
 = 
	`NCDR
(*
èrgëp
Ë
	`node_√w_li°
(
qn
, 
NULL
);

5246 i‡(
	`IS_NULL
(
tmp
)) {

5247 
	`⁄ig_node_‰ì
(
qn
);

5248  
ONIGERR_MEMORY
;

5250 
èrgëp
 = &(
	`NCAR
(
tmp
));

5252 
ª_íåy
;

5256  
r
;

5257 
	}
}

5260 
	$∑r£_bønch
(
Node
** 
t›
, 
OnigTokí
* 
tok
, 
ãrm
,

5261 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

5263 
r
;

5264 
Node
 *
node
, **
hódp
;

5266 *
t›
 = 
NULL
;

5267 
r
 = 
	`∑r£_exp
(&
node
, 
tok
, 
ãrm
, 
§c
, 
íd
, 
ív
);

5268 i‡(
r
 < 0) {

5269 
	`⁄ig_node_‰ì
(
node
);

5270  
r
;

5273 i‡(
r
 =
TK_EOT
 ||Ñ =
ãrm
 ||Ñ =
TK_ALT
) {

5274 *
t›
 = 
node
;

5277 *
t›
 = 
	`node_√w_li°
(
node
, 
NULL
);

5278 
hódp
 = &(
	`NCDR
(*
t›
));

5279 
r
 !
TK_EOT
 &&Ñ !
ãrm
 &&Ñ !
TK_ALT
) {

5280 
r
 = 
	`∑r£_exp
(&
node
, 
tok
, 
ãrm
, 
§c
, 
íd
, 
ív
);

5281 i‡(
r
 < 0) {

5282 
	`⁄ig_node_‰ì
(
node
);

5283  
r
;

5286 i‡(
	`NTYPE
(
node
Ë=
NT_LIST
) {

5287 *
hódp
 = 
node
;

5288 
	`IS_NOT_NULL
(
	`NCDR
(
node
)))Çode = NCDR(node);

5289 
hódp
 = &(
	`NCDR
(
node
));

5292 *
hódp
 = 
	`node_√w_li°
(
node
, 
NULL
);

5293 
hódp
 = &(
	`NCDR
(*headp));

5298  
r
;

5299 
	}
}

5303 
	$∑r£_subexp
(
Node
** 
t›
, 
OnigTokí
* 
tok
, 
ãrm
,

5304 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

5306 
r
;

5307 
Node
 *
node
, **
hódp
;

5309 *
t›
 = 
NULL
;

5310 
ív
->
∑r£_dïth
++;

5311 i‡(
ív
->
∑r£_dïth
 > 
P¨£DïthLimô
)

5312  
ONIGERR_PARSE_DEPTH_LIMIT_OVER
;

5313 
r
 = 
	`∑r£_bønch
(&
node
, 
tok
, 
ãrm
, 
§c
, 
íd
, 
ív
);

5314 i‡(
r
 < 0) {

5315 
	`⁄ig_node_‰ì
(
node
);

5316  
r
;

5319 i‡(
r
 =
ãrm
) {

5320 *
t›
 = 
node
;

5322 i‡(
r
 =
TK_ALT
) {

5323 *
t›
 = 
	`⁄ig_node_√w_Æt
(
node
, 
NULL
);

5324 
hódp
 = &(
	`NCDR
(*
t›
));

5325 
r
 =
TK_ALT
) {

5326 
r
 = 
	`„tch_tokí
(
tok
, 
§c
, 
íd
, 
ív
);

5327 i‡(
r
 < 0) Ñ;

5328 
r
 = 
	`∑r£_bønch
(&
node
, 
tok
, 
ãrm
, 
§c
, 
íd
, 
ív
);

5329 i‡(
r
 < 0) {

5330 
	`⁄ig_node_‰ì
(
node
);

5331  
r
;

5333 *
hódp
 = 
	`⁄ig_node_√w_Æt
(
node
, 
NULL
);

5334 
hódp
 = &(
	`NCDR
(*headp));

5337 i‡(
tok
->
ty≥
 !(
TokíSyms
 )
ãrm
)

5338 
îr
;

5341 
	`⁄ig_node_‰ì
(
node
);

5342 
îr
:

5343 i‡(
ãrm
 =
TK_SUBEXP_CLOSE
)

5344  
ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
;

5346  
ONIGERR_PARSER_BUG
;

5349 
ív
->
∑r£_dïth
--;

5350  
r
;

5351 
	}
}

5354 
	$∑r£_ªgexp
(
Node
** 
t›
, 
UCh¨
** 
§c
, UCh¨* 
íd
, 
SˇnEnv
* 
ív
)

5356 
r
;

5357 
OnigTokí
 
tok
;

5359 
r
 = 
	`„tch_tokí
(&
tok
, 
§c
, 
íd
, 
ív
);

5360 i‡(
r
 < 0) Ñ;

5361 
r
 = 
	`∑r£_subexp
(
t›
, &
tok
, 
TK_EOT
, 
§c
, 
íd
, 
ív
);

5362 i‡(
r
 < 0) Ñ;

5364 
	}
}

5367 
	$⁄ig_∑r£_make_åì
(
Node
** 
roŸ
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
íd
,

5368 
ªgex_t
* 
ªg
, 
SˇnEnv
* 
ív
)

5370 
r
;

5371 
UCh¨
* 
p
;

5373 #ifde‡
USE_NAMED_GROUP


5374 
	`«mes_˛ór
(
ªg
);

5377 
	`sˇn_ív_˛ór
(
ív
);

5378 
ív
->
›ti⁄
 = 
ªg
->
›ti⁄s
;

5379 
ív
->
ˇ£_fﬁd_Êag
 = 
ªg
->case_fold_flag;

5380 
ív
->
íc
 = 
ªg
->enc;

5381 
ív
->
sy¡ax
 = 
ªg
->syntax;

5382 
ív
->
∑âîn
 = (
UCh¨
* )pattern;

5383 
ív
->
∑âîn_íd
 = (
UCh¨
* )
íd
;

5384 
ív
->
ªg
 =Ñeg;

5386 *
roŸ
 = 
NULL
;

5388 i‡(! 
	`ONIGENC_IS_VALID_MBC_STRING
(
ív
->
íc
, 
∑âîn
, 
íd
))

5389  
ONIGERR_INVALID_WIDE_CHAR_VALUE
;

5391 
p
 = (
UCh¨
* )
∑âîn
;

5392 
r
 = 
	`∑r£_ªgexp
(
roŸ
, &
p
, (
UCh¨
* )
íd
, 
ív
);

5393 
ªg
->
num_mem
 = 
ív
->num_mem;

5394  
r
;

5395 
	}
}

5398 
	$⁄ig_sˇn_ív_£t_îr‹_°rög
(
SˇnEnv
* 
ív
, 
ecode
 
ARG_UNUSED
,

5399 
UCh¨
* 
¨g
, UCh¨* 
¨g_íd
)

5401 
ív
->
îr‹
 = 
¨g
;

5402 
ív
->
îr‹_íd
 = 
¨g_íd
;

5403 
	}
}

	@modules/oniguruma/src/regparse.h

1 #i‚de‡
REGPARSE_H


2 
	#REGPARSE_H


	)

32 
	~"ªgöt.h
"

35 
	#NT_STR
 0

	)

36 
	#NT_CCLASS
 1

	)

37 
	#NT_CTYPE
 2

	)

38 
	#NT_CANY
 3

	)

39 
	#NT_BREF
 4

	)

40 
	#NT_QTFR
 5

	)

41 
	#NT_ENCLOSE
 6

	)

42 
	#NT_ANCHOR
 7

	)

43 
	#NT_LIST
 8

	)

44 
	#NT_ALT
 9

	)

45 
	#NT_CALL
 10

	)

48 
	#NTYPE2BIT
(
ty≥
Ë(1<<—y≥))

	)

50 
	#BIT_NT_STR
 
	`NTYPE2BIT
(
NT_STR
)

	)

51 
	#BIT_NT_CCLASS
 
	`NTYPE2BIT
(
NT_CCLASS
)

	)

52 
	#BIT_NT_CTYPE
 
	`NTYPE2BIT
(
NT_CTYPE
)

	)

53 
	#BIT_NT_CANY
 
	`NTYPE2BIT
(
NT_CANY
)

	)

54 
	#BIT_NT_BREF
 
	`NTYPE2BIT
(
NT_BREF
)

	)

55 
	#BIT_NT_QTFR
 
	`NTYPE2BIT
(
NT_QTFR
)

	)

56 
	#BIT_NT_ENCLOSE
 
	`NTYPE2BIT
(
NT_ENCLOSE
)

	)

57 
	#BIT_NT_ANCHOR
 
	`NTYPE2BIT
(
NT_ANCHOR
)

	)

58 
	#BIT_NT_LIST
 
	`NTYPE2BIT
(
NT_LIST
)

	)

59 
	#BIT_NT_ALT
 
	`NTYPE2BIT
(
NT_ALT
)

	)

60 
	#BIT_NT_CALL
 
	`NTYPE2BIT
(
NT_CALL
)

	)

62 
	#IS_NODE_TYPE_SIMPLE
(
ty≥
) \

63 ((
	`NTYPE2BIT
(
ty≥
Ë& (
BIT_NT_STR
 | 
BIT_NT_CCLASS
 | 
BIT_NT_CTYPE
 |\

64 
BIT_NT_CANY
 | 
BIT_NT_BREF
)Ë!0)

	)

66 
	#NTYPE
(
node
Ë(“ode)->
u
.
ba£
.
ty≥
)

	)

67 
	#SET_NTYPE
(
node
, 
¡y≥
Ë“ode)->
u
.
ba£
.
ty≥
 = (¡y≥)

	)

69 
	#NSTR
(
node
Ë(&(“ode)->
u
.
°r
))

	)

70 
	#NCCLASS
(
node
Ë(&(“ode)->
u
.
c˛ass
))

	)

71 
	#NCTYPE
(
node
Ë(&(“ode)->
u
.
˘y≥
))

	)

72 
	#NBREF
(
node
Ë(&(“ode)->
u
.
bªf
))

	)

73 
	#NQTFR
(
node
Ë(&(“ode)->
u
.
qt‰
))

	)

74 
	#NENCLOSE
(
node
Ë(&(“ode)->
u
.
í˛o£
))

	)

75 
	#NANCHOR
(
node
Ë(&(“ode)->
u
.
™ch‹
))

	)

76 
	#NCONS
(
node
Ë(&(“ode)->
u
.
c⁄s
))

	)

77 
	#NCALL
(
node
Ë(&(“ode)->
u
.
ˇŒ
))

	)

79 
	#NCAR
(
node
Ë(
	`NCONS
“ode)->
ˇr
)

	)

80 
	#NCDR
(
node
Ë(
	`NCONS
“ode)->
cdr
)

	)

84 
	#ANCHOR_ANYCHAR_STAR_MASK
 (
ANCHOR_ANYCHAR_STAR
 | 
ANCHOR_ANYCHAR_STAR_ML
)

	)

85 
	#ANCHOR_END_BUF_MASK
 (
ANCHOR_END_BUF
 | 
ANCHOR_SEMI_END_BUF
)

	)

87 
	#ENCLOSE_MEMORY
 (1<<0)

	)

88 
	#ENCLOSE_OPTION
 (1<<1)

	)

89 
	#ENCLOSE_STOP_BACKTRACK
 (1<<2)

	)

91 
	#NODE_STR_MARGIN
 16

	)

92 
	#NODE_STR_BUF_SIZE
 24

	)

93 
	#NODE_BACKREFS_SIZE
 6

	)

95 
	#NSTR_RAW
 (1<<0Ë

	)

96 
	#NSTR_AMBIG
 (1<<1)

	)

97 
	#NSTR_DONT_GET_OPT_INFO
 (1<<2)

	)

99 
	#NSTRING_LEN
(
node
Ë(“ode)->
u
.
°r
.
íd
 - (node)->u.°r.
s
)

	)

100 
	#NSTRING_SET_RAW
(
node
Ë“ode)->
u
.
°r
.
Êag
 |
NSTR_RAW


	)

101 
	#NSTRING_CLEAR_RAW
(
node
Ë“ode)->
u
.
°r
.
Êag
 &~
NSTR_RAW


	)

102 
	#NSTRING_SET_AMBIG
(
node
Ë“ode)->
u
.
°r
.
Êag
 |
NSTR_AMBIG


	)

103 
	#NSTRING_SET_DONT_GET_OPT_INFO
(
node
) \

104 (
node
)->
u
.
°r
.
Êag
 |
NSTR_DONT_GET_OPT_INFO


	)

105 
	#NSTRING_IS_RAW
(
node
Ë((“ode)->
u
.
°r
.
Êag
 & 
NSTR_RAW
Ë!0)

	)

106 
	#NSTRING_IS_AMBIG
(
node
Ë((“ode)->
u
.
°r
.
Êag
 & 
NSTR_AMBIG
Ë!0)

	)

107 
	#NSTRING_IS_DONT_GET_OPT_INFO
(
node
) \

108 (((
node
)->
u
.
°r
.
Êag
 & 
NSTR_DONT_GET_OPT_INFO
Ë!0)

	)

110 
	#BACKREFS_P
(
br
) \

111 (
	`IS_NOT_NULL
((
br
)->
back_dy«mic
Ë? (br)->back_dy«mi¯: (br)->
back_°©ic
);

	)

113 
	#NQ_TARGET_ISNOT_EMPTY
 0

	)

114 
	#NQ_TARGET_IS_EMPTY
 1

	)

115 
	#NQ_TARGET_IS_EMPTY_MEM
 2

	)

116 
	#NQ_TARGET_IS_EMPTY_REC
 3

	)

119 
	#NST_MIN_FIXED
 (1<<0)

	)

120 
	#NST_MAX_FIXED
 (1<<1)

	)

121 
	#NST_CLEN_FIXED
 (1<<2)

	)

122 
	#NST_MARK1
 (1<<3)

	)

123 
	#NST_MARK2
 (1<<4)

	)

124 
	#NST_MEM_BACKREFED
 (1<<5)

	)

125 
	#NST_STOP_BT_SIMPLE_REPEAT
 (1<<6)

	)

126 
	#NST_RECURSION
 (1<<7)

	)

127 
	#NST_CALLED
 (1<<8)

	)

128 
	#NST_ADDR_FIXED
 (1<<9)

	)

129 
	#NST_NAMED_GROUP
 (1<<10)

	)

130 
	#NST_NAME_REF
 (1<<11)

	)

131 
	#NST_IN_REPEAT
 (1<<12Ë

	)

132 
	#NST_NEST_LEVEL
 (1<<13)

	)

133 
	#NST_BY_NUMBER
 (1<<14Ë

	)

135 
	#SET_ENCLOSE_STATUS
(
node
,
f
Ë“ode)->
u
.
í˛o£
.
°©e
 |(f)

	)

136 
	#CLEAR_ENCLOSE_STATUS
(
node
,
f
Ë“ode)->
u
.
í˛o£
.
°©e
 &~(f)

	)

138 
	#IS_ENCLOSE_CALLED
(
í
Ë((”n)->
°©e
 & 
NST_CALLED
Ë!0)

	)

139 
	#IS_ENCLOSE_ADDR_FIXED
(
í
Ë((”n)->
°©e
 & 
NST_ADDR_FIXED
Ë!0)

	)

140 
	#IS_ENCLOSE_RECURSION
(
í
Ë((”n)->
°©e
 & 
NST_RECURSION
Ë!0)

	)

141 
	#IS_ENCLOSE_MARK1
(
í
Ë((”n)->
°©e
 & 
NST_MARK1
Ë!0)

	)

142 
	#IS_ENCLOSE_MARK2
(
í
Ë((”n)->
°©e
 & 
NST_MARK2
Ë!0)

	)

143 
	#IS_ENCLOSE_MIN_FIXED
(
í
Ë((”n)->
°©e
 & 
NST_MIN_FIXED
Ë!0)

	)

144 
	#IS_ENCLOSE_MAX_FIXED
(
í
Ë((”n)->
°©e
 & 
NST_MAX_FIXED
Ë!0)

	)

145 
	#IS_ENCLOSE_CLEN_FIXED
(
í
Ë((”n)->
°©e
 & 
NST_CLEN_FIXED
Ë!0)

	)

146 
	#IS_ENCLOSE_STOP_BT_SIMPLE_REPEAT
(
í
) \

147 (((
í
)->
°©e
 & 
NST_STOP_BT_SIMPLE_REPEAT
Ë!0)

	)

148 
	#IS_ENCLOSE_NAMED_GROUP
(
í
Ë((”n)->
°©e
 & 
NST_NAMED_GROUP
Ë!0)

	)

150 
	#SET_CALL_RECURSION
(
node
Ë“ode)->
u
.
ˇŒ
.
°©e
 |
NST_RECURSION


	)

151 
	#IS_CALL_RECURSION
(
˙
Ë(((˙)->
°©e
 & 
NST_RECURSION
Ë!0)

	)

152 
	#IS_CALL_NAME_REF
(
˙
Ë(((˙)->
°©e
 & 
NST_NAME_REF
Ë!0)

	)

153 
	#IS_BACKREF_NAME_REF
(
bn
Ë(((bn)->
°©e
 & 
NST_NAME_REF
Ë!0)

	)

154 
	#IS_BACKREF_NEST_LEVEL
(
bn
Ë(((bn)->
°©e
 & 
NST_NEST_LEVEL
Ë!0)

	)

155 
	#IS_QUANTIFIER_IN_REPEAT
(
qn
Ë(((qn)->
°©e
 & 
NST_IN_REPEAT
Ë!0)

	)

156 
	#IS_QUANTIFIER_BY_NUMBER
(
qn
Ë(((qn)->
°©e
 & 
NST_BY_NUMBER
Ë!0)

	)

158 
	#CALLNODE_REFNUM_UNDEF
 -1

	)

161 
NodeBa£
 
	mba£
;

162 
UCh¨
* 
	ms
;

163 
UCh¨
* 
	míd
;

164 
	mÊag
;

165 
	mˇ∑
;

166 
UCh¨
 
	mbuf
[
NODE_STR_BUF_SIZE
];

167 } 
	tSåNode
;

170 
NodeBa£
 
	mba£
;

171 
	m°©e
;

172 
_Node
* 
	mèrgë
;

173 
	mlowî
;

174 
	muµî
;

175 
	mgªedy
;

176 
	mèrgë_em±y_öfo
;

177 
_Node
* 
	mhód_exa˘
;

178 
_Node
* 
	m√xt_hód_exa˘
;

179 
	mis_ª„ªd
;

180 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


181 
	mcomb_exp_check_num
;

183 } 
	tQt‰Node
;

186 
NodeBa£
 
	mba£
;

187 
	m°©e
;

188 
	mty≥
;

189 
	mªgnum
;

190 
OnigO±i⁄Ty≥
 
	m›ti⁄
;

191 
_Node
* 
	mèrgë
;

192 
AbsAddrTy≥
 
	mˇŒ_addr
;

194 
OnigLí
 
	mmö_Àn
;

195 
OnigLí
 
	mmax_Àn
;

196 
	mch¨_Àn
;

197 
	m›t_cou¡
;

198 } 
	tEn˛o£Node
;

200 #ifde‡
USE_SUBEXP_CALL


203 
	moff£t
;

204 
_Node
* 
	mèrgë
;

205 } 
	tUn£tAddr
;

208 
	mnum
;

209 
	mÆloc
;

210 
Un£tAddr
* 
	mus
;

211 } 
	tUn£tAddrLi°
;

214 
NodeBa£
 
	mba£
;

215 
	m°©e
;

216 
	mgroup_num
;

217 
UCh¨
* 
	m«me
;

218 
UCh¨
* 
	m«me_íd
;

219 
_Node
* 
	mèrgë
;

220 
Un£tAddrLi°
* 
	mun£t_addr_li°
;

221 } 
	tCÆlNode
;

226 
NodeBa£
 
	mba£
;

227 
	m°©e
;

228 
	mback_num
;

229 
	mback_°©ic
[
NODE_BACKREFS_SIZE
];

230 * 
	mback_dy«mic
;

231 
	m√°_Àvñ
;

232 } 
	tBRefNode
;

235 
NodeBa£
 
	mba£
;

236 
	mty≥
;

237 
_Node
* 
	mèrgë
;

238 
	mch¨_Àn
;

239 } 
	tAnch‹Node
;

242 
NodeBa£
 
	mba£
;

243 
_Node
* 
	mˇr
;

244 
_Node
* 
	mcdr
;

245 } 
	tC⁄sA…Node
;

248 
NodeBa£
 
	mba£
;

249 
	m˘y≥
;

250 
	mnŸ
;

251 } 
	tCty≥Node
;

253 
	s_Node
 {

255 
NodeBa£
 
	mba£
;

256 
SåNode
 
	m°r
;

257 
CCœssNode
 
	mc˛ass
;

258 
Qt‰Node
 
	mqt‰
;

259 
En˛o£Node
 
	mí˛o£
;

260 
BRefNode
 
	mbªf
;

261 
Anch‹Node
 
	m™ch‹
;

262 
C⁄sA…Node
 
	mc⁄s
;

263 
Cty≥Node
 
	m˘y≥
;

264 #ifde‡
USE_SUBEXP_CALL


265 
CÆlNode
 
	mˇŒ
;

267 } 
	mu
;

268 } 
	tNode
;

271 
	#NULL_NODE
 ((
Node
* )0)

	)

273 
	#SCANENV_MEMNODES_SIZE
 8

	)

274 
	#SCANENV_MEM_NODES
(
£nv
) \

275 (
	`IS_NOT_NULL
((
£nv
)->
mem_nodes_dy«mic
) ? \

276 (
£nv
)->
mem_nodes_dy«mic
 : (£nv)->
mem_nodes_°©ic
)

	)

279 
OnigO±i⁄Ty≥
 
	m›ti⁄
;

280 
OnigCa£FﬁdTy≥
 
	mˇ£_fﬁd_Êag
;

281 
OnigEncodög
 
	míc
;

282 
OnigSy¡axTy≥
* 
	msy¡ax
;

283 
BôSètusTy≥
 
	mˇ±uª_hi°‹y
;

284 
BôSètusTy≥
 
	mbt_mem_°¨t
;

285 
BôSètusTy≥
 
	mbt_mem_íd
;

286 
BôSètusTy≥
 
	mbackª„d_mem
;

287 
UCh¨
* 
	m∑âîn
;

288 
UCh¨
* 
	m∑âîn_íd
;

289 
UCh¨
* 
	mîr‹
;

290 
UCh¨
* 
	mîr‹_íd
;

291 
ªgex_t
* 
	mªg
;

292 
	mnum_ˇŒ
;

293 #ifde‡
USE_SUBEXP_CALL


294 
Un£tAddrLi°
* 
	mun£t_addr_li°
;

296 
	mnum_mem
;

297 #ifde‡
USE_NAMED_GROUP


298 
	mnum_«med
;

300 
	mmem_Æloc
;

301 
Node
* 
	mmem_nodes_°©ic
[
SCANENV_MEMNODES_SIZE
];

302 
Node
** 
	mmem_nodes_dy«mic
;

303 #ifde‡
USE_COMBINATION_EXPLOSION_CHECK


304 
	mnum_comb_exp_check
;

305 
	mcomb_exp_max_ªgnum
;

306 
	mcuº_max_ªgnum
;

307 
	mhas_ªcursi⁄
;

309 
	m∑r£_dïth
;

310 } 
	tSˇnEnv
;

313 
	#IS_SYNTAX_OP
(
syn
, 
›m
Ë(((syn)->
›
 & (›m)Ë!0)

	)

314 
	#IS_SYNTAX_OP2
(
syn
, 
›m
Ë(((syn)->
›2
 & (›m)Ë!0)

	)

315 
	#IS_SYNTAX_BV
(
syn
, 
bvm
Ë(((syn)->
behavi‹
 & (bvm)Ë!0)

	)

317 #ifde‡
USE_NAMED_GROUP


319 
	m√w_vÆ
;

320 } 
	tGroupNumRem≠
;

322 
⁄ig_ªnumbî_«me_èbÀ
 
P_
((
ªgex_t
* 
ªg
, 
GroupNumRem≠
* 
m≠
));

325 
⁄ig_°∫cmp
 
P_
((c⁄° 
UCh¨
* 
s1
, c⁄° UCh¨* 
s2
, 
n
));

326 
⁄ig_°r˝y
 
P_
((
UCh¨
* 
de°
, c⁄° UCh¨* 
§c
, c⁄° UCh¨* 
íd
));

327 
⁄ig_sˇn_ív_£t_îr‹_°rög
 
P_
((
SˇnEnv
* 
ív
, 
ecode
, 
UCh¨
* 
¨g
, UCh¨* 
¨g_íd
));

328 
⁄ig_sˇn_unsig√d_numbî
 
P_
((
UCh¨
** 
§c
, c⁄° UCh¨* 
íd
, 
OnigEncodög
 
íc
));

329 
⁄ig_ªdu˚_√°ed_qu™tifõr
 
P_
((
Node
* 
≤ode
, Node* 
˙ode
));

330 
⁄ig_node_c⁄v_to_°r_node
 
P_
((
Node
* 
node
, 
øw
));

331 
⁄ig_node_°r_ˇt
 
P_
((
Node
* 
node
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

332 
⁄ig_node_°r_£t
 
P_
((
Node
* 
node
, c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

333 
⁄ig_node_‰ì
 
P_
((
Node
* 
node
));

334 
Node
* 
⁄ig_node_√w_í˛o£
 
P_
((
ty≥
));

335 
Node
* 
⁄ig_node_√w_™ch‹
 
P_
((
ty≥
));

336 
Node
* 
⁄ig_node_√w_°r
 
P_
((c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
));

337 
Node
* 
⁄ig_node_√w_li°
 
P_
((Node* 
À·
, Node* 
right
));

338 
Node
* 
⁄ig_node_li°_add
 
P_
((Node* 
li°
, Node* 
x
));

339 
Node
* 
⁄ig_node_√w_Æt
 
P_
((Node* 
À·
, Node* 
right
));

340 
⁄ig_node_°r_˛ór
 
P_
((
Node
* 
node
));

341 
⁄ig_«mes_‰ì
 
P_
((
ªgex_t
* 
ªg
));

342 
⁄ig_∑r£_make_åì
 
P_
((
Node
** 
roŸ
, c⁄° 
UCh¨
* 
∑âîn
, c⁄° UCh¨* 
íd
, 
ªgex_t
* 
ªg
, 
SˇnEnv
* 
ív
));

343 
⁄ig_‰ì_sh¨ed_c˛ass_èbÀ
 
P_
(());

345 #ifde‡
ONIG_DEBUG


346 #ifde‡
USE_NAMED_GROUP


347 
⁄ig_¥öt_«mes
(
FILE
*, 
ªgex_t
*);

	@modules/oniguruma/src/regposerr.c

30 
	~"c⁄fig.h
"

31 
	~"⁄igposix.h
"

33 #ifde‡
HAVE_STRING_H


34 
	~<°rög.h
>

36 
	~<°rögs.h
>

39 #i‡
deföed
(
__GNUC__
)

40 
	#ARG_UNUSED
 
	`__©åibuã__
 ((
unu£d
))

	)

42 
	#ARG_UNUSED


	)

45 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
)

46 
	#x¢¥ötf
 
•rötf_s


	)

47 
	#x°∫˝y
(
de°
,
§c
,
size
Ë
	`°∫˝y_s
(de°,size,§c,
_TRUNCATE
)

	)

49 
	#x¢¥ötf
 
¢¥ötf


	)

50 
	#x°∫˝y
 
°∫˝y


	)

53 * 
	gESTRING
[] = {

54 
NULL
,

75 
	~<°dio.h
>

78 
size_t


79 
	$ªgîr‹
(
posix_ecode
, c⁄° 
ªgex_t
* 
ªg
 
ARG_UNUSED
, * 
buf
,

80 
size_t
 
size
)

82 * 
s
;

83 
tbuf
[35];

84 
size_t
 
Àn
;

86 i‡(
posix_ecode
 > 0

87 && 
posix_ecode
 < ()((
ESTRING
) / (ESTRING[0]))) {

88 
s
 = 
ESTRING
[
posix_ecode
];

90 i‡(
posix_ecode
 == 0) {

91 
s
 = "";

94 
	`x¢¥ötf
(
tbuf
, —buf), "undeföedÉº‹ codê(%d)", 
posix_ecode
);

95 
s
 = 
tbuf
;

98 
Àn
 = 
	`°æí
(
s
) + 1;

100 i‡(
buf
 !
NULL
 && 
size
 > 0) {

101 
	`x°∫˝y
(
buf
, 
s
, 
size
 - 1);

102 
buf
[
size
 - 1] = '\0';

104  
Àn
;

105 
	}
}

	@modules/oniguruma/src/regposix.c

30 
	#ªgex_t
 
⁄ig_ªgex_t


	)

31 
	~"ªgöt.h
"

32 #unde‡
ªgex_t


33 
	~"⁄igposix.h
"

35 
	#ONIG_C
(
ªg
Ë((
⁄ig_ªgex_t
* )(‘eg)->
⁄ig
))

	)

36 
	#PONIG_C
(
ªg
Ë((
⁄ig_ªgex_t
** )(&‘eg)->
⁄ig
))

	)

39 
	#ENC_STRING_LEN
(
íc
,
s
,
Àn
) do { \

40 i‡(
	`ONIGENC_MBC_MINLEN
(
íc
) == 1) { \

41 
UCh¨
* 
tmps
 = (UCh¨* )(
s
); \

42 *
tmps
 != 0)Åmps++; \

43 
Àn
 = 
tmps
 - (
UCh¨
* )(
s
); \

46 
Àn
 = 
	`⁄igíc_°r_byãÀn_nuŒ
(
íc
, (
UCh¨
* )
s
); \

48 } 0)

	)

51 
	m⁄ig_îr
;

52 
	mposix_îr
;

53 } 
	tO2PERR
;

56 
	$⁄ig2posix_îr‹_code
(
code
)

58 c⁄° 
O2PERR
 
o2p
[] = {

59 { 
ONIG_MISMATCH
, 
REG_NOMATCH
 },

60 { 
ONIG_NO_SUPPORT_CONFIG
, 
REG_EONIG_INTERNAL
 },

61 { 
ONIGERR_MEMORY
, 
REG_ESPACE
 },

62 { 
ONIGERR_MATCH_STACK_LIMIT_OVER
, 
REG_EONIG_INTERNAL
 },

63 { 
ONIGERR_TYPE_BUG
, 
REG_EONIG_INTERNAL
 },

64 { 
ONIGERR_PARSER_BUG
, 
REG_EONIG_INTERNAL
 },

65 { 
ONIGERR_STACK_BUG
, 
REG_EONIG_INTERNAL
 },

66 { 
ONIGERR_UNDEFINED_BYTECODE
, 
REG_EONIG_INTERNAL
 },

67 { 
ONIGERR_UNEXPECTED_BYTECODE
, 
REG_EONIG_INTERNAL
 },

68 { 
ONIGERR_DEFAULT_ENCODING_IS_NOT_SETTED
, 
REG_EONIG_BADARG
 },

69 { 
ONIGERR_SPECIFIED_ENCODING_CANT_CONVERT_TO_WIDE_CHAR
, 
REG_EONIG_BADARG
 },

70 { 
ONIGERR_FAIL_TO_INITIALIZE
, 
REG_EONIG_INTERNAL
 },

71 { 
ONIGERR_INVALID_ARGUMENT
, 
REG_EONIG_BADARG
 },

72 { 
ONIGERR_END_PATTERN_AT_LEFT_BRACE
, 
REG_EBRACE
 },

73 { 
ONIGERR_END_PATTERN_AT_LEFT_BRACKET
, 
REG_EBRACK
 },

74 { 
ONIGERR_EMPTY_CHAR_CLASS
, 
REG_ECTYPE
 },

75 { 
ONIGERR_PREMATURE_END_OF_CHAR_CLASS
, 
REG_ECTYPE
 },

76 { 
ONIGERR_END_PATTERN_AT_ESCAPE
, 
REG_EESCAPE
 },

77 { 
ONIGERR_END_PATTERN_AT_META
, 
REG_EESCAPE
 },

78 { 
ONIGERR_END_PATTERN_AT_CONTROL
, 
REG_EESCAPE
 },

79 { 
ONIGERR_META_CODE_SYNTAX
, 
REG_BADPAT
 },

80 { 
ONIGERR_CONTROL_CODE_SYNTAX
, 
REG_BADPAT
 },

81 { 
ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE
, 
REG_ECTYPE
 },

82 { 
ONIGERR_CHAR_CLASS_VALUE_AT_START_OF_RANGE
, 
REG_ECTYPE
 },

83 { 
ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS
, 
REG_ECTYPE
 },

84 { 
ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED
, 
REG_BADRPT
 },

85 { 
ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID
, 
REG_BADRPT
 },

86 { 
ONIGERR_NESTED_REPEAT_OPERATOR
, 
REG_BADRPT
 },

87 { 
ONIGERR_UNMATCHED_CLOSE_PARENTHESIS
, 
REG_EPAREN
 },

88 { 
ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS
, 
REG_EPAREN
 },

89 { 
ONIGERR_END_PATTERN_IN_GROUP
, 
REG_BADPAT
 },

90 { 
ONIGERR_UNDEFINED_GROUP_OPTION
, 
REG_BADPAT
 },

91 { 
ONIGERR_INVALID_POSIX_BRACKET_TYPE
, 
REG_BADPAT
 },

92 { 
ONIGERR_INVALID_LOOK_BEHIND_PATTERN
, 
REG_BADPAT
 },

93 { 
ONIGERR_INVALID_REPEAT_RANGE_PATTERN
, 
REG_BADPAT
 },

94 { 
ONIGERR_TOO_BIG_NUMBER
, 
REG_BADPAT
 },

95 { 
ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE
, 
REG_BADBR
 },

96 { 
ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE
, 
REG_BADBR
 },

97 { 
ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS
, 
REG_ECTYPE
 },

98 { 
ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE
, 
REG_ECTYPE
 },

99 { 
ONIGERR_TOO_MANY_MULTI_BYTE_RANGES
, 
REG_ECTYPE
 },

100 { 
ONIGERR_TOO_SHORT_MULTI_BYTE_STRING
, 
REG_BADPAT
 },

101 { 
ONIGERR_TOO_BIG_BACKREF_NUMBER
, 
REG_ESUBREG
 },

102 { 
ONIGERR_INVALID_BACKREF
, 
REG_ESUBREG
 },

103 { 
ONIGERR_NUMBERED_BACKREF_OR_CALL_NOT_ALLOWED
, 
REG_BADPAT
 },

104 { 
ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
, 
REG_EONIG_BADWC
 },

105 { 
ONIGERR_TOO_LONG_WIDE_CHAR_VALUE
, 
REG_EONIG_BADWC
 },

106 { 
ONIGERR_INVALID_CODE_POINT_VALUE
, 
REG_EONIG_BADWC
 },

107 { 
ONIGERR_EMPTY_GROUP_NAME
, 
REG_BADPAT
 },

108 { 
ONIGERR_INVALID_GROUP_NAME
, 
REG_BADPAT
 },

109 { 
ONIGERR_INVALID_CHAR_IN_GROUP_NAME
, 
REG_BADPAT
 },

110 { 
ONIGERR_UNDEFINED_NAME_REFERENCE
, 
REG_BADPAT
 },

111 { 
ONIGERR_UNDEFINED_GROUP_REFERENCE
, 
REG_BADPAT
 },

112 { 
ONIGERR_MULTIPLEX_DEFINED_NAME
, 
REG_BADPAT
 },

113 { 
ONIGERR_MULTIPLEX_DEFINITION_NAME_CALL
, 
REG_BADPAT
 },

114 { 
ONIGERR_NEVER_ENDING_RECURSION
, 
REG_BADPAT
 },

115 { 
ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY
, 
REG_BADPAT
 },

116 { 
ONIGERR_INVALID_CHAR_PROPERTY_NAME
, 
REG_BADPAT
 },

117 { 
ONIGERR_NOT_SUPPORTED_ENCODING_COMBINATION
, 
REG_EONIG_BADARG
 },

118 { 
ONIGERR_LIBRARY_IS_NOT_INITIALIZED
, 
REG_EONIG_INTERNAL
 }

121 
i
;

123 i‡(
code
 >= 0)  0;

125 
i
 = 0; i < ()((
o2p
) / (o2p[0])); i++) {

126 i‡(
code
 =
o2p
[
i
].
⁄ig_îr
)

127  
o2p
[
i
].
posix_îr
;

130  
REG_EONIG_INTERNAL
;

131 
	}
}

134 
	$ªgcomp
(
ªgex_t
* 
ªg
, c⁄° * 
∑âîn
, 
posix_›ti⁄s
)

136 
r
, 
Àn
;

137 
OnigSy¡axTy≥
* 
sy¡ax
 = 
OnigDeÁu…Sy¡ax
;

138 
OnigO±i⁄Ty≥
 
›ti⁄s
;

140 i‡((
posix_›ti⁄s
 & 
REG_EXTENDED
) == 0)

141 
sy¡ax
 = 
ONIG_SYNTAX_POSIX_BASIC
;

143 
›ti⁄s
 = 
sy¡ax
->options;

144 i‡((
posix_›ti⁄s
 & 
REG_ICASE
) != 0)

145 
	`ONIG_OPTION_ON
(
›ti⁄s
, 
ONIG_OPTION_IGNORECASE
);

146 i‡((
posix_›ti⁄s
 & 
REG_NEWLINE
) != 0) {

147 
	`ONIG_OPTION_ON
–
›ti⁄s
, 
ONIG_OPTION_NEGATE_SINGLELINE
);

148 
	`ONIG_OPTION_OFF
(
›ti⁄s
, 
ONIG_OPTION_SINGLELINE
);

151 
ªg
->
comp_›ti⁄s
 = 
posix_›ti⁄s
;

153 
	`ENC_STRING_LEN
(
OnigEncDeÁu…Ch¨Encodög
, 
∑âîn
, 
Àn
);

154 
r
 = 
	`⁄ig_√w
(
	`PONIG_C
(
ªg
), (
UCh¨
* )
∑âîn
, (UCh¨* )’©ã∫ + 
Àn
),

155 
›ti⁄s
, 
OnigEncDeÁu…Ch¨Encodög
, 
sy¡ax
,

156 (
OnigEº‹Info
* )
NULL
);

157 i‡(
r
 !
ONIG_NORMAL
) {

158  
	`⁄ig2posix_îr‹_code
(
r
);

161 
ªg
->
ª_nsub
 = 
	`ONIG_C
‘eg)->
num_mem
;

163 
	}
}

166 
	$ªgexec
(
ªgex_t
* 
ªg
, c⁄° * 
°r
, 
size_t
 
nm©ch
,

167 
ªgm©ch_t
 
pm©ch
[], 
posix_›ti⁄s
)

169 
r
, 
i
, 
Àn
;

170 
UCh¨
* 
íd
;

171 
ªgm©ch_t
* 
pm
;

172 
OnigO±i⁄Ty≥
 
›ti⁄s
;

174 
›ti⁄s
 = 
ONIG_OPTION_POSIX_REGION
;

175 i‡((
posix_›ti⁄s
 & 
REG_NOTBOL
Ë!0Ë
›ti⁄s
 |
ONIG_OPTION_NOTBOL
;

176 i‡((
posix_›ti⁄s
 & 
REG_NOTEOL
Ë!0Ë
›ti⁄s
 |
ONIG_OPTION_NOTEOL
;

178 i‡(
nm©ch
 =0 || (
ªg
->
comp_›ti⁄s
 & 
REG_NOSUB
) != 0) {

179 
pm
 = (
ªgm©ch_t
* )
NULL
;

180 
nm©ch
 = 0;

182 i‡(()
nm©ch
 < 
	`ONIG_C
(
ªg
)->
num_mem
 + 1) {

183 
pm
 = (
ªgm©ch_t
* )
	`xmÆloc
((regmatch_t)

184 * (
	`ONIG_C
(
ªg
)->
num_mem
 + 1));

185 i‡(
pm
 =
NULL
)

186  
REG_ESPACE
;

189 
pm
 = 
pm©ch
;

192 
	`ENC_STRING_LEN
(
	`ONIG_C
(
ªg
)->
íc
, 
°r
, 
Àn
);

193 
íd
 = (
UCh¨
* )(
°r
 + 
Àn
);

194 
r
 = 
	`⁄ig_£¨ch
(
	`ONIG_C
(
ªg
), (
UCh¨
* )
°r
, 
íd
, (UChar* )str,Énd,

195 (
OnigRegi⁄
* )
pm
, 
›ti⁄s
);

197 i‡(
r
 >= 0) {

198 
r
 = 0;

199 i‡(
pm
 !
pm©ch
 &&Öm !
NULL
) {

200 
	`xmem˝y
(
pm©ch
, 
pm
, (
ªgm©ch_t
Ë* 
nm©ch
);

203 i‡(
r
 =
ONIG_MISMATCH
) {

204 
r
 = 
REG_NOMATCH
;

205 
i
 = 0; i < ()
nm©ch
; i++)

206 
pm©ch
[
i
].
rm_so
 =Öm©ch[i].
rm_eo
 = 
ONIG_REGION_NOTPOS
;

209 
r
 = 
	`⁄ig2posix_îr‹_code
(r);

212 i‡(
pm
 !
pm©ch
 &&Öm !
NULL
)

213 
	`x‰ì
(
pm
);

216 i‡(
ªg
->
ª_nsub
 > 
nm©ch
 - 1)

217 
ªg
->
ª_nsub
 = (
nm©ch
 <= 1 ? 0 :Çmatch - 1);

220  
r
;

221 
	}
}

224 
	$ªg‰ì
(
ªgex_t
* 
ªg
)

226 
	`⁄ig_‰ì
(
	`ONIG_C
(
ªg
));

227 
	}
}

231 
	$ªg_£t_ícodög
(
mb_code
)

233 
OnigEncodög
 
íc
;

235 
mb_code
) {

236 
REG_POSIX_ENCODING_ASCII
:

237 
íc
 = 
ONIG_ENCODING_ASCII
;

239 
REG_POSIX_ENCODING_EUC_JP
:

240 
íc
 = 
ONIG_ENCODING_EUC_JP
;

242 
REG_POSIX_ENCODING_SJIS
:

243 
íc
 = 
ONIG_ENCODING_SJIS
;

245 
REG_POSIX_ENCODING_UTF8
:

246 
íc
 = 
ONIG_ENCODING_UTF8
;

248 
REG_POSIX_ENCODING_UTF16_BE
:

249 
íc
 = 
ONIG_ENCODING_UTF16_BE
;

251 
REG_POSIX_ENCODING_UTF16_LE
:

252 
íc
 = 
ONIG_ENCODING_UTF16_LE
;

260 
	`⁄ig_öôülize
(0, 0);

261 
	`⁄ig_öôülize_ícodög
(
íc
);

263 
	`⁄igíc_£t_deÁu…_ícodög
(
íc
);

264 
	}
}

267 
	$ªg_«me_to_group_numbîs
(
ªgex_t
* 
ªg
,

268 c⁄° * 
«me
, c⁄° * 
«me_íd
, ** 
nums
)

270  
	`⁄ig_«me_to_group_numbîs
(
	`ONIG_C
(
ªg
), 
«me
, 
«me_íd
, 
nums
);

271 
	}
}

274 (*
func
)(c⁄° *, c⁄° *,,*,
ªgex_t
*,*);

275 
ªgex_t
* 
ªg
;

276 * 
¨g
;

277 } 
	ti_wøp
;

280 
	$i_wøµî
(c⁄° 
UCh¨
* 
«me
, c⁄° UCh¨* 
«me_íd
, 
ng
, * 
gs
,

281 
⁄ig_ªgex_t
* 
ªg
 
ARG_UNUSED
, * 
¨g
)

283 
i_wøp
* 
w¨g
 = (i_wøp* )
¨g
;

285  (*
w¨g
->
func
)(
«me
, 
«me_íd
, 
ng
, 
gs
, w¨g->
ªg
, w¨g->
¨g
);

286 
	}
}

289 
	$ªg_f‹óch_«me
(
ªgex_t
* 
ªg
,

290 (*
func
)(c⁄° *, c⁄° *,,*,
ªgex_t
*,*),

291 * 
¨g
)

293 
i_wøp
 
w¨g
;

295 
w¨g
.
func
 = func;

296 
w¨g
.
ªg
 =Ñeg;

297 
w¨g
.
¨g
 =árg;

299  
	`⁄ig_f‹óch_«me
(
	`ONIG_C
(
ªg
), 
i_wøµî
, &
w¨g
);

300 
	}
}

303 
	$ªg_numbî_of_«mes
(
ªgex_t
* 
ªg
)

305  
	`⁄ig_numbî_of_«mes
(
	`ONIG_C
(
ªg
));

306 
	}
}

	@modules/oniguruma/src/regsyntax.c

30 
	~"ªgöt.h
"

32 
OnigSy¡axTy≥
 
	gOnigSy¡axASIS
 = {

34 , 
ONIG_SYN_OP2_INEFFECTIVE_ESCAPE


36 , 
ONIG_OPTION_NONE


39 (
OnigCodePoöt
 )'\\'

40 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


41 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


42 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


43 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


44 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


48 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixBasic
 = {

49 –
SYN_POSIX_COMMON_OP
 | 
ONIG_SYN_OP_ESC_LPAREN_SUBEXP
 |

50 
ONIG_SYN_OP_ESC_BRACE_INTERVAL
 )

53 , ( 
ONIG_OPTION_SINGLELINE
 | 
ONIG_OPTION_MULTILINE
 )

56 (
OnigCodePoöt
 )'\\'

57 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


58 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


59 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


60 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


61 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


65 
OnigSy¡axTy≥
 
	gOnigSy¡axPosixExãnded
 = {

66 –
SYN_POSIX_COMMON_OP
 | 
ONIG_SYN_OP_LPAREN_SUBEXP
 |

67 
ONIG_SYN_OP_BRACE_INTERVAL
 |

68 
ONIG_SYN_OP_PLUS_ONE_INF
 | 
ONIG_SYN_OP_QMARK_ZERO_ONE
 | 
ONIG_SYN_OP_VBAR_ALT
 )

70 , ( 
ONIG_SYN_CONTEXT_INDEP_ANCHORS
 |

71 
ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS
 | 
ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS
 |

72 
ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP
 |

73 
ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC
 )

74 , ( 
ONIG_OPTION_SINGLELINE
 | 
ONIG_OPTION_MULTILINE
 )

77 (
OnigCodePoöt
 )'\\'

78 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


79 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


80 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


81 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


82 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


86 
OnigSy¡axTy≥
 
	gOnigSy¡axEmacs
 = {

87 –
ONIG_SYN_OP_DOT_ANYCHAR
 | 
ONIG_SYN_OP_BRACKET_CC
 |

88 
ONIG_SYN_OP_ESC_BRACE_INTERVAL
 |

89 
ONIG_SYN_OP_ESC_LPAREN_SUBEXP
 | 
ONIG_SYN_OP_ESC_VBAR_ALT
 |

90 
ONIG_SYN_OP_ASTERISK_ZERO_INF
 | 
ONIG_SYN_OP_PLUS_ONE_INF
 |

91 
ONIG_SYN_OP_QMARK_ZERO_ONE
 | 
ONIG_SYN_OP_DECIMAL_BACKREF
 |

92 
ONIG_SYN_OP_LINE_ANCHOR
 | 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 )

93 , 
ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR


94 , 
ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC


95 , 
ONIG_OPTION_NONE


98 (
OnigCodePoöt
 )'\\'

99 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


100 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


101 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


102 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


103 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


107 
OnigSy¡axTy≥
 
	gOnigSy¡axGªp
 = {

108 –
ONIG_SYN_OP_DOT_ANYCHAR
 | 
ONIG_SYN_OP_BRACKET_CC
 | 
ONIG_SYN_OP_POSIX_BRACKET
 |

109 
ONIG_SYN_OP_ESC_BRACE_INTERVAL
 | 
ONIG_SYN_OP_ESC_LPAREN_SUBEXP
 |

110 
ONIG_SYN_OP_ESC_VBAR_ALT
 |

111 
ONIG_SYN_OP_ASTERISK_ZERO_INF
 | 
ONIG_SYN_OP_ESC_PLUS_ONE_INF
 |

112 
ONIG_SYN_OP_ESC_QMARK_ZERO_ONE
 | 
ONIG_SYN_OP_LINE_ANCHOR
 |

113 
ONIG_SYN_OP_ESC_W_WORD
 | 
ONIG_SYN_OP_ESC_B_WORD_BOUND
 |

114 
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 | 
ONIG_SYN_OP_DECIMAL_BACKREF
 )

116 , ( 
ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC
 | 
ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC
 )

117 , 
ONIG_OPTION_NONE


120 (
OnigCodePoöt
 )'\\'

121 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


122 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


123 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


124 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


125 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


129 
OnigSy¡axTy≥
 
	gOnigSy¡axGnuRegex
 = {

130 
SYN_GNU_REGEX_OP


132 , 
SYN_GNU_REGEX_BV


133 , 
ONIG_OPTION_NONE


136 (
OnigCodePoöt
 )'\\'

137 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


138 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


139 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


140 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


141 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


145 
OnigSy¡axTy≥
 
	gOnigSy¡axJava
 = {

146 (–
SYN_GNU_REGEX_OP
 | 
ONIG_SYN_OP_QMARK_NON_GREEDY
 |

147 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 | 
ONIG_SYN_OP_ESC_C_CONTROL
 |

148 
ONIG_SYN_OP_ESC_OCTAL3
 | 
ONIG_SYN_OP_ESC_X_HEX2
 )

149 & ~
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 )

150 , ( 
ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE
 | 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
 |

151 
ONIG_SYN_OP2_OPTION_PERL
 | 
ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT
 |

152 
ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL
 | 
ONIG_SYN_OP2_CCLASS_SET_OP
 |

153 
ONIG_SYN_OP2_ESC_V_VTAB
 | 
ONIG_SYN_OP2_ESC_U_HEX4
 |

154 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
 )

155 , ( 
SYN_GNU_REGEX_BV
 | 
ONIG_SYN_DIFFERENT_LEN_ALT_LOOK_BEHIND
 )

156 , 
ONIG_OPTION_SINGLELINE


159 (
OnigCodePoöt
 )'\\'

160 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


161 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


162 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


163 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


164 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


168 
OnigSy¡axTy≥
 
	gOnigSy¡axPîl
 = {

169 (–
SYN_GNU_REGEX_OP
 | 
ONIG_SYN_OP_QMARK_NON_GREEDY
 |

170 
ONIG_SYN_OP_ESC_OCTAL3
 | 
ONIG_SYN_OP_ESC_X_HEX2
 |

171 
ONIG_SYN_OP_ESC_X_BRACE_HEX8
 | 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 |

172 
ONIG_SYN_OP_ESC_C_CONTROL
 )

173 & ~
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 )

174 , ( 
ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE
 |

175 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
 | 
ONIG_SYN_OP2_OPTION_PERL
 |

176 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
 |

177 
ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
 )

178 , 
SYN_GNU_REGEX_BV


179 , 
ONIG_OPTION_SINGLELINE


182 (
OnigCodePoöt
 )'\\'

183 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


184 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


185 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


186 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


187 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


192 
OnigSy¡axTy≥
 
	gOnigSy¡axPîl_NG
 = {

193 (–
SYN_GNU_REGEX_OP
 | 
ONIG_SYN_OP_QMARK_NON_GREEDY
 |

194 
ONIG_SYN_OP_ESC_OCTAL3
 | 
ONIG_SYN_OP_ESC_X_HEX2
 |

195 
ONIG_SYN_OP_ESC_X_BRACE_HEX8
 | 
ONIG_SYN_OP_ESC_CONTROL_CHARS
 |

196 
ONIG_SYN_OP_ESC_C_CONTROL
 )

197 & ~
ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END
 )

198 , ( 
ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE
 |

199 
ONIG_SYN_OP2_QMARK_GROUP_EFFECT
 | 
ONIG_SYN_OP2_OPTION_PERL
 |

200 
ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY
 |

201 
ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT
 |

202 
ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP
 |

203 
ONIG_SYN_OP2_ESC_K_NAMED_BACKREF
 |

204 
ONIG_SYN_OP2_ESC_G_SUBEXP_CALL
 )

205 , ( 
SYN_GNU_REGEX_BV
 |

206 
ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP
 |

207 
ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME
 )

208 , 
ONIG_OPTION_SINGLELINE


211 (
OnigCodePoöt
 )'\\'

212 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


213 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


214 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


215 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


216 , (
OnigCodePoöt
 )
ONIG_INEFFECTIVE_META_CHAR


223 
	$⁄ig_£t_deÁu…_sy¡ax
(
OnigSy¡axTy≥
* 
sy¡ax
)

225 i‡(
	`IS_NULL
(
sy¡ax
))

226 
sy¡ax
 = 
ONIG_SYNTAX_RUBY
;

228 
OnigDeÁu…Sy¡ax
 = 
sy¡ax
;

230 
	}
}

233 
	$⁄ig_c›y_sy¡ax
(
OnigSy¡axTy≥
* 
to
, OnigSy¡axTy≥* 
‰om
)

235 *
to
 = *
‰om
;

236 
	}
}

239 
	$⁄ig_£t_sy¡ax_›
(
OnigSy¡axTy≥
* 
sy¡ax
, 
›
)

241 
sy¡ax
->
›
 = op;

242 
	}
}

245 
	$⁄ig_£t_sy¡ax_›2
(
OnigSy¡axTy≥
* 
sy¡ax
, 
›2
)

247 
sy¡ax
->
›2
 = op2;

248 
	}
}

251 
	$⁄ig_£t_sy¡ax_behavi‹
(
OnigSy¡axTy≥
* 
sy¡ax
, 
behavi‹
)

253 
sy¡ax
->
behavi‹
 = behavior;

254 
	}
}

257 
	$⁄ig_£t_sy¡ax_›ti⁄s
(
OnigSy¡axTy≥
* 
sy¡ax
, 
OnigO±i⁄Ty≥
 
›ti⁄s
)

259 
sy¡ax
->
›ti⁄s
 = options;

260 
	}
}

263 
	$⁄ig_gë_sy¡ax_›
(
OnigSy¡axTy≥
* 
sy¡ax
)

265  
sy¡ax
->
›
;

266 
	}
}

269 
	$⁄ig_gë_sy¡ax_›2
(
OnigSy¡axTy≥
* 
sy¡ax
)

271  
sy¡ax
->
›2
;

272 
	}
}

275 
	$⁄ig_gë_sy¡ax_behavi‹
(
OnigSy¡axTy≥
* 
sy¡ax
)

277  
sy¡ax
->
behavi‹
;

278 
	}
}

280 
OnigO±i⁄Ty≥


281 
	$⁄ig_gë_sy¡ax_›ti⁄s
(
OnigSy¡axTy≥
* 
sy¡ax
)

283  
sy¡ax
->
›ti⁄s
;

284 
	}
}

286 #ifde‡
USE_VARIABLE_META_CHARS


287 
	$⁄ig_£t_mëa_ch¨
(
OnigSy¡axTy≥
* 
íc
,

288 
wh©
, 
OnigCodePoöt
 
code
)

290 
wh©
) {

291 
ONIG_META_CHAR_ESCAPE
:

292 
íc
->
mëa_ch¨_èbÀ
.
esc
 = 
code
;

294 
ONIG_META_CHAR_ANYCHAR
:

295 
íc
->
mëa_ch¨_èbÀ
.
™ych¨
 = 
code
;

297 
ONIG_META_CHAR_ANYTIME
:

298 
íc
->
mëa_ch¨_èbÀ
.
™ytime
 = 
code
;

300 
ONIG_META_CHAR_ZERO_OR_ONE_TIME
:

301 
íc
->
mëa_ch¨_èbÀ
.
zîo_‹_⁄e_time
 = 
code
;

303 
ONIG_META_CHAR_ONE_OR_MORE_TIME
:

304 
íc
->
mëa_ch¨_èbÀ
.
⁄e_‹_m‹e_time
 = 
code
;

306 
ONIG_META_CHAR_ANYCHAR_ANYTIME
:

307 
íc
->
mëa_ch¨_èbÀ
.
™ych¨_™ytime
 = 
code
;

310  
ONIGERR_INVALID_ARGUMENT
;

314 
	}
}

	@modules/oniguruma/src/regtrav.c

30 
	~"ªgöt.h
"

32 #ifde‡
USE_CAPTURE_HISTORY


35 
	$ˇ±uª_åì_åavî£
(
OnigC≠tuªTªeNode
* 
node
, 
©
,

36 (*
ˇŒback_func
)(,,,,,*),

37 
Àvñ
, * 
¨g
)

39 
r
, 
i
;

41 i‡(
node
 =(
OnigC≠tuªTªeNode
* )0)

44 i‡((
©
 & 
ONIG_TRAVERSE_CALLBACK_AT_FIRST
) != 0) {

45 
r
 = (*
ˇŒback_func
)(
node
->
group
,Çode->
beg
,Çode->
íd
,

46 
Àvñ
, 
ONIG_TRAVERSE_CALLBACK_AT_FIRST
, 
¨g
);

47 i‡(
r
 != 0) Ñ;

50 
i
 = 0; i < 
node
->
num_chûds
; i++) {

51 
r
 = 
	`ˇ±uª_åì_åavî£
(
node
->
chûds
[
i
], 
©
,

52 
ˇŒback_func
, 
Àvñ
 + 1, 
¨g
);

53 i‡(
r
 != 0) Ñ;

56 i‡((
©
 & 
ONIG_TRAVERSE_CALLBACK_AT_LAST
) != 0) {

57 
r
 = (*
ˇŒback_func
)(
node
->
group
,Çode->
beg
,Çode->
íd
,

58 
Àvñ
, 
ONIG_TRAVERSE_CALLBACK_AT_LAST
, 
¨g
);

59 i‡(
r
 != 0) Ñ;

63 
	}
}

67 
	$⁄ig_ˇ±uª_åì_åavî£
(
OnigRegi⁄
* 
ªgi⁄
, 
©
,

68 (*
ˇŒback_func
)(,,,,,*), * 
¨g
)

70 #ifde‡
USE_CAPTURE_HISTORY


71  
	`ˇ±uª_åì_åavî£
(
ªgi⁄
->
hi°‹y_roŸ
, 
©
,

72 
ˇŒback_func
, 0, 
¨g
);

74  
ONIG_NO_SUPPORT_CONFIG
;

76 
	}
}

	@modules/oniguruma/src/regversion.c

30 
	~"c⁄fig.h
"

31 
	~"ªgöt.h
"

32 
	~<°dio.h
>

35 
	$⁄ig_vîsi⁄
()

37 
s
[12];

39 
	`x¢¥ötf
(
s
, (s), "%d.%d.%d",

40 
ONIGURUMA_VERSION_MAJOR
,

41 
ONIGURUMA_VERSION_MINOR
,

42 
ONIGURUMA_VERSION_TEENY
);

43  
s
;

44 
	}
}

47 
	$⁄ig_c›yright
()

49 
s
[58];

51 
	`x¢¥ötf
(
s
, (s),

53 
ONIGURUMA_VERSION_MAJOR
,

54 
ONIGURUMA_VERSION_MINOR
,

55 
ONIGURUMA_VERSION_TEENY
);

56  
s
;

57 
	}
}

	@modules/oniguruma/src/sjis.c

30 
	~"ªgöt.h
"

32 c⁄° 
	gEncLí_SJIS
[] = {

51 c⁄° 
	gSJIS_CAN_BE_TRAIL_TABLE
[256] = {

70 
	#SJIS_ISMB_FIRST
(
byã
Ë(
EncLí_SJIS
[byã] > 1)

	)

71 
	#SJIS_ISMB_TRAIL
(
byã
Ë
SJIS_CAN_BE_TRAIL_TABLE
[(byã)]

	)

74 
	$mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

76  
EncLí_SJIS
[*
p
];

77 
	}
}

80 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

82 
p
 < 
íd
) {

83 i‡(*
p
 < 0x80) {

84 
p
++;

86 i‡(*
p
 < 0xa1) {

87 i‡(*
p
 == 0xa0 || *p == 0x80)

88  
FALSE
;

89 
p
++;

90 i‡(
p
 >
íd
Ë 
FALSE
;

91 i‡(*
p
 < 0x40 || *p > 0xfc || *p == 0x7f)

92  
FALSE
;

93 
p
++;

95 i‡(*
p
 < 0xe0) {

96 
p
++;

98 i‡(*
p
 < 0xfd) {

99 
p
++;

100 i‡(
p
 >
íd
Ë 
FALSE
;

101 i‡(*
p
 < 0x40 || *p > 0xfc || *p == 0x7f)

102  
FALSE
;

103 
p
++;

106  
FALSE
;

109  
TRUE
;

110 
	}
}

113 
	$code_to_mb˛í
(
OnigCodePoöt
 
code
)

115 i‡(
code
 < 256) {

116 i‡(
EncLí_SJIS
[()
code
] == 1)

121 i‡(
code
 <= 0xffff) {

125  
ONIGERR_INVALID_CODE_POINT_VALUE
;

126 
	}
}

128 
OnigCodePoöt


129 
	$mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

131 
c
, 
i
, 
Àn
;

132 
OnigCodePoöt
 
n
;

134 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_SJIS
, 
p
);

135 
c
 = *
p
++;

136 
n
 = 
c
;

137 i‡(
Àn
 =1Ë 
n
;

139 
i
 = 1; i < 
Àn
; i++) {

140 i‡(
p
 >
íd
) ;

141 
c
 = *
p
++;

142 
n
 <<8;Ç +
c
;

144  
n
;

145 
	}
}

148 
	$code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

150 
UCh¨
 *
p
 = 
buf
;

152 i‡((
code
 & 0xff00Ë!0Ë*
p
++ = (
UCh¨
 )(((code >> 8) & 0xff));

153 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

156 i‡(
	`í˛í
(
ONIG_ENCODING_SJIS
, 
buf
Ë!(
p
 - buf))

157  
REGERR_INVALID_CODE_POINT_VALUE
;

159  
p
 - 
buf
;

160 
	}
}

163 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
,

164 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
, UCh¨* 
lowî
)

166 c⁄° 
UCh¨
* 
p
 = *
µ
;

168 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

169 *
lowî
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

170 (*
µ
)++;

174 
i
;

175 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_SJIS
, 
p
);

177 
i
 = 0; i < 
Àn
; i++) {

178 *
lowî
++ = *
p
++;

180 (*
µ
Ë+
Àn
;

181  
Àn
;

183 
	}
}

187 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
,

188 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

190  
	`⁄igíc_mbn_is_mbc_ambiguous
(
ONIG_ENCODING_SJIS
, 
Êag
, 
µ
, 
íd
);

192 
	}
}

197 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

199 i‡(
code
 < 128)

200  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

202 i‡(
	`CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
)) {

203  (
	`code_to_mb˛í
(
code
Ë> 1 ? 
TRUE
 : 
FALSE
);

207  
FALSE
;

208 
	}
}

211 
UCh¨
*

212 
	$À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

214 c⁄° 
UCh¨
 *
p
;

215 
Àn
;

217 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

218 
p
 = 
s
;

220 i‡(
	`SJIS_ISMB_TRAIL
(*
p
)) {

221 
p
 > 
°¨t
) {

222 i‡(! 
	`SJIS_ISMB_FIRST
(*--
p
)) {

223 
p
++;

228 
Àn
 = 
	`í˛í
(
ONIG_ENCODING_SJIS
, 
p
);

229 i‡(
p
 + 
Àn
 > 
s
Ë (
UCh¨
* )p;

230 
p
 +
Àn
;

231  (
UCh¨
* )(
p
 + ((
s
 -Ö) & ~1));

232 
	}
}

235 
	$is_Ælowed_ªvî£_m©ch
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

237 c⁄° 
UCh¨
 
c
 = *
s
;

238  (
	`SJIS_ISMB_TRAIL
(
c
Ë? 
FALSE
 : 
TRUE
);

239 
	}
}

242 c⁄° 
OnigCodePoöt
 
	gCR_Húag™a
[] = {

247 c⁄° 
OnigCodePoöt
 
	gCR_K©ak™a
[] = {

255 c⁄° 
OnigCodePoöt
* 
	gPr›îtyLi°
[] = {

256 
CR_Húag™a
,

257 
CR_K©ak™a


262 
	$¥›îty_«me_to_˘y≥
(
OnigEncodög
 
íc
, 
UCh¨
* 
p
, UCh¨* 
íd
)

264 
Pr›îtyNameCty≥
* 
pc
;

265 
Àn
 = 
íd
 - 
p
;

266 
q
[32];

268 i‡(
Àn
 < (
q
) - 1) {

269 
	`xmem˝y
(
q
, 
p
, (
size_t
 )
Àn
);

270 
q
[
Àn
] = '\0';

271 
pc
 = 
	`euc_jp_lookup_¥›îty_«me
(
q
, 
Àn
);

272 i‡(
pc
 != 0)

273  
pc
->
˘y≥
;

276  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

277 
	}
}

280 
	$is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

282 i‡(
˘y≥
 <
ONIGENC_MAX_STD_CTYPE
) {

283 i‡(
code
 < 128)

284  
	`ONIGENC_IS_ASCII_CODE_CTYPE
(
code
, 
˘y≥
);

286 i‡(
	`CTYPE_IS_WORD_GRAPH_PRINT
(
˘y≥
)) {

287  (
	`code_to_mb˛í
(
code
Ë> 1 ? 
TRUE
 : 
FALSE
);

292 
˘y≥
 -(
ONIGENC_MAX_STD_CTYPE
 + 1);

293 i‡(
˘y≥
 >()((
Pr›îtyLi°
)/(PropertyList[0])))

294  
ONIGERR_TYPE_BUG
;

296  
	`⁄ig_is_ö_code_ønge
((
UCh¨
* )
Pr›îtyLi°
[
˘y≥
], 
code
);

299  
FALSE
;

300 
	}
}

303 
	$gë_˘y≥_code_ønge
(
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
* 
sb_out
,

304 c⁄° 
OnigCodePoöt
* 
ønges
[])

306 i‡(
˘y≥
 <
ONIGENC_MAX_STD_CTYPE
) {

307  
ONIG_NO_SUPPORT_CONFIG
;

310 *
sb_out
 = 0x80;

312 
˘y≥
 -(
ONIGENC_MAX_STD_CTYPE
 + 1);

313 i‡(
˘y≥
 >(
OnigCty≥
 )((
Pr›îtyLi°
)/(PropertyList[0])))

314  
ONIGERR_TYPE_BUG
;

316 *
ønges
 = 
Pr›îtyLi°
[
˘y≥
];

319 
	}
}

321 
OnigEncodögTy≥
 
	gOnigEncodögSJIS
 = {

322 
mbc_íc_Àn
,

326 
⁄igíc_is_mbc_√wlöe_0x0a
,

327 
mbc_to_code
,

328 
code_to_mb˛í
,

329 
code_to_mbc
,

330 
mbc_ˇ£_fﬁd
,

331 
⁄igíc_ascii_≠∂y_Æl_ˇ£_fﬁd
,

332 
⁄igíc_ascii_gë_ˇ£_fﬁd_codes_by_°r
,

333 
¥›îty_«me_to_˘y≥
,

334 
is_code_˘y≥
,

335 
gë_˘y≥_code_ønge
,

336 
À·_adju°_ch¨_hód
,

337 
is_Ælowed_ªvî£_m©ch
,

338 
NULL
,

339 
NULL
,

340 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/sjis_prop.c

34 
	~<°rög.h
>

35 
	~"ªgíc.h
"

37 
	#TOTAL_KEYWORDS
 16

	)

38 
	#MIN_WORD_LENGTH
 4

	)

39 
	#MAX_WORD_LENGTH
 8

	)

40 
	#MIN_HASH_VALUE
 4

	)

41 
	#MAX_HASH_VALUE
 55

	)

44 #ifde‡
__GNUC__


45 
__ölöe


47 #ifde‡
__˝lu•lus


48 
ölöe


52 
	$hash
 (c⁄° *
°r
, 
Àn
)

54 
asso_vÆues
[] =

83  
Àn
 + 
asso_vÆues
[()
°r
[2]] +ásso_values[()str[0]];

84 
	}
}

86 #ifde‡
__GNUC__


87 
	g__ölöe


88 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


89 
__©åibuã__
 ((
__gnu_ölöe__
))

92 
Pr›îtyNameCty≥
 *

93 
	$sjis_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

95 
Pr›îtyNameCty≥
 
w‹dli°
[] =

145 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

147 
key
 = 
	`hash
 (
°r
, 
Àn
);

149 i‡(
key
 <
MAX_HASH_VALUE
 && key >= 0)

151 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

153 i‡(*
°r
 =*
s
 && !
	`°rcmp
 (str + 1, s + 1))

154  &
w‹dli°
[
key
];

158 
	}
}

	@modules/oniguruma/src/st.c

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

9 #ifde‡
_WIN32


10 
	~<mÆloc.h
>

13 
	~"ªgöt.h
"

14 
	~"°.h
"

16 
°_èbÀ_íåy
 
	t°_èbÀ_íåy
;

18 
	s°_èbÀ_íåy
 {

19 
	mhash
;

20 
°_d©a_t
 
	mkey
;

21 
°_d©a_t
 
	mªc‹d
;

22 
°_èbÀ_íåy
 *
	m√xt
;

25 
	#ST_DEFAULT_MAX_DENSITY
 5

	)

26 
	#ST_DEFAULT_INIT_TABLE_SIZE
 11

	)

38 
numcmp
(, );

39 
numhash
();

40 
°_hash_ty≥
 
	gty≥_numhash
 = {

41 
numcmp
,

42 
numhash
,

46 
°rhash
(const *);

47 
°_hash_ty≥
 
	gty≥_°rhash
 = {

48 
°rcmp
,

49 
°rhash
,

52 
ªhash
(
°_èbÀ
 *);

54 
	#Æloc
(
ty≥
Ë—y≥*)
	`xmÆloc
(()—y≥))

	)

55 
	#CÆloc
(
n
,
s
Ë(*)
	`xˇŒoc
(“),(s))

	)

57 
	#EQUAL
(
èbÀ
,
x
,
y
Ë((x)==(yË|| (*èbÀ->
ty≥
->
com∑ª
)((x),(y)Ë=0)

	)

59 
	#do_hash
(
key
,
èbÀ
Ë()(*—abÀ)->
ty≥
->
hash
)((key))

	)

60 
	#do_hash_bö
(
key
,
èbÀ
Ë(
	`do_hash
(key,ÅabÀ)%—abÀ)->
num_bös
)

	)

66 
	#MINSIZE
 8

	)

71 c⁄° 
	g¥imes
[] = {

104 
	$√w_size
(
size
)

105 
size
;

107 
i
;

110 
i
=3; i<31; i++) {

111 i‡((1<<
i
Ë> 
size
)  1<<i;

115 
√wsize
;

117 
i
 = 0, 
√wsize
 = 
MINSIZE
;

118 
i
 < ()((
¥imes
)/(primes[0]));

119 
i
++, 
√wsize
 <<= 1)

121 i‡(
√wsize
 > 
size
Ë 
¥imes
[
i
];

126 
	}
}

128 #ifde‡
HASH_LOG


129 
	gcﬁlisi⁄
 = 0;

130 
	göô_°
 = 0;

133 
	$°©_cﬁ
()

135 
FILE
 *
f
 = 
	`f›í
("/tmp/col", "w");

136 i‡(
f
 == 0)  ;

138 (Ë
	`Ârötf
(
f
, "cﬁlisi⁄: %d\n", 
cﬁlisi⁄
);

139 (Ë
	`f˛o£
(
f
);

140 
	}
}

143 
°_èbÀ
*

144 
	$°_öô_èbÀ_wôh_size
(
ty≥
, 
size
)

145 
°_hash_ty≥
 *
ty≥
;

146 
size
;

148 
°_èbÀ
 *
tbl
;

150 #ifde‡
HASH_LOG


151 i‡(
öô_°
 == 0) {

152 
öô_°
 = 1;

153 
	`©exô
(
°©_cﬁ
);

157 
size
 = 
	`√w_size
(size);

159 
tbl
 = 
	`Æloc
(
°_èbÀ
);

160 i‡(
tbl
 == 0)  0;

162 
tbl
->
ty≥
 =Åype;

163 
tbl
->
num_íåõs
 = 0;

164 
tbl
->
num_bös
 = 
size
;

165 
tbl
->
bös
 = (
°_èbÀ_íåy
 **)
	`CÆloc
(
size
, (st_table_entry*));

166 i‡(
tbl
->
bös
 == 0) {

167 
	`‰ì
(
tbl
);

171  
tbl
;

172 
	}
}

174 
°_èbÀ
*

175 
	$°_öô_èbÀ
(
ty≥
)

176 
°_hash_ty≥
 *
ty≥
;

178  
	`°_öô_èbÀ_wôh_size
(
ty≥
, 0);

179 
	}
}

181 
°_èbÀ
*

182 
	$°_öô_numèbÀ
()

184  
	`°_öô_èbÀ
(&
ty≥_numhash
);

185 
	}
}

187 
°_èbÀ
*

188 
	$°_öô_numèbÀ_wôh_size
(
size
)

189 
size
;

191  
	`°_öô_èbÀ_wôh_size
(&
ty≥_numhash
, 
size
);

192 
	}
}

194 
°_èbÀ
*

195 
	$°_öô_°πabÀ
()

197  
	`°_öô_èbÀ
(&
ty≥_°rhash
);

198 
	}
}

200 
°_èbÀ
*

201 
	$°_öô_°πabÀ_wôh_size
(
size
)

202 
size
;

204  
	`°_öô_èbÀ_wôh_size
(&
ty≥_°rhash
, 
size
);

205 
	}
}

208 
	$°_‰ì_èbÀ
(
èbÀ
)

209 
°_èbÀ
 *
èbÀ
;

211 
°_èbÀ_íåy
 *
±r
, *
√xt
;

212 
i
;

214 
i
 = 0; i < 
èbÀ
->
num_bös
; i++) {

215 
±r
 = 
èbÀ
->
bös
[
i
];

216 
±r
 != 0) {

217 
√xt
 = 
±r
->next;

218 
	`‰ì
(
±r
);

219 
±r
 = 
√xt
;

222 
	`‰ì
(
èbÀ
->
bös
);

223 
	`‰ì
(
èbÀ
);

224 
	}
}

226 
	#PTR_NOT_EQUAL
(
èbÀ
, 
±r
, 
hash_vÆ
, 
key
) \

227 ((
±r
Ë!0 && (±r->
hash
 !(
hash_vÆ
Ë|| !
	`EQUAL
((
èbÀ
), (
key
), (±r)->key)))

	)

229 #ifde‡
HASH_LOG


230 
	#COLLISION
 
cﬁlisi⁄
++

	)

232 
	#COLLISION


	)

235 
	#FIND_ENTRY
(
èbÀ
, 
±r
, 
hash_vÆ
, 
bö_pos
) do {\

236 
bö_pos
 = 
hash_vÆ
%(
èbÀ
)->
num_bös
;\

237 
±r
 = (
èbÀ
)->
bös
[
bö_pos
];\

238 i‡(
	`PTR_NOT_EQUAL
(
èbÀ
, 
±r
, 
hash_vÆ
, 
key
)) {\

239 
COLLISION
;\

240 
	`PTR_NOT_EQUAL
(
èbÀ
, 
±r
->
√xt
, 
hash_vÆ
, 
key
)) {\

241 
±r
 =Öå->
√xt
;\

243 
±r
 =Öå->
√xt
;\

245 } 0)

	)

248 
	$°_lookup
(
èbÀ
, 
key
, 
vÆue
)

249 
°_èbÀ
 *
èbÀ
;

250 
°_d©a_t
 
key
;

251 
°_d©a_t
 *
vÆue
;

253 
hash_vÆ
, 
bö_pos
;

254 
°_èbÀ_íåy
 *
±r
;

256 
hash_vÆ
 = 
	`do_hash
(
key
, 
èbÀ
);

257 
	`FIND_ENTRY
(
èbÀ
, 
±r
, 
hash_vÆ
, 
bö_pos
);

259 i‡(
±r
 == 0) {

263 i‡(
vÆue
 !0Ë*vÆuê
±r
->
ªc‹d
;

266 
	}
}

268 
	#ADD_DIRECT
(
èbÀ
, 
key
, 
vÆue
, 
hash_vÆ
, 
bö_pos
)\

270 
°_èbÀ_íåy
 *
íåy
;\

271 i‡(
èbÀ
->
num_íåõs
/—abÀ->
num_bös
Ë> 
ST_DEFAULT_MAX_DENSITY
) {\

272 
	`ªhash
(
èbÀ
);\

273 
bö_pos
 = 
hash_vÆ
 % 
èbÀ
->
num_bös
;\

276 
íåy
 = 
	`Æloc
(
°_èbÀ_íåy
);\

278 
íåy
->
hash
 = 
hash_vÆ
;\

279 
íåy
->
key
 = key;\

280 
íåy
->
ªc‹d
 = 
vÆue
;\

281 
íåy
->
√xt
 = 
èbÀ
->
bös
[
bö_pos
];\

282 
èbÀ
->
bös
[
bö_pos
] = 
íåy
;\

283 
èbÀ
->
num_íåõs
++;\

284 } 0)

	)

287 
	$°_ö£π
(
èbÀ
, 
key
, 
vÆue
)

288 
°_èbÀ
 *
èbÀ
;

289 
°_d©a_t
 
key
;

290 
°_d©a_t
 
vÆue
;

292 
hash_vÆ
, 
bö_pos
;

293 
°_èbÀ_íåy
 *
±r
;

295 
hash_vÆ
 = 
	`do_hash
(
key
, 
èbÀ
);

296 
	`FIND_ENTRY
(
èbÀ
, 
±r
, 
hash_vÆ
, 
bö_pos
);

298 i‡(
±r
 == 0) {

299 
	`ADD_DIRECT
(
èbÀ
, 
key
, 
vÆue
, 
hash_vÆ
, 
bö_pos
);

303 
±r
->
ªc‹d
 = 
vÆue
;

306 
	}
}

309 
	$°_add_dúe˘
(
èbÀ
, 
key
, 
vÆue
)

310 
°_èbÀ
 *
èbÀ
;

311 
°_d©a_t
 
key
;

312 
°_d©a_t
 
vÆue
;

314 
hash_vÆ
, 
bö_pos
;

316 
hash_vÆ
 = 
	`do_hash
(
key
, 
èbÀ
);

317 
bö_pos
 = 
hash_vÆ
 % 
èbÀ
->
num_bös
;

318 
	`ADD_DIRECT
(
èbÀ
, 
key
, 
vÆue
, 
hash_vÆ
, 
bö_pos
);

319 
	}
}

322 
	$ªhash
(
èbÀ
)

323 
°_èbÀ
 *
èbÀ
;

325 
°_èbÀ_íåy
 *
±r
, *
√xt
, **
√w_bös
;

326 
i
, 
ﬁd_num_bös
 = 
èbÀ
->
num_bös
, 
√w_num_bös
;

327 
hash_vÆ
;

329 
√w_num_bös
 = 
	`√w_size
(
ﬁd_num_bös
+1);

330 
√w_bös
 = (
°_èbÀ_íåy
**)
	`CÆloc
(
√w_num_bös
, (st_table_entry*));

331 i‡(
√w_bös
 == 0) {

335 
i
 = 0; i < 
ﬁd_num_bös
; i++) {

336 
±r
 = 
èbÀ
->
bös
[
i
];

337 
±r
 != 0) {

338 
√xt
 = 
±r
->next;

339 
hash_vÆ
 = 
±r
->
hash
 % 
√w_num_bös
;

340 
±r
->
√xt
 = 
√w_bös
[
hash_vÆ
];

341 
√w_bös
[
hash_vÆ
] = 
±r
;

342 
±r
 = 
√xt
;

345 
	`‰ì
(
èbÀ
->
bös
);

346 
èbÀ
->
num_bös
 = 
√w_num_bös
;

347 
èbÀ
->
bös
 = 
√w_bös
;

348 
	}
}

350 
°_èbÀ
*

351 
	$°_c›y
(
ﬁd_èbÀ
)

352 
°_èbÀ
 *
ﬁd_èbÀ
;

354 
°_èbÀ
 *
√w_èbÀ
;

355 
°_èbÀ_íåy
 *
±r
, *
íåy
;

356 
i
, 
num_bös
 = 
ﬁd_èbÀ
->num_bins;

358 
√w_èbÀ
 = 
	`Æloc
(
°_èbÀ
);

359 i‡(
√w_èbÀ
 == 0) {

363 *
√w_èbÀ
 = *
ﬁd_èbÀ
;

364 
√w_èbÀ
->
bös
 = (
°_èbÀ_íåy
**)

365 
	`CÆloc
(()
num_bös
, (
°_èbÀ_íåy
*));

367 i‡(
√w_èbÀ
->
bös
 == 0) {

368 
	`‰ì
(
√w_èbÀ
);

372 
i
 = 0; i < 
num_bös
; i++) {

373 
√w_èbÀ
->
bös
[
i
] = 0;

374 
±r
 = 
ﬁd_èbÀ
->
bös
[
i
];

375 
±r
 != 0) {

376 
íåy
 = 
	`Æloc
(
°_èbÀ_íåy
);

377 i‡(
íåy
 == 0) {

378 
	`‰ì
(
√w_èbÀ
->
bös
);

379 
	`‰ì
(
√w_èbÀ
);

382 *
íåy
 = *
±r
;

383 
íåy
->
√xt
 = 
√w_èbÀ
->
bös
[
i
];

384 
√w_èbÀ
->
bös
[
i
] = 
íåy
;

385 
±r
 =Öå->
√xt
;

388  
√w_èbÀ
;

389 
	}
}

392 
	$°_dñëe
(
èbÀ
, 
key
, 
vÆue
)

393 
°_èbÀ
 *
èbÀ
;

394 
°_d©a_t
 *
key
;

395 
°_d©a_t
 *
vÆue
;

397 
hash_vÆ
;

398 
°_èbÀ_íåy
 *
tmp
;

399 
°_èbÀ_íåy
 *
±r
;

401 
hash_vÆ
 = 
	`do_hash_bö
(*
key
, 
èbÀ
);

402 
±r
 = 
èbÀ
->
bös
[
hash_vÆ
];

404 i‡(
±r
 == 0) {

405 i‡(
vÆue
 != 0) *value = 0;

409 i‡(
	`EQUAL
(
èbÀ
, *
key
, 
±r
->key)) {

410 
èbÀ
->
bös
[
hash_vÆ
] = 
±r
->
√xt
;

411 
èbÀ
->
num_íåõs
--;

412 i‡(
vÆue
 !0Ë*vÆuê
±r
->
ªc‹d
;

413 *
key
 = 
±r
->key;

414 
	`‰ì
(
±r
);

418 ; 
±r
->
√xt
 != 0;Ötr =Ötr->next) {

419 i‡(
	`EQUAL
(
èbÀ
, 
±r
->
√xt
->
key
, *key)) {

420 
tmp
 = 
±r
->
√xt
;

421 
±r
->
√xt
 =Ötr->next->next;

422 
èbÀ
->
num_íåõs
--;

423 i‡(
vÆue
 !0Ë*vÆuê
tmp
->
ªc‹d
;

424 *
key
 = 
tmp
->key;

425 
	`‰ì
(
tmp
);

431 
	}
}

434 
	$°_dñëe_ß„
(
èbÀ
, 
key
, 
vÆue
, 
√vî
)

435 
°_èbÀ
 *
èbÀ
;

436 
°_d©a_t
 *
key
;

437 
°_d©a_t
 *
vÆue
;

438 
°_d©a_t
 
√vî
;

440 
hash_vÆ
;

441 
°_èbÀ_íåy
 *
±r
;

443 
hash_vÆ
 = 
	`do_hash_bö
(*
key
, 
èbÀ
);

444 
±r
 = 
èbÀ
->
bös
[
hash_vÆ
];

446 i‡(
±r
 == 0) {

447 i‡(
vÆue
 != 0) *value = 0;

451 ; 
±r
 !0;Öå =Öå->
√xt
) {

452 i‡((
±r
->
key
 !
√vî
Ë&& 
	`EQUAL
(
èbÀ
,Ötr->key, *key)) {

453 
èbÀ
->
num_íåõs
--;

454 *
key
 = 
±r
->key;

455 i‡(
vÆue
 !0Ë*vÆuê
±r
->
ªc‹d
;

456 
±r
->
key
 =Öå->
ªc‹d
 = 
√vî
;

462 
	}
}

465 #i‡
deföed
(
__GNUC__
)

466 
dñëe_√vî
(
°_d©a_t
 
key
 
__©åibuã__
 ((
unu£d
)), st_d©a_à
vÆue
,

467 
°_d©a_t
 
√vî
)

469 
	$dñëe_√vî
(
key
, 
vÆue
, 
√vî
)

470 
°_d©a_t
 
key
, 
vÆue
, 
√vî
;

473 i‡(
vÆue
 =
√vî
Ë 
ST_DELETE
;

474  
ST_CONTINUE
;

475 
	}
}

478 
	$°_˛ónup_ß„
(
èbÀ
, 
√vî
)

479 
°_èbÀ
 *
èbÀ
;

480 
°_d©a_t
 
√vî
;

482 
num_íåõs
 = 
èbÀ
->num_entries;

484 
	`°_f‹óch
(
èbÀ
, 
dñëe_√vî
, 
√vî
);

485 
èbÀ
->
num_íåõs
 =Çum_entries;

486 
	}
}

489 
	$°_f‹óch
(
èbÀ
, 
func
, 
¨g
)

490 
°_èbÀ
 *
èbÀ
;

491 (*
func
)();

492 
°_d©a_t
 
¨g
;

494 
°_èbÀ_íåy
 *
±r
, *
œ°
, *
tmp
;

495 
°_ªtvÆ
 
ªtvÆ
;

496 
i
;

498 
i
 = 0; i < 
èbÀ
->
num_bös
; i++) {

499 
œ°
 = 0;

500 
±r
 = 
èbÀ
->
bös
[
i
];Ötr != 0;) {

501 
ªtvÆ
 = (*
func
)(
±r
->
key
,Öå->
ªc‹d
, 
¨g
);

502 
ªtvÆ
) {

503 
ST_CHECK
:

504 
tmp
 = 0;

505 i‡(
i
 < 
èbÀ
->
num_bös
) {

506 
tmp
 = 
èbÀ
->
bös
[
i
];Åmp;ÅmpÒmp->
√xt
) {

507 i‡(
tmp
 =
±r
) ;

510 i‡(!
tmp
) {

515 
ST_CONTINUE
:

516 
œ°
 = 
±r
;

517 
±r
 =Öå->
√xt
;

519 
ST_STOP
:

521 
ST_DELETE
:

522 
tmp
 = 
±r
;

523 i‡(
œ°
 == 0) {

524 
èbÀ
->
bös
[
i
] = 
±r
->
√xt
;

527 
œ°
->
√xt
 = 
±r
->next;

529 
±r
 =Öå->
√xt
;

530 
	`‰ì
(
tmp
);

531 
èbÀ
->
num_íåõs
--;

536 
	}
}

539 
	$°rhash
(
°rög
)

540 c⁄° *
°rög
;

542 
c
;

544 #ifde‡
HASH_ELFHASH


545 
h
 = 0, 
g
;

547 (
c
 = *
°rög
++) != '\0') {

548 
h
 = ( h << 4 ) + 
c
;

549 i‡–
g
 = 
h
 & 0xF0000000 )

550 
h
 ^
g
 >> 24;

551 
h
 &~
g
;

553  
h
;

554 #ñi‡
HASH_PERL


555 
vÆ
 = 0;

557 (
c
 = *
°rög
++) != '\0') {

558 
vÆ
 +
c
;

559 
vÆ
 += (val << 10);

560 
vÆ
 ^= (val >> 6);

562 
vÆ
 += (val << 3);

563 
vÆ
 ^= (val >> 11);

565  
vÆ
 + (val << 15);

567 
vÆ
 = 0;

569 (
c
 = *
°rög
++) != '\0') {

570 
vÆ
 = vÆ*997 + 
c
;

573  
vÆ
 + (val>>5);

575 
	}
}

578 
	$numcmp
(
x
, 
y
)

579 
x
, 
y
;

581  
x
 !
y
;

582 
	}
}

585 
	$numhash
(
n
)

586 
n
;

588  
n
;

589 
	}
}

	@modules/oniguruma/src/st.h

5 #i‚de‡
ST_INCLUDED


7 
	#ST_INCLUDED


	)

9 #ifde‡
_WIN32


10 
	~<wödows.h
>

11 
ULONG_PTR
 
	t°_d©a_t
;

13 
	t°_d©a_t
;

15 
	#ST_DATA_T_DEFINED


	)

17 
°_èbÀ
 
	t°_èbÀ
;

19 
	s°_hash_ty≥
 {

20 (*
	mcom∑ª
)();

21 (*
	mhash
)();

24 
	s°_èbÀ
 {

25 
°_hash_ty≥
 *
	mty≥
;

26 
	mnum_bös
;

27 
	mnum_íåõs
;

28 
°_èbÀ_íåy
 **
	mbös
;

31 
	#°_is_membî
(
èbÀ
,
key
Ë
	`°_lookup
—abÀ,key,(
°_d©a_t
 *)0)

	)

33 
	e°_ªtvÆ
 {
	mST_CONTINUE
, 
	mST_STOP
, 
	mST_DELETE
, 
	mST_CHECK
};

35 #i‚de‡
_


36 
	#_
(
¨gs
Ë
	)
args

38 #i‚de‡
ANYARGS


39 #ifde‡
__˝lu•lus


40 
	#ANYARGS
 ...

	)

42 
	#ANYARGS


	)

46 
°_èbÀ
 *
°_öô_èbÀ
 
_
((
°_hash_ty≥
 *));

47 
°_èbÀ
 *
°_öô_èbÀ_wôh_size
 
_
((
°_hash_ty≥
 *, ));

48 
°_èbÀ
 *
°_öô_numèbÀ
 
_
(());

49 
°_èbÀ
 *
°_öô_numèbÀ_wôh_size
 
_
(());

50 
°_èbÀ
 *
°_öô_°πabÀ
 
_
(());

51 
°_èbÀ
 *
°_öô_°πabÀ_wôh_size
 
_
(());

52 
°_dñëe
 
_
((
°_èbÀ
 *, 
°_d©a_t
 *, st_data_t *));

53 
°_dñëe_ß„
 
_
((
°_èbÀ
 *, 
°_d©a_t
 *, st_data_t *, st_data_t));

54 
°_ö£π
 
_
((
°_èbÀ
 *, 
°_d©a_t
, st_data_t));

55 
°_lookup
 
_
((
°_èbÀ
 *, 
°_d©a_t
, st_data_t *));

56 
°_f‹óch
 
_
((
°_èbÀ
 *, (*)(
ANYARGS
), 
°_d©a_t
));

57 
°_add_dúe˘
 
	`_
((
°_èbÀ
 *, 
°_d©a_t
, st_data_t));

58 
°_‰ì_èbÀ
 
	`_
((
°_èbÀ
 *));

59 
°_˛ónup_ß„
 
	`_
((
°_èbÀ
 *, 
°_d©a_t
));

60 
°_èbÀ
 *
°_c›y
 
	`_
((st_table *));

62 
	#ST_NUMCMP
 (((*)()Ë0)

	)

63 
	#ST_NUMHASH
 (((*)()Ë-2)

	)

65 
	#°_numcmp
 
ST_NUMCMP


	)

66 
	#°_numhash
 
ST_NUMHASH


	)

	@modules/oniguruma/src/unicode-7.0/unicode_fold1_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 1055

	)

14 
	#MIN_WORD_LENGTH
 3

	)

15 
	#MAX_WORD_LENGTH
 3

	)

16 
	#MIN_HASH_VALUE
 6

	)

17 
	#MAX_HASH_VALUE
 1196

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 2)+3] +ásso_values[()onig_codes_byte_at(codes, 1)] +ásso_values[()onig_codes_byte_at(codes, 0)];

61 
	}
}

64 
	$unicode_fﬁd1_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

2237 
key
 = 
	`hash
(
codes
);

2239 i‡(
key
 <
MAX_HASH_VALUE
)

2241 
ödex
 = 
w‹dli°
[
key
];

2243 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds1
 + index, 1) == 0)

2244  
ödex
;

2248 
	}
}

	@modules/oniguruma/src/unicode-7.0/unicode_fold2_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 59

	)

14 
	#MIN_WORD_LENGTH
 6

	)

15 
	#MAX_WORD_LENGTH
 6

	)

16 
	#MIN_HASH_VALUE
 0

	)

17 
	#MAX_HASH_VALUE
 58

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 5)] +ásso_values[()onig_codes_byte_at(codes, 2)];

61 
	}
}

64 
	$unicode_fﬁd2_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

190 
key
 = 
	`hash
(
codes
);

192 i‡(
key
 <
MAX_HASH_VALUE
)

194 
ödex
 = 
w‹dli°
[
key
];

196 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds2
 + index, 2) == 0)

197  
ödex
;

201 
	}
}

	@modules/oniguruma/src/unicode-7.0/unicode_fold3_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 14

	)

14 
	#MIN_WORD_LENGTH
 9

	)

15 
	#MAX_WORD_LENGTH
 9

	)

16 
	#MIN_HASH_VALUE
 0

	)

17 
	#MAX_HASH_VALUE
 13

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 8)] +ásso_values[()onig_codes_byte_at(codes, 5)] +ásso_values[()onig_codes_byte_at(codes, 2)];

61 
	}
}

64 
	$unicode_fﬁd3_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

100 
key
 = 
	`hash
(
codes
);

102 i‡(
key
 <
MAX_HASH_VALUE
)

104 
ödex
 = 
w‹dli°
[
key
];

106 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds3
 + index, 3) == 0)

107  
ödex
;

111 
	}
}

	@modules/oniguruma/src/unicode-7.0/unicode_fold_data.c

2 
	~"ªgíc.h
"

4 
	#CASEFOLD_VERSION
 7
_0_0


	)

7 
OnigCodePoöt
 
	gOnigUnicodeFﬁds1
[] = {

1062 
	#FOLDS1_NORMAL_END_INDEX
 3183

	)

1065 
	#FOLDS1_END_INDEX
 3186

	)

1068 
OnigCodePoöt
 
	gOnigUnicodeFﬁds2
[] = {

1185 
	#FOLDS2_NORMAL_END_INDEX
 261

	)

1189 
	#FOLDS2_END_INDEX
 265

	)

1192 
OnigCodePoöt
 
	gOnigUnicodeFﬁds3
[] = {

1221 
	#FOLDS3_NORMAL_END_INDEX
 72

	)

1223 
	#FOLDS3_END_INDEX
 72

	)

	@modules/oniguruma/src/unicode-7.0/unicode_property_data.c

38 c⁄° 
OnigCodePoöt


39 
CR_NEWLINE
[] = { 1,

44 c⁄° 
OnigCodePoöt


45 
	gCR_AÕha
[] = { 600,

649 c⁄° 
OnigCodePoöt


650 
	gCR_Bœnk
[] = { 8,

662 c⁄° 
OnigCodePoöt


663 
	gCR_C¡æ
[] = { 2,

669 c⁄° 
OnigCodePoöt


670 
	gCR_Digô
[] = { 50,

724 c⁄° 
OnigCodePoöt


725 
	gCR_Gøph
[] = { 605,

1334 c⁄° 
OnigCodePoöt


1335 
	gCR_Lowî
[] = { 633,

1972 c⁄° 
OnigCodePoöt


1973 
	gCR_Pröt
[] = { 602,

2579 c⁄° 
OnigCodePoöt


2580 
	gCR_Pun˘
[] = { 155,

2739 c⁄° 
OnigCodePoöt


2740 
	gCR_S∑˚
[] = { 10,

2754 c⁄° 
OnigCodePoöt


2755 
	gCR_Uµî
[] = { 627,

3386 c⁄° 
OnigCodePoöt


3387 
	gCR_XDigô
[] = { 3,

3394 c⁄° 
OnigCodePoöt


3395 
	gCR_W‹d
[] = { 629,

4028 c⁄° 
OnigCodePoöt


4029 
	gCR_A um
[] = { 630,

4663 c⁄° 
OnigCodePoöt


4664 
	gCR_ASCII
[] = { 1,

4670 c⁄° 
OnigCodePoöt


4671 
	gCR_Any
[] = { 1,

4676 c⁄° 
OnigCodePoöt


4677 
	gCR_Assig√d
[] = { 600,

5281 c⁄° 
OnigCodePoöt


5282 
	gCR_C
[] = { 603,

5889 
	#CR_Cc
 
CR_C¡æ


	)

5892 c⁄° 
OnigCodePoöt


5893 
	gCR_Cf
[] = { 17,

5914 c⁄° 
OnigCodePoöt


5915 
	gCR_Cn
[] = { 600,

6519 c⁄° 
OnigCodePoöt


6520 
	gCR_Co
[] = { 3,

6527 c⁄° 
OnigCodePoöt


6528 
	gCR_Cs
[] = { 1,

6533 c⁄° 
OnigCodePoöt


6534 
	gCR_L
[] = { 537,

7075 c⁄° 
OnigCodePoöt


7076 
	gCR_LC
[] = { 117,

7197 c⁄° 
OnigCodePoöt


7198 
	gCR_Ll
[] = { 625,

7827 c⁄° 
OnigCodePoöt


7828 
	gCR_Lm
[] = { 56,

7888 c⁄° 
OnigCodePoöt


7889 
	gCR_Lo
[] = { 417,

8310 c⁄° 
OnigCodePoöt


8311 
	gCR_Lt
[] = { 10,

8325 c⁄° 
OnigCodePoöt


8326 
	gCR_Lu
[] = { 622,

8952 c⁄° 
OnigCodePoöt


8953 
	gCR_M
[] = { 229,

9186 c⁄° 
OnigCodePoöt


9187 
	gCR_Mc
[] = { 147,

9338 c⁄° 
OnigCodePoöt


9339 
	gCR_Me
[] = { 5,

9348 c⁄° 
OnigCodePoöt


9349 
	gCR_Mn
[] = { 255,

9608 c⁄° 
OnigCodePoöt


9609 
	gCR_N
[] = { 105,

9718 
	#CR_Nd
 
CR_Digô


	)

9721 c⁄° 
OnigCodePoöt


9722 
	gCR_Nl
[] = { 12,

9738 c⁄° 
OnigCodePoöt


9739 
	gCR_No
[] = { 52,

9795 
	#CR_P
 
CR_Pun˘


	)

9798 c⁄° 
OnigCodePoöt


9799 
	gCR_Pc
[] = { 6,

9809 c⁄° 
OnigCodePoöt


9810 
	gCR_Pd
[] = { 17,

9831 c⁄° 
OnigCodePoöt


9832 
	gCR_Pe
[] = { 72,

9908 c⁄° 
OnigCodePoöt


9909 
	gCR_Pf
[] = { 10,

9923 c⁄° 
OnigCodePoöt


9924 
	gCR_Pi
[] = { 11,

9939 c⁄° 
OnigCodePoöt


9940 
	gCR_Po
[] = { 151,

10095 c⁄° 
OnigCodePoöt


10096 
	gCR_Ps
[] = { 75,

10175 c⁄° 
OnigCodePoöt


10176 
	gCR_S
[] = { 210,

10390 c⁄° 
OnigCodePoöt


10391 
	gCR_Sc
[] = { 17,

10412 c⁄° 
OnigCodePoöt


10413 
	gCR_Sk
[] = { 28,

10445 c⁄° 
OnigCodePoöt


10446 
	gCR_Sm
[] = { 64,

10514 c⁄° 
OnigCodePoöt


10515 
	gCR_So
[] = { 165,

10684 c⁄° 
OnigCodePoöt


10685 
	gCR_Z
[] = { 8,

10697 c⁄° 
OnigCodePoöt


10698 
	gCR_Zl
[] = { 1,

10703 c⁄° 
OnigCodePoöt


10704 
	gCR_Zp
[] = { 1,

10709 c⁄° 
OnigCodePoöt


10710 
	gCR_Zs
[] = { 7,

10721 c⁄° 
OnigCodePoöt


10722 
	gCR_M©h
[] = { 138,

10864 
	#CR_AÕhabëic
 
CR_AÕha


	)

10867 
	#CR_Lowîˇ£
 
CR_Lowî


	)

10870 
	#CR_Uµîˇ£
 
CR_Uµî


	)

10873 c⁄° 
OnigCodePoöt


10874 
	gCR_Ca£d
[] = { 127,

11005 c⁄° 
OnigCodePoöt


11006 
	gCR_Ca£_Ign‹abÀ
[] = { 335,

11345 c⁄° 
OnigCodePoöt


11346 
	gCR_Ch™ges_Whí_Lowîˇ£d
[] = { 585,

11935 c⁄° 
OnigCodePoöt


11936 
	gCR_Ch™ges_Whí_Uµîˇ£d
[] = { 599,

12539 c⁄° 
OnigCodePoöt


12540 
	gCR_Ch™ges_Whí_TôÀˇ£d
[] = { 600,

13144 c⁄° 
OnigCodePoöt


13145 
	gCR_Ch™ges_Whí_Ca£fﬁded
[] = { 596,

13745 c⁄° 
OnigCodePoöt


13746 
	gCR_Ch™ges_Whí_Ca£m≠≥d
[] = { 107,

13857 c⁄° 
OnigCodePoöt


13858 
	gCR_ID_Sèπ
[] = { 538,

14400 c⁄° 
OnigCodePoöt


14401 
	gCR_ID_C⁄töue
[] = { 626,

15031 c⁄° 
OnigCodePoöt


15032 
	gCR_XID_Sèπ
[] = { 545,

15581 c⁄° 
OnigCodePoöt


15582 
	gCR_XID_C⁄töue
[] = { 633,

16219 c⁄° 
OnigCodePoöt


16220 
	gCR_DeÁu…_Ign‹abÀ_Code_Poöt
[] = { 17,

16241 c⁄° 
OnigCodePoöt


16242 
	gCR_Gøpheme_Exãnd
[] = { 272,

16518 c⁄° 
OnigCodePoöt


16519 
	gCR_Gøpheme_Ba£
[] = { 724,

17247 c⁄° 
OnigCodePoöt


17248 
	gCR_Gøpheme_Lök
[] = { 40,

17292 c⁄° 
OnigCodePoöt


17293 
	gCR_Comm⁄
[] = { 165,

17462 c⁄° 
OnigCodePoöt


17463 
	gCR_L©ö
[] = { 33,

17500 c⁄° 
OnigCodePoöt


17501 
	gCR_Gªek
[] = { 36,

17541 c⁄° 
OnigCodePoöt


17542 
	gCR_Cyrûlic
[] = { 7,

17553 c⁄° 
OnigCodePoöt


17554 
	gCR_Armíün
[] = { 6,

17564 c⁄° 
OnigCodePoöt


17565 
	gCR_Hebªw
[] = { 9,

17578 c⁄° 
OnigCodePoöt


17579 
	gCR_Aøbic
[] = { 55,

17638 c⁄° 
OnigCodePoöt


17639 
	gCR_Syrüc
[] = { 3,

17646 c⁄° 
OnigCodePoöt


17647 
	gCR_ThØ«
[] = { 1,

17652 c⁄° 
OnigCodePoöt


17653 
	gCR_Dev™ag¨i
[] = { 4,

17661 c⁄° 
OnigCodePoöt


17662 
	gCR_BígÆi
[] = { 14,

17680 c⁄° 
OnigCodePoöt


17681 
	gCR_Gurmukhi
[] = { 16,

17701 c⁄° 
OnigCodePoöt


17702 
	gCR_Guj¨©i
[] = { 13,

17719 c⁄° 
OnigCodePoöt


17720 
	gCR_Oriya
[] = { 14,

17738 c⁄° 
OnigCodePoöt


17739 
	gCR_Tamû
[] = { 16,

17759 c⁄° 
OnigCodePoöt


17760 
	gCR_Tñugu
[] = { 13,

17777 c⁄° 
OnigCodePoöt


17778 
	gCR_K™«da
[] = { 14,

17796 c⁄° 
OnigCodePoöt


17797 
	gCR_MÆayÆam
[] = { 11,

17812 c⁄° 
OnigCodePoöt


17813 
	gCR_SöhÆa
[] = { 13,

17830 c⁄° 
OnigCodePoöt


17831 
	gCR_Thai
[] = { 2,

17837 c⁄° 
OnigCodePoöt


17838 
	gCR_Lao
[] = { 18,

17860 c⁄° 
OnigCodePoöt


17861 
	gCR_Tibë™
[] = { 7,

17872 c⁄° 
OnigCodePoöt


17873 
	gCR_My™m¨
[] = { 3,

17880 c⁄° 
OnigCodePoöt


17881 
	gCR_Ge‹gün
[] = { 8,

17893 c⁄° 
OnigCodePoöt


17894 
	gCR_H™gul
[] = { 14,

17912 c⁄° 
OnigCodePoöt


17913 
	gCR_Ethi›ic
[] = { 32,

17949 c⁄° 
OnigCodePoöt


17950 
	gCR_Chîokì
[] = { 1,

17955 c⁄° 
OnigCodePoöt


17956 
	gCR_C™adün_Ab‹igöÆ
[] = { 2,

17962 c⁄° 
OnigCodePoöt


17963 
	gCR_Ogham
[] = { 1,

17968 c⁄° 
OnigCodePoöt


17969 
	gCR_Runic
[] = { 2,

17975 c⁄° 
OnigCodePoöt


17976 
	gCR_Khmî
[] = { 4,

17984 c⁄° 
OnigCodePoöt


17985 
	gCR_M⁄gﬁün
[] = { 6,

17995 c⁄° 
OnigCodePoöt


17996 
	gCR_Húag™a
[] = { 4,

18004 c⁄° 
OnigCodePoöt


18005 
	gCR_K©ak™a
[] = { 8,

18017 c⁄° 
OnigCodePoöt


18018 
	gCR_B›omofo
[] = { 3,

18025 c⁄° 
OnigCodePoöt


18026 
	gCR_H™
[] = { 15,

18045 c⁄° 
OnigCodePoöt


18046 
	gCR_Yi
[] = { 2,

18052 c⁄° 
OnigCodePoöt


18053 
	gCR_Old_Ièlic
[] = { 1,

18058 c⁄° 
OnigCodePoöt


18059 
	gCR_GŸhic
[] = { 1,

18064 c⁄° 
OnigCodePoöt


18065 
	gCR_De£ªt
[] = { 1,

18070 c⁄° 
OnigCodePoöt


18071 
	gCR_Inhîôed
[] = { 27,

18102 c⁄° 
OnigCodePoöt


18103 
	gCR_TagÆog
[] = { 2,

18109 c⁄° 
OnigCodePoöt


18110 
	gCR_H™unoo
[] = { 1,

18115 c⁄° 
OnigCodePoöt


18116 
	gCR_Buhid
[] = { 1,

18121 c⁄° 
OnigCodePoöt


18122 
	gCR_Tagb™wa
[] = { 3,

18129 c⁄° 
OnigCodePoöt


18130 
	gCR_Limbu
[] = { 5,

18139 c⁄° 
OnigCodePoöt


18140 
	gCR_Tai_Le
[] = { 2,

18146 c⁄° 
OnigCodePoöt


18147 
	gCR_Löór_B
[] = { 7,

18158 c⁄° 
OnigCodePoöt


18159 
	gCR_Ug¨ôic
[] = { 2,

18165 c⁄° 
OnigCodePoöt


18166 
	gCR_Shavün
[] = { 1,

18171 c⁄° 
OnigCodePoöt


18172 
	gCR_Osm™ya
[] = { 2,

18178 c⁄° 
OnigCodePoöt


18179 
	gCR_Cy¥iŸ
[] = { 6,

18189 c⁄° 
OnigCodePoöt


18190 
	gCR_BøûÀ
[] = { 1,

18195 c⁄° 
OnigCodePoöt


18196 
	gCR_Bugöe£
[] = { 2,

18202 c⁄° 
OnigCodePoöt


18203 
	gCR_C›tic
[] = { 3,

18210 c⁄° 
OnigCodePoöt


18211 
	gCR_New_Tai_Lue
[] = { 4,

18219 c⁄° 
OnigCodePoöt


18220 
	gCR_Gœgﬁôic
[] = { 2,

18226 c⁄° 
OnigCodePoöt


18227 
	gCR_Tiföagh
[] = { 3,

18234 c⁄° 
OnigCodePoöt


18235 
	gCR_SylŸi_Nagri
[] = { 1,

18240 c⁄° 
OnigCodePoöt


18241 
	gCR_Old_Pîsün
[] = { 2,

18247 c⁄° 
OnigCodePoöt


18248 
	gCR_Kh¨oshthi
[] = { 8,

18260 c⁄° 
OnigCodePoöt


18261 
	gCR_BÆöe£
[] = { 2,

18267 c⁄° 
OnigCodePoöt


18268 
	gCR_Cu√if‹m
[] = { 3,

18275 c⁄° 
OnigCodePoöt


18276 
	gCR_Ph€nicün
[] = { 2,

18282 c⁄° 
OnigCodePoöt


18283 
	gCR_Phags_Pa
[] = { 1,

18288 c⁄° 
OnigCodePoöt


18289 
	gCR_Nko
[] = { 1,

18294 c⁄° 
OnigCodePoöt


18295 
	gCR_Sund™e£
[] = { 2,

18301 c⁄° 
OnigCodePoöt


18302 
	gCR_Lïcha
[] = { 3,

18309 c⁄° 
OnigCodePoöt


18310 
	gCR_Ol_Chiki
[] = { 1,

18315 c⁄° 
OnigCodePoöt


18316 
	gCR_Vai
[] = { 1,

18321 c⁄° 
OnigCodePoöt


18322 
	gCR_Sauøshåa
[] = { 2,

18328 c⁄° 
OnigCodePoöt


18329 
	gCR_Kayah_Li
[] = { 2,

18335 c⁄° 
OnigCodePoöt


18336 
	gCR_Rej™g
[] = { 2,

18342 c⁄° 
OnigCodePoöt


18343 
	gCR_Lycün
[] = { 1,

18348 c⁄° 
OnigCodePoöt


18349 
	gCR_C¨ün
[] = { 1,

18354 c⁄° 
OnigCodePoöt


18355 
	gCR_Lydün
[] = { 2,

18361 c⁄° 
OnigCodePoöt


18362 
	gCR_Cham
[] = { 4,

18370 c⁄° 
OnigCodePoöt


18371 
	gCR_Tai_Tham
[] = { 5,

18380 c⁄° 
OnigCodePoöt


18381 
	gCR_Tai_Võt
[] = { 2,

18387 c⁄° 
OnigCodePoöt


18388 
	gCR_Ave°™
[] = { 2,

18394 c⁄° 
OnigCodePoöt


18395 
	gCR_Egy±ün_Hõroglyphs
[] = { 1,

18400 c⁄° 
OnigCodePoöt


18401 
	gCR_Sam¨ô™
[] = { 2,

18407 c⁄° 
OnigCodePoöt


18408 
	gCR_Lisu
[] = { 1,

18413 c⁄° 
OnigCodePoöt


18414 
	gCR_Bamum
[] = { 2,

18420 c⁄° 
OnigCodePoöt


18421 
	gCR_Jav™e£
[] = { 3,

18428 c⁄° 
OnigCodePoöt


18429 
	gCR_Mìãi_Mayek
[] = { 3,

18436 c⁄° 
OnigCodePoöt


18437 
	gCR_Im≥rül_Aømaic
[] = { 2,

18443 c⁄° 
OnigCodePoöt


18444 
	gCR_Old_South_Aøbün
[] = { 1,

18449 c⁄° 
OnigCodePoöt


18450 
	gCR_Ins¸ùti⁄Æ_P¨thün
[] = { 2,

18456 c⁄° 
OnigCodePoöt


18457 
	gCR_Ins¸ùti⁄Æ_Pahœvi
[] = { 2,

18463 c⁄° 
OnigCodePoöt


18464 
	gCR_Old_Turkic
[] = { 1,

18469 c⁄° 
OnigCodePoöt


18470 
	gCR_Kaôhi
[] = { 1,

18475 c⁄° 
OnigCodePoöt


18476 
	gCR_B©ak
[] = { 2,

18482 c⁄° 
OnigCodePoöt


18483 
	gCR_Bøhmi
[] = { 3,

18490 c⁄° 
OnigCodePoöt


18491 
	gCR_M™daic
[] = { 2,

18497 c⁄° 
OnigCodePoöt


18498 
	gCR_Chakma
[] = { 2,

18504 c⁄° 
OnigCodePoöt


18505 
	gCR_Mîoôic_Cursive
[] = { 2,

18511 c⁄° 
OnigCodePoöt


18512 
	gCR_Mîoôic_Hõroglyphs
[] = { 1,

18517 c⁄° 
OnigCodePoöt


18518 
	gCR_Müo
[] = { 3,

18525 c⁄° 
OnigCodePoöt


18526 
	gCR_Sh¨ada
[] = { 3,

18533 c⁄° 
OnigCodePoöt


18534 
	gCR_S‹a_Som≥ng
[] = { 2,

18540 c⁄° 
OnigCodePoöt


18541 
	gCR_Takri
[] = { 2,

18547 c⁄° 
OnigCodePoöt


18548 
	gCR_Cauˇsün_Alb™ün
[] = { 2,

18554 c⁄° 
OnigCodePoöt


18555 
	gCR_Basß_Vah
[] = { 2,

18561 c⁄° 
OnigCodePoöt


18562 
	gCR_Du∂oy™
[] = { 5,

18571 c⁄° 
OnigCodePoöt


18572 
	gCR_Elbaßn
[] = { 1,

18577 c⁄° 
OnigCodePoöt


18578 
	gCR_Gø¡ha
[] = { 14,

18596 c⁄° 
OnigCodePoöt


18597 
	gCR_Pahawh_Hm⁄g
[] = { 5,

18606 c⁄° 
OnigCodePoöt


18607 
	gCR_Khojki
[] = { 2,

18613 c⁄° 
OnigCodePoöt


18614 
	gCR_Löór_A
[] = { 3,

18621 c⁄° 
OnigCodePoöt


18622 
	gCR_Mahaj™i
[] = { 1,

18627 c⁄° 
OnigCodePoöt


18628 
	gCR_M™ich´™
[] = { 2,

18634 c⁄° 
OnigCodePoöt


18635 
	gCR_Míde_Kikakui
[] = { 2,

18641 c⁄° 
OnigCodePoöt


18642 
	gCR_Modi
[] = { 2,

18648 c⁄° 
OnigCodePoöt


18649 
	gCR_Mro
[] = { 3,

18656 c⁄° 
OnigCodePoöt


18657 
	gCR_Old_N‹th_Aøbün
[] = { 1,

18662 c⁄° 
OnigCodePoöt


18663 
	gCR_Nab©´™
[] = { 2,

18669 c⁄° 
OnigCodePoöt


18670 
	gCR_PÆmyª√
[] = { 1,

18675 c⁄° 
OnigCodePoöt


18676 
	gCR_Pau_Cö_Hau
[] = { 1,

18681 c⁄° 
OnigCodePoöt


18682 
	gCR_Old_Pîmic
[] = { 1,

18687 c⁄° 
OnigCodePoöt


18688 
	gCR_Pß…î_Pahœvi
[] = { 3,

18695 c⁄° 
OnigCodePoöt


18696 
	gCR_Siddham
[] = { 2,

18702 c⁄° 
OnigCodePoöt


18703 
	gCR_Khudawadi
[] = { 2,

18709 c⁄° 
OnigCodePoöt


18710 
	gCR_Túhuè
[] = { 2,

18716 c⁄° 
OnigCodePoöt


18717 
	gCR_W¨™g_Côi
[] = { 2,

18723 
	#CR_Whôe_S∑˚
 
CR_S∑˚


	)

18726 c⁄° 
OnigCodePoöt


18727 
	gCR_Bidi_C⁄åﬁ
[] = { 4,

18735 c⁄° 
OnigCodePoöt


18736 
	gCR_Joö_C⁄åﬁ
[] = { 1,

18741 c⁄° 
OnigCodePoöt


18742 
	gCR_Dash
[] = { 21,

18767 c⁄° 
OnigCodePoöt


18768 
	gCR_Hyphí
[] = { 10,

18782 c⁄° 
OnigCodePoöt


18783 
	gCR_QuŸ©i⁄_M¨k
[] = { 13,

18800 c⁄° 
OnigCodePoöt


18801 
	gCR_TîmöÆ_Pun˘u©i⁄
[] = { 86,

18891 c⁄° 
OnigCodePoöt


18892 
	gCR_Othî_M©h
[] = { 134,

19030 c⁄° 
OnigCodePoöt


19031 
	gCR_Hex_Digô
[] = { 6,

19041 
	#CR_ASCII_Hex_Digô
 
CR_XDigô


	)

19044 c⁄° 
OnigCodePoöt


19045 
	gCR_Othî_AÕhabëic
[] = { 178,

19227 c⁄° 
OnigCodePoöt


19228 
	gCR_Ideogøphic
[] = { 11,

19243 c⁄° 
OnigCodePoöt


19244 
	gCR_Dü¸ôic
[] = { 145,

19393 c⁄° 
OnigCodePoöt


19394 
	gCR_Exãndî
[] = { 26,

19424 c⁄° 
OnigCodePoöt


19425 
	gCR_Othî_Lowîˇ£
[] = { 20,

19449 c⁄° 
OnigCodePoöt


19450 
	gCR_Othî_Uµîˇ£
[] = { 5,

19459 c⁄° 
OnigCodePoöt


19460 
	gCR_N⁄ch¨a˘î_Code_Poöt
[] = { 18,

19482 c⁄° 
OnigCodePoöt


19483 
	gCR_Othî_Gøpheme_Exãnd
[] = { 22,

19509 c⁄° 
OnigCodePoöt


19510 
	gCR_IDS_Bö¨y_O≥øt‹
[] = { 2,

19516 c⁄° 
OnigCodePoöt


19517 
	gCR_IDS_Trö¨y_O≥øt‹
[] = { 1,

19522 c⁄° 
OnigCodePoöt


19523 
	gCR_Radiˇl
[] = { 3,

19530 c⁄° 
OnigCodePoöt


19531 
	gCR_Unifõd_Ideogøph
[] = { 12,

19547 c⁄° 
OnigCodePoöt


19548 
	gCR_Othî_DeÁu…_Ign‹abÀ_Code_Poöt
[] = { 11,

19563 c⁄° 
OnigCodePoöt


19564 
	gCR_Dïªˇãd
[] = { 9,

19577 c⁄° 
OnigCodePoöt


19578 
	gCR_So·_DŸãd
[] = { 31,

19613 c⁄° 
OnigCodePoöt


19614 
	gCR_Logiˇl_Ordî_Ex˚±i⁄
[] = { 5,

19623 c⁄° 
OnigCodePoöt


19624 
	gCR_Othî_ID_Sèπ
[] = { 3,

19631 c⁄° 
OnigCodePoöt


19632 
	gCR_Othî_ID_C⁄töue
[] = { 4,

19640 c⁄° 
OnigCodePoöt


19641 
	gCR_STîm
[] = { 60,

19705 c⁄° 
OnigCodePoöt


19706 
	gCR_V¨üti⁄_Sñe˘‹
[] = { 3,

19713 c⁄° 
OnigCodePoöt


19714 
	gCR_P©ã∫_Whôe_S∑˚
[] = { 5,

19723 c⁄° 
OnigCodePoöt


19724 
	gCR_P©ã∫_Sy¡ax
[] = { 28,

19756 c⁄° 
OnigCodePoöt


19757 
	gCR_Unknown
[] = { 598,

20359 
	#CR_In_Basic_L©ö
 
CR_ASCII


	)

20362 c⁄° 
OnigCodePoöt


20363 
	gCR_In_L©ö_1_SuµÀmít
[] = { 1,

20368 c⁄° 
OnigCodePoöt


20369 
	gCR_In_L©ö_Exãnded_A
[] = { 1,

20374 c⁄° 
OnigCodePoöt


20375 
	gCR_In_L©ö_Exãnded_B
[] = { 1,

20380 c⁄° 
OnigCodePoöt


20381 
	gCR_In_IPA_Exãnsi⁄s
[] = { 1,

20386 c⁄° 
OnigCodePoöt


20387 
	gCR_In_S∑cög_Modifõr_Lëãrs
[] = { 1,

20392 c⁄° 
OnigCodePoöt


20393 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks
[] = { 1,

20398 c⁄° 
OnigCodePoöt


20399 
	gCR_In_Gªek_™d_C›tic
[] = { 1,

20404 c⁄° 
OnigCodePoöt


20405 
	gCR_In_Cyrûlic
[] = { 1,

20410 c⁄° 
OnigCodePoöt


20411 
	gCR_In_Cyrûlic_SuµÀmít
[] = { 1,

20416 c⁄° 
OnigCodePoöt


20417 
	gCR_In_Armíün
[] = { 1,

20422 c⁄° 
OnigCodePoöt


20423 
	gCR_In_Hebªw
[] = { 1,

20428 c⁄° 
OnigCodePoöt


20429 
	gCR_In_Aøbic
[] = { 1,

20434 c⁄° 
OnigCodePoöt


20435 
	gCR_In_Syrüc
[] = { 1,

20440 c⁄° 
OnigCodePoöt


20441 
	gCR_In_Aøbic_SuµÀmít
[] = { 1,

20446 c⁄° 
OnigCodePoöt


20447 
	gCR_In_ThØ«
[] = { 1,

20452 c⁄° 
OnigCodePoöt


20453 
	gCR_In_NKo
[] = { 1,

20458 c⁄° 
OnigCodePoöt


20459 
	gCR_In_Sam¨ô™
[] = { 1,

20464 c⁄° 
OnigCodePoöt


20465 
	gCR_In_M™daic
[] = { 1,

20470 c⁄° 
OnigCodePoöt


20471 
	gCR_In_Aøbic_Exãnded_A
[] = { 1,

20476 c⁄° 
OnigCodePoöt


20477 
	gCR_In_Dev™ag¨i
[] = { 1,

20482 c⁄° 
OnigCodePoöt


20483 
	gCR_In_BígÆi
[] = { 1,

20488 c⁄° 
OnigCodePoöt


20489 
	gCR_In_Gurmukhi
[] = { 1,

20494 c⁄° 
OnigCodePoöt


20495 
	gCR_In_Guj¨©i
[] = { 1,

20500 c⁄° 
OnigCodePoöt


20501 
	gCR_In_Oriya
[] = { 1,

20506 c⁄° 
OnigCodePoöt


20507 
	gCR_In_Tamû
[] = { 1,

20512 c⁄° 
OnigCodePoöt


20513 
	gCR_In_Tñugu
[] = { 1,

20518 c⁄° 
OnigCodePoöt


20519 
	gCR_In_K™«da
[] = { 1,

20524 c⁄° 
OnigCodePoöt


20525 
	gCR_In_MÆayÆam
[] = { 1,

20530 c⁄° 
OnigCodePoöt


20531 
	gCR_In_SöhÆa
[] = { 1,

20536 c⁄° 
OnigCodePoöt


20537 
	gCR_In_Thai
[] = { 1,

20542 c⁄° 
OnigCodePoöt


20543 
	gCR_In_Lao
[] = { 1,

20548 c⁄° 
OnigCodePoöt


20549 
	gCR_In_Tibë™
[] = { 1,

20554 c⁄° 
OnigCodePoöt


20555 
	gCR_In_My™m¨
[] = { 1,

20560 c⁄° 
OnigCodePoöt


20561 
	gCR_In_Ge‹gün
[] = { 1,

20566 c⁄° 
OnigCodePoöt


20567 
	gCR_In_H™gul_Jamo
[] = { 1,

20572 c⁄° 
OnigCodePoöt


20573 
	gCR_In_Ethi›ic
[] = { 1,

20578 c⁄° 
OnigCodePoöt


20579 
	gCR_In_Ethi›ic_SuµÀmít
[] = { 1,

20584 c⁄° 
OnigCodePoöt


20585 
	gCR_In_Chîokì
[] = { 1,

20590 c⁄° 
OnigCodePoöt


20591 
	gCR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics
[] = { 1,

20596 c⁄° 
OnigCodePoöt


20597 
	gCR_In_Ogham
[] = { 1,

20602 c⁄° 
OnigCodePoöt


20603 
	gCR_In_Runic
[] = { 1,

20608 c⁄° 
OnigCodePoöt


20609 
	gCR_In_TagÆog
[] = { 1,

20614 c⁄° 
OnigCodePoöt


20615 
	gCR_In_H™unoo
[] = { 1,

20620 c⁄° 
OnigCodePoöt


20621 
	gCR_In_Buhid
[] = { 1,

20626 c⁄° 
OnigCodePoöt


20627 
	gCR_In_Tagb™wa
[] = { 1,

20632 c⁄° 
OnigCodePoöt


20633 
	gCR_In_Khmî
[] = { 1,

20638 c⁄° 
OnigCodePoöt


20639 
	gCR_In_M⁄gﬁün
[] = { 1,

20644 c⁄° 
OnigCodePoöt


20645 
	gCR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics_Exãnded
[] = { 1,

20650 c⁄° 
OnigCodePoöt


20651 
	gCR_In_Limbu
[] = { 1,

20656 c⁄° 
OnigCodePoöt


20657 
	gCR_In_Tai_Le
[] = { 1,

20662 c⁄° 
OnigCodePoöt


20663 
	gCR_In_New_Tai_Lue
[] = { 1,

20668 c⁄° 
OnigCodePoöt


20669 
	gCR_In_Khmî_Symbﬁs
[] = { 1,

20674 c⁄° 
OnigCodePoöt


20675 
	gCR_In_Bugöe£
[] = { 1,

20680 c⁄° 
OnigCodePoöt


20681 
	gCR_In_Tai_Tham
[] = { 1,

20686 c⁄° 
OnigCodePoöt


20687 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_Exãnded
[] = { 1,

20692 c⁄° 
OnigCodePoöt


20693 
	gCR_In_BÆöe£
[] = { 1,

20698 c⁄° 
OnigCodePoöt


20699 
	gCR_In_Sund™e£
[] = { 1,

20704 c⁄° 
OnigCodePoöt


20705 
	gCR_In_B©ak
[] = { 1,

20710 c⁄° 
OnigCodePoöt


20711 
	gCR_In_Lïcha
[] = { 1,

20716 
	#CR_In_Ol_Chiki
 
CR_Ol_Chiki


	)

20719 c⁄° 
OnigCodePoöt


20720 
	gCR_In_Sund™e£_SuµÀmít
[] = { 1,

20725 c⁄° 
OnigCodePoöt


20726 
	gCR_In_Vedic_Exãnsi⁄s
[] = { 1,

20731 c⁄° 
OnigCodePoöt


20732 
	gCR_In_Ph⁄ëic_Exãnsi⁄s
[] = { 1,

20737 c⁄° 
OnigCodePoöt


20738 
	gCR_In_Ph⁄ëic_Exãnsi⁄s_SuµÀmít
[] = { 1,

20743 c⁄° 
OnigCodePoöt


20744 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_SuµÀmít
[] = { 1,

20749 c⁄° 
OnigCodePoöt


20750 
	gCR_In_L©ö_Exãnded_Addôi⁄Æ
[] = { 1,

20755 c⁄° 
OnigCodePoöt


20756 
	gCR_In_Gªek_Exãnded
[] = { 1,

20761 c⁄° 
OnigCodePoöt


20762 
	gCR_In_GíîÆ_Pun˘u©i⁄
[] = { 1,

20767 c⁄° 
OnigCodePoöt


20768 
	gCR_In_Su≥rs¸ùts_™d_Subs¸ùts
[] = { 1,

20773 c⁄° 
OnigCodePoöt


20774 
	gCR_In_Cuºícy_Symbﬁs
[] = { 1,

20779 c⁄° 
OnigCodePoöt


20780 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_f‹_Symbﬁs
[] = { 1,

20785 c⁄° 
OnigCodePoöt


20786 
	gCR_In_Lëãæike_Symbﬁs
[] = { 1,

20791 c⁄° 
OnigCodePoöt


20792 
	gCR_In_Numbî_F‹ms
[] = { 1,

20797 c⁄° 
OnigCodePoöt


20798 
	gCR_In_Aºows
[] = { 1,

20803 c⁄° 
OnigCodePoöt


20804 
	gCR_In_M©hem©iˇl_O≥øt‹s
[] = { 1,

20809 c⁄° 
OnigCodePoöt


20810 
	gCR_In_Mis˚Œ™eous_Techniˇl
[] = { 1,

20815 c⁄° 
OnigCodePoöt


20816 
	gCR_In_C⁄åﬁ_Pi˘uªs
[] = { 1,

20821 c⁄° 
OnigCodePoöt


20822 
	gCR_In_O±iˇl_Ch¨a˘î_Recognôi⁄
[] = { 1,

20827 c⁄° 
OnigCodePoöt


20828 
	gCR_In_En˛o£d_AÕh™umîics
[] = { 1,

20833 c⁄° 
OnigCodePoöt


20834 
	gCR_In_Box_Døwög
[] = { 1,

20839 c⁄° 
OnigCodePoöt


20840 
	gCR_In_Block_EÀmíts
[] = { 1,

20845 c⁄° 
OnigCodePoöt


20846 
	gCR_In_Geomëric_Sh≠es
[] = { 1,

20851 c⁄° 
OnigCodePoöt


20852 
	gCR_In_Mis˚Œ™eous_Symbﬁs
[] = { 1,

20857 c⁄° 
OnigCodePoöt


20858 
	gCR_In_Dögb©s
[] = { 1,

20863 c⁄° 
OnigCodePoöt


20864 
	gCR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_A
[] = { 1,

20869 c⁄° 
OnigCodePoöt


20870 
	gCR_In_SuµÀmíèl_Aºows_A
[] = { 1,

20875 
	#CR_In_BøûÀ_P©ã∫s
 
CR_BøûÀ


	)

20878 c⁄° 
OnigCodePoöt


20879 
	gCR_In_SuµÀmíèl_Aºows_B
[] = { 1,

20884 c⁄° 
OnigCodePoöt


20885 
	gCR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_B
[] = { 1,

20890 c⁄° 
OnigCodePoöt


20891 
	gCR_In_SuµÀmíèl_M©hem©iˇl_O≥øt‹s
[] = { 1,

20896 c⁄° 
OnigCodePoöt


20897 
	gCR_In_Mis˚Œ™eous_Symbﬁs_™d_Aºows
[] = { 1,

20902 c⁄° 
OnigCodePoöt


20903 
	gCR_In_Gœgﬁôic
[] = { 1,

20908 c⁄° 
OnigCodePoöt


20909 
	gCR_In_L©ö_Exãnded_C
[] = { 1,

20914 c⁄° 
OnigCodePoöt


20915 
	gCR_In_C›tic
[] = { 1,

20920 c⁄° 
OnigCodePoöt


20921 
	gCR_In_Ge‹gün_SuµÀmít
[] = { 1,

20926 c⁄° 
OnigCodePoöt


20927 
	gCR_In_Tiföagh
[] = { 1,

20932 c⁄° 
OnigCodePoöt


20933 
	gCR_In_Ethi›ic_Exãnded
[] = { 1,

20938 c⁄° 
OnigCodePoöt


20939 
	gCR_In_Cyrûlic_Exãnded_A
[] = { 1,

20944 c⁄° 
OnigCodePoöt


20945 
	gCR_In_SuµÀmíèl_Pun˘u©i⁄
[] = { 1,

20950 c⁄° 
OnigCodePoöt


20951 
	gCR_In_CJK_Radiˇls_SuµÀmít
[] = { 1,

20956 c⁄° 
OnigCodePoöt


20957 
	gCR_In_K™gxi_Radiˇls
[] = { 1,

20962 c⁄° 
OnigCodePoöt


20963 
	gCR_In_Ideogøphic_Des¸ùti⁄_Ch¨a˘îs
[] = { 1,

20968 c⁄° 
OnigCodePoöt


20969 
	gCR_In_CJK_Symbﬁs_™d_Pun˘u©i⁄
[] = { 1,

20974 c⁄° 
OnigCodePoöt


20975 
	gCR_In_Húag™a
[] = { 1,

20980 c⁄° 
OnigCodePoöt


20981 
	gCR_In_K©ak™a
[] = { 1,

20986 c⁄° 
OnigCodePoöt


20987 
	gCR_In_B›omofo
[] = { 1,

20992 c⁄° 
OnigCodePoöt


20993 
	gCR_In_H™gul_Com∑tibûôy_Jamo
[] = { 1,

20998 c⁄° 
OnigCodePoöt


20999 
	gCR_In_K™bun
[] = { 1,

21004 c⁄° 
OnigCodePoöt


21005 
	gCR_In_B›omofo_Exãnded
[] = { 1,

21010 c⁄° 
OnigCodePoöt


21011 
	gCR_In_CJK_Såokes
[] = { 1,

21016 c⁄° 
OnigCodePoöt


21017 
	gCR_In_K©ak™a_Ph⁄ëic_Exãnsi⁄s
[] = { 1,

21022 c⁄° 
OnigCodePoöt


21023 
	gCR_In_En˛o£d_CJK_Lëãrs_™d_M⁄ths
[] = { 1,

21028 c⁄° 
OnigCodePoöt


21029 
	gCR_In_CJK_Com∑tibûôy
[] = { 1,

21034 c⁄° 
OnigCodePoöt


21035 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_A
[] = { 1,

21040 c⁄° 
OnigCodePoöt


21041 
	gCR_In_Yijög_Hexagøm_Symbﬁs
[] = { 1,

21046 c⁄° 
OnigCodePoöt


21047 
	gCR_In_CJK_Unifõd_Ideogøphs
[] = { 1,

21052 c⁄° 
OnigCodePoöt


21053 
	gCR_In_Yi_SyŒabÀs
[] = { 1,

21058 c⁄° 
OnigCodePoöt


21059 
	gCR_In_Yi_Radiˇls
[] = { 1,

21064 
	#CR_In_Lisu
 
CR_Lisu


	)

21067 c⁄° 
OnigCodePoöt


21068 
	gCR_In_Vai
[] = { 1,

21073 c⁄° 
OnigCodePoöt


21074 
	gCR_In_Cyrûlic_Exãnded_B
[] = { 1,

21079 c⁄° 
OnigCodePoöt


21080 
	gCR_In_Bamum
[] = { 1,

21085 c⁄° 
OnigCodePoöt


21086 
	gCR_In_Modifõr_T⁄e_Lëãrs
[] = { 1,

21091 c⁄° 
OnigCodePoöt


21092 
	gCR_In_L©ö_Exãnded_D
[] = { 1,

21097 c⁄° 
OnigCodePoöt


21098 
	gCR_In_SylŸi_Nagri
[] = { 1,

21103 c⁄° 
OnigCodePoöt


21104 
	gCR_In_Comm⁄_Indic_Numbî_F‹ms
[] = { 1,

21109 c⁄° 
OnigCodePoöt


21110 
	gCR_In_Phags_∑
[] = { 1,

21115 c⁄° 
OnigCodePoöt


21116 
	gCR_In_Sauøshåa
[] = { 1,

21121 c⁄° 
OnigCodePoöt


21122 
	gCR_In_Dev™ag¨i_Exãnded
[] = { 1,

21127 c⁄° 
OnigCodePoöt


21128 
	gCR_In_Kayah_Li
[] = { 1,

21133 c⁄° 
OnigCodePoöt


21134 
	gCR_In_Rej™g
[] = { 1,

21139 c⁄° 
OnigCodePoöt


21140 
	gCR_In_H™gul_Jamo_Exãnded_A
[] = { 1,

21145 c⁄° 
OnigCodePoöt


21146 
	gCR_In_Jav™e£
[] = { 1,

21151 c⁄° 
OnigCodePoöt


21152 
	gCR_In_My™m¨_Exãnded_B
[] = { 1,

21157 c⁄° 
OnigCodePoöt


21158 
	gCR_In_Cham
[] = { 1,

21163 c⁄° 
OnigCodePoöt


21164 
	gCR_In_My™m¨_Exãnded_A
[] = { 1,

21169 c⁄° 
OnigCodePoöt


21170 
	gCR_In_Tai_Võt
[] = { 1,

21175 c⁄° 
OnigCodePoöt


21176 
	gCR_In_Mìãi_Mayek_Exãnsi⁄s
[] = { 1,

21181 c⁄° 
OnigCodePoöt


21182 
	gCR_In_Ethi›ic_Exãnded_A
[] = { 1,

21187 c⁄° 
OnigCodePoöt


21188 
	gCR_In_L©ö_Exãnded_E
[] = { 1,

21193 c⁄° 
OnigCodePoöt


21194 
	gCR_In_Mìãi_Mayek
[] = { 1,

21199 c⁄° 
OnigCodePoöt


21200 
	gCR_In_H™gul_SyŒabÀs
[] = { 1,

21205 c⁄° 
OnigCodePoöt


21206 
	gCR_In_H™gul_Jamo_Exãnded_B
[] = { 1,

21211 c⁄° 
OnigCodePoöt


21212 
	gCR_In_High_Suºog©es
[] = { 1,

21217 c⁄° 
OnigCodePoöt


21218 
	gCR_In_High_Priv©e_U£_Suºog©es
[] = { 1,

21223 c⁄° 
OnigCodePoöt


21224 
	gCR_In_Low_Suºog©es
[] = { 1,

21229 c⁄° 
OnigCodePoöt


21230 
	gCR_In_Priv©e_U£_Aªa
[] = { 1,

21235 c⁄° 
OnigCodePoöt


21236 
	gCR_In_CJK_Com∑tibûôy_Ideogøphs
[] = { 1,

21241 c⁄° 
OnigCodePoöt


21242 
	gCR_In_AÕhabëic_Pª£¡©i⁄_F‹ms
[] = { 1,

21247 c⁄° 
OnigCodePoöt


21248 
	gCR_In_Aøbic_Pª£¡©i⁄_F‹ms_A
[] = { 1,

21253 c⁄° 
OnigCodePoöt


21254 
	gCR_In_V¨üti⁄_Sñe˘‹s
[] = { 1,

21259 c⁄° 
OnigCodePoöt


21260 
	gCR_In_Vîtiˇl_F‹ms
[] = { 1,

21265 c⁄° 
OnigCodePoöt


21266 
	gCR_In_Comböög_HÆf_M¨ks
[] = { 1,

21271 c⁄° 
OnigCodePoöt


21272 
	gCR_In_CJK_Com∑tibûôy_F‹ms
[] = { 1,

21277 c⁄° 
OnigCodePoöt


21278 
	gCR_In_SmÆl_F‹m_V¨ü¡s
[] = { 1,

21283 c⁄° 
OnigCodePoöt


21284 
	gCR_In_Aøbic_Pª£¡©i⁄_F‹ms_B
[] = { 1,

21289 c⁄° 
OnigCodePoöt


21290 
	gCR_In_HÆfwidth_™d_FuŒwidth_F‹ms
[] = { 1,

21295 c⁄° 
OnigCodePoöt


21296 
	gCR_In_S≥cüls
[] = { 1,

21301 c⁄° 
OnigCodePoöt


21302 
	gCR_In_Löór_B_SyŒab¨y
[] = { 1,

21307 c⁄° 
OnigCodePoöt


21308 
	gCR_In_Löór_B_Ideogøms
[] = { 1,

21313 c⁄° 
OnigCodePoöt


21314 
	gCR_In_Aegón_Numbîs
[] = { 1,

21319 c⁄° 
OnigCodePoöt


21320 
	gCR_In_Ancõ¡_Gªek_Numbîs
[] = { 1,

21325 c⁄° 
OnigCodePoöt


21326 
	gCR_In_Ancõ¡_Symbﬁs
[] = { 1,

21331 c⁄° 
OnigCodePoöt


21332 
	gCR_In_Phai°os_Disc
[] = { 1,

21337 c⁄° 
OnigCodePoöt


21338 
	gCR_In_Lycün
[] = { 1,

21343 c⁄° 
OnigCodePoöt


21344 
	gCR_In_C¨ün
[] = { 1,

21349 c⁄° 
OnigCodePoöt


21350 
	gCR_In_C›tic_E∑˘_Numbîs
[] = { 1,

21355 c⁄° 
OnigCodePoöt


21356 
	gCR_In_Old_Ièlic
[] = { 1,

21361 c⁄° 
OnigCodePoöt


21362 
	gCR_In_GŸhic
[] = { 1,

21367 c⁄° 
OnigCodePoöt


21368 
	gCR_In_Old_Pîmic
[] = { 1,

21373 c⁄° 
OnigCodePoöt


21374 
	gCR_In_Ug¨ôic
[] = { 1,

21379 c⁄° 
OnigCodePoöt


21380 
	gCR_In_Old_Pîsün
[] = { 1,

21385 
	#CR_In_De£ªt
 
CR_De£ªt


	)

21388 
	#CR_In_Shavün
 
CR_Shavün


	)

21391 c⁄° 
OnigCodePoöt


21392 
	gCR_In_Osm™ya
[] = { 1,

21397 c⁄° 
OnigCodePoöt


21398 
	gCR_In_Elbaßn
[] = { 1,

21403 c⁄° 
OnigCodePoöt


21404 
	gCR_In_Cauˇsün_Alb™ün
[] = { 1,

21409 c⁄° 
OnigCodePoöt


21410 
	gCR_In_Löór_A
[] = { 1,

21415 c⁄° 
OnigCodePoöt


21416 
	gCR_In_Cy¥iŸ_SyŒab¨y
[] = { 1,

21421 c⁄° 
OnigCodePoöt


21422 
	gCR_In_Im≥rül_Aømaic
[] = { 1,

21427 
	#CR_In_PÆmyª√
 
CR_PÆmyª√


	)

21430 c⁄° 
OnigCodePoöt


21431 
	gCR_In_Nab©´™
[] = { 1,

21436 c⁄° 
OnigCodePoöt


21437 
	gCR_In_Ph€nicün
[] = { 1,

21442 c⁄° 
OnigCodePoöt


21443 
	gCR_In_Lydün
[] = { 1,

21448 
	#CR_In_Mîoôic_Hõroglyphs
 
CR_Mîoôic_Hõroglyphs


	)

21451 c⁄° 
OnigCodePoöt


21452 
	gCR_In_Mîoôic_Cursive
[] = { 1,

21457 c⁄° 
OnigCodePoöt


21458 
	gCR_In_Kh¨oshthi
[] = { 1,

21463 
	#CR_In_Old_South_Aøbün
 
CR_Old_South_Aøbün


	)

21466 
	#CR_In_Old_N‹th_Aøbün
 
CR_Old_N‹th_Aøbün


	)

21469 c⁄° 
OnigCodePoöt


21470 
	gCR_In_M™ich´™
[] = { 1,

21475 c⁄° 
OnigCodePoöt


21476 
	gCR_In_Ave°™
[] = { 1,

21481 c⁄° 
OnigCodePoöt


21482 
	gCR_In_Ins¸ùti⁄Æ_P¨thün
[] = { 1,

21487 c⁄° 
OnigCodePoöt


21488 
	gCR_In_Ins¸ùti⁄Æ_Pahœvi
[] = { 1,

21493 c⁄° 
OnigCodePoöt


21494 
	gCR_In_Pß…î_Pahœvi
[] = { 1,

21499 c⁄° 
OnigCodePoöt


21500 
	gCR_In_Old_Turkic
[] = { 1,

21505 c⁄° 
OnigCodePoöt


21506 
	gCR_In_Rumi_NumîÆ_Symbﬁs
[] = { 1,

21511 c⁄° 
OnigCodePoöt


21512 
	gCR_In_Bøhmi
[] = { 1,

21517 c⁄° 
OnigCodePoöt


21518 
	gCR_In_Kaôhi
[] = { 1,

21523 c⁄° 
OnigCodePoöt


21524 
	gCR_In_S‹a_Som≥ng
[] = { 1,

21529 c⁄° 
OnigCodePoöt


21530 
	gCR_In_Chakma
[] = { 1,

21535 c⁄° 
OnigCodePoöt


21536 
	gCR_In_Mahaj™i
[] = { 1,

21541 c⁄° 
OnigCodePoöt


21542 
	gCR_In_Sh¨ada
[] = { 1,

21547 c⁄° 
OnigCodePoöt


21548 
	gCR_In_SöhÆa_Archaic_Numbîs
[] = { 1,

21553 c⁄° 
OnigCodePoöt


21554 
	gCR_In_Khojki
[] = { 1,

21559 c⁄° 
OnigCodePoöt


21560 
	gCR_In_Khudawadi
[] = { 1,

21565 c⁄° 
OnigCodePoöt


21566 
	gCR_In_Gø¡ha
[] = { 1,

21571 c⁄° 
OnigCodePoöt


21572 
	gCR_In_Túhuè
[] = { 1,

21577 c⁄° 
OnigCodePoöt


21578 
	gCR_In_Siddham
[] = { 1,

21583 c⁄° 
OnigCodePoöt


21584 
	gCR_In_Modi
[] = { 1,

21589 c⁄° 
OnigCodePoöt


21590 
	gCR_In_Takri
[] = { 1,

21595 c⁄° 
OnigCodePoöt


21596 
	gCR_In_W¨™g_Côi
[] = { 1,

21601 c⁄° 
OnigCodePoöt


21602 
	gCR_In_Pau_Cö_Hau
[] = { 1,

21607 c⁄° 
OnigCodePoöt


21608 
	gCR_In_Cu√if‹m
[] = { 1,

21613 c⁄° 
OnigCodePoöt


21614 
	gCR_In_Cu√if‹m_Numbîs_™d_Pun˘u©i⁄
[] = { 1,

21619 c⁄° 
OnigCodePoöt


21620 
	gCR_In_Egy±ün_Hõroglyphs
[] = { 1,

21625 c⁄° 
OnigCodePoöt


21626 
	gCR_In_Bamum_SuµÀmít
[] = { 1,

21631 c⁄° 
OnigCodePoöt


21632 
	gCR_In_Mro
[] = { 1,

21637 c⁄° 
OnigCodePoöt


21638 
	gCR_In_Basß_Vah
[] = { 1,

21643 c⁄° 
OnigCodePoöt


21644 
	gCR_In_Pahawh_Hm⁄g
[] = { 1,

21649 c⁄° 
OnigCodePoöt


21650 
	gCR_In_Müo
[] = { 1,

21655 c⁄° 
OnigCodePoöt


21656 
	gCR_In_K™a_SuµÀmít
[] = { 1,

21661 c⁄° 
OnigCodePoöt


21662 
	gCR_In_Du∂oy™
[] = { 1,

21667 c⁄° 
OnigCodePoöt


21668 
	gCR_In_Sh‹th™d_F‹m©_C⁄åﬁs
[] = { 1,

21673 c⁄° 
OnigCodePoöt


21674 
	gCR_In_Byz™töe_Musiˇl_Symbﬁs
[] = { 1,

21679 c⁄° 
OnigCodePoöt


21680 
	gCR_In_Musiˇl_Symbﬁs
[] = { 1,

21685 c⁄° 
OnigCodePoöt


21686 
	gCR_In_Ancõ¡_Gªek_Musiˇl_NŸ©i⁄
[] = { 1,

21691 c⁄° 
OnigCodePoöt


21692 
	gCR_In_Tai_Xu™_Jög_Symbﬁs
[] = { 1,

21697 c⁄° 
OnigCodePoöt


21698 
	gCR_In_Cou¡ög_Rod_NumîÆs
[] = { 1,

21703 c⁄° 
OnigCodePoöt


21704 
	gCR_In_M©hem©iˇl_AÕh™umîic_Symbﬁs
[] = { 1,

21709 c⁄° 
OnigCodePoöt


21710 
	gCR_In_Míde_Kikakui
[] = { 1,

21715 c⁄° 
OnigCodePoöt


21716 
	gCR_In_Aøbic_M©hem©iˇl_AÕhabëic_Symbﬁs
[] = { 1,

21721 c⁄° 
OnigCodePoöt


21722 
	gCR_In_Mahj⁄g_Tûes
[] = { 1,

21727 c⁄° 
OnigCodePoöt


21728 
	gCR_In_Domöo_Tûes
[] = { 1,

21733 c⁄° 
OnigCodePoöt


21734 
	gCR_In_Pœyög_C¨ds
[] = { 1,

21739 c⁄° 
OnigCodePoöt


21740 
	gCR_In_En˛o£d_AÕh™umîic_SuµÀmít
[] = { 1,

21745 c⁄° 
OnigCodePoöt


21746 
	gCR_In_En˛o£d_Ideogøphic_SuµÀmít
[] = { 1,

21751 c⁄° 
OnigCodePoöt


21752 
	gCR_In_Mis˚Œ™eous_Symbﬁs_™d_Pi˘ogøphs
[] = { 1,

21757 c⁄° 
OnigCodePoöt


21758 
	gCR_In_EmŸic⁄s
[] = { 1,

21763 c⁄° 
OnigCodePoöt


21764 
	gCR_In_O∫amíèl_Dögb©s
[] = { 1,

21769 c⁄° 
OnigCodePoöt


21770 
	gCR_In_Tøn•‹t_™d_M≠_Symbﬁs
[] = { 1,

21775 c⁄° 
OnigCodePoöt


21776 
	gCR_In_Alchemiˇl_Symbﬁs
[] = { 1,

21781 c⁄° 
OnigCodePoöt


21782 
	gCR_In_Geomëric_Sh≠es_Exãnded
[] = { 1,

21787 c⁄° 
OnigCodePoöt


21788 
	gCR_In_SuµÀmíèl_Aºows_C
[] = { 1,

21793 c⁄° 
OnigCodePoöt


21794 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_B
[] = { 1,

21799 c⁄° 
OnigCodePoöt


21800 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_C
[] = { 1,

21805 c⁄° 
OnigCodePoöt


21806 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_D
[] = { 1,

21811 c⁄° 
OnigCodePoöt


21812 
	gCR_In_CJK_Com∑tibûôy_Ideogøphs_SuµÀmít
[] = { 1,

21817 c⁄° 
OnigCodePoöt


21818 
	gCR_In_Tags
[] = { 1,

21823 c⁄° 
OnigCodePoöt


21824 
	gCR_In_V¨üti⁄_Sñe˘‹s_SuµÀmít
[] = { 1,

21829 c⁄° 
OnigCodePoöt


21830 
	gCR_In_SuµÀmíèry_Priv©e_U£_Aªa_A
[] = { 1,

21835 c⁄° 
OnigCodePoöt


21836 
	gCR_In_SuµÀmíèry_Priv©e_U£_Aªa_B
[] = { 1,

21841 c⁄° 
OnigCodePoöt


21842 
	gCR_In_No_Block
[] = { 40,

21885 c⁄° 
OnigCodePoöt
*

21886 c⁄° 
	gCodeR™ges
[] = {

21887 
CR_NEWLINE
,

21888 
CR_AÕha
,

21889 
CR_Bœnk
,

21890 
CR_C¡æ
,

21891 
CR_Digô
,

21892 
CR_Gøph
,

21893 
CR_Lowî
,

21894 
CR_Pröt
,

21895 
CR_Pun˘
,

21896 
CR_S∑˚
,

21897 
CR_Uµî
,

21898 
CR_XDigô
,

21899 
CR_W‹d
,

21900 
CR_A um
,

21901 
CR_ASCII
,

21902 
CR_Any
,

21903 
CR_Assig√d
,

21904 
CR_C
,

21905 
CR_Cc
,

21906 
CR_Cf
,

21907 
CR_Cn
,

21908 
CR_Co
,

21909 
CR_Cs
,

21910 
CR_L
,

21911 
CR_LC
,

21912 
CR_Ll
,

21913 
CR_Lm
,

21914 
CR_Lo
,

21915 
CR_Lt
,

21916 
CR_Lu
,

21917 
CR_M
,

21918 
CR_Mc
,

21919 
CR_Me
,

21920 
CR_Mn
,

21921 
CR_N
,

21922 
CR_Nd
,

21923 
CR_Nl
,

21924 
CR_No
,

21925 
CR_P
,

21926 
CR_Pc
,

21927 
CR_Pd
,

21928 
CR_Pe
,

21929 
CR_Pf
,

21930 
CR_Pi
,

21931 
CR_Po
,

21932 
CR_Ps
,

21933 
CR_S
,

21934 
CR_Sc
,

21935 
CR_Sk
,

21936 
CR_Sm
,

21937 
CR_So
,

21938 
CR_Z
,

21939 
CR_Zl
,

21940 
CR_Zp
,

21941 
CR_Zs
,

21942 
CR_M©h
,

21943 
CR_AÕhabëic
,

21944 
CR_Lowîˇ£
,

21945 
CR_Uµîˇ£
,

21946 
CR_Ca£d
,

21947 
CR_Ca£_Ign‹abÀ
,

21948 
CR_Ch™ges_Whí_Lowîˇ£d
,

21949 
CR_Ch™ges_Whí_Uµîˇ£d
,

21950 
CR_Ch™ges_Whí_TôÀˇ£d
,

21951 
CR_Ch™ges_Whí_Ca£fﬁded
,

21952 
CR_Ch™ges_Whí_Ca£m≠≥d
,

21953 
CR_ID_Sèπ
,

21954 
CR_ID_C⁄töue
,

21955 
CR_XID_Sèπ
,

21956 
CR_XID_C⁄töue
,

21957 
CR_DeÁu…_Ign‹abÀ_Code_Poöt
,

21958 
CR_Gøpheme_Exãnd
,

21959 
CR_Gøpheme_Ba£
,

21960 
CR_Gøpheme_Lök
,

21961 
CR_Comm⁄
,

21962 
CR_L©ö
,

21963 
CR_Gªek
,

21964 
CR_Cyrûlic
,

21965 
CR_Armíün
,

21966 
CR_Hebªw
,

21967 
CR_Aøbic
,

21968 
CR_Syrüc
,

21969 
CR_ThØ«
,

21970 
CR_Dev™ag¨i
,

21971 
CR_BígÆi
,

21972 
CR_Gurmukhi
,

21973 
CR_Guj¨©i
,

21974 
CR_Oriya
,

21975 
CR_Tamû
,

21976 
CR_Tñugu
,

21977 
CR_K™«da
,

21978 
CR_MÆayÆam
,

21979 
CR_SöhÆa
,

21980 
CR_Thai
,

21981 
CR_Lao
,

21982 
CR_Tibë™
,

21983 
CR_My™m¨
,

21984 
CR_Ge‹gün
,

21985 
CR_H™gul
,

21986 
CR_Ethi›ic
,

21987 
CR_Chîokì
,

21988 
CR_C™adün_Ab‹igöÆ
,

21989 
CR_Ogham
,

21990 
CR_Runic
,

21991 
CR_Khmî
,

21992 
CR_M⁄gﬁün
,

21993 
CR_Húag™a
,

21994 
CR_K©ak™a
,

21995 
CR_B›omofo
,

21996 
CR_H™
,

21997 
CR_Yi
,

21998 
CR_Old_Ièlic
,

21999 
CR_GŸhic
,

22000 
CR_De£ªt
,

22001 
CR_Inhîôed
,

22002 
CR_TagÆog
,

22003 
CR_H™unoo
,

22004 
CR_Buhid
,

22005 
CR_Tagb™wa
,

22006 
CR_Limbu
,

22007 
CR_Tai_Le
,

22008 
CR_Löór_B
,

22009 
CR_Ug¨ôic
,

22010 
CR_Shavün
,

22011 
CR_Osm™ya
,

22012 
CR_Cy¥iŸ
,

22013 
CR_BøûÀ
,

22014 
CR_Bugöe£
,

22015 
CR_C›tic
,

22016 
CR_New_Tai_Lue
,

22017 
CR_Gœgﬁôic
,

22018 
CR_Tiföagh
,

22019 
CR_SylŸi_Nagri
,

22020 
CR_Old_Pîsün
,

22021 
CR_Kh¨oshthi
,

22022 
CR_BÆöe£
,

22023 
CR_Cu√if‹m
,

22024 
CR_Ph€nicün
,

22025 
CR_Phags_Pa
,

22026 
CR_Nko
,

22027 
CR_Sund™e£
,

22028 
CR_Lïcha
,

22029 
CR_Ol_Chiki
,

22030 
CR_Vai
,

22031 
CR_Sauøshåa
,

22032 
CR_Kayah_Li
,

22033 
CR_Rej™g
,

22034 
CR_Lycün
,

22035 
CR_C¨ün
,

22036 
CR_Lydün
,

22037 
CR_Cham
,

22038 
CR_Tai_Tham
,

22039 
CR_Tai_Võt
,

22040 
CR_Ave°™
,

22041 
CR_Egy±ün_Hõroglyphs
,

22042 
CR_Sam¨ô™
,

22043 
CR_Lisu
,

22044 
CR_Bamum
,

22045 
CR_Jav™e£
,

22046 
CR_Mìãi_Mayek
,

22047 
CR_Im≥rül_Aømaic
,

22048 
CR_Old_South_Aøbün
,

22049 
CR_Ins¸ùti⁄Æ_P¨thün
,

22050 
CR_Ins¸ùti⁄Æ_Pahœvi
,

22051 
CR_Old_Turkic
,

22052 
CR_Kaôhi
,

22053 
CR_B©ak
,

22054 
CR_Bøhmi
,

22055 
CR_M™daic
,

22056 
CR_Chakma
,

22057 
CR_Mîoôic_Cursive
,

22058 
CR_Mîoôic_Hõroglyphs
,

22059 
CR_Müo
,

22060 
CR_Sh¨ada
,

22061 
CR_S‹a_Som≥ng
,

22062 
CR_Takri
,

22063 
CR_Cauˇsün_Alb™ün
,

22064 
CR_Basß_Vah
,

22065 
CR_Du∂oy™
,

22066 
CR_Elbaßn
,

22067 
CR_Gø¡ha
,

22068 
CR_Pahawh_Hm⁄g
,

22069 
CR_Khojki
,

22070 
CR_Löór_A
,

22071 
CR_Mahaj™i
,

22072 
CR_M™ich´™
,

22073 
CR_Míde_Kikakui
,

22074 
CR_Modi
,

22075 
CR_Mro
,

22076 
CR_Old_N‹th_Aøbün
,

22077 
CR_Nab©´™
,

22078 
CR_PÆmyª√
,

22079 
CR_Pau_Cö_Hau
,

22080 
CR_Old_Pîmic
,

22081 
CR_Pß…î_Pahœvi
,

22082 
CR_Siddham
,

22083 
CR_Khudawadi
,

22084 
CR_Túhuè
,

22085 
CR_W¨™g_Côi
,

22086 
CR_Whôe_S∑˚
,

22087 
CR_Bidi_C⁄åﬁ
,

22088 
CR_Joö_C⁄åﬁ
,

22089 
CR_Dash
,

22090 
CR_Hyphí
,

22091 
CR_QuŸ©i⁄_M¨k
,

22092 
CR_TîmöÆ_Pun˘u©i⁄
,

22093 
CR_Othî_M©h
,

22094 
CR_Hex_Digô
,

22095 
CR_ASCII_Hex_Digô
,

22096 
CR_Othî_AÕhabëic
,

22097 
CR_Ideogøphic
,

22098 
CR_Dü¸ôic
,

22099 
CR_Exãndî
,

22100 
CR_Othî_Lowîˇ£
,

22101 
CR_Othî_Uµîˇ£
,

22102 
CR_N⁄ch¨a˘î_Code_Poöt
,

22103 
CR_Othî_Gøpheme_Exãnd
,

22104 
CR_IDS_Bö¨y_O≥øt‹
,

22105 
CR_IDS_Trö¨y_O≥øt‹
,

22106 
CR_Radiˇl
,

22107 
CR_Unifõd_Ideogøph
,

22108 
CR_Othî_DeÁu…_Ign‹abÀ_Code_Poöt
,

22109 
CR_Dïªˇãd
,

22110 
CR_So·_DŸãd
,

22111 
CR_Logiˇl_Ordî_Ex˚±i⁄
,

22112 
CR_Othî_ID_Sèπ
,

22113 
CR_Othî_ID_C⁄töue
,

22114 
CR_STîm
,

22115 
CR_V¨üti⁄_Sñe˘‹
,

22116 
CR_P©ã∫_Whôe_S∑˚
,

22117 
CR_P©ã∫_Sy¡ax
,

22118 
CR_Unknown
,

22119 
CR_In_Basic_L©ö
,

22120 
CR_In_L©ö_1_SuµÀmít
,

22121 
CR_In_L©ö_Exãnded_A
,

22122 
CR_In_L©ö_Exãnded_B
,

22123 
CR_In_IPA_Exãnsi⁄s
,

22124 
CR_In_S∑cög_Modifõr_Lëãrs
,

22125 
CR_In_Comböög_Dü¸ôiˇl_M¨ks
,

22126 
CR_In_Gªek_™d_C›tic
,

22127 
CR_In_Cyrûlic
,

22128 
CR_In_Cyrûlic_SuµÀmít
,

22129 
CR_In_Armíün
,

22130 
CR_In_Hebªw
,

22131 
CR_In_Aøbic
,

22132 
CR_In_Syrüc
,

22133 
CR_In_Aøbic_SuµÀmít
,

22134 
CR_In_ThØ«
,

22135 
CR_In_NKo
,

22136 
CR_In_Sam¨ô™
,

22137 
CR_In_M™daic
,

22138 
CR_In_Aøbic_Exãnded_A
,

22139 
CR_In_Dev™ag¨i
,

22140 
CR_In_BígÆi
,

22141 
CR_In_Gurmukhi
,

22142 
CR_In_Guj¨©i
,

22143 
CR_In_Oriya
,

22144 
CR_In_Tamû
,

22145 
CR_In_Tñugu
,

22146 
CR_In_K™«da
,

22147 
CR_In_MÆayÆam
,

22148 
CR_In_SöhÆa
,

22149 
CR_In_Thai
,

22150 
CR_In_Lao
,

22151 
CR_In_Tibë™
,

22152 
CR_In_My™m¨
,

22153 
CR_In_Ge‹gün
,

22154 
CR_In_H™gul_Jamo
,

22155 
CR_In_Ethi›ic
,

22156 
CR_In_Ethi›ic_SuµÀmít
,

22157 
CR_In_Chîokì
,

22158 
CR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics
,

22159 
CR_In_Ogham
,

22160 
CR_In_Runic
,

22161 
CR_In_TagÆog
,

22162 
CR_In_H™unoo
,

22163 
CR_In_Buhid
,

22164 
CR_In_Tagb™wa
,

22165 
CR_In_Khmî
,

22166 
CR_In_M⁄gﬁün
,

22167 
CR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics_Exãnded
,

22168 
CR_In_Limbu
,

22169 
CR_In_Tai_Le
,

22170 
CR_In_New_Tai_Lue
,

22171 
CR_In_Khmî_Symbﬁs
,

22172 
CR_In_Bugöe£
,

22173 
CR_In_Tai_Tham
,

22174 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_Exãnded
,

22175 
CR_In_BÆöe£
,

22176 
CR_In_Sund™e£
,

22177 
CR_In_B©ak
,

22178 
CR_In_Lïcha
,

22179 
CR_In_Ol_Chiki
,

22180 
CR_In_Sund™e£_SuµÀmít
,

22181 
CR_In_Vedic_Exãnsi⁄s
,

22182 
CR_In_Ph⁄ëic_Exãnsi⁄s
,

22183 
CR_In_Ph⁄ëic_Exãnsi⁄s_SuµÀmít
,

22184 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_SuµÀmít
,

22185 
CR_In_L©ö_Exãnded_Addôi⁄Æ
,

22186 
CR_In_Gªek_Exãnded
,

22187 
CR_In_GíîÆ_Pun˘u©i⁄
,

22188 
CR_In_Su≥rs¸ùts_™d_Subs¸ùts
,

22189 
CR_In_Cuºícy_Symbﬁs
,

22190 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_f‹_Symbﬁs
,

22191 
CR_In_Lëãæike_Symbﬁs
,

22192 
CR_In_Numbî_F‹ms
,

22193 
CR_In_Aºows
,

22194 
CR_In_M©hem©iˇl_O≥øt‹s
,

22195 
CR_In_Mis˚Œ™eous_Techniˇl
,

22196 
CR_In_C⁄åﬁ_Pi˘uªs
,

22197 
CR_In_O±iˇl_Ch¨a˘î_Recognôi⁄
,

22198 
CR_In_En˛o£d_AÕh™umîics
,

22199 
CR_In_Box_Døwög
,

22200 
CR_In_Block_EÀmíts
,

22201 
CR_In_Geomëric_Sh≠es
,

22202 
CR_In_Mis˚Œ™eous_Symbﬁs
,

22203 
CR_In_Dögb©s
,

22204 
CR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_A
,

22205 
CR_In_SuµÀmíèl_Aºows_A
,

22206 
CR_In_BøûÀ_P©ã∫s
,

22207 
CR_In_SuµÀmíèl_Aºows_B
,

22208 
CR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_B
,

22209 
CR_In_SuµÀmíèl_M©hem©iˇl_O≥øt‹s
,

22210 
CR_In_Mis˚Œ™eous_Symbﬁs_™d_Aºows
,

22211 
CR_In_Gœgﬁôic
,

22212 
CR_In_L©ö_Exãnded_C
,

22213 
CR_In_C›tic
,

22214 
CR_In_Ge‹gün_SuµÀmít
,

22215 
CR_In_Tiföagh
,

22216 
CR_In_Ethi›ic_Exãnded
,

22217 
CR_In_Cyrûlic_Exãnded_A
,

22218 
CR_In_SuµÀmíèl_Pun˘u©i⁄
,

22219 
CR_In_CJK_Radiˇls_SuµÀmít
,

22220 
CR_In_K™gxi_Radiˇls
,

22221 
CR_In_Ideogøphic_Des¸ùti⁄_Ch¨a˘îs
,

22222 
CR_In_CJK_Symbﬁs_™d_Pun˘u©i⁄
,

22223 
CR_In_Húag™a
,

22224 
CR_In_K©ak™a
,

22225 
CR_In_B›omofo
,

22226 
CR_In_H™gul_Com∑tibûôy_Jamo
,

22227 
CR_In_K™bun
,

22228 
CR_In_B›omofo_Exãnded
,

22229 
CR_In_CJK_Såokes
,

22230 
CR_In_K©ak™a_Ph⁄ëic_Exãnsi⁄s
,

22231 
CR_In_En˛o£d_CJK_Lëãrs_™d_M⁄ths
,

22232 
CR_In_CJK_Com∑tibûôy
,

22233 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_A
,

22234 
CR_In_Yijög_Hexagøm_Symbﬁs
,

22235 
CR_In_CJK_Unifõd_Ideogøphs
,

22236 
CR_In_Yi_SyŒabÀs
,

22237 
CR_In_Yi_Radiˇls
,

22238 
CR_In_Lisu
,

22239 
CR_In_Vai
,

22240 
CR_In_Cyrûlic_Exãnded_B
,

22241 
CR_In_Bamum
,

22242 
CR_In_Modifõr_T⁄e_Lëãrs
,

22243 
CR_In_L©ö_Exãnded_D
,

22244 
CR_In_SylŸi_Nagri
,

22245 
CR_In_Comm⁄_Indic_Numbî_F‹ms
,

22246 
CR_In_Phags_∑
,

22247 
CR_In_Sauøshåa
,

22248 
CR_In_Dev™ag¨i_Exãnded
,

22249 
CR_In_Kayah_Li
,

22250 
CR_In_Rej™g
,

22251 
CR_In_H™gul_Jamo_Exãnded_A
,

22252 
CR_In_Jav™e£
,

22253 
CR_In_My™m¨_Exãnded_B
,

22254 
CR_In_Cham
,

22255 
CR_In_My™m¨_Exãnded_A
,

22256 
CR_In_Tai_Võt
,

22257 
CR_In_Mìãi_Mayek_Exãnsi⁄s
,

22258 
CR_In_Ethi›ic_Exãnded_A
,

22259 
CR_In_L©ö_Exãnded_E
,

22260 
CR_In_Mìãi_Mayek
,

22261 
CR_In_H™gul_SyŒabÀs
,

22262 
CR_In_H™gul_Jamo_Exãnded_B
,

22263 
CR_In_High_Suºog©es
,

22264 
CR_In_High_Priv©e_U£_Suºog©es
,

22265 
CR_In_Low_Suºog©es
,

22266 
CR_In_Priv©e_U£_Aªa
,

22267 
CR_In_CJK_Com∑tibûôy_Ideogøphs
,

22268 
CR_In_AÕhabëic_Pª£¡©i⁄_F‹ms
,

22269 
CR_In_Aøbic_Pª£¡©i⁄_F‹ms_A
,

22270 
CR_In_V¨üti⁄_Sñe˘‹s
,

22271 
CR_In_Vîtiˇl_F‹ms
,

22272 
CR_In_Comböög_HÆf_M¨ks
,

22273 
CR_In_CJK_Com∑tibûôy_F‹ms
,

22274 
CR_In_SmÆl_F‹m_V¨ü¡s
,

22275 
CR_In_Aøbic_Pª£¡©i⁄_F‹ms_B
,

22276 
CR_In_HÆfwidth_™d_FuŒwidth_F‹ms
,

22277 
CR_In_S≥cüls
,

22278 
CR_In_Löór_B_SyŒab¨y
,

22279 
CR_In_Löór_B_Ideogøms
,

22280 
CR_In_Aegón_Numbîs
,

22281 
CR_In_Ancõ¡_Gªek_Numbîs
,

22282 
CR_In_Ancõ¡_Symbﬁs
,

22283 
CR_In_Phai°os_Disc
,

22284 
CR_In_Lycün
,

22285 
CR_In_C¨ün
,

22286 
CR_In_C›tic_E∑˘_Numbîs
,

22287 
CR_In_Old_Ièlic
,

22288 
CR_In_GŸhic
,

22289 
CR_In_Old_Pîmic
,

22290 
CR_In_Ug¨ôic
,

22291 
CR_In_Old_Pîsün
,

22292 
CR_In_De£ªt
,

22293 
CR_In_Shavün
,

22294 
CR_In_Osm™ya
,

22295 
CR_In_Elbaßn
,

22296 
CR_In_Cauˇsün_Alb™ün
,

22297 
CR_In_Löór_A
,

22298 
CR_In_Cy¥iŸ_SyŒab¨y
,

22299 
CR_In_Im≥rül_Aømaic
,

22300 
CR_In_PÆmyª√
,

22301 
CR_In_Nab©´™
,

22302 
CR_In_Ph€nicün
,

22303 
CR_In_Lydün
,

22304 
CR_In_Mîoôic_Hõroglyphs
,

22305 
CR_In_Mîoôic_Cursive
,

22306 
CR_In_Kh¨oshthi
,

22307 
CR_In_Old_South_Aøbün
,

22308 
CR_In_Old_N‹th_Aøbün
,

22309 
CR_In_M™ich´™
,

22310 
CR_In_Ave°™
,

22311 
CR_In_Ins¸ùti⁄Æ_P¨thün
,

22312 
CR_In_Ins¸ùti⁄Æ_Pahœvi
,

22313 
CR_In_Pß…î_Pahœvi
,

22314 
CR_In_Old_Turkic
,

22315 
CR_In_Rumi_NumîÆ_Symbﬁs
,

22316 
CR_In_Bøhmi
,

22317 
CR_In_Kaôhi
,

22318 
CR_In_S‹a_Som≥ng
,

22319 
CR_In_Chakma
,

22320 
CR_In_Mahaj™i
,

22321 
CR_In_Sh¨ada
,

22322 
CR_In_SöhÆa_Archaic_Numbîs
,

22323 
CR_In_Khojki
,

22324 
CR_In_Khudawadi
,

22325 
CR_In_Gø¡ha
,

22326 
CR_In_Túhuè
,

22327 
CR_In_Siddham
,

22328 
CR_In_Modi
,

22329 
CR_In_Takri
,

22330 
CR_In_W¨™g_Côi
,

22331 
CR_In_Pau_Cö_Hau
,

22332 
CR_In_Cu√if‹m
,

22333 
CR_In_Cu√if‹m_Numbîs_™d_Pun˘u©i⁄
,

22334 
CR_In_Egy±ün_Hõroglyphs
,

22335 
CR_In_Bamum_SuµÀmít
,

22336 
CR_In_Mro
,

22337 
CR_In_Basß_Vah
,

22338 
CR_In_Pahawh_Hm⁄g
,

22339 
CR_In_Müo
,

22340 
CR_In_K™a_SuµÀmít
,

22341 
CR_In_Du∂oy™
,

22342 
CR_In_Sh‹th™d_F‹m©_C⁄åﬁs
,

22343 
CR_In_Byz™töe_Musiˇl_Symbﬁs
,

22344 
CR_In_Musiˇl_Symbﬁs
,

22345 
CR_In_Ancõ¡_Gªek_Musiˇl_NŸ©i⁄
,

22346 
CR_In_Tai_Xu™_Jög_Symbﬁs
,

22347 
CR_In_Cou¡ög_Rod_NumîÆs
,

22348 
CR_In_M©hem©iˇl_AÕh™umîic_Symbﬁs
,

22349 
CR_In_Míde_Kikakui
,

22350 
CR_In_Aøbic_M©hem©iˇl_AÕhabëic_Symbﬁs
,

22351 
CR_In_Mahj⁄g_Tûes
,

22352 
CR_In_Domöo_Tûes
,

22353 
CR_In_Pœyög_C¨ds
,

22354 
CR_In_En˛o£d_AÕh™umîic_SuµÀmít
,

22355 
CR_In_En˛o£d_Ideogøphic_SuµÀmít
,

22356 
CR_In_Mis˚Œ™eous_Symbﬁs_™d_Pi˘ogøphs
,

22357 
CR_In_EmŸic⁄s
,

22358 
CR_In_O∫amíèl_Dögb©s
,

22359 
CR_In_Tøn•‹t_™d_M≠_Symbﬁs
,

22360 
CR_In_Alchemiˇl_Symbﬁs
,

22361 
CR_In_Geomëric_Sh≠es_Exãnded
,

22362 
CR_In_SuµÀmíèl_Aºows_C
,

22363 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_B
,

22364 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_C
,

22365 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_D
,

22366 
CR_In_CJK_Com∑tibûôy_Ideogøphs_SuµÀmít
,

22367 
CR_In_Tags
,

22368 
CR_In_V¨üti⁄_Sñe˘‹s_SuµÀmít
,

22369 
CR_In_SuµÀmíèry_Priv©e_U£_Aªa_A
,

22370 
CR_In_SuµÀmíèry_Priv©e_U£_Aªa_B
,

22371 
CR_In_No_Block
,

22374 
	#TOTAL_KEYWORDS
 690

	)

22375 
	#MIN_WORD_LENGTH
 1

	)

22376 
	#MAX_WORD_LENGTH
 44

	)

22377 
	#MIN_HASH_VALUE
 1

	)

22378 
	#MAX_HASH_VALUE
 5359

	)

22381 #i‚de‡
GPERF_DOWNCASE


22382 
	#GPERF_DOWNCASE
 1

	)

22383 
	gg≥rf_downˇ£
[256] =

22406 #i‚de‡
GPERF_CASE_STRNCMP


22407 
	#GPERF_CASE_STRNCMP
 1

	)

22409 
	$g≥rf_ˇ£_°∫cmp
 (c⁄° *
s1
, c⁄° *
s2
, 
n
)

22411 ; 
n
 > 0;)

22413 
c1
 = 
g≥rf_downˇ£
[()*
s1
++];

22414 
c2
 = 
g≥rf_downˇ£
[()*
s2
++];

22415 i‡(
c1
 !0 && c1 =
c2
)

22417 
n
--;

22420  ()
c1
 - ()
c2
;

22423 
	}
}

22426 #ifde‡
__GNUC__


22427 
	g__ölöe


22429 #ifde‡
__˝lu•lus


22430 
	gölöe


22434 
	$hash
 (c⁄° *
°r
, 
Àn
)

22436 c⁄° 
asso_vÆues
[] =

22465 
hvÆ
 = 
Àn
;

22467 
hvÆ
)

22470 
hvÆ
 +
asso_vÆues
[()
°r
[15]];

22476 
hvÆ
 +
asso_vÆues
[()
°r
[11]];

22484 
hvÆ
 +
asso_vÆues
[()
°r
[5]];

22487 
hvÆ
 +
asso_vÆues
[()
°r
[4]];

22491 
hvÆ
 +
asso_vÆues
[()
°r
[2]];

22494 
hvÆ
 +
asso_vÆues
[()
°r
[1]];

22497 
hvÆ
 +
asso_vÆues
[()
°r
[0]];

22500  
hvÆ
 + 
asso_vÆues
[()
°r
[
Àn
 - 1]];

22501 
	}
}

22503 #ifde‡
__GNUC__


22504 
	g__ölöe


22505 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


22506 
__©åibuã__
 ((
__gnu_ölöe__
))

22509 c⁄° 
Pr›îtyNameCty≥
 *

22510 
	$unicode_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

22512 c⁄° 
Pr›îtyNameCty≥
 
w‹dli°
[] =

24722 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

24724 
key
 = 
	`hash
 (
°r
, 
Àn
);

24726 i‡(
key
 <
MAX_HASH_VALUE
 && key >= 0)

24728 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

24730 i‡(((()*
°r
 ^ ()*
s
Ë& ~32Ë=0 && !
	`g≥rf_ˇ£_°∫cmp
 (°r, s, 
Àn
) && s[len] == '\0')

24731  &
w‹dli°
[
key
];

24735 
	}
}

24739 
	#PROPERTY_VERSION
 7
_0_0


	)

24741 
	#PROPERTY_NAME_MAX_SIZE
 59

	)

24742 
	#CODE_RANGES_NUM
 485

	)

	@modules/oniguruma/src/unicode-7.0/unicode_property_data_posix.c

38 c⁄° 
OnigCodePoöt


39 
CR_NEWLINE
[] = { 1,

44 c⁄° 
OnigCodePoöt


45 
	gCR_AÕha
[] = { 600,

649 c⁄° 
OnigCodePoöt


650 
	gCR_Bœnk
[] = { 8,

662 c⁄° 
OnigCodePoöt


663 
	gCR_C¡æ
[] = { 2,

669 c⁄° 
OnigCodePoöt


670 
	gCR_Digô
[] = { 50,

724 c⁄° 
OnigCodePoöt


725 
	gCR_Gøph
[] = { 605,

1334 c⁄° 
OnigCodePoöt


1335 
	gCR_Lowî
[] = { 633,

1972 c⁄° 
OnigCodePoöt


1973 
	gCR_Pröt
[] = { 602,

2579 c⁄° 
OnigCodePoöt


2580 
	gCR_Pun˘
[] = { 155,

2739 c⁄° 
OnigCodePoöt


2740 
	gCR_S∑˚
[] = { 10,

2754 c⁄° 
OnigCodePoöt


2755 
	gCR_Uµî
[] = { 627,

3386 c⁄° 
OnigCodePoöt


3387 
	gCR_XDigô
[] = { 3,

3394 c⁄° 
OnigCodePoöt


3395 
	gCR_W‹d
[] = { 629,

4028 c⁄° 
OnigCodePoöt


4029 
	gCR_A um
[] = { 630,

4663 c⁄° 
OnigCodePoöt


4664 
	gCR_ASCII
[] = { 1,

4669 c⁄° 
OnigCodePoöt
*

4670 c⁄° 
	gCodeR™ges
[] = {

4671 
CR_NEWLINE
,

4672 
CR_AÕha
,

4673 
CR_Bœnk
,

4674 
CR_C¡æ
,

4675 
CR_Digô
,

4676 
CR_Gøph
,

4677 
CR_Lowî
,

4678 
CR_Pröt
,

4679 
CR_Pun˘
,

4680 
CR_S∑˚
,

4681 
CR_Uµî
,

4682 
CR_XDigô
,

4683 
CR_W‹d
,

4684 
CR_A um
,

4685 
CR_ASCII
,

4688 
	#TOTAL_KEYWORDS
 15

	)

4689 
	#MIN_WORD_LENGTH
 4

	)

4690 
	#MAX_WORD_LENGTH
 7

	)

4691 
	#MIN_HASH_VALUE
 5

	)

4692 
	#MAX_HASH_VALUE
 19

	)

4695 #i‚de‡
GPERF_DOWNCASE


4696 
	#GPERF_DOWNCASE
 1

	)

4697 
	gg≥rf_downˇ£
[256] =

4720 #i‚de‡
GPERF_CASE_STRNCMP


4721 
	#GPERF_CASE_STRNCMP
 1

	)

4723 
	$g≥rf_ˇ£_°∫cmp
 (c⁄° *
s1
, c⁄° *
s2
, 
n
)

4725 ; 
n
 > 0;)

4727 
c1
 = 
g≥rf_downˇ£
[()*
s1
++];

4728 
c2
 = 
g≥rf_downˇ£
[()*
s2
++];

4729 i‡(
c1
 !0 && c1 =
c2
)

4731 
n
--;

4734  ()
c1
 - ()
c2
;

4737 
	}
}

4740 #ifde‡
__GNUC__


4741 
	g__ölöe


4743 #ifde‡
__˝lu•lus


4744 
	gölöe


4748 
	$hash
 (c⁄° *
°r
, 
Àn
)

4750 c⁄° 
asso_vÆues
[] =

4779  
Àn
 + 
asso_vÆues
[()
°r
[2]] +ásso_values[()str[0]];

4780 
	}
}

4782 #ifde‡
__GNUC__


4783 
	g__ölöe


4784 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__GNUC_GNU_INLINE__


4785 
__©åibuã__
 ((
__gnu_ölöe__
))

4788 c⁄° 
Pr›îtyNameCty≥
 *

4789 
	$unicode_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

4791 c⁄° 
Pr›îtyNameCty≥
 
w‹dli°
[] =

4826 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

4828 
key
 = 
	`hash
 (
°r
, 
Àn
);

4830 i‡(
key
 <
MAX_HASH_VALUE
 && key >= 0)

4832 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

4834 i‡(((()*
°r
 ^ ()*
s
Ë& ~32Ë=0 && !
	`g≥rf_ˇ£_°∫cmp
 (°r, s, 
Àn
) && s[len] == '\0')

4835  &
w‹dli°
[
key
];

4839 
	}
}

4843 
	#PROPERTY_VERSION
 7
_0_0


	)

4845 
	#PROPERTY_NAME_MAX_SIZE
 17

	)

4846 
	#CODE_RANGES_NUM
 15

	)

	@modules/oniguruma/src/unicode-7.0/unicode_unfold_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 1180

	)

14 
	#MIN_WORD_LENGTH
 3

	)

15 
	#MAX_WORD_LENGTH
 3

	)

16 
	#MIN_HASH_VALUE
 6

	)

17 
	#MAX_HASH_VALUE
 1572

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

61  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 2)+14] +ásso_values[()onig_codes_byte_at(codes, 1)+1] +ásso_values[()onig_codes_byte_at(codes, 0)];

62 
	}
}

64 c⁄° 
ByUnfﬁdKey
 *

65 
	$unicode_unfﬁd_key
(
OnigCodePoöt
 
code
)

67 c⁄° 
ByUnfﬁdKey
 
w‹dli°
[] =

2558 
key
 = 
	`hash
(&
code
);

2560 i‡(
key
 <
MAX_HASH_VALUE
)

2562 
OnigCodePoöt
 
gcode
 = 
w‹dli°
[
key
].
code
;

2564 i‡(
code
 =
gcode
)

2565  &
w‹dli°
[
key
];

2569 
	}
}

	@modules/oniguruma/src/unicode.c

30 
	~"ªgöt.h
"

32 
	#ONIGENC_IS_UNICODE_ISO_8859_1_CTYPE
(
code
,
˘y≥
) \

33 ((
EncUNICODE_ISO_8859_1_Cty≥TabÀ
[
code
] & 
	`CTYPE_TO_BIT
(
˘y≥
)Ë!0)

	)

35 c⁄° 
	gEncUNICODE_ISO_8859_1_Cty≥TabÀ
[256] = {

70 #ifde‡
USE_UNICODE_PROPERTIES


71 
	~"unicode_¥›îty_d©a.c
"

73 
	~"unicode_¥›îty_d©a_posix.c
"

76 
	~"°.h
"

78 
	#USER_DEFINED_PROPERTY_MAX_NUM
 20

	)

81 
	m˘y≥
;

82 
OnigCodePoöt
* 
	mønges
;

83 } 
	tU£rDeföedPr›îtyVÆue
;

85 
	gU£rDeföedPr›îtyNum
;

86 
U£rDeföedPr›îtyVÆue


87 
	gU£rDeföedPr›îtyR™ges
[
USER_DEFINED_PROPERTY_MAX_NUM
];

88 
°_èbÀ
* 
	gU£rDeföedPr›îtyTabÀ
;

91 
	$⁄ig_unicode_deföe_u£r_¥›îty
(c⁄° * 
«me
, 
OnigCodePoöt
* 
ønges
)

93 
U£rDeföedPr›îtyVÆue
* 
e
;

94 
i
;

95 
n
;

96 
Àn
;

97 
c
;

98 * 
s
;

100 i‡(
U£rDeföedPr›îtyNum
 >
USER_DEFINED_PROPERTY_MAX_NUM
)

101  
ONIGERR_TOO_MANY_USER_DEFINED_OBJECTS
;

103 
Àn
 = 
	`°æí
(
«me
);

104 i‡(
Àn
 >
PROPERTY_NAME_MAX_SIZE
)

105  
ONIGERR_TOO_LONG_PROPERTY_NAME
;

107 
s
 = (* )
	`xmÆloc
(
Àn
 + 1);

108 i‡(
s
 == 0)

109  
ONIGERR_MEMORY
;

111 
n
 = 0;

112 
i
 = 0; i < 
Àn
; i++) {

113 
c
 = 
«me
[
i
];

114 i‡(
c
 <= 0 || c >= 0x80) {

115 
	`x‰ì
(
s
);

116  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

119 i‡(
c
 != ' ' && c != '-' && c != '_') {

120 
s
[
n
] = 
c
;

121 
n
++;

124 
s
[
n
] = '\0';

126 i‡(
U£rDeföedPr›îtyTabÀ
 == 0) {

127 
U£rDeföedPr›îtyTabÀ
 = 
	`⁄ig_°_öô_°ªnd_èbÀ_wôh_size
(10);

130 
e
 = 
U£rDeföedPr›îtyR™ges
 + 
U£rDeföedPr›îtyNum
;

131 
e
->
˘y≥
 = 
CODE_RANGES_NUM
 + 
U£rDeföedPr›îtyNum
;

132 
e
->
ønges
 =Ñanges;

133 
	`⁄ig_°_ö£π_°ªnd
(
U£rDeföedPr›îtyTabÀ
,

134 (c⁄° 
UCh¨
* )
s
, (c⁄° UCh¨* )†+ 
n
,

135 (
hash_d©a_ty≥
 )((* )
e
));

137 
U£rDeföedPr›îtyNum
++;

139 
	}
}

142 
	$⁄igíc_unicode_is_code_˘y≥
(
OnigCodePoöt
 
code
, 
˘y≥
)

145 #ifde‡
USE_UNICODE_PROPERTIES


146 
˘y≥
 <
ONIGENC_MAX_STD_CTYPE
 &&

148 
code
 < 256) {

149  
	`ONIGENC_IS_UNICODE_ISO_8859_1_CTYPE
(
code
, 
˘y≥
);

152 i‡(
˘y≥
 >
CODE_RANGES_NUM
) {

153 
ödex
 = 
˘y≥
 - 
CODE_RANGES_NUM
;

154 i‡(
ödex
 < 
U£rDeföedPr›îtyNum
)

155  
	`⁄ig_is_ö_code_ønge
((
UCh¨
* )
U£rDeföedPr›îtyR™ges
[
ödex
].
ønges
, 
code
);

157  
ONIGERR_TYPE_BUG
;

160  
	`⁄ig_is_ö_code_ønge
((
UCh¨
* )
CodeR™ges
[
˘y≥
], 
code
);

161 
	}
}

165 
	$⁄igíc_unicode_˘y≥_code_ønge
(
˘y≥
, c⁄° 
OnigCodePoöt
* 
ønges
[])

167 i‡(
˘y≥
 >
CODE_RANGES_NUM
) {

168 
ödex
 = 
˘y≥
 - 
CODE_RANGES_NUM
;

169 i‡(
ödex
 < 
U£rDeföedPr›îtyNum
) {

170 *
ønges
 = 
U£rDeföedPr›îtyR™ges
[
ödex
].ranges;

174  
ONIGERR_TYPE_BUG
;

177 *
ønges
 = 
CodeR™ges
[
˘y≥
];

179 
	}
}

182 
	$⁄igíc_utf16_32_gë_˘y≥_code_ønge
(
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
* 
sb_out
,

183 c⁄° 
OnigCodePoöt
* 
ønges
[])

185 *
sb_out
 = 0x00;

186  
	`⁄igíc_unicode_˘y≥_code_ønge
(
˘y≥
, 
ønges
);

187 
	}
}

190 
	$⁄igíc_unicode_¥›îty_«me_to_˘y≥
(
OnigEncodög
 
íc
, 
UCh¨
* 
«me
, UCh¨* 
íd
)

192 
Àn
;

193 
UCh¨
 *
p
;

194 
OnigCodePoöt
 
code
;

195 c⁄° 
Pr›îtyNameCty≥
* 
pc
;

196 
buf
[
PROPERTY_NAME_MAX_SIZE
];

198 
p
 = 
«me
;

199 
Àn
 = 0;

200 
p
 < 
íd
) {

201 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

202 i‡(
code
 >= 0x80)

203  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

205 i‡(
code
 != ' ' && code != '-' && code != '_') {

206 
buf
[
Àn
++] = ()
code
;

207 i‡(
Àn
 >
PROPERTY_NAME_MAX_SIZE
)

208  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

211 
p
 +
	`í˛í
(
íc
,Ö);

214 
buf
[
Àn
] = 0;

216 i‡(
U£rDeföedPr›îtyTabÀ
 != 0) {

217 
U£rDeföedPr›îtyVÆue
* 
e
;

218 
e
 = (
U£rDeföedPr›îtyVÆue
* )
NULL
;

219 
	`⁄ig_°_lookup_°ªnd
(
U£rDeföedPr›îtyTabÀ
,

220 (c⁄° 
UCh¨
* )
buf
, (c⁄° UCh¨* )bu‡+ 
Àn
,

221 (
hash_d©a_ty≥
* )((* )(&
e
)));

222 i‡(
e
 != 0) {

223  
e
->
˘y≥
;

227 
pc
 = 
	`unicode_lookup_¥›îty_«me
(
buf
, 
Àn
);

228 i‡(
pc
 != 0) {

230 #i‚de‡
USE_UNICODE_PROPERTIES


231 i‡(
pc
->
˘y≥
 > 
ONIGENC_MAX_STD_CTYPE
)

232  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

235  
pc
->
˘y≥
;

238  
ONIGERR_INVALID_CHAR_PROPERTY_NAME
;

239 
	}
}

242 
	~"unicode_fﬁd_d©a.c
"

246 
	$⁄igíc_unicode_mbc_ˇ£_fﬁd
(
OnigEncodög
 
íc
,

247 
OnigCa£FﬁdTy≥
 
Êag
 
ARG_UNUSED
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
,

248 
UCh¨
* 
fﬁd
)

250 c⁄° 
ByUnfﬁdKey
* 
buk
;

252 
OnigCodePoöt
 
code
;

253 
i
, 
Àn
, 
æí
;

254 c⁄° 
UCh¨
 *
p
 = *
µ
;

256 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

257 
Àn
 = 
	`í˛í
(
íc
, 
p
);

258 *
µ
 +
Àn
;

260 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


261 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

262 i‡(
code
 == 0x0130) {

263  
	`ONIGENC_CODE_TO_MBC
(
íc
, 0x0069, 
fﬁd
);

266 i‡(
code
 == 0x0049) {

267  
	`ONIGENC_CODE_TO_MBC
(
íc
, 0x0131, 
fﬁd
);

273 
buk
 = 
	`unicode_unfﬁd_key
(
code
);

274 i‡(
buk
 != 0) {

275 i‡(
buk
->
fﬁd_Àn
 == 1) {

276  
	`ONIGENC_CODE_TO_MBC
(
íc
, *
	`FOLDS1_FOLD
(
buk
->
ödex
), 
fﬁd
);

279 
OnigCodePoöt
* 
addr
;

281 
	`FOLDS_FOLD_ADDR_BUK
(
buk
, 
addr
);

282 
æí
 = 0;

283 
i
 = 0; i < 
buk
->
fﬁd_Àn
; i++) {

284 
OnigCodePoöt
 
c
 = 
addr
[
i
];

285 
Àn
 = 
	`ONIGENC_CODE_TO_MBC
(
íc
, 
c
, 
fﬁd
);

286 
fﬁd
 +
Àn
;

287 
æí
 +
Àn
;

289  
æí
;

293 
i
 = 0; i < 
Àn
; i++) {

294 *
fﬁd
++ = *
p
++;

296  
Àn
;

297 
	}
}

300 
	$≠∂y_ˇ£_fﬁd1
(
‰om
, 
to
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

302 
i
, 
j
, 
k
, 
n
, 
r
;

304 
i
 = 
‰om
; i < 
to
; ) {

305 
OnigCodePoöt
 
fﬁd
 = *
	`FOLDS1_FOLD
(
i
);

306 
n
 = 
	`FOLDS1_UNFOLDS_NUM
(
i
);

307 
j
 = 0; j < 
n
; j++) {

308 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS1_UNFOLDS
(
i
)[
j
];

310 
r
 = (*
f
)(
fﬁd
, &
unfﬁd
, 1, 
¨g
);

311 i‡(
r
 != 0) Ñ;

312 
r
 = (*
f
)(
unfﬁd
, &
fﬁd
, 1, 
¨g
);

313 i‡(
r
 != 0) Ñ;

315 
k
 = 0; k < 
j
; k++) {

316 
OnigCodePoöt
 
unfﬁd2
 = 
	`FOLDS1_UNFOLDS
(
i
)[
k
];

317 
r
 = (*
f
)(
unfﬁd
, &
unfﬁd2
, 1, 
¨g
);

318 i‡(
r
 != 0) Ñ;

319 
r
 = (*
f
)(
unfﬁd2
, &
unfﬁd
, 1, 
¨g
);

320 i‡(
r
 != 0) Ñ;

324 
i
 = 
	`FOLDS1_NEXT_INDEX
(i);

328 
	}
}

331 
	$≠∂y_ˇ£_fﬁd2
(
‰om
, 
to
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

333 
i
, 
j
, 
k
, 
n
, 
r
;

335 
i
 = 
‰om
; i < 
to
; ) {

336 
OnigCodePoöt
* 
fﬁd
 = 
	`FOLDS2_FOLD
(
i
);

337 
n
 = 
	`FOLDS2_UNFOLDS_NUM
(
i
);

338 
j
 = 0; j < 
n
; j++) {

339 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS2_UNFOLDS
(
i
)[
j
];

341 
r
 = (*
f
)(
unfﬁd
, 
fﬁd
, 2, 
¨g
);

342 i‡(
r
 != 0) Ñ;

344 
k
 = 0; k < 
j
; k++) {

345 
OnigCodePoöt
 
unfﬁd2
 = 
	`FOLDS2_UNFOLDS
(
i
)[
k
];

346 
r
 = (*
f
)(
unfﬁd
, &
unfﬁd2
, 1, 
¨g
);

347 i‡(
r
 != 0) Ñ;

348 
r
 = (*
f
)(
unfﬁd2
, &
unfﬁd
, 1, 
¨g
);

349 i‡(
r
 != 0) Ñ;

353 
i
 = 
	`FOLDS2_NEXT_INDEX
(i);

357 
	}
}

360 
	$≠∂y_ˇ£_fﬁd3
(
‰om
, 
to
, 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

362 
i
, 
j
, 
k
, 
n
, 
r
;

364 
i
 = 
‰om
; i < 
to
; ) {

365 
OnigCodePoöt
* 
fﬁd
 = 
	`FOLDS3_FOLD
(
i
);

366 
n
 = 
	`FOLDS3_UNFOLDS_NUM
(
i
);

367 
j
 = 0; j < 
n
; j++) {

368 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS3_UNFOLDS
(
i
)[
j
];

370 
r
 = (*
f
)(
unfﬁd
, 
fﬁd
, 3, 
¨g
);

371 i‡(
r
 != 0) Ñ;

373 
k
 = 0; k < 
j
; k++) {

374 
OnigCodePoöt
 
unfﬁd2
 = 
	`FOLDS3_UNFOLDS
(
i
)[
k
];

375 
r
 = (*
f
)(
unfﬁd
, &
unfﬁd2
, 1, 
¨g
);

376 i‡(
r
 != 0) Ñ;

377 
r
 = (*
f
)(
unfﬁd2
, &
unfﬁd
, 1, 
¨g
);

378 i‡(
r
 != 0) Ñ;

382 
i
 = 
	`FOLDS3_NEXT_INDEX
(i);

386 
	}
}

389 
	$⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

390 
OnigAµlyAŒCa£FﬁdFunc
 
f
, * 
¨g
)

392 
r
;

394 
r
 = 
	`≠∂y_ˇ£_fﬁd1
(0, 
FOLDS1_NORMAL_END_INDEX
, 
f
, 
¨g
);

395 i‡(
r
 != 0) Ñ;

397 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


398 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

399 
code
 = 0x0131;

400 
r
 = (*
f
)(0x0049, &
code
, 1, 
¨g
);

401 i‡(
r
 != 0) Ñ;

402 
code
 = 0x0049;

403 
r
 = (*
f
)(0x0131, &
code
, 1, 
¨g
);

404 i‡(
r
 != 0) Ñ;

406 
code
 = 0x0130;

407 
r
 = (*
f
)(0x0069, &
code
, 1, 
¨g
);

408 i‡(
r
 != 0) Ñ;

409 
code
 = 0x0069;

410 
r
 = (*
f
)(0x0130, &
code
, 1, 
¨g
);

411 i‡(
r
 != 0) Ñ;

415 
r
 = 
	`≠∂y_ˇ£_fﬁd1
(
FOLDS1_NORMAL_END_INDEX
, 
FOLDS1_END_INDEX
, 
f
, 
¨g
);

416 i‡(
r
 != 0) Ñ;

417 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


421 i‡((
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) == 0)

424 
r
 = 
	`≠∂y_ˇ£_fﬁd2
(0, 
FOLDS2_NORMAL_END_INDEX
, 
f
, 
¨g
);

425 i‡(
r
 != 0) Ñ;

427 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


428 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) == 0) {

430 
r
 = 
	`≠∂y_ˇ£_fﬁd2
(
FOLDS2_NORMAL_END_INDEX
, 
FOLDS2_END_INDEX
, 
f
, 
¨g
);

431 i‡(
r
 != 0) Ñ;

432 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


436 
r
 = 
	`≠∂y_ˇ£_fﬁd3
(0, 
FOLDS3_NORMAL_END_INDEX
, 
f
, 
¨g
);

437 i‡(
r
 != 0) Ñ;

440 
	}
}

443 
	$⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
OnigEncodög
 
íc
,

444 
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
,

445 
OnigCa£FﬁdCodeIãm
 
ôems
[])

447 
n
, 
m
, 
i
, 
j
, 
k
, 
Àn
;

448 
OnigCodePoöt
 
code
, 
codes
[3];

449 c⁄° 
ByUnfﬁdKey
* 
buk
;

451 
n
 = 0;

453 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

454 
Àn
 = 
	`í˛í
(
íc
, 
p
);

456 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


457 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

458 i‡(
code
 == 0x0049) {

459 
ôems
[0].
byã_Àn
 = 
Àn
;

460 
ôems
[0].
code_Àn
 = 1;

461 
ôems
[0].
code
[0] = 0x0131;

464 i‡(
code
 == 0x0130) {

465 
ôems
[0].
byã_Àn
 = 
Àn
;

466 
ôems
[0].
code_Àn
 = 1;

467 
ôems
[0].
code
[0] = 0x0069;

470 i‡(
code
 == 0x0131) {

471 
ôems
[0].
byã_Àn
 = 
Àn
;

472 
ôems
[0].
code_Àn
 = 1;

473 
ôems
[0].
code
[0] = 0x0049;

476 i‡(
code
 == 0x0069) {

477 
ôems
[0].
byã_Àn
 = 
Àn
;

478 
ôems
[0].
code_Àn
 = 1;

479 
ôems
[0].
code
[0] = 0x0130;

485 
buk
 = 
	`unicode_unfﬁd_key
(
code
);

486 i‡(
buk
 != 0) {

487 i‡(
buk
->
fﬁd_Àn
 == 1) {

488 
un
;

489 
ôems
[0].
byã_Àn
 = 
Àn
;

490 
ôems
[0].
code_Àn
 = 1;

491 
ôems
[0].
code
[0] = *
	`FOLDS1_FOLD
(
buk
->
ödex
);

492 
n
++;

494 
un
 = 
	`FOLDS1_UNFOLDS_NUM
(
buk
->
ödex
);

495 
i
 = 0; i < 
un
; i++) {

496 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS1_UNFOLDS
(
buk
->
ödex
)[
i
];

497 i‡(
unfﬁd
 !
code
) {

498 
ôems
[
n
].
byã_Àn
 = 
Àn
;

499 
ôems
[
n
].
code_Àn
 = 1;

500 
ôems
[
n
].
code
[0] = 
unfﬁd
;

501 
n
++;

504 
code
 = 
ôems
[0].code[0];

506 i‡((
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

507 
OnigCodePoöt
 
cs
[3][4];

508 
‚
, 
ncs
[3];

510 i‡(
buk
->
fﬁd_Àn
 == 2) {

511 
m
 = 
	`FOLDS2_UNFOLDS_NUM
(
buk
->
ödex
);

512 
i
 = 0; i < 
m
; i++) {

513 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS2_UNFOLDS
(
buk
->
ödex
)[
i
];

514 i‡(
unfﬁd
 =
code
) ;

516 
ôems
[
n
].
byã_Àn
 = 
Àn
;

517 
ôems
[
n
].
code_Àn
 = 1;

518 
ôems
[
n
].
code
[0] = 
unfﬁd
;

519 
n
++;

522 
‚
 = 0; fn < 2; fn++) {

523 
ödex
;

524 
cs
[
‚
][0] = 
	`FOLDS2_FOLD
(
buk
->
ödex
)[fn];

525 
ödex
 = 
	`unicode_fﬁd1_key
(&
cs
[
‚
][0]);

526 i‡(
ödex
 >= 0) {

527 
m
 = 
	`FOLDS1_UNFOLDS_NUM
(
ödex
);

528 
i
 = 0; i < 
m
; i++) {

529 
cs
[
‚
][
i
+1] = 
	`FOLDS1_UNFOLDS
(
ödex
)[i];

531 
ncs
[
‚
] = 
m
 + 1;

534 
ncs
[
‚
] = 1;

537 
i
 = 0; i < 
ncs
[0]; i++) {

538 
j
 = 0; j < 
ncs
[1]; j++) {

539 
ôems
[
n
].
byã_Àn
 = 
Àn
;

540 
ôems
[
n
].
code_Àn
 = 2;

541 
ôems
[
n
].
code
[0] = 
cs
[0][
i
];

542 
ôems
[
n
].
code
[1] = 
cs
[1][
j
];

543 
n
++;

548 
m
 = 
	`FOLDS3_UNFOLDS_NUM
(
buk
->
ödex
);

549 
i
 = 0; i < 
m
; i++) {

550 
OnigCodePoöt
 
unfﬁd
 = 
	`FOLDS3_UNFOLDS
(
buk
->
ödex
)[
i
];

551 i‡(
unfﬁd
 =
code
) ;

553 
ôems
[
n
].
byã_Àn
 = 
Àn
;

554 
ôems
[
n
].
code_Àn
 = 1;

555 
ôems
[
n
].
code
[0] = 
unfﬁd
;

556 
n
++;

559 
‚
 = 0; fn < 3; fn++) {

560 
ödex
;

561 
cs
[
‚
][0] = 
	`FOLDS3_FOLD
(
buk
->
ödex
)[fn];

562 
ödex
 = 
	`unicode_fﬁd1_key
(&
cs
[
‚
][0]);

563 i‡(
ödex
 >= 0) {

564 
m
 = 
	`FOLDS1_UNFOLDS_NUM
(
ödex
);

565 
i
 = 0; i < 
m
; i++) {

566 
cs
[
‚
][
i
+1] = 
	`FOLDS1_UNFOLDS
(
ödex
)[i];

568 
ncs
[
‚
] = 
m
 + 1;

571 
ncs
[
‚
] = 1;

574 
i
 = 0; i < 
ncs
[0]; i++) {

575 
j
 = 0; j < 
ncs
[1]; j++) {

576 
k
 = 0; k < 
ncs
[2]; k++) {

577 
ôems
[
n
].
byã_Àn
 = 
Àn
;

578 
ôems
[
n
].
code_Àn
 = 3;

579 
ôems
[
n
].
code
[0] = 
cs
[0][
i
];

580 
ôems
[
n
].
code
[1] = 
cs
[1][
j
];

581 
ôems
[
n
].
code
[2] = 
cs
[2][
k
];

582 
n
++;

589  
n
;

593 
ödex
 = 
	`unicode_fﬁd1_key
(&
code
);

594 i‡(
ödex
 >= 0) {

595 
m
 = 
	`FOLDS1_UNFOLDS_NUM
(
ödex
);

596 
i
 = 0; i < 
m
; i++) {

597 
ôems
[
n
].
byã_Àn
 = 
Àn
;

598 
ôems
[
n
].
code_Àn
 = 1;

599 
ôems
[
n
].
code
[0] = 
	`FOLDS1_UNFOLDS
(
ödex
)[
i
];

600 
n
++;

605 i‡((
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) == 0)

606  
n
;

608 
p
 +
Àn
;

609 i‡(
p
 < 
íd
) {

610 
˛í
;

611 
ödex
;

613 
codes
[0] = 
code
;

614 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

616 
buk
 = 
	`unicode_unfﬁd_key
(
code
);

617 i‡(
buk
 !0 && buk->
fﬁd_Àn
 == 1) {

618 
codes
[1] = *
	`FOLDS1_FOLD
(
buk
->
ödex
);

621 
codes
[1] = 
code
;

623 
˛í
 = 
	`í˛í
(
íc
, 
p
);

624 
Àn
 +
˛í
;

626 
ödex
 = 
	`unicode_fﬁd2_key
(
codes
);

627 i‡(
ödex
 >= 0) {

628 
m
 = 
	`FOLDS2_UNFOLDS_NUM
(
ödex
);

629 
i
 = 0; i < 
m
; i++) {

630 
ôems
[
n
].
byã_Àn
 = 
Àn
;

631 
ôems
[
n
].
code_Àn
 = 1;

632 
ôems
[
n
].
code
[0] = 
	`FOLDS2_UNFOLDS
(
ödex
)[
i
];

633 
n
++;

637 
p
 +
˛í
;

638 i‡(
p
 < 
íd
) {

639 
code
 = 
	`ONIGENC_MBC_TO_CODE
(
íc
, 
p
, 
íd
);

640 
buk
 = 
	`unicode_unfﬁd_key
(
code
);

641 i‡(
buk
 !0 && buk->
fﬁd_Àn
 == 1) {

642 
codes
[2] = *
	`FOLDS1_FOLD
(
buk
->
ödex
);

645 
codes
[2] = 
code
;

647 
˛í
 = 
	`í˛í
(
íc
, 
p
);

648 
Àn
 +
˛í
;

650 
ödex
 = 
	`unicode_fﬁd3_key
(
codes
);

651 i‡(
ödex
 >= 0) {

652 
m
 = 
	`FOLDS3_UNFOLDS_NUM
(
ödex
);

653 
i
 = 0; i < 
m
; i++) {

654 
ôems
[
n
].
byã_Àn
 = 
Àn
;

655 
ôems
[
n
].
code_Àn
 = 1;

656 
ôems
[
n
].
code
[0] = 
	`FOLDS3_UNFOLDS
(
ödex
)[
i
];

657 
n
++;

663  
n
;

664 
	}
}

	@modules/oniguruma/src/unicode_fold1_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 1196

	)

14 
	#MIN_WORD_LENGTH
 3

	)

15 
	#MAX_WORD_LENGTH
 3

	)

16 
	#MIN_HASH_VALUE
 6

	)

17 
	#MAX_HASH_VALUE
 1304

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 2)+3] +ásso_values[()onig_codes_byte_at(codes, 1)] +ásso_values[()onig_codes_byte_at(codes, 0)];

61 
	}
}

64 
	$unicode_fﬁd1_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

2535 
key
 = 
	`hash
(
codes
);

2537 i‡(
key
 <
MAX_HASH_VALUE
)

2539 
ödex
 = 
w‹dli°
[
key
];

2541 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds1
 + index, 1) == 0)

2542  
ödex
;

2546 
	}
}

	@modules/oniguruma/src/unicode_fold2_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 59

	)

14 
	#MIN_WORD_LENGTH
 6

	)

15 
	#MAX_WORD_LENGTH
 6

	)

16 
	#MIN_HASH_VALUE
 0

	)

17 
	#MAX_HASH_VALUE
 58

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 5)] +ásso_values[()onig_codes_byte_at(codes, 2)];

61 
	}
}

64 
	$unicode_fﬁd2_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

190 
key
 = 
	`hash
(
codes
);

192 i‡(
key
 <
MAX_HASH_VALUE
)

194 
ödex
 = 
w‹dli°
[
key
];

196 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds2
 + index, 2) == 0)

197  
ödex
;

201 
	}
}

	@modules/oniguruma/src/unicode_fold3_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 14

	)

14 
	#MIN_WORD_LENGTH
 9

	)

15 
	#MAX_WORD_LENGTH
 9

	)

16 
	#MIN_HASH_VALUE
 0

	)

17 
	#MAX_HASH_VALUE
 13

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

60  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 8)] +ásso_values[()onig_codes_byte_at(codes, 5)] +ásso_values[()onig_codes_byte_at(codes, 2)];

61 
	}
}

64 
	$unicode_fﬁd3_key
(
OnigCodePoöt
 
codes
[])

66 c⁄° 
w‹dli°
[] =

100 
key
 = 
	`hash
(
codes
);

102 i‡(
key
 <
MAX_HASH_VALUE
)

104 
ödex
 = 
w‹dli°
[
key
];

106 i‡(
ödex
 >0 && 
	`⁄ig_codes_cmp
(
codes
, 
OnigUnicodeFﬁds3
 + index, 3) == 0)

107  
ödex
;

111 
	}
}

	@modules/oniguruma/src/unicode_fold_data.c

2 
	~"ªgíc.h
"

4 
	#CASEFOLD_VERSION
 8
_0_0


	)

7 
OnigCodePoöt
 
	gOnigUnicodeFﬁds1
[] = {

1203 
	#FOLDS1_NORMAL_END_INDEX
 3606

	)

1206 
	#FOLDS1_END_INDEX
 3609

	)

1209 
OnigCodePoöt
 
	gOnigUnicodeFﬁds2
[] = {

1326 
	#FOLDS2_NORMAL_END_INDEX
 261

	)

1330 
	#FOLDS2_END_INDEX
 265

	)

1333 
OnigCodePoöt
 
	gOnigUnicodeFﬁds3
[] = {

1362 
	#FOLDS3_NORMAL_END_INDEX
 72

	)

1364 
	#FOLDS3_END_INDEX
 72

	)

	@modules/oniguruma/src/unicode_property_data.c

38 c⁄° 
OnigCodePoöt


39 
CR_NEWLINE
[] = { 1,

44 c⁄° 
OnigCodePoöt


45 
	gCR_AÕha
[] = { 617,

666 c⁄° 
OnigCodePoöt


667 
	gCR_Bœnk
[] = { 8,

679 c⁄° 
OnigCodePoöt


680 
	gCR_C¡æ
[] = { 2,

686 c⁄° 
OnigCodePoöt


687 
	gCR_Digô
[] = { 51,

742 c⁄° 
OnigCodePoöt


743 
	gCR_Gøph
[] = { 618,

1365 c⁄° 
OnigCodePoöt


1366 
	gCR_Lowî
[] = { 637,

2007 c⁄° 
OnigCodePoöt


2008 
	gCR_Pröt
[] = { 615,

2627 c⁄° 
OnigCodePoöt


2628 
	gCR_Pun˘
[] = { 161,

2793 c⁄° 
OnigCodePoöt


2794 
	gCR_S∑˚
[] = { 10,

2808 c⁄° 
OnigCodePoöt


2809 
	gCR_Uµî
[] = { 630,

3443 c⁄° 
OnigCodePoöt


3444 
	gCR_XDigô
[] = { 3,

3451 c⁄° 
OnigCodePoöt


3452 
	gCR_W‹d
[] = { 654,

4110 c⁄° 
OnigCodePoöt


4111 
	gCR_A um
[] = { 648,

4763 c⁄° 
OnigCodePoöt


4764 
	gCR_ASCII
[] = { 1,

4770 c⁄° 
OnigCodePoöt


4771 
	gCR_Any
[] = { 1,

4776 c⁄° 
OnigCodePoöt


4777 
	gCR_Assig√d
[] = { 613,

5394 c⁄° 
OnigCodePoöt


5395 
	gCR_C
[] = { 616,

6015 
	#CR_Cc
 
CR_C¡æ


	)

6018 c⁄° 
OnigCodePoöt


6019 
	gCR_Cf
[] = { 17,

6040 c⁄° 
OnigCodePoöt


6041 
	gCR_Cn
[] = { 613,

6658 c⁄° 
OnigCodePoöt


6659 
	gCR_Co
[] = { 3,

6666 c⁄° 
OnigCodePoöt


6667 
	gCR_Cs
[] = { 1,

6672 c⁄° 
OnigCodePoöt


6673 
	gCR_L
[] = { 554,

7231 c⁄° 
OnigCodePoöt


7232 
	gCR_LC
[] = { 122,

7358 c⁄° 
OnigCodePoöt


7359 
	gCR_Ll
[] = { 630,

7993 c⁄° 
OnigCodePoöt


7994 
	gCR_Lm
[] = { 56,

8054 c⁄° 
OnigCodePoöt


8055 
	gCR_Lo
[] = { 433,

8492 c⁄° 
OnigCodePoöt


8493 
	gCR_Lt
[] = { 10,

8507 c⁄° 
OnigCodePoöt


8508 
	gCR_Lu
[] = { 625,

9137 c⁄° 
OnigCodePoöt


9138 
	gCR_M
[] = { 236,

9378 c⁄° 
OnigCodePoöt


9379 
	gCR_Mc
[] = { 147,

9530 c⁄° 
OnigCodePoöt


9531 
	gCR_Me
[] = { 5,

9540 c⁄° 
OnigCodePoöt


9541 
	gCR_Mn
[] = { 266,

9811 c⁄° 
OnigCodePoöt


9812 
	gCR_N
[] = { 111,

9927 
	#CR_Nd
 
CR_Digô


	)

9930 c⁄° 
OnigCodePoöt


9931 
	gCR_Nl
[] = { 12,

9947 c⁄° 
OnigCodePoöt


9948 
	gCR_No
[] = { 58,

10010 
	#CR_P
 
CR_Pun˘


	)

10013 c⁄° 
OnigCodePoöt


10014 
	gCR_Pc
[] = { 6,

10024 c⁄° 
OnigCodePoöt


10025 
	gCR_Pd
[] = { 17,

10046 c⁄° 
OnigCodePoöt


10047 
	gCR_Pe
[] = { 72,

10123 c⁄° 
OnigCodePoöt


10124 
	gCR_Pf
[] = { 10,

10138 c⁄° 
OnigCodePoöt


10139 
	gCR_Pi
[] = { 11,

10154 c⁄° 
OnigCodePoöt


10155 
	gCR_Po
[] = { 157,

10316 c⁄° 
OnigCodePoöt


10317 
	gCR_Ps
[] = { 75,

10396 c⁄° 
OnigCodePoöt


10397 
	gCR_S
[] = { 214,

10615 c⁄° 
OnigCodePoöt


10616 
	gCR_Sc
[] = { 17,

10637 c⁄° 
OnigCodePoöt


10638 
	gCR_Sk
[] = { 29,

10671 c⁄° 
OnigCodePoöt


10672 
	gCR_Sm
[] = { 64,

10740 c⁄° 
OnigCodePoöt


10741 
	gCR_So
[] = { 170,

10915 c⁄° 
OnigCodePoöt


10916 
	gCR_Z
[] = { 8,

10928 c⁄° 
OnigCodePoöt


10929 
	gCR_Zl
[] = { 1,

10934 c⁄° 
OnigCodePoöt


10935 
	gCR_Zp
[] = { 1,

10940 c⁄° 
OnigCodePoöt


10941 
	gCR_Zs
[] = { 7,

10952 c⁄° 
OnigCodePoöt


10953 
	gCR_M©h
[] = { 138,

11095 
	#CR_AÕhabëic
 
CR_AÕha


	)

11098 
	#CR_Lowîˇ£
 
CR_Lowî


	)

11101 
	#CR_Uµîˇ£
 
CR_Uµî


	)

11104 c⁄° 
OnigCodePoöt


11105 
	gCR_Ca£d
[] = { 131,

11240 c⁄° 
OnigCodePoöt


11241 
	gCR_Ca£_Ign‹abÀ
[] = { 346,

11591 c⁄° 
OnigCodePoöt


11592 
	gCR_Ch™ges_Whí_Lowîˇ£d
[] = { 588,

12184 c⁄° 
OnigCodePoöt


12185 
	gCR_Ch™ges_Whí_Uµîˇ£d
[] = { 605,

12794 c⁄° 
OnigCodePoöt


12795 
	gCR_Ch™ges_Whí_TôÀˇ£d
[] = { 606,

13405 c⁄° 
OnigCodePoöt


13406 
	gCR_Ch™ges_Whí_Ca£fﬁded
[] = { 600,

14010 c⁄° 
OnigCodePoöt


14011 
	gCR_Ch™ges_Whí_Ca£m≠≥d
[] = { 113,

14128 c⁄° 
OnigCodePoöt


14129 
	gCR_ID_Sèπ
[] = { 555,

14688 c⁄° 
OnigCodePoöt


14689 
	gCR_ID_C⁄töue
[] = { 651,

15344 c⁄° 
OnigCodePoöt


15345 
	gCR_XID_Sèπ
[] = { 562,

15911 c⁄° 
OnigCodePoöt


15912 
	gCR_XID_C⁄töue
[] = { 658,

16574 c⁄° 
OnigCodePoöt


16575 
	gCR_DeÁu…_Ign‹abÀ_Code_Poöt
[] = { 17,

16596 c⁄° 
OnigCodePoöt


16597 
	gCR_Gøpheme_Exãnd
[] = { 283,

16884 c⁄° 
OnigCodePoöt


16885 
	gCR_Gøpheme_Ba£
[] = { 743,

17632 c⁄° 
OnigCodePoöt


17633 
	gCR_Gøpheme_Lök
[] = { 41,

17678 c⁄° 
OnigCodePoöt


17679 
	gCR_Comm⁄
[] = { 161,

17844 c⁄° 
OnigCodePoöt


17845 
	gCR_L©ö
[] = { 31,

17880 c⁄° 
OnigCodePoöt


17881 
	gCR_Gªek
[] = { 36,

17921 c⁄° 
OnigCodePoöt


17922 
	gCR_Cyrûlic
[] = { 7,

17933 c⁄° 
OnigCodePoöt


17934 
	gCR_Armíün
[] = { 6,

17944 c⁄° 
OnigCodePoöt


17945 
	gCR_Hebªw
[] = { 9,

17958 c⁄° 
OnigCodePoöt


17959 
	gCR_Aøbic
[] = { 54,

18017 c⁄° 
OnigCodePoöt


18018 
	gCR_Syrüc
[] = { 3,

18025 c⁄° 
OnigCodePoöt


18026 
	gCR_ThØ«
[] = { 1,

18031 c⁄° 
OnigCodePoöt


18032 
	gCR_Dev™ag¨i
[] = { 4,

18040 c⁄° 
OnigCodePoöt


18041 
	gCR_BígÆi
[] = { 14,

18059 c⁄° 
OnigCodePoöt


18060 
	gCR_Gurmukhi
[] = { 16,

18080 c⁄° 
OnigCodePoöt


18081 
	gCR_Guj¨©i
[] = { 14,

18099 c⁄° 
OnigCodePoöt


18100 
	gCR_Oriya
[] = { 14,

18118 c⁄° 
OnigCodePoöt


18119 
	gCR_Tamû
[] = { 16,

18139 c⁄° 
OnigCodePoöt


18140 
	gCR_Tñugu
[] = { 13,

18157 c⁄° 
OnigCodePoöt


18158 
	gCR_K™«da
[] = { 14,

18176 c⁄° 
OnigCodePoöt


18177 
	gCR_MÆayÆam
[] = { 11,

18192 c⁄° 
OnigCodePoöt


18193 
	gCR_SöhÆa
[] = { 13,

18210 c⁄° 
OnigCodePoöt


18211 
	gCR_Thai
[] = { 2,

18217 c⁄° 
OnigCodePoöt


18218 
	gCR_Lao
[] = { 18,

18240 c⁄° 
OnigCodePoöt


18241 
	gCR_Tibë™
[] = { 7,

18252 c⁄° 
OnigCodePoöt


18253 
	gCR_My™m¨
[] = { 3,

18260 c⁄° 
OnigCodePoöt


18261 
	gCR_Ge‹gün
[] = { 8,

18273 c⁄° 
OnigCodePoöt


18274 
	gCR_H™gul
[] = { 14,

18292 c⁄° 
OnigCodePoöt


18293 
	gCR_Ethi›ic
[] = { 32,

18329 c⁄° 
OnigCodePoöt


18330 
	gCR_Chîokì
[] = { 3,

18337 c⁄° 
OnigCodePoöt


18338 
	gCR_C™adün_Ab‹igöÆ
[] = { 2,

18344 c⁄° 
OnigCodePoöt


18345 
	gCR_Ogham
[] = { 1,

18350 c⁄° 
OnigCodePoöt


18351 
	gCR_Runic
[] = { 2,

18357 c⁄° 
OnigCodePoöt


18358 
	gCR_Khmî
[] = { 4,

18366 c⁄° 
OnigCodePoöt


18367 
	gCR_M⁄gﬁün
[] = { 6,

18377 c⁄° 
OnigCodePoöt


18378 
	gCR_Húag™a
[] = { 4,

18386 c⁄° 
OnigCodePoöt


18387 
	gCR_K©ak™a
[] = { 8,

18399 c⁄° 
OnigCodePoöt


18400 
	gCR_B›omofo
[] = { 3,

18407 c⁄° 
OnigCodePoöt


18408 
	gCR_H™
[] = { 16,

18428 c⁄° 
OnigCodePoöt


18429 
	gCR_Yi
[] = { 2,

18435 c⁄° 
OnigCodePoöt


18436 
	gCR_Old_Ièlic
[] = { 1,

18441 c⁄° 
OnigCodePoöt


18442 
	gCR_GŸhic
[] = { 1,

18447 c⁄° 
OnigCodePoöt


18448 
	gCR_De£ªt
[] = { 1,

18453 c⁄° 
OnigCodePoöt


18454 
	gCR_Inhîôed
[] = { 27,

18485 c⁄° 
OnigCodePoöt


18486 
	gCR_TagÆog
[] = { 2,

18492 c⁄° 
OnigCodePoöt


18493 
	gCR_H™unoo
[] = { 1,

18498 c⁄° 
OnigCodePoöt


18499 
	gCR_Buhid
[] = { 1,

18504 c⁄° 
OnigCodePoöt


18505 
	gCR_Tagb™wa
[] = { 3,

18512 c⁄° 
OnigCodePoöt


18513 
	gCR_Limbu
[] = { 5,

18522 c⁄° 
OnigCodePoöt


18523 
	gCR_Tai_Le
[] = { 2,

18529 c⁄° 
OnigCodePoöt


18530 
	gCR_Löór_B
[] = { 7,

18541 c⁄° 
OnigCodePoöt


18542 
	gCR_Ug¨ôic
[] = { 2,

18548 c⁄° 
OnigCodePoöt


18549 
	gCR_Shavün
[] = { 1,

18554 c⁄° 
OnigCodePoöt


18555 
	gCR_Osm™ya
[] = { 2,

18561 c⁄° 
OnigCodePoöt


18562 
	gCR_Cy¥iŸ
[] = { 6,

18572 c⁄° 
OnigCodePoöt


18573 
	gCR_BøûÀ
[] = { 1,

18578 c⁄° 
OnigCodePoöt


18579 
	gCR_Bugöe£
[] = { 2,

18585 c⁄° 
OnigCodePoöt


18586 
	gCR_C›tic
[] = { 3,

18593 c⁄° 
OnigCodePoöt


18594 
	gCR_New_Tai_Lue
[] = { 4,

18602 c⁄° 
OnigCodePoöt


18603 
	gCR_Gœgﬁôic
[] = { 2,

18609 c⁄° 
OnigCodePoöt


18610 
	gCR_Tiföagh
[] = { 3,

18617 c⁄° 
OnigCodePoöt


18618 
	gCR_SylŸi_Nagri
[] = { 1,

18623 c⁄° 
OnigCodePoöt


18624 
	gCR_Old_Pîsün
[] = { 2,

18630 c⁄° 
OnigCodePoöt


18631 
	gCR_Kh¨oshthi
[] = { 8,

18643 c⁄° 
OnigCodePoöt


18644 
	gCR_BÆöe£
[] = { 2,

18650 c⁄° 
OnigCodePoöt


18651 
	gCR_Cu√if‹m
[] = { 4,

18659 c⁄° 
OnigCodePoöt


18660 
	gCR_Ph€nicün
[] = { 2,

18666 c⁄° 
OnigCodePoöt


18667 
	gCR_Phags_Pa
[] = { 1,

18672 c⁄° 
OnigCodePoöt


18673 
	gCR_Nko
[] = { 1,

18678 c⁄° 
OnigCodePoöt


18679 
	gCR_Sund™e£
[] = { 2,

18685 c⁄° 
OnigCodePoöt


18686 
	gCR_Lïcha
[] = { 3,

18693 c⁄° 
OnigCodePoöt


18694 
	gCR_Ol_Chiki
[] = { 1,

18699 c⁄° 
OnigCodePoöt


18700 
	gCR_Vai
[] = { 1,

18705 c⁄° 
OnigCodePoöt


18706 
	gCR_Sauøshåa
[] = { 2,

18712 c⁄° 
OnigCodePoöt


18713 
	gCR_Kayah_Li
[] = { 2,

18719 c⁄° 
OnigCodePoöt


18720 
	gCR_Rej™g
[] = { 2,

18726 c⁄° 
OnigCodePoöt


18727 
	gCR_Lycün
[] = { 1,

18732 c⁄° 
OnigCodePoöt


18733 
	gCR_C¨ün
[] = { 1,

18738 c⁄° 
OnigCodePoöt


18739 
	gCR_Lydün
[] = { 2,

18745 c⁄° 
OnigCodePoöt


18746 
	gCR_Cham
[] = { 4,

18754 c⁄° 
OnigCodePoöt


18755 
	gCR_Tai_Tham
[] = { 5,

18764 c⁄° 
OnigCodePoöt


18765 
	gCR_Tai_Võt
[] = { 2,

18771 c⁄° 
OnigCodePoöt


18772 
	gCR_Ave°™
[] = { 2,

18778 c⁄° 
OnigCodePoöt


18779 
	gCR_Egy±ün_Hõroglyphs
[] = { 1,

18784 c⁄° 
OnigCodePoöt


18785 
	gCR_Sam¨ô™
[] = { 2,

18791 c⁄° 
OnigCodePoöt


18792 
	gCR_Lisu
[] = { 1,

18797 c⁄° 
OnigCodePoöt


18798 
	gCR_Bamum
[] = { 2,

18804 c⁄° 
OnigCodePoöt


18805 
	gCR_Jav™e£
[] = { 3,

18812 c⁄° 
OnigCodePoöt


18813 
	gCR_Mìãi_Mayek
[] = { 3,

18820 c⁄° 
OnigCodePoöt


18821 
	gCR_Im≥rül_Aømaic
[] = { 2,

18827 c⁄° 
OnigCodePoöt


18828 
	gCR_Old_South_Aøbün
[] = { 1,

18833 c⁄° 
OnigCodePoöt


18834 
	gCR_Ins¸ùti⁄Æ_P¨thün
[] = { 2,

18840 c⁄° 
OnigCodePoöt


18841 
	gCR_Ins¸ùti⁄Æ_Pahœvi
[] = { 2,

18847 c⁄° 
OnigCodePoöt


18848 
	gCR_Old_Turkic
[] = { 1,

18853 c⁄° 
OnigCodePoöt


18854 
	gCR_Kaôhi
[] = { 1,

18859 c⁄° 
OnigCodePoöt


18860 
	gCR_B©ak
[] = { 2,

18866 c⁄° 
OnigCodePoöt


18867 
	gCR_Bøhmi
[] = { 3,

18874 c⁄° 
OnigCodePoöt


18875 
	gCR_M™daic
[] = { 2,

18881 c⁄° 
OnigCodePoöt


18882 
	gCR_Chakma
[] = { 2,

18888 c⁄° 
OnigCodePoöt


18889 
	gCR_Mîoôic_Cursive
[] = { 3,

18896 c⁄° 
OnigCodePoöt


18897 
	gCR_Mîoôic_Hõroglyphs
[] = { 1,

18902 c⁄° 
OnigCodePoöt


18903 
	gCR_Müo
[] = { 3,

18910 c⁄° 
OnigCodePoöt


18911 
	gCR_Sh¨ada
[] = { 2,

18917 c⁄° 
OnigCodePoöt


18918 
	gCR_S‹a_Som≥ng
[] = { 2,

18924 c⁄° 
OnigCodePoöt


18925 
	gCR_Takri
[] = { 2,

18931 c⁄° 
OnigCodePoöt


18932 
	gCR_Cauˇsün_Alb™ün
[] = { 2,

18938 c⁄° 
OnigCodePoöt


18939 
	gCR_Basß_Vah
[] = { 2,

18945 c⁄° 
OnigCodePoöt


18946 
	gCR_Du∂oy™
[] = { 5,

18955 c⁄° 
OnigCodePoöt


18956 
	gCR_Elbaßn
[] = { 1,

18961 c⁄° 
OnigCodePoöt


18962 
	gCR_Gø¡ha
[] = { 15,

18981 c⁄° 
OnigCodePoöt


18982 
	gCR_Pahawh_Hm⁄g
[] = { 5,

18991 c⁄° 
OnigCodePoöt


18992 
	gCR_Khojki
[] = { 2,

18998 c⁄° 
OnigCodePoöt


18999 
	gCR_Löór_A
[] = { 3,

19006 c⁄° 
OnigCodePoöt


19007 
	gCR_Mahaj™i
[] = { 1,

19012 c⁄° 
OnigCodePoöt


19013 
	gCR_M™ich´™
[] = { 2,

19019 c⁄° 
OnigCodePoöt


19020 
	gCR_Míde_Kikakui
[] = { 2,

19026 c⁄° 
OnigCodePoöt


19027 
	gCR_Modi
[] = { 2,

19033 c⁄° 
OnigCodePoöt


19034 
	gCR_Mro
[] = { 3,

19041 c⁄° 
OnigCodePoöt


19042 
	gCR_Old_N‹th_Aøbün
[] = { 1,

19047 c⁄° 
OnigCodePoöt


19048 
	gCR_Nab©´™
[] = { 2,

19054 c⁄° 
OnigCodePoöt


19055 
	gCR_PÆmyª√
[] = { 1,

19060 c⁄° 
OnigCodePoöt


19061 
	gCR_Pau_Cö_Hau
[] = { 1,

19066 c⁄° 
OnigCodePoöt


19067 
	gCR_Old_Pîmic
[] = { 1,

19072 c⁄° 
OnigCodePoöt


19073 
	gCR_Pß…î_Pahœvi
[] = { 3,

19080 c⁄° 
OnigCodePoöt


19081 
	gCR_Siddham
[] = { 2,

19087 c⁄° 
OnigCodePoöt


19088 
	gCR_Khudawadi
[] = { 2,

19094 c⁄° 
OnigCodePoöt


19095 
	gCR_Túhuè
[] = { 2,

19101 c⁄° 
OnigCodePoöt


19102 
	gCR_W¨™g_Côi
[] = { 2,

19108 c⁄° 
OnigCodePoöt


19109 
	gCR_Ahom
[] = { 3,

19116 c⁄° 
OnigCodePoöt


19117 
	gCR_A«tﬁün_Hõroglyphs
[] = { 1,

19122 c⁄° 
OnigCodePoöt


19123 
	gCR_H©øn
[] = { 3,

19130 c⁄° 
OnigCodePoöt


19131 
	gCR_Mu…™i
[] = { 5,

19140 c⁄° 
OnigCodePoöt


19141 
	gCR_Old_Hung¨ün
[] = { 3,

19148 c⁄° 
OnigCodePoöt


19149 
	gCR_SignWrôög
[] = { 3,

19156 
	#CR_Whôe_S∑˚
 
CR_S∑˚


	)

19159 c⁄° 
OnigCodePoöt


19160 
	gCR_Bidi_C⁄åﬁ
[] = { 4,

19168 c⁄° 
OnigCodePoöt


19169 
	gCR_Joö_C⁄åﬁ
[] = { 1,

19174 c⁄° 
OnigCodePoöt


19175 
	gCR_Dash
[] = { 21,

19200 c⁄° 
OnigCodePoöt


19201 
	gCR_Hyphí
[] = { 10,

19215 c⁄° 
OnigCodePoöt


19216 
	gCR_QuŸ©i⁄_M¨k
[] = { 13,

19233 c⁄° 
OnigCodePoöt


19234 
	gCR_TîmöÆ_Pun˘u©i⁄
[] = { 90,

19328 c⁄° 
OnigCodePoöt


19329 
	gCR_Othî_M©h
[] = { 134,

19467 c⁄° 
OnigCodePoöt


19468 
	gCR_Hex_Digô
[] = { 6,

19478 
	#CR_ASCII_Hex_Digô
 
CR_XDigô


	)

19481 c⁄° 
OnigCodePoöt


19482 
	gCR_Othî_AÕhabëic
[] = { 178,

19664 c⁄° 
OnigCodePoöt


19665 
	gCR_Ideogøphic
[] = { 12,

19681 c⁄° 
OnigCodePoöt


19682 
	gCR_Dü¸ôic
[] = { 147,

19833 c⁄° 
OnigCodePoöt


19834 
	gCR_Exãndî
[] = { 26,

19864 c⁄° 
OnigCodePoöt


19865 
	gCR_Othî_Lowîˇ£
[] = { 20,

19889 c⁄° 
OnigCodePoöt


19890 
	gCR_Othî_Uµîˇ£
[] = { 5,

19899 c⁄° 
OnigCodePoöt


19900 
	gCR_N⁄ch¨a˘î_Code_Poöt
[] = { 18,

19922 c⁄° 
OnigCodePoöt


19923 
	gCR_Othî_Gøpheme_Exãnd
[] = { 22,

19949 c⁄° 
OnigCodePoöt


19950 
	gCR_IDS_Bö¨y_O≥øt‹
[] = { 2,

19956 c⁄° 
OnigCodePoöt


19957 
	gCR_IDS_Trö¨y_O≥øt‹
[] = { 1,

19962 c⁄° 
OnigCodePoöt


19963 
	gCR_Radiˇl
[] = { 3,

19970 c⁄° 
OnigCodePoöt


19971 
	gCR_Unifõd_Ideogøph
[] = { 13,

19988 c⁄° 
OnigCodePoöt


19989 
	gCR_Othî_DeÁu…_Ign‹abÀ_Code_Poöt
[] = { 11,

20004 c⁄° 
OnigCodePoöt


20005 
	gCR_Dïªˇãd
[] = { 9,

20018 c⁄° 
OnigCodePoöt


20019 
	gCR_So·_DŸãd
[] = { 31,

20054 c⁄° 
OnigCodePoöt


20055 
	gCR_Logiˇl_Ordî_Ex˚±i⁄
[] = { 7,

20066 c⁄° 
OnigCodePoöt


20067 
	gCR_Othî_ID_Sèπ
[] = { 3,

20074 c⁄° 
OnigCodePoöt


20075 
	gCR_Othî_ID_C⁄töue
[] = { 4,

20083 c⁄° 
OnigCodePoöt


20084 
	gCR_STîm
[] = { 64,

20152 c⁄° 
OnigCodePoöt


20153 
	gCR_V¨üti⁄_Sñe˘‹
[] = { 3,

20160 c⁄° 
OnigCodePoöt


20161 
	gCR_P©ã∫_Whôe_S∑˚
[] = { 5,

20170 c⁄° 
OnigCodePoöt


20171 
	gCR_P©ã∫_Sy¡ax
[] = { 28,

20203 c⁄° 
OnigCodePoöt


20204 
	gCR_Unknown
[] = { 611,

20819 
	#CR_In_Basic_L©ö
 
CR_ASCII


	)

20822 c⁄° 
OnigCodePoöt


20823 
	gCR_In_L©ö_1_SuµÀmít
[] = { 1,

20828 c⁄° 
OnigCodePoöt


20829 
	gCR_In_L©ö_Exãnded_A
[] = { 1,

20834 c⁄° 
OnigCodePoöt


20835 
	gCR_In_L©ö_Exãnded_B
[] = { 1,

20840 c⁄° 
OnigCodePoöt


20841 
	gCR_In_IPA_Exãnsi⁄s
[] = { 1,

20846 c⁄° 
OnigCodePoöt


20847 
	gCR_In_S∑cög_Modifõr_Lëãrs
[] = { 1,

20852 c⁄° 
OnigCodePoöt


20853 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks
[] = { 1,

20858 c⁄° 
OnigCodePoöt


20859 
	gCR_In_Gªek_™d_C›tic
[] = { 1,

20864 c⁄° 
OnigCodePoöt


20865 
	gCR_In_Cyrûlic
[] = { 1,

20870 c⁄° 
OnigCodePoöt


20871 
	gCR_In_Cyrûlic_SuµÀmít
[] = { 1,

20876 c⁄° 
OnigCodePoöt


20877 
	gCR_In_Armíün
[] = { 1,

20882 c⁄° 
OnigCodePoöt


20883 
	gCR_In_Hebªw
[] = { 1,

20888 c⁄° 
OnigCodePoöt


20889 
	gCR_In_Aøbic
[] = { 1,

20894 c⁄° 
OnigCodePoöt


20895 
	gCR_In_Syrüc
[] = { 1,

20900 c⁄° 
OnigCodePoöt


20901 
	gCR_In_Aøbic_SuµÀmít
[] = { 1,

20906 c⁄° 
OnigCodePoöt


20907 
	gCR_In_ThØ«
[] = { 1,

20912 c⁄° 
OnigCodePoöt


20913 
	gCR_In_NKo
[] = { 1,

20918 c⁄° 
OnigCodePoöt


20919 
	gCR_In_Sam¨ô™
[] = { 1,

20924 c⁄° 
OnigCodePoöt


20925 
	gCR_In_M™daic
[] = { 1,

20930 c⁄° 
OnigCodePoöt


20931 
	gCR_In_Aøbic_Exãnded_A
[] = { 1,

20936 c⁄° 
OnigCodePoöt


20937 
	gCR_In_Dev™ag¨i
[] = { 1,

20942 c⁄° 
OnigCodePoöt


20943 
	gCR_In_BígÆi
[] = { 1,

20948 c⁄° 
OnigCodePoöt


20949 
	gCR_In_Gurmukhi
[] = { 1,

20954 c⁄° 
OnigCodePoöt


20955 
	gCR_In_Guj¨©i
[] = { 1,

20960 c⁄° 
OnigCodePoöt


20961 
	gCR_In_Oriya
[] = { 1,

20966 c⁄° 
OnigCodePoöt


20967 
	gCR_In_Tamû
[] = { 1,

20972 c⁄° 
OnigCodePoöt


20973 
	gCR_In_Tñugu
[] = { 1,

20978 c⁄° 
OnigCodePoöt


20979 
	gCR_In_K™«da
[] = { 1,

20984 c⁄° 
OnigCodePoöt


20985 
	gCR_In_MÆayÆam
[] = { 1,

20990 c⁄° 
OnigCodePoöt


20991 
	gCR_In_SöhÆa
[] = { 1,

20996 c⁄° 
OnigCodePoöt


20997 
	gCR_In_Thai
[] = { 1,

21002 c⁄° 
OnigCodePoöt


21003 
	gCR_In_Lao
[] = { 1,

21008 c⁄° 
OnigCodePoöt


21009 
	gCR_In_Tibë™
[] = { 1,

21014 c⁄° 
OnigCodePoöt


21015 
	gCR_In_My™m¨
[] = { 1,

21020 c⁄° 
OnigCodePoöt


21021 
	gCR_In_Ge‹gün
[] = { 1,

21026 c⁄° 
OnigCodePoöt


21027 
	gCR_In_H™gul_Jamo
[] = { 1,

21032 c⁄° 
OnigCodePoöt


21033 
	gCR_In_Ethi›ic
[] = { 1,

21038 c⁄° 
OnigCodePoöt


21039 
	gCR_In_Ethi›ic_SuµÀmít
[] = { 1,

21044 c⁄° 
OnigCodePoöt


21045 
	gCR_In_Chîokì
[] = { 1,

21050 c⁄° 
OnigCodePoöt


21051 
	gCR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics
[] = { 1,

21056 c⁄° 
OnigCodePoöt


21057 
	gCR_In_Ogham
[] = { 1,

21062 c⁄° 
OnigCodePoöt


21063 
	gCR_In_Runic
[] = { 1,

21068 c⁄° 
OnigCodePoöt


21069 
	gCR_In_TagÆog
[] = { 1,

21074 c⁄° 
OnigCodePoöt


21075 
	gCR_In_H™unoo
[] = { 1,

21080 c⁄° 
OnigCodePoöt


21081 
	gCR_In_Buhid
[] = { 1,

21086 c⁄° 
OnigCodePoöt


21087 
	gCR_In_Tagb™wa
[] = { 1,

21092 c⁄° 
OnigCodePoöt


21093 
	gCR_In_Khmî
[] = { 1,

21098 c⁄° 
OnigCodePoöt


21099 
	gCR_In_M⁄gﬁün
[] = { 1,

21104 c⁄° 
OnigCodePoöt


21105 
	gCR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics_Exãnded
[] = { 1,

21110 c⁄° 
OnigCodePoöt


21111 
	gCR_In_Limbu
[] = { 1,

21116 c⁄° 
OnigCodePoöt


21117 
	gCR_In_Tai_Le
[] = { 1,

21122 c⁄° 
OnigCodePoöt


21123 
	gCR_In_New_Tai_Lue
[] = { 1,

21128 c⁄° 
OnigCodePoöt


21129 
	gCR_In_Khmî_Symbﬁs
[] = { 1,

21134 c⁄° 
OnigCodePoöt


21135 
	gCR_In_Bugöe£
[] = { 1,

21140 c⁄° 
OnigCodePoöt


21141 
	gCR_In_Tai_Tham
[] = { 1,

21146 c⁄° 
OnigCodePoöt


21147 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_Exãnded
[] = { 1,

21152 c⁄° 
OnigCodePoöt


21153 
	gCR_In_BÆöe£
[] = { 1,

21158 c⁄° 
OnigCodePoöt


21159 
	gCR_In_Sund™e£
[] = { 1,

21164 c⁄° 
OnigCodePoöt


21165 
	gCR_In_B©ak
[] = { 1,

21170 c⁄° 
OnigCodePoöt


21171 
	gCR_In_Lïcha
[] = { 1,

21176 
	#CR_In_Ol_Chiki
 
CR_Ol_Chiki


	)

21179 c⁄° 
OnigCodePoöt


21180 
	gCR_In_Sund™e£_SuµÀmít
[] = { 1,

21185 c⁄° 
OnigCodePoöt


21186 
	gCR_In_Vedic_Exãnsi⁄s
[] = { 1,

21191 c⁄° 
OnigCodePoöt


21192 
	gCR_In_Ph⁄ëic_Exãnsi⁄s
[] = { 1,

21197 c⁄° 
OnigCodePoöt


21198 
	gCR_In_Ph⁄ëic_Exãnsi⁄s_SuµÀmít
[] = { 1,

21203 c⁄° 
OnigCodePoöt


21204 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_SuµÀmít
[] = { 1,

21209 c⁄° 
OnigCodePoöt


21210 
	gCR_In_L©ö_Exãnded_Addôi⁄Æ
[] = { 1,

21215 c⁄° 
OnigCodePoöt


21216 
	gCR_In_Gªek_Exãnded
[] = { 1,

21221 c⁄° 
OnigCodePoöt


21222 
	gCR_In_GíîÆ_Pun˘u©i⁄
[] = { 1,

21227 c⁄° 
OnigCodePoöt


21228 
	gCR_In_Su≥rs¸ùts_™d_Subs¸ùts
[] = { 1,

21233 c⁄° 
OnigCodePoöt


21234 
	gCR_In_Cuºícy_Symbﬁs
[] = { 1,

21239 c⁄° 
OnigCodePoöt


21240 
	gCR_In_Comböög_Dü¸ôiˇl_M¨ks_f‹_Symbﬁs
[] = { 1,

21245 c⁄° 
OnigCodePoöt


21246 
	gCR_In_Lëãæike_Symbﬁs
[] = { 1,

21251 c⁄° 
OnigCodePoöt


21252 
	gCR_In_Numbî_F‹ms
[] = { 1,

21257 c⁄° 
OnigCodePoöt


21258 
	gCR_In_Aºows
[] = { 1,

21263 c⁄° 
OnigCodePoöt


21264 
	gCR_In_M©hem©iˇl_O≥øt‹s
[] = { 1,

21269 c⁄° 
OnigCodePoöt


21270 
	gCR_In_Mis˚Œ™eous_Techniˇl
[] = { 1,

21275 c⁄° 
OnigCodePoöt


21276 
	gCR_In_C⁄åﬁ_Pi˘uªs
[] = { 1,

21281 c⁄° 
OnigCodePoöt


21282 
	gCR_In_O±iˇl_Ch¨a˘î_Recognôi⁄
[] = { 1,

21287 c⁄° 
OnigCodePoöt


21288 
	gCR_In_En˛o£d_AÕh™umîics
[] = { 1,

21293 c⁄° 
OnigCodePoöt


21294 
	gCR_In_Box_Døwög
[] = { 1,

21299 c⁄° 
OnigCodePoöt


21300 
	gCR_In_Block_EÀmíts
[] = { 1,

21305 c⁄° 
OnigCodePoöt


21306 
	gCR_In_Geomëric_Sh≠es
[] = { 1,

21311 c⁄° 
OnigCodePoöt


21312 
	gCR_In_Mis˚Œ™eous_Symbﬁs
[] = { 1,

21317 c⁄° 
OnigCodePoöt


21318 
	gCR_In_Dögb©s
[] = { 1,

21323 c⁄° 
OnigCodePoöt


21324 
	gCR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_A
[] = { 1,

21329 c⁄° 
OnigCodePoöt


21330 
	gCR_In_SuµÀmíèl_Aºows_A
[] = { 1,

21335 
	#CR_In_BøûÀ_P©ã∫s
 
CR_BøûÀ


	)

21338 c⁄° 
OnigCodePoöt


21339 
	gCR_In_SuµÀmíèl_Aºows_B
[] = { 1,

21344 c⁄° 
OnigCodePoöt


21345 
	gCR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_B
[] = { 1,

21350 c⁄° 
OnigCodePoöt


21351 
	gCR_In_SuµÀmíèl_M©hem©iˇl_O≥øt‹s
[] = { 1,

21356 c⁄° 
OnigCodePoöt


21357 
	gCR_In_Mis˚Œ™eous_Symbﬁs_™d_Aºows
[] = { 1,

21362 c⁄° 
OnigCodePoöt


21363 
	gCR_In_Gœgﬁôic
[] = { 1,

21368 c⁄° 
OnigCodePoöt


21369 
	gCR_In_L©ö_Exãnded_C
[] = { 1,

21374 c⁄° 
OnigCodePoöt


21375 
	gCR_In_C›tic
[] = { 1,

21380 c⁄° 
OnigCodePoöt


21381 
	gCR_In_Ge‹gün_SuµÀmít
[] = { 1,

21386 c⁄° 
OnigCodePoöt


21387 
	gCR_In_Tiföagh
[] = { 1,

21392 c⁄° 
OnigCodePoöt


21393 
	gCR_In_Ethi›ic_Exãnded
[] = { 1,

21398 c⁄° 
OnigCodePoöt


21399 
	gCR_In_Cyrûlic_Exãnded_A
[] = { 1,

21404 c⁄° 
OnigCodePoöt


21405 
	gCR_In_SuµÀmíèl_Pun˘u©i⁄
[] = { 1,

21410 c⁄° 
OnigCodePoöt


21411 
	gCR_In_CJK_Radiˇls_SuµÀmít
[] = { 1,

21416 c⁄° 
OnigCodePoöt


21417 
	gCR_In_K™gxi_Radiˇls
[] = { 1,

21422 c⁄° 
OnigCodePoöt


21423 
	gCR_In_Ideogøphic_Des¸ùti⁄_Ch¨a˘îs
[] = { 1,

21428 c⁄° 
OnigCodePoöt


21429 
	gCR_In_CJK_Symbﬁs_™d_Pun˘u©i⁄
[] = { 1,

21434 c⁄° 
OnigCodePoöt


21435 
	gCR_In_Húag™a
[] = { 1,

21440 c⁄° 
OnigCodePoöt


21441 
	gCR_In_K©ak™a
[] = { 1,

21446 c⁄° 
OnigCodePoöt


21447 
	gCR_In_B›omofo
[] = { 1,

21452 c⁄° 
OnigCodePoöt


21453 
	gCR_In_H™gul_Com∑tibûôy_Jamo
[] = { 1,

21458 c⁄° 
OnigCodePoöt


21459 
	gCR_In_K™bun
[] = { 1,

21464 c⁄° 
OnigCodePoöt


21465 
	gCR_In_B›omofo_Exãnded
[] = { 1,

21470 c⁄° 
OnigCodePoöt


21471 
	gCR_In_CJK_Såokes
[] = { 1,

21476 c⁄° 
OnigCodePoöt


21477 
	gCR_In_K©ak™a_Ph⁄ëic_Exãnsi⁄s
[] = { 1,

21482 c⁄° 
OnigCodePoöt


21483 
	gCR_In_En˛o£d_CJK_Lëãrs_™d_M⁄ths
[] = { 1,

21488 c⁄° 
OnigCodePoöt


21489 
	gCR_In_CJK_Com∑tibûôy
[] = { 1,

21494 c⁄° 
OnigCodePoöt


21495 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_A
[] = { 1,

21500 c⁄° 
OnigCodePoöt


21501 
	gCR_In_Yijög_Hexagøm_Symbﬁs
[] = { 1,

21506 c⁄° 
OnigCodePoöt


21507 
	gCR_In_CJK_Unifõd_Ideogøphs
[] = { 1,

21512 c⁄° 
OnigCodePoöt


21513 
	gCR_In_Yi_SyŒabÀs
[] = { 1,

21518 c⁄° 
OnigCodePoöt


21519 
	gCR_In_Yi_Radiˇls
[] = { 1,

21524 
	#CR_In_Lisu
 
CR_Lisu


	)

21527 c⁄° 
OnigCodePoöt


21528 
	gCR_In_Vai
[] = { 1,

21533 c⁄° 
OnigCodePoöt


21534 
	gCR_In_Cyrûlic_Exãnded_B
[] = { 1,

21539 c⁄° 
OnigCodePoöt


21540 
	gCR_In_Bamum
[] = { 1,

21545 c⁄° 
OnigCodePoöt


21546 
	gCR_In_Modifõr_T⁄e_Lëãrs
[] = { 1,

21551 c⁄° 
OnigCodePoöt


21552 
	gCR_In_L©ö_Exãnded_D
[] = { 1,

21557 c⁄° 
OnigCodePoöt


21558 
	gCR_In_SylŸi_Nagri
[] = { 1,

21563 c⁄° 
OnigCodePoöt


21564 
	gCR_In_Comm⁄_Indic_Numbî_F‹ms
[] = { 1,

21569 c⁄° 
OnigCodePoöt


21570 
	gCR_In_Phags_∑
[] = { 1,

21575 c⁄° 
OnigCodePoöt


21576 
	gCR_In_Sauøshåa
[] = { 1,

21581 c⁄° 
OnigCodePoöt


21582 
	gCR_In_Dev™ag¨i_Exãnded
[] = { 1,

21587 c⁄° 
OnigCodePoöt


21588 
	gCR_In_Kayah_Li
[] = { 1,

21593 c⁄° 
OnigCodePoöt


21594 
	gCR_In_Rej™g
[] = { 1,

21599 c⁄° 
OnigCodePoöt


21600 
	gCR_In_H™gul_Jamo_Exãnded_A
[] = { 1,

21605 c⁄° 
OnigCodePoöt


21606 
	gCR_In_Jav™e£
[] = { 1,

21611 c⁄° 
OnigCodePoöt


21612 
	gCR_In_My™m¨_Exãnded_B
[] = { 1,

21617 c⁄° 
OnigCodePoöt


21618 
	gCR_In_Cham
[] = { 1,

21623 c⁄° 
OnigCodePoöt


21624 
	gCR_In_My™m¨_Exãnded_A
[] = { 1,

21629 c⁄° 
OnigCodePoöt


21630 
	gCR_In_Tai_Võt
[] = { 1,

21635 c⁄° 
OnigCodePoöt


21636 
	gCR_In_Mìãi_Mayek_Exãnsi⁄s
[] = { 1,

21641 c⁄° 
OnigCodePoöt


21642 
	gCR_In_Ethi›ic_Exãnded_A
[] = { 1,

21647 c⁄° 
OnigCodePoöt


21648 
	gCR_In_L©ö_Exãnded_E
[] = { 1,

21653 c⁄° 
OnigCodePoöt


21654 
	gCR_In_Chîokì_SuµÀmít
[] = { 1,

21659 c⁄° 
OnigCodePoöt


21660 
	gCR_In_Mìãi_Mayek
[] = { 1,

21665 c⁄° 
OnigCodePoöt


21666 
	gCR_In_H™gul_SyŒabÀs
[] = { 1,

21671 c⁄° 
OnigCodePoöt


21672 
	gCR_In_H™gul_Jamo_Exãnded_B
[] = { 1,

21677 c⁄° 
OnigCodePoöt


21678 
	gCR_In_High_Suºog©es
[] = { 1,

21683 c⁄° 
OnigCodePoöt


21684 
	gCR_In_High_Priv©e_U£_Suºog©es
[] = { 1,

21689 c⁄° 
OnigCodePoöt


21690 
	gCR_In_Low_Suºog©es
[] = { 1,

21695 c⁄° 
OnigCodePoöt


21696 
	gCR_In_Priv©e_U£_Aªa
[] = { 1,

21701 c⁄° 
OnigCodePoöt


21702 
	gCR_In_CJK_Com∑tibûôy_Ideogøphs
[] = { 1,

21707 c⁄° 
OnigCodePoöt


21708 
	gCR_In_AÕhabëic_Pª£¡©i⁄_F‹ms
[] = { 1,

21713 c⁄° 
OnigCodePoöt


21714 
	gCR_In_Aøbic_Pª£¡©i⁄_F‹ms_A
[] = { 1,

21719 c⁄° 
OnigCodePoöt


21720 
	gCR_In_V¨üti⁄_Sñe˘‹s
[] = { 1,

21725 c⁄° 
OnigCodePoöt


21726 
	gCR_In_Vîtiˇl_F‹ms
[] = { 1,

21731 c⁄° 
OnigCodePoöt


21732 
	gCR_In_Comböög_HÆf_M¨ks
[] = { 1,

21737 c⁄° 
OnigCodePoöt


21738 
	gCR_In_CJK_Com∑tibûôy_F‹ms
[] = { 1,

21743 c⁄° 
OnigCodePoöt


21744 
	gCR_In_SmÆl_F‹m_V¨ü¡s
[] = { 1,

21749 c⁄° 
OnigCodePoöt


21750 
	gCR_In_Aøbic_Pª£¡©i⁄_F‹ms_B
[] = { 1,

21755 c⁄° 
OnigCodePoöt


21756 
	gCR_In_HÆfwidth_™d_FuŒwidth_F‹ms
[] = { 1,

21761 c⁄° 
OnigCodePoöt


21762 
	gCR_In_S≥cüls
[] = { 1,

21767 c⁄° 
OnigCodePoöt


21768 
	gCR_In_Löór_B_SyŒab¨y
[] = { 1,

21773 c⁄° 
OnigCodePoöt


21774 
	gCR_In_Löór_B_Ideogøms
[] = { 1,

21779 c⁄° 
OnigCodePoöt


21780 
	gCR_In_Aegón_Numbîs
[] = { 1,

21785 c⁄° 
OnigCodePoöt


21786 
	gCR_In_Ancõ¡_Gªek_Numbîs
[] = { 1,

21791 c⁄° 
OnigCodePoöt


21792 
	gCR_In_Ancõ¡_Symbﬁs
[] = { 1,

21797 c⁄° 
OnigCodePoöt


21798 
	gCR_In_Phai°os_Disc
[] = { 1,

21803 c⁄° 
OnigCodePoöt


21804 
	gCR_In_Lycün
[] = { 1,

21809 c⁄° 
OnigCodePoöt


21810 
	gCR_In_C¨ün
[] = { 1,

21815 c⁄° 
OnigCodePoöt


21816 
	gCR_In_C›tic_E∑˘_Numbîs
[] = { 1,

21821 c⁄° 
OnigCodePoöt


21822 
	gCR_In_Old_Ièlic
[] = { 1,

21827 c⁄° 
OnigCodePoöt


21828 
	gCR_In_GŸhic
[] = { 1,

21833 c⁄° 
OnigCodePoöt


21834 
	gCR_In_Old_Pîmic
[] = { 1,

21839 c⁄° 
OnigCodePoöt


21840 
	gCR_In_Ug¨ôic
[] = { 1,

21845 c⁄° 
OnigCodePoöt


21846 
	gCR_In_Old_Pîsün
[] = { 1,

21851 
	#CR_In_De£ªt
 
CR_De£ªt


	)

21854 
	#CR_In_Shavün
 
CR_Shavün


	)

21857 c⁄° 
OnigCodePoöt


21858 
	gCR_In_Osm™ya
[] = { 1,

21863 c⁄° 
OnigCodePoöt


21864 
	gCR_In_Elbaßn
[] = { 1,

21869 c⁄° 
OnigCodePoöt


21870 
	gCR_In_Cauˇsün_Alb™ün
[] = { 1,

21875 c⁄° 
OnigCodePoöt


21876 
	gCR_In_Löór_A
[] = { 1,

21881 c⁄° 
OnigCodePoöt


21882 
	gCR_In_Cy¥iŸ_SyŒab¨y
[] = { 1,

21887 c⁄° 
OnigCodePoöt


21888 
	gCR_In_Im≥rül_Aømaic
[] = { 1,

21893 
	#CR_In_PÆmyª√
 
CR_PÆmyª√


	)

21896 c⁄° 
OnigCodePoöt


21897 
	gCR_In_Nab©´™
[] = { 1,

21902 c⁄° 
OnigCodePoöt


21903 
	gCR_In_H©øn
[] = { 1,

21908 c⁄° 
OnigCodePoöt


21909 
	gCR_In_Ph€nicün
[] = { 1,

21914 c⁄° 
OnigCodePoöt


21915 
	gCR_In_Lydün
[] = { 1,

21920 
	#CR_In_Mîoôic_Hõroglyphs
 
CR_Mîoôic_Hõroglyphs


	)

21923 c⁄° 
OnigCodePoöt


21924 
	gCR_In_Mîoôic_Cursive
[] = { 1,

21929 c⁄° 
OnigCodePoöt


21930 
	gCR_In_Kh¨oshthi
[] = { 1,

21935 
	#CR_In_Old_South_Aøbün
 
CR_Old_South_Aøbün


	)

21938 
	#CR_In_Old_N‹th_Aøbün
 
CR_Old_N‹th_Aøbün


	)

21941 c⁄° 
OnigCodePoöt


21942 
	gCR_In_M™ich´™
[] = { 1,

21947 c⁄° 
OnigCodePoöt


21948 
	gCR_In_Ave°™
[] = { 1,

21953 c⁄° 
OnigCodePoöt


21954 
	gCR_In_Ins¸ùti⁄Æ_P¨thün
[] = { 1,

21959 c⁄° 
OnigCodePoöt


21960 
	gCR_In_Ins¸ùti⁄Æ_Pahœvi
[] = { 1,

21965 c⁄° 
OnigCodePoöt


21966 
	gCR_In_Pß…î_Pahœvi
[] = { 1,

21971 c⁄° 
OnigCodePoöt


21972 
	gCR_In_Old_Turkic
[] = { 1,

21977 c⁄° 
OnigCodePoöt


21978 
	gCR_In_Old_Hung¨ün
[] = { 1,

21983 c⁄° 
OnigCodePoöt


21984 
	gCR_In_Rumi_NumîÆ_Symbﬁs
[] = { 1,

21989 c⁄° 
OnigCodePoöt


21990 
	gCR_In_Bøhmi
[] = { 1,

21995 c⁄° 
OnigCodePoöt


21996 
	gCR_In_Kaôhi
[] = { 1,

22001 c⁄° 
OnigCodePoöt


22002 
	gCR_In_S‹a_Som≥ng
[] = { 1,

22007 c⁄° 
OnigCodePoöt


22008 
	gCR_In_Chakma
[] = { 1,

22013 c⁄° 
OnigCodePoöt


22014 
	gCR_In_Mahaj™i
[] = { 1,

22019 c⁄° 
OnigCodePoöt


22020 
	gCR_In_Sh¨ada
[] = { 1,

22025 c⁄° 
OnigCodePoöt


22026 
	gCR_In_SöhÆa_Archaic_Numbîs
[] = { 1,

22031 c⁄° 
OnigCodePoöt


22032 
	gCR_In_Khojki
[] = { 1,

22037 c⁄° 
OnigCodePoöt


22038 
	gCR_In_Mu…™i
[] = { 1,

22043 c⁄° 
OnigCodePoöt


22044 
	gCR_In_Khudawadi
[] = { 1,

22049 c⁄° 
OnigCodePoöt


22050 
	gCR_In_Gø¡ha
[] = { 1,

22055 c⁄° 
OnigCodePoöt


22056 
	gCR_In_Túhuè
[] = { 1,

22061 c⁄° 
OnigCodePoöt


22062 
	gCR_In_Siddham
[] = { 1,

22067 c⁄° 
OnigCodePoöt


22068 
	gCR_In_Modi
[] = { 1,

22073 c⁄° 
OnigCodePoöt


22074 
	gCR_In_Takri
[] = { 1,

22079 c⁄° 
OnigCodePoöt


22080 
	gCR_In_Ahom
[] = { 1,

22085 c⁄° 
OnigCodePoöt


22086 
	gCR_In_W¨™g_Côi
[] = { 1,

22091 c⁄° 
OnigCodePoöt


22092 
	gCR_In_Pau_Cö_Hau
[] = { 1,

22097 c⁄° 
OnigCodePoöt


22098 
	gCR_In_Cu√if‹m
[] = { 1,

22103 c⁄° 
OnigCodePoöt


22104 
	gCR_In_Cu√if‹m_Numbîs_™d_Pun˘u©i⁄
[] = { 1,

22109 c⁄° 
OnigCodePoöt


22110 
	gCR_In_E¨ly_Dy«°ic_Cu√if‹m
[] = { 1,

22115 c⁄° 
OnigCodePoöt


22116 
	gCR_In_Egy±ün_Hõroglyphs
[] = { 1,

22121 c⁄° 
OnigCodePoöt


22122 
	gCR_In_A«tﬁün_Hõroglyphs
[] = { 1,

22127 c⁄° 
OnigCodePoöt


22128 
	gCR_In_Bamum_SuµÀmít
[] = { 1,

22133 c⁄° 
OnigCodePoöt


22134 
	gCR_In_Mro
[] = { 1,

22139 c⁄° 
OnigCodePoöt


22140 
	gCR_In_Basß_Vah
[] = { 1,

22145 c⁄° 
OnigCodePoöt


22146 
	gCR_In_Pahawh_Hm⁄g
[] = { 1,

22151 c⁄° 
OnigCodePoöt


22152 
	gCR_In_Müo
[] = { 1,

22157 c⁄° 
OnigCodePoöt


22158 
	gCR_In_K™a_SuµÀmít
[] = { 1,

22163 c⁄° 
OnigCodePoöt


22164 
	gCR_In_Du∂oy™
[] = { 1,

22169 c⁄° 
OnigCodePoöt


22170 
	gCR_In_Sh‹th™d_F‹m©_C⁄åﬁs
[] = { 1,

22175 c⁄° 
OnigCodePoöt


22176 
	gCR_In_Byz™töe_Musiˇl_Symbﬁs
[] = { 1,

22181 c⁄° 
OnigCodePoöt


22182 
	gCR_In_Musiˇl_Symbﬁs
[] = { 1,

22187 c⁄° 
OnigCodePoöt


22188 
	gCR_In_Ancõ¡_Gªek_Musiˇl_NŸ©i⁄
[] = { 1,

22193 c⁄° 
OnigCodePoöt


22194 
	gCR_In_Tai_Xu™_Jög_Symbﬁs
[] = { 1,

22199 c⁄° 
OnigCodePoöt


22200 
	gCR_In_Cou¡ög_Rod_NumîÆs
[] = { 1,

22205 c⁄° 
OnigCodePoöt


22206 
	gCR_In_M©hem©iˇl_AÕh™umîic_Symbﬁs
[] = { 1,

22211 c⁄° 
OnigCodePoöt


22212 
	gCR_In_Suâ⁄_SignWrôög
[] = { 1,

22217 c⁄° 
OnigCodePoöt


22218 
	gCR_In_Míde_Kikakui
[] = { 1,

22223 c⁄° 
OnigCodePoöt


22224 
	gCR_In_Aøbic_M©hem©iˇl_AÕhabëic_Symbﬁs
[] = { 1,

22229 c⁄° 
OnigCodePoöt


22230 
	gCR_In_Mahj⁄g_Tûes
[] = { 1,

22235 c⁄° 
OnigCodePoöt


22236 
	gCR_In_Domöo_Tûes
[] = { 1,

22241 c⁄° 
OnigCodePoöt


22242 
	gCR_In_Pœyög_C¨ds
[] = { 1,

22247 c⁄° 
OnigCodePoöt


22248 
	gCR_In_En˛o£d_AÕh™umîic_SuµÀmít
[] = { 1,

22253 c⁄° 
OnigCodePoöt


22254 
	gCR_In_En˛o£d_Ideogøphic_SuµÀmít
[] = { 1,

22259 c⁄° 
OnigCodePoöt


22260 
	gCR_In_Mis˚Œ™eous_Symbﬁs_™d_Pi˘ogøphs
[] = { 1,

22265 c⁄° 
OnigCodePoöt


22266 
	gCR_In_EmŸic⁄s
[] = { 1,

22271 c⁄° 
OnigCodePoöt


22272 
	gCR_In_O∫amíèl_Dögb©s
[] = { 1,

22277 c⁄° 
OnigCodePoöt


22278 
	gCR_In_Tøn•‹t_™d_M≠_Symbﬁs
[] = { 1,

22283 c⁄° 
OnigCodePoöt


22284 
	gCR_In_Alchemiˇl_Symbﬁs
[] = { 1,

22289 c⁄° 
OnigCodePoöt


22290 
	gCR_In_Geomëric_Sh≠es_Exãnded
[] = { 1,

22295 c⁄° 
OnigCodePoöt


22296 
	gCR_In_SuµÀmíèl_Aºows_C
[] = { 1,

22301 c⁄° 
OnigCodePoöt


22302 
	gCR_In_SuµÀmíèl_Symbﬁs_™d_Pi˘ogøphs
[] = { 1,

22307 c⁄° 
OnigCodePoöt


22308 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_B
[] = { 1,

22313 c⁄° 
OnigCodePoöt


22314 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_C
[] = { 1,

22319 c⁄° 
OnigCodePoöt


22320 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_D
[] = { 1,

22325 c⁄° 
OnigCodePoöt


22326 
	gCR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_E
[] = { 1,

22331 c⁄° 
OnigCodePoöt


22332 
	gCR_In_CJK_Com∑tibûôy_Ideogøphs_SuµÀmít
[] = { 1,

22337 c⁄° 
OnigCodePoöt


22338 
	gCR_In_Tags
[] = { 1,

22343 c⁄° 
OnigCodePoöt


22344 
	gCR_In_V¨üti⁄_Sñe˘‹s_SuµÀmít
[] = { 1,

22349 c⁄° 
OnigCodePoöt


22350 
	gCR_In_SuµÀmíèry_Priv©e_U£_Aªa_A
[] = { 1,

22355 c⁄° 
OnigCodePoöt


22356 
	gCR_In_SuµÀmíèry_Priv©e_U£_Aªa_B
[] = { 1,

22361 c⁄° 
OnigCodePoöt


22362 
	gCR_In_No_Block
[] = { 42,

22407 c⁄° 
OnigCodePoöt
*

22408 c⁄° 
	gCodeR™ges
[] = {

22409 
CR_NEWLINE
,

22410 
CR_AÕha
,

22411 
CR_Bœnk
,

22412 
CR_C¡æ
,

22413 
CR_Digô
,

22414 
CR_Gøph
,

22415 
CR_Lowî
,

22416 
CR_Pröt
,

22417 
CR_Pun˘
,

22418 
CR_S∑˚
,

22419 
CR_Uµî
,

22420 
CR_XDigô
,

22421 
CR_W‹d
,

22422 
CR_A um
,

22423 
CR_ASCII
,

22424 
CR_Any
,

22425 
CR_Assig√d
,

22426 
CR_C
,

22427 
CR_Cc
,

22428 
CR_Cf
,

22429 
CR_Cn
,

22430 
CR_Co
,

22431 
CR_Cs
,

22432 
CR_L
,

22433 
CR_LC
,

22434 
CR_Ll
,

22435 
CR_Lm
,

22436 
CR_Lo
,

22437 
CR_Lt
,

22438 
CR_Lu
,

22439 
CR_M
,

22440 
CR_Mc
,

22441 
CR_Me
,

22442 
CR_Mn
,

22443 
CR_N
,

22444 
CR_Nd
,

22445 
CR_Nl
,

22446 
CR_No
,

22447 
CR_P
,

22448 
CR_Pc
,

22449 
CR_Pd
,

22450 
CR_Pe
,

22451 
CR_Pf
,

22452 
CR_Pi
,

22453 
CR_Po
,

22454 
CR_Ps
,

22455 
CR_S
,

22456 
CR_Sc
,

22457 
CR_Sk
,

22458 
CR_Sm
,

22459 
CR_So
,

22460 
CR_Z
,

22461 
CR_Zl
,

22462 
CR_Zp
,

22463 
CR_Zs
,

22464 
CR_M©h
,

22465 
CR_AÕhabëic
,

22466 
CR_Lowîˇ£
,

22467 
CR_Uµîˇ£
,

22468 
CR_Ca£d
,

22469 
CR_Ca£_Ign‹abÀ
,

22470 
CR_Ch™ges_Whí_Lowîˇ£d
,

22471 
CR_Ch™ges_Whí_Uµîˇ£d
,

22472 
CR_Ch™ges_Whí_TôÀˇ£d
,

22473 
CR_Ch™ges_Whí_Ca£fﬁded
,

22474 
CR_Ch™ges_Whí_Ca£m≠≥d
,

22475 
CR_ID_Sèπ
,

22476 
CR_ID_C⁄töue
,

22477 
CR_XID_Sèπ
,

22478 
CR_XID_C⁄töue
,

22479 
CR_DeÁu…_Ign‹abÀ_Code_Poöt
,

22480 
CR_Gøpheme_Exãnd
,

22481 
CR_Gøpheme_Ba£
,

22482 
CR_Gøpheme_Lök
,

22483 
CR_Comm⁄
,

22484 
CR_L©ö
,

22485 
CR_Gªek
,

22486 
CR_Cyrûlic
,

22487 
CR_Armíün
,

22488 
CR_Hebªw
,

22489 
CR_Aøbic
,

22490 
CR_Syrüc
,

22491 
CR_ThØ«
,

22492 
CR_Dev™ag¨i
,

22493 
CR_BígÆi
,

22494 
CR_Gurmukhi
,

22495 
CR_Guj¨©i
,

22496 
CR_Oriya
,

22497 
CR_Tamû
,

22498 
CR_Tñugu
,

22499 
CR_K™«da
,

22500 
CR_MÆayÆam
,

22501 
CR_SöhÆa
,

22502 
CR_Thai
,

22503 
CR_Lao
,

22504 
CR_Tibë™
,

22505 
CR_My™m¨
,

22506 
CR_Ge‹gün
,

22507 
CR_H™gul
,

22508 
CR_Ethi›ic
,

22509 
CR_Chîokì
,

22510 
CR_C™adün_Ab‹igöÆ
,

22511 
CR_Ogham
,

22512 
CR_Runic
,

22513 
CR_Khmî
,

22514 
CR_M⁄gﬁün
,

22515 
CR_Húag™a
,

22516 
CR_K©ak™a
,

22517 
CR_B›omofo
,

22518 
CR_H™
,

22519 
CR_Yi
,

22520 
CR_Old_Ièlic
,

22521 
CR_GŸhic
,

22522 
CR_De£ªt
,

22523 
CR_Inhîôed
,

22524 
CR_TagÆog
,

22525 
CR_H™unoo
,

22526 
CR_Buhid
,

22527 
CR_Tagb™wa
,

22528 
CR_Limbu
,

22529 
CR_Tai_Le
,

22530 
CR_Löór_B
,

22531 
CR_Ug¨ôic
,

22532 
CR_Shavün
,

22533 
CR_Osm™ya
,

22534 
CR_Cy¥iŸ
,

22535 
CR_BøûÀ
,

22536 
CR_Bugöe£
,

22537 
CR_C›tic
,

22538 
CR_New_Tai_Lue
,

22539 
CR_Gœgﬁôic
,

22540 
CR_Tiföagh
,

22541 
CR_SylŸi_Nagri
,

22542 
CR_Old_Pîsün
,

22543 
CR_Kh¨oshthi
,

22544 
CR_BÆöe£
,

22545 
CR_Cu√if‹m
,

22546 
CR_Ph€nicün
,

22547 
CR_Phags_Pa
,

22548 
CR_Nko
,

22549 
CR_Sund™e£
,

22550 
CR_Lïcha
,

22551 
CR_Ol_Chiki
,

22552 
CR_Vai
,

22553 
CR_Sauøshåa
,

22554 
CR_Kayah_Li
,

22555 
CR_Rej™g
,

22556 
CR_Lycün
,

22557 
CR_C¨ün
,

22558 
CR_Lydün
,

22559 
CR_Cham
,

22560 
CR_Tai_Tham
,

22561 
CR_Tai_Võt
,

22562 
CR_Ave°™
,

22563 
CR_Egy±ün_Hõroglyphs
,

22564 
CR_Sam¨ô™
,

22565 
CR_Lisu
,

22566 
CR_Bamum
,

22567 
CR_Jav™e£
,

22568 
CR_Mìãi_Mayek
,

22569 
CR_Im≥rül_Aømaic
,

22570 
CR_Old_South_Aøbün
,

22571 
CR_Ins¸ùti⁄Æ_P¨thün
,

22572 
CR_Ins¸ùti⁄Æ_Pahœvi
,

22573 
CR_Old_Turkic
,

22574 
CR_Kaôhi
,

22575 
CR_B©ak
,

22576 
CR_Bøhmi
,

22577 
CR_M™daic
,

22578 
CR_Chakma
,

22579 
CR_Mîoôic_Cursive
,

22580 
CR_Mîoôic_Hõroglyphs
,

22581 
CR_Müo
,

22582 
CR_Sh¨ada
,

22583 
CR_S‹a_Som≥ng
,

22584 
CR_Takri
,

22585 
CR_Cauˇsün_Alb™ün
,

22586 
CR_Basß_Vah
,

22587 
CR_Du∂oy™
,

22588 
CR_Elbaßn
,

22589 
CR_Gø¡ha
,

22590 
CR_Pahawh_Hm⁄g
,

22591 
CR_Khojki
,

22592 
CR_Löór_A
,

22593 
CR_Mahaj™i
,

22594 
CR_M™ich´™
,

22595 
CR_Míde_Kikakui
,

22596 
CR_Modi
,

22597 
CR_Mro
,

22598 
CR_Old_N‹th_Aøbün
,

22599 
CR_Nab©´™
,

22600 
CR_PÆmyª√
,

22601 
CR_Pau_Cö_Hau
,

22602 
CR_Old_Pîmic
,

22603 
CR_Pß…î_Pahœvi
,

22604 
CR_Siddham
,

22605 
CR_Khudawadi
,

22606 
CR_Túhuè
,

22607 
CR_W¨™g_Côi
,

22608 
CR_Ahom
,

22609 
CR_A«tﬁün_Hõroglyphs
,

22610 
CR_H©øn
,

22611 
CR_Mu…™i
,

22612 
CR_Old_Hung¨ün
,

22613 
CR_SignWrôög
,

22614 
CR_Whôe_S∑˚
,

22615 
CR_Bidi_C⁄åﬁ
,

22616 
CR_Joö_C⁄åﬁ
,

22617 
CR_Dash
,

22618 
CR_Hyphí
,

22619 
CR_QuŸ©i⁄_M¨k
,

22620 
CR_TîmöÆ_Pun˘u©i⁄
,

22621 
CR_Othî_M©h
,

22622 
CR_Hex_Digô
,

22623 
CR_ASCII_Hex_Digô
,

22624 
CR_Othî_AÕhabëic
,

22625 
CR_Ideogøphic
,

22626 
CR_Dü¸ôic
,

22627 
CR_Exãndî
,

22628 
CR_Othî_Lowîˇ£
,

22629 
CR_Othî_Uµîˇ£
,

22630 
CR_N⁄ch¨a˘î_Code_Poöt
,

22631 
CR_Othî_Gøpheme_Exãnd
,

22632 
CR_IDS_Bö¨y_O≥øt‹
,

22633 
CR_IDS_Trö¨y_O≥øt‹
,

22634 
CR_Radiˇl
,

22635 
CR_Unifõd_Ideogøph
,

22636 
CR_Othî_DeÁu…_Ign‹abÀ_Code_Poöt
,

22637 
CR_Dïªˇãd
,

22638 
CR_So·_DŸãd
,

22639 
CR_Logiˇl_Ordî_Ex˚±i⁄
,

22640 
CR_Othî_ID_Sèπ
,

22641 
CR_Othî_ID_C⁄töue
,

22642 
CR_STîm
,

22643 
CR_V¨üti⁄_Sñe˘‹
,

22644 
CR_P©ã∫_Whôe_S∑˚
,

22645 
CR_P©ã∫_Sy¡ax
,

22646 
CR_Unknown
,

22647 
CR_In_Basic_L©ö
,

22648 
CR_In_L©ö_1_SuµÀmít
,

22649 
CR_In_L©ö_Exãnded_A
,

22650 
CR_In_L©ö_Exãnded_B
,

22651 
CR_In_IPA_Exãnsi⁄s
,

22652 
CR_In_S∑cög_Modifõr_Lëãrs
,

22653 
CR_In_Comböög_Dü¸ôiˇl_M¨ks
,

22654 
CR_In_Gªek_™d_C›tic
,

22655 
CR_In_Cyrûlic
,

22656 
CR_In_Cyrûlic_SuµÀmít
,

22657 
CR_In_Armíün
,

22658 
CR_In_Hebªw
,

22659 
CR_In_Aøbic
,

22660 
CR_In_Syrüc
,

22661 
CR_In_Aøbic_SuµÀmít
,

22662 
CR_In_ThØ«
,

22663 
CR_In_NKo
,

22664 
CR_In_Sam¨ô™
,

22665 
CR_In_M™daic
,

22666 
CR_In_Aøbic_Exãnded_A
,

22667 
CR_In_Dev™ag¨i
,

22668 
CR_In_BígÆi
,

22669 
CR_In_Gurmukhi
,

22670 
CR_In_Guj¨©i
,

22671 
CR_In_Oriya
,

22672 
CR_In_Tamû
,

22673 
CR_In_Tñugu
,

22674 
CR_In_K™«da
,

22675 
CR_In_MÆayÆam
,

22676 
CR_In_SöhÆa
,

22677 
CR_In_Thai
,

22678 
CR_In_Lao
,

22679 
CR_In_Tibë™
,

22680 
CR_In_My™m¨
,

22681 
CR_In_Ge‹gün
,

22682 
CR_In_H™gul_Jamo
,

22683 
CR_In_Ethi›ic
,

22684 
CR_In_Ethi›ic_SuµÀmít
,

22685 
CR_In_Chîokì
,

22686 
CR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics
,

22687 
CR_In_Ogham
,

22688 
CR_In_Runic
,

22689 
CR_In_TagÆog
,

22690 
CR_In_H™unoo
,

22691 
CR_In_Buhid
,

22692 
CR_In_Tagb™wa
,

22693 
CR_In_Khmî
,

22694 
CR_In_M⁄gﬁün
,

22695 
CR_In_Unifõd_C™adün_Ab‹igöÆ_SyŒabics_Exãnded
,

22696 
CR_In_Limbu
,

22697 
CR_In_Tai_Le
,

22698 
CR_In_New_Tai_Lue
,

22699 
CR_In_Khmî_Symbﬁs
,

22700 
CR_In_Bugöe£
,

22701 
CR_In_Tai_Tham
,

22702 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_Exãnded
,

22703 
CR_In_BÆöe£
,

22704 
CR_In_Sund™e£
,

22705 
CR_In_B©ak
,

22706 
CR_In_Lïcha
,

22707 
CR_In_Ol_Chiki
,

22708 
CR_In_Sund™e£_SuµÀmít
,

22709 
CR_In_Vedic_Exãnsi⁄s
,

22710 
CR_In_Ph⁄ëic_Exãnsi⁄s
,

22711 
CR_In_Ph⁄ëic_Exãnsi⁄s_SuµÀmít
,

22712 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_SuµÀmít
,

22713 
CR_In_L©ö_Exãnded_Addôi⁄Æ
,

22714 
CR_In_Gªek_Exãnded
,

22715 
CR_In_GíîÆ_Pun˘u©i⁄
,

22716 
CR_In_Su≥rs¸ùts_™d_Subs¸ùts
,

22717 
CR_In_Cuºícy_Symbﬁs
,

22718 
CR_In_Comböög_Dü¸ôiˇl_M¨ks_f‹_Symbﬁs
,

22719 
CR_In_Lëãæike_Symbﬁs
,

22720 
CR_In_Numbî_F‹ms
,

22721 
CR_In_Aºows
,

22722 
CR_In_M©hem©iˇl_O≥øt‹s
,

22723 
CR_In_Mis˚Œ™eous_Techniˇl
,

22724 
CR_In_C⁄åﬁ_Pi˘uªs
,

22725 
CR_In_O±iˇl_Ch¨a˘î_Recognôi⁄
,

22726 
CR_In_En˛o£d_AÕh™umîics
,

22727 
CR_In_Box_Døwög
,

22728 
CR_In_Block_EÀmíts
,

22729 
CR_In_Geomëric_Sh≠es
,

22730 
CR_In_Mis˚Œ™eous_Symbﬁs
,

22731 
CR_In_Dögb©s
,

22732 
CR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_A
,

22733 
CR_In_SuµÀmíèl_Aºows_A
,

22734 
CR_In_BøûÀ_P©ã∫s
,

22735 
CR_In_SuµÀmíèl_Aºows_B
,

22736 
CR_In_Mis˚Œ™eous_M©hem©iˇl_Symbﬁs_B
,

22737 
CR_In_SuµÀmíèl_M©hem©iˇl_O≥øt‹s
,

22738 
CR_In_Mis˚Œ™eous_Symbﬁs_™d_Aºows
,

22739 
CR_In_Gœgﬁôic
,

22740 
CR_In_L©ö_Exãnded_C
,

22741 
CR_In_C›tic
,

22742 
CR_In_Ge‹gün_SuµÀmít
,

22743 
CR_In_Tiföagh
,

22744 
CR_In_Ethi›ic_Exãnded
,

22745 
CR_In_Cyrûlic_Exãnded_A
,

22746 
CR_In_SuµÀmíèl_Pun˘u©i⁄
,

22747 
CR_In_CJK_Radiˇls_SuµÀmít
,

22748 
CR_In_K™gxi_Radiˇls
,

22749 
CR_In_Ideogøphic_Des¸ùti⁄_Ch¨a˘îs
,

22750 
CR_In_CJK_Symbﬁs_™d_Pun˘u©i⁄
,

22751 
CR_In_Húag™a
,

22752 
CR_In_K©ak™a
,

22753 
CR_In_B›omofo
,

22754 
CR_In_H™gul_Com∑tibûôy_Jamo
,

22755 
CR_In_K™bun
,

22756 
CR_In_B›omofo_Exãnded
,

22757 
CR_In_CJK_Såokes
,

22758 
CR_In_K©ak™a_Ph⁄ëic_Exãnsi⁄s
,

22759 
CR_In_En˛o£d_CJK_Lëãrs_™d_M⁄ths
,

22760 
CR_In_CJK_Com∑tibûôy
,

22761 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_A
,

22762 
CR_In_Yijög_Hexagøm_Symbﬁs
,

22763 
CR_In_CJK_Unifõd_Ideogøphs
,

22764 
CR_In_Yi_SyŒabÀs
,

22765 
CR_In_Yi_Radiˇls
,

22766 
CR_In_Lisu
,

22767 
CR_In_Vai
,

22768 
CR_In_Cyrûlic_Exãnded_B
,

22769 
CR_In_Bamum
,

22770 
CR_In_Modifõr_T⁄e_Lëãrs
,

22771 
CR_In_L©ö_Exãnded_D
,

22772 
CR_In_SylŸi_Nagri
,

22773 
CR_In_Comm⁄_Indic_Numbî_F‹ms
,

22774 
CR_In_Phags_∑
,

22775 
CR_In_Sauøshåa
,

22776 
CR_In_Dev™ag¨i_Exãnded
,

22777 
CR_In_Kayah_Li
,

22778 
CR_In_Rej™g
,

22779 
CR_In_H™gul_Jamo_Exãnded_A
,

22780 
CR_In_Jav™e£
,

22781 
CR_In_My™m¨_Exãnded_B
,

22782 
CR_In_Cham
,

22783 
CR_In_My™m¨_Exãnded_A
,

22784 
CR_In_Tai_Võt
,

22785 
CR_In_Mìãi_Mayek_Exãnsi⁄s
,

22786 
CR_In_Ethi›ic_Exãnded_A
,

22787 
CR_In_L©ö_Exãnded_E
,

22788 
CR_In_Chîokì_SuµÀmít
,

22789 
CR_In_Mìãi_Mayek
,

22790 
CR_In_H™gul_SyŒabÀs
,

22791 
CR_In_H™gul_Jamo_Exãnded_B
,

22792 
CR_In_High_Suºog©es
,

22793 
CR_In_High_Priv©e_U£_Suºog©es
,

22794 
CR_In_Low_Suºog©es
,

22795 
CR_In_Priv©e_U£_Aªa
,

22796 
CR_In_CJK_Com∑tibûôy_Ideogøphs
,

22797 
CR_In_AÕhabëic_Pª£¡©i⁄_F‹ms
,

22798 
CR_In_Aøbic_Pª£¡©i⁄_F‹ms_A
,

22799 
CR_In_V¨üti⁄_Sñe˘‹s
,

22800 
CR_In_Vîtiˇl_F‹ms
,

22801 
CR_In_Comböög_HÆf_M¨ks
,

22802 
CR_In_CJK_Com∑tibûôy_F‹ms
,

22803 
CR_In_SmÆl_F‹m_V¨ü¡s
,

22804 
CR_In_Aøbic_Pª£¡©i⁄_F‹ms_B
,

22805 
CR_In_HÆfwidth_™d_FuŒwidth_F‹ms
,

22806 
CR_In_S≥cüls
,

22807 
CR_In_Löór_B_SyŒab¨y
,

22808 
CR_In_Löór_B_Ideogøms
,

22809 
CR_In_Aegón_Numbîs
,

22810 
CR_In_Ancõ¡_Gªek_Numbîs
,

22811 
CR_In_Ancõ¡_Symbﬁs
,

22812 
CR_In_Phai°os_Disc
,

22813 
CR_In_Lycün
,

22814 
CR_In_C¨ün
,

22815 
CR_In_C›tic_E∑˘_Numbîs
,

22816 
CR_In_Old_Ièlic
,

22817 
CR_In_GŸhic
,

22818 
CR_In_Old_Pîmic
,

22819 
CR_In_Ug¨ôic
,

22820 
CR_In_Old_Pîsün
,

22821 
CR_In_De£ªt
,

22822 
CR_In_Shavün
,

22823 
CR_In_Osm™ya
,

22824 
CR_In_Elbaßn
,

22825 
CR_In_Cauˇsün_Alb™ün
,

22826 
CR_In_Löór_A
,

22827 
CR_In_Cy¥iŸ_SyŒab¨y
,

22828 
CR_In_Im≥rül_Aømaic
,

22829 
CR_In_PÆmyª√
,

22830 
CR_In_Nab©´™
,

22831 
CR_In_H©øn
,

22832 
CR_In_Ph€nicün
,

22833 
CR_In_Lydün
,

22834 
CR_In_Mîoôic_Hõroglyphs
,

22835 
CR_In_Mîoôic_Cursive
,

22836 
CR_In_Kh¨oshthi
,

22837 
CR_In_Old_South_Aøbün
,

22838 
CR_In_Old_N‹th_Aøbün
,

22839 
CR_In_M™ich´™
,

22840 
CR_In_Ave°™
,

22841 
CR_In_Ins¸ùti⁄Æ_P¨thün
,

22842 
CR_In_Ins¸ùti⁄Æ_Pahœvi
,

22843 
CR_In_Pß…î_Pahœvi
,

22844 
CR_In_Old_Turkic
,

22845 
CR_In_Old_Hung¨ün
,

22846 
CR_In_Rumi_NumîÆ_Symbﬁs
,

22847 
CR_In_Bøhmi
,

22848 
CR_In_Kaôhi
,

22849 
CR_In_S‹a_Som≥ng
,

22850 
CR_In_Chakma
,

22851 
CR_In_Mahaj™i
,

22852 
CR_In_Sh¨ada
,

22853 
CR_In_SöhÆa_Archaic_Numbîs
,

22854 
CR_In_Khojki
,

22855 
CR_In_Mu…™i
,

22856 
CR_In_Khudawadi
,

22857 
CR_In_Gø¡ha
,

22858 
CR_In_Túhuè
,

22859 
CR_In_Siddham
,

22860 
CR_In_Modi
,

22861 
CR_In_Takri
,

22862 
CR_In_Ahom
,

22863 
CR_In_W¨™g_Côi
,

22864 
CR_In_Pau_Cö_Hau
,

22865 
CR_In_Cu√if‹m
,

22866 
CR_In_Cu√if‹m_Numbîs_™d_Pun˘u©i⁄
,

22867 
CR_In_E¨ly_Dy«°ic_Cu√if‹m
,

22868 
CR_In_Egy±ün_Hõroglyphs
,

22869 
CR_In_A«tﬁün_Hõroglyphs
,

22870 
CR_In_Bamum_SuµÀmít
,

22871 
CR_In_Mro
,

22872 
CR_In_Basß_Vah
,

22873 
CR_In_Pahawh_Hm⁄g
,

22874 
CR_In_Müo
,

22875 
CR_In_K™a_SuµÀmít
,

22876 
CR_In_Du∂oy™
,

22877 
CR_In_Sh‹th™d_F‹m©_C⁄åﬁs
,

22878 
CR_In_Byz™töe_Musiˇl_Symbﬁs
,

22879 
CR_In_Musiˇl_Symbﬁs
,

22880 
CR_In_Ancõ¡_Gªek_Musiˇl_NŸ©i⁄
,

22881 
CR_In_Tai_Xu™_Jög_Symbﬁs
,

22882 
CR_In_Cou¡ög_Rod_NumîÆs
,

22883 
CR_In_M©hem©iˇl_AÕh™umîic_Symbﬁs
,

22884 
CR_In_Suâ⁄_SignWrôög
,

22885 
CR_In_Míde_Kikakui
,

22886 
CR_In_Aøbic_M©hem©iˇl_AÕhabëic_Symbﬁs
,

22887 
CR_In_Mahj⁄g_Tûes
,

22888 
CR_In_Domöo_Tûes
,

22889 
CR_In_Pœyög_C¨ds
,

22890 
CR_In_En˛o£d_AÕh™umîic_SuµÀmít
,

22891 
CR_In_En˛o£d_Ideogøphic_SuµÀmít
,

22892 
CR_In_Mis˚Œ™eous_Symbﬁs_™d_Pi˘ogøphs
,

22893 
CR_In_EmŸic⁄s
,

22894 
CR_In_O∫amíèl_Dögb©s
,

22895 
CR_In_Tøn•‹t_™d_M≠_Symbﬁs
,

22896 
CR_In_Alchemiˇl_Symbﬁs
,

22897 
CR_In_Geomëric_Sh≠es_Exãnded
,

22898 
CR_In_SuµÀmíèl_Aºows_C
,

22899 
CR_In_SuµÀmíèl_Symbﬁs_™d_Pi˘ogøphs
,

22900 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_B
,

22901 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_C
,

22902 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_D
,

22903 
CR_In_CJK_Unifõd_Ideogøphs_Exãnsi⁄_E
,

22904 
CR_In_CJK_Com∑tibûôy_Ideogøphs_SuµÀmít
,

22905 
CR_In_Tags
,

22906 
CR_In_V¨üti⁄_Sñe˘‹s_SuµÀmít
,

22907 
CR_In_SuµÀmíèry_Priv©e_U£_Aªa_A
,

22908 
CR_In_SuµÀmíèry_Priv©e_U£_Aªa_B
,

22909 
CR_In_No_Block
,

22912 
	#TOTAL_KEYWORDS
 711

	)

22913 
	#MIN_WORD_LENGTH
 1

	)

22914 
	#MAX_WORD_LENGTH
 44

	)

22915 
	#MIN_HASH_VALUE
 1

	)

22916 
	#MAX_HASH_VALUE
 5162

	)

22919 #i‚de‡
GPERF_DOWNCASE


22920 
	#GPERF_DOWNCASE
 1

	)

22921 
	gg≥rf_downˇ£
[256] =

22944 #i‚de‡
GPERF_CASE_STRNCMP


22945 
	#GPERF_CASE_STRNCMP
 1

	)

22947 
	$g≥rf_ˇ£_°∫cmp
 (c⁄° *
s1
, c⁄° *
s2
, 
n
)

22949 ; 
n
 > 0;)

22951 
c1
 = 
g≥rf_downˇ£
[()*
s1
++];

22952 
c2
 = 
g≥rf_downˇ£
[()*
s2
++];

22953 i‡(
c1
 !0 && c1 =
c2
)

22955 
n
--;

22958  ()
c1
 - ()
c2
;

22961 
	}
}

22964 #ifde‡
__GNUC__


22965 
	g__ölöe


22967 #ifde‡
__˝lu•lus


22968 
	gölöe


22972 
	$hash
 (c⁄° *
°r
, 
Àn
)

22974 c⁄° 
asso_vÆues
[] =

23003 
hvÆ
 = 
Àn
;

23005 
hvÆ
)

23008 
hvÆ
 +
asso_vÆues
[()
°r
[15]];

23014 
hvÆ
 +
asso_vÆues
[()
°r
[11]];

23022 
hvÆ
 +
asso_vÆues
[()
°r
[5]];

23025 
hvÆ
 +
asso_vÆues
[()
°r
[4]];

23029 
hvÆ
 +
asso_vÆues
[()
°r
[2]];

23032 
hvÆ
 +
asso_vÆues
[()
°r
[1]];

23035 
hvÆ
 +
asso_vÆues
[()
°r
[0]];

23038  
hvÆ
 + 
asso_vÆues
[()
°r
[
Àn
 - 1]];

23039 
	}
}

23041 c⁄° 
Pr›îtyNameCty≥
 *

23042 
	$unicode_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

23044 c⁄° 
Pr›îtyNameCty≥
 
w‹dli°
[] =

25286 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

25288 
key
 = 
	`hash
 (
°r
, 
Àn
);

25290 i‡(
key
 <
MAX_HASH_VALUE
)

25292 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

25294 i‡(((()*
°r
 ^ ()*
s
Ë& ~32Ë=0 && !
	`g≥rf_ˇ£_°∫cmp
 (°r, s, 
Àn
) && s[len] == '\0')

25295  &
w‹dli°
[
key
];

25299 
	}
}

25303 
	#PROPERTY_VERSION
 8
_0_0


	)

25305 
	#PROPERTY_NAME_MAX_SIZE
 59

	)

25306 
	#CODE_RANGES_NUM
 501

	)

	@modules/oniguruma/src/unicode_property_data_posix.c

38 c⁄° 
OnigCodePoöt


39 
CR_NEWLINE
[] = { 1,

44 c⁄° 
OnigCodePoöt


45 
	gCR_AÕha
[] = { 617,

666 c⁄° 
OnigCodePoöt


667 
	gCR_Bœnk
[] = { 8,

679 c⁄° 
OnigCodePoöt


680 
	gCR_C¡æ
[] = { 2,

686 c⁄° 
OnigCodePoöt


687 
	gCR_Digô
[] = { 51,

742 c⁄° 
OnigCodePoöt


743 
	gCR_Gøph
[] = { 618,

1365 c⁄° 
OnigCodePoöt


1366 
	gCR_Lowî
[] = { 637,

2007 c⁄° 
OnigCodePoöt


2008 
	gCR_Pröt
[] = { 615,

2627 c⁄° 
OnigCodePoöt


2628 
	gCR_Pun˘
[] = { 161,

2793 c⁄° 
OnigCodePoöt


2794 
	gCR_S∑˚
[] = { 10,

2808 c⁄° 
OnigCodePoöt


2809 
	gCR_Uµî
[] = { 630,

3443 c⁄° 
OnigCodePoöt


3444 
	gCR_XDigô
[] = { 3,

3451 c⁄° 
OnigCodePoöt


3452 
	gCR_W‹d
[] = { 654,

4110 c⁄° 
OnigCodePoöt


4111 
	gCR_A um
[] = { 648,

4763 c⁄° 
OnigCodePoöt


4764 
	gCR_ASCII
[] = { 1,

4769 c⁄° 
OnigCodePoöt
*

4770 c⁄° 
	gCodeR™ges
[] = {

4771 
CR_NEWLINE
,

4772 
CR_AÕha
,

4773 
CR_Bœnk
,

4774 
CR_C¡æ
,

4775 
CR_Digô
,

4776 
CR_Gøph
,

4777 
CR_Lowî
,

4778 
CR_Pröt
,

4779 
CR_Pun˘
,

4780 
CR_S∑˚
,

4781 
CR_Uµî
,

4782 
CR_XDigô
,

4783 
CR_W‹d
,

4784 
CR_A um
,

4785 
CR_ASCII
,

4788 
	#TOTAL_KEYWORDS
 15

	)

4789 
	#MIN_WORD_LENGTH
 4

	)

4790 
	#MAX_WORD_LENGTH
 7

	)

4791 
	#MIN_HASH_VALUE
 5

	)

4792 
	#MAX_HASH_VALUE
 19

	)

4795 #i‚de‡
GPERF_DOWNCASE


4796 
	#GPERF_DOWNCASE
 1

	)

4797 
	gg≥rf_downˇ£
[256] =

4820 #i‚de‡
GPERF_CASE_STRNCMP


4821 
	#GPERF_CASE_STRNCMP
 1

	)

4823 
	$g≥rf_ˇ£_°∫cmp
 (c⁄° *
s1
, c⁄° *
s2
, 
n
)

4825 ; 
n
 > 0;)

4827 
c1
 = 
g≥rf_downˇ£
[()*
s1
++];

4828 
c2
 = 
g≥rf_downˇ£
[()*
s2
++];

4829 i‡(
c1
 !0 && c1 =
c2
)

4831 
n
--;

4834  ()
c1
 - ()
c2
;

4837 
	}
}

4840 #ifde‡
__GNUC__


4841 
	g__ölöe


4843 #ifde‡
__˝lu•lus


4844 
	gölöe


4848 
	$hash
 (c⁄° *
°r
, 
Àn
)

4850 c⁄° 
asso_vÆues
[] =

4879  
Àn
 + 
asso_vÆues
[()
°r
[2]] +ásso_values[()str[0]];

4880 
	}
}

4882 c⁄° 
Pr›îtyNameCty≥
 *

4883 
	$unicode_lookup_¥›îty_«me
 (c⁄° *
°r
, 
Àn
)

4885 c⁄° 
Pr›îtyNameCty≥
 
w‹dli°
[] =

4920 i‡(
Àn
 <
MAX_WORD_LENGTH
 &&Üí >
MIN_WORD_LENGTH
)

4922 
key
 = 
	`hash
 (
°r
, 
Àn
);

4924 i‡(
key
 <
MAX_HASH_VALUE
)

4926 c⁄° *
s
 = 
w‹dli°
[
key
].
«me
;

4928 i‡(((()*
°r
 ^ ()*
s
Ë& ~32Ë=0 && !
	`g≥rf_ˇ£_°∫cmp
 (°r, s, 
Àn
) && s[len] == '\0')

4929  &
w‹dli°
[
key
];

4933 
	}
}

4937 
	#PROPERTY_VERSION
 8
_0_0


	)

4939 
	#PROPERTY_NAME_MAX_SIZE
 17

	)

4940 
	#CODE_RANGES_NUM
 15

	)

	@modules/oniguruma/src/unicode_unfold_key.c

10 
	~<°rög.h
>

11 
	~"ªgíc.h
"

13 
	#TOTAL_KEYWORDS
 1321

	)

14 
	#MIN_WORD_LENGTH
 3

	)

15 
	#MAX_WORD_LENGTH
 3

	)

16 
	#MIN_HASH_VALUE
 11

	)

17 
	#MAX_HASH_VALUE
 1544

	)

20 #ifde‡
__GNUC__


21 
	g__ölöe


23 #ifde‡
__˝lu•lus


24 
	gölöe


29 
	$hash
(
OnigCodePoöt
 
codes
[])

31 c⁄° 
asso_vÆues
[] =

64  
asso_vÆues
[()
	`⁄ig_codes_byã_©
(
codes
, 2)+35] +ásso_values[()onig_codes_byte_at(codes, 1)+1] +ásso_values[()onig_codes_byte_at(codes, 0)];

65 
	}
}

67 c⁄° 
ByUnfﬁdKey
 *

68 
	$unicode_unfﬁd_key
(
OnigCodePoöt
 
code
)

70 c⁄° 
ByUnfﬁdKey
 
w‹dli°
[] =

2841 
key
 = 
	`hash
(&
code
);

2843 i‡(
key
 <
MAX_HASH_VALUE
)

2845 
OnigCodePoöt
 
gcode
 = 
w‹dli°
[
key
].
code
;

2847 i‡(
code
 =
gcode
)

2848  &
w‹dli°
[
key
];

2852 
	}
}

	@modules/oniguruma/src/utf16_be.c

30 
	~"ªgíc.h
"

32 c⁄° 
	gEncLí_UTF16
[] = {

52 
	$utf16be_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

54  
EncLí_UTF16
[*
p
];

55 
	}
}

58 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

60  
	`⁄igíc_Àngth_check_is_vÆid_mbc_°rög
(
ONIG_ENCODING_UTF16_BE
, 
s
, 
íd
);

61 
	}
}

64 
	$utf16be_is_mbc_√wlöe
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

66 i‡(
p
 + 1 < 
íd
) {

67 i‡(*(
p
+1) == 0x0a && *p == 0x00)

69 #ifde‡
USE_UNICODE_ALL_LINE_TERMINATORS


71 #i‚de‡
USE_CRNL_AS_LINE_TERMINATOR


72 *(
p
+1) == 0x0d ||

74 *(
p
+1) == 0x85) && *p == 0x00)

77 i‡(*
p
 == 0x20 && (*(p+1) == 0x29 || *(p+1) == 0x28))

82 
	}
}

84 
OnigCodePoöt


85 
	$utf16be_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

87 
OnigCodePoöt
 
code
;

89 i‡(
	`UTF16_IS_SURROGATE_FIRST
(*
p
)) {

90 
code
 = ((((
p
[0] - 0xd8) << 2) + ((p[1] & 0xc0) >> 6) + 1) << 16)

91 + ((((
p
[1] & 0x3f) << 2) + (p[2] - 0xdc)) << 8)

92 + 
p
[3];

95 
code
 = 
p
[0] * 256 +Ö[1];

97  
code
;

98 
	}
}

101 
	$utf16be_code_to_mb˛í
(
OnigCodePoöt
 
code
)

103  (
code
 > 0xffff ? 4 : 2);

104 
	}
}

107 
	$utf16be_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

109 
UCh¨
* 
p
 = 
buf
;

111 i‡(
code
 > 0xffff) {

112 
∂™e
, 
high
;

114 
∂™e
 = (
code
 >> 16) - 1;

115 *
p
++ = (
∂™e
 >> 2) + 0xd8;

116 
high
 = (
code
 & 0xff00) >> 8;

117 *
p
++ = ((
∂™e
 & 0x03Ë<< 6Ë+ (
high
 >> 2);

118 *
p
++ = (
high
 & 0x03) + 0xdc;

119 *
p
 = (
UCh¨
 )(
code
 & 0xff);

123 *
p
++ = (
UCh¨
 )((
code
 & 0xff00) >> 8);

124 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

127 
	}
}

130 
	$utf16be_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

131 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
, UCh¨* 
fﬁd
)

133 c⁄° 
UCh¨
* 
p
 = *
µ
;

135 i‡(
	`ONIGENC_IS_ASCII_CODE
(*(
p
+1)) && *p == 0) {

136 
p
++;

137 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


138 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

139 i‡(*
p
 == 0x49) {

140 *
fﬁd
++ = 0x01;

141 *
fﬁd
 = 0x31;

142 (*
µ
) += 2;

148 *
fﬁd
++ = 0;

149 *
fﬁd
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

150 *
µ
 += 2;

154  
	`⁄igíc_unicode_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_UTF16_BE
, 
Êag
,

155 
µ
, 
íd
, 
fﬁd
);

156 
	}
}

160 
	$utf16be_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

162 c⁄° 
UCh¨
* 
p
 = *
µ
;

164 (*
µ
Ë+
EncLí_UTF16
[*
p
];

166 i‡(*
p
 == 0) {

167 
c
, 
v
;

169 
p
++;

170 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

171  
TRUE
;

174 
c
 = *
p
;

175 
v
 = 
	`ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE
(
c
,

176 (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

178 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

180 i‡(
c
 >= 0xaa && c <= 0xba)

181  
FALSE
;

183  
TRUE
;

185  (
v
 !0 ? 
TRUE
 : 
FALSE
);

188  
FALSE
;

189 
	}
}

192 
UCh¨
*

193 
	$utf16be_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

195 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

197 i‡((
s
 - 
°¨t
) % 2 == 1) {

198 
s
--;

201 i‡(
	`UTF16_IS_SURROGATE_SECOND
(*
s
Ë&& s > 
°¨t
 + 1)

202 
s
 -= 2;

204  (
UCh¨
* )
s
;

205 
	}
}

208 
	$utf16be_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

209 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

211  
	`⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
ONIG_ENCODING_UTF16_BE
,

212 
Êag
, 
p
, 
íd
, 
ôems
);

213 
	}
}

215 
OnigEncodögTy≥
 
	gOnigEncodögUTF16_BE
 = {

216 
utf16be_mbc_íc_Àn
,

220 
utf16be_is_mbc_√wlöe
,

221 
utf16be_mbc_to_code
,

222 
utf16be_code_to_mb˛í
,

223 
utf16be_code_to_mbc
,

224 
utf16be_mbc_ˇ£_fﬁd
,

225 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
,

226 
utf16be_gë_ˇ£_fﬁd_codes_by_°r
,

227 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
,

228 
⁄igíc_unicode_is_code_˘y≥
,

229 
⁄igíc_utf16_32_gë_˘y≥_code_ønge
,

230 
utf16be_À·_adju°_ch¨_hód
,

231 
⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
,

232 
NULL
,

233 
NULL
,

234 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/utf16_le.c

30 
	~"ªgíc.h
"

32 c⁄° 
	gEncLí_UTF16
[] = {

52 
	$utf16À_code_to_mb˛í
(
OnigCodePoöt
 
code
)

54  (
code
 > 0xffff ? 4 : 2);

55 
	}
}

58 
	$utf16À_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

60  
EncLí_UTF16
[*(
p
+1)];

61 
	}
}

64 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

66 c⁄° 
UCh¨
* 
íd1
 = 
íd
 - 1;

68 
p
 < 
íd1
) {

69 
p
 +
	`utf16À_mbc_íc_Àn
(p);

72 i‡(
p
 !
íd
)

73  
FALSE
;

75  
TRUE
;

76 
	}
}

79 
	$utf16À_is_mbc_√wlöe
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

81 i‡(
p
 + 1 < 
íd
) {

82 i‡(*
p
 == 0x0a && *(p+1) == 0x00)

84 #ifde‡
USE_UNICODE_ALL_LINE_TERMINATORS


86 #i‚de‡
USE_CRNL_AS_LINE_TERMINATOR


87 *
p
 == 0x0d ||

89 *
p
 == 0x85) && *(p+1) == 0x00)

92 i‡(*(
p
+1) == 0x20 && (*p == 0x29 || *p == 0x28))

97 
	}
}

99 
OnigCodePoöt


100 
	$utf16À_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

102 
OnigCodePoöt
 
code
;

103 
UCh¨
 
c0
 = *
p
;

104 
UCh¨
 
c1
 = *(
p
+1);

106 i‡(
	`UTF16_IS_SURROGATE_FIRST
(
c1
)) {

107 
code
 = ((((
c1
 - 0xd8Ë<< 2Ë+ ((
c0
 & 0xc0) >> 6) + 1) << 16)

108 + ((((
c0
 & 0x3fË<< 2Ë+ (
p
[3] - 0xdc)) << 8)

109 + 
p
[2];

112 
code
 = 
c1
 * 256 + 
p
[0];

114  
code
;

115 
	}
}

118 
	$utf16À_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

120 
UCh¨
* 
p
 = 
buf
;

122 i‡(
code
 > 0xffff) {

123 
∂™e
, 
high
;

125 
∂™e
 = (
code
 >> 16) - 1;

126 
high
 = (
code
 & 0xff00) >> 8;

128 *
p
++ = ((
∂™e
 & 0x03Ë<< 6Ë+ (
high
 >> 2);

129 *
p
++ = (
∂™e
 >> 2) + 0xd8;

130 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

131 *
p
 = (
high
 & 0x03) + 0xdc;

135 *
p
++ = (
UCh¨
 )(
code
 & 0xff);

136 *
p
++ = (
UCh¨
 )((
code
 & 0xff00) >> 8);

139 
	}
}

142 
	$utf16À_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

143 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
, UCh¨* 
fﬁd
)

145 c⁄° 
UCh¨
* 
p
 = *
µ
;

147 i‡(
	`ONIGENC_IS_ASCII_CODE
(*
p
) && *(p+1) == 0) {

148 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


149 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

150 i‡(*
p
 == 0x49) {

151 *
fﬁd
++ = 0x31;

152 *
fﬁd
 = 0x01;

153 (*
µ
) += 2;

159 *
fﬁd
++ = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

160 *
fﬁd
 = 0;

161 *
µ
 += 2;

165  
	`⁄igíc_unicode_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_UTF16_LE
, 
Êag
, 
µ
, 
íd
,

166 
fﬁd
);

167 
	}
}

171 
	$utf16À_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
,

172 c⁄° 
UCh¨
* 
íd
)

174 c⁄° 
UCh¨
* 
p
 = *
µ
;

176 (*
µ
Ë+
EncLí_UTF16
[*(
p
+1)];

178 i‡(*(
p
+1) == 0) {

179 
c
, 
v
;

181 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

182  
TRUE
;

185 
c
 = *
p
;

186 
v
 = 
	`ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE
(
c
,

187 (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

188 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

190 i‡(
c
 >= 0xaa && c <= 0xba)

191  
FALSE
;

193  
TRUE
;

195  (
v
 !0 ? 
TRUE
 : 
FALSE
);

198  
FALSE
;

199 
	}
}

202 
UCh¨
*

203 
	$utf16À_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

205 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

207 i‡((
s
 - 
°¨t
) % 2 == 1) {

208 
s
--;

211 i‡(
	`UTF16_IS_SURROGATE_SECOND
(*(
s
+1)Ë&& s > 
°¨t
 + 1)

212 
s
 -= 2;

214  (
UCh¨
* )
s
;

215 
	}
}

218 
	$utf16À_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

219 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

221  
	`⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
ONIG_ENCODING_UTF16_LE
,

222 
Êag
, 
p
, 
íd
, 
ôems
);

223 
	}
}

225 
OnigEncodögTy≥
 
	gOnigEncodögUTF16_LE
 = {

226 
utf16À_mbc_íc_Àn
,

230 
utf16À_is_mbc_√wlöe
,

231 
utf16À_mbc_to_code
,

232 
utf16À_code_to_mb˛í
,

233 
utf16À_code_to_mbc
,

234 
utf16À_mbc_ˇ£_fﬁd
,

235 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
,

236 
utf16À_gë_ˇ£_fﬁd_codes_by_°r
,

237 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
,

238 
⁄igíc_unicode_is_code_˘y≥
,

239 
⁄igíc_utf16_32_gë_˘y≥_code_ønge
,

240 
utf16À_À·_adju°_ch¨_hód
,

241 
⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
,

242 
NULL
,

243 
NULL
,

244 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/utf32_be.c

30 
	~"ªgíc.h
"

33 
	$utf32be_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
 
ARG_UNUSED
)

36 
	}
}

39 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

41  
	`⁄igíc_Àngth_check_is_vÆid_mbc_°rög
(
ONIG_ENCODING_UTF32_BE
, 
s
, 
íd
);

42 
	}
}

45 
	$utf32be_is_mbc_√wlöe
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

47 i‡(
p
 + 3 < 
íd
) {

48 i‡(*(
p
+3) == 0x0a && *(p+2) == 0 && *(p+1) == 0 && *p == 0)

50 #ifde‡
USE_UNICODE_ALL_LINE_TERMINATORS


52 #i‚de‡
USE_CRNL_AS_LINE_TERMINATOR


53 *(
p
+3) == 0x0d ||

55 *(
p
+3) == 0x85)

56 && *(
p
+2) == 0 && *(p+1) == 0 && *p == 0x00)

59 i‡(*(
p
+2) == 0x20 && (*(p+3) == 0x29 || *(p+3) == 0x28)

60 && *(
p
+1) == 0 && *p == 0)

65 
	}
}

67 
OnigCodePoöt


68 
	$utf32be_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

70  (
OnigCodePoöt
 )(((
p
[0] * 256 +Ö[1]) * 256 +Ö[2]) * 256 +Ö[3]);

71 
	}
}

74 
	$utf32be_code_to_mb˛í
(
OnigCodePoöt
 
code
 
ARG_UNUSED
)

77 
	}
}

80 
	$utf32be_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

82 
UCh¨
* 
p
 = 
buf
;

84 *
p
++ = (
UCh¨
 )((
code
 & 0xff000000) >>24);

85 *
p
++ = (
UCh¨
 )((
code
 & 0xff0000) >>16);

86 *
p
++ = (
UCh¨
 )((
code
 & 0xff00) >> 8);

87 *
p
++ = (
UCh¨
 ) (
code
 & 0xff);

89 
	}
}

92 
	$utf32be_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

93 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
, UCh¨* 
fﬁd
)

95 c⁄° 
UCh¨
* 
p
 = *
µ
;

97 i‡(
	`ONIGENC_IS_ASCII_CODE
(*(
p
+3)) && *(p+2) == 0 && *(p+1) == 0 && *p == 0) {

98 *
fﬁd
++ = 0;

99 *
fﬁd
++ = 0;

101 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


102 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

103 i‡(*(
p
+3) == 0x49) {

104 *
fﬁd
++ = 0x01;

105 *
fﬁd
 = 0x31;

106 (*
µ
) += 4;

112 *
fﬁd
++ = 0;

113 *
fﬁd
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*(
p
+3));

114 *
µ
 += 4;

118  
	`⁄igíc_unicode_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_UTF32_BE
, 
Êag
, 
µ
, 
íd
,

119 
fﬁd
);

120 
	}
}

124 
	$utf32be_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

126 c⁄° 
UCh¨
* 
p
 = *
µ
;

128 (*
µ
) += 4;

130 i‡(*(
p
+2) == 0 && *(p+1) == 0 && *p == 0) {

131 
c
, 
v
;

133 
p
 += 3;

134 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

135  
TRUE
;

138 
c
 = *
p
;

139 
v
 = 
	`ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE
(
c
,

140 (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

141 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

143 i‡(
c
 >= 0xaa && c <= 0xba)

144  
FALSE
;

146  
TRUE
;

148  (
v
 !0 ? 
TRUE
 : 
FALSE
);

151  
FALSE
;

152 
	}
}

155 
UCh¨
*

156 
	$utf32be_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

158 
ªm
;

160 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

162 
ªm
 = (
s
 - 
°¨t
) % 4;

163  (
UCh¨
* )(
s
 - 
ªm
);

164 
	}
}

167 
	$utf32be_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

168 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

170  
	`⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
ONIG_ENCODING_UTF32_BE
,

171 
Êag
, 
p
, 
íd
, 
ôems
);

172 
	}
}

174 
OnigEncodögTy≥
 
	gOnigEncodögUTF32_BE
 = {

175 
utf32be_mbc_íc_Àn
,

179 
utf32be_is_mbc_√wlöe
,

180 
utf32be_mbc_to_code
,

181 
utf32be_code_to_mb˛í
,

182 
utf32be_code_to_mbc
,

183 
utf32be_mbc_ˇ£_fﬁd
,

184 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
,

185 
utf32be_gë_ˇ£_fﬁd_codes_by_°r
,

186 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
,

187 
⁄igíc_unicode_is_code_˘y≥
,

188 
⁄igíc_utf16_32_gë_˘y≥_code_ønge
,

189 
utf32be_À·_adju°_ch¨_hód
,

190 
⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
,

191 
NULL
,

192 
NULL
,

193 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/utf32_le.c

30 
	~"ªgíc.h
"

33 
	$utf32À_mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
 
ARG_UNUSED
)

36 
	}
}

39 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
s
, c⁄° UCh¨* 
íd
)

41  
	`⁄igíc_Àngth_check_is_vÆid_mbc_°rög
(
ONIG_ENCODING_UTF32_LE
, 
s
, 
íd
);

42 
	}
}

45 
	$utf32À_is_mbc_√wlöe
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

47 i‡(
p
 + 3 < 
íd
) {

48 i‡(*
p
 == 0x0a && *(p+1) == 0 && *(p+2) == 0 && *(p+3) == 0)

50 #ifde‡
USE_UNICODE_ALL_LINE_TERMINATORS


52 #i‚de‡
USE_CRNL_AS_LINE_TERMINATOR


53 *
p
 == 0x0d ||

55 *
p
 == 0x85)

56 && *(
p
+1) == 0x00 && (p+2) == 0x00 && *(p+3) == 0x00)

59 i‡(*(
p
+1) == 0x20 && (*p == 0x29 || *p == 0x28)

60 && *(
p
+2) == 0x00 && *(p+3) == 0x00)

65 
	}
}

67 
OnigCodePoöt


68 
	$utf32À_mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
 
ARG_UNUSED
)

70  (
OnigCodePoöt
 )(((
p
[3] * 256 +Ö[2]) * 256 +Ö[1]) * 256 +Ö[0]);

71 
	}
}

74 
	$utf32À_code_to_mb˛í
(
OnigCodePoöt
 
code
 
ARG_UNUSED
)

77 
	}
}

80 
	$utf32À_code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

82 
UCh¨
* 
p
 = 
buf
;

84 *
p
++ = (
UCh¨
 ) (
code
 & 0xff);

85 *
p
++ = (
UCh¨
 )((
code
 & 0xff00) >> 8);

86 *
p
++ = (
UCh¨
 )((
code
 & 0xff0000) >>16);

87 *
p
++ = (
UCh¨
 )((
code
 & 0xff000000) >>24);

89 
	}
}

92 
	$utf32À_mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
,

93 c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
, UCh¨* 
fﬁd
)

95 c⁄° 
UCh¨
* 
p
 = *
µ
;

97 i‡(
	`ONIGENC_IS_ASCII_CODE
(*
p
) && *(p+1) == 0 && *(p+2) == 0 && *(p+3) == 0) {

98 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


99 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

100 i‡(*
p
 == 0x49) {

101 *
fﬁd
++ = 0x31;

102 *
fﬁd
++ = 0x01;

107 *
fﬁd
++ = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

108 *
fﬁd
++ = 0;

109 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


113 *
fﬁd
++ = 0;

114 *
fﬁd
 = 0;

115 *
µ
 += 4;

119  
	`⁄igíc_unicode_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_UTF32_LE
, 
Êag
, 
µ
, 
íd
,

120 
fﬁd
);

121 
	}
}

125 
	$utf32À_is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

127 c⁄° 
UCh¨
* 
p
 = *
µ
;

129 (*
µ
) += 4;

131 i‡(*(
p
+1) == 0 && *(p+2) == 0 && *(p+3) == 0) {

132 
c
, 
v
;

134 i‡(*
p
 =0xd‡&& (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

135  
TRUE
;

138 
c
 = *
p
;

139 
v
 = 
	`ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE
(
c
,

140 (
BIT_CTYPE_UPPER
 | 
BIT_CTYPE_LOWER
));

141 i‡((
v
 | 
BIT_CTYPE_LOWER
) != 0) {

143 i‡(
c
 >= 0xaa && c <= 0xba)

144  
FALSE
;

146  
TRUE
;

148  (
v
 !0 ? 
TRUE
 : 
FALSE
);

151  
FALSE
;

152 
	}
}

155 
UCh¨
*

156 
	$utf32À_À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

158 
ªm
;

160 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

162 
ªm
 = (
s
 - 
°¨t
) % 4;

163  (
UCh¨
* )(
s
 - 
ªm
);

164 
	}
}

167 
	$utf32À_gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

168 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

170  
	`⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
ONIG_ENCODING_UTF32_LE
,

171 
Êag
, 
p
, 
íd
, 
ôems
);

172 
	}
}

174 
OnigEncodögTy≥
 
	gOnigEncodögUTF32_LE
 = {

175 
utf32À_mbc_íc_Àn
,

179 
utf32À_is_mbc_√wlöe
,

180 
utf32À_mbc_to_code
,

181 
utf32À_code_to_mb˛í
,

182 
utf32À_code_to_mbc
,

183 
utf32À_mbc_ˇ£_fﬁd
,

184 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
,

185 
utf32À_gë_ˇ£_fﬁd_codes_by_°r
,

186 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
,

187 
⁄igíc_unicode_is_code_˘y≥
,

188 
⁄igíc_utf16_32_gë_˘y≥_code_ønge
,

189 
utf32À_À·_adju°_ch¨_hód
,

190 
⁄igíc_Æways_Ál£_is_Ælowed_ªvî£_m©ch
,

191 
NULL
,

192 
NULL
,

193 
is_vÆid_mbc_°rög


	@modules/oniguruma/src/utf8.c

30 
	~"ªgíc.h
"

34 #ifde‡
USE_INVALID_CODE_SCHEME


36 
	#INVALID_CODE_FE
 0xffffff„

	)

37 
	#INVALID_CODE_FF
 0xffffffff

	)

38 
	#VALID_CODE_LIMIT
 0x7fffffff

	)

41 
	#utf8_i¶ód
(
c
Ë((
UCh¨
 )((cË& 0xc0Ë!0x80)

	)

42 
	#utf8_i°aû
(
c
Ë((
UCh¨
 )((cË& 0xc0Ë=0x80)

	)

44 c⁄° 
	gEncLí_UTF8
[] = {

64 
	$mbc_íc_Àn
(c⁄° 
UCh¨
* 
p
)

66  
EncLí_UTF8
[*
p
];

67 
	}
}

70 
	$is_vÆid_mbc_°rög
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

72 
i
, 
Àn
;

74 
p
 < 
íd
) {

75 i‡(! 
	`utf8_i¶ód
(*
p
))

76  
FALSE
;

78 
Àn
 = 
	`mbc_íc_Àn
(
p
++);

79 i‡(
Àn
 > 1) {

80 
i
 = 1; i < 
Àn
; i++) {

81 i‡(
p
 =
íd
)

82  
FALSE
;

84 i‡(! 
	`utf8_i°aû
(*
p
++))

85  
FALSE
;

90  
TRUE
;

91 
	}
}

94 
	$is_mbc_√wlöe
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

96 i‡(
p
 < 
íd
) {

97 i‡(*
p
 == 0x0a)  1;

99 #ifde‡
USE_UNICODE_ALL_LINE_TERMINATORS


100 #i‚de‡
USE_CRNL_AS_LINE_TERMINATOR


101 i‡(*
p
 == 0x0d)  1;

103 i‡(
p
 + 1 < 
íd
) {

104 i‡(*(
p
+1) == 0x85 && *p == 0xc2)

106 i‡(
p
 + 2 < 
íd
) {

107 i‡((*(
p
+2) == 0xa8 || *(p+2) == 0xa9)

108 && *(
p
+1) == 0x80 && *p == 0xe2)

116 
	}
}

118 
OnigCodePoöt


119 
	$mbc_to_code
(c⁄° 
UCh¨
* 
p
, c⁄° UCh¨* 
íd
)

121 
c
, 
Àn
;

122 
OnigCodePoöt
 
n
;

124 
Àn
 = 
	`mbc_íc_Àn
(
p
);

125 i‡(
Àn
 > 
íd
 - 
p
)Üen =Énd -Ö;

127 
c
 = *
p
++;

128 i‡(
Àn
 > 1) {

129 
Àn
--;

130 
n
 = 
c
 & ((1 << (6 - 
Àn
)) - 1);

131 
Àn
--) {

132 
c
 = *
p
++;

133 
n
 = (¿<< 6Ë| (
c
 & ((1 << 6) - 1));

135  
n
;

138 #ifde‡
USE_INVALID_CODE_SCHEME


139 i‡(
c
 > 0xfd) {

140  ((
c
 =0x„Ë? 
INVALID_CODE_FE
 : 
INVALID_CODE_FF
);

143  (
OnigCodePoöt
 )
c
;

145 
	}
}

148 
	$code_to_mb˛í
(
OnigCodePoöt
 
code
)

150 i‡((
code
 & 0xffffff80) == 0)  1;

151 i‡((
code
 & 0xfffff800) == 0)  2;

152 i‡((
code
 & 0xffff0000) == 0)  3;

153 i‡((
code
 & 0xffe00000) == 0)  4;

154 i‡((
code
 & 0xfc000000) == 0)  5;

155 i‡((
code
 & 0x80000000) == 0)  6;

156 #ifde‡
USE_INVALID_CODE_SCHEME


157 i‡(
code
 =
INVALID_CODE_FE
)  1;

158 i‡(
code
 =
INVALID_CODE_FF
)  1;

161  
ONIGERR_INVALID_CODE_POINT_VALUE
;

162 
	}
}

165 
	$code_to_mbc
(
OnigCodePoöt
 
code
, 
UCh¨
 *
buf
)

167 
	#UTF8_TRAILS
(
code
, 
shi·
Ë(
UCh¨
 )((((codeË>> (shi·)Ë& 0x3fË| 0x80)

	)

168 
	#UTF8_TRAIL0
(
code
Ë(
UCh¨
 )(((codeË& 0x3fË| 0x80)

	)

170 i‡((
code
 & 0xffffff80) == 0) {

171 *
buf
 = (
UCh¨
 )
code
;

175 
UCh¨
 *
p
 = 
buf
;

177 i‡((
code
 & 0xfffff800) == 0) {

178 *
p
++ = (
UCh¨
 )(((
code
>>6)& 0x1f) | 0xc0);

180 i‡((
code
 & 0xffff0000) == 0) {

181 *
p
++ = (
UCh¨
 )(((
code
>>12) & 0x0f) | 0xe0);

182 *
p
++ = 
	`UTF8_TRAILS
(
code
, 6);

184 i‡((
code
 & 0xffe00000) == 0) {

185 *
p
++ = (
UCh¨
 )(((
code
>>18) & 0x07) | 0xf0);

186 *
p
++ = 
	`UTF8_TRAILS
(
code
, 12);

187 *
p
++ = 
	`UTF8_TRAILS
(
code
, 6);

189 i‡((
code
 & 0xfc000000) == 0) {

190 *
p
++ = (
UCh¨
 )(((
code
>>24) & 0x03) | 0xf8);

191 *
p
++ = 
	`UTF8_TRAILS
(
code
, 18);

192 *
p
++ = 
	`UTF8_TRAILS
(
code
, 12);

193 *
p
++ = 
	`UTF8_TRAILS
(
code
, 6);

195 i‡((
code
 & 0x80000000) == 0) {

196 *
p
++ = (
UCh¨
 )(((
code
>>30) & 0x01) | 0xfc);

197 *
p
++ = 
	`UTF8_TRAILS
(
code
, 24);

198 *
p
++ = 
	`UTF8_TRAILS
(
code
, 18);

199 *
p
++ = 
	`UTF8_TRAILS
(
code
, 12);

200 *
p
++ = 
	`UTF8_TRAILS
(
code
, 6);

202 #ifde‡
USE_INVALID_CODE_SCHEME


203 i‡(
code
 =
INVALID_CODE_FE
) {

204 *
p
 = 0xfe;

207 i‡(
code
 =
INVALID_CODE_FF
) {

208 *
p
 = 0xff;

213  
ONIGERR_TOO_BIG_WIDE_CHAR_VALUE
;

216 *
p
++ = 
	`UTF8_TRAIL0
(
code
);

217  
p
 - 
buf
;

219 
	}
}

222 
	$mbc_ˇ£_fﬁd
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
,

223 c⁄° 
UCh¨
* 
íd
, UCh¨* 
fﬁd
)

225 c⁄° 
UCh¨
* 
p
 = *
µ
;

227 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

228 #ifde‡
USE_UNICODE_CASE_FOLD_TURKISH_AZERI


229 i‡((
Êag
 & 
ONIGENC_CASE_FOLD_TURKISH_AZERI
) != 0) {

230 i‡(*
p
 == 0x49) {

231 *
fﬁd
++ = 0xc4;

232 *
fﬁd
 = 0xb1;

233 (*
µ
)++;

239 *
fﬁd
 = 
	`ONIGENC_ASCII_CODE_TO_LOWER_CASE
(*
p
);

240 (*
µ
)++;

244  
	`⁄igíc_unicode_mbc_ˇ£_fﬁd
(
ONIG_ENCODING_UTF8
, 
Êag
,

245 
µ
, 
íd
, 
fﬁd
);

247 
	}
}

251 
	$is_mbc_ambiguous
(
OnigCa£FﬁdTy≥
 
Êag
, c⁄° 
UCh¨
** 
µ
, c⁄° UCh¨* 
íd
)

253 c⁄° 
UCh¨
* 
p
 = *
µ
;

255 i‡(
	`ONIGENC_IS_MBC_ASCII
(
p
)) {

256 (*
µ
)++;

257  
	`ONIGENC_IS_ASCII_CODE_CASE_AMBIG
(*
p
);

260 (*
µ
Ë+
	`í˛í
(
ONIG_ENCODING_UTF8
, 
p
);

262 i‡(*
p
 == 0xc3) {

263 
c
 = *(
p
 + 1);

264 i‡(
c
 >= 0x80) {

265 i‡(
c
 <(
UCh¨
 )0x9e) {

266 i‡(
c
 =(
UCh¨
 )0x97Ë 
FALSE
;

267  
TRUE
;

269 i‡(
c
 >(
UCh¨
 )0xa0 && c <= (UChar )0xbe) {

270 i‡(
c
 =(
UCh¨
 )'\267'Ë 
FALSE
;

271  
TRUE
;

273 i‡(
c
 =(
UCh¨
 )0x9f &&

274 (
Êag
 & 
INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR
) != 0) {

275  
TRUE
;

281  
FALSE
;

282 
	}
}

287 
	$gë_˘y≥_code_ønge
(
OnigCty≥
 
˘y≥
, 
OnigCodePoöt
 *
sb_out
,

288 c⁄° 
OnigCodePoöt
* 
ønges
[])

290 *
sb_out
 = 0x80;

291  
	`⁄igíc_unicode_˘y≥_code_ønge
(
˘y≥
, 
ønges
);

292 
	}
}

295 
UCh¨
*

296 
	$À·_adju°_ch¨_hód
(c⁄° 
UCh¨
* 
°¨t
, c⁄° UCh¨* 
s
)

298 c⁄° 
UCh¨
 *
p
;

300 i‡(
s
 <
°¨t
Ë (
UCh¨
* )s;

301 
p
 = 
s
;

303 !
	`utf8_i¶ód
(*
p
Ë&&Ö > 
°¨t
)Ö--;

304  (
UCh¨
* )
p
;

305 
	}
}

308 
	$gë_ˇ£_fﬁd_codes_by_°r
(
OnigCa£FﬁdTy≥
 
Êag
,

309 c⁄° 
OnigUCh¨
* 
p
, c⁄° OnigUCh¨* 
íd
, 
OnigCa£FﬁdCodeIãm
 
ôems
[])

311  
	`⁄igíc_unicode_gë_ˇ£_fﬁd_codes_by_°r
(
ONIG_ENCODING_UTF8
,

312 
Êag
, 
p
, 
íd
, 
ôems
);

313 
	}
}

315 
OnigEncodögTy≥
 
	gOnigEncodögUTF8
 = {

316 
mbc_íc_Àn
,

320 
is_mbc_√wlöe
,

321 
mbc_to_code
,

322 
code_to_mb˛í
,

323 
code_to_mbc
,

324 
mbc_ˇ£_fﬁd
,

325 
⁄igíc_unicode_≠∂y_Æl_ˇ£_fﬁd
,

326 
gë_ˇ£_fﬁd_codes_by_°r
,

327 
⁄igíc_unicode_¥›îty_«me_to_˘y≥
,

328 
⁄igíc_unicode_is_code_˘y≥
,

329 
gë_˘y≥_code_ønge
,

330 
À·_adju°_ch¨_hód
,

331 
⁄igíc_Æways_åue_is_Ælowed_ªvî£_m©ch
,

332 
NULL
,

333 
NULL
,

334 
is_vÆid_mbc_°rög


	@modules/oniguruma/test/testc.c

4 
	~"c⁄fig.h
"

5 #ifde‡
ONIG_ESCAPE_UCHAR_COLLISION


6 #unde‡
ONIG_ESCAPE_UCHAR_COLLISION


8 
	~<°dio.h
>

10 #ifde‡
POSIX_TEST


11 
	~"⁄igposix.h
"

13 
	~"⁄iguruma.h
"

16 #ifde‡
HAVE_STRING_H


17 
	~<°rög.h
>

19 
	~<°rögs.h
>

22 
	#SLEN
(
s
Ë
	`°æí
(s)

	)

24 
	gnsucc
 = 0;

25 
	gnÁû
 = 0;

26 
	g√º‹
 = 0;

28 
FILE
* 
	gîr_fûe
;

30 #i‚de‡
POSIX_TEST


31 
OnigRegi⁄
* 
	gªgi⁄
;

34 
	$xx
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
, 
nŸ
)

36 
r
;

38 #ifde‡
POSIX_TEST


39 
ªgex_t
 
ªg
;

40 
buf
[200];

41 
ªgm©ch_t
 
pm©ch
[25];

43 
r
 = 
	`ªgcomp
(&
ªg
, 
∑âîn
, 
REG_EXTENDED
 | 
REG_NEWLINE
);

44 i‡(
r
) {

45 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

46 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

47 
√º‹
++;

51 
r
 = 
	`ªgexec
(&
ªg
, 
°r
,Ñeg.
ª_nsub
 + 1, 
pm©ch
, 0);

52 i‡(
r
 !0 &&Ñ !
REG_NOMATCH
) {

53 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

54 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

55 
√º‹
++;

59 i‡(
r
 =
REG_NOMATCH
) {

60 i‡(
nŸ
) {

61 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

62 
nsucc
++;

65 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
∑âîn
, 
°r
);

66 
nÁû
++;

70 i‡(
nŸ
) {

71 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

72 
nÁû
++;

75 i‡(
pm©ch
[
mem
].
rm_so
 =
‰om
 &&Öm©ch[mem].
rm_eo
 =
to
) {

76 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
∑âîn
, 
°r
);

77 
nsucc
++;

80 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
∑âîn
, 
°r
,

81 
‰om
, 
to
, 
pm©ch
[
mem
].
rm_so
,Öm©ch[mem].
rm_eo
);

82 
nÁû
++;

86 
	`ªg‰ì
(&
ªg
);

89 
ªgex_t
* 
ªg
;

90 
OnigEº‹Info
 
eöfo
;

92 
r
 = 
	`⁄ig_√w
(&
ªg
, (
UCh¨
* )
∑âîn
, (UCh¨* )’©ã∫ + 
	`SLEN
(pattern)),

93 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_EUC_JP
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

94 i‡(
r
) {

95 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

96 
	`⁄ig_îr‹_code_to_°r
((
UCh¨
* )
s
, 
r
, &
eöfo
);

97 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

98 
√º‹
++;

102 
r
 = 
	`⁄ig_£¨ch
(
ªg
, (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`SLEN
(str)),

103 (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`SLEN
(str)),

104 
ªgi⁄
, 
ONIG_OPTION_NONE
);

105 i‡(
r
 < 
ONIG_MISMATCH
) {

106 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

107 
	`⁄ig_îr‹_code_to_°r
((
UCh¨
* )
s
, 
r
);

108 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

109 
√º‹
++;

113 i‡(
r
 =
ONIG_MISMATCH
) {

114 i‡(
nŸ
) {

115 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

116 
nsucc
++;

119 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
∑âîn
, 
°r
);

120 
nÁû
++;

124 i‡(
nŸ
) {

125 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

126 
nÁû
++;

129 i‡(
ªgi⁄
->
beg
[
mem
] =
‰om
 &&Ñegi⁄->
íd
[mem] =
to
) {

130 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
∑âîn
, 
°r
);

131 
nsucc
++;

134 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
∑âîn
, 
°r
,

135 
‰om
, 
to
, 
ªgi⁄
->
beg
[
mem
],Ñegi⁄->
íd
[mem]);

136 
nÁû
++;

140 
	`⁄ig_‰ì
(
ªg
);

142 
	}
}

144 
	$x2
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
)

146 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 0, 0);

147 
	}
}

149 
	$x3
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
)

151 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 
mem
, 0);

152 
	}
}

154 
	$n
(* 
∑âîn
, * 
°r
)

156 
	`xx
(
∑âîn
, 
°r
, 0, 0, 0, 1);

157 
	}
}

159 
	$maö
(
¨gc
, * 
¨gv
[])

161 #i‚de‡
POSIX_TEST


162 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_EUC_JP
 };

164 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

167 
îr_fûe
 = 
°dout
;

169 #ifde‡
POSIX_TEST


170 
	`ªg_£t_ícodög
(
REG_POSIX_ENCODING_EUC_JP
);

172 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

175 
	`x2
("", "", 0, 0);

176 
	`x2
("^", "", 0, 0);

177 
	`x2
("$", "", 0, 0);

178 
	`x2
("\\G", "", 0, 0);

179 
	`x2
("\\A", "", 0, 0);

180 
	`x2
("\\Z", "", 0, 0);

181 
	`x2
("\\z", "", 0, 0);

182 
	`x2
("^$", "", 0, 0);

183 
	`x2
("\\ca", "\001", 0, 1);

184 
	`x2
("\\C-b", "\002", 0, 1);

185 
	`x2
("\\c\\\\", "\034", 0, 1);

186 
	`x2
("q[\\c\\\\]", "q\034", 0, 2);

187 
	`x2
("", "a", 0, 0);

188 
	`x2
("a", "a", 0, 1);

189 
	`x2
("\\x61", "a", 0, 1);

190 
	`x2
("aa", "aa", 0, 2);

191 
	`x2
("aaa", "aaa", 0, 3);

192 
	`x2
("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 0, 35);

193 
	`x2
("ab", "ab", 0, 2);

194 
	`x2
("b", "ab", 1, 2);

195 
	`x2
("bc", "abc", 1, 3);

196 
	`x2
("(?i:#RET#)", "#INS##RET#", 5, 10);

197 
	`x2
("\\17", "\017", 0, 1);

198 
	`x2
("\\x1f", "\x1f", 0, 1);

199 
	`x2
("a(?#....\\\\JJJJ)b", "ab", 0, 2);

200 
	`x2
("(?x) G (o O(?-x)oO) g L", "GoOoOgLe", 0, 7);

201 
	`x2
(".", "a", 0, 1);

202 
	`n
(".", "");

203 
	`x2
("..", "ab", 0, 2);

204 
	`x2
("\\w", "e", 0, 1);

205 
	`n
("\\W", "e");

206 
	`x2
("\\s", " ", 0, 1);

207 
	`x2
("\\S", "b", 0, 1);

208 
	`x2
("\\d", "4", 0, 1);

209 
	`n
("\\D", "4");

210 
	`x2
("\\b", "z ", 0, 0);

211 
	`x2
("\\b", " z", 1, 1);

212 
	`x2
("\\B", "zz ", 1, 1);

213 
	`x2
("\\B", "z ", 2, 2);

214 
	`x2
("\\B", " z", 0, 0);

215 
	`x2
("[ab]", "b", 0, 1);

216 
	`n
("[ab]", "c");

217 
	`x2
("[a-z]", "t", 0, 1);

218 
	`n
("[^a]", "a");

219 
	`x2
("[^a]", "\n", 0, 1);

220 
	`x2
("[]]", "]", 0, 1);

221 
	`n
("[^]]", "]");

222 
	`x2
("[\\^]+", "0^^1", 1, 3);

223 
	`x2
("[b-]", "b", 0, 1);

224 
	`x2
("[b-]", "-", 0, 1);

225 
	`x2
("[\\w]", "z", 0, 1);

226 
	`n
("[\\w]", " ");

227 
	`x2
("[\\W]", "b$", 1, 2);

228 
	`x2
("[\\d]", "5", 0, 1);

229 
	`n
("[\\d]", "e");

230 
	`x2
("[\\D]", "t", 0, 1);

231 
	`n
("[\\D]", "3");

232 
	`x2
("[\\s]", " ", 0, 1);

233 
	`n
("[\\s]", "a");

234 
	`x2
("[\\S]", "b", 0, 1);

235 
	`n
("[\\S]", " ");

236 
	`x2
("[\\w\\d]", "2", 0, 1);

237 
	`n
("[\\w\\d]", " ");

238 
	`x2
("[[:upper:]]", "B", 0, 1);

239 
	`x2
("[*[:xdigit:]+]", "+", 0, 1);

240 
	`x2
("[*[:xdigit:]+]", "GHIKK-9+*", 6, 7);

241 
	`x2
("[*[:xdigit:]+]", "-@^+", 3, 4);

242 
	`n
("[[:upper]]", "A");

243 
	`x2
("[[:upper]]", ":", 0, 1);

244 
	`x2
("[\\044-\\047]", "\046", 0, 1);

245 
	`x2
("[\\x5a-\\x5c]", "\x5b", 0, 1);

246 
	`x2
("[\\x6A-\\x6D]", "\x6c", 0, 1);

247 
	`n
("[\\x6A-\\x6D]", "\x6E");

248 
	`n
("^[0-9A-F]+ 0+ UNDEF ", "75F 00000000 SECT14AÇotype () External | _rb_apply");

249 
	`x2
("[\\[]", "[", 0, 1);

250 
	`x2
("[\\]]", "]", 0, 1);

251 
	`x2
("[&]", "&", 0, 1);

252 
	`x2
("[[ab]]", "b", 0, 1);

253 
	`x2
("[[ab]c]", "c", 0, 1);

254 
	`n
("[[^a]]", "a");

255 
	`n
("[^[a]]", "a");

256 
	`x2
("[[ab]&&bc]", "b", 0, 1);

257 
	`n
("[[ab]&&bc]", "a");

258 
	`n
("[[ab]&&bc]", "c");

259 
	`x2
("[a-z&&b-y&&c-x]", "w", 0, 1);

260 
	`n
("[^a-z&&b-y&&c-x]", "w");

261 
	`x2
("[[^a&&a]&&a-z]", "b", 0, 1);

262 
	`n
("[[^a&&a]&&a-z]", "a");

263 
	`x2
("[[^a-z&&bcdef]&&[^c-g]]", "h", 0, 1);

264 
	`n
("[[^a-z&&bcdef]&&[^c-g]]", "c");

265 
	`x2
("[^[^abc]&&[^cde]]", "c", 0, 1);

266 
	`x2
("[^[^abc]&&[^cde]]", "e", 0, 1);

267 
	`n
("[^[^abc]&&[^cde]]", "f");

268 
	`x2
("[a-&&-a]", "-", 0, 1);

269 
	`n
("[a\\-&&\\-a]", "&");

270 
	`n
("\\wabc", "ábc");

271 
	`x2
("a\\Wbc", "a bc", 0, 4);

272 
	`x2
("a.b.c", "aabbc", 0, 5);

273 
	`x2
(".\\wb\\W..c", "abb bcc", 0, 7);

274 
	`x2
("\\s\\wzzz", " zzzz", 0, 5);

275 
	`x2
("aa.b", "aabb", 0, 4);

276 
	`n
(".a", "ab");

277 
	`x2
(".a", "aa", 0, 2);

278 
	`x2
("^a", "a", 0, 1);

279 
	`x2
("^a$", "a", 0, 1);

280 
	`x2
("^\\w$", "a", 0, 1);

281 
	`n
("^\\w$", " ");

282 
	`x2
("^\\wab$", "zab", 0, 3);

283 
	`x2
("^\\wabcdef$", "zabcdef", 0, 7);

284 
	`x2
("^\\w...def$", "zabcdef", 0, 7);

285 
	`x2
("\\w\\w\\s\\Waaa\\d", "aaáaa4", 0, 8);

286 
	`x2
("\\A\\Z", "", 0, 0);

287 
	`x2
("\\Axyz", "xyz", 0, 3);

288 
	`x2
("xyz\\Z", "xyz", 0, 3);

289 
	`x2
("xyz\\z", "xyz", 0, 3);

290 
	`x2
("a\\Z", "a", 0, 1);

291 
	`x2
("\\Gaz", "az", 0, 2);

292 
	`n
("\\Gz", "bza");

293 
	`n
("az\\G", "az");

294 
	`n
("az\\A", "az");

295 
	`n
("a\\Az", "az");

296 
	`x2
("\\^\\$", "^$", 0, 2);

297 
	`x2
("^x?y", "xy", 0, 2);

298 
	`x2
("^(x?y)", "xy", 0, 2);

299 
	`x2
("\\w", "_", 0, 1);

300 
	`n
("\\W", "_");

301 
	`x2
("(?=z)z", "z", 0, 1);

302 
	`n
("(?=z).", "a");

303 
	`x2
("(?!z)a", "a", 0, 1);

304 
	`n
("(?!z)a", "z");

305 
	`x2
("(?i:a)", "a", 0, 1);

306 
	`x2
("(?i:a)", "A", 0, 1);

307 
	`x2
("(?i:A)", "a", 0, 1);

308 
	`n
("(?i:A)", "b");

309 
	`x2
("(?i:[A-Z])", "a", 0, 1);

310 
	`x2
("(?i:[f-m])", "H", 0, 1);

311 
	`x2
("(?i:[f-m])", "h", 0, 1);

312 
	`n
("(?i:[f-m])", "e");

313 
	`x2
("(?i:[A-c])", "D", 0, 1);

314 
	`n
("(?i:[^a-z])", "A");

315 
	`n
("(?i:[^a-z])", "a");

316 
	`x2
("(?i:[!-k])", "Z", 0, 1);

317 
	`x2
("(?i:[!-k])", "7", 0, 1);

318 
	`x2
("(?i:[T-}])", "b", 0, 1);

319 
	`x2
("(?i:[T-}])", "{", 0, 1);

320 
	`x2
("(?i:\\?a)", "?A", 0, 2);

321 
	`x2
("(?i:\\*A)", "*a", 0, 2);

322 
	`n
(".", "\n");

323 
	`x2
("(?m:.)", "\n", 0, 1);

324 
	`x2
("(?m:a.)", "a\n", 0, 2);

325 
	`x2
("(?m:.b)", "a\nb", 1, 3);

326 
	`x2
(".*abc", "dddabdd\nddabc", 8, 13);

327 
	`x2
("(?m:.*abc)", "dddabddabc", 0, 10);

328 
	`n
("(?i)(?-i)a", "A");

329 
	`n
("(?i)(?-i:a)", "A");

330 
	`x2
("a?", "", 0, 0);

331 
	`x2
("a?", "b", 0, 0);

332 
	`x2
("a?", "a", 0, 1);

333 
	`x2
("a*", "", 0, 0);

334 
	`x2
("a*", "a", 0, 1);

335 
	`x2
("a*", "aaa", 0, 3);

336 
	`x2
("a*", "baaaa", 0, 0);

337 
	`n
("a+", "");

338 
	`x2
("a+", "a", 0, 1);

339 
	`x2
("a+", "aaaa", 0, 4);

340 
	`x2
("a+", "aabbb", 0, 2);

341 
	`x2
("a+", "baaaa", 1, 5);

342 
	`x2
(".?", "", 0, 0);

343 
	`x2
(".?", "f", 0, 1);

344 
	`x2
(".?", "\n", 0, 0);

345 
	`x2
(".*", "", 0, 0);

346 
	`x2
(".*", "abcde", 0, 5);

347 
	`x2
(".+", "z", 0, 1);

348 
	`x2
(".+", "zdswer\n", 0, 6);

349 
	`x2
("(.*)a\\1f", "babfbac", 0, 4);

350 
	`x2
("(.*)a\\1f", "bacbabf", 3, 7);

351 
	`x2
("((.*)a\\2f)", "bacbabf", 3, 7);

352 
	`x2
("(.*)a\\1f", "baczzzzzz\nbazz\nzzzzbabf", 19, 23);

353 
	`x2
("a|b", "a", 0, 1);

354 
	`x2
("a|b", "b", 0, 1);

355 
	`x2
("|a", "a", 0, 0);

356 
	`x2
("(|a)", "a", 0, 0);

357 
	`x2
("ab|bc", "ab", 0, 2);

358 
	`x2
("ab|bc", "bc", 0, 2);

359 
	`x2
("z(?:ab|bc)", "zbc", 0, 3);

360 
	`x2
("a(?:ab|bc)c", "aabc", 0, 4);

361 
	`x2
("ab|(?:ac|az)", "az", 0, 2);

362 
	`x2
("a|b|c", "dc", 1, 2);

363 
	`x2
("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "pqr", 0, 2);

364 
	`n
("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "mn");

365 
	`x2
("a|^z", "ba", 1, 2);

366 
	`x2
("a|^z", "za", 0, 1);

367 
	`x2
("a|\\Gz", "bza", 2, 3);

368 
	`x2
("a|\\Gz", "za", 0, 1);

369 
	`x2
("a|\\Az", "bza", 2, 3);

370 
	`x2
("a|\\Az", "za", 0, 1);

371 
	`x2
("a|b\\Z", "ba", 1, 2);

372 
	`x2
("a|b\\Z", "b", 0, 1);

373 
	`x2
("a|b\\z", "ba", 1, 2);

374 
	`x2
("a|b\\z", "b", 0, 1);

375 
	`x2
("\\w|\\s", " ", 0, 1);

376 
	`n
("\\w|\\w", " ");

377 
	`x2
("\\w|%", "%", 0, 1);

378 
	`x2
("\\w|[&$]", "&", 0, 1);

379 
	`x2
("[b-d]|[^e-z]", "a", 0, 1);

380 
	`x2
("(?:a|[c-f])|bz", "dz", 0, 1);

381 
	`x2
("(?:a|[c-f])|bz", "bz", 0, 2);

382 
	`x2
("abc|(?=zz)..f", "zzf", 0, 3);

383 
	`x2
("abc|(?!zz)..f", "abf", 0, 3);

384 
	`x2
("(?=za)..a|(?=zz)..a", "zza", 0, 3);

385 
	`n
("(?>a|abd)c", "abdc");

386 
	`x2
("(?>abd|a)c", "abdc", 0, 4);

387 
	`x2
("a?|b", "a", 0, 1);

388 
	`x2
("a?|b", "b", 0, 0);

389 
	`x2
("a?|b", "", 0, 0);

390 
	`x2
("a*|b", "aa", 0, 2);

391 
	`x2
("a*|b*", "ba", 0, 0);

392 
	`x2
("a*|b*", "ab", 0, 1);

393 
	`x2
("a+|b*", "", 0, 0);

394 
	`x2
("a+|b*", "bbb", 0, 3);

395 
	`x2
("a+|b*", "abbb", 0, 1);

396 
	`n
("a+|b+", "");

397 
	`x2
("(a|b)?", "b", 0, 1);

398 
	`x2
("(a|b)*", "ba", 0, 2);

399 
	`x2
("(a|b)+", "bab", 0, 3);

400 
	`x2
("(ab|ca)+", "caabbc", 0, 4);

401 
	`x2
("(ab|ca)+", "aabca", 1, 5);

402 
	`x2
("(ab|ca)+", "abzca", 0, 2);

403 
	`x2
("(a|bab)+", "ababa", 0, 5);

404 
	`x2
("(a|bab)+", "ba", 1, 2);

405 
	`x2
("(a|bab)+", "baaaba", 1, 4);

406 
	`x2
("(?:a|b)(?:a|b)", "ab", 0, 2);

407 
	`x2
("(?:a*|b*)(?:a*|b*)", "aaabbb", 0, 3);

408 
	`x2
("(?:a*|b*)(?:a+|b+)", "aaabbb", 0, 6);

409 
	`x2
("(?:a+|b+){2}", "aaabbb", 0, 6);

410 
	`x2
("h{0,}", "hhhh", 0, 4);

411 
	`x2
("(?:a+|b+){1,2}", "aaabbb", 0, 6);

412 
	`n
("ax{2}*a", "0axxxa1");

413 
	`n
("a.{0,2}a", "0aXXXa0");

414 
	`n
("a.{0,2}?a", "0aXXXa0");

415 
	`n
("a.{0,2}?a", "0aXXXXa0");

416 
	`x2
("^a{2,}?a$", "aaa", 0, 3);

417 
	`x2
("^[a-z]{2,}?$", "aaa", 0, 3);

418 
	`x2
("(?:a+|\\Ab*)cc", "cc", 0, 2);

419 
	`n
("(?:a+|\\Ab*)cc", "abcc");

420 
	`x2
("(?:^a+|b+)*c", "aabbbabc", 6, 8);

421 
	`x2
("(?:^a+|b+)*c", "aabbbbc", 0, 7);

422 
	`x2
("a|(?i)c", "C", 0, 1);

423 
	`x2
("(?i)c|a", "C", 0, 1);

424 
	`x2
("(?i)c|a", "A", 0, 1);

425 
	`x2
("(?i:c)|a", "C", 0, 1);

426 
	`n
("(?i:c)|a", "A");

427 
	`x2
("[abc]?", "abc", 0, 1);

428 
	`x2
("[abc]*", "abc", 0, 3);

429 
	`x2
("[^abc]*", "abc", 0, 0);

430 
	`n
("[^abc]+", "abc");

431 
	`x2
("a?\?", "aaa", 0, 0);

432 
	`x2
("ba?\?b", "bab", 0, 3);

433 
	`x2
("a*?", "aaa", 0, 0);

434 
	`x2
("ba*?", "baa", 0, 1);

435 
	`x2
("ba*?b", "baab", 0, 4);

436 
	`x2
("a+?", "aaa", 0, 1);

437 
	`x2
("ba+?", "baa", 0, 2);

438 
	`x2
("ba+?b", "baab", 0, 4);

439 
	`x2
("(?:a?)?\?", "a", 0, 0);

440 
	`x2
("(?:a?\?)?", "a", 0, 0);

441 
	`x2
("(?:a?)+?", "aaa", 0, 1);

442 
	`x2
("(?:a+)?\?", "aaa", 0, 0);

443 
	`x2
("(?:a+)?\?b", "aaab", 0, 4);

444 
	`x2
("(?:ab)?{2}", "", 0, 0);

445 
	`x2
("(?:ab)?{2}", "ababa", 0, 4);

446 
	`x2
("(?:ab)*{0}", "ababa", 0, 0);

447 
	`x2
("(?:ab){3,}", "abababab", 0, 8);

448 
	`n
("(?:ab){3,}", "abab");

449 
	`x2
("(?:ab){2,4}", "ababab", 0, 6);

450 
	`x2
("(?:ab){2,4}", "ababababab", 0, 8);

451 
	`x2
("(?:ab){2,4}?", "ababababab", 0, 4);

452 
	`x2
("(?:ab){,}", "ab{,}", 0, 5);

453 
	`x2
("(?:abc)+?{2}", "abcabcabc", 0, 6);

454 
	`x2
("(?:X*)(?i:xa)", "XXXa", 0, 4);

455 
	`x2
("(d+)([^abc]z)", "dddz", 0, 4);

456 
	`x2
("([^abc]*)([^abc]z)", "dddz", 0, 4);

457 
	`x2
("(\\w+)(\\wz)", "dddz", 0, 4);

458 
	`x3
("(a)", "a", 0, 1, 1);

459 
	`x3
("(ab)", "ab", 0, 2, 1);

460 
	`x2
("((ab))", "ab", 0, 2);

461 
	`x3
("((ab))", "ab", 0, 2, 1);

462 
	`x3
("((ab))", "ab", 0, 2, 2);

463 
	`x3
("((((((((((((((((((((ab))))))))))))))))))))", "ab", 0, 2, 20);

464 
	`x3
("(ab)(cd)", "abcd", 0, 2, 1);

465 
	`x3
("(ab)(cd)", "abcd", 2, 4, 2);

466 
	`x3
("()(a)bc(def)ghijk", "abcdefghijk", 3, 6, 3);

467 
	`x3
("(()(a)bc(def)ghijk)", "abcdefghijk", 3, 6, 4);

468 
	`x2
("(^a)", "a", 0, 1);

469 
	`x3
("(a)|(a)", "ba", 1, 2, 1);

470 
	`x3
("(^a)|(a)", "ba", 1, 2, 2);

471 
	`x3
("(a?)", "aaa", 0, 1, 1);

472 
	`x3
("(a*)", "aaa", 0, 3, 1);

473 
	`x3
("(a*)", "", 0, 0, 1);

474 
	`x3
("(a+)", "aaaaaaa", 0, 7, 1);

475 
	`x3
("(a+|b*)", "bbbaa", 0, 3, 1);

476 
	`x3
("(a+|b?)", "bbbaa", 0, 1, 1);

477 
	`x3
("(abc)?", "abc", 0, 3, 1);

478 
	`x3
("(abc)*", "abc", 0, 3, 1);

479 
	`x3
("(abc)+", "abc", 0, 3, 1);

480 
	`x3
("(xyz|abc)+", "abc", 0, 3, 1);

481 
	`x3
("([xyz][abc]|abc)+", "abc", 0, 3, 1);

482 
	`x3
("((?i:abc))", "AbC", 0, 3, 1);

483 
	`x2
("(abc)(?i:\\1)", "abcABC", 0, 6);

484 
	`x3
("((?m:a.c))", "a\nc", 0, 3, 1);

485 
	`x3
("((?=az)a)", "azb", 0, 1, 1);

486 
	`x3
("abc|(.abd)", "zabd", 0, 4, 1);

487 
	`x2
("(?:abc)|(ABC)", "abc", 0, 3);

488 
	`x3
("(?i:(abc))|(zzz)", "ABC", 0, 3, 1);

489 
	`x3
("a*(.)", "aaaaz", 4, 5, 1);

490 
	`x3
("a*?(.)", "aaaaz", 0, 1, 1);

491 
	`x3
("a*?(c)", "aaaac", 4, 5, 1);

492 
	`x3
("[bcd]a*(.)", "caaaaz", 5, 6, 1);

493 
	`x3
("(\\Abb)cc", "bbcc", 0, 2, 1);

494 
	`n
("(\\Abb)cc", "zbbcc");

495 
	`x3
("(^bb)cc", "bbcc", 0, 2, 1);

496 
	`n
("(^bb)cc", "zbbcc");

497 
	`x3
("cc(bb$)", "ccbb", 2, 4, 1);

498 
	`n
("cc(bb$)", "ccbbb");

499 
	`n
("(\\1)", "");

500 
	`n
("\\1(a)", "aa");

501 
	`n
("(a(b)\\1)\\2+", "ababb");

502 
	`n
("(?:(?:\\1|z)(a))+$", "zaa");

503 
	`x2
("(?:(?:\\1|z)(a))+$", "zaaa", 0, 4);

504 
	`x2
("(a)(?=\\1)", "aa", 0, 1);

505 
	`n
("(a)$|\\1", "az");

506 
	`x2
("(a)\\1", "aa", 0, 2);

507 
	`n
("(a)\\1", "ab");

508 
	`x2
("(a?)\\1", "aa", 0, 2);

509 
	`x2
("(a?\?)\\1", "aa", 0, 0);

510 
	`x2
("(a*)\\1", "aaaaa", 0, 4);

511 
	`x3
("(a*)\\1", "aaaaa", 0, 2, 1);

512 
	`x2
("a(b*)\\1", "abbbb", 0, 5);

513 
	`x2
("a(b*)\\1", "ab", 0, 1);

514 
	`x2
("(a*)(b*)\\1\\2", "aaabbaaabb", 0, 10);

515 
	`x2
("(a*)(b*)\\2", "aaabbbb", 0, 7);

516 
	`x2
("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 8);

517 
	`x3
("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 3, 7);

518 
	`x2
("(a)(b)(c)\\2\\1\\3", "abcbac", 0, 6);

519 
	`x2
("([a-d])\\1", "cc", 0, 2);

520 
	`x2
("(\\w\\d\\s)\\1", "f5 f5 ", 0, 6);

521 
	`n
("(\\w\\d\\s)\\1", "f5 f5");

522 
	`x2
("(who|[a-c]{3})\\1", "whowho", 0, 6);

523 
	`x2
("...(who|[a-c]{3})\\1", "abcwhowho", 0, 9);

524 
	`x2
("(who|[a-c]{3})\\1", "cbccbc", 0, 6);

525 
	`x2
("(^a)\\1", "aa", 0, 2);

526 
	`n
("(^a)\\1", "baa");

527 
	`n
("(a$)\\1", "aa");

528 
	`n
("(ab\\Z)\\1", "ab");

529 
	`x2
("(a*\\Z)\\1", "a", 1, 1);

530 
	`x2
(".(a*\\Z)\\1", "ba", 1, 2);

531 
	`x3
("(.(abc)\\2)", "zabcabc", 0, 7, 1);

532 
	`x3
("(.(..\\d.)\\2)", "z12341234", 0, 9, 1);

533 
	`x2
("((?i:az))\\1", "AzAz", 0, 4);

534 
	`n
("((?i:az))\\1", "Azaz");

535 
	`x2
("(?<=a)b", "ab", 1, 2);

536 
	`n
("(?<=a)b", "bb");

537 
	`x2
("(?<=a|b)b", "bb", 1, 2);

538 
	`x2
("(?<=a|bc)b", "bcb", 2, 3);

539 
	`x2
("(?<=a|bc)b", "ab", 1, 2);

540 
	`x2
("(?<=a|bc||defghij|klmnopq|r)z", "rz", 1, 2);

541 
	`x2
("(a)\\g<1>", "aa", 0, 2);

542 
	`x2
("(?<!a)b", "cb", 1, 2);

543 
	`n
("(?<!a)b", "ab");

544 
	`x2
("(?<!a|bc)b", "bbb", 0, 1);

545 
	`n
("(?<!a|bc)z", "bcz");

546 
	`x2
("(?<name1>a)", "a", 0, 1);

547 
	`x2
("(?<name_2>ab)\\g<name_2>", "abab", 0, 4);

548 
	`x2
("(?<name_3>.zv.)\\k<name_3>", "azvbazvb", 0, 8);

549 
	`x2
("(?<=\\g<ab>)|-\\zEND (?<ab>XyZ)", "XyZ", 3, 3);

550 
	`x2
("(?<n>|a\\g<n>)+", "", 0, 0);

551 
	`x2
("(?<n>|\\(\\g<n>\\))+$", "()(())", 0, 6);

552 
	`x3
("\\g<n>(?<n>.){0}", "X", 0, 1, 1);

553 
	`x2
("\\g<n>(abc|df(?<n>.YZ){2,8}){0}", "XYZ", 0, 3);

554 
	`x2
("\\A(?<n>(a\\g<n>)|)\\z", "aaaa", 0, 4);

555 
	`x2
("(?<n>|\\g<m>\\g<n>)\\z|\\zEND (?<m>a|(b)\\g<m>)", "bbbbabba", 0, 8);

556 
	`x2
("(?<name1240>\\w+\\sx)a+\\k<name1240>", " fg xaaaaaaaafg x", 2, 18);

557 
	`x3
("(z)()()(?<_9>a)\\g<_9>", "zaa", 2, 3, 1);

558 
	`x2
("(.)(((?<_>a)))\\k<_>", "zaa", 0, 3);

559 
	`x2
("((?<name1>\\d)|(?<name2>\\w))(\\k<name1>|\\k<name2>)", "ff", 0, 2);

560 
	`x2
("(?:(?<x>)|(?<x>efg))\\k<x>", "", 0, 0);

561 
	`x2
("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefgefg", 3, 9);

562 
	`n
("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefg");

563 
	`x2
("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "a-pyumpyum", 2, 10);

564 
	`x3
("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "xxxxabcdefghijklmnabcdefghijklmn", 4, 18, 14);

565 
	`x3
("(?<name1>)(?<name2>)(?<name3>)(?<name4>)(?<name5>)(?<name6>)(?<name7>)(?<name8>)(?<name9>)(?<name10>)(?<name11>)(?<name12>)(?<name13>)(?<name14>)(?<name15>)(?<name16>aaa)(?<name17>)$", "aaa", 0, 3, 16);

566 
	`x2
("(?<foo>a|\\(\\g<foo>\\))", "a", 0, 1);

567 
	`x2
("(?<foo>a|\\(\\g<foo>\\))", "((((((a))))))", 0, 13);

568 
	`x3
("(?<foo>a|\\(\\g<foo>\\))", "((((((((a))))))))", 0, 17, 1);

569 
	`x2
("\\g<bar>|\\zEND(?<bar>.*abc$)", "abcxxxabc", 0, 9);

570 
	`x2
("\\g<1>|\\zEND(.a.)", "bac", 0, 3);

571 
	`x3
("\\g<_A>\\g<_A>|\\zEND(.a.)(?<_A>.b.)", "xbxyby", 3, 6, 1);

572 
	`x2
("\\A(?:\\g<pon>|\\g<pan>|\\zEND (?<pan>a|c\\g<pon>c)(?<pon>b|d\\g<pan>d))$", "cdcbcdc", 0, 7);

573 
	`x2
("\\A(?<n>|a\\g<m>)\\z|\\zEND (?<m>\\g<n>)", "aaaa", 0, 4);

574 
	`x2
("(?<n>(a|b\\g<n>c){3,5})", "baaaaca", 1, 5);

575 
	`x2
("(?<n>(a|b\\g<n>c){3,5})", "baaaacaaaaa", 0, 10);

576 
	`x2
("(?<pare>\\(([^\\(\\)]++|\\g<pare>)*+\\))", "((a))", 0, 5);

577 
	`x2
("()*\\1", "", 0, 0);

578 
	`x2
("(?:()|())*\\1\\2", "", 0, 0);

579 
	`x3
("(?:\\1a|())*", "a", 0, 0, 1);

580 
	`x2
("x((.)*)*x", "0x1x2x3", 1, 6);

581 
	`x2
("x((.)*)*x(?i:\\1)\\Z", "0x1x2x1X2", 1, 9);

582 
	`x2
("(?:()|()|()|()|()|())*\\2\\5", "", 0, 0);

583 
	`x2
("(?:()|()|()|(x)|()|())*\\2b\\5", "b", 0, 1);

584 
	`x2
("\\xED\\xF2", "\xed\xf2", 0, 2);

585 
	`x2
("", "§¢", 0, 0);

586 
	`x2
("§¢", "§¢", 0, 2);

587 
	`n
("§§", "§¢");

588 
	`x2
("§¶§¶", "§¶§¶", 0, 4);

589 
	`x2
("§¢§§§¶", "§¢§§§¶", 0, 6);

590 
	`x2
("§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥", "§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥§≥", 0, 70);

591 
	`x2
("§¢", "§§§¢", 2, 4);

592 
	`x2
("§§§¶", "§¢§§§¶", 2, 6);

593 
	`x2
("\\xca\\xb8", "\xca\xb8", 0, 2);

594 
	`x2
(".", "§¢", 0, 2);

595 
	`x2
("..", "§´§≠", 0, 4);

596 
	`x2
("\\w", "§™", 0, 2);

597 
	`n
("\\W", "§¢");

598 
	`x2
("[\\W]", "§¶$", 2, 3);

599 
	`x2
("\\S", "§Ω", 0, 2);

600 
	`x2
("\\S", "¥¡", 0, 2);

601 
	`x2
("\\b", "µ§ ", 0, 0);

602 
	`x2
("\\b", " §€", 1, 1);

603 
	`x2
("\\B", "§ª§Ω ", 2, 2);

604 
	`x2
("\\B", "§¶ ", 3, 3);

605 
	`x2
("\\B", " §§", 0, 0);

606 
	`x2
("[§ø§¡]", "§¡", 0, 2);

607 
	`n
("[§ §À]", "§Ã");

608 
	`x2
("[§¶-§™]", "§®", 0, 2);

609 
	`n
("[^§±]", "§±");

610 
	`x2
("[\\w]", "§Õ", 0, 2);

611 
	`n
("[\\d]", "§’");

612 
	`x2
("[\\D]", "§œ", 0, 2);

613 
	`n
("[\\s]", "§Ø");

614 
	`x2
("[\\S]", "§ÿ", 0, 2);

615 
	`x2
("[\\w\\d]", "§Ë", 0, 2);

616 
	`x2
("[\\w\\d]", " §Ë", 3, 5);

617 
	`n
("\\wµ¥º÷", " µ¥º÷");

618 
	`x2
("µ¥\\Wº÷", "µ¥ º÷", 0, 5);

619 
	`x2
("§¢.§§.§¶", "§¢§¢§§§§§¶", 0, 10);

620 
	`x2
(".\\w§¶\\W..§æ", "§®§¶§¶ §¶§æ§æ", 0, 13);

621 
	`x2
("\\s\\w§≥§≥§≥", " §≥§≥§≥§≥", 0, 9);

622 
	`x2
("§¢§¢.§±", "§¢§¢§±§±", 0, 8);

623 
	`n
(".§§", "§§§®");

624 
	`x2
(".§™", "§™§™", 0, 4);

625 
	`x2
("^§¢", "§¢", 0, 2);

626 
	`x2
("^§‡$", "§‡", 0, 2);

627 
	`x2
("^\\w$", "§À", 0, 2);

628 
	`x2
("^\\w§´§≠§Ø§±§≥$", "z§´§≠§Ø§±§≥", 0, 11);

629 
	`x2
("^\\w...§¶§®§™$", "z§¢§§§¶§¶§®§™", 0, 13);

630 
	`x2
("\\w\\w\\s\\W§™§™§™\\d", "a§™ §™§™§™4", 0, 12);

631 
	`x2
("\\A§ø§¡§ƒ", "§ø§¡§ƒ", 0, 6);

632 
	`x2
("§‡§·§‚\\Z", "§‡§·§‚", 0, 6);

633 
	`x2
("§´§≠§Ø\\z", "§´§≠§Ø", 0, 6);

634 
	`x2
("§´§≠§Ø\\Z", "§´§≠§Ø\n", 0, 6);

635 
	`x2
("\\G§›§‘", "§›§‘", 0, 4);

636 
	`n
("\\G§®", "§¶§®§™");

637 
	`n
("§»§∆\\G", "§»§∆");

638 
	`n
("§ﬁ§ﬂ\\A", "§ﬁ§ﬂ");

639 
	`n
("§ﬁ\\A§ﬂ", "§ﬁ§ﬂ");

640 
	`x2
("(?=§ª)§ª", "§ª", 0, 2);

641 
	`n
("(?=§¶).", "§§");

642 
	`x2
("(?!§¶)§´", "§´", 0, 2);

643 
	`n
("(?!§»)§¢", "§»");

644 
	`x2
("(?i:§¢)", "§¢", 0, 2);

645 
	`x2
("(?i:§÷§Ÿ)", "§÷§Ÿ", 0, 4);

646 
	`n
("(?i:§§)", "§¶");

647 
	`x2
("(?m:§Ë.)", "§Ë\n", 0, 3);

648 
	`x2
("(?m:.§·)", "§ﬁ\n§·", 2, 5);

649 
	`x2
("§¢?", "", 0, 0);

650 
	`x2
(" —?", "≤Ω", 0, 0);

651 
	`x2
(" —?", " —", 0, 2);

652 
	`x2
("ŒÃ*", "", 0, 0);

653 
	`x2
("ŒÃ*", "ŒÃ", 0, 2);

654 
	`x2
("ª“*", "ª“ª“ª“", 0, 6);

655 
	`x2
("«œ*", "ºØ«œ«œ«œ«œ", 0, 0);

656 
	`n
("ª≥+", "");

657 
	`x2
("≤œ+", "≤œ", 0, 2);

658 
	`x2
("ª˛+", "ª˛ª˛ª˛ª˛", 0, 8);

659 
	`x2
("§®+", "§®§®§¶§¶§¶", 0, 4);

660 
	`x2
("§¶+", "§™§¶§¶§¶§¶", 2, 10);

661 
	`x2
(".?", "§ø", 0, 2);

662 
	`x2
(".*", "§—§‘§◊§⁄", 0, 8);

663 
	`x2
(".+", "§Ì", 0, 2);

664 
	`x2
(".+", "§§§¶§®§´\n", 0, 8);

665 
	`x2
("§¢|§§", "§¢", 0, 2);

666 
	`x2
("§¢|§§", "§§", 0, 2);

667 
	`x2
("§¢§§|§§§¶", "§¢§§", 0, 4);

668 
	`x2
("§¢§§|§§§¶", "§§§¶", 0, 4);

669 
	`x2
("§Ú(?:§´§≠|§≠§Ø)", "§Ú§´§≠", 0, 6);

670 
	`x2
("§Ú(?:§´§≠|§≠§Ø)§±", "§Ú§≠§Ø§±", 0, 8);

671 
	`x2
("§¢§§|(?:§¢§¶|§¢§Ú)", "§¢§Ú", 0, 4);

672 
	`x2
("§¢|§§|§¶", "§®§¶", 2, 4);

673 
	`x2
("§¢|§§|§¶§®|§™§´§≠|§Ø|§±§≥§µ|§∑§π§ª|§Ω|§ø§¡|§ƒ§∆§»§ §À|§Ã§Õ", "§∑§π§ª", 0, 6);

674 
	`n
("§¢|§§|§¶§®|§™§´§≠|§Ø|§±§≥§µ|§∑§π§ª|§Ω|§ø§¡|§ƒ§∆§»§ §À|§Ã§Õ", "§π§ª");

675 
	`x2
("§¢|^§Ô", "§÷§¢", 2, 4);

676 
	`x2
("§¢|^§Ú", "§Ú§¢", 0, 2);

677 
	`x2
("µ¥|\\Gº÷", "§±º÷µ¥", 4, 6);

678 
	`x2
("µ¥|\\Gº÷", "º÷µ¥", 0, 2);

679 
	`x2
("µ¥|\\Aº÷", "bº÷µ¥", 3, 5);

680 
	`x2
("µ¥|\\Aº÷", "º÷", 0, 2);

681 
	`x2
("µ¥|º÷\\Z", "º÷µ¥", 2, 4);

682 
	`x2
("µ¥|º÷\\Z", "º÷", 0, 2);

683 
	`x2
("µ¥|º÷\\Z", "º÷\n", 0, 2);

684 
	`x2
("µ¥|º÷\\z", "º÷µ¥", 2, 4);

685 
	`x2
("µ¥|º÷\\z", "º÷", 0, 2);

686 
	`x2
("\\w|\\s", "§™", 0, 2);

687 
	`x2
("\\w|%", "%§™", 0, 1);

688 
	`x2
("\\w|[&$]", "§¶&", 0, 2);

689 
	`x2
("[§§-§±]", "§¶", 0, 2);

690 
	`x2
("[§§-§±]|[^§´-§≥]", "§¢", 0, 2);

691 
	`x2
("[§§-§±]|[^§´-§≥]", "§´", 0, 2);

692 
	`x2
("[^§¢]", "\n", 0, 1);

693 
	`x2
("(?:§¢|[§¶-§≠])|§§§Ú", "§¶§Ú", 0, 2);

694 
	`x2
("(?:§¢|[§¶-§≠])|§§§Ú", "§§§Ú", 0, 4);

695 
	`x2
("§¢§§§¶|(?=§±§±)..§€", "§±§±§€", 0, 6);

696 
	`x2
("§¢§§§¶|(?!§±§±)..§€", "§¢§§§€", 0, 6);

697 
	`x2
("(?=§Ú§¢)..§¢|(?=§Ú§Ú)..§¢", "§Ú§Ú§¢", 0, 6);

698 
	`x2
("(?<=§¢|§§§¶)§§", "§§§¶§§", 4, 6);

699 
	`n
("(?>§¢|§¢§§§®)§¶", "§¢§§§®§¶");

700 
	`x2
("(?>§¢§§§®|§¢)§¶", "§¢§§§®§¶", 0, 8);

701 
	`x2
("§¢?|§§", "§¢", 0, 2);

702 
	`x2
("§¢?|§§", "§§", 0, 0);

703 
	`x2
("§¢?|§§", "", 0, 0);

704 
	`x2
("§¢*|§§", "§¢§¢", 0, 4);

705 
	`x2
("§¢*|§§*", "§§§¢", 0, 0);

706 
	`x2
("§¢*|§§*", "§¢§§", 0, 2);

707 
	`x2
("[a§¢]*|§§*", "a§¢§§§§§§", 0, 3);

708 
	`x2
("§¢+|§§*", "", 0, 0);

709 
	`x2
("§¢+|§§*", "§§§§§§", 0, 6);

710 
	`x2
("§¢+|§§*", "§¢§§§§§§", 0, 2);

711 
	`x2
("§¢+|§§*", "a§¢§§§§§§", 0, 0);

712 
	`n
("§¢+|§§+", "");

713 
	`x2
("(§¢|§§)?", "§§", 0, 2);

714 
	`x2
("(§¢|§§)*", "§§§¢", 0, 4);

715 
	`x2
("(§¢|§§)+", "§§§¢§§", 0, 6);

716 
	`x2
("(§¢§§|§¶§¢)+", "§¶§¢§¢§§§¶§®", 0, 8);

717 
	`x2
("(§¢§§|§¶§®)+", "§¶§¢§¢§§§¶§®", 4, 12);

718 
	`x2
("(§¢§§|§¶§¢)+", "§¢§¢§§§¶§¢", 2, 10);

719 
	`x2
("(§¢§§|§¶§¢)+", "§¢§§§Ú§¶§¢", 0, 4);

720 
	`x2
("(§¢§§|§¶§¢)+", "$$zzzz§¢§§§Ú§¶§¢", 6, 10);

721 
	`x2
("(§¢|§§§¢§§)+", "§¢§§§¢§§§¢", 0, 10);

722 
	`x2
("(§¢|§§§¢§§)+", "§§§¢", 2, 4);

723 
	`x2
("(§¢|§§§¢§§)+", "§§§¢§¢§¢§§§¢", 2, 8);

724 
	`x2
("(?:§¢|§§)(?:§¢|§§)", "§¢§§", 0, 4);

725 
	`x2
("(?:§¢*|§§*)(?:§¢*|§§*)", "§¢§¢§¢§§§§§§", 0, 6);

726 
	`x2
("(?:§¢*|§§*)(?:§¢+|§§+)", "§¢§¢§¢§§§§§§", 0, 12);

727 
	`x2
("(?:§¢+|§§+){2}", "§¢§¢§¢§§§§§§", 0, 12);

728 
	`x2
("(?:§¢+|§§+){1,2}", "§¢§¢§¢§§§§§§", 0, 12);

729 
	`x2
("(?:§¢+|\\A§§*)§¶§¶", "§¶§¶", 0, 4);

730 
	`n
("(?:§¢+|\\A§§*)§¶§¶", "§¢§§§¶§¶");

731 
	`x2
("(?:^§¢+|§§+)*§¶", "§¢§¢§§§§§§§¢§§§¶", 12, 16);

732 
	`x2
("(?:^§¢+|§§+)*§¶", "§¢§¢§§§§§§§§§¶", 0, 14);

733 
	`x2
("§¶{0,}", "§¶§¶§¶§¶", 0, 8);

734 
	`x2
("§¢|(?i)c", "C", 0, 1);

735 
	`x2
("(?i)c|§¢", "C", 0, 1);

736 
	`x2
("(?i:§¢)|a", "a", 0, 1);

737 
	`n
("(?i:§¢)|a", "A");

738 
	`x2
("[§¢§§§¶]?", "§¢§§§¶", 0, 2);

739 
	`x2
("[§¢§§§¶]*", "§¢§§§¶", 0, 6);

740 
	`x2
("[^§¢§§§¶]*", "§¢§§§¶", 0, 0);

741 
	`n
("[^§¢§§§¶]+", "§¢§§§¶");

742 
	`x2
("§¢?\?", "§¢§¢§¢", 0, 0);

743 
	`x2
("§§§¢?\?§§", "§§§¢§§", 0, 6);

744 
	`x2
("§¢*?", "§¢§¢§¢", 0, 0);

745 
	`x2
("§§§¢*?", "§§§¢§¢", 0, 2);

746 
	`x2
("§§§¢*?§§", "§§§¢§¢§§", 0, 8);

747 
	`x2
("§¢+?", "§¢§¢§¢", 0, 2);

748 
	`x2
("§§§¢+?", "§§§¢§¢", 0, 4);

749 
	`x2
("§§§¢+?§§", "§§§¢§¢§§", 0, 8);

750 
	`x2
("(?:≈∑?)?\?", "≈∑", 0, 0);

751 
	`x2
("(?:≈∑?\?)?", "≈∑", 0, 0);

752 
	`x2
("(?:Ã¥?)+?", "Ã¥Ã¥Ã¥", 0, 2);

753 
	`x2
("(?:…˜+)?\?", "…˜…˜…˜", 0, 0);

754 
	`x2
("(?:¿„+)?\?¡˙", "¿„¿„¿„¡˙", 0, 8);

755 
	`x2
("(?:§¢§§)?{2}", "", 0, 0);

756 
	`x2
("(?:µ¥º÷)?{2}", "µ¥º÷µ¥º÷µ¥", 0, 8);

757 
	`x2
("(?:µ¥º÷)*{0}", "µ¥º÷µ¥º÷µ¥", 0, 0);

758 
	`x2
("(?:µ¥º÷){3,}", "µ¥º÷µ¥º÷µ¥º÷µ¥º÷", 0, 16);

759 
	`n
("(?:µ¥º÷){3,}", "µ¥º÷µ¥º÷");

760 
	`x2
("(?:µ¥º÷){2,4}", "µ¥º÷µ¥º÷µ¥º÷", 0, 12);

761 
	`x2
("(?:µ¥º÷){2,4}", "µ¥º÷µ¥º÷µ¥º÷µ¥º÷µ¥º÷", 0, 16);

762 
	`x2
("(?:µ¥º÷){2,4}?", "µ¥º÷µ¥º÷µ¥º÷µ¥º÷µ¥º÷", 0, 8);

763 
	`x2
("(?:µ¥º÷){,}", "µ¥º÷{,}", 0, 7);

764 
	`x2
("(?:§´§≠§Ø)+?{2}", "§´§≠§Ø§´§≠§Ø§´§≠§Ø", 0, 12);

765 
	`x3
("(≤–)", "≤–", 0, 2, 1);

766 
	`x3
("(≤–øÂ)", "≤–øÂ", 0, 4, 1);

767 
	`x2
("((ª˛¥÷))", "ª˛¥÷", 0, 4);

768 
	`x3
("((…˜øÂ))", "…˜øÂ", 0, 4, 1);

769 
	`x3
("((∫Ú∆¸))", "∫Ú∆¸", 0, 4, 2);

770 
	`x3
("((((((((((((((((((((ŒÃª“))))))))))))))))))))", "ŒÃª“", 0, 4, 20);

771 
	`x3
("(§¢§§)(§¶§®)", "§¢§§§¶§®", 0, 4, 1);

772 
	`x3
("(§¢§§)(§¶§®)", "§¢§§§¶§®", 4, 8, 2);

773 
	`x3
("()(§¢)§§§¶(§®§™§´)§≠§Ø§±§≥", "§¢§§§¶§®§™§´§≠§Ø§±§≥", 6, 12, 3);

774 
	`x3
("(()(§¢)§§§¶(§®§™§´)§≠§Ø§±§≥)", "§¢§§§¶§®§™§´§≠§Ø§±§≥", 6, 12, 4);

775 
	`x3
(".*(•’•©)•Û°¶•ﬁ(•Û()•∑•Â•ø)•§•Û", "•’•©•Û°¶•ﬁ•Û•∑•Â•ø•§•Û", 10, 18, 2);

776 
	`x2
("(^§¢)", "§¢", 0, 2);

777 
	`x3
("(§¢)|(§¢)", "§§§¢", 2, 4, 1);

778 
	`x3
("(^§¢)|(§¢)", "§§§¢", 2, 4, 2);

779 
	`x3
("(§¢?)", "§¢§¢§¢", 0, 2, 1);

780 
	`x3
("(§ﬁ*)", "§ﬁ§ﬁ§ﬁ", 0, 6, 1);

781 
	`x3
("(§»*)", "", 0, 0, 1);

782 
	`x3
("(§Î+)", "§Î§Î§Î§Î§Î§Î§Î", 0, 14, 1);

783 
	`x3
("(§’+|§ÿ*)", "§’§’§’§ÿ§ÿ", 0, 6, 1);

784 
	`x3
("(§¢+|§§?)", "§§§§§§§¢§¢", 0, 2, 1);

785 
	`x3
("(§¢§§§¶)?", "§¢§§§¶", 0, 6, 1);

786 
	`x3
("(§¢§§§¶)*", "§¢§§§¶", 0, 6, 1);

787 
	`x3
("(§¢§§§¶)+", "§¢§§§¶", 0, 6, 1);

788 
	`x3
("(§µ§∑§π|§¢§§§¶)+", "§¢§§§¶", 0, 6, 1);

789 
	`x3
("([§ §À§Ã][§´§≠§Ø]|§´§≠§Ø)+", "§´§≠§Ø", 0, 6, 1);

790 
	`x3
("((?i:§¢§§§¶))", "§¢§§§¶", 0, 6, 1);

791 
	`x3
("((?m:§¢.§¶))", "§¢\n§¶", 0, 5, 1);

792 
	`x3
("((?=§¢§Û)§¢)", "§¢§Û§§", 0, 2, 1);

793 
	`x3
("§¢§§§¶|(.§¢§§§®)", "§Û§¢§§§®", 0, 8, 1);

794 
	`x3
("§¢*(.)", "§¢§¢§¢§¢§Û", 8, 10, 1);

795 
	`x3
("§¢*?(.)", "§¢§¢§¢§¢§Û", 0, 2, 1);

796 
	`x3
("§¢*?(§Û)", "§¢§¢§¢§¢§Û", 8, 10, 1);

797 
	`x3
("[§§§¶§®]§¢*(.)", "§®§¢§¢§¢§¢§Û", 10, 12, 1);

798 
	`x3
("(\\A§§§§)§¶§¶", "§§§§§¶§¶", 0, 4, 1);

799 
	`n
("(\\A§§§§)§¶§¶", "§Û§§§§§¶§¶");

800 
	`x3
("(^§§§§)§¶§¶", "§§§§§¶§¶", 0, 4, 1);

801 
	`n
("(^§§§§)§¶§¶", "§Û§§§§§¶§¶");

802 
	`x3
("§Ì§Ì(§Î§Î$)", "§Ì§Ì§Î§Î", 4, 8, 1);

803 
	`n
("§Ì§Ì(§Î§Î$)", "§Ì§Ì§Î§Î§Î");

804 
	`x2
("(Ãµ)\\1", "ÃµÃµ", 0, 4);

805 
	`n
("(Ãµ)\\1", "Ãµ…");

806 
	`x2
("(∂ı?)\\1", "∂ı∂ı", 0, 4);

807 
	`x2
("(∂ı?\?)\\1", "∂ı∂ı", 0, 0);

808 
	`x2
("(∂ı*)\\1", "∂ı∂ı∂ı∂ı∂ı", 0, 8);

809 
	`x3
("(∂ı*)\\1", "∂ı∂ı∂ı∂ı∂ı", 0, 4, 1);

810 
	`x2
("§¢(§§*)\\1", "§¢§§§§§§§§", 0, 10);

811 
	`x2
("§¢(§§*)\\1", "§¢§§", 0, 2);

812 
	`x2
("(§¢*)(§§*)\\1\\2", "§¢§¢§¢§§§§§¢§¢§¢§§§§", 0, 20);

813 
	`x2
("(§¢*)(§§*)\\2", "§¢§¢§¢§§§§§§§§", 0, 14);

814 
	`x3
("(§¢*)(§§*)\\2", "§¢§¢§¢§§§§§§§§", 6, 10, 2);

815 
	`x2
("(((((((§›*)§⁄))))))§‘\\7", "§›§›§›§⁄§‘§›§›§›", 0, 16);

816 
	`x3
("(((((((§›*)§⁄))))))§‘\\7", "§›§›§›§⁄§‘§›§›§›", 0, 6, 7);

817 
	`x2
("(§œ)(§“)(§’)\\2\\1\\3", "§œ§“§’§“§œ§’", 0, 12);

818 
	`x2
("([§≠-§±])\\1", "§Ø§Ø", 0, 4);

819 
	`x2
("(\\w\\d\\s)\\1", "§¢5 §¢5 ", 0, 8);

820 
	`n
("(\\w\\d\\s)\\1", "§¢5 §¢5");

821 
	`x2
("(√Ø°©|[§¢-§¶]{3})\\1", "√Ø°©√Ø°©", 0, 8);

822 
	`x2
("...(√Ø°©|[§¢-§¶]{3})\\1", "§¢a§¢√Ø°©√Ø°©", 0, 13);

823 
	`x2
("(√Ø°©|[§¢-§¶]{3})\\1", "§¶§§§¶§¶§§§¶", 0, 12);

824 
	`x2
("(^§≥)\\1", "§≥§≥", 0, 4);

825 
	`n
("(^§‡)\\1", "§·§‡§‡");

826 
	`n
("(§¢$)\\1", "§¢§¢");

827 
	`n
("(§¢§§\\Z)\\1", "§¢§§");

828 
	`x2
("(§¢*\\Z)\\1", "§¢", 2, 2);

829 
	`x2
(".(§¢*\\Z)\\1", "§§§¢", 2, 4);

830 
	`x3
("(.(§‰§§§Ê)\\2)", "z§‰§§§Ê§‰§§§Ê", 0, 13, 1);

831 
	`x3
("(.(..\\d.)\\2)", "§¢12341234", 0, 10, 1);

832 
	`x2
("((?i:§¢v§∫))\\1", "§¢v§∫§¢v§∫", 0, 10);

833 
	`x2
("(?<∂Ú§´> —|\\(\\g<∂Ú§´>\\))", "(((((( —))))))", 0, 14);

834 
	`x2
("\\A(?:\\g<∞§_1>|\\g<±æ_2>|\\zΩ™Œª (?<∞§_1>¥—|º´\\g<±æ_2>º´)(?<±æ_2>∫ﬂ| Óªß\\g<∞§_1> Óªß))$", " Óªßº´ Óªßº´∫ﬂº´ Óªßº´ Óªß", 0, 26);

835 
	`x2
("[[§“§’]]", "§’", 0, 2);

836 
	`x2
("[[§§§™§¶]§´]", "§´", 0, 2);

837 
	`n
("[[^§¢]]", "§¢");

838 
	`n
("[^[§¢]]", "§¢");

839 
	`x2
("[^[^§¢]]", "§¢", 0, 2);

840 
	`x2
("[[§´§≠§Ø]&&§≠§Ø]", "§Ø", 0, 2);

841 
	`n
("[[§´§≠§Ø]&&§≠§Ø]", "§´");

842 
	`n
("[[§´§≠§Ø]&&§≠§Ø]", "§±");

843 
	`x2
("[§¢-§Û&&§§-§Ú&&§¶-§Ò]", "§Ò", 0, 2);

844 
	`n
("[^§¢-§Û&&§§-§Ú&&§¶-§Ò]", "§Ò");

845 
	`x2
("[[^§¢&&§¢]&&§¢-§Û]", "§§", 0, 2);

846 
	`n
("[[^§¢&&§¢]&&§¢-§Û]", "§¢");

847 
	`x2
("[[^§¢-§Û&&§§§¶§®§™]&&[^§¶-§´]]", "§≠", 0, 2);

848 
	`n
("[[^§¢-§Û&&§§§¶§®§™]&&[^§¶-§´]]", "§§");

849 
	`x2
("[^[^§¢§§§¶]&&[^§¶§®§™]]", "§¶", 0, 2);

850 
	`x2
("[^[^§¢§§§¶]&&[^§¶§®§™]]", "§®", 0, 2);

851 
	`n
("[^[^§¢§§§¶]&&[^§¶§®§™]]", "§´");

852 
	`x2
("[§¢-&&-§¢]", "-", 0, 1);

853 
	`x2
("[^[^a-z§¢§§§¶]&&[^bcdefg§¶§®§™]q-w]", "§®", 0, 2);

854 
	`x2
("[^[^a-z§¢§§§¶]&&[^bcdefg§¶§®§™]g-w]", "f", 0, 1);

855 
	`x2
("[^[^a-z§¢§§§¶]&&[^bcdefg§¶§®§™]g-w]", "g", 0, 1);

856 
	`n
("[^[^a-z§¢§§§¶]&&[^bcdefg§¶§®§™]g-w]", "2");

857 
	`x2
("a<b>•–°º•∏•Á•Û§Œ•¿•¶•Û•Ì°º•…<\\/b>", "a<b>•–°º•∏•Á•Û§Œ•¿•¶•Û•Ì°º•…</b>", 0, 32);

858 
	`x2
(".<b>•–°º•∏•Á•Û§Œ•¿•¶•Û•Ì°º•…<\\/b>", "a<b>•–°º•∏•Á•Û§Œ•¿•¶•Û•Ì°º•…</b>", 0, 32);

859 #i‚de‡
POSIX_TEST


860 
	`x2
("\\p{Hiragana}", "§‘", 0, 2);

861 
	`n
("\\P{Hiragana}", "§‘");

864 
	`Ârötf
(
°dout
,

866 
nsucc
, 
nÁû
, 
√º‹
, 
	`⁄ig_vîsi⁄
());

868 #i‚de‡
POSIX_TEST


869 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1);

870 
	`⁄ig_íd
();

873  ((
nÁû
 =0 && 
√º‹
 == 0) ? 0 : -1);

874 
	}
}

	@modules/oniguruma/test/testu.c

4 
	~<°dio.h
>

6 #ifde‡
POSIX_TEST


7 
	~"⁄igposix.h
"

9 
	~"⁄iguruma.h
"

12 
	gnsucc
 = 0;

13 
	gnÁû
 = 0;

14 
	g√º‹
 = 0;

16 
FILE
* 
	gîr_fûe
;

18 #i‚de‡
POSIX_TEST


19 
OnigRegi⁄
* 
	gªgi⁄
;

20 
OnigEncodög
 
	gENC
;

23 
	#uÀn
(
p
Ë
	`⁄igíc_°r_byãÀn_nuŒ
(
ENC
, (
UCh¨
* )p)

	)

25 
	$uc⁄v
(* 
‰om
, * 
to
, 
Àn
)

27 
i
;

28 
c
;

29 *
q
;

31 
q
 = 
to
;

33 
i
 = 0; i < 
Àn
; i += 2) {

34 
c
 = ()
‰om
[
i
];

35 i‡(
c
 == 0) {

36 
c
 = ()
‰om
[
i
+1];

37 i‡(
c
 < 0x20 || c >= 0x7f || c == 0x5c || c == 0x22) {

38 
	`•rötf
(
q
, "\\%03o", 
c
);

39 
q
 += 4;

42 
	`•rötf
(
q
, "%c", 
c
);

43 
q
++;

47 
	`•rötf
(
q
, "\\%03o", 
c
);

48 
q
 += 4;

49 
c
 = ()
‰om
[
i
+1];

50 
	`•rötf
(
q
, "\\%03o", 
c
);

51 
q
 += 4;

55 *
q
 = 0;

56 
	}
}

58 
	$xx
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
, 
nŸ
)

60 
r
;

61 
˝©
[4000], 
c°r
[4000];

63 #ifde‡
POSIX_TEST


64 
ªgex_t
 
ªg
;

65 
buf
[200];

66 
ªgm©ch_t
 
pm©ch
[20];

68 
	`uc⁄v
(
∑âîn
, 
˝©
, 
	`uÀn
(pattern));

69 
	`uc⁄v
(
°r
, 
c°r
, 
	`uÀn
(str));

71 
r
 = 
	`ªgcomp
(&
ªg
, 
∑âîn
, 
REG_EXTENDED
 | 
REG_NEWLINE
);

72 i‡(
r
) {

73 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

74 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

75 
√º‹
++;

79 
r
 = 
	`ªgexec
(&
ªg
, 
°r
,Ñeg.
ª_nsub
 + 1, 
pm©ch
, 0);

80 i‡(
r
 !0 &&Ñ !
REG_NOMATCH
) {

81 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

82 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

83 
√º‹
++;

87 i‡(
r
 =
REG_NOMATCH
) {

88 i‡(
nŸ
) {

89 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
˝©
, 
c°r
);

90 
nsucc
++;

93 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
˝©
, 
c°r
);

94 
nÁû
++;

98 i‡(
nŸ
) {

99 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
˝©
, 
c°r
);

100 
nÁû
++;

103 i‡(
pm©ch
[
mem
].
rm_so
 =
‰om
 &&Öm©ch[mem].
rm_eo
 =
to
) {

104 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
˝©
, 
c°r
);

105 
nsucc
++;

108 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
˝©
, 
c°r
,

109 
‰om
, 
to
, 
pm©ch
[
mem
].
rm_so
,Öm©ch[mem].
rm_eo
);

110 
nÁû
++;

114 
	`ªg‰ì
(&
ªg
);

117 
ªgex_t
* 
ªg
;

118 
OnigCompûeInfo
 
ci
;

119 
OnigEº‹Info
 
eöfo
;

121 
	`uc⁄v
(
∑âîn
, 
˝©
, 
	`uÀn
(pattern));

122 
	`uc⁄v
(
°r
, 
c°r
, 
	`uÀn
(str));

125 
r
 = 
	`⁄ig_√w
(&
ªg
, (
UCh¨
* )
∑âîn
, (UCh¨* )’©ã∫ + 
	`uÀn
(pattern)),

126 
ONIG_OPTION_DEFAULT
, 
ENC
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

128 
ci
.
num_of_ñemíts
 = 5;

129 
ci
.
∑âîn_íc
 = 
ENC
;

130 
ci
.
èrgë_íc
 = 
ENC
;

131 
ci
.
sy¡ax
 = 
ONIG_SYNTAX_DEFAULT
;

132 
ci
.
›ti⁄
 = 
ONIG_OPTION_DEFAULT
;

133 
ci
.
ˇ£_fﬁd_Êag
 = 
ONIGENC_CASE_FOLD_DEFAULT
;

135 
r
 = 
	`⁄ig_√w_dñuxe
(&
ªg
, (
UCh¨
* )
∑âîn
,

136 (
UCh¨
* )(
∑âîn
 + 
	`uÀn
(pattern)),

137 &
ci
, &
eöfo
);

140 i‡(
r
) {

141 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

142 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
, &
eöfo
);

143 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

144 
√º‹
++;

148 
r
 = 
	`⁄ig_£¨ch
(
ªg
, (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`uÀn
(str)),

149 (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`uÀn
(str)),

150 
ªgi⁄
, 
ONIG_OPTION_NONE
);

151 i‡(
r
 < 
ONIG_MISMATCH
) {

152 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

153 
	`⁄ig_îr‹_code_to_°r
(
s
, 
r
);

154 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

155 
√º‹
++;

159 i‡(
r
 =
ONIG_MISMATCH
) {

160 i‡(
nŸ
) {

161 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
˝©
, 
c°r
);

162 
nsucc
++;

165 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
˝©
, 
c°r
);

166 
nÁû
++;

170 i‡(
nŸ
) {

171 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
˝©
, 
c°r
);

172 
nÁû
++;

175 i‡(
ªgi⁄
->
beg
[
mem
] =
‰om
 &&Ñegi⁄->
íd
[mem] =
to
) {

176 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
˝©
, 
c°r
);

177 
nsucc
++;

180 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
˝©
, 
c°r
,

181 
‰om
, 
to
, 
ªgi⁄
->
beg
[
mem
],Ñegi⁄->
íd
[mem]);

182 
nÁû
++;

186 
	`⁄ig_‰ì
(
ªg
);

188 
	}
}

190 
	$x2
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
)

192 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 0, 0);

193 
	}
}

195 
	$x3
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
)

197 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 
mem
, 0);

198 
	}
}

200 
	$n
(* 
∑âîn
, * 
°r
)

202 
	`xx
(
∑âîn
, 
°r
, 0, 0, 0, 1);

203 
	}
}

205 
	$maö
(
¨gc
, * 
¨gv
[])

207 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_UTF16_BE
 };

209 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

211 
îr_fûe
 = 
°dout
;

213 #i‚de‡
POSIX_TEST


214 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

216 #ifde‡
POSIX_TEST


217 
	`ªg_£t_ícodög
(
REG_POSIX_ENCODING_UTF16_BE
);

219 
ENC
 = 
ONIG_ENCODING_UTF16_BE
;

221 
	`x2
("\000\000", "\000\000", 0, 0);

222 
	`x2
("\000^\000\000", "\000\000", 0, 0);

223 
	`x2
("\000$\000\000", "\000\000", 0, 0);

224 
	`x2
("\000\134\000G\000\000", "\000\000", 0, 0);

225 
	`x2
("\000\134\000A\000\000", "\000\000", 0, 0);

226 
	`x2
("\000\134\000Z\000\000", "\000\000", 0, 0);

227 
	`x2
("\000\134\000z\000\000", "\000\000", 0, 0);

228 
	`x2
("\000^\000$\000\000", "\000\000", 0, 0);

229 
	`x2
("\000\134\000c\000a\000\000", "\000\001\000\000", 0, 2);

230 
	`x2
("\000\134\000C\000-\000b\000\000", "\000\002\000\000", 0, 2);

231 
	`x2
("\000\134\000c\000\134\000\134\000\000", "\000\034\000\000", 0, 2);

232 
	`x2
("\000q\000[\000\134\000c\000\134\000\134\000]\000\000", "\000q\000\034\000\000", 0, 4);

233 
	`x2
("\000\000", "\000a\000\000", 0, 0);

234 
	`x2
("\000a\000\000", "\000a\000\000", 0, 2);

235 
	`x2
("\000\134\000x\0000\0000\000\134\000x\0006\0001\000\000", "\000a\000\000", 0, 2);

236 
	`x2
("\000a\000a\000\000", "\000a\000a\000\000", 0, 4);

237 
	`x2
("\000a\000a\000a\000\000", "\000a\000a\000a\000\000", 0, 6);

238 
	`x2
("\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000\000", "\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000a\000\000", 0, 70);

239 
	`x2
("\000a\000b\000\000", "\000a\000b\000\000", 0, 4);

240 
	`x2
("\000b\000\000", "\000a\000b\000\000", 2, 4);

241 
	`x2
("\000b\000c\000\000", "\000a\000b\000c\000\000", 2, 6);

242 
	`x2
("\000(\000?\000i\000:\000#\000R\000E\000T\000#\000)\000\000", "\000#\000I\000N\000S\000#\000#\000R\000E\000T\000#\000\000", 10, 20);

243 
	`x2
("\000\134\0000\0000\0000\000\134\0001\0007\000\000", "\000\017\000\000", 0, 2);

244 
	`x2
("\000\134\000x\0000\0000\000\134\000x\0001\000f\000\000", "\000\037\000\000", 0, 2);

245 
	`x2
("\000a\000(\000?\000#\000.\000.\000.\000.\000\134\000\134\000J\000J\000J\000J\000)\000b\000\000", "\000a\000b\000\000", 0, 4);

246 
	`x2
("\000(\000?\000x\000)\000 \000 \000G\000 \000(\000o\000 \000O\000(\000?\000-\000x\000)\000o\000O\000)\000 \000g\000 \000L\000\000", "\000G\000o\000O\000o\000O\000g\000L\000e\000\000", 0, 14);

247 
	`x2
("\000.\000\000", "\000a\000\000", 0, 2);

248 
	`n
("\000.\000\000", "\000\000");

249 
	`x2
("\000.\000.\000\000", "\000a\000b\000\000", 0, 4);

250 
	`x2
("\000\134\000w\000\000", "\000e\000\000", 0, 2);

251 
	`n
("\000\134\000W\000\000", "\000e\000\000");

252 
	`x2
("\000\134\000s\000\000", "\000 \000\000", 0, 2);

253 
	`x2
("\000\134\000S\000\000", "\000b\000\000", 0, 2);

254 
	`x2
("\000\134\000d\000\000", "\0004\000\000", 0, 2);

255 
	`n
("\000\134\000D\000\000", "\0004\000\000");

256 
	`x2
("\000\134\000b\000\000", "\000z\000 \000\000", 0, 0);

257 
	`x2
("\000\134\000b\000\000", "\000 \000z\000\000", 2, 2);

258 
	`x2
("\000\134\000B\000\000", "\000z\000z\000 \000\000", 2, 2);

259 
	`x2
("\000\134\000B\000\000", "\000z\000 \000\000", 4, 4);

260 
	`x2
("\000\134\000B\000\000", "\000 \000z\000\000", 0, 0);

261 
	`x2
("\000[\000a\000b\000]\000\000", "\000b\000\000", 0, 2);

262 
	`n
("\000[\000a\000b\000]\000\000", "\000c\000\000");

263 
	`x2
("\000[\000a\000-\000z\000]\000\000", "\000t\000\000", 0, 2);

264 
	`n
("\000[\000^\000a\000]\000\000", "\000a\000\000");

265 
	`x2
("\000[\000^\000a\000]\000\000", "\000\012\000\000", 0, 2);

266 
	`x2
("\000[\000]\000]\000\000", "\000]\000\000", 0, 2);

267 
	`n
("\000[\000^\000]\000]\000\000", "\000]\000\000");

268 
	`x2
("\000[\000\134\000^\000]\000+\000\000", "\0000\000^\000^\0001\000\000", 2, 6);

269 
	`x2
("\000[\000b\000-\000]\000\000", "\000b\000\000", 0, 2);

270 
	`x2
("\000[\000b\000-\000]\000\000", "\000-\000\000", 0, 2);

271 
	`x2
("\000[\000\134\000w\000]\000\000", "\000z\000\000", 0, 2);

272 
	`n
("\000[\000\134\000w\000]\000\000", "\000 \000\000");

273 
	`x2
("\000[\000\134\000W\000]\000\000", "\000b\000$\000\000", 2, 4);

274 
	`x2
("\000[\000\134\000d\000]\000\000", "\0005\000\000", 0, 2);

275 
	`n
("\000[\000\134\000d\000]\000\000", "\000e\000\000");

276 
	`x2
("\000[\000\134\000D\000]\000\000", "\000t\000\000", 0, 2);

277 
	`n
("\000[\000\134\000D\000]\000\000", "\0003\000\000");

278 
	`x2
("\000[\000\134\000s\000]\000\000", "\000 \000\000", 0, 2);

279 
	`n
("\000[\000\134\000s\000]\000\000", "\000a\000\000");

280 
	`x2
("\000[\000\134\000S\000]\000\000", "\000b\000\000", 0, 2);

281 
	`n
("\000[\000\134\000S\000]\000\000", "\000 \000\000");

282 
	`x2
("\000[\000\134\000w\000\134\000d\000]\000\000", "\0002\000\000", 0, 2);

283 
	`n
("\000[\000\134\000w\000\134\000d\000]\000\000", "\000 \000\000");

284 
	`x2
("\000[\000[\000:\000u\000p\000p\000e\000r\000:\000]\000]\000\000", "\000B\000\000", 0, 2);

285 
	`x2
("\000[\000*\000[\000:\000x\000d\000i\000g\000i\000t\000:\000]\000+\000]\000\000", "\000+\000\000", 0, 2);

286 
	`x2
("\000[\000*\000[\000:\000x\000d\000i\000g\000i\000t\000:\000]\000+\000]\000\000", "\000G\000H\000I\000K\000K\000-\0009\000+\000*\000\000", 12, 14);

287 
	`x2
("\000[\000*\000[\000:\000x\000d\000i\000g\000i\000t\000:\000]\000+\000]\000\000", "\000-\000@\000^\000+\000\000", 6, 8);

288 
	`n
("\000[\000[\000:\000u\000p\000p\000e\000r\000]\000]\000\000", "\000A\000\000");

289 
	`x2
("\000[\000[\000:\000u\000p\000p\000e\000r\000]\000]\000\000", "\000:\000\000", 0, 2);

290 
	`x2
("\000[\000\134\0000\0000\0000\000\134\0000\0004\0004\000-\000\134\0000\0000\0000\000\134\0000\0004\0007\000]\000\000", "\000&\000\000", 0, 2);

291 
	`x2
("\000[\000\134\000x\0000\0000\000\134\000x\0005\000a\000-\000\134\000x\0000\0000\000\134\000x\0005\000c\000]\000\000", "\000[\000\000", 0, 2);

292 
	`x2
("\000[\000\134\000x\0000\0000\000\134\000x\0006\000A\000-\000\134\000x\0000\0000\000\134\000x\0006\000D\000]\000\000", "\000l\000\000", 0, 2);

293 
	`n
("\000[\000\134\000x\0000\0000\000\134\000x\0006\000A\000-\000\134\000x\0000\0000\000\134\000x\0006\000D\000]\000\000", "\000n\000\000");

294 
	`n
("\000^\000[\0000\000-\0009\000A\000-\000F\000]\000+\000 \0000\000+\000 \000U\000N\000D\000E\000F\000 \000\000", "\0007\0005\000F\000 \0000\0000\0000\0000\0000\0000\0000\0000\000 \000S\000E\000C\000T\0001\0004\000A\000 \000n\000o\000t\000y\000p\000e\000 \000(\000)\000 \000 \000 \000 \000E\000x\000t\000e\000r\000n\000a\000l\000 \000 \000 \000 \000|\000 \000_\000r\000b\000_\000a\000p\000p\000l\000y\000\000");

295 
	`x2
("\000[\000\134\000[\000]\000\000", "\000[\000\000", 0, 2);

296 
	`x2
("\000[\000\134\000]\000]\000\000", "\000]\000\000", 0, 2);

297 
	`x2
("\000[\000&\000]\000\000", "\000&\000\000", 0, 2);

298 
	`x2
("\000[\000[\000a\000b\000]\000]\000\000", "\000b\000\000", 0, 2);

299 
	`x2
("\000[\000[\000a\000b\000]\000c\000]\000\000", "\000c\000\000", 0, 2);

300 
	`n
("\000[\000[\000^\000a\000]\000]\000\000", "\000a\000\000");

301 
	`n
("\000[\000^\000[\000a\000]\000]\000\000", "\000a\000\000");

302 
	`x2
("\000[\000[\000a\000b\000]\000&\000&\000b\000c\000]\000\000", "\000b\000\000", 0, 2);

303 
	`n
("\000[\000[\000a\000b\000]\000&\000&\000b\000c\000]\000\000", "\000a\000\000");

304 
	`n
("\000[\000[\000a\000b\000]\000&\000&\000b\000c\000]\000\000", "\000c\000\000");

305 
	`x2
("\000[\000a\000-\000z\000&\000&\000b\000-\000y\000&\000&\000c\000-\000x\000]\000\000", "\000w\000\000", 0, 2);

306 
	`n
("\000[\000^\000a\000-\000z\000&\000&\000b\000-\000y\000&\000&\000c\000-\000x\000]\000\000", "\000w\000\000");

307 
	`x2
("\000[\000[\000^\000a\000&\000&\000a\000]\000&\000&\000a\000-\000z\000]\000\000", "\000b\000\000", 0, 2);

308 
	`n
("\000[\000[\000^\000a\000&\000&\000a\000]\000&\000&\000a\000-\000z\000]\000\000", "\000a\000\000");

309 
	`x2
("\000[\000[\000^\000a\000-\000z\000&\000&\000b\000c\000d\000e\000f\000]\000&\000&\000[\000^\000c\000-\000g\000]\000]\000\000", "\000h\000\000", 0, 2);

310 
	`n
("\000[\000[\000^\000a\000-\000z\000&\000&\000b\000c\000d\000e\000f\000]\000&\000&\000[\000^\000c\000-\000g\000]\000]\000\000", "\000c\000\000");

311 
	`x2
("\000[\000^\000[\000^\000a\000b\000c\000]\000&\000&\000[\000^\000c\000d\000e\000]\000]\000\000", "\000c\000\000", 0, 2);

312 
	`x2
("\000[\000^\000[\000^\000a\000b\000c\000]\000&\000&\000[\000^\000c\000d\000e\000]\000]\000\000", "\000e\000\000", 0, 2);

313 
	`n
("\000[\000^\000[\000^\000a\000b\000c\000]\000&\000&\000[\000^\000c\000d\000e\000]\000]\000\000", "\000f\000\000");

314 
	`x2
("\000[\000a\000-\000&\000&\000-\000a\000]\000\000", "\000-\000\000", 0, 2);

315 
	`n
("\000[\000a\000\134\000-\000&\000&\000\134\000-\000a\000]\000\000", "\000&\000\000");

316 
	`n
("\000\134\000w\000a\000b\000c\000\000", "\000 \000a\000b\000c\000\000");

317 
	`x2
("\000a\000\134\000W\000b\000c\000\000", "\000a\000 \000b\000c\000\000", 0, 8);

318 
	`x2
("\000a\000.\000b\000.\000c\000\000", "\000a\000a\000b\000b\000c\000\000", 0, 10);

319 
	`x2
("\000.\000\134\000w\000b\000\134\000W\000.\000.\000c\000\000", "\000a\000b\000b\000 \000b\000c\000c\000\000", 0, 14);

320 
	`x2
("\000\134\000s\000\134\000w\000z\000z\000z\000\000", "\000 \000z\000z\000z\000z\000\000", 0, 10);

321 
	`x2
("\000a\000a\000.\000b\000\000", "\000a\000a\000b\000b\000\000", 0, 8);

322 
	`n
("\000.\000a\000\000", "\000a\000b\000\000");

323 
	`x2
("\000.\000a\000\000", "\000a\000a\000\000", 0, 4);

324 
	`x2
("\000^\000a\000\000", "\000a\000\000", 0, 2);

325 
	`x2
("\000^\000a\000$\000\000", "\000a\000\000", 0, 2);

326 
	`x2
("\000^\000\134\000w\000$\000\000", "\000a\000\000", 0, 2);

327 
	`n
("\000^\000\134\000w\000$\000\000", "\000 \000\000");

328 
	`x2
("\000^\000\134\000w\000a\000b\000$\000\000", "\000z\000a\000b\000\000", 0, 6);

329 
	`x2
("\000^\000\134\000w\000a\000b\000c\000d\000e\000f\000$\000\000", "\000z\000a\000b\000c\000d\000e\000f\000\000", 0, 14);

330 
	`x2
("\000^\000\134\000w\000.\000.\000.\000d\000e\000f\000$\000\000", "\000z\000a\000b\000c\000d\000e\000f\000\000", 0, 14);

331 
	`x2
("\000\134\000w\000\134\000w\000\134\000s\000\134\000W\000a\000a\000a\000\134\000d\000\000", "\000a\000a\000 \000 \000a\000a\000a\0004\000\000", 0, 16);

332 
	`x2
("\000\134\000A\000\134\000Z\000\000", "\000\000", 0, 0);

333 
	`x2
("\000\134\000A\000x\000y\000z\000\000", "\000x\000y\000z\000\000", 0, 6);

334 
	`x2
("\000x\000y\000z\000\134\000Z\000\000", "\000x\000y\000z\000\000", 0, 6);

335 
	`x2
("\000x\000y\000z\000\134\000z\000\000", "\000x\000y\000z\000\000", 0, 6);

336 
	`x2
("\000a\000\134\000Z\000\000", "\000a\000\000", 0, 2);

337 
	`x2
("\000\134\000G\000a\000z\000\000", "\000a\000z\000\000", 0, 4);

338 
	`n
("\000\134\000G\000z\000\000", "\000b\000z\000a\000\000");

339 
	`n
("\000a\000z\000\134\000G\000\000", "\000a\000z\000\000");

340 
	`n
("\000a\000z\000\134\000A\000\000", "\000a\000z\000\000");

341 
	`n
("\000a\000\134\000A\000z\000\000", "\000a\000z\000\000");

342 
	`x2
("\000\134\000^\000\134\000$\000\000", "\000^\000$\000\000", 0, 4);

343 
	`x2
("\000^\000x\000?\000y\000\000", "\000x\000y\000\000", 0, 4);

344 
	`x2
("\000^\000(\000x\000?\000y\000)\000\000", "\000x\000y\000\000", 0, 4);

345 
	`x2
("\000\134\000w\000\000", "\000_\000\000", 0, 2);

346 
	`n
("\000\134\000W\000\000", "\000_\000\000");

347 
	`x2
("\000(\000?\000=\000z\000)\000z\000\000", "\000z\000\000", 0, 2);

348 
	`n
("\000(\000?\000=\000z\000)\000.\000\000", "\000a\000\000");

349 
	`x2
("\000(\000?\000!\000z\000)\000a\000\000", "\000a\000\000", 0, 2);

350 
	`n
("\000(\000?\000!\000z\000)\000a\000\000", "\000z\000\000");

351 
	`x2
("\000(\000?\000i\000:\000a\000)\000\000", "\000a\000\000", 0, 2);

352 
	`x2
("\000(\000?\000i\000:\000a\000)\000\000", "\000A\000\000", 0, 2);

353 
	`x2
("\000(\000?\000i\000:\000A\000)\000\000", "\000a\000\000", 0, 2);

354 
	`n
("\000(\000?\000i\000:\000A\000)\000\000", "\000b\000\000");

355 
	`x2
("\000(\000?\000i\000:\000[\000A\000-\000Z\000]\000)\000\000", "\000a\000\000", 0, 2);

356 
	`x2
("\000(\000?\000i\000:\000[\000f\000-\000m\000]\000)\000\000", "\000H\000\000", 0, 2);

357 
	`x2
("\000(\000?\000i\000:\000[\000f\000-\000m\000]\000)\000\000", "\000h\000\000", 0, 2);

358 
	`n
("\000(\000?\000i\000:\000[\000f\000-\000m\000]\000)\000\000", "\000e\000\000");

359 
	`x2
("\000(\000?\000i\000:\000[\000A\000-\000c\000]\000)\000\000", "\000D\000\000", 0, 2);

360 
	`n
("\000(\000?\000i\000:\000[\000^\000a\000-\000z\000]\000)\000\000", "\000A\000\000");

361 
	`n
("\000(\000?\000i\000:\000[\000^\000a\000-\000z\000]\000)\000\000", "\000a\000\000");

362 
	`x2
("\000(\000?\000i\000:\000[\000!\000-\000k\000]\000)\000\000", "\000Z\000\000", 0, 2);

363 
	`x2
("\000(\000?\000i\000:\000[\000!\000-\000k\000]\000)\000\000", "\0007\000\000", 0, 2);

364 
	`x2
("\000(\000?\000i\000:\000[\000T\000-\000}\000]\000)\000\000", "\000b\000\000", 0, 2);

365 
	`x2
("\000(\000?\000i\000:\000[\000T\000-\000}\000]\000)\000\000", "\000{\000\000", 0, 2);

366 
	`x2
("\000(\000?\000i\000:\000\134\000?\000a\000)\000\000", "\000?\000A\000\000", 0, 4);

367 
	`x2
("\000(\000?\000i\000:\000\134\000*\000A\000)\000\000", "\000*\000a\000\000", 0, 4);

368 
	`n
("\000.\000\000", "\000\012\000\000");

369 
	`x2
("\000(\000?\000m\000:\000.\000)\000\000", "\000\012\000\000", 0, 2);

370 
	`x2
("\000(\000?\000m\000:\000a\000.\000)\000\000", "\000a\000\012\000\000", 0, 4);

371 
	`x2
("\000(\000?\000m\000:\000.\000b\000)\000\000", "\000a\000\012\000b\000\000", 2, 6);

372 
	`x2
("\000.\000*\000a\000b\000c\000\000", "\000d\000d\000d\000a\000b\000d\000d\000\012\000d\000d\000a\000b\000c\000\000", 16, 26);

373 
	`x2
("\000(\000?\000m\000:\000.\000*\000a\000b\000c\000)\000\000", "\000d\000d\000d\000a\000b\000d\000d\000a\000b\000c\000\000", 0, 20);

374 
	`n
("\000(\000?\000i\000)\000(\000?\000-\000i\000)\000a\000\000", "\000A\000\000");

375 
	`n
("\000(\000?\000i\000)\000(\000?\000-\000i\000:\000a\000)\000\000", "\000A\000\000");

376 
	`x2
("\000a\000?\000\000", "\000\000", 0, 0);

377 
	`x2
("\000a\000?\000\000", "\000b\000\000", 0, 0);

378 
	`x2
("\000a\000?\000\000", "\000a\000\000", 0, 2);

379 
	`x2
("\000a\000*\000\000", "\000\000", 0, 0);

380 
	`x2
("\000a\000*\000\000", "\000a\000\000", 0, 2);

381 
	`x2
("\000a\000*\000\000", "\000a\000a\000a\000\000", 0, 6);

382 
	`x2
("\000a\000*\000\000", "\000b\000a\000a\000a\000a\000\000", 0, 0);

383 
	`n
("\000a\000+\000\000", "\000\000");

384 
	`x2
("\000a\000+\000\000", "\000a\000\000", 0, 2);

385 
	`x2
("\000a\000+\000\000", "\000a\000a\000a\000a\000\000", 0, 8);

386 
	`x2
("\000a\000+\000\000", "\000a\000a\000b\000b\000b\000\000", 0, 4);

387 
	`x2
("\000a\000+\000\000", "\000b\000a\000a\000a\000a\000\000", 2, 10);

388 
	`x2
("\000.\000?\000\000", "\000\000", 0, 0);

389 
	`x2
("\000.\000?\000\000", "\000f\000\000", 0, 2);

390 
	`x2
("\000.\000?\000\000", "\000\012\000\000", 0, 0);

391 
	`x2
("\000.\000*\000\000", "\000\000", 0, 0);

392 
	`x2
("\000.\000*\000\000", "\000a\000b\000c\000d\000e\000\000", 0, 10);

393 
	`x2
("\000.\000+\000\000", "\000z\000\000", 0, 2);

394 
	`x2
("\000.\000+\000\000", "\000z\000d\000s\000w\000e\000r\000\012\000\000", 0, 12);

395 
	`x2
("\000(\000.\000*\000)\000a\000\134\0001\000f\000\000", "\000b\000a\000b\000f\000b\000a\000c\000\000", 0, 8);

396 
	`x2
("\000(\000.\000*\000)\000a\000\134\0001\000f\000\000", "\000b\000a\000c\000b\000a\000b\000f\000\000", 6, 14);

397 
	`x2
("\000(\000(\000.\000*\000)\000a\000\134\0002\000f\000)\000\000", "\000b\000a\000c\000b\000a\000b\000f\000\000", 6, 14);

398 
	`x2
("\000(\000.\000*\000)\000a\000\134\0001\000f\000\000", "\000b\000a\000c\000z\000z\000z\000z\000z\000z\000\012\000b\000a\000z\000z\000\012\000z\000z\000z\000z\000b\000a\000b\000f\000\000", 38, 46);

399 
	`x2
("\000a\000|\000b\000\000", "\000a\000\000", 0, 2);

400 
	`x2
("\000a\000|\000b\000\000", "\000b\000\000", 0, 2);

401 
	`x2
("\000|\000a\000\000", "\000a\000\000", 0, 0);

402 
	`x2
("\000(\000|\000a\000)\000\000", "\000a\000\000", 0, 0);

403 
	`x2
("\000a\000b\000|\000b\000c\000\000", "\000a\000b\000\000", 0, 4);

404 
	`x2
("\000a\000b\000|\000b\000c\000\000", "\000b\000c\000\000", 0, 4);

405 
	`x2
("\000z\000(\000?\000:\000a\000b\000|\000b\000c\000)\000\000", "\000z\000b\000c\000\000", 0, 6);

406 
	`x2
("\000a\000(\000?\000:\000a\000b\000|\000b\000c\000)\000c\000\000", "\000a\000a\000b\000c\000\000", 0, 8);

407 
	`x2
("\000a\000b\000|\000(\000?\000:\000a\000c\000|\000a\000z\000)\000\000", "\000a\000z\000\000", 0, 4);

408 
	`x2
("\000a\000|\000b\000|\000c\000\000", "\000d\000c\000\000", 2, 4);

409 
	`x2
("\000a\000|\000b\000|\000c\000d\000|\000e\000f\000g\000|\000h\000|\000i\000j\000k\000|\000l\000m\000n\000|\000o\000|\000p\000q\000|\000r\000s\000t\000u\000v\000w\000x\000|\000y\000z\000\000", "\000p\000q\000r\000\000", 0, 4);

410 
	`n
("\000a\000|\000b\000|\000c\000d\000|\000e\000f\000g\000|\000h\000|\000i\000j\000k\000|\000l\000m\000n\000|\000o\000|\000p\000q\000|\000r\000s\000t\000u\000v\000w\000x\000|\000y\000z\000\000", "\000m\000n\000\000");

411 
	`x2
("\000a\000|\000^\000z\000\000", "\000b\000a\000\000", 2, 4);

412 
	`x2
("\000a\000|\000^\000z\000\000", "\000z\000a\000\000", 0, 2);

413 
	`x2
("\000a\000|\000\134\000G\000z\000\000", "\000b\000z\000a\000\000", 4, 6);

414 
	`x2
("\000a\000|\000\134\000G\000z\000\000", "\000z\000a\000\000", 0, 2);

415 
	`x2
("\000a\000|\000\134\000A\000z\000\000", "\000b\000z\000a\000\000", 4, 6);

416 
	`x2
("\000a\000|\000\134\000A\000z\000\000", "\000z\000a\000\000", 0, 2);

417 
	`x2
("\000a\000|\000b\000\134\000Z\000\000", "\000b\000a\000\000", 2, 4);

418 
	`x2
("\000a\000|\000b\000\134\000Z\000\000", "\000b\000\000", 0, 2);

419 
	`x2
("\000a\000|\000b\000\134\000z\000\000", "\000b\000a\000\000", 2, 4);

420 
	`x2
("\000a\000|\000b\000\134\000z\000\000", "\000b\000\000", 0, 2);

421 
	`x2
("\000\134\000w\000|\000\134\000s\000\000", "\000 \000\000", 0, 2);

422 
	`n
("\000\134\000w\000|\000\134\000w\000\000", "\000 \000\000");

423 
	`x2
("\000\134\000w\000|\000%\000\000", "\000%\000\000", 0, 2);

424 
	`x2
("\000\134\000w\000|\000[\000&\000$\000]\000\000", "\000&\000\000", 0, 2);

425 
	`x2
("\000[\000b\000-\000d\000]\000|\000[\000^\000e\000-\000z\000]\000\000", "\000a\000\000", 0, 2);

426 
	`x2
("\000(\000?\000:\000a\000|\000[\000c\000-\000f\000]\000)\000|\000b\000z\000\000", "\000d\000z\000\000", 0, 2);

427 
	`x2
("\000(\000?\000:\000a\000|\000[\000c\000-\000f\000]\000)\000|\000b\000z\000\000", "\000b\000z\000\000", 0, 4);

428 
	`x2
("\000a\000b\000c\000|\000(\000?\000=\000z\000z\000)\000.\000.\000f\000\000", "\000z\000z\000f\000\000", 0, 6);

429 
	`x2
("\000a\000b\000c\000|\000(\000?\000!\000z\000z\000)\000.\000.\000f\000\000", "\000a\000b\000f\000\000", 0, 6);

430 
	`x2
("\000(\000?\000=\000z\000a\000)\000.\000.\000a\000|\000(\000?\000=\000z\000z\000)\000.\000.\000a\000\000", "\000z\000z\000a\000\000", 0, 6);

431 
	`n
("\000(\000?\000>\000a\000|\000a\000b\000d\000)\000c\000\000", "\000a\000b\000d\000c\000\000");

432 
	`x2
("\000(\000?\000>\000a\000b\000d\000|\000a\000)\000c\000\000", "\000a\000b\000d\000c\000\000", 0, 8);

433 
	`x2
("\000a\000?\000|\000b\000\000", "\000a\000\000", 0, 2);

434 
	`x2
("\000a\000?\000|\000b\000\000", "\000b\000\000", 0, 0);

435 
	`x2
("\000a\000?\000|\000b\000\000", "\000\000", 0, 0);

436 
	`x2
("\000a\000*\000|\000b\000\000", "\000a\000a\000\000", 0, 4);

437 
	`x2
("\000a\000*\000|\000b\000*\000\000", "\000b\000a\000\000", 0, 0);

438 
	`x2
("\000a\000*\000|\000b\000*\000\000", "\000a\000b\000\000", 0, 2);

439 
	`x2
("\000a\000+\000|\000b\000*\000\000", "\000\000", 0, 0);

440 
	`x2
("\000a\000+\000|\000b\000*\000\000", "\000b\000b\000b\000\000", 0, 6);

441 
	`x2
("\000a\000+\000|\000b\000*\000\000", "\000a\000b\000b\000b\000\000", 0, 2);

442 
	`n
("\000a\000+\000|\000b\000+\000\000", "\000\000");

443 
	`x2
("\000(\000a\000|\000b\000)\000?\000\000", "\000b\000\000", 0, 2);

444 
	`x2
("\000(\000a\000|\000b\000)\000*\000\000", "\000b\000a\000\000", 0, 4);

445 
	`x2
("\000(\000a\000|\000b\000)\000+\000\000", "\000b\000a\000b\000\000", 0, 6);

446 
	`x2
("\000(\000a\000b\000|\000c\000a\000)\000+\000\000", "\000c\000a\000a\000b\000b\000c\000\000", 0, 8);

447 
	`x2
("\000(\000a\000b\000|\000c\000a\000)\000+\000\000", "\000a\000a\000b\000c\000a\000\000", 2, 10);

448 
	`x2
("\000(\000a\000b\000|\000c\000a\000)\000+\000\000", "\000a\000b\000z\000c\000a\000\000", 0, 4);

449 
	`x2
("\000(\000a\000|\000b\000a\000b\000)\000+\000\000", "\000a\000b\000a\000b\000a\000\000", 0, 10);

450 
	`x2
("\000(\000a\000|\000b\000a\000b\000)\000+\000\000", "\000b\000a\000\000", 2, 4);

451 
	`x2
("\000(\000a\000|\000b\000a\000b\000)\000+\000\000", "\000b\000a\000a\000a\000b\000a\000\000", 2, 8);

452 
	`x2
("\000(\000?\000:\000a\000|\000b\000)\000(\000?\000:\000a\000|\000b\000)\000\000", "\000a\000b\000\000", 0, 4);

453 
	`x2
("\000(\000?\000:\000a\000*\000|\000b\000*\000)\000(\000?\000:\000a\000*\000|\000b\000*\000)\000\000", "\000a\000a\000a\000b\000b\000b\000\000", 0, 6);

454 
	`x2
("\000(\000?\000:\000a\000*\000|\000b\000*\000)\000(\000?\000:\000a\000+\000|\000b\000+\000)\000\000", "\000a\000a\000a\000b\000b\000b\000\000", 0, 12);

455 
	`x2
("\000(\000?\000:\000a\000+\000|\000b\000+\000)\000{\0002\000}\000\000", "\000a\000a\000a\000b\000b\000b\000\000", 0, 12);

456 
	`x2
("\000h\000{\0000\000,\000}\000\000", "\000h\000h\000h\000h\000\000", 0, 8);

457 
	`x2
("\000(\000?\000:\000a\000+\000|\000b\000+\000)\000{\0001\000,\0002\000}\000\000", "\000a\000a\000a\000b\000b\000b\000\000", 0, 12);

458 
	`n
("\000a\000x\000{\0002\000}\000*\000a\000\000", "\0000\000a\000x\000x\000x\000a\0001\000\000");

459 
	`n
("\000a\000.\000{\0000\000,\0002\000}\000a\000\000", "\0000\000a\000X\000X\000X\000a\0000\000\000");

460 
	`n
("\000a\000.\000{\0000\000,\0002\000}\000?\000a\000\000", "\0000\000a\000X\000X\000X\000a\0000\000\000");

461 
	`n
("\000a\000.\000{\0000\000,\0002\000}\000?\000a\000\000", "\0000\000a\000X\000X\000X\000X\000a\0000\000\000");

462 
	`x2
("\000^\000a\000{\0002\000,\000}\000?\000a\000$\000\000", "\000a\000a\000a\000\000", 0, 6);

463 
	`x2
("\000^\000[\000a\000-\000z\000]\000{\0002\000,\000}\000?\000$\000\000", "\000a\000a\000a\000\000", 0, 6);

464 
	`x2
("\000(\000?\000:\000a\000+\000|\000\134\000A\000b\000*\000)\000c\000c\000\000", "\000c\000c\000\000", 0, 4);

465 
	`n
("\000(\000?\000:\000a\000+\000|\000\134\000A\000b\000*\000)\000c\000c\000\000", "\000a\000b\000c\000c\000\000");

466 
	`x2
("\000(\000?\000:\000^\000a\000+\000|\000b\000+\000)\000*\000c\000\000", "\000a\000a\000b\000b\000b\000a\000b\000c\000\000", 12, 16);

467 
	`x2
("\000(\000?\000:\000^\000a\000+\000|\000b\000+\000)\000*\000c\000\000", "\000a\000a\000b\000b\000b\000b\000c\000\000", 0, 14);

468 
	`x2
("\000a\000|\000(\000?\000i\000)\000c\000\000", "\000C\000\000", 0, 2);

469 
	`x2
("\000(\000?\000i\000)\000c\000|\000a\000\000", "\000C\000\000", 0, 2);

470 
	`x2
("\000(\000?\000i\000)\000c\000|\000a\000\000", "\000A\000\000", 0, 2);

471 
	`x2
("\000(\000?\000i\000:\000c\000)\000|\000a\000\000", "\000C\000\000", 0, 2);

472 
	`n
("\000(\000?\000i\000:\000c\000)\000|\000a\000\000", "\000A\000\000");

473 
	`x2
("\000[\000a\000b\000c\000]\000?\000\000", "\000a\000b\000c\000\000", 0, 2);

474 
	`x2
("\000[\000a\000b\000c\000]\000*\000\000", "\000a\000b\000c\000\000", 0, 6);

475 
	`x2
("\000[\000^\000a\000b\000c\000]\000*\000\000", "\000a\000b\000c\000\000", 0, 0);

476 
	`n
("\000[\000^\000a\000b\000c\000]\000+\000\000", "\000a\000b\000c\000\000");

477 
	`x2
("\000a\000?\000?\000\000", "\000a\000a\000a\000\000", 0, 0);

478 
	`x2
("\000b\000a\000?\000?\000b\000\000", "\000b\000a\000b\000\000", 0, 6);

479 
	`x2
("\000a\000*\000?\000\000", "\000a\000a\000a\000\000", 0, 0);

480 
	`x2
("\000b\000a\000*\000?\000\000", "\000b\000a\000a\000\000", 0, 2);

481 
	`x2
("\000b\000a\000*\000?\000b\000\000", "\000b\000a\000a\000b\000\000", 0, 8);

482 
	`x2
("\000a\000+\000?\000\000", "\000a\000a\000a\000\000", 0, 2);

483 
	`x2
("\000b\000a\000+\000?\000\000", "\000b\000a\000a\000\000", 0, 4);

484 
	`x2
("\000b\000a\000+\000?\000b\000\000", "\000b\000a\000a\000b\000\000", 0, 8);

485 
	`x2
("\000(\000?\000:\000a\000?\000)\000?\000?\000\000", "\000a\000\000", 0, 0);

486 
	`x2
("\000(\000?\000:\000a\000?\000?\000)\000?\000\000", "\000a\000\000", 0, 0);

487 
	`x2
("\000(\000?\000:\000a\000?\000)\000+\000?\000\000", "\000a\000a\000a\000\000", 0, 2);

488 
	`x2
("\000(\000?\000:\000a\000+\000)\000?\000?\000\000", "\000a\000a\000a\000\000", 0, 0);

489 
	`x2
("\000(\000?\000:\000a\000+\000)\000?\000?\000b\000\000", "\000a\000a\000a\000b\000\000", 0, 8);

490 
	`x2
("\000(\000?\000:\000a\000b\000)\000?\000{\0002\000}\000\000", "\000\000", 0, 0);

491 
	`x2
("\000(\000?\000:\000a\000b\000)\000?\000{\0002\000}\000\000", "\000a\000b\000a\000b\000a\000\000", 0, 8);

492 
	`x2
("\000(\000?\000:\000a\000b\000)\000*\000{\0000\000}\000\000", "\000a\000b\000a\000b\000a\000\000", 0, 0);

493 
	`x2
("\000(\000?\000:\000a\000b\000)\000{\0003\000,\000}\000\000", "\000a\000b\000a\000b\000a\000b\000a\000b\000\000", 0, 16);

494 
	`n
("\000(\000?\000:\000a\000b\000)\000{\0003\000,\000}\000\000", "\000a\000b\000a\000b\000\000");

495 
	`x2
("\000(\000?\000:\000a\000b\000)\000{\0002\000,\0004\000}\000\000", "\000a\000b\000a\000b\000a\000b\000\000", 0, 12);

496 
	`x2
("\000(\000?\000:\000a\000b\000)\000{\0002\000,\0004\000}\000\000", "\000a\000b\000a\000b\000a\000b\000a\000b\000a\000b\000\000", 0, 16);

497 
	`x2
("\000(\000?\000:\000a\000b\000)\000{\0002\000,\0004\000}\000?\000\000", "\000a\000b\000a\000b\000a\000b\000a\000b\000a\000b\000\000", 0, 8);

498 
	`x2
("\000(\000?\000:\000a\000b\000)\000{\000,\000}\000\000", "\000a\000b\000{\000,\000}\000\000", 0, 10);

499 
	`x2
("\000(\000?\000:\000a\000b\000c\000)\000+\000?\000{\0002\000}\000\000", "\000a\000b\000c\000a\000b\000c\000a\000b\000c\000\000", 0, 12);

500 
	`x2
("\000(\000?\000:\000X\000*\000)\000(\000?\000i\000:\000x\000a\000)\000\000", "\000X\000X\000X\000a\000\000", 0, 8);

501 
	`x2
("\000(\000d\000+\000)\000(\000[\000^\000a\000b\000c\000]\000z\000)\000\000", "\000d\000d\000d\000z\000\000", 0, 8);

502 
	`x2
("\000(\000[\000^\000a\000b\000c\000]\000*\000)\000(\000[\000^\000a\000b\000c\000]\000z\000)\000\000", "\000d\000d\000d\000z\000\000", 0, 8);

503 
	`x2
("\000(\000\134\000w\000+\000)\000(\000\134\000w\000z\000)\000\000", "\000d\000d\000d\000z\000\000", 0, 8);

504 
	`x3
("\000(\000a\000)\000\000", "\000a\000\000", 0, 2, 1);

505 
	`x3
("\000(\000a\000b\000)\000\000", "\000a\000b\000\000", 0, 4, 1);

506 
	`x2
("\000(\000(\000a\000b\000)\000)\000\000", "\000a\000b\000\000", 0, 4);

507 
	`x3
("\000(\000(\000a\000b\000)\000)\000\000", "\000a\000b\000\000", 0, 4, 1);

508 
	`x3
("\000(\000(\000a\000b\000)\000)\000\000", "\000a\000b\000\000", 0, 4, 2);

509 
	`x3
("\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000a\000b\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000\000", "\000a\000b\000\000", 0, 4, 20);

510 
	`x3
("\000(\000a\000b\000)\000(\000c\000d\000)\000\000", "\000a\000b\000c\000d\000\000", 0, 4, 1);

511 
	`x3
("\000(\000a\000b\000)\000(\000c\000d\000)\000\000", "\000a\000b\000c\000d\000\000", 4, 8, 2);

512 
	`x3
("\000(\000)\000(\000a\000)\000b\000c\000(\000d\000e\000f\000)\000g\000h\000i\000j\000k\000\000", "\000a\000b\000c\000d\000e\000f\000g\000h\000i\000j\000k\000\000", 6, 12, 3);

513 
	`x3
("\000(\000(\000)\000(\000a\000)\000b\000c\000(\000d\000e\000f\000)\000g\000h\000i\000j\000k\000)\000\000", "\000a\000b\000c\000d\000e\000f\000g\000h\000i\000j\000k\000\000", 6, 12, 4);

514 
	`x2
("\000(\000^\000a\000)\000\000", "\000a\000\000", 0, 2);

515 
	`x3
("\000(\000a\000)\000|\000(\000a\000)\000\000", "\000b\000a\000\000", 2, 4, 1);

516 
	`x3
("\000(\000^\000a\000)\000|\000(\000a\000)\000\000", "\000b\000a\000\000", 2, 4, 2);

517 
	`x3
("\000(\000a\000?\000)\000\000", "\000a\000a\000a\000\000", 0, 2, 1);

518 
	`x3
("\000(\000a\000*\000)\000\000", "\000a\000a\000a\000\000", 0, 6, 1);

519 
	`x3
("\000(\000a\000*\000)\000\000", "\000\000", 0, 0, 1);

520 
	`x3
("\000(\000a\000+\000)\000\000", "\000a\000a\000a\000a\000a\000a\000a\000\000", 0, 14, 1);

521 
	`x3
("\000(\000a\000+\000|\000b\000*\000)\000\000", "\000b\000b\000b\000a\000a\000\000", 0, 6, 1);

522 
	`x3
("\000(\000a\000+\000|\000b\000?\000)\000\000", "\000b\000b\000b\000a\000a\000\000", 0, 2, 1);

523 
	`x3
("\000(\000a\000b\000c\000)\000?\000\000", "\000a\000b\000c\000\000", 0, 6, 1);

524 
	`x3
("\000(\000a\000b\000c\000)\000*\000\000", "\000a\000b\000c\000\000", 0, 6, 1);

525 
	`x3
("\000(\000a\000b\000c\000)\000+\000\000", "\000a\000b\000c\000\000", 0, 6, 1);

526 
	`x3
("\000(\000x\000y\000z\000|\000a\000b\000c\000)\000+\000\000", "\000a\000b\000c\000\000", 0, 6, 1);

527 
	`x3
("\000(\000[\000x\000y\000z\000]\000[\000a\000b\000c\000]\000|\000a\000b\000c\000)\000+\000\000", "\000a\000b\000c\000\000", 0, 6, 1);

528 
	`x3
("\000(\000(\000?\000i\000:\000a\000b\000c\000)\000)\000\000", "\000A\000b\000C\000\000", 0, 6, 1);

529 
	`x2
("\000(\000a\000b\000c\000)\000(\000?\000i\000:\000\134\0001\000)\000\000", "\000a\000b\000c\000A\000B\000C\000\000", 0, 12);

530 
	`x3
("\000(\000(\000?\000m\000:\000a\000.\000c\000)\000)\000\000", "\000a\000\012\000c\000\000", 0, 6, 1);

531 
	`x3
("\000(\000(\000?\000=\000a\000z\000)\000a\000)\000\000", "\000a\000z\000b\000\000", 0, 2, 1);

532 
	`x3
("\000a\000b\000c\000|\000(\000.\000a\000b\000d\000)\000\000", "\000z\000a\000b\000d\000\000", 0, 8, 1);

533 
	`x2
("\000(\000?\000:\000a\000b\000c\000)\000|\000(\000A\000B\000C\000)\000\000", "\000a\000b\000c\000\000", 0, 6);

534 
	`x3
("\000(\000?\000i\000:\000(\000a\000b\000c\000)\000)\000|\000(\000z\000z\000z\000)\000\000", "\000A\000B\000C\000\000", 0, 6, 1);

535 
	`x3
("\000a\000*\000(\000.\000)\000\000", "\000a\000a\000a\000a\000z\000\000", 8, 10, 1);

536 
	`x3
("\000a\000*\000?\000(\000.\000)\000\000", "\000a\000a\000a\000a\000z\000\000", 0, 2, 1);

537 
	`x3
("\000a\000*\000?\000(\000c\000)\000\000", "\000a\000a\000a\000a\000c\000\000", 8, 10, 1);

538 
	`x3
("\000[\000b\000c\000d\000]\000a\000*\000(\000.\000)\000\000", "\000c\000a\000a\000a\000a\000z\000\000", 10, 12, 1);

539 
	`x3
("\000(\000\134\000A\000b\000b\000)\000c\000c\000\000", "\000b\000b\000c\000c\000\000", 0, 4, 1);

540 
	`n
("\000(\000\134\000A\000b\000b\000)\000c\000c\000\000", "\000z\000b\000b\000c\000c\000\000");

541 
	`x3
("\000(\000^\000b\000b\000)\000c\000c\000\000", "\000b\000b\000c\000c\000\000", 0, 4, 1);

542 
	`n
("\000(\000^\000b\000b\000)\000c\000c\000\000", "\000z\000b\000b\000c\000c\000\000");

543 
	`x3
("\000c\000c\000(\000b\000b\000$\000)\000\000", "\000c\000c\000b\000b\000\000", 4, 8, 1);

544 
	`n
("\000c\000c\000(\000b\000b\000$\000)\000\000", "\000c\000c\000b\000b\000b\000\000");

545 
	`n
("\000(\000\134\0001\000)\000\000", "\000\000");

546 
	`n
("\000\134\0001\000(\000a\000)\000\000", "\000a\000a\000\000");

547 
	`n
("\000(\000a\000(\000b\000)\000\134\0001\000)\000\134\0002\000+\000\000", "\000a\000b\000a\000b\000b\000\000");

548 
	`n
("\000(\000?\000:\000(\000?\000:\000\134\0001\000|\000z\000)\000(\000a\000)\000)\000+\000$\000\000", "\000z\000a\000a\000\000");

549 
	`x2
("\000(\000?\000:\000(\000?\000:\000\134\0001\000|\000z\000)\000(\000a\000)\000)\000+\000$\000\000", "\000z\000a\000a\000a\000\000", 0, 8);

550 
	`x2
("\000(\000a\000)\000(\000?\000=\000\134\0001\000)\000\000", "\000a\000a\000\000", 0, 2);

551 
	`n
("\000(\000a\000)\000$\000|\000\134\0001\000\000", "\000a\000z\000\000");

552 
	`x2
("\000(\000a\000)\000\134\0001\000\000", "\000a\000a\000\000", 0, 4);

553 
	`n
("\000(\000a\000)\000\134\0001\000\000", "\000a\000b\000\000");

554 
	`x2
("\000(\000a\000?\000)\000\134\0001\000\000", "\000a\000a\000\000", 0, 4);

555 
	`x2
("\000(\000a\000?\000?\000)\000\134\0001\000\000", "\000a\000a\000\000", 0, 0);

556 
	`x2
("\000(\000a\000*\000)\000\134\0001\000\000", "\000a\000a\000a\000a\000a\000\000", 0, 8);

557 
	`x3
("\000(\000a\000*\000)\000\134\0001\000\000", "\000a\000a\000a\000a\000a\000\000", 0, 4, 1);

558 
	`x2
("\000a\000(\000b\000*\000)\000\134\0001\000\000", "\000a\000b\000b\000b\000b\000\000", 0, 10);

559 
	`x2
("\000a\000(\000b\000*\000)\000\134\0001\000\000", "\000a\000b\000\000", 0, 2);

560 
	`x2
("\000(\000a\000*\000)\000(\000b\000*\000)\000\134\0001\000\134\0002\000\000", "\000a\000a\000a\000b\000b\000a\000a\000a\000b\000b\000\000", 0, 20);

561 
	`x2
("\000(\000a\000*\000)\000(\000b\000*\000)\000\134\0002\000\000", "\000a\000a\000a\000b\000b\000b\000b\000\000", 0, 14);

562 
	`x2
("\000(\000(\000(\000(\000(\000(\000(\000a\000*\000)\000b\000)\000)\000)\000)\000)\000)\000c\000\134\0007\000\000", "\000a\000a\000a\000b\000c\000a\000a\000a\000\000", 0, 16);

563 
	`x3
("\000(\000(\000(\000(\000(\000(\000(\000a\000*\000)\000b\000)\000)\000)\000)\000)\000)\000c\000\134\0007\000\000", "\000a\000a\000a\000b\000c\000a\000a\000a\000\000", 0, 6, 7);

564 
	`x2
("\000(\000a\000)\000(\000b\000)\000(\000c\000)\000\134\0002\000\134\0001\000\134\0003\000\000", "\000a\000b\000c\000b\000a\000c\000\000", 0, 12);

565 
	`x2
("\000(\000[\000a\000-\000d\000]\000)\000\134\0001\000\000", "\000c\000c\000\000", 0, 4);

566 
	`x2
("\000(\000\134\000w\000\134\000d\000\134\000s\000)\000\134\0001\000\000", "\000f\0005\000 \000f\0005\000 \000\000", 0, 12);

567 
	`n
("\000(\000\134\000w\000\134\000d\000\134\000s\000)\000\134\0001\000\000", "\000f\0005\000 \000f\0005\000\000");

568 
	`x2
("\000(\000w\000h\000o\000|\000[\000a\000-\000c\000]\000{\0003\000}\000)\000\134\0001\000\000", "\000w\000h\000o\000w\000h\000o\000\000", 0, 12);

569 
	`x2
("\000.\000.\000.\000(\000w\000h\000o\000|\000[\000a\000-\000c\000]\000{\0003\000}\000)\000\134\0001\000\000", "\000a\000b\000c\000w\000h\000o\000w\000h\000o\000\000", 0, 18);

570 
	`x2
("\000(\000w\000h\000o\000|\000[\000a\000-\000c\000]\000{\0003\000}\000)\000\134\0001\000\000", "\000c\000b\000c\000c\000b\000c\000\000", 0, 12);

571 
	`x2
("\000(\000^\000a\000)\000\134\0001\000\000", "\000a\000a\000\000", 0, 4);

572 
	`n
("\000(\000^\000a\000)\000\134\0001\000\000", "\000b\000a\000a\000\000");

573 
	`n
("\000(\000a\000$\000)\000\134\0001\000\000", "\000a\000a\000\000");

574 
	`n
("\000(\000a\000b\000\134\000Z\000)\000\134\0001\000\000", "\000a\000b\000\000");

575 
	`x2
("\000(\000a\000*\000\134\000Z\000)\000\134\0001\000\000", "\000a\000\000", 2, 2);

576 
	`x2
("\000.\000(\000a\000*\000\134\000Z\000)\000\134\0001\000\000", "\000b\000a\000\000", 2, 4);

577 
	`x3
("\000(\000.\000(\000a\000b\000c\000)\000\134\0002\000)\000\000", "\000z\000a\000b\000c\000a\000b\000c\000\000", 0, 14, 1);

578 
	`x3
("\000(\000.\000(\000.\000.\000\134\000d\000.\000)\000\134\0002\000)\000\000", "\000z\0001\0002\0003\0004\0001\0002\0003\0004\000\000", 0, 18, 1);

579 
	`x2
("\000(\000(\000?\000i\000:\000a\000z\000)\000)\000\134\0001\000\000", "\000A\000z\000A\000z\000\000", 0, 8);

580 
	`n
("\000(\000(\000?\000i\000:\000a\000z\000)\000)\000\134\0001\000\000", "\000A\000z\000a\000z\000\000");

581 
	`x2
("\000(\000?\000<\000=\000a\000)\000b\000\000", "\000a\000b\000\000", 2, 4);

582 
	`n
("\000(\000?\000<\000=\000a\000)\000b\000\000", "\000b\000b\000\000");

583 
	`x2
("\000(\000?\000<\000=\000a\000|\000b\000)\000b\000\000", "\000b\000b\000\000", 2, 4);

584 
	`x2
("\000(\000?\000<\000=\000a\000|\000b\000c\000)\000b\000\000", "\000b\000c\000b\000\000", 4, 6);

585 
	`x2
("\000(\000?\000<\000=\000a\000|\000b\000c\000)\000b\000\000", "\000a\000b\000\000", 2, 4);

586 
	`x2
("\000(\000?\000<\000=\000a\000|\000b\000c\000|\000|\000d\000e\000f\000g\000h\000i\000j\000|\000k\000l\000m\000n\000o\000p\000q\000|\000r\000)\000z\000\000", "\000r\000z\000\000", 2, 4);

587 
	`x2
("\000(\000a\000)\000\134\000g\000<\0001\000>\000\000", "\000a\000a\000\000", 0, 4);

588 
	`x2
("\000(\000?\000<\000!\000a\000)\000b\000\000", "\000c\000b\000\000", 2, 4);

589 
	`n
("\000(\000?\000<\000!\000a\000)\000b\000\000", "\000a\000b\000\000");

590 
	`x2
("\000(\000?\000<\000!\000a\000|\000b\000c\000)\000b\000\000", "\000b\000b\000b\000\000", 0, 2);

591 
	`n
("\000(\000?\000<\000!\000a\000|\000b\000c\000)\000z\000\000", "\000b\000c\000z\000\000");

592 
	`x2
("\000(\000?\000<\000n\000a\000m\000e\0001\000>\000a\000)\000\000", "\000a\000\000", 0, 2);

593 
	`x2
("\000(\000?\000<\000n\000a\000m\000e\000_\0002\000>\000a\000b\000)\000\134\000g\000<\000n\000a\000m\000e\000_\0002\000>\000\000", "\000a\000b\000a\000b\000\000", 0, 8);

594 
	`x2
("\000(\000?\000<\000n\000a\000m\000e\000_\0003\000>\000.\000z\000v\000.\000)\000\134\000k\000<\000n\000a\000m\000e\000_\0003\000>\000\000", "\000a\000z\000v\000b\000a\000z\000v\000b\000\000", 0, 16);

595 
	`x2
("\000(\000?\000<\000=\000\134\000g\000<\000a\000b\000>\000)\000|\000-\000\134\000z\000E\000N\000D\000 \000(\000?\000<\000a\000b\000>\000X\000y\000Z\000)\000\000", "\000X\000y\000Z\000\000", 6, 6);

596 
	`x2
("\000(\000?\000<\000n\000>\000|\000a\000\134\000g\000<\000n\000>\000)\000+\000\000", "\000\000", 0, 0);

597 
	`x2
("\000(\000?\000<\000n\000>\000|\000\134\000(\000\134\000g\000<\000n\000>\000\134\000)\000)\000+\000$\000\000", "\000(\000)\000(\000(\000)\000)\000\000", 0, 12);

598 
	`x3
("\000\134\000g\000<\000n\000>\000(\000?\000<\000n\000>\000.\000)\000{\0000\000}\000\000", "\000X\000\000", 0, 2, 1);

599 
	`x2
("\000\134\000g\000<\000n\000>\000(\000a\000b\000c\000|\000d\000f\000(\000?\000<\000n\000>\000.\000Y\000Z\000)\000{\0002\000,\0008\000}\000)\000{\0000\000}\000\000", "\000X\000Y\000Z\000\000", 0, 6);

600 
	`x2
("\000\134\000A\000(\000?\000<\000n\000>\000(\000a\000\134\000g\000<\000n\000>\000)\000|\000)\000\134\000z\000\000", "\000a\000a\000a\000a\000\000", 0, 8);

601 
	`x2
("\000(\000?\000<\000n\000>\000|\000\134\000g\000<\000m\000>\000\134\000g\000<\000n\000>\000)\000\134\000z\000|\000\134\000z\000E\000N\000D\000 \000(\000?\000<\000m\000>\000a\000|\000(\000b\000)\000\134\000g\000<\000m\000>\000)\000\000", "\000b\000b\000b\000b\000a\000b\000b\000a\000\000", 0, 16);

602 
	`x2
("\000(\000?\000<\000n\000a\000m\000e\0001\0002\0004\0000\000>\000\134\000w\000+\000\134\000s\000x\000)\000a\000+\000\134\000k\000<\000n\000a\000m\000e\0001\0002\0004\0000\000>\000\000", "\000 \000 \000f\000g\000 \000x\000a\000a\000a\000a\000a\000a\000a\000a\000f\000g\000 \000x\000\000", 4, 36);

603 
	`x3
("\000(\000z\000)\000(\000)\000(\000)\000(\000?\000<\000_\0009\000>\000a\000)\000\134\000g\000<\000_\0009\000>\000\000", "\000z\000a\000a\000\000", 4, 6, 1);

604 
	`x2
("\000(\000.\000)\000(\000(\000(\000?\000<\000_\000>\000a\000)\000)\000)\000\134\000k\000<\000_\000>\000\000", "\000z\000a\000a\000\000", 0, 6);

605 
	`x2
("\000(\000(\000?\000<\000n\000a\000m\000e\0001\000>\000\134\000d\000)\000|\000(\000?\000<\000n\000a\000m\000e\0002\000>\000\134\000w\000)\000)\000(\000\134\000k\000<\000n\000a\000m\000e\0001\000>\000|\000\134\000k\000<\000n\000a\000m\000e\0002\000>\000)\000\000", "\000f\000f\000\000", 0, 4);

606 
	`x2
("\000(\000?\000:\000(\000?\000<\000x\000>\000)\000|\000(\000?\000<\000x\000>\000e\000f\000g\000)\000)\000\134\000k\000<\000x\000>\000\000", "\000\000", 0, 0);

607 
	`x2
("\000(\000?\000:\000(\000?\000<\000x\000>\000a\000b\000c\000)\000|\000(\000?\000<\000x\000>\000e\000f\000g\000)\000)\000\134\000k\000<\000x\000>\000\000", "\000a\000b\000c\000e\000f\000g\000e\000f\000g\000\000", 6, 18);

608 
	`n
("\000(\000?\000:\000(\000?\000<\000x\000>\000a\000b\000c\000)\000|\000(\000?\000<\000x\000>\000e\000f\000g\000)\000)\000\134\000k\000<\000x\000>\000\000", "\000a\000b\000c\000e\000f\000g\000\000");

609 
	`x2
("\000(\000?\000:\000(\000?\000<\000n\0001\000>\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000)\000\134\000k\000<\000n\0001\000>\000$\000\000", "\000a\000-\000p\000y\000u\000m\000p\000y\000u\000m\000\000", 4, 20);

610 
	`x3
("\000(\000?\000:\000(\000?\000<\000n\0001\000>\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000|\000(\000?\000<\000n\0001\000>\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000.\000)\000)\000\134\000k\000<\000n\0001\000>\000$\000\000", "\000x\000x\000x\000x\000a\000b\000c\000d\000e\000f\000g\000h\000i\000j\000k\000l\000m\000n\000a\000b\000c\000d\000e\000f\000g\000h\000i\000j\000k\000l\000m\000n\000\000", 8, 36, 14);

611 
	`x3
("\000(\000?\000<\000n\000a\000m\000e\0001\000>\000)\000(\000?\000<\000n\000a\000m\000e\0002\000>\000)\000(\000?\000<\000n\000a\000m\000e\0003\000>\000)\000(\000?\000<\000n\000a\000m\000e\0004\000>\000)\000(\000?\000<\000n\000a\000m\000e\0005\000>\000)\000(\000?\000<\000n\000a\000m\000e\0006\000>\000)\000(\000?\000<\000n\000a\000m\000e\0007\000>\000)\000(\000?\000<\000n\000a\000m\000e\0008\000>\000)\000(\000?\000<\000n\000a\000m\000e\0009\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0000\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0001\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0002\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0003\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0004\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0005\000>\000)\000(\000?\000<\000n\000a\000m\000e\0001\0006\000>\000a\000a\000a\000)\000(\000?\000<\000n\000a\000m\000e\0001\0007\000>\000)\000$\000\000", "\000a\000a\000a\000\000", 0, 6, 16);

612 
	`x2
("\000(\000?\000<\000f\000o\000o\000>\000a\000|\000\134\000(\000\134\000g\000<\000f\000o\000o\000>\000\134\000)\000)\000\000", "\000a\000\000", 0, 2);

613 
	`x2
("\000(\000?\000<\000f\000o\000o\000>\000a\000|\000\134\000(\000\134\000g\000<\000f\000o\000o\000>\000\134\000)\000)\000\000", "\000(\000(\000(\000(\000(\000(\000a\000)\000)\000)\000)\000)\000)\000\000", 0, 26);

614 
	`x3
("\000(\000?\000<\000f\000o\000o\000>\000a\000|\000\134\000(\000\134\000g\000<\000f\000o\000o\000>\000\134\000)\000)\000\000", "\000(\000(\000(\000(\000(\000(\000(\000(\000a\000)\000)\000)\000)\000)\000)\000)\000)\000\000", 0, 34, 1);

615 
	`x2
("\000\134\000g\000<\000b\000a\000r\000>\000|\000\134\000z\000E\000N\000D\000(\000?\000<\000b\000a\000r\000>\000.\000*\000a\000b\000c\000$\000)\000\000", "\000a\000b\000c\000x\000x\000x\000a\000b\000c\000\000", 0, 18);

616 
	`x2
("\000\134\000g\000<\0001\000>\000|\000\134\000z\000E\000N\000D\000(\000.\000a\000.\000)\000\000", "\000b\000a\000c\000\000", 0, 6);

617 
	`x3
("\000\134\000g\000<\000_\000A\000>\000\134\000g\000<\000_\000A\000>\000|\000\134\000z\000E\000N\000D\000(\000.\000a\000.\000)\000(\000?\000<\000_\000A\000>\000.\000b\000.\000)\000\000", "\000x\000b\000x\000y\000b\000y\000\000", 6, 12, 1);

618 
	`x2
("\000\134\000A\000(\000?\000:\000\134\000g\000<\000p\000o\000n\000>\000|\000\134\000g\000<\000p\000a\000n\000>\000|\000\134\000z\000E\000N\000D\000 \000 \000(\000?\000<\000p\000a\000n\000>\000a\000|\000c\000\134\000g\000<\000p\000o\000n\000>\000c\000)\000(\000?\000<\000p\000o\000n\000>\000b\000|\000d\000\134\000g\000<\000p\000a\000n\000>\000d\000)\000)\000$\000\000", "\000c\000d\000c\000b\000c\000d\000c\000\000", 0, 14);

619 
	`x2
("\000\134\000A\000(\000?\000<\000n\000>\000|\000a\000\134\000g\000<\000m\000>\000)\000\134\000z\000|\000\134\000z\000E\000N\000D\000 \000(\000?\000<\000m\000>\000\134\000g\000<\000n\000>\000)\000\000", "\000a\000a\000a\000a\000\000", 0, 8);

620 
	`x2
("\000(\000?\000<\000n\000>\000(\000a\000|\000b\000\134\000g\000<\000n\000>\000c\000)\000{\0003\000,\0005\000}\000)\000\000", "\000b\000a\000a\000a\000a\000c\000a\000\000", 2, 10);

621 
	`x2
("\000(\000?\000<\000n\000>\000(\000a\000|\000b\000\134\000g\000<\000n\000>\000c\000)\000{\0003\000,\0005\000}\000)\000\000", "\000b\000a\000a\000a\000a\000c\000a\000a\000a\000a\000a\000\000", 0, 20);

622 
	`x2
("\000(\000?\000<\000p\000a\000r\000e\000>\000\134\000(\000(\000[\000^\000\134\000(\000\134\000)\000]\000+\000+\000|\000\134\000g\000<\000p\000a\000r\000e\000>\000)\000*\000+\000\134\000)\000)\000\000", "\000(\000(\000a\000)\000)\000\000", 0, 10);

623 
	`x2
("\000(\000)\000*\000\134\0001\000\000", "\000\000", 0, 0);

624 
	`x2
("\000(\000?\000:\000(\000)\000|\000(\000)\000)\000*\000\134\0001\000\134\0002\000\000", "\000\000", 0, 0);

625 
	`x3
("\000(\000?\000:\000\134\0001\000a\000|\000(\000)\000)\000*\000\000", "\000a\000\000", 0, 0, 1);

626 
	`x2
("\000x\000(\000(\000.\000)\000*\000)\000*\000x\000\000", "\0000\000x\0001\000x\0002\000x\0003\000\000", 2, 12);

627 
	`x2
("\000x\000(\000(\000.\000)\000*\000)\000*\000x\000(\000?\000i\000:\000\134\0001\000)\000\134\000Z\000\000", "\0000\000x\0001\000x\0002\000x\0001\000X\0002\000\000", 2, 18);

628 
	`x2
("\000(\000?\000:\000(\000)\000|\000(\000)\000|\000(\000)\000|\000(\000)\000|\000(\000)\000|\000(\000)\000)\000*\000\134\0002\000\134\0005\000\000", "\000\000", 0, 0);

629 
	`x2
("\000(\000?\000:\000(\000)\000|\000(\000)\000|\000(\000)\000|\000(\000x\000)\000|\000(\000)\000|\000(\000)\000)\000*\000\134\0002\000b\000\134\0005\000\000", "\000b\000\000", 0, 2);

630 
	`x2
("\217\372\000\000", "\217\372\000\000", 0, 2);

631 
	`x2
("\000\000", "0B\000\000", 0, 0);

632 
	`x2
("0B\000\000", "0B\000\000", 0, 2);

633 
	`n
("0D\000\000", "0B\000\000");

634 
	`x2
("0F0F\000\000", "0F0F\000\000", 0, 4);

635 
	`x2
("0B0D0F\000\000", "0B0D0F\000\000", 0, 6);

636 
	`x2
("0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S\000\000", "0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S0S\000\000", 0, 70);

637 
	`x2
("0B\000\000", "0D0B\000\000", 2, 4);

638 
	`x2
("0D0F\000\000", "0B0D0F\000\000", 2, 6);

639 
	`x2
("e\207\000\000", "e\207\000\000", 0, 2);

640 
	`x2
("\000.\000\000", "0B\000\000", 0, 2);

641 
	`x2
("\000.\000.\000\000", "0K0M\000\000", 0, 4);

642 
	`x2
("\000\134\000w\000\000", "0J\000\000", 0, 2);

643 
	`n
("\000\134\000W\000\000", "0B\000\000");

644 
	`x2
("\000[\000\134\000W\000]\000\000", "0F\000$\000\000", 2, 4);

645 
	`x2
("\000\134\000S\000\000", "0]\000\000", 0, 2);

646 
	`x2
("\000\134\000S\000\000", "o\042\000\000", 0, 2);

647 
	`x2
("\000\134\000b\000\000", "l\027\000 \000\000", 0, 0);

648 
	`x2
("\000\134\000b\000\000", "\000 0{\000\000", 2, 2);

649 
	`x2
("\000\134\000B\000\000", "0[0]\000 \000\000", 2, 2);

650 
	`x2
("\000\134\000B\000\000", "0F\000 \000\000", 4, 4);

651 
	`x2
("\000\134\000B\000\000", "\000 0D\000\000", 0, 0);

652 
	`x2
("\000[0_0a\000]\000\000", "0a\000\000", 0, 2);

653 
	`n
("\000[0j0k\000]\000\000", "0l\000\000");

654 
	`x2
("\000[0F\000-0J\000]\000\000", "0H\000\000", 0, 2);

655 
	`n
("\000[\000^0Q\000]\000\000", "0Q\000\000");

656 
	`x2
("\000[\000\134\000w\000]\000\000", "0m\000\000", 0, 2);

657 
	`n
("\000[\000\134\000d\000]\000\000", "0u\000\000");

658 
	`x2
("\000[\000\134\000D\000]\000\000", "0o\000\000", 0, 2);

659 
	`n
("\000[\000\134\000s\000]\000\000", "0O\000\000");

660 
	`x2
("\000[\000\134\000S\000]\000\000", "0x\000\000", 0, 2);

661 
	`x2
("\000[\000\134\000w\000\134\000d\000]\000\000", "0\210\000\000", 0, 2);

662 
	`x2
("\000[\000\134\000w\000\134\000d\000]\000\000", "\000 \000 \000 0\210\000\000", 6, 8);

663 
	`n
("\000\134\000w\233<\216\312\000\000", "\000 \233<\216\312\000\000");

664 
	`x2
("\233<\000\134\000W\216\312\000\000", "\233<\000 \216\312\000\000", 0, 6);

665 
	`x2
("0B\000.0D\000.0F\000\000", "0B0B0D0D0F\000\000", 0, 10);

666 
	`x2
("\000.\000\134\000w0F\000\134\000W\000.\000.0^\000\000", "0H0F0F\000 0F0^0^\000\000", 0, 14);

667 
	`x2
("\000\134\000s\000\134\000w0S0S0S\000\000", "\000 0S0S0S0S\000\000", 0, 10);

668 
	`x2
("0B0B\000.0Q\000\000", "0B0B0Q0Q\000\000", 0, 8);

669 
	`n
("\000.0D\000\000", "0D0H\000\000");

670 
	`x2
("\000.0J\000\000", "0J0J\000\000", 0, 4);

671 
	`x2
("\000^0B\000\000", "0B\000\000", 0, 2);

672 
	`x2
("\000^0\200\000$\000\000", "0\200\000\000", 0, 2);

673 
	`x2
("\000^\000\134\000w\000$\000\000", "0k\000\000", 0, 2);

674 
	`x2
("\000^\000\134\000w0K0M0O0Q0S\000$\000\000", "\000z0K0M0O0Q0S\000\000", 0, 12);

675 
	`x2
("\000^\000\134\000w\000.\000.\000.0F0H0J\000$\000\000", "\000z0B0D0F0F0H0J\000\000", 0, 14);

676 
	`x2
("\000\134\000w\000\134\000w\000\134\000s\000\134\000W0J0J0J\000\134\000d\000\000", "\000a0J\000 \000 0J0J0J\0004\000\000", 0, 16);

677 
	`x2
("\000\134\000A0_0a0d\000\000", "0_0a0d\000\000", 0, 6);

678 
	`x2
("0\2000\2010\202\000\134\000Z\000\000", "0\2000\2010\202\000\000", 0, 6);

679 
	`x2
("0K0M0O\000\134\000z\000\000", "0K0M0O\000\000", 0, 6);

680 
	`x2
("0K0M0O\000\134\000Z\000\000", "0K0M0O\000\012\000\000", 0, 6);

681 
	`x2
("\000\134\000G0}0t\000\000", "0}0t\000\000", 0, 4);

682 
	`n
("\000\134\000G0H\000\000", "0F0H0J\000\000");

683 
	`n
("0h0f\000\134\000G\000\000", "0h0f\000\000");

684 
	`n
("0~0\177\000\134\000A\000\000", "0~0\177\000\000");

685 
	`n
("0~\000\134\000A0\177\000\000", "0~0\177\000\000");

686 
	`x2
("\000(\000?\000=0[\000)0[\000\000", "0[\000\000", 0, 2);

687 
	`n
("\000(\000?\000=0F\000)\000.\000\000", "0D\000\000");

688 
	`x2
("\000(\000?\000!0F\000)0K\000\000", "0K\000\000", 0, 2);

689 
	`n
("\000(\000?\000!0h\000)0B\000\000", "0h\000\000");

690 
	`x2
("\000(\000?\000i\000:0B\000)\000\000", "0B\000\000", 0, 2);

691 
	`x2
("\000(\000?\000i\000:0v0y\000)\000\000", "0v0y\000\000", 0, 4);

692 
	`n
("\000(\000?\000i\000:0D\000)\000\000", "0F\000\000");

693 
	`x2
("\000(\000?\000m\000:0\210\000.\000)\000\000", "0\210\000\012\000\000", 0, 4);

694 
	`x2
("\000(\000?\000m\000:\000.0\201\000)\000\000", "0~\000\0120\201\000\000", 2, 6);

695 
	`x2
("0B\000?\000\000", "\000\000", 0, 0);

696 
	`x2
("Y\011\000?\000\000", "S\026\000\000", 0, 0);

697 
	`x2
("Y\011\000?\000\000", "Y\011\000\000", 0, 2);

698 
	`x2
("\221\317\000*\000\000", "\000\000", 0, 0);

699 
	`x2
("\221\317\000*\000\000", "\221\317\000\000", 0, 2);

700 
	`x2
("[P\000*\000\000", "[P[P[P\000\000", 0, 6);

701 
	`x2
("\231\254\000*\000\000", "\236\177\231\254\231\254\231\254\231\254\000\000", 0, 0);

702 
	`n
("\134q\000+\000\000", "\000\000");

703 
	`x2
("l\263\000+\000\000", "l\263\000\000", 0, 2);

704 
	`x2
("fB\000+\000\000", "fBfBfBfB\000\000", 0, 8);

705 
	`x2
("0H\000+\000\000", "0H0H0F0F0F\000\000", 0, 4);

706 
	`x2
("0F\000+\000\000", "0J0F0F0F0F\000\000", 2, 10);

707 
	`x2
("\000.\000?\000\000", "0_\000\000", 0, 2);

708 
	`x2
("\000.\000*\000\000", "0q0t0w0z\000\000", 0, 8);

709 
	`x2
("\000.\000+\000\000", "0\215\000\000", 0, 2);

710 
	`x2
("\000.\000+\000\000", "0D0F0H0K\000\012\000\000", 0, 8);

711 
	`x2
("0B\000|0D\000\000", "0B\000\000", 0, 2);

712 
	`x2
("0B\000|0D\000\000", "0D\000\000", 0, 2);

713 
	`x2
("0B0D\000|0D0F\000\000", "0B0D\000\000", 0, 4);

714 
	`x2
("0B0D\000|0D0F\000\000", "0D0F\000\000", 0, 4);

715 
	`x2
("0\222\000(\000?\000:0K0M\000|0M0O\000)\000\000", "0\2220K0M\000\000", 0, 6);

716 
	`x2
("0\222\000(\000?\000:0K0M\000|0M0O\000)0Q\000\000", "0\2220M0O0Q\000\000", 0, 8);

717 
	`x2
("0B0D\000|\000(\000?\000:0B0F\000|0B0\222\000)\000\000", "0B0\222\000\000", 0, 4);

718 
	`x2
("0B\000|0D\000|0F\000\000", "0H0F\000\000", 2, 4);

719 
	`x2
("0B\000|0D\000|0F0H\000|0J0K0M\000|0O\000|0Q0S0U\000|0W0Y0[\000|0]\000|0_0a\000|0d0f0h0j0k\000|0l0m\000\000", "0W0Y0[\000\000", 0, 6);

720 
	`n
("0B\000|0D\000|0F0H\000|0J0K0M\000|0O\000|0Q0S0U\000|0W0Y0[\000|0]\000|0_0a\000|0d0f0h0j0k\000|0l0m\000\000", "0Y0[\000\000");

721 
	`x2
("0B\000|\000^0\217\000\000", "0v0B\000\000", 2, 4);

722 
	`x2
("0B\000|\000^0\222\000\000", "0\2220B\000\000", 0, 2);

723 
	`x2
("\233<\000|\000\134\000G\216\312\000\000", "0Q\216\312\233<\000\000", 4, 6);

724 
	`x2
("\233<\000|\000\134\000G\216\312\000\000", "\216\312\233<\000\000", 0, 2);

725 
	`x2
("\233<\000|\000\134\000A\216\312\000\000", "\000b\216\312\233<\000\000", 4, 6);

726 
	`x2
("\233<\000|\000\134\000A\216\312\000\000", "\216\312\000\000", 0, 2);

727 
	`x2
("\233<\000|\216\312\000\134\000Z\000\000", "\216\312\233<\000\000", 2, 4);

728 
	`x2
("\233<\000|\216\312\000\134\000Z\000\000", "\216\312\000\000", 0, 2);

729 
	`x2
("\233<\000|\216\312\000\134\000Z\000\000", "\216\312\000\012\000\000", 0, 2);

730 
	`x2
("\233<\000|\216\312\000\134\000z\000\000", "\216\312\233<\000\000", 2, 4);

731 
	`x2
("\233<\000|\216\312\000\134\000z\000\000", "\216\312\000\000", 0, 2);

732 
	`x2
("\000\134\000w\000|\000\134\000s\000\000", "0J\000\000", 0, 2);

733 
	`x2
("\000\134\000w\000|\000%\000\000", "\000%0J\000\000", 0, 2);

734 
	`x2
("\000\134\000w\000|\000[\000&\000$\000]\000\000", "0F\000&\000\000", 0, 2);

735 
	`x2
("\000[0D\000-0Q\000]\000\000", "0F\000\000", 0, 2);

736 
	`x2
("\000[0D\000-0Q\000]\000|\000[\000^0K\000-0S\000]\000\000", "0B\000\000", 0, 2);

737 
	`x2
("\000[0D\000-0Q\000]\000|\000[\000^0K\000-0S\000]\000\000", "0K\000\000", 0, 2);

738 
	`x2
("\000[\000^0B\000]\000\000", "\000\012\000\000", 0, 2);

739 
	`x2
("\000(\000?\000:0B\000|\000[0F\000-0M\000]\000)\000|0D0\222\000\000", "0F0\222\000\000", 0, 2);

740 
	`x2
("\000(\000?\000:0B\000|\000[0F\000-0M\000]\000)\000|0D0\222\000\000", "0D0\222\000\000", 0, 4);

741 
	`x2
("0B0D0F\000|\000(\000?\000=0Q0Q\000)\000.\000.0{\000\000", "0Q0Q0{\000\000", 0, 6);

742 
	`x2
("0B0D0F\000|\000(\000?\000!0Q0Q\000)\000.\000.0{\000\000", "0B0D0{\000\000", 0, 6);

743 
	`x2
("\000(\000?\000=0\2220B\000)\000.\000.0B\000|\000(\000?\000=0\2220\222\000)\000.\000.0B\000\000", "0\2220\2220B\000\000", 0, 6);

744 
	`x2
("\000(\000?\000<\000=0B\000|0D0F\000)0D\000\000", "0D0F0D\000\000", 4, 6);

745 
	`n
("\000(\000?\000>0B\000|0B0D0H\000)0F\000\000", "0B0D0H0F\000\000");

746 
	`x2
("\000(\000?\000>0B0D0H\000|0B\000)0F\000\000", "0B0D0H0F\000\000", 0, 8);

747 
	`x2
("0B\000?\000|0D\000\000", "0B\000\000", 0, 2);

748 
	`x2
("0B\000?\000|0D\000\000", "0D\000\000", 0, 0);

749 
	`x2
("0B\000?\000|0D\000\000", "\000\000", 0, 0);

750 
	`x2
("0B\000*\000|0D\000\000", "0B0B\000\000", 0, 4);

751 
	`x2
("0B\000*\000|0D\000*\000\000", "0D0B\000\000", 0, 0);

752 
	`x2
("0B\000*\000|0D\000*\000\000", "0B0D\000\000", 0, 2);

753 
	`x2
("\000[\000a0B\000]\000*\000|0D\000*\000\000", "\000a0B0D0D0D\000\000", 0, 4);

754 
	`x2
("0B\000+\000|0D\000*\000\000", "\000\000", 0, 0);

755 
	`x2
("0B\000+\000|0D\000*\000\000", "0D0D0D\000\000", 0, 6);

756 
	`x2
("0B\000+\000|0D\000*\000\000", "0B0D0D0D\000\000", 0, 2);

757 
	`x2
("0B\000+\000|0D\000*\000\000", "\000a0B0D0D0D\000\000", 0, 0);

758 
	`n
("0B\000+\000|0D\000+\000\000", "\000\000");

759 
	`x2
("\000(0B\000|0D\000)\000?\000\000", "0D\000\000", 0, 2);

760 
	`x2
("\000(0B\000|0D\000)\000*\000\000", "0D0B\000\000", 0, 4);

761 
	`x2
("\000(0B\000|0D\000)\000+\000\000", "0D0B0D\000\000", 0, 6);

762 
	`x2
("\000(0B0D\000|0F0B\000)\000+\000\000", "0F0B0B0D0F0H\000\000", 0, 8);

763 
	`x2
("\000(0B0D\000|0F0H\000)\000+\000\000", "0F0B0B0D0F0H\000\000", 4, 12);

764 
	`x2
("\000(0B0D\000|0F0B\000)\000+\000\000", "0B0B0D0F0B\000\000", 2, 10);

765 
	`x2
("\000(0B0D\000|0F0B\000)\000+\000\000", "0B0D0\2220F0B\000\000", 0, 4);

766 
	`x2
("\000(0B0D\000|0F0B\000)\000+\000\000", "\000$\000$\000z\000z\000z\000z0B0D0\2220F0B\000\000", 12, 16);

767 
	`x2
("\000(0B\000|0D0B0D\000)\000+\000\000", "0B0D0B0D0B\000\000", 0, 10);

768 
	`x2
("\000(0B\000|0D0B0D\000)\000+\000\000", "0D0B\000\000", 2, 4);

769 
	`x2
("\000(0B\000|0D0B0D\000)\000+\000\000", "0D0B0B0B0D0B\000\000", 2, 8);

770 
	`x2
("\000(\000?\000:0B\000|0D\000)\000(\000?\000:0B\000|0D\000)\000\000", "0B0D\000\000", 0, 4);

771 
	`x2
("\000(\000?\000:0B\000*\000|0D\000*\000)\000(\000?\000:0B\000*\000|0D\000*\000)\000\000", "0B0B0B0D0D0D\000\000", 0, 6);

772 
	`x2
("\000(\000?\000:0B\000*\000|0D\000*\000)\000(\000?\000:0B\000+\000|0D\000+\000)\000\000", "0B0B0B0D0D0D\000\000", 0, 12);

773 
	`x2
("\000(\000?\000:0B\000+\000|0D\000+\000)\000{\0002\000}\000\000", "0B0B0B0D0D0D\000\000", 0, 12);

774 
	`x2
("\000(\000?\000:0B\000+\000|0D\000+\000)\000{\0001\000,\0002\000}\000\000", "0B0B0B0D0D0D\000\000", 0, 12);

775 
	`x2
("\000(\000?\000:0B\000+\000|\000\134\000A0D\000*\000)0F0F\000\000", "0F0F\000\000", 0, 4);

776 
	`n
("\000(\000?\000:0B\000+\000|\000\134\000A0D\000*\000)0F0F\000\000", "0B0D0F0F\000\000");

777 
	`x2
("\000(\000?\000:\000^0B\000+\000|0D\000+\000)\000*0F\000\000", "0B0B0D0D0D0B0D0F\000\000", 12, 16);

778 
	`x2
("\000(\000?\000:\000^0B\000+\000|0D\000+\000)\000*0F\000\000", "0B0B0D0D0D0D0F\000\000", 0, 14);

779 
	`x2
("0F\000{\0000\000,\000}\000\000", "0F0F0F0F\000\000", 0, 8);

780 
	`x2
("0B\000|\000(\000?\000i\000)\000c\000\000", "\000C\000\000", 0, 2);

781 
	`x2
("\000(\000?\000i\000)\000c\000|0B\000\000", "\000C\000\000", 0, 2);

782 
	`x2
("\000(\000?\000i\000:0B\000)\000|\000a\000\000", "\000a\000\000", 0, 2);

783 
	`n
("\000(\000?\000i\000:0B\000)\000|\000a\000\000", "\000A\000\000");

784 
	`x2
("\000[0B0D0F\000]\000?\000\000", "0B0D0F\000\000", 0, 2);

785 
	`x2
("\000[0B0D0F\000]\000*\000\000", "0B0D0F\000\000", 0, 6);

786 
	`x2
("\000[\000^0B0D0F\000]\000*\000\000", "0B0D0F\000\000", 0, 0);

787 
	`n
("\000[\000^0B0D0F\000]\000+\000\000", "0B0D0F\000\000");

788 
	`x2
("0B\000?\000?\000\000", "0B0B0B\000\000", 0, 0);

789 
	`x2
("0D0B\000?\000?0D\000\000", "0D0B0D\000\000", 0, 6);

790 
	`x2
("0B\000*\000?\000\000", "0B0B0B\000\000", 0, 0);

791 
	`x2
("0D0B\000*\000?\000\000", "0D0B0B\000\000", 0, 2);

792 
	`x2
("0D0B\000*\000?0D\000\000", "0D0B0B0D\000\000", 0, 8);

793 
	`x2
("0B\000+\000?\000\000", "0B0B0B\000\000", 0, 2);

794 
	`x2
("0D0B\000+\000?\000\000", "0D0B0B\000\000", 0, 4);

795 
	`x2
("0D0B\000+\000?0D\000\000", "0D0B0B0D\000\000", 0, 8);

796 
	`x2
("\000(\000?\000:Y)\000?\000)\000?\000?\000\000", "Y)\000\000", 0, 0);

797 
	`x2
("\000(\000?\000:Y)\000?\000?\000)\000?\000\000", "Y)\000\000", 0, 0);

798 
	`x2
("\000(\000?\000:Y\042\000?\000)\000+\000?\000\000", "Y\042Y\042Y\042\000\000", 0, 2);

799 
	`x2
("\000(\000?\000:\230\250\000+\000)\000?\000?\000\000", "\230\250\230\250\230\250\000\000", 0, 0);

800 
	`x2
("\000(\000?\000:\226\352\000+\000)\000?\000?\227\034\000\000", "\226\352\226\352\226\352\227\034\000\000", 0, 8);

801 
	`x2
("\000(\000?\000:0B0D\000)\000?\000{\0002\000}\000\000", "\000\000", 0, 0);

802 
	`x2
("\000(\000?\000:\233<\216\312\000)\000?\000{\0002\000}\000\000", "\233<\216\312\233<\216\312\233<\000\000", 0, 8);

803 
	`x2
("\000(\000?\000:\233<\216\312\000)\000*\000{\0000\000}\000\000", "\233<\216\312\233<\216\312\233<\000\000", 0, 0);

804 
	`x2
("\000(\000?\000:\233<\216\312\000)\000{\0003\000,\000}\000\000", "\233<\216\312\233<\216\312\233<\216\312\233<\216\312\000\000", 0, 16);

805 
	`n
("\000(\000?\000:\233<\216\312\000)\000{\0003\000,\000}\000\000", "\233<\216\312\233<\216\312\000\000");

806 
	`x2
("\000(\000?\000:\233<\216\312\000)\000{\0002\000,\0004\000}\000\000", "\233<\216\312\233<\216\312\233<\216\312\000\000", 0, 12);

807 
	`x2
("\000(\000?\000:\233<\216\312\000)\000{\0002\000,\0004\000}\000\000", "\233<\216\312\233<\216\312\233<\216\312\233<\216\312\233<\216\312\000\000", 0, 16);

808 
	`x2
("\000(\000?\000:\233<\216\312\000)\000{\0002\000,\0004\000}\000?\000\000", "\233<\216\312\233<\216\312\233<\216\312\233<\216\312\233<\216\312\000\000", 0, 8);

809 
	`x2
("\000(\000?\000:\233<\216\312\000)\000{\000,\000}\000\000", "\233<\216\312\000{\000,\000}\000\000", 0, 10);

810 
	`x2
("\000(\000?\000:0K0M0O\000)\000+\000?\000{\0002\000}\000\000", "0K0M0O0K0M0O0K0M0O\000\000", 0, 12);

811 
	`x3
("\000(pk\000)\000\000", "pk\000\000", 0, 2, 1);

812 
	`x3
("\000(pkl4\000)\000\000", "pkl4\000\000", 0, 4, 1);

813 
	`x2
("\000(\000(fB\225\223\000)\000)\000\000", "fB\225\223\000\000", 0, 4);

814 
	`x3
("\000(\000(\230\250l4\000)\000)\000\000", "\230\250l4\000\000", 0, 4, 1);

815 
	`x3
("\000(\000(f(e\345\000)\000)\000\000", "f(e\345\000\000", 0, 4, 2);

816 
	`x3
("\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\000(\221\317[P\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000)\000\000", "\221\317[P\000\000", 0, 4, 20);

817 
	`x3
("\000(0B0D\000)\000(0F0H\000)\000\000", "0B0D0F0H\000\000", 0, 4, 1);

818 
	`x3
("\000(0B0D\000)\000(0F0H\000)\000\000", "0B0D0F0H\000\000", 4, 8, 2);

819 
	`x3
("\000(\000)\000(0B\000)0D0F\000(0H0J0K\000)0M0O0Q0S\000\000", "0B0D0F0H0J0K0M0O0Q0S\000\000", 6, 12, 3);

820 
	`x3
("\000(\000(\000)\000(0B\000)0D0F\000(0H0J0K\000)0M0O0Q0S\000)\000\000", "0B0D0F0H0J0K0M0O0Q0S\000\000", 6, 12, 4);

821 
	`x3
("\000.\000*\000(0\3250\251\000)0\3630\3730\336\000(0\363\000(\000)0\2670\3450\277\000)0\2440\363\000\000", "0\3250\2510\3630\3730\3360\3630\2670\3450\2770\2440\363\000\000", 10, 18, 2);

822 
	`x2
("\000(\000^0B\000)\000\000", "0B\000\000", 0, 2);

823 
	`x3
("\000(0B\000)\000|\000(0B\000)\000\000", "0D0B\000\000", 2, 4, 1);

824 
	`x3
("\000(\000^0B\000)\000|\000(0B\000)\000\000", "0D0B\000\000", 2, 4, 2);

825 
	`x3
("\000(0B\000?\000)\000\000", "0B0B0B\000\000", 0, 2, 1);

826 
	`x3
("\000(0~\000*\000)\000\000", "0~0~0~\000\000", 0, 6, 1);

827 
	`x3
("\000(0h\000*\000)\000\000", "\000\000", 0, 0, 1);

828 
	`x3
("\000(0\213\000+\000)\000\000", "0\2130\2130\2130\2130\2130\2130\213\000\000", 0, 14, 1);

829 
	`x3
("\000(0u\000+\000|0x\000*\000)\000\000", "0u0u0u0x0x\000\000", 0, 6, 1);

830 
	`x3
("\000(0B\000+\000|0D\000?\000)\000\000", "0D0D0D0B0B\000\000", 0, 2, 1);

831 
	`x3
("\000(0B0D0F\000)\000?\000\000", "0B0D0F\000\000", 0, 6, 1);

832 
	`x3
("\000(0B0D0F\000)\000*\000\000", "0B0D0F\000\000", 0, 6, 1);

833 
	`x3
("\000(0B0D0F\000)\000+\000\000", "0B0D0F\000\000", 0, 6, 1);

834 
	`x3
("\000(0U0W0Y\000|0B0D0F\000)\000+\000\000", "0B0D0F\000\000", 0, 6, 1);

835 
	`x3
("\000(\000[0j0k0l\000]\000[0K0M0O\000]\000|0K0M0O\000)\000+\000\000", "0K0M0O\000\000", 0, 6, 1);

836 
	`x3
("\000(\000(\000?\000i\000:0B0D0F\000)\000)\000\000", "0B0D0F\000\000", 0, 6, 1);

837 
	`x3
("\000(\000(\000?\000m\000:0B\000.0F\000)\000)\000\000", "0B\000\0120F\000\000", 0, 6, 1);

838 
	`x3
("\000(\000(\000?\000=0B0\223\000)0B\000)\000\000", "0B0\2230D\000\000", 0, 2, 1);

839 
	`x3
("0B0D0F\000|\000(\000.0B0D0H\000)\000\000", "0\2230B0D0H\000\000", 0, 8, 1);

840 
	`x3
("0B\000*\000(\000.\000)\000\000", "0B0B0B0B0\223\000\000", 8, 10, 1);

841 
	`x3
("0B\000*\000?\000(\000.\000)\000\000", "0B0B0B0B0\223\000\000", 0, 2, 1);

842 
	`x3
("0B\000*\000?\000(0\223\000)\000\000", "0B0B0B0B0\223\000\000", 8, 10, 1);

843 
	`x3
("\000[0D0F0H\000]0B\000*\000(\000.\000)\000\000", "0H0B0B0B0B0\223\000\000", 10, 12, 1);

844 
	`x3
("\000(\000\134\000A0D0D\000)0F0F\000\000", "0D0D0F0F\000\000", 0, 4, 1);

845 
	`n
("\000(\000\134\000A0D0D\000)0F0F\000\000", "0\2230D0D0F0F\000\000");

846 
	`x3
("\000(\000^0D0D\000)0F0F\000\000", "0D0D0F0F\000\000", 0, 4, 1);

847 
	`n
("\000(\000^0D0D\000)0F0F\000\000", "0\2230D0D0F0F\000\000");

848 
	`x3
("0\2150\215\000(0\2130\213\000$\000)\000\000", "0\2150\2150\2130\213\000\000", 4, 8, 1);

849 
	`n
("0\2150\215\000(0\2130\213\000$\000)\000\000", "0\2150\2150\2130\2130\213\000\000");

850 
	`x2
("\000(q!\000)\000\134\0001\000\000", "q!q!\000\000", 0, 4);

851 
	`n
("\000(q!\000)\000\134\0001\000\000", "q!kf\000\000");

852 
	`x2
("\000(zz\000?\000)\000\134\0001\000\000", "zzzz\000\000", 0, 4);

853 
	`x2
("\000(zz\000?\000?\000)\000\134\0001\000\000", "zzzz\000\000", 0, 0);

854 
	`x2
("\000(zz\000*\000)\000\134\0001\000\000", "zzzzzzzzzz\000\000", 0, 8);

855 
	`x3
("\000(zz\000*\000)\000\134\0001\000\000", "zzzzzzzzzz\000\000", 0, 4, 1);

856 
	`x2
("0B\000(0D\000*\000)\000\134\0001\000\000", "0B0D0D0D0D\000\000", 0, 10);

857 
	`x2
("0B\000(0D\000*\000)\000\134\0001\000\000", "0B0D\000\000", 0, 2);

858 
	`x2
("\000(0B\000*\000)\000(0D\000*\000)\000\134\0001\000\134\0002\000\000", "0B0B0B0D0D0B0B0B0D0D\000\000", 0, 20);

859 
	`x2
("\000(0B\000*\000)\000(0D\000*\000)\000\134\0002\000\000", "0B0B0B0D0D0D0D\000\000", 0, 14);

860 
	`x3
("\000(0B\000*\000)\000(0D\000*\000)\000\134\0002\000\000", "0B0B0B0D0D0D0D\000\000", 6, 10, 2);

861 
	`x2
("\000(\000(\000(\000(\000(\000(\000(0}\000*\000)0z\000)\000)\000)\000)\000)\000)0t\000\134\0007\000\000", "0}0}0}0z0t0}0}0}\000\000", 0, 16);

862 
	`x3
("\000(\000(\000(\000(\000(\000(\000(0}\000*\000)0z\000)\000)\000)\000)\000)\000)0t\000\134\0007\000\000", "0}0}0}0z0t0}0}0}\000\000", 0, 6, 7);

863 
	`x2
("\000(0o\000)\000(0r\000)\000(0u\000)\000\134\0002\000\134\0001\000\134\0003\000\000", "0o0r0u0r0o0u\000\000", 0, 12);

864 
	`x2
("\000(\000[0M\000-0Q\000]\000)\000\134\0001\000\000", "0O0O\000\000", 0, 4);

865 
	`x2
("\000(\000\134\000w\000\134\000d\000\134\000s\000)\000\134\0001\000\000", "0B\0005\000 0B\0005\000 \000\000", 0, 12);

866 
	`n
("\000(\000\134\000w\000\134\000d\000\134\000s\000)\000\134\0001\000\000", "0B\0005\000 0B\0005\000\000");

867 
	`x2
("\000(\212\260\377\037\000|\000[0B\000-0F\000]\000{\0003\000}\000)\000\134\0001\000\000", "\212\260\377\037\212\260\377\037\000\000", 0, 8);

868 
	`x2
("\000.\000.\000.\000(\212\260\377\037\000|\000[0B\000-0F\000]\000{\0003\000}\000)\000\134\0001\000\000", "0B\000a0B\212\260\377\037\212\260\377\037\000\000", 0, 14);

869 
	`x2
("\000(\212\260\377\037\000|\000[0B\000-0F\000]\000{\0003\000}\000)\000\134\0001\000\000", "0F0D0F0F0D0F\000\000", 0, 12);

870 
	`x2
("\000(\000^0S\000)\000\134\0001\000\000", "0S0S\000\000", 0, 4);

871 
	`n
("\000(\000^0\200\000)\000\134\0001\000\000", "0\2010\2000\200\000\000");

872 
	`n
("\000(0B\000$\000)\000\134\0001\000\000", "0B0B\000\000");

873 
	`n
("\000(0B0D\000\134\000Z\000)\000\134\0001\000\000", "0B0D\000\000");

874 
	`x2
("\000(0B\000*\000\134\000Z\000)\000\134\0001\000\000", "0B\000\000", 2, 2);

875 
	`x2
("\000.\000(0B\000*\000\134\000Z\000)\000\134\0001\000\000", "0D0B\000\000", 2, 4);

876 
	`x3
("\000(\000.\000(0\2040D0\206\000)\000\134\0002\000)\000\000", "\000z0\2040D0\2060\2040D0\206\000\000", 0, 14, 1);

877 
	`x3
("\000(\000.\000(\000.\000.\000\134\000d\000.\000)\000\134\0002\000)\000\000", "0B\0001\0002\0003\0004\0001\0002\0003\0004\000\000", 0, 18, 1);

878 
	`x2
("\000(\000(\000?\000i\000:0B\000v0Z\000)\000)\000\134\0001\000\000", "0B\000v0Z0B\000v0Z\000\000", 0, 12);

879 
	`x2
("\000(\000?\000<a\0320K\000>Y\011\000|\000\134\000(\000\134\000g\000<a\0320K\000>\000\134\000)\000)\000\000", "\000(\000(\000(\000(\000(\000(Y\011\000)\000)\000)\000)\000)\000)\000\000", 0, 26);

880 
	`x2
("\000\134\000A\000(\000?\000:\000\134\000g\000<\226?\000_\0001\000>\000|\000\134\000g\000<N\221\000_\0002\000>\000|\000\134\000z}BN\206\000 \000 \000(\000?\000<\226?\000_\0001\000>\211\263\000|\201\352\000\134\000g\000<N\221\000_\0002\000>\201\352\000)\000(\000?\000<N\221\000_\0002\000>W(\000|\203\351\205\251\000\134\000g\000<\226?\000_\0001\000>\203\351\205\251\000)\000)\000$\000\000", "\203\351\205\251\201\352\203\351\205\251\201\352W(\201\352\203\351\205\251\201\352\203\351\205\251\000\000", 0, 26);

881 
	`x2
("\000[\000[0r0u\000]\000]\000\000", "0u\000\000", 0, 2);

882 
	`x2
("\000[\000[0D0J0F\000]0K\000]\000\000", "0K\000\000", 0, 2);

883 
	`n
("\000[\000[\000^0B\000]\000]\000\000", "0B\000\000");

884 
	`n
("\000[\000^\000[0B\000]\000]\000\000", "0B\000\000");

885 
	`x2
("\000[\000^\000[\000^0B\000]\000]\000\000", "0B\000\000", 0, 2);

886 
	`x2
("\000[\000[0K0M0O\000]\000&\000&0M0O\000]\000\000", "0O\000\000", 0, 2);

887 
	`n
("\000[\000[0K0M0O\000]\000&\000&0M0O\000]\000\000", "0K\000\000");

888 
	`n
("\000[\000[0K0M0O\000]\000&\000&0M0O\000]\000\000", "0Q\000\000");

889 
	`x2
("\000[0B\000-0\223\000&\000&0D\000-0\222\000&\000&0F\000-0\221\000]\000\000", "0\221\000\000", 0, 2);

890 
	`n
("\000[\000^0B\000-0\223\000&\000&0D\000-0\222\000&\000&0F\000-0\221\000]\000\000", "0\221\000\000");

891 
	`x2
("\000[\000[\000^0B\000&\000&0B\000]\000&\000&0B\000-0\223\000]\000\000", "0D\000\000", 0, 2);

892 
	`n
("\000[\000[\000^0B\000&\000&0B\000]\000&\000&0B\000-0\223\000]\000\000", "0B\000\000");

893 
	`x2
("\000[\000[\000^0B\000-0\223\000&\000&0D0F0H0J\000]\000&\000&\000[\000^0F\000-0K\000]\000]\000\000", "0M\000\000", 0, 2);

894 
	`n
("\000[\000[\000^0B\000-0\223\000&\000&0D0F0H0J\000]\000&\000&\000[\000^0F\000-0K\000]\000]\000\000", "0D\000\000");

895 
	`x2
("\000[\000^\000[\000^0B0D0F\000]\000&\000&\000[\000^0F0H0J\000]\000]\000\000", "0F\000\000", 0, 2);

896 
	`x2
("\000[\000^\000[\000^0B0D0F\000]\000&\000&\000[\000^0F0H0J\000]\000]\000\000", "0H\000\000", 0, 2);

897 
	`n
("\000[\000^\000[\000^0B0D0F\000]\000&\000&\000[\000^0F0H0J\000]\000]\000\000", "0K\000\000");

898 
	`x2
("\000[0B\000-\000&\000&\000-0B\000]\000\000", "\000-\000\000", 0, 2);

899 
	`x2
("\000[\000^\000[\000^\000a\000-\000z0B0D0F\000]\000&\000&\000[\000^\000b\000c\000d\000e\000f\000g0F0H0J\000]\000q\000-\000w\000]\000\000", "0H\000\000", 0, 2);

900 
	`x2
("\000[\000^\000[\000^\000a\000-\000z0B0D0F\000]\000&\000&\000[\000^\000b\000c\000d\000e\000f\000g0F0H0J\000]\000g\000-\000w\000]\000\000", "\000f\000\000", 0, 2);

901 
	`x2
("\000[\000^\000[\000^\000a\000-\000z0B0D0F\000]\000&\000&\000[\000^\000b\000c\000d\000e\000f\000g0F0H0J\000]\000g\000-\000w\000]\000\000", "\000g\000\000", 0, 2);

902 
	`n
("\000[\000^\000[\000^\000a\000-\000z0B0D0F\000]\000&\000&\000[\000^\000b\000c\000d\000e\000f\000g0F0H0J\000]\000g\000-\000w\000]\000\000", "\0002\000\000");

903 
	`x2
("\000a\000<\000b\000>0\3200\3740\2700\3470\3630n0\3000\2460\3630\3550\3740\311\000<\000\134\000/\000b\000>\000\000", "\000a\000<\000b\000>0\3200\3740\2700\3470\3630n0\3000\2460\3630\3550\3740\311\000<\000/\000b\000>\000\000", 0, 40);

904 
	`x2
("\000.\000<\000b\000>0\3200\3740\2700\3470\3630n0\3000\2460\3630\3550\3740\311\000<\000\134\000/\000b\000>\000\000", "\000a\000<\000b\000>0\3200\3740\2700\3470\3630n0\3000\2460\3630\3550\3740\311\000<\000/\000b\000>\000\000", 0, 40);

905 
	`x2
("\000^\000\\\000p\000{\000K\000a\000t\000a\000k\000a\000n\000a\000}\000$\000\000", "\060\277\000\000", 0, 2);

906 
	`Ârötf
(
°dout
,

908 
nsucc
, 
nÁû
, 
√º‹
, 
	`⁄ig_vîsi⁄
());

910 #i‚de‡
POSIX_TEST


911 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1);

912 
	`⁄ig_íd
();

915  ((
nÁû
 =0 && 
√º‹
 == 0) ? 0 : -1);

916 
	}
}

	@modules/oniguruma/windows/testc.c

4 
	~"c⁄fig.h
"

5 #ifde‡
ONIG_ESCAPE_UCHAR_COLLISION


6 #unde‡
ONIG_ESCAPE_UCHAR_COLLISION


8 
	~<°dio.h
>

10 #ifde‡
POSIX_TEST


11 
	~"⁄igposix.h
"

13 
	~"⁄iguruma.h
"

16 #ifde‡
HAVE_STRING_H


17 
	~<°rög.h
>

19 
	~<°rögs.h
>

22 
	#SLEN
(
s
Ë
	`°æí
(s)

	)

24 
	gnsucc
 = 0;

25 
	gnÁû
 = 0;

26 
	g√º‹
 = 0;

28 
FILE
* 
	gîr_fûe
;

30 #i‚de‡
POSIX_TEST


31 
OnigRegi⁄
* 
	gªgi⁄
;

34 
	$xx
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
, 
nŸ
)

36 
r
;

38 #ifde‡
POSIX_TEST


39 
ªgex_t
 
ªg
;

40 
buf
[200];

41 
ªgm©ch_t
 
pm©ch
[25];

43 
r
 = 
	`ªgcomp
(&
ªg
, 
∑âîn
, 
REG_EXTENDED
 | 
REG_NEWLINE
);

44 i‡(
r
) {

45 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

46 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

47 
√º‹
++;

51 
r
 = 
	`ªgexec
(&
ªg
, 
°r
,Ñeg.
ª_nsub
 + 1, 
pm©ch
, 0);

52 i‡(
r
 !0 &&Ñ !
REG_NOMATCH
) {

53 
	`ªgîr‹
(
r
, &
ªg
, 
buf
, (buf));

54 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
buf
);

55 
√º‹
++;

59 i‡(
r
 =
REG_NOMATCH
) {

60 i‡(
nŸ
) {

61 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

62 
nsucc
++;

65 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
∑âîn
, 
°r
);

66 
nÁû
++;

70 i‡(
nŸ
) {

71 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

72 
nÁû
++;

75 i‡(
pm©ch
[
mem
].
rm_so
 =
‰om
 &&Öm©ch[mem].
rm_eo
 =
to
) {

76 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
∑âîn
, 
°r
);

77 
nsucc
++;

80 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
∑âîn
, 
°r
,

81 
‰om
, 
to
, 
pm©ch
[
mem
].
rm_so
,Öm©ch[mem].
rm_eo
);

82 
nÁû
++;

86 
	`ªg‰ì
(&
ªg
);

89 
ªgex_t
* 
ªg
;

90 
OnigEº‹Info
 
eöfo
;

92 
r
 = 
	`⁄ig_√w
(&
ªg
, (
UCh¨
* )
∑âîn
, (UCh¨* )’©ã∫ + 
	`SLEN
(pattern)),

93 
ONIG_OPTION_DEFAULT
, 
ONIG_ENCODING_SJIS
, 
ONIG_SYNTAX_DEFAULT
, &
eöfo
);

94 i‡(
r
) {

95 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

96 
	`⁄ig_îr‹_code_to_°r
((
UCh¨
* )
s
, 
r
, &
eöfo
);

97 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

98 
√º‹
++;

102 
r
 = 
	`⁄ig_£¨ch
(
ªg
, (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`SLEN
(str)),

103 (
UCh¨
* )
°r
, (UCh¨* )(°∏+ 
	`SLEN
(str)),

104 
ªgi⁄
, 
ONIG_OPTION_NONE
);

105 i‡(
r
 < 
ONIG_MISMATCH
) {

106 
s
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

107 
	`⁄ig_îr‹_code_to_°r
((
UCh¨
* )
s
, 
r
);

108 
	`Ârötf
(
îr_fûe
, "ERROR: %s\n", 
s
);

109 
√º‹
++;

113 i‡(
r
 =
ONIG_MISMATCH
) {

114 i‡(
nŸ
) {

115 
	`Ârötf
(
°dout
, "OK(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

116 
nsucc
++;

119 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s'\n", 
∑âîn
, 
°r
);

120 
nÁû
++;

124 i‡(
nŸ
) {

125 
	`Ârötf
(
°dout
, "FAIL(N): /%s/ '%s'\n", 
∑âîn
, 
°r
);

126 
nÁû
++;

129 i‡(
ªgi⁄
->
beg
[
mem
] =
‰om
 &&Ñegi⁄->
íd
[mem] =
to
) {

130 
	`Ârötf
(
°dout
, "OK: /%s/ '%s'\n", 
∑âîn
, 
°r
);

131 
nsucc
++;

134 
	`Ârötf
(
°dout
, "FAIL: /%s/ '%s' %d-%d : %d-%d\n", 
∑âîn
, 
°r
,

135 
‰om
, 
to
, 
ªgi⁄
->
beg
[
mem
],Ñegi⁄->
íd
[mem]);

136 
nÁû
++;

140 
	`⁄ig_‰ì
(
ªg
);

142 
	}
}

144 
	$x2
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
)

146 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 0, 0);

147 
	}
}

149 
	$x3
(* 
∑âîn
, * 
°r
, 
‰om
, 
to
, 
mem
)

151 
	`xx
(
∑âîn
, 
°r
, 
‰om
, 
to
, 
mem
, 0);

152 
	}
}

154 
	$n
(* 
∑âîn
, * 
°r
)

156 
	`xx
(
∑âîn
, 
°r
, 0, 0, 0, 1);

157 
	}
}

159 
	$maö
(
¨gc
, * 
¨gv
[])

161 #i‚de‡
POSIX_TEST


162 
OnigEncodög
 
u£_ícs
[] = { 
ONIG_ENCODING_SJIS
 };

164 
	`⁄ig_öôülize
(
u£_ícs
, (use_encs)/(use_encs[0]));

167 
îr_fûe
 = 
°dout
;

169 #ifde‡
POSIX_TEST


170 
	`ªg_£t_ícodög
(
REG_POSIX_ENCODING_SJIS
);

172 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

175 
	`x2
("", "", 0, 0);

176 
	`x2
("^", "", 0, 0);

177 
	`x2
("$", "", 0, 0);

178 
	`x2
("\\G", "", 0, 0);

179 
	`x2
("\\A", "", 0, 0);

180 
	`x2
("\\Z", "", 0, 0);

181 
	`x2
("\\z", "", 0, 0);

182 
	`x2
("^$", "", 0, 0);

183 
	`x2
("\\ca", "\001", 0, 1);

184 
	`x2
("\\C-b", "\002", 0, 1);

185 
	`x2
("\\c\\\\", "\034", 0, 1);

186 
	`x2
("q[\\c\\\\]", "q\034", 0, 2);

187 
	`x2
("", "a", 0, 0);

188 
	`x2
("a", "a", 0, 1);

189 
	`x2
("\\x61", "a", 0, 1);

190 
	`x2
("aa", "aa", 0, 2);

191 
	`x2
("aaa", "aaa", 0, 3);

192 
	`x2
("aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", 0, 35);

193 
	`x2
("ab", "ab", 0, 2);

194 
	`x2
("b", "ab", 1, 2);

195 
	`x2
("bc", "abc", 1, 3);

196 
	`x2
("(?i:#RET#)", "#INS##RET#", 5, 10);

197 
	`x2
("\\17", "\017", 0, 1);

198 
	`x2
("\\x1f", "\x1f", 0, 1);

199 
	`x2
("a(?#....\\\\JJJJ)b", "ab", 0, 2);

200 
	`x2
("(?x) G (o O(?-x)oO) g L", "GoOoOgLe", 0, 7);

201 
	`x2
(".", "a", 0, 1);

202 
	`n
(".", "");

203 
	`x2
("..", "ab", 0, 2);

204 
	`x2
("\\w", "e", 0, 1);

205 
	`n
("\\W", "e");

206 
	`x2
("\\s", " ", 0, 1);

207 
	`x2
("\\S", "b", 0, 1);

208 
	`x2
("\\d", "4", 0, 1);

209 
	`n
("\\D", "4");

210 
	`x2
("\\b", "z ", 0, 0);

211 
	`x2
("\\b", " z", 1, 1);

212 
	`x2
("\\B", "zz ", 1, 1);

213 
	`x2
("\\B", "z ", 2, 2);

214 
	`x2
("\\B", " z", 0, 0);

215 
	`x2
("[ab]", "b", 0, 1);

216 
	`n
("[ab]", "c");

217 
	`x2
("[a-z]", "t", 0, 1);

218 
	`n
("[^a]", "a");

219 
	`x2
("[^a]", "\n", 0, 1);

220 
	`x2
("[]]", "]", 0, 1);

221 
	`n
("[^]]", "]");

222 
	`x2
("[\\^]+", "0^^1", 1, 3);

223 
	`x2
("[b-]", "b", 0, 1);

224 
	`x2
("[b-]", "-", 0, 1);

225 
	`x2
("[\\w]", "z", 0, 1);

226 
	`n
("[\\w]", " ");

227 
	`x2
("[\\W]", "b$", 1, 2);

228 
	`x2
("[\\d]", "5", 0, 1);

229 
	`n
("[\\d]", "e");

230 
	`x2
("[\\D]", "t", 0, 1);

231 
	`n
("[\\D]", "3");

232 
	`x2
("[\\s]", " ", 0, 1);

233 
	`n
("[\\s]", "a");

234 
	`x2
("[\\S]", "b", 0, 1);

235 
	`n
("[\\S]", " ");

236 
	`x2
("[\\w\\d]", "2", 0, 1);

237 
	`n
("[\\w\\d]", " ");

238 
	`x2
("[[:upper:]]", "B", 0, 1);

239 
	`x2
("[*[:xdigit:]+]", "+", 0, 1);

240 
	`x2
("[*[:xdigit:]+]", "GHIKK-9+*", 6, 7);

241 
	`x2
("[*[:xdigit:]+]", "-@^+", 3, 4);

242 
	`n
("[[:upper]]", "A");

243 
	`x2
("[[:upper]]", ":", 0, 1);

244 
	`x2
("[\\044-\\047]", "\046", 0, 1);

245 
	`x2
("[\\x5a-\\x5c]", "\x5b", 0, 1);

246 
	`x2
("[\\x6A-\\x6D]", "\x6c", 0, 1);

247 
	`n
("[\\x6A-\\x6D]", "\x6E");

248 
	`n
("^[0-9A-F]+ 0+ UNDEF ", "75F 00000000 SECT14AÇotype () External | _rb_apply");

249 
	`x2
("[\\[]", "[", 0, 1);

250 
	`x2
("[\\]]", "]", 0, 1);

251 
	`x2
("[&]", "&", 0, 1);

252 
	`x2
("[[ab]]", "b", 0, 1);

253 
	`x2
("[[ab]c]", "c", 0, 1);

254 
	`n
("[[^a]]", "a");

255 
	`n
("[^[a]]", "a");

256 
	`x2
("[[ab]&&bc]", "b", 0, 1);

257 
	`n
("[[ab]&&bc]", "a");

258 
	`n
("[[ab]&&bc]", "c");

259 
	`x2
("[a-z&&b-y&&c-x]", "w", 0, 1);

260 
	`n
("[^a-z&&b-y&&c-x]", "w");

261 
	`x2
("[[^a&&a]&&a-z]", "b", 0, 1);

262 
	`n
("[[^a&&a]&&a-z]", "a");

263 
	`x2
("[[^a-z&&bcdef]&&[^c-g]]", "h", 0, 1);

264 
	`n
("[[^a-z&&bcdef]&&[^c-g]]", "c");

265 
	`x2
("[^[^abc]&&[^cde]]", "c", 0, 1);

266 
	`x2
("[^[^abc]&&[^cde]]", "e", 0, 1);

267 
	`n
("[^[^abc]&&[^cde]]", "f");

268 
	`x2
("[a-&&-a]", "-", 0, 1);

269 
	`n
("[a\\-&&\\-a]", "&");

270 
	`n
("\\wabc", "ábc");

271 
	`x2
("a\\Wbc", "a bc", 0, 4);

272 
	`x2
("a.b.c", "aabbc", 0, 5);

273 
	`x2
(".\\wb\\W..c", "abb bcc", 0, 7);

274 
	`x2
("\\s\\wzzz", " zzzz", 0, 5);

275 
	`x2
("aa.b", "aabb", 0, 4);

276 
	`n
(".a", "ab");

277 
	`x2
(".a", "aa", 0, 2);

278 
	`x2
("^a", "a", 0, 1);

279 
	`x2
("^a$", "a", 0, 1);

280 
	`x2
("^\\w$", "a", 0, 1);

281 
	`n
("^\\w$", " ");

282 
	`x2
("^\\wab$", "zab", 0, 3);

283 
	`x2
("^\\wabcdef$", "zabcdef", 0, 7);

284 
	`x2
("^\\w...def$", "zabcdef", 0, 7);

285 
	`x2
("\\w\\w\\s\\Waaa\\d", "aaáaa4", 0, 8);

286 
	`x2
("\\A\\Z", "", 0, 0);

287 
	`x2
("\\Axyz", "xyz", 0, 3);

288 
	`x2
("xyz\\Z", "xyz", 0, 3);

289 
	`x2
("xyz\\z", "xyz", 0, 3);

290 
	`x2
("a\\Z", "a", 0, 1);

291 
	`x2
("\\Gaz", "az", 0, 2);

292 
	`n
("\\Gz", "bza");

293 
	`n
("az\\G", "az");

294 
	`n
("az\\A", "az");

295 
	`n
("a\\Az", "az");

296 
	`x2
("\\^\\$", "^$", 0, 2);

297 
	`x2
("^x?y", "xy", 0, 2);

298 
	`x2
("^(x?y)", "xy", 0, 2);

299 
	`x2
("\\w", "_", 0, 1);

300 
	`n
("\\W", "_");

301 
	`x2
("(?=z)z", "z", 0, 1);

302 
	`n
("(?=z).", "a");

303 
	`x2
("(?!z)a", "a", 0, 1);

304 
	`n
("(?!z)a", "z");

305 
	`x2
("(?i:a)", "a", 0, 1);

306 
	`x2
("(?i:a)", "A", 0, 1);

307 
	`x2
("(?i:A)", "a", 0, 1);

308 
	`n
("(?i:A)", "b");

309 
	`x2
("(?i:[A-Z])", "a", 0, 1);

310 
	`x2
("(?i:[f-m])", "H", 0, 1);

311 
	`x2
("(?i:[f-m])", "h", 0, 1);

312 
	`n
("(?i:[f-m])", "e");

313 
	`x2
("(?i:[A-c])", "D", 0, 1);

314 
	`n
("(?i:[^a-z])", "A");

315 
	`n
("(?i:[^a-z])", "a");

316 
	`x2
("(?i:[!-k])", "Z", 0, 1);

317 
	`x2
("(?i:[!-k])", "7", 0, 1);

318 
	`x2
("(?i:[T-}])", "b", 0, 1);

319 
	`x2
("(?i:[T-}])", "{", 0, 1);

320 
	`x2
("(?i:\\?a)", "?A", 0, 2);

321 
	`x2
("(?i:\\*A)", "*a", 0, 2);

322 
	`n
(".", "\n");

323 
	`x2
("(?m:.)", "\n", 0, 1);

324 
	`x2
("(?m:a.)", "a\n", 0, 2);

325 
	`x2
("(?m:.b)", "a\nb", 1, 3);

326 
	`x2
(".*abc", "dddabdd\nddabc", 8, 13);

327 
	`x2
("(?m:.*abc)", "dddabddabc", 0, 10);

328 
	`n
("(?i)(?-i)a", "A");

329 
	`n
("(?i)(?-i:a)", "A");

330 
	`x2
("a?", "", 0, 0);

331 
	`x2
("a?", "b", 0, 0);

332 
	`x2
("a?", "a", 0, 1);

333 
	`x2
("a*", "", 0, 0);

334 
	`x2
("a*", "a", 0, 1);

335 
	`x2
("a*", "aaa", 0, 3);

336 
	`x2
("a*", "baaaa", 0, 0);

337 
	`n
("a+", "");

338 
	`x2
("a+", "a", 0, 1);

339 
	`x2
("a+", "aaaa", 0, 4);

340 
	`x2
("a+", "aabbb", 0, 2);

341 
	`x2
("a+", "baaaa", 1, 5);

342 
	`x2
(".?", "", 0, 0);

343 
	`x2
(".?", "f", 0, 1);

344 
	`x2
(".?", "\n", 0, 0);

345 
	`x2
(".*", "", 0, 0);

346 
	`x2
(".*", "abcde", 0, 5);

347 
	`x2
(".+", "z", 0, 1);

348 
	`x2
(".+", "zdswer\n", 0, 6);

349 
	`x2
("(.*)a\\1f", "babfbac", 0, 4);

350 
	`x2
("(.*)a\\1f", "bacbabf", 3, 7);

351 
	`x2
("((.*)a\\2f)", "bacbabf", 3, 7);

352 
	`x2
("(.*)a\\1f", "baczzzzzz\nbazz\nzzzzbabf", 19, 23);

353 
	`x2
("a|b", "a", 0, 1);

354 
	`x2
("a|b", "b", 0, 1);

355 
	`x2
("|a", "a", 0, 0);

356 
	`x2
("(|a)", "a", 0, 0);

357 
	`x2
("ab|bc", "ab", 0, 2);

358 
	`x2
("ab|bc", "bc", 0, 2);

359 
	`x2
("z(?:ab|bc)", "zbc", 0, 3);

360 
	`x2
("a(?:ab|bc)c", "aabc", 0, 4);

361 
	`x2
("ab|(?:ac|az)", "az", 0, 2);

362 
	`x2
("a|b|c", "dc", 1, 2);

363 
	`x2
("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "pqr", 0, 2);

364 
	`n
("a|b|cd|efg|h|ijk|lmn|o|pq|rstuvwx|yz", "mn");

365 
	`x2
("a|^z", "ba", 1, 2);

366 
	`x2
("a|^z", "za", 0, 1);

367 
	`x2
("a|\\Gz", "bza", 2, 3);

368 
	`x2
("a|\\Gz", "za", 0, 1);

369 
	`x2
("a|\\Az", "bza", 2, 3);

370 
	`x2
("a|\\Az", "za", 0, 1);

371 
	`x2
("a|b\\Z", "ba", 1, 2);

372 
	`x2
("a|b\\Z", "b", 0, 1);

373 
	`x2
("a|b\\z", "ba", 1, 2);

374 
	`x2
("a|b\\z", "b", 0, 1);

375 
	`x2
("\\w|\\s", " ", 0, 1);

376 
	`n
("\\w|\\w", " ");

377 
	`x2
("\\w|%", "%", 0, 1);

378 
	`x2
("\\w|[&$]", "&", 0, 1);

379 
	`x2
("[b-d]|[^e-z]", "a", 0, 1);

380 
	`x2
("(?:a|[c-f])|bz", "dz", 0, 1);

381 
	`x2
("(?:a|[c-f])|bz", "bz", 0, 2);

382 
	`x2
("abc|(?=zz)..f", "zzf", 0, 3);

383 
	`x2
("abc|(?!zz)..f", "abf", 0, 3);

384 
	`x2
("(?=za)..a|(?=zz)..a", "zza", 0, 3);

385 
	`n
("(?>a|abd)c", "abdc");

386 
	`x2
("(?>abd|a)c", "abdc", 0, 4);

387 
	`x2
("a?|b", "a", 0, 1);

388 
	`x2
("a?|b", "b", 0, 0);

389 
	`x2
("a?|b", "", 0, 0);

390 
	`x2
("a*|b", "aa", 0, 2);

391 
	`x2
("a*|b*", "ba", 0, 0);

392 
	`x2
("a*|b*", "ab", 0, 1);

393 
	`x2
("a+|b*", "", 0, 0);

394 
	`x2
("a+|b*", "bbb", 0, 3);

395 
	`x2
("a+|b*", "abbb", 0, 1);

396 
	`n
("a+|b+", "");

397 
	`x2
("(a|b)?", "b", 0, 1);

398 
	`x2
("(a|b)*", "ba", 0, 2);

399 
	`x2
("(a|b)+", "bab", 0, 3);

400 
	`x2
("(ab|ca)+", "caabbc", 0, 4);

401 
	`x2
("(ab|ca)+", "aabca", 1, 5);

402 
	`x2
("(ab|ca)+", "abzca", 0, 2);

403 
	`x2
("(a|bab)+", "ababa", 0, 5);

404 
	`x2
("(a|bab)+", "ba", 1, 2);

405 
	`x2
("(a|bab)+", "baaaba", 1, 4);

406 
	`x2
("(?:a|b)(?:a|b)", "ab", 0, 2);

407 
	`x2
("(?:a*|b*)(?:a*|b*)", "aaabbb", 0, 3);

408 
	`x2
("(?:a*|b*)(?:a+|b+)", "aaabbb", 0, 6);

409 
	`x2
("(?:a+|b+){2}", "aaabbb", 0, 6);

410 
	`x2
("h{0,}", "hhhh", 0, 4);

411 
	`x2
("(?:a+|b+){1,2}", "aaabbb", 0, 6);

412 
	`n
("ax{2}*a", "0axxxa1");

413 
	`n
("a.{0,2}a", "0aXXXa0");

414 
	`n
("a.{0,2}?a", "0aXXXa0");

415 
	`n
("a.{0,2}?a", "0aXXXXa0");

416 
	`x2
("^a{2,}?a$", "aaa", 0, 3);

417 
	`x2
("^[a-z]{2,}?$", "aaa", 0, 3);

418 
	`x2
("(?:a+|\\Ab*)cc", "cc", 0, 2);

419 
	`n
("(?:a+|\\Ab*)cc", "abcc");

420 
	`x2
("(?:^a+|b+)*c", "aabbbabc", 6, 8);

421 
	`x2
("(?:^a+|b+)*c", "aabbbbc", 0, 7);

422 
	`x2
("a|(?i)c", "C", 0, 1);

423 
	`x2
("(?i)c|a", "C", 0, 1);

424 
	`x2
("(?i)c|a", "A", 0, 1);

425 
	`x2
("(?i:c)|a", "C", 0, 1);

426 
	`n
("(?i:c)|a", "A");

427 
	`x2
("[abc]?", "abc", 0, 1);

428 
	`x2
("[abc]*", "abc", 0, 3);

429 
	`x2
("[^abc]*", "abc", 0, 0);

430 
	`n
("[^abc]+", "abc");

431 
	`x2
("a?\?", "aaa", 0, 0);

432 
	`x2
("ba?\?b", "bab", 0, 3);

433 
	`x2
("a*?", "aaa", 0, 0);

434 
	`x2
("ba*?", "baa", 0, 1);

435 
	`x2
("ba*?b", "baab", 0, 4);

436 
	`x2
("a+?", "aaa", 0, 1);

437 
	`x2
("ba+?", "baa", 0, 2);

438 
	`x2
("ba+?b", "baab", 0, 4);

439 
	`x2
("(?:a?)?\?", "a", 0, 0);

440 
	`x2
("(?:a?\?)?", "a", 0, 0);

441 
	`x2
("(?:a?)+?", "aaa", 0, 1);

442 
	`x2
("(?:a+)?\?", "aaa", 0, 0);

443 
	`x2
("(?:a+)?\?b", "aaab", 0, 4);

444 
	`x2
("(?:ab)?{2}", "", 0, 0);

445 
	`x2
("(?:ab)?{2}", "ababa", 0, 4);

446 
	`x2
("(?:ab)*{0}", "ababa", 0, 0);

447 
	`x2
("(?:ab){3,}", "abababab", 0, 8);

448 
	`n
("(?:ab){3,}", "abab");

449 
	`x2
("(?:ab){2,4}", "ababab", 0, 6);

450 
	`x2
("(?:ab){2,4}", "ababababab", 0, 8);

451 
	`x2
("(?:ab){2,4}?", "ababababab", 0, 4);

452 
	`x2
("(?:ab){,}", "ab{,}", 0, 5);

453 
	`x2
("(?:abc)+?{2}", "abcabcabc", 0, 6);

454 
	`x2
("(?:X*)(?i:xa)", "XXXa", 0, 4);

455 
	`x2
("(d+)([^abc]z)", "dddz", 0, 4);

456 
	`x2
("([^abc]*)([^abc]z)", "dddz", 0, 4);

457 
	`x2
("(\\w+)(\\wz)", "dddz", 0, 4);

458 
	`x3
("(a)", "a", 0, 1, 1);

459 
	`x3
("(ab)", "ab", 0, 2, 1);

460 
	`x2
("((ab))", "ab", 0, 2);

461 
	`x3
("((ab))", "ab", 0, 2, 1);

462 
	`x3
("((ab))", "ab", 0, 2, 2);

463 
	`x3
("((((((((((((((((((((ab))))))))))))))))))))", "ab", 0, 2, 20);

464 
	`x3
("(ab)(cd)", "abcd", 0, 2, 1);

465 
	`x3
("(ab)(cd)", "abcd", 2, 4, 2);

466 
	`x3
("()(a)bc(def)ghijk", "abcdefghijk", 3, 6, 3);

467 
	`x3
("(()(a)bc(def)ghijk)", "abcdefghijk", 3, 6, 4);

468 
	`x2
("(^a)", "a", 0, 1);

469 
	`x3
("(a)|(a)", "ba", 1, 2, 1);

470 
	`x3
("(^a)|(a)", "ba", 1, 2, 2);

471 
	`x3
("(a?)", "aaa", 0, 1, 1);

472 
	`x3
("(a*)", "aaa", 0, 3, 1);

473 
	`x3
("(a*)", "", 0, 0, 1);

474 
	`x3
("(a+)", "aaaaaaa", 0, 7, 1);

475 
	`x3
("(a+|b*)", "bbbaa", 0, 3, 1);

476 
	`x3
("(a+|b?)", "bbbaa", 0, 1, 1);

477 
	`x3
("(abc)?", "abc", 0, 3, 1);

478 
	`x3
("(abc)*", "abc", 0, 3, 1);

479 
	`x3
("(abc)+", "abc", 0, 3, 1);

480 
	`x3
("(xyz|abc)+", "abc", 0, 3, 1);

481 
	`x3
("([xyz][abc]|abc)+", "abc", 0, 3, 1);

482 
	`x3
("((?i:abc))", "AbC", 0, 3, 1);

483 
	`x2
("(abc)(?i:\\1)", "abcABC", 0, 6);

484 
	`x3
("((?m:a.c))", "a\nc", 0, 3, 1);

485 
	`x3
("((?=az)a)", "azb", 0, 1, 1);

486 
	`x3
("abc|(.abd)", "zabd", 0, 4, 1);

487 
	`x2
("(?:abc)|(ABC)", "abc", 0, 3);

488 
	`x3
("(?i:(abc))|(zzz)", "ABC", 0, 3, 1);

489 
	`x3
("a*(.)", "aaaaz", 4, 5, 1);

490 
	`x3
("a*?(.)", "aaaaz", 0, 1, 1);

491 
	`x3
("a*?(c)", "aaaac", 4, 5, 1);

492 
	`x3
("[bcd]a*(.)", "caaaaz", 5, 6, 1);

493 
	`x3
("(\\Abb)cc", "bbcc", 0, 2, 1);

494 
	`n
("(\\Abb)cc", "zbbcc");

495 
	`x3
("(^bb)cc", "bbcc", 0, 2, 1);

496 
	`n
("(^bb)cc", "zbbcc");

497 
	`x3
("cc(bb$)", "ccbb", 2, 4, 1);

498 
	`n
("cc(bb$)", "ccbbb");

499 
	`n
("(\\1)", "");

500 
	`n
("\\1(a)", "aa");

501 
	`n
("(a(b)\\1)\\2+", "ababb");

502 
	`n
("(?:(?:\\1|z)(a))+$", "zaa");

503 
	`x2
("(?:(?:\\1|z)(a))+$", "zaaa", 0, 4);

504 
	`x2
("(a)(?=\\1)", "aa", 0, 1);

505 
	`n
("(a)$|\\1", "az");

506 
	`x2
("(a)\\1", "aa", 0, 2);

507 
	`n
("(a)\\1", "ab");

508 
	`x2
("(a?)\\1", "aa", 0, 2);

509 
	`x2
("(a?\?)\\1", "aa", 0, 0);

510 
	`x2
("(a*)\\1", "aaaaa", 0, 4);

511 
	`x3
("(a*)\\1", "aaaaa", 0, 2, 1);

512 
	`x2
("a(b*)\\1", "abbbb", 0, 5);

513 
	`x2
("a(b*)\\1", "ab", 0, 1);

514 
	`x2
("(a*)(b*)\\1\\2", "aaabbaaabb", 0, 10);

515 
	`x2
("(a*)(b*)\\2", "aaabbbb", 0, 7);

516 
	`x2
("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 8);

517 
	`x3
("(((((((a*)b))))))c\\7", "aaabcaaa", 0, 3, 7);

518 
	`x2
("(a)(b)(c)\\2\\1\\3", "abcbac", 0, 6);

519 
	`x2
("([a-d])\\1", "cc", 0, 2);

520 
	`x2
("(\\w\\d\\s)\\1", "f5 f5 ", 0, 6);

521 
	`n
("(\\w\\d\\s)\\1", "f5 f5");

522 
	`x2
("(who|[a-c]{3})\\1", "whowho", 0, 6);

523 
	`x2
("...(who|[a-c]{3})\\1", "abcwhowho", 0, 9);

524 
	`x2
("(who|[a-c]{3})\\1", "cbccbc", 0, 6);

525 
	`x2
("(^a)\\1", "aa", 0, 2);

526 
	`n
("(^a)\\1", "baa");

527 
	`n
("(a$)\\1", "aa");

528 
	`n
("(ab\\Z)\\1", "ab");

529 
	`x2
("(a*\\Z)\\1", "a", 1, 1);

530 
	`x2
(".(a*\\Z)\\1", "ba", 1, 2);

531 
	`x3
("(.(abc)\\2)", "zabcabc", 0, 7, 1);

532 
	`x3
("(.(..\\d.)\\2)", "z12341234", 0, 9, 1);

533 
	`x2
("((?i:az))\\1", "AzAz", 0, 4);

534 
	`n
("((?i:az))\\1", "Azaz");

535 
	`x2
("(?<=a)b", "ab", 1, 2);

536 
	`n
("(?<=a)b", "bb");

537 
	`x2
("(?<=a|b)b", "bb", 1, 2);

538 
	`x2
("(?<=a|bc)b", "bcb", 2, 3);

539 
	`x2
("(?<=a|bc)b", "ab", 1, 2);

540 
	`x2
("(?<=a|bc||defghij|klmnopq|r)z", "rz", 1, 2);

541 
	`x2
("(a)\\g<1>", "aa", 0, 2);

542 
	`x2
("(?<!a)b", "cb", 1, 2);

543 
	`n
("(?<!a)b", "ab");

544 
	`x2
("(?<!a|bc)b", "bbb", 0, 1);

545 
	`n
("(?<!a|bc)z", "bcz");

546 
	`x2
("(?<name1>a)", "a", 0, 1);

547 
	`x2
("(?<name_2>ab)\\g<name_2>", "abab", 0, 4);

548 
	`x2
("(?<name_3>.zv.)\\k<name_3>", "azvbazvb", 0, 8);

549 
	`x2
("(?<=\\g<ab>)|-\\zEND (?<ab>XyZ)", "XyZ", 3, 3);

550 
	`x2
("(?<n>|a\\g<n>)+", "", 0, 0);

551 
	`x2
("(?<n>|\\(\\g<n>\\))+$", "()(())", 0, 6);

552 
	`x3
("\\g<n>(?<n>.){0}", "X", 0, 1, 1);

553 
	`x2
("\\g<n>(abc|df(?<n>.YZ){2,8}){0}", "XYZ", 0, 3);

554 
	`x2
("\\A(?<n>(a\\g<n>)|)\\z", "aaaa", 0, 4);

555 
	`x2
("(?<n>|\\g<m>\\g<n>)\\z|\\zEND (?<m>a|(b)\\g<m>)", "bbbbabba", 0, 8);

556 
	`x2
("(?<name1240>\\w+\\sx)a+\\k<name1240>", " fg xaaaaaaaafg x", 2, 18);

557 
	`x3
("(z)()()(?<_9>a)\\g<_9>", "zaa", 2, 3, 1);

558 
	`x2
("(.)(((?<_>a)))\\k<_>", "zaa", 0, 3);

559 
	`x2
("((?<name1>\\d)|(?<name2>\\w))(\\k<name1>|\\k<name2>)", "ff", 0, 2);

560 
	`x2
("(?:(?<x>)|(?<x>efg))\\k<x>", "", 0, 0);

561 
	`x2
("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefgefg", 3, 9);

562 
	`n
("(?:(?<x>abc)|(?<x>efg))\\k<x>", "abcefg");

563 
	`x2
("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "a-pyumpyum", 2, 10);

564 
	`x3
("(?:(?<n1>.)|(?<n1>..)|(?<n1>...)|(?<n1>....)|(?<n1>.....)|(?<n1>......)|(?<n1>.......)|(?<n1>........)|(?<n1>.........)|(?<n1>..........)|(?<n1>...........)|(?<n1>............)|(?<n1>.............)|(?<n1>..............))\\k<n1>$", "xxxxabcdefghijklmnabcdefghijklmn", 4, 18, 14);

565 
	`x3
("(?<name1>)(?<name2>)(?<name3>)(?<name4>)(?<name5>)(?<name6>)(?<name7>)(?<name8>)(?<name9>)(?<name10>)(?<name11>)(?<name12>)(?<name13>)(?<name14>)(?<name15>)(?<name16>aaa)(?<name17>)$", "aaa", 0, 3, 16);

566 
	`x2
("(?<foo>a|\\(\\g<foo>\\))", "a", 0, 1);

567 
	`x2
("(?<foo>a|\\(\\g<foo>\\))", "((((((a))))))", 0, 13);

568 
	`x3
("(?<foo>a|\\(\\g<foo>\\))", "((((((((a))))))))", 0, 17, 1);

569 
	`x2
("\\g<bar>|\\zEND(?<bar>.*abc$)", "abcxxxabc", 0, 9);

570 
	`x2
("\\g<1>|\\zEND(.a.)", "bac", 0, 3);

571 
	`x3
("\\g<_A>\\g<_A>|\\zEND(.a.)(?<_A>.b.)", "xbxyby", 3, 6, 1);

572 
	`x2
("\\A(?:\\g<pon>|\\g<pan>|\\zEND (?<pan>a|c\\g<pon>c)(?<pon>b|d\\g<pan>d))$", "cdcbcdc", 0, 7);

573 
	`x2
("\\A(?<n>|a\\g<m>)\\z|\\zEND (?<m>\\g<n>)", "aaaa", 0, 4);

574 
	`x2
("(?<n>(a|b\\g<n>c){3,5})", "baaaaca", 1, 5);

575 
	`x2
("(?<n>(a|b\\g<n>c){3,5})", "baaaacaaaaa", 0, 10);

576 
	`x2
("(?<pare>\\(([^\\(\\)]++|\\g<pare>)*+\\))", "((a))", 0, 5);

577 
	`x2
("()*\\1", "", 0, 0);

578 
	`x2
("(?:()|())*\\1\\2", "", 0, 0);

579 
	`x3
("(?:\\1a|())*", "a", 0, 0, 1);

580 
	`x2
("x((.)*)*x", "0x1x2x3", 1, 6);

581 
	`x2
("x((.)*)*x(?i:\\1)\\Z", "0x1x2x1X2", 1, 9);

582 
	`x2
("(?:()|()|()|()|()|())*\\2\\5", "", 0, 0);

583 
	`x2
("(?:()|()|()|(x)|()|())*\\2b\\5", "b", 0, 1);

584 
	`x2
("\\xED\\xF2", "\xed\xf2", 0, 2);

585 
	`x2
("", "Ç†", 0, 0);

586 
	`x2
("Ç†", "Ç†", 0, 2);

587 
	`n
("Ç¢", "Ç†");

588 
	`x2
("Ç§Ç§", "Ç§Ç§", 0, 4);

589 
	`x2
("Ç†Ç¢Ç§", "Ç†Ç¢Ç§", 0, 6);

590 
	`x2
("Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±", "Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±Ç±", 0, 70);

591 
	`x2
("Ç†", "Ç¢Ç†", 2, 4);

592 
	`x2
("Ç¢Ç§", "Ç†Ç¢Ç§", 2, 6);

593 
	`x2
("\\xca\\xb8", "\xca\xb8", 0, 2);

594 
	`x2
(".", "Ç†", 0, 2);

595 
	`x2
("..", "Ç©Ç´", 0, 4);

596 
	`x2
("\\w", "Ç®", 0, 2);

597 
	`n
("\\W", "Ç†");

598 
	`x2
("[\\W]", "Ç§$", 2, 3);

599 
	`x2
("\\S", "Çª", 0, 2);

600 
	`x2
("\\S", "äø", 0, 2);

601 
	`x2
("\\b", "ãC ", 0, 0);

602 
	`x2
("\\b", " ÇŸ", 1, 1);

603 
	`x2
("\\B", "ÇπÇª ", 2, 2);

604 
	`x2
("\\B", "Ç§ ", 3, 3);

605 
	`x2
("\\B", " Ç¢", 0, 0);

606 
	`x2
("[ÇΩÇø]", "Çø", 0, 2);

607 
	`n
("[Ç»Ç…]", "Ç ");

608 
	`x2
("[Ç§-Ç®]", "Ç¶", 0, 2);

609 
	`n
("[^ÇØ]", "ÇØ");

610 
	`x2
("[\\w]", "ÇÀ", 0, 2);

611 
	`n
("[\\d]", "Ç”");

612 
	`x2
("[\\D]", "ÇÕ", 0, 2);

613 
	`n
("[\\s]", "Ç≠");

614 
	`x2
("[\\S]", "Ç÷", 0, 2);

615 
	`x2
("[\\w\\d]", "ÇÊ", 0, 2);

616 
	`x2
("[\\w\\d]", " ÇÊ", 3, 5);

617 
	`n
("\\wãSé‘", " ãSé‘");

618 
	`x2
("ãS\\Wé‘", "ãS é‘", 0, 5);

619 
	`x2
("Ç†.Ç¢.Ç§", "Ç†Ç†Ç¢Ç¢Ç§", 0, 10);

620 
	`x2
(".\\wÇ§\\W..Çº", "Ç¶Ç§Ç§ Ç§ÇºÇº", 0, 13);

621 
	`x2
("\\s\\wÇ±Ç±Ç±", " Ç±Ç±Ç±Ç±", 0, 9);

622 
	`x2
("Ç†Ç†.ÇØ", "Ç†Ç†ÇØÇØ", 0, 8);

623 
	`n
(".Ç¢", "Ç¢Ç¶");

624 
	`x2
(".Ç®", "Ç®Ç®", 0, 4);

625 
	`x2
("^Ç†", "Ç†", 0, 2);

626 
	`x2
("^Çﬁ$", "Çﬁ", 0, 2);

627 
	`x2
("^\\w$", "Ç…", 0, 2);

628 
	`x2
("^\\wÇ©Ç´Ç≠ÇØÇ±$", "zÇ©Ç´Ç≠ÇØÇ±", 0, 11);

629 
	`x2
("^\\w...Ç§Ç¶Ç®$", "zÇ†Ç¢Ç§Ç§Ç¶Ç®", 0, 13);

630 
	`x2
("\\w\\w\\s\\WÇ®Ç®Ç®\\d", "aÇ® Ç®Ç®Ç®4", 0, 12);

631 
	`x2
("\\AÇΩÇøÇ¬", "ÇΩÇøÇ¬", 0, 6);

632 
	`x2
("ÇﬁÇﬂÇ‡\\Z", "ÇﬁÇﬂÇ‡", 0, 6);

633 
	`x2
("Ç©Ç´Ç≠\\z", "Ç©Ç´Ç≠", 0, 6);

634 
	`x2
("Ç©Ç´Ç≠\\Z", "Ç©Ç´Ç≠\n", 0, 6);

635 
	`x2
("\\GÇ€Ç“", "Ç€Ç“", 0, 4);

636 
	`n
("\\GÇ¶", "Ç§Ç¶Ç®");

637 
	`n
("Ç∆Çƒ\\G", "Ç∆Çƒ");

638 
	`n
("Ç‹Ç›\\A", "Ç‹Ç›");

639 
	`n
("Ç‹\\AÇ›", "Ç‹Ç›");

640 
	`x2
("(?=Çπ)Çπ", "Çπ", 0, 2);

641 
	`n
("(?=Ç§).", "Ç¢");

642 
	`x2
("(?!Ç§)Ç©", "Ç©", 0, 2);

643 
	`n
("(?!Ç∆)Ç†", "Ç∆");

644 
	`x2
("(?i:Ç†)", "Ç†", 0, 2);

645 
	`x2
("(?i:Ç‘Ç◊)", "Ç‘Ç◊", 0, 4);

646 
	`n
("(?i:Ç¢)", "Ç§");

647 
	`x2
("(?m:ÇÊ.)", "ÇÊ\n", 0, 3);

648 
	`x2
("(?m:.Çﬂ)", "Ç‹\nÇﬂ", 2, 5);

649 
	`x2
("Ç†?", "", 0, 0);

650 
	`x2
("ïœ?", "âª", 0, 0);

651 
	`x2
("ïœ?", "ïœ", 0, 2);

652 
	`x2
("ó *", "", 0, 0);

653 
	`x2
("ó *", "ó ", 0, 2);

654 
	`x2
("éq*", "éqéqéq", 0, 6);

655 
	`x2
("în*", "é≠înînînîn", 0, 0);

656 
	`n
("éR+", "");

657 
	`x2
("âÕ+", "âÕ", 0, 2);

658 
	`x2
("éû+", "éûéûéûéû", 0, 8);

659 
	`x2
("Ç¶+", "Ç¶Ç¶Ç§Ç§Ç§", 0, 4);

660 
	`x2
("Ç§+", "Ç®Ç§Ç§Ç§Ç§", 2, 10);

661 
	`x2
(".?", "ÇΩ", 0, 2);

662 
	`x2
(".*", "ÇœÇ“Ç’Çÿ", 0, 8);

663 
	`x2
(".+", "ÇÎ", 0, 2);

664 
	`x2
(".+", "Ç¢Ç§Ç¶Ç©\n", 0, 8);

665 
	`x2
("Ç†|Ç¢", "Ç†", 0, 2);

666 
	`x2
("Ç†|Ç¢", "Ç¢", 0, 2);

667 
	`x2
("Ç†Ç¢|Ç¢Ç§", "Ç†Ç¢", 0, 4);

668 
	`x2
("Ç†Ç¢|Ç¢Ç§", "Ç¢Ç§", 0, 4);

669 
	`x2
("Ç(?:Ç©Ç´|Ç´Ç≠)", "ÇÇ©Ç´", 0, 6);

670 
	`x2
("Ç(?:Ç©Ç´|Ç´Ç≠)ÇØ", "ÇÇ´Ç≠ÇØ", 0, 8);

671 
	`x2
("Ç†Ç¢|(?:Ç†Ç§|Ç†Ç)", "Ç†Ç", 0, 4);

672 
	`x2
("Ç†|Ç¢|Ç§", "Ç¶Ç§", 2, 4);

673 
	`x2
("Ç†|Ç¢|Ç§Ç¶|Ç®Ç©Ç´|Ç≠|ÇØÇ±Ç≥|ÇµÇ∑Çπ|Çª|ÇΩÇø|Ç¬ÇƒÇ∆Ç»Ç…|Ç ÇÀ", "ÇµÇ∑Çπ", 0, 6);

674 
	`n
("Ç†|Ç¢|Ç§Ç¶|Ç®Ç©Ç´|Ç≠|ÇØÇ±Ç≥|ÇµÇ∑Çπ|Çª|ÇΩÇø|Ç¬ÇƒÇ∆Ç»Ç…|Ç ÇÀ", "Ç∑Çπ");

675 
	`x2
("Ç†|^ÇÌ", "Ç‘Ç†", 2, 4);

676 
	`x2
("Ç†|^Ç", "ÇÇ†", 0, 2);

677 
	`x2
("ãS|\\Gé‘", "ÇØé‘ãS", 4, 6);

678 
	`x2
("ãS|\\Gé‘", "é‘ãS", 0, 2);

679 
	`x2
("ãS|\\Aé‘", "bé‘ãS", 3, 5);

680 
	`x2
("ãS|\\Aé‘", "é‘", 0, 2);

681 
	`x2
("ãS|é‘\\Z", "é‘ãS", 2, 4);

682 
	`x2
("ãS|é‘\\Z", "é‘", 0, 2);

683 
	`x2
("ãS|é‘\\Z", "é‘\n", 0, 2);

684 
	`x2
("ãS|é‘\\z", "é‘ãS", 2, 4);

685 
	`x2
("ãS|é‘\\z", "é‘", 0, 2);

686 
	`x2
("\\w|\\s", "Ç®", 0, 2);

687 
	`x2
("\\w|%", "%Ç®", 0, 1);

688 
	`x2
("\\w|[&$]", "Ç§&", 0, 2);

689 
	`x2
("[Ç¢-ÇØ]", "Ç§", 0, 2);

690 
	`x2
("[Ç¢-ÇØ]|[^Ç©-Ç±]", "Ç†", 0, 2);

691 
	`x2
("[Ç¢-ÇØ]|[^Ç©-Ç±]", "Ç©", 0, 2);

692 
	`x2
("[^Ç†]", "\n", 0, 1);

693 
	`x2
("(?:Ç†|[Ç§-Ç´])|Ç¢Ç", "Ç§Ç", 0, 2);

694 
	`x2
("(?:Ç†|[Ç§-Ç´])|Ç¢Ç", "Ç¢Ç", 0, 4);

695 
	`x2
("Ç†Ç¢Ç§|(?=ÇØÇØ)..ÇŸ", "ÇØÇØÇŸ", 0, 6);

696 
	`x2
("Ç†Ç¢Ç§|(?!ÇØÇØ)..ÇŸ", "Ç†Ç¢ÇŸ", 0, 6);

697 
	`x2
("(?=ÇÇ†)..Ç†|(?=ÇÇ)..Ç†", "ÇÇÇ†", 0, 6);

698 
	`x2
("(?<=Ç†|Ç¢Ç§)Ç¢", "Ç¢Ç§Ç¢", 4, 6);

699 
	`n
("(?>Ç†|Ç†Ç¢Ç¶)Ç§", "Ç†Ç¢Ç¶Ç§");

700 
	`x2
("(?>Ç†Ç¢Ç¶|Ç†)Ç§", "Ç†Ç¢Ç¶Ç§", 0, 8);

701 
	`x2
("Ç†?|Ç¢", "Ç†", 0, 2);

702 
	`x2
("Ç†?|Ç¢", "Ç¢", 0, 0);

703 
	`x2
("Ç†?|Ç¢", "", 0, 0);

704 
	`x2
("Ç†*|Ç¢", "Ç†Ç†", 0, 4);

705 
	`x2
("Ç†*|Ç¢*", "Ç¢Ç†", 0, 0);

706 
	`x2
("Ç†*|Ç¢*", "Ç†Ç¢", 0, 2);

707 
	`x2
("[aÇ†]*|Ç¢*", "aÇ†Ç¢Ç¢Ç¢", 0, 3);

708 
	`x2
("Ç†+|Ç¢*", "", 0, 0);

709 
	`x2
("Ç†+|Ç¢*", "Ç¢Ç¢Ç¢", 0, 6);

710 
	`x2
("Ç†+|Ç¢*", "Ç†Ç¢Ç¢Ç¢", 0, 2);

711 
	`x2
("Ç†+|Ç¢*", "aÇ†Ç¢Ç¢Ç¢", 0, 0);

712 
	`n
("Ç†+|Ç¢+", "");

713 
	`x2
("(Ç†|Ç¢)?", "Ç¢", 0, 2);

714 
	`x2
("(Ç†|Ç¢)*", "Ç¢Ç†", 0, 4);

715 
	`x2
("(Ç†|Ç¢)+", "Ç¢Ç†Ç¢", 0, 6);

716 
	`x2
("(Ç†Ç¢|Ç§Ç†)+", "Ç§Ç†Ç†Ç¢Ç§Ç¶", 0, 8);

717 
	`x2
("(Ç†Ç¢|Ç§Ç¶)+", "Ç§Ç†Ç†Ç¢Ç§Ç¶", 4, 12);

718 
	`x2
("(Ç†Ç¢|Ç§Ç†)+", "Ç†Ç†Ç¢Ç§Ç†", 2, 10);

719 
	`x2
("(Ç†Ç¢|Ç§Ç†)+", "Ç†Ç¢ÇÇ§Ç†", 0, 4);

720 
	`x2
("(Ç†Ç¢|Ç§Ç†)+", "$$zzzzÇ†Ç¢ÇÇ§Ç†", 6, 10);

721 
	`x2
("(Ç†|Ç¢Ç†Ç¢)+", "Ç†Ç¢Ç†Ç¢Ç†", 0, 10);

722 
	`x2
("(Ç†|Ç¢Ç†Ç¢)+", "Ç¢Ç†", 2, 4);

723 
	`x2
("(Ç†|Ç¢Ç†Ç¢)+", "Ç¢Ç†Ç†Ç†Ç¢Ç†", 2, 8);

724 
	`x2
("(?:Ç†|Ç¢)(?:Ç†|Ç¢)", "Ç†Ç¢", 0, 4);

725 
	`x2
("(?:Ç†*|Ç¢*)(?:Ç†*|Ç¢*)", "Ç†Ç†Ç†Ç¢Ç¢Ç¢", 0, 6);

726 
	`x2
("(?:Ç†*|Ç¢*)(?:Ç†+|Ç¢+)", "Ç†Ç†Ç†Ç¢Ç¢Ç¢", 0, 12);

727 
	`x2
("(?:Ç†+|Ç¢+){2}", "Ç†Ç†Ç†Ç¢Ç¢Ç¢", 0, 12);

728 
	`x2
("(?:Ç†+|Ç¢+){1,2}", "Ç†Ç†Ç†Ç¢Ç¢Ç¢", 0, 12);

729 
	`x2
("(?:Ç†+|\\AÇ¢*)Ç§Ç§", "Ç§Ç§", 0, 4);

730 
	`n
("(?:Ç†+|\\AÇ¢*)Ç§Ç§", "Ç†Ç¢Ç§Ç§");

731 
	`x2
("(?:^Ç†+|Ç¢+)*Ç§", "Ç†Ç†Ç¢Ç¢Ç¢Ç†Ç¢Ç§", 12, 16);

732 
	`x2
("(?:^Ç†+|Ç¢+)*Ç§", "Ç†Ç†Ç¢Ç¢Ç¢Ç¢Ç§", 0, 14);

733 
	`x2
("Ç§{0,}", "Ç§Ç§Ç§Ç§", 0, 8);

734 
	`x2
("Ç†|(?i)c", "C", 0, 1);

735 
	`x2
("(?i)c|Ç†", "C", 0, 1);

736 
	`x2
("(?i:Ç†)|a", "a", 0, 1);

737 
	`n
("(?i:Ç†)|a", "A");

738 
	`x2
("[Ç†Ç¢Ç§]?", "Ç†Ç¢Ç§", 0, 2);

739 
	`x2
("[Ç†Ç¢Ç§]*", "Ç†Ç¢Ç§", 0, 6);

740 
	`x2
("[^Ç†Ç¢Ç§]*", "Ç†Ç¢Ç§", 0, 0);

741 
	`n
("[^Ç†Ç¢Ç§]+", "Ç†Ç¢Ç§");

742 
	`x2
("Ç†?\?", "Ç†Ç†Ç†", 0, 0);

743 
	`x2
("Ç¢Ç†?\?Ç¢", "Ç¢Ç†Ç¢", 0, 6);

744 
	`x2
("Ç†*?", "Ç†Ç†Ç†", 0, 0);

745 
	`x2
("Ç¢Ç†*?", "Ç¢Ç†Ç†", 0, 2);

746 
	`x2
("Ç¢Ç†*?Ç¢", "Ç¢Ç†Ç†Ç¢", 0, 8);

747 
	`x2
("Ç†+?", "Ç†Ç†Ç†", 0, 2);

748 
	`x2
("Ç¢Ç†+?", "Ç¢Ç†Ç†", 0, 4);

749 
	`x2
("Ç¢Ç†+?Ç¢", "Ç¢Ç†Ç†Ç¢", 0, 8);

750 
	`x2
("(?:ìV?)?\?", "ìV", 0, 0);

751 
	`x2
("(?:ìV?\?)?", "ìV", 0, 0);

752 
	`x2
("(?:ñ≤?)+?", "ñ≤ñ≤ñ≤", 0, 2);

753 
	`x2
("(?:ïó+)?\?", "ïóïóïó", 0, 0);

754 
	`x2
("(?:ê·+)?\?ëö", "ê·ê·ê·ëö", 0, 8);

755 
	`x2
("(?:Ç†Ç¢)?{2}", "", 0, 0);

756 
	`x2
("(?:ãSé‘)?{2}", "ãSé‘ãSé‘ãS", 0, 8);

757 
	`x2
("(?:ãSé‘)*{0}", "ãSé‘ãSé‘ãS", 0, 0);

758 
	`x2
("(?:ãSé‘){3,}", "ãSé‘ãSé‘ãSé‘ãSé‘", 0, 16);

759 
	`n
("(?:ãSé‘){3,}", "ãSé‘ãSé‘");

760 
	`x2
("(?:ãSé‘){2,4}", "ãSé‘ãSé‘ãSé‘", 0, 12);

761 
	`x2
("(?:ãSé‘){2,4}", "ãSé‘ãSé‘ãSé‘ãSé‘ãSé‘", 0, 16);

762 
	`x2
("(?:ãSé‘){2,4}?", "ãSé‘ãSé‘ãSé‘ãSé‘ãSé‘", 0, 8);

763 
	`x2
("(?:ãSé‘){,}", "ãSé‘{,}", 0, 7);

764 
	`x2
("(?:Ç©Ç´Ç≠)+?{2}", "Ç©Ç´Ç≠Ç©Ç´Ç≠Ç©Ç´Ç≠", 0, 12);

765 
	`x3
("(âŒ)", "âŒ", 0, 2, 1);

766 
	`x3
("(âŒêÖ)", "âŒêÖ", 0, 4, 1);

767 
	`x2
("((éûä‘))", "éûä‘", 0, 4);

768 
	`x3
("((ïóêÖ))", "ïóêÖ", 0, 4, 1);

769 
	`x3
("((çì˙))", "çì˙", 0, 4, 2);

770 
	`x3
("((((((((((((((((((((ó éq))))))))))))))))))))", "ó éq", 0, 4, 20);

771 
	`x3
("(Ç†Ç¢)(Ç§Ç¶)", "Ç†Ç¢Ç§Ç¶", 0, 4, 1);

772 
	`x3
("(Ç†Ç¢)(Ç§Ç¶)", "Ç†Ç¢Ç§Ç¶", 4, 8, 2);

773 
	`x3
("()(Ç†)Ç¢Ç§(Ç¶Ç®Ç©)Ç´Ç≠ÇØÇ±", "Ç†Ç¢Ç§Ç¶Ç®Ç©Ç´Ç≠ÇØÇ±", 6, 12, 3);

774 
	`x3
("(()(Ç†)Ç¢Ç§(Ç¶Ç®Ç©)Ç´Ç≠ÇØÇ±)", "Ç†Ç¢Ç§Ç¶Ç®Ç©Ç´Ç≠ÇØÇ±", 6, 12, 4);

775 
	`x3
(".*(ÉtÉH)ÉìÅEÉ}(Éì()ÉVÉÖÉ^)ÉCÉì", "ÉtÉHÉìÅEÉ}ÉìÉVÉÖÉ^ÉCÉì", 10, 18, 2);

776 
	`x2
("(^Ç†)", "Ç†", 0, 2);

777 
	`x3
("(Ç†)|(Ç†)", "Ç¢Ç†", 2, 4, 1);

778 
	`x3
("(^Ç†)|(Ç†)", "Ç¢Ç†", 2, 4, 2);

779 
	`x3
("(Ç†?)", "Ç†Ç†Ç†", 0, 2, 1);

780 
	`x3
("(Ç‹*)", "Ç‹Ç‹Ç‹", 0, 6, 1);

781 
	`x3
("(Ç∆*)", "", 0, 0, 1);

782 
	`x3
("(ÇÈ+)", "ÇÈÇÈÇÈÇÈÇÈÇÈÇÈ", 0, 14, 1);

783 
	`x3
("(Ç”+|Ç÷*)", "Ç”Ç”Ç”Ç÷Ç÷", 0, 6, 1);

784 
	`x3
("(Ç†+|Ç¢?)", "Ç¢Ç¢Ç¢Ç†Ç†", 0, 2, 1);

785 
	`x3
("(Ç†Ç¢Ç§)?", "Ç†Ç¢Ç§", 0, 6, 1);

786 
	`x3
("(Ç†Ç¢Ç§)*", "Ç†Ç¢Ç§", 0, 6, 1);

787 
	`x3
("(Ç†Ç¢Ç§)+", "Ç†Ç¢Ç§", 0, 6, 1);

788 
	`x3
("(Ç≥ÇµÇ∑|Ç†Ç¢Ç§)+", "Ç†Ç¢Ç§", 0, 6, 1);

789 
	`x3
("([Ç»Ç…Ç ][Ç©Ç´Ç≠]|Ç©Ç´Ç≠)+", "Ç©Ç´Ç≠", 0, 6, 1);

790 
	`x3
("((?i:Ç†Ç¢Ç§))", "Ç†Ç¢Ç§", 0, 6, 1);

791 
	`x3
("((?m:Ç†.Ç§))", "Ç†\nÇ§", 0, 5, 1);

792 
	`x3
("((?=Ç†ÇÒ)Ç†)", "Ç†ÇÒÇ¢", 0, 2, 1);

793 
	`x3
("Ç†Ç¢Ç§|(.Ç†Ç¢Ç¶)", "ÇÒÇ†Ç¢Ç¶", 0, 8, 1);

794 
	`x3
("Ç†*(.)", "Ç†Ç†Ç†Ç†ÇÒ", 8, 10, 1);

795 
	`x3
("Ç†*?(.)", "Ç†Ç†Ç†Ç†ÇÒ", 0, 2, 1);

796 
	`x3
("Ç†*?(ÇÒ)", "Ç†Ç†Ç†Ç†ÇÒ", 8, 10, 1);

797 
	`x3
("[Ç¢Ç§Ç¶]Ç†*(.)", "Ç¶Ç†Ç†Ç†Ç†ÇÒ", 10, 12, 1);

798 
	`x3
("(\\AÇ¢Ç¢)Ç§Ç§", "Ç¢Ç¢Ç§Ç§", 0, 4, 1);

799 
	`n
("(\\AÇ¢Ç¢)Ç§Ç§", "ÇÒÇ¢Ç¢Ç§Ç§");

800 
	`x3
("(^Ç¢Ç¢)Ç§Ç§", "Ç¢Ç¢Ç§Ç§", 0, 4, 1);

801 
	`n
("(^Ç¢Ç¢)Ç§Ç§", "ÇÒÇ¢Ç¢Ç§Ç§");

802 
	`x3
("ÇÎÇÎ(ÇÈÇÈ$)", "ÇÎÇÎÇÈÇÈ", 4, 8, 1);

803 
	`n
("ÇÎÇÎ(ÇÈÇÈ$)", "ÇÎÇÎÇÈÇÈÇÈ");

804 
	`x2
("(ñ≥)\\1", "ñ≥ñ≥", 0, 4);

805 
	`n
("(ñ≥)\\1", "ñ≥ïê");

806 
	`x2
("(ãÛ?)\\1", "ãÛãÛ", 0, 4);

807 
	`x2
("(ãÛ?\?)\\1", "ãÛãÛ", 0, 0);

808 
	`x2
("(ãÛ*)\\1", "ãÛãÛãÛãÛãÛ", 0, 8);

809 
	`x3
("(ãÛ*)\\1", "ãÛãÛãÛãÛãÛ", 0, 4, 1);

810 
	`x2
("Ç†(Ç¢*)\\1", "Ç†Ç¢Ç¢Ç¢Ç¢", 0, 10);

811 
	`x2
("Ç†(Ç¢*)\\1", "Ç†Ç¢", 0, 2);

812 
	`x2
("(Ç†*)(Ç¢*)\\1\\2", "Ç†Ç†Ç†Ç¢Ç¢Ç†Ç†Ç†Ç¢Ç¢", 0, 20);

813 
	`x2
("(Ç†*)(Ç¢*)\\2", "Ç†Ç†Ç†Ç¢Ç¢Ç¢Ç¢", 0, 14);

814 
	`x3
("(Ç†*)(Ç¢*)\\2", "Ç†Ç†Ç†Ç¢Ç¢Ç¢Ç¢", 6, 10, 2);

815 
	`x2
("(((((((Ç€*)Çÿ))))))Ç“\\7", "Ç€Ç€Ç€ÇÿÇ“Ç€Ç€Ç€", 0, 16);

816 
	`x3
("(((((((Ç€*)Çÿ))))))Ç“\\7", "Ç€Ç€Ç€ÇÿÇ“Ç€Ç€Ç€", 0, 6, 7);

817 
	`x2
("(ÇÕ)(Ç–)(Ç”)\\2\\1\\3", "ÇÕÇ–Ç”Ç–ÇÕÇ”", 0, 12);

818 
	`x2
("([Ç´-ÇØ])\\1", "Ç≠Ç≠", 0, 4);

819 
	`x2
("(\\w\\d\\s)\\1", "Ç†5 Ç†5 ", 0, 8);

820 
	`n
("(\\w\\d\\s)\\1", "Ç†5 Ç†5");

821 
	`x2
("(íNÅH|[Ç†-Ç§]{3})\\1", "íNÅHíNÅH", 0, 8);

822 
	`x2
("...(íNÅH|[Ç†-Ç§]{3})\\1", "Ç†aÇ†íNÅHíNÅH", 0, 13);

823 
	`x2
("(íNÅH|[Ç†-Ç§]{3})\\1", "Ç§Ç¢Ç§Ç§Ç¢Ç§", 0, 12);

824 
	`x2
("(^Ç±)\\1", "Ç±Ç±", 0, 4);

825 
	`n
("(^Çﬁ)\\1", "ÇﬂÇﬁÇﬁ");

826 
	`n
("(Ç†$)\\1", "Ç†Ç†");

827 
	`n
("(Ç†Ç¢\\Z)\\1", "Ç†Ç¢");

828 
	`x2
("(Ç†*\\Z)\\1", "Ç†", 2, 2);

829 
	`x2
(".(Ç†*\\Z)\\1", "Ç¢Ç†", 2, 4);

830 
	`x3
("(.(Ç‚Ç¢Ç‰)\\2)", "zÇ‚Ç¢Ç‰Ç‚Ç¢Ç‰", 0, 13, 1);

831 
	`x3
("(.(..\\d.)\\2)", "Ç†12341234", 0, 10, 1);

832 
	`x2
("((?i:Ç†vÇ∏))\\1", "Ç†vÇ∏Ç†vÇ∏", 0, 10);

833 
	`x2
("(?<ãÇ©>ïœ|\\(\\g<ãÇ©>\\))", "((((((ïœ))))))", 0, 14);

834 
	`x2
("\\A(?:\\g<à¢_1>|\\g<â]_2>|\\zèIóπ (?<à¢_1>äœ|é©\\g<â]_2>é©)(?<â]_2>ç›|ïÏéF\\g<à¢_1>ïÏéF))$", "ïÏéFé©ïÏéFé©ç›é©ïÏéFé©ïÏéF", 0, 26);

835 
	`x2
("[[Ç–Ç”]]", "Ç”", 0, 2);

836 
	`x2
("[[Ç¢Ç®Ç§]Ç©]", "Ç©", 0, 2);

837 
	`n
("[[^Ç†]]", "Ç†");

838 
	`n
("[^[Ç†]]", "Ç†");

839 
	`x2
("[^[^Ç†]]", "Ç†", 0, 2);

840 
	`x2
("[[Ç©Ç´Ç≠]&&Ç´Ç≠]", "Ç≠", 0, 2);

841 
	`n
("[[Ç©Ç´Ç≠]&&Ç´Ç≠]", "Ç©");

842 
	`n
("[[Ç©Ç´Ç≠]&&Ç´Ç≠]", "ÇØ");

843 
	`x2
("[Ç†-ÇÒ&&Ç¢-Ç&&Ç§-ÇÔ]", "ÇÔ", 0, 2);

844 
	`n
("[^Ç†-ÇÒ&&Ç¢-Ç&&Ç§-ÇÔ]", "ÇÔ");

845 
	`x2
("[[^Ç†&&Ç†]&&Ç†-ÇÒ]", "Ç¢", 0, 2);

846 
	`n
("[[^Ç†&&Ç†]&&Ç†-ÇÒ]", "Ç†");

847 
	`x2
("[[^Ç†-ÇÒ&&Ç¢Ç§Ç¶Ç®]&&[^Ç§-Ç©]]", "Ç´", 0, 2);

848 
	`n
("[[^Ç†-ÇÒ&&Ç¢Ç§Ç¶Ç®]&&[^Ç§-Ç©]]", "Ç¢");

849 
	`x2
("[^[^Ç†Ç¢Ç§]&&[^Ç§Ç¶Ç®]]", "Ç§", 0, 2);

850 
	`x2
("[^[^Ç†Ç¢Ç§]&&[^Ç§Ç¶Ç®]]", "Ç¶", 0, 2);

851 
	`n
("[^[^Ç†Ç¢Ç§]&&[^Ç§Ç¶Ç®]]", "Ç©");

852 
	`x2
("[Ç†-&&-Ç†]", "-", 0, 1);

853 
	`x2
("[^[^a-zÇ†Ç¢Ç§]&&[^bcdefgÇ§Ç¶Ç®]q-w]", "Ç¶", 0, 2);

854 
	`x2
("[^[^a-zÇ†Ç¢Ç§]&&[^bcdefgÇ§Ç¶Ç®]g-w]", "f", 0, 1);

855 
	`x2
("[^[^a-zÇ†Ç¢Ç§]&&[^bcdefgÇ§Ç¶Ç®]g-w]", "g", 0, 1);

856 
	`n
("[^[^a-zÇ†Ç¢Ç§]&&[^bcdefgÇ§Ç¶Ç®]g-w]", "2");

857 
	`x2
("a<b>ÉoÅ[ÉWÉáÉìÇÃÉ_ÉEÉìÉçÅ[Éh<\\/b>", "a<b>ÉoÅ[ÉWÉáÉìÇÃÉ_ÉEÉìÉçÅ[Éh</b>", 0, 32);

858 
	`x2
(".<b>ÉoÅ[ÉWÉáÉìÇÃÉ_ÉEÉìÉçÅ[Éh<\\/b>", "a<b>ÉoÅ[ÉWÉáÉìÇÃÉ_ÉEÉìÉçÅ[Éh</b>", 0, 32);

859 
	`Ârötf
(
°dout
,

861 
nsucc
, 
nÁû
, 
√º‹
, 
	`⁄ig_vîsi⁄
());

863 #i‚de‡
POSIX_TEST


864 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
, 1);

865 
	`⁄ig_íd
();

868  ((
nÁû
 =0 && 
√º‹
 == 0) ? 0 : -1);

869 
	}
}

	@src/builtin.c

1 
	#_BSD_SOURCE


	)

2 
	#_GNU_SOURCE


	)

3 #i‚de‡
__sun__


4 
	#_XOPEN_SOURCE


	)

5 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

7 
	#_XPG6


	)

8 
	#__EXTENSIONS__


	)

10 
	~<sys/time.h
>

11 
	~<°dlib.h
>

12 
	~<°ddef.h
>

13 #ifde‡
HAVE_ALLOCA_H


14 
	~<Æloˇ.h
>

15 #ñi‡!
deföed
 
Æloˇ


16 #ifde‡
__GNUC__


17 
	#Æloˇ
 
__buûtö_Æloˇ


	)

18 #ñi‡
deföed
 
_MSC_VER


19 
	~<mÆloc.h
>

20 
	#Æloˇ
 
_Æloˇ


	)

21 #ñi‡!
deföed
 
HAVE_ALLOCA


22 #ifde‡ 
__˝lu•lus


25 *
Æloˇ
 (
size_t
);

28 
	~<as£π.h
>

29 
	~<˘y≥.h
>

30 
	~<limôs.h
>

31 
	~<m©h.h
>

32 #ifde‡
HAVE_LIBONIG


33 
	~<⁄iguruma.h
>

35 
	~<°rög.h
>

36 
	~<time.h
>

37 #ifde‡
WIN32


38 
	~<wödows.h
>

40 
	~"buûtö.h
"

41 
	~"compûe.h
"

42 
	~"jq_∑r£r.h
"

43 
	~"byãcode.h
"

44 
	~"lökî.h
"

45 
	~"locfûe.h
"

46 
	~"jv_unicode.h
"

47 
	~"jv_Æloc.h
"

50 
jv
 
	$ty≥_îr‹
(
jv
 
bad
, c⁄° * 
msg
) {

51 
îrbuf
[15];

52 
jv
 
îr
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("%s (%s) %s",

53 
	`jv_köd_«me
(
	`jv_gë_köd
(
bad
)),

54 
	`jv_dump_°rög_åunc
(
	`jv_c›y
(
bad
), 
îrbuf
, (errbuf)),

55 
msg
));

56 
	`jv_‰ì
(
bad
);

57  
îr
;

58 
	}
}

60 
jv
 
	$ty≥_îr‹2
(
jv
 
bad1
, jv 
bad2
, c⁄° * 
msg
) {

61 
îrbuf1
[15],
îrbuf2
[15];

62 
jv
 
îr
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("%s (%s)ánd %s (%s) %s",

63 
	`jv_köd_«me
(
	`jv_gë_köd
(
bad1
)),

64 
	`jv_dump_°rög_åunc
(
	`jv_c›y
(
bad1
), 
îrbuf1
, (errbuf1)),

65 
	`jv_köd_«me
(
	`jv_gë_köd
(
bad2
)),

66 
	`jv_dump_°rög_åunc
(
	`jv_c›y
(
bad2
), 
îrbuf2
, (errbuf2)),

67 
msg
));

68 
	`jv_‰ì
(
bad1
);

69 
	`jv_‰ì
(
bad2
);

70  
îr
;

71 
	}
}

73 
ölöe
 
jv
 
	$ªt_îr‹
(
jv
 
bad
, jv 
msg
) {

74 
	`jv_‰ì
(
bad
);

75  
	`jv_övÆid_wôh_msg
(
msg
);

76 
	}
}

78 
ölöe
 
jv
 
	$ªt_îr‹2
(
jv
 
bad1
, jv 
bad2
, jv 
msg
) {

79 
	`jv_‰ì
(
bad1
);

80 
	`jv_‰ì
(
bad2
);

81  
	`jv_övÆid_wôh_msg
(
msg
);

82 
	}
}

84 
jv
 
	$f_∂us
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

85 
	`jv_‰ì
(
öput
);

86 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NULL
) {

87 
	`jv_‰ì
(
a
);

88  
b
;

89 } i‡(
	`jv_gë_köd
(
b
Ë=
JV_KIND_NULL
) {

90 
	`jv_‰ì
(
b
);

91  
a
;

92 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
 && jv_gë_köd(
b
) == JV_KIND_NUMBER) {

93 
jv
 
r
 = 
	`jv_numbî
(
	`jv_numbî_vÆue
(
a
) +

94 
	`jv_numbî_vÆue
(
b
));

95 
	`jv_‰ì
(
a
);

96 
	`jv_‰ì
(
b
);

97  
r
;

98 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_STRING
 && jv_gë_köd(
b
) == JV_KIND_STRING) {

99  
	`jv_°rög_c⁄ˇt
(
a
, 
b
);

100 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_ARRAY
 && jv_gë_köd(
b
) == JV_KIND_ARRAY) {

101  
	`jv_¨øy_c⁄ˇt
(
a
, 
b
);

102 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_OBJECT
 && jv_gë_köd(
b
) == JV_KIND_OBJECT) {

103  
	`jv_obje˘_mîge
(
a
, 
b
);

105  
	`ty≥_îr‹2
(
a
, 
b
, "cannot beádded");

107 
	}
}

109 #ifde‡
__APPLE__


111 #ifde‡
HAVE_TGAMMA


112 
	#gamma
 
tgamma


	)

114 #ifde‡
HAVE___EXP10


115 
	#exp10
 
__exp10


	)

117 #ifde‡
HAVE_REMAINDER


118 
	#dªm
 
ªmaödî


	)

122 #ifde‡
HAVE_FREXP


123 
	#HAVE_CUSTOM_SIGNIFICAND


	)

124 
	$__jq_signifiˇnd
(
x
) {

125 
z
;

126  2*
	`‰exp
(
x
, &
z
);

127 
	}
}

128 
	#signifiˇnd
 
__jq_signifiˇnd


	)

129 #ñi‡
deföed
(
HAVE_SCALBN
Ë&& deföed(
HAVE_ILOGB
)

130 
	#HAVE_CUSTOM_SIGNIFICAND


	)

131 
	$__jq_signifiˇnd
(
x
) {

132  
	`sˇlbn
(
x
, -
	`ûogb
(x));

133 
	}
}

134 
	#signifiˇnd
 
__jq_signifiˇnd


	)

139 
	#LIBM_DD
(
«me
) \

140 
jv
 
f_
 ## 
	`«me
(
jq_°©e
 *
jq
, jv 
öput
) { \

141 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_NUMBER
) { \

142  
	`ty≥_îr‹
(
öput
, "numberÑequired"); \

144 
jv
 
ªt
 = 
	`jv_numbî
(
	`«me
(
	`jv_numbî_vÆue
(
öput
))); \

145 
	`jv_‰ì
(
öput
); \

146  
ªt
; \

147 }

	)

148 
	#LIBM_DD_NO
(
«me
)

	)

150 
	#LIBM_DDD
(
«me
) \

151 
jv
 
f_
 ## 
	`«me
(
jq_°©e
 *
jq
, jv 
öput
, jv 
a
, jv 
b
) { \

152 
	`jv_‰ì
(
öput
); \

153 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
) { \

154 
	`jv_‰ì
(
b
); \

155  
	`ty≥_îr‹
(
a
, "numberÑequired"); \

157 i‡(
	`jv_gë_köd
(
b
Ë!
JV_KIND_NUMBER
) { \

158 
	`jv_‰ì
(
a
); \

159  
	`ty≥_îr‹
(
b
, "numberÑequired"); \

161 
jv
 
ªt
 = 
	`jv_numbî
(
	`«me
(
	`jv_numbî_vÆue
(
a
), jv_numbî_vÆue(
b
))); \

162 
	`jv_‰ì
(
a
); \

163 
	`jv_‰ì
(
b
); \

164  
ªt
; \

165 }

	)

166 
	#LIBM_DDD_NO
(
«me
)

	)

168 
	#LIBM_DDDD
(
«me
) \

169 
jv
 
f_
 ## 
	`«me
(
jq_°©e
 *
jq
, jv 
öput
, jv 
a
, jv 
b
, jv 
c
) { \

170 
	`jv_‰ì
(
öput
); \

171 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
) { \

172 
	`jv_‰ì
(
b
); \

173 
	`jv_‰ì
(
c
); \

174  
	`ty≥_îr‹
(
a
, "numberÑequired"); \

176 i‡(
	`jv_gë_köd
(
b
Ë!
JV_KIND_NUMBER
) { \

177 
	`jv_‰ì
(
a
); \

178 
	`jv_‰ì
(
c
); \

179  
	`ty≥_îr‹
(
b
, "numberÑequired"); \

181 i‡(
	`jv_gë_köd
(
c
Ë!
JV_KIND_NUMBER
) { \

182 
	`jv_‰ì
(
a
); \

183 
	`jv_‰ì
(
b
); \

184  
	`ty≥_îr‹
(
c
, "numberÑequired"); \

186 
jv
 
ªt
 = 
	`jv_numbî
(
	`«me
(
	`jv_numbî_vÆue
(
a
), jv_numbî_vÆue(
b
), jv_numbî_vÆue(
c
))); \

187 
	`jv_‰ì
(
a
); \

188 
	`jv_‰ì
(
b
); \

189 
	`jv_‰ì
(
c
); \

190  
ªt
; \

191 }

	)

192 
	#LIBM_DDDD_NO
(
«me
)

	)

193 
	~"libm.h
"

194 #unde‡
LIBM_DDDD_NO


195 #unde‡
LIBM_DDD_NO


196 #unde‡
LIBM_DD_NO


197 #unde‡
LIBM_DDDD


198 #unde‡
LIBM_DDD


199 #unde‡
LIBM_DD


201 #ifde‡
__APPLE__


202 #unde‡
HAVE_CUSTOM_SIGNIFICAND


203 #unde‡
gamma


204 #unde‡
dªm


205 #unde‡
signifiˇnd


206 #unde‡
exp10


209 #ifde‡
HAVE_FREXP


210 
jv
 
	$f_‰exp
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

211 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_NUMBER
) {

212  
	`ty≥_îr‹
(
öput
, "numberÑequired");

214 
exp
;

215 
d
 = 
	`‰exp
(
	`jv_numbî_vÆue
(
öput
), &
exp
);

216 
jv
 
ªt
 = 
	`JV_ARRAY
(
	`jv_numbî
(
d
), jv_numbî(
exp
));

217 
	`jv_‰ì
(
öput
);

218  
ªt
;

219 
	}
}

221 #ifde‡
HAVE_MODF


222 
jv
 
	$f_modf
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

223 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_NUMBER
) {

224  
	`ty≥_îr‹
(
öput
, "numberÑequired");

226 
i
;

227 
jv
 
ªt
 = 
	`JV_ARRAY
(
	`jv_numbî
(
	`modf
(
	`jv_numbî_vÆue
(
öput
), &
i
)));

228 
	`jv_‰ì
(
öput
);

229  
	`jv_¨øy_≠≥nd
(
ªt
, 
	`jv_numbî
(
i
));

230 
	}
}

232 #ifde‡
HAVE_LGAMMA_R


233 
jv
 
	$f_lgamma_r
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

234 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_NUMBER
) {

235  
	`ty≥_îr‹
(
öput
, "numberÑequired");

237 
sign
;

238 
jv
 
ªt
 = 
	`JV_ARRAY
(
	`jv_numbî
(
	`lgamma_r
(
	`jv_numbî_vÆue
(
öput
), &
sign
)));

239 
	`jv_‰ì
(
öput
);

240  
	`jv_¨øy_≠≥nd
(
ªt
, 
	`jv_numbî
(
sign
));

241 
	}
}

244 
jv
 
	$f_√g©e
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

245 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_NUMBER
) {

246  
	`ty≥_îr‹
(
öput
, "cannot beÇegated");

248 
jv
 
ªt
 = 
	`jv_numbî
(-
	`jv_numbî_vÆue
(
öput
));

249 
	`jv_‰ì
(
öput
);

250  
ªt
;

251 
	}
}

253 
jv
 
	$f_°¨tswôh
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

254 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
 || jv_gë_köd(
b
) != JV_KIND_STRING)

255  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("startswith()Ñequires string inputs"));

256 
Æí
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
a
));

257 
bÀn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
b
));

258 
jv
 
ªt
;

260 i‡(
bÀn
 <
Æí
 && 
	`memcmp
(
	`jv_°rög_vÆue
(
a
), jv_°rög_vÆue(
b
), blen) == 0)

261 
ªt
 = 
	`jv_åue
();

263 
ªt
 = 
	`jv_Ál£
();

264 
	`jv_‰ì
(
a
);

265 
	`jv_‰ì
(
b
);

266  
ªt
;

267 
	}
}

269 
jv
 
	$f_ídswôh
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

270 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
 || jv_gë_köd(
b
) != JV_KIND_STRING)

271  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("endswith()Ñequires string inputs"));

272 c⁄° *
a°r
 = 
	`jv_°rög_vÆue
(
a
);

273 c⁄° *
b°r
 = 
	`jv_°rög_vÆue
(
b
);

274 
size_t
 
Æí
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
a
));

275 
size_t
 
bÀn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
b
));

276 
jv
 
ªt
;;

278 i‡(
Æí
 < 
bÀn
 ||

279 
	`memcmp
(
a°r
 + (
Æí
 - 
bÀn
), 
b°r
, blen) != 0)

280 
ªt
 = 
	`jv_Ál£
();

282 
ªt
 = 
	`jv_åue
();

283 
	`jv_‰ì
(
a
);

284 
	`jv_‰ì
(
b
);

285  
ªt
;

286 
	}
}

288 
jv
 
	$f_…rim°r
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
À·
) {

289 i‡(
	`jv_gë_köd
(
	`f_°¨tswôh
(
jq
, 
	`jv_c›y
(
öput
), jv_c›y(
À·
))Ë!
JV_KIND_TRUE
) {

290 
	`jv_‰ì
(
À·
);

291  
öput
;

297 
¥efixÀn
 = 
	`jv_°rög_Àngth_byãs
(
À·
);

298 
jv
 
ªs
 = 
	`jv_°rög_sized
(
	`jv_°rög_vÆue
(
öput
Ë+ 
¥efixÀn
,

299 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
)Ë- 
¥efixÀn
);

300 
	`jv_‰ì
(
öput
);

301  
ªs
;

302 
	}
}

304 
jv
 
	$f_πrim°r
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
right
) {

305 i‡(
	`jv_gë_köd
(
	`f_ídswôh
(
jq
, 
	`jv_c›y
(
öput
), jv_c›y(
right
))Ë=
JV_KIND_TRUE
) {

306 
jv
 
ªs
 = 
	`jv_°rög_sized
(
	`jv_°rög_vÆue
(
öput
),

307 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
)Ë- jv_°rög_Àngth_byãs(
right
));

308 
	`jv_‰ì
(
öput
);

309  
ªs
;

311 
	`jv_‰ì
(
right
);

312  
öput
;

313 
	}
}

315 
jv
 
	$f_möus
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

316 
	`jv_‰ì
(
öput
);

317 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
 && jv_gë_köd(
b
) == JV_KIND_NUMBER) {

318 
jv
 
r
 = 
	`jv_numbî
(
	`jv_numbî_vÆue
(
a
Ë- jv_numbî_vÆue(
b
));

319 
	`jv_‰ì
(
a
);

320 
	`jv_‰ì
(
b
);

321  
r
;

322 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_ARRAY
 && jv_gë_köd(
b
) == JV_KIND_ARRAY) {

323 
jv
 
out
 = 
	`jv_¨øy
();

324 
	`jv_¨øy_f‹óch
(
a
, 
i
, 
x
) {

325 
ö˛ude
 = 1;

326 
	`jv_¨øy_f‹óch
(
b
, 
j
, 
y
) {

327 i‡(
	`jv_equÆ
(
	`jv_c›y
(
x
), 
y
)) {

328 
ö˛ude
 = 0;

332 i‡(
ö˛ude
)

333 
out
 = 
	`jv_¨øy_≠≥nd
(out, 
	`jv_c›y
(
x
));

334 
	`jv_‰ì
(
x
);

336 
	`jv_‰ì
(
a
);

337 
	`jv_‰ì
(
b
);

338  
out
;

340  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be subtracted");

342 
	}
}

344 
jv
 
	$f_mu…ùly
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

345 
jv_köd
 
ak
 = 
	`jv_gë_köd
(
a
);

346 
jv_köd
 
bk
 = 
	`jv_gë_köd
(
b
);

347 
	`jv_‰ì
(
öput
);

348 i‡(
ak
 =
JV_KIND_NUMBER
 && 
bk
 == JV_KIND_NUMBER) {

349 
jv
 
r
 = 
	`jv_numbî
(
	`jv_numbî_vÆue
(
a
Ë* jv_numbî_vÆue(
b
));

350 
	`jv_‰ì
(
a
);

351 
	`jv_‰ì
(
b
);

352  
r
;

353 } i‡((
ak
 =
JV_KIND_STRING
 && 
bk
 =
JV_KIND_NUMBER
) ||

354 (
ak
 =
JV_KIND_NUMBER
 && 
bk
 =
JV_KIND_STRING
)) {

355 
jv
 
°r
 = 
a
;

356 
jv
 
num
 = 
b
;

357 i‡(
ak
 =
JV_KIND_NUMBER
) {

358 
°r
 = 
b
;

359 
num
 = 
a
;

361 
jv
 
ªs
 = 
	`jv_nuŒ
();

362 
n
 = 
	`jv_numbî_vÆue
(
num
);

363 i‡(
n
 > 0) {

364 
size_t
 
Æí
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
°r
));

365 
ªs
 = 
	`jv_°rög_em±y
(
Æí
 * 
n
);

366 ; 
n
 > 0;Ç--) {

367 
ªs
 = 
	`jv_°rög_≠≥nd_buf
‘es, 
	`jv_°rög_vÆue
(
°r
), 
Æí
);

370 
	`jv_‰ì
(
°r
);

371 
	`jv_‰ì
(
num
);

372  
ªs
;

373 } i‡(
ak
 =
JV_KIND_OBJECT
 && 
bk
 == JV_KIND_OBJECT) {

374  
	`jv_obje˘_mîge_ªcursive
(
a
, 
b
);

376  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be multiplied");

378 
	}
}

380 
jv
 
	$f_divide
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

381 
	`jv_‰ì
(
öput
);

382 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
 && jv_gë_köd(
b
) == JV_KIND_NUMBER) {

383 i‡(
	`jv_numbî_vÆue
(
b
) == 0.0)

384  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be divided becauseÅhe divisor is zero");

385 
jv
 
r
 = 
	`jv_numbî
(
	`jv_numbî_vÆue
(
a
Ë/ jv_numbî_vÆue(
b
));

386 
	`jv_‰ì
(
a
);

387 
	`jv_‰ì
(
b
);

388  
r
;

389 } i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_STRING
 && jv_gë_köd(
b
) == JV_KIND_STRING) {

390  
	`jv_°rög_•lô
(
a
, 
b
);

392  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be divided");

394 
	}
}

396 
jv
 
	$f_mod
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

397 
	`jv_‰ì
(
öput
);

398 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
 && jv_gë_köd(
b
) == JV_KIND_NUMBER) {

399 i‡((
ötmax_t
)
	`jv_numbî_vÆue
(
b
) == 0)

400  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be divided (remainder) becauseÅhe divisor is zero");

401 
jv
 
r
 = 
	`jv_numbî
((
ötmax_t
)
	`jv_numbî_vÆue
(
a
Ë% (ötmax_t)jv_numbî_vÆue(
b
));

402 
	`jv_‰ì
(
a
);

403 
	`jv_‰ì
(
b
);

404  
r
;

406  
	`ty≥_îr‹2
(
a
, 
b
, "cannot be divided (remainder)");

408 
	}
}

410 
jv
 
	$f_equÆ
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

411 
	`jv_‰ì
(
öput
);

412  
	`jv_boﬁ
(
	`jv_equÆ
(
a
, 
b
));

413 
	}
}

415 
jv
 
	$f_nŸequÆ
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

416 
	`jv_‰ì
(
öput
);

417  
	`jv_boﬁ
(!
	`jv_equÆ
(
a
, 
b
));

418 
	}
}

420 
	ecmp_›
 {

421 
	mCMP_OP_LESS
,

422 
	mCMP_OP_GREATER
,

423 
	mCMP_OP_LESSEQ
,

424 
	mCMP_OP_GREATEREQ


427 
jv
 
	$‹dî_cmp
(
jv
 
öput
, jv 
a
, jv 
b
, 
cmp_›
 
›
) {

428 
	`jv_‰ì
(
öput
);

429 
r
 = 
	`jv_cmp
(
a
, 
b
);

430  
	`jv_boﬁ
((
›
 =
CMP_OP_LESS
 && 
r
 < 0) ||

431 (
›
 =
CMP_OP_LESSEQ
 && 
r
 <= 0) ||

432 (
›
 =
CMP_OP_GREATEREQ
 && 
r
 >= 0) ||

433 (
›
 =
CMP_OP_GREATER
 && 
r
 > 0));

434 
	}
}

436 
jv
 
	$f_Àss
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

437  
	`‹dî_cmp
(
öput
, 
a
, 
b
, 
CMP_OP_LESS
);

438 
	}
}

440 
jv
 
	$f_gª©î
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

441  
	`‹dî_cmp
(
öput
, 
a
, 
b
, 
CMP_OP_GREATER
);

442 
	}
}

444 
jv
 
	$f_Às£q
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

445  
	`‹dî_cmp
(
öput
, 
a
, 
b
, 
CMP_OP_LESSEQ
);

446 
	}
}

448 
jv
 
	$f_gª©îeq
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
, jv 
b
) {

449  
	`‹dî_cmp
(
öput
, 
a
, 
b
, 
CMP_OP_GREATEREQ
);

450 
	}
}

452 
jv
 
	$f_c⁄èös
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

453 i‡(
	`jv_gë_köd
(
a
Ë=jv_gë_köd(
b
)) {

454  
	`jv_boﬁ
(
	`jv_c⁄èös
(
a
, 
b
));

456  
	`ty≥_îr‹2
(
a
, 
b
, "cannot haveÅheir containment checked");

458 
	}
}

460 
jv
 
	$f_dump
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

461  
	`jv_dump_°rög
(
öput
, 0);

462 
	}
}

464 
jv
 
	$f_js⁄_∑r£
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

465 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_STRING
)

466  
	`ty≥_îr‹
(
öput
, "only strings can beÖarsed");

467 
jv
 
ªs
 = 
	`jv_∑r£_sized
(
	`jv_°rög_vÆue
(
öput
),

468 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
)));

469 
	`jv_‰ì
(
öput
);

470  
ªs
;

471 
	}
}

473 
jv
 
	$f_t⁄umbî
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

474 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_NUMBER
) {

475  
öput
;

477 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_STRING
) {

478 
jv
 
∑r£d
 = 
	`jv_∑r£
(
	`jv_°rög_vÆue
(
öput
));

479 i‡(!
	`jv_is_vÆid
(
∑r£d
Ë|| 
	`jv_gë_köd
’¨£dË=
JV_KIND_NUMBER
) {

480 
	`jv_‰ì
(
öput
);

481  
∑r£d
;

484  
	`ty≥_îr‹
(
öput
, "cannot beÖarsedásáÇumber");

485 
	}
}

487 
jv
 
	$f_Àngth
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

488 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_ARRAY
) {

489  
	`jv_numbî
(
	`jv_¨øy_Àngth
(
öput
));

490 } i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_OBJECT
) {

491  
	`jv_numbî
(
	`jv_obje˘_Àngth
(
öput
));

492 } i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_STRING
) {

493  
	`jv_numbî
(
	`jv_°rög_Àngth_codïoöts
(
öput
));

494 } i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_NUMBER
) {

495 
jv
 
r
 = 
	`jv_numbî
(
	`Ábs
(
	`jv_numbî_vÆue
(
öput
)));

496 
	`jv_‰ì
(
öput
);

497  
r
;

498 } i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_NULL
) {

499 
	`jv_‰ì
(
öput
);

500  
	`jv_numbî
(0);

502  
	`ty≥_îr‹
(
öput
, "hasÇoÜength");

504 
	}
}

506 
jv
 
	$f_to°rög
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

507 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_STRING
) {

508  
öput
;

510  
	`jv_dump_°rög
(
öput
, 0);

512 
	}
}

514 
jv
 
	$f_utf8byãÀngth
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

515 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_STRING
)

516  
	`ty≥_îr‹
(
öput
, "only strings have UTF-8 byteÜength");

517  
	`jv_numbî
(
	`jv_°rög_Àngth_byãs
(
öput
));

518 
	}
}

520 
	#CHARS_ALPHANUM
 "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmn›qr°uvwxyz0123456789"

	)

522 c⁄° 
	gBASE64_ENCODE_TABLE
[64 + 1] = 
CHARS_ALPHANUM
 "+/";

523 c⁄° 
	gBASE64_INVALID_ENTRY
 = 0xFF;

524 c⁄° 
	gBASE64_DECODE_TABLE
[255] = {

540 
jv
 
	$esˇ≥_°rög
(
jv
 
öput
, c⁄° * 
esˇpögs
) {

542 
	`as£π
(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_STRING
);

543 c⁄° * 
lookup
[128] = {0};

544 c⁄° * 
p
 = 
esˇpögs
;

545 
lookup
[0] = "\\0";

546 *
p
) {

547 
lookup
[()*
p
] =Ö+1;

548 
p
++;

549 
p
 +
	`°æí
(p);

550 
p
++;

553 
jv
 
ªt
 = 
	`jv_°rög
("");

554 c⁄° * 
i
 = 
	`jv_°rög_vÆue
(
öput
);

555 c⁄° * 
íd
 = 
i
 + 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
));

556 c⁄° * 
c°¨t
;

557 
c
 = 0;

558 (
i
 = 
	`jvp_utf8_√xt
((
c°¨t
 = i), 
íd
, &
c
))) {

559 i‡(
c
 < 128 && 
lookup
[c]) {

560 
ªt
 = 
	`jv_°rög_≠≥nd_°r
‘ë, 
lookup
[
c
]);

562 
ªt
 = 
	`jv_°rög_≠≥nd_buf
‘ë, 
c°¨t
, 
i
 - cstart);

565 
	`jv_‰ì
(
öput
);

566  
ªt
;

568 
	}
}

570 
jv
 
	$f_f‹m©
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
fmt
) {

571 i‡(
	`jv_gë_köd
(
fmt
Ë!
JV_KIND_STRING
) {

572 
	`jv_‰ì
(
öput
);

573  
	`ty≥_îr‹
(
fmt
, "isÇotá valid format");

575 c⁄° * 
fmt_s
 = 
	`jv_°rög_vÆue
(
fmt
);

576 i‡(!
	`°rcmp
(
fmt_s
, "json")) {

577 
	`jv_‰ì
(
fmt
);

578  
	`jv_dump_°rög
(
öput
, 0);

579 } i‡(!
	`°rcmp
(
fmt_s
, "text")) {

580 
	`jv_‰ì
(
fmt
);

581  
	`f_to°rög
(
jq
, 
öput
);

582 } i‡(!
	`°rcmp
(
fmt_s
, "csv") || !strcmp(fmt_s, "tsv")) {

583 c⁄° *
quŸes
, *
£p
, *
esˇpögs
;

584 c⁄° *
msg
;

585 i‡(!
	`°rcmp
(
fmt_s
, "csv")) {

586 
msg
 = "cannot be csv-formatted, onlyárray";

587 
quŸes
 = "\"";

588 
£p
 = ",";

589 
esˇpögs
 = "\"\"\"\0";

591 
msg
 = "cannot beÅsv-formatted, onlyárray";

592 
	`as£π
(!
	`°rcmp
(
fmt_s
, "tsv"));

593 
quŸes
 = "";

594 
£p
 = "\t";

595 
esˇpögs
 = "\t\\t\0\r\\r\0\n\\n\0\\\\\\\0";

597 
	`jv_‰ì
(
fmt
);

598 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_ARRAY
)

599  
	`ty≥_îr‹
(
öput
, 
msg
);

600 
jv
 
löe
 = 
	`jv_°rög
("");

601 
	`jv_¨øy_f‹óch
(
öput
, 
i
, 
x
) {

602 i‡(
i
Ë
löe
 = 
	`jv_°rög_≠≥nd_°r
÷öe, 
£p
);

603 
	`jv_gë_köd
(
x
)) {

604 
JV_KIND_NULL
:

606 
	`jv_‰ì
(
x
);

608 
JV_KIND_TRUE
:

609 
JV_KIND_FALSE
:

610 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`jv_dump_°rög
(
x
, 0));

612 
JV_KIND_NUMBER
:

613 i‡(
	`jv_numbî_vÆue
(
x
) != jv_number_value(x)) {

615 
	`jv_‰ì
(
x
);

617 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`jv_dump_°rög
(
x
, 0));

620 
JV_KIND_STRING
: {

621 
löe
 = 
	`jv_°rög_≠≥nd_°r
÷öe, 
quŸes
);

622 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`esˇ≥_°rög
(
x
, 
esˇpögs
));

623 
löe
 = 
	`jv_°rög_≠≥nd_°r
÷öe, 
quŸes
);

627 
	`jv_‰ì
(
öput
);

628 
	`jv_‰ì
(
löe
);

629  
	`ty≥_îr‹
(
x
, "isÇot valid iná csvÑow");

632 
	`jv_‰ì
(
öput
);

633  
löe
;

634 } i‡(!
	`°rcmp
(
fmt_s
, "html")) {

635 
	`jv_‰ì
(
fmt
);

636  
	`esˇ≥_°rög
(
	`f_to°rög
(
jq
, 
öput
), "&&amp;\0<&lt;\0>&gt;\0'&apos;\0\"&quot;\0");

637 } i‡(!
	`°rcmp
(
fmt_s
, "uri")) {

638 
	`jv_‰ì
(
fmt
);

639 
öput
 = 
	`f_to°rög
(
jq
, input);

641 
uƒe£rved
[128] = {0};

642 c⁄° * 
p
 = 
CHARS_ALPHANUM
 "-_.!~*'()";

643 *
p
Ë
uƒe£rved
[()*p++] = 1;

645 
jv
 
löe
 = 
	`jv_°rög
("");

646 c⁄° * 
s
 = 
	`jv_°rög_vÆue
(
öput
);

647 
i
=0; i<
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
)); i++) {

648 
ch
 = ()()*
s
;

649 i‡(
ch
 < 128 && 
uƒe£rved
[ch]) {

650 
löe
 = 
	`jv_°rög_≠≥nd_buf
÷öe, 
s
, 1);

652 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`jv_°rög_fmt
("%%%02X", 
ch
));

654 
s
++;

656 
	`jv_‰ì
(
öput
);

657  
löe
;

658 } i‡(!
	`°rcmp
(
fmt_s
, "sh")) {

659 
	`jv_‰ì
(
fmt
);

660 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_ARRAY
)

661 
öput
 = 
	`jv_¨øy_£t
(
	`jv_¨øy
(), 0, input);

662 
jv
 
löe
 = 
	`jv_°rög
("");

663 
	`jv_¨øy_f‹óch
(
öput
, 
i
, 
x
) {

664 i‡(
i
Ë
löe
 = 
	`jv_°rög_≠≥nd_°r
(line, " ");

665 
	`jv_gë_köd
(
x
)) {

666 
JV_KIND_NULL
:

667 
JV_KIND_TRUE
:

668 
JV_KIND_FALSE
:

669 
JV_KIND_NUMBER
:

670 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`jv_dump_°rög
(
x
, 0));

673 
JV_KIND_STRING
: {

674 
löe
 = 
	`jv_°rög_≠≥nd_°r
(line, "'");

675 
löe
 = 
	`jv_°rög_c⁄ˇt
÷öe, 
	`esˇ≥_°rög
(
x
, "''\\''\0"));

676 
löe
 = 
	`jv_°rög_≠≥nd_°r
(line, "'");

681 
	`jv_‰ì
(
öput
);

682 
	`jv_‰ì
(
löe
);

683  
	`ty≥_îr‹
(
x
, "canÇot beÉscaped for shell");

686 
	`jv_‰ì
(
öput
);

687  
löe
;

688 } i‡(!
	`°rcmp
(
fmt_s
, "base64")) {

689 
	`jv_‰ì
(
fmt
);

690 
öput
 = 
	`f_to°rög
(
jq
, input);

691 
jv
 
löe
 = 
	`jv_°rög
("");

692 c⁄° * 
d©a
 = (c⁄° *)
	`jv_°rög_vÆue
(
öput
);

693 
Àn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
));

694 
i
=0; i<
Àn
; i+=3) {

695 
uöt32_t
 
code
 = 0;

696 
n
 = 
Àn
 - 
i
 >= 3 ? 3 :Üen-i;

697 
j
=0; j<3; j++) {

698 
code
 <<= 8;

699 
code
 |
j
 < 
n
 ? ()
d©a
[
i
+j] : 0;

701 
buf
[4];

702 
j
=0; j<4; j++) {

703 
buf
[
j
] = 
BASE64_ENCODE_TABLE
[(
code
 >> (18 - j*6)) & 0x3f];

705 i‡(
n
 < 3Ë
buf
[3] = '=';

706 i‡(
n
 < 2Ë
buf
[2] = '=';

707 
löe
 = 
	`jv_°rög_≠≥nd_buf
÷öe, 
buf
, (buf));

709 
	`jv_‰ì
(
öput
);

710  
löe
;

711 } i‡(!
	`°rcmp
(
fmt_s
, "base64d")) {

712 
	`jv_‰ì
(
fmt
);

713 
öput
 = 
	`f_to°rög
(
jq
, input);

714 c⁄° * 
d©a
 = (c⁄° *)
	`jv_°rög_vÆue
(
öput
);

715 
Àn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
));

716 
size_t
 
decoded_Àn
 = (3 * 
Àn
) / 4;

717 *
ªsu…
 = 
	`jv_mem_ˇŒoc
(
decoded_Àn
, ());

718 
	`mem£t
(
ªsu…
, 0, 
decoded_Àn
 * ());

719 
uöt32_t
 
ri
 = 0;

720 
öput_byãs_ªad
=0;

721 
uöt32_t
 
code
 = 0;

722 
i
=0; i<
Àn
 && 
d©a
[i] != '='; i++) {

723 i‡(
BASE64_DECODE_TABLE
[
d©a
[
i
]] =
BASE64_INVALID_ENTRY
) {

724 
	`‰ì
(
ªsu…
);

725  
	`ty≥_îr‹
(
öput
, "isÇot valid base64 data");

728 
code
 <<= 6;

729 
code
 |
BASE64_DECODE_TABLE
[
d©a
[
i
]];

730 
öput_byãs_ªad
++;

732 i‡(
öput_byãs_ªad
 == 4) {

733 
ªsu…
[
ri
++] = (
code
 >> 16) & 0xFF;

734 
ªsu…
[
ri
++] = (
code
 >> 8) & 0xFF;

735 
ªsu…
[
ri
++] = 
code
 & 0xFF;

736 
öput_byãs_ªad
 = 0;

737 
code
 = 0;

740 i‡(
öput_byãs_ªad
 == 3) {

741 
ªsu…
[
ri
++] = (
code
 >> 10) & 0xFF;

742 
ªsu…
[
ri
++] = (
code
 >> 2) & 0xFF;

743 } i‡(
öput_byãs_ªad
 == 2) {

744 
ªsu…
[
ri
++] = (
code
 >> 4) & 0xFF;

745 } i‡(
öput_byãs_ªad
 == 1) {

746 
	`‰ì
(
ªsu…
);

747  
	`ty≥_îr‹
(
öput
, "trailing base64 byte found");

750 
jv
 
löe
 = 
	`jv_°rög_sized
(
ªsu…
, 
ri
);

751 
	`jv_‰ì
(
öput
);

752 
	`‰ì
(
ªsu…
);

753  
löe
;

755 
	`jv_‰ì
(
öput
);

756  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_c⁄ˇt
(
fmt
, 
	`jv_°rög
(" isÇotá valid format")));

758 
	}
}

760 
jv
 
	$f_keys
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

761 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_OBJECT
 || jv_gë_köd(öputË=
JV_KIND_ARRAY
) {

762  
	`jv_keys
(
öput
);

764  
	`ty≥_îr‹
(
öput
, "hasÇo keys");

766 
	}
}

768 
jv
 
	$f_keys_uns‹ãd
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

769 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_OBJECT
 || jv_gë_köd(öputË=
JV_KIND_ARRAY
) {

770  
	`jv_keys_uns‹ãd
(
öput
);

772  
	`ty≥_îr‹
(
öput
, "hasÇo keys");

774 
	}
}

776 
jv
 
	$f_s‹t
(
jq_°©e
 *
jq
, 
jv
 
öput
){

777 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_ARRAY
) {

778  
	`jv_s‹t
(
öput
, 
	`jv_c›y
(input));

780  
	`ty≥_îr‹
(
öput
, "cannot be sorted,ás it isÇotánárray");

782 
	}
}

784 
jv
 
	$f_s‹t_by_im∂
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
keys
) {

785 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_ARRAY
 &&

786 
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
 &&

787 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
öput
)Ë=jv_¨øy_Àngth(jv_c›y(
keys
))) {

788  
	`jv_s‹t
(
öput
, 
keys
);

790  
	`ty≥_îr‹2
(
öput
, 
keys
, "cannot be sorted,ásÅheyáreÇot bothárrays");

792 
	}
}

794 
jv
 
	$f_group_by_im∂
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
keys
) {

795 i‡(
	`jv_gë_köd
(
öput
Ë=
JV_KIND_ARRAY
 &&

796 
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
 &&

797 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
öput
)Ë=jv_¨øy_Àngth(jv_c›y(
keys
))) {

798  
	`jv_group
(
öput
, 
keys
);

800  
	`ty≥_îr‹2
(
öput
, 
keys
, "cannot be sorted,ásÅheyáreÇot bothárrays");

802 
	}
}

804 #ifde‡
HAVE_LIBONIG


805 
	$f_m©ch_«me_ôî
(c⁄° 
UCh¨
* 
«me
, c⁄° UCh¨ *
«me_íd
, 
ngroups
,

806 *
groups
, 
ªgex_t
 *
ªg
, *
¨g
) {

807 
jv
 
ˇ±uªs
 = *(jv*)
¨g
;

808 
i
 = 0; i < 
ngroups
; ++i) {

809 
jv
 
ˇp
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
ˇ±uªs
),
groups
[
i
]-1);

810 i‡(
	`jv_gë_köd
(
ˇp
Ë=
JV_KIND_OBJECT
) {

811 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("«me"), 
	`jv_°rög_sized
((c⁄° *)
«me
, 
«me_íd
-name));

812 
ˇ±uªs
 = 
	`jv_¨øy_£t
(ˇ±uªs,
groups
[
i
]-1,
ˇp
);

814 
	`jv_‰ì
(
ˇp
);

817 *(
jv
 *)
¨g
 = 
ˇ±uªs
;

819 
	}
}

821 
jv
 
	$f_m©ch
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
ªgex
, jv 
modifõrs
, jv 
ã°mode
) {

822 
ã°
 = 
	`jv_equÆ
(
ã°mode
, 
	`jv_åue
());

823 
jv
 
ªsu…
;

824 
⁄igªt
;

825 
globÆ
 = 0;

826 
ªgex_t
 *
ªg
;

827 
OnigEº‹Info
 
eöfo
;

828 
OnigRegi⁄
* 
ªgi⁄
;

830 i‡(
	`jv_gë_köd
(
öput
Ë!
JV_KIND_STRING
) {

831 
	`jv_‰ì
(
ªgex
);

832 
	`jv_‰ì
(
modifõrs
);

833  
	`ty≥_îr‹
(
öput
, "cannot be matched,ás it isÇotá string");

836 i‡(
	`jv_gë_köd
(
ªgex
Ë!
JV_KIND_STRING
) {

837 
	`jv_‰ì
(
öput
);

838 
	`jv_‰ì
(
modifõrs
);

839  
	`ty≥_îr‹
(
ªgex
, "isÇotá string");

842 
OnigO±i⁄Ty≥
 
›ti⁄s
 = 
ONIG_OPTION_CAPTURE_GROUP
;

844 i‡(
	`jv_gë_köd
(
modifõrs
Ë=
JV_KIND_STRING
) {

845 
jv
 
mod¨øy
 = 
	`jv_°rög_ex∂ode
(
	`jv_c›y
(
modifõrs
));

846 
	`jv_¨øy_f‹óch
(
mod¨øy
, 
i
, 
mod
) {

847 ()
	`jv_numbî_vÆue
(
mod
)) {

849 
globÆ
 = 1;

852 
›ti⁄s
 |
ONIG_OPTION_IGNORECASE
;

855 
›ti⁄s
 |
ONIG_OPTION_EXTEND
;

858 
›ti⁄s
 |
ONIG_OPTION_MULTILINE
;

861 
›ti⁄s
 |
ONIG_OPTION_SINGLELINE
;

864 
›ti⁄s
 |
ONIG_OPTION_MULTILINE
 | 
ONIG_OPTION_SINGLELINE
;

867 
›ti⁄s
 |
ONIG_OPTION_FIND_LONGEST
;

870 
›ti⁄s
 |
ONIG_OPTION_FIND_NOT_EMPTY
;

873 
	`jv_‰ì
(
öput
);

874 
	`jv_‰ì
(
ªgex
);

875 
	`jv_‰ì
(
mod¨øy
);

876  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_c⁄ˇt
(
modifõrs
,

877 
	`jv_°rög
(" isÇotá valid modifier string")));

880 
	`jv_‰ì
(
mod¨øy
);

881 } i‡(
	`jv_gë_köd
(
modifõrs
Ë!
JV_KIND_NULL
) {

883 
	`jv_‰ì
(
öput
);

884 
	`jv_‰ì
(
ªgex
);

885  
	`ty≥_îr‹
(
modifõrs
, "isÇotá string");

888 
	`jv_‰ì
(
modifõrs
);

890 
⁄igªt
 = 
	`⁄ig_√w
(&
ªg
, (c⁄° 
UCh¨
*)
	`jv_°rög_vÆue
(
ªgex
),

891 (c⁄° 
UCh¨
*)(
	`jv_°rög_vÆue
(
ªgex
Ë+ 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(regex))),

892 
›ti⁄s
, 
ONIG_ENCODING_UTF8
, 
ONIG_SYNTAX_PERL_NG
, &
eöfo
);

893 i‡(
⁄igªt
 !
ONIG_NORMAL
) {

894 
UCh¨
 
ebuf
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

895 
	`⁄ig_îr‹_code_to_°r
(
ebuf
, 
⁄igªt
, &
eöfo
);

896 
	`jv_‰ì
(
öput
);

897 
	`jv_‰ì
(
ªgex
);

898  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_c⁄ˇt
(
	`jv_°rög
("Regex failure: "),

899 
	`jv_°rög
((*)
ebuf
)));

901 
ªsu…
 = 
ã°
 ? 
	`jv_Ál£
(Ë: 
	`jv_¨øy
();

902 c⁄° *
öput_°rög
 = 
	`jv_°rög_vÆue
(
öput
);

903 c⁄° 
UCh¨
* 
°¨t
 = (c⁄° UCh¨*)
	`jv_°rög_vÆue
(
öput
);

904 c⁄° 
Àngth
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
öput
));

905 c⁄° 
UCh¨
* 
íd
 = 
°¨t
 + 
Àngth
;

906 
ªgi⁄
 = 
	`⁄ig_ªgi⁄_√w
();

908 
⁄igªt
 = 
	`⁄ig_£¨ch
(
ªg
,

909 (c⁄° 
UCh¨
*)
	`jv_°rög_vÆue
(
öput
), 
íd
,

910 
°¨t
, 
íd
,

911 
ªgi⁄
, 
ONIG_OPTION_NONE
);

912 i‡(
⁄igªt
 >= 0) {

913 i‡(
ã°
) {

914 
ªsu…
 = 
	`jv_åue
();

919 i‡(
ªgi⁄
->
íd
[0] =ªgi⁄->
beg
[0]) {

920 
idx
;

921 c⁄° *
‰
 = (c⁄° *)
öput_°rög
;

922 
idx
 = 0; 
‰
 < 
öput_°rög
+
ªgi⁄
->
beg
[0]; idx++) {

923 
‰
 +
	`jvp_utf8_decode_Àngth
(*fr);

925 
jv
 
m©ch
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("off£t"), 
	`jv_numbî
(
idx
));

926 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("Àngth"), 
	`jv_numbî
(0));

927 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("string"), jv_string(""));

928 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("ˇ±uªs"), 
	`jv_¨øy
());

929 
ªsu…
 = 
	`jv_¨øy_≠≥nd
‘esu…, 
m©ch
);

930 
°¨t
 += 1;

934 
idx
;

935 
Àn
;

936 c⁄° *
‰
 = (c⁄° *)
öput_°rög
;

938 
idx
 = 
Àn
 = 0; 
‰
 < 
öput_°rög
+
ªgi⁄
->
íd
[0];Üen++) {

939 i‡(
‰
 =
öput_°rög
+
ªgi⁄
->
beg
[0]Ë
idx
 = 
Àn
,Üen=0;

940 
‰
 +
	`jvp_utf8_decode_Àngth
(*fr);

943 
jv
 
m©ch
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("off£t"), 
	`jv_numbî
(
idx
));

945 
bÀn
 = 
ªgi⁄
->
íd
[0]-ªgi⁄->
beg
[0];

946 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("Àngth"), 
	`jv_numbî
(
Àn
));

947 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("°rög"), 
	`jv_°rög_sized
(
öput_°rög
+
ªgi⁄
->
beg
[0],
bÀn
));

948 
jv
 
ˇ±uªs
 = 
	`jv_¨øy
();

949 
i
 = 1; i < 
ªgi⁄
->
num_ªgs
; ++i) {

951 i‡(
ªgi⁄
->
beg
[
i
] =ªgi⁄->
íd
[i]) {

953 
jv
 
ˇp
;

954 i‡(
ªgi⁄
->
beg
[
i
] == -1) {

955 
ˇp
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("off£t"), 
	`jv_numbî
(-1));

956 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("°rög"), 
	`jv_nuŒ
());

958 
‰
 = 
öput_°rög
;

959 
idx
 = 0; 
‰
 < 
öput_°rög
+
ªgi⁄
->
beg
[
i
]; idx++) {

960 
‰
 +
	`jvp_utf8_decode_Àngth
(*fr);

962 
ˇp
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("off£t"), 
	`jv_numbî
(
idx
));

963 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("string"), jv_string(""));

965 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("Àngth"), 
	`jv_numbî
(0));

966 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("«me"), 
	`jv_nuŒ
());

967 
ˇ±uªs
 = 
	`jv_¨øy_≠≥nd
(ˇ±uªs, 
ˇp
);

970 
‰
 = 
öput_°rög
;

971 
idx
 = 
Àn
 = 0; 
‰
 < 
öput_°rög
+
ªgi⁄
->
íd
[
i
];Üen++) {

972 i‡(
‰
 =
öput_°rög
+
ªgi⁄
->
beg
[
i
]Ë
idx
 = 
Àn
,Üen=0;

973 
‰
 +
	`jvp_utf8_decode_Àngth
(*fr);

976 
bÀn
 = 
ªgi⁄
->
íd
[
i
]-ªgi⁄->
beg
[i];

977 
jv
 
ˇp
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("off£t"), 
	`jv_numbî
(
idx
));

978 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("Àngth"), 
	`jv_numbî
(
Àn
));

979 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("°rög"), 
	`jv_°rög_sized
(
öput_°rög
+
ªgi⁄
->
beg
[
i
],
bÀn
));

980 
ˇp
 = 
	`jv_obje˘_£t
(ˇp, 
	`jv_°rög
("«me"), 
	`jv_nuŒ
());

981 
ˇ±uªs
 = 
	`jv_¨øy_≠≥nd
(ˇ±uªs,
ˇp
);

983 
	`⁄ig_f‹óch_«me
(
ªg
,
f_m©ch_«me_ôî
,&
ˇ±uªs
);

984 
m©ch
 = 
	`jv_obje˘_£t
(m©ch, 
	`jv_°rög
("ˇ±uªs"), 
ˇ±uªs
);

985 
ªsu…
 = 
	`jv_¨øy_≠≥nd
‘esu…, 
m©ch
);

986 
°¨t
 = (c⁄° 
UCh¨
*)(
öput_°rög
+
ªgi⁄
->
íd
[0]);

987 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
,0);

988 } i‡(
⁄igªt
 =
ONIG_MISMATCH
) {

991 
UCh¨
 
ebuf
[
ONIG_MAX_ERROR_MESSAGE_LEN
];

992 
	`⁄ig_îr‹_code_to_°r
(
ebuf
, 
⁄igªt
, &
eöfo
);

993 
	`jv_‰ì
(
ªsu…
);

994 
ªsu…
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_c⁄ˇt
(
	`jv_°rög
("Regex failure: "),

995 
	`jv_°rög
((*)
ebuf
)));

998 } 
globÆ
 && 
°¨t
 !
íd
);

999 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
,1);

1000 
ªgi⁄
 = 
NULL
;

1001 i‡(
ªgi⁄
)

1002 
	`⁄ig_ªgi⁄_‰ì
(
ªgi⁄
,1);

1003 
	`⁄ig_‰ì
(
ªg
);

1004 
	`jv_‰ì
(
öput
);

1005 
	`jv_‰ì
(
ªgex
);

1006  
ªsu…
;

1007 
	}
}

1009 
jv
 
	$f_m©ch
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
ªgex
, jv 
modifõrs
, jv 
ã°mode
) {

1010  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("jq was compiled without ONIGURUMAÑegexÜibrary. match/test/subándÑelated functionsáreÇotávailable."));

1011 
	}
}

1014 
jv
 
	$mömax_by
(
jv
 
vÆues
, jv 
keys
, 
is_mö
) {

1015 i‡(
	`jv_gë_köd
(
vÆues
Ë!
JV_KIND_ARRAY
)

1016  
	`ty≥_îr‹2
(
vÆues
, 
keys
, "cannot be iterated over");

1017 i‡(
	`jv_gë_köd
(
keys
Ë!
JV_KIND_ARRAY
)

1018  
	`ty≥_îr‹2
(
vÆues
, 
keys
, "cannot be iterated over");

1019 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
vÆues
)Ë!jv_¨øy_Àngth(jv_c›y(
keys
)))

1020  
	`ty≥_îr‹2
(
vÆues
, 
keys
, "have wrongÜength");

1022 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
vÆues
)) == 0) {

1023 
	`jv_‰ì
(
vÆues
);

1024 
	`jv_‰ì
(
keys
);

1025  
	`jv_nuŒ
();

1027 
jv
 
ªt
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
vÆues
), 0);

1028 
jv
 
ªtkey
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
keys
), 0);

1029 
i
=1; i<
	`jv_¨øy_Àngth
(
	`jv_c›y
(
vÆues
)); i++) {

1030 
jv
 
ôem
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
keys
), 
i
);

1031 
cmp
 = 
	`jv_cmp
(
	`jv_c›y
(
ôem
), jv_c›y(
ªtkey
));

1032 i‡((
cmp
 < 0Ë=(
is_mö
 == 1)) {

1033 
	`jv_‰ì
(
ªtkey
);

1034 
ªtkey
 = 
ôem
;

1035 
	`jv_‰ì
(
ªt
);

1036 
ªt
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
vÆues
), 
i
);

1038 
	`jv_‰ì
(
ôem
);

1041 
	`jv_‰ì
(
vÆues
);

1042 
	`jv_‰ì
(
keys
);

1043 
	`jv_‰ì
(
ªtkey
);

1044  
ªt
;

1045 
	}
}

1047 
jv
 
	$f_mö
(
jq_°©e
 *
jq
, 
jv
 
x
) {

1048  
	`mömax_by
(
x
, 
	`jv_c›y
(x), 1);

1049 
	}
}

1051 
jv
 
	$f_max
(
jq_°©e
 *
jq
, 
jv
 
x
) {

1052  
	`mömax_by
(
x
, 
	`jv_c›y
(x), 0);

1053 
	}
}

1055 
jv
 
	$f_mö_by_im∂
(
jq_°©e
 *
jq
, 
jv
 
x
, jv 
y
) {

1056  
	`mömax_by
(
x
, 
y
, 1);

1057 
	}
}

1059 
jv
 
	$f_max_by_im∂
(
jq_°©e
 *
jq
, 
jv
 
x
, jv 
y
) {

1060  
	`mömax_by
(
x
, 
y
, 0);

1061 
	}
}

1064 
jv
 
	$f_ty≥
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1065 
jv
 
out
 = 
	`jv_°rög
(
	`jv_köd_«me
(
	`jv_gë_köd
(
öput
)));

1066 
	`jv_‰ì
(
öput
);

1067  
out
;

1068 
	}
}

1070 
jv
 
	$f_isöföôe
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1071 
jv_köd
 
k
 = 
	`jv_gë_köd
(
öput
);

1072 i‡(
k
 !
JV_KIND_NUMBER
) {

1073 
	`jv_‰ì
(
öput
);

1074  
	`jv_Ál£
();

1076 
n
 = 
	`jv_numbî_vÆue
(
öput
);

1077 
	`jv_‰ì
(
öput
);

1078  
	`isöf
(
n
Ë? 
	`jv_åue
(Ë: 
	`jv_Ál£
();

1079 
	}
}

1081 
jv
 
	$f_i¢™
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1082 
jv_köd
 
k
 = 
	`jv_gë_köd
(
öput
);

1083 i‡(
k
 !
JV_KIND_NUMBER
) {

1084 
	`jv_‰ì
(
öput
);

1085  
	`jv_Ál£
();

1087 
n
 = 
	`jv_numbî_vÆue
(
öput
);

1088 
	`jv_‰ì
(
öput
);

1089  
	`i¢™
(
n
Ë? 
	`jv_åue
(Ë: 
	`jv_Ál£
();

1090 
	}
}

1092 
jv
 
	$f_i¢‹mÆ
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1093 
jv_köd
 
k
 = 
	`jv_gë_köd
(
öput
);

1094 i‡(
k
 !
JV_KIND_NUMBER
) {

1095 
	`jv_‰ì
(
öput
);

1096  
	`jv_Ál£
();

1098 
n
 = 
	`jv_numbî_vÆue
(
öput
);

1099 
	`jv_‰ì
(
öput
);

1100  
	`i¢‹mÆ
(
n
Ë? 
	`jv_åue
(Ë: 
	`jv_Ál£
();

1101 
	}
}

1103 
jv
 
	$f_öföôe
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1104 
	`jv_‰ì
(
öput
);

1105  
	`jv_numbî
(
INFINITY
);

1106 
	}
}

1108 
jv
 
	$f_«n
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1109 
	`jv_‰ì
(
öput
);

1110  
	`jv_numbî
(
NAN
);

1111 
	}
}

1113 
jv
 
	$f_îr‹
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1114  
	`jv_övÆid_wôh_msg
(
öput
);

1115 
	}
}

1118 #i‚de‡
WIN32


1119 **
ívú⁄
;

1122 
jv
 
	$f_ív
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1123 
	`jv_‰ì
(
öput
);

1124 
jv
 
ív
 = 
	`jv_obje˘
();

1125 c⁄° *
v¨
, *
vÆ
;

1126 **
e
 = 
ívú⁄
; *ê!
NULL
;É++) {

1127 
v¨
 = 
e
[0];

1128 
vÆ
 = 
	`°rchr
(
e
[0], '=');

1129 i‡(
vÆ
 =
NULL
)

1130 
ív
 = 
	`jv_obje˘_£t
”nv, 
	`jv_°rög
(
v¨
), 
	`jv_nuŒ
());

1131 i‡(
v¨
 - 
vÆ
 < 
INT_MAX
)

1132 
ív
 = 
	`jv_obje˘_£t
”nv, 
	`jv_°rög_sized
(
v¨
, 
vÆ
 - v¨), 
	`jv_°rög
(val + 1));

1134  
ív
;

1135 
	}
}

1137 
jv
 
	$f_hÆt
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1138 
	`jv_‰ì
(
öput
);

1139 
	`jq_hÆt
(
jq
, 
	`jv_övÆid
(), jv_invalid());

1140  
	`jv_åue
();

1141 
	}
}

1143 
jv
 
	$f_hÆt_îr‹
(
jq_°©e
 *
jq
, 
jv
 
öput
, jv 
a
) {

1144 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
) {

1145 
	`jv_‰ì
(
a
);

1146  
	`ty≥_îr‹
(
öput
, "halt_error/1:ÇumberÑequired");

1148 
	`jq_hÆt
(
jq
, 
a
, 
öput
);

1149  
	`jv_åue
();

1150 
	}
}

1152 
jv
 
	$f_gë_£¨ch_li°
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1153 
	`jv_‰ì
(
öput
);

1154  
	`jq_gë_lib_dús
(
jq
);

1155 
	}
}

1157 
jv
 
	$f_gë_¥og_‹igö
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1158 
	`jv_‰ì
(
öput
);

1159  
	`jq_gë_¥og_‹igö
(
jq
);

1160 
	}
}

1162 
jv
 
	$f_gë_jq_‹igö
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1163 
	`jv_‰ì
(
öput
);

1164  
	`jq_gë_jq_‹igö
(
jq
);

1165 
	}
}

1167 
jv
 
	$f_°rög_•lô
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1168 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
 || jv_gë_köd(
b
) != JV_KIND_STRING) {

1169  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("split inputánd separator must be strings"));

1171  
	`jv_°rög_•lô
(
a
, 
b
);

1172 
	}
}

1174 
jv
 
	$f_°rög_ex∂ode
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1175 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
) {

1176  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("explode input must beá string"));

1178  
	`jv_°rög_ex∂ode
(
a
);

1179 
	}
}

1181 
jv
 
	$f_°rög_ödexes
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1182  
	`jv_°rög_ödexes
(
a
, 
b
);

1183 
	}
}

1185 
jv
 
	$f_°rög_im∂ode
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1186 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_ARRAY
) {

1187  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("implode input must beánárray"));

1189  
	`jv_°rög_im∂ode
(
a
);

1190 
	}
}

1192 
jv
 
	$f_£ç©h
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
, jv 
c
Ë{  
	`jv_£ç©h
◊, b, c); 
	}
}

1193 
jv
 
_jq_∑th_≠≥nd
(
jq_°©e
 *, jv, jv, jv);

1194 
jv
 
	$f_gë∑th
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1195  
	`_jq_∑th_≠≥nd
(
jq
, 
a
, 
b
, 
	`jv_gë∑th
(
	`jv_c›y
(a), jv_copy(b)));

1196 
	}
}

1197 
jv
 
	$f_dñ∑ths
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
Ë{  
	`jv_dñ∑ths
◊, b); 
	}
}

1198 
jv
 
	$f_has
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
Ë{  
	`jv_has
◊, b); 
	}
}

1200 
jv
 
	$f_moduÀmëa
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1201 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
) {

1202  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("modulemeta input moduleÇame must beá string"));

1204  
	`lﬂd_moduÀ_mëa
(
jq
, 
a
);

1205 
	}
}

1207 
jv
 
	$f_öput
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1208 
	`jv_‰ì
(
öput
);

1209 
jq_öput_cb
 
cb
;

1210 *
d©a
;

1211 
	`jq_gë_öput_cb
(
jq
, &
cb
, &
d©a
);

1212 i‡(
cb
 =
NULL
)

1213  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("break"));

1214 
jv
 
v
 = 
	`cb
(
jq
, 
d©a
);

1215 i‡(
	`jv_is_vÆid
(
v
Ë|| 
	`jv_övÆid_has_msg
(
	`jv_c›y
(v)))

1216  
v
;

1217  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("break"));

1218 
	}
}

1220 
jv
 
	$f_debug
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1221 
jq_msg_cb
 
cb
;

1222 *
d©a
;

1223 
	`jq_gë_debug_cb
(
jq
, &
cb
, &
d©a
);

1224 i‡(
cb
 !
NULL
)

1225 
	`cb
(
d©a
, 
	`jv_c›y
(
öput
));

1226  
öput
;

1227 
	}
}

1229 
jv
 
	$f_°dîr
(
jq_°©e
 *
jq
, 
jv
 
öput
) {

1230 
	`jv_dumpf
(
	`jv_c›y
(
öput
), 
°dîr
, 0);

1231  
öput
;

1232 
	}
}

1234 
jv
 
	$tm2jv
(
tm
 *tm) {

1235  
	`JV_ARRAY
(
	`jv_numbî
(
tm
->
tm_yór
 + 1900),

1236 
	`jv_numbî
(
tm
->
tm_m⁄
),

1237 
	`jv_numbî
(
tm
->
tm_mday
),

1238 
	`jv_numbî
(
tm
->
tm_hour
),

1239 
	`jv_numbî
(
tm
->
tm_mö
),

1240 
	`jv_numbî
(
tm
->
tm_£c
),

1241 
	`jv_numbî
(
tm
->
tm_wday
),

1242 
	`jv_numbî
(
tm
->
tm_yday
));

1243 
	}
}

1245 #i‡
deföed
(
WIN32
Ë&& !deföed(
HAVE_SETENV
)

1246 
	$£ãnv
(c⁄° *
v¨
, c⁄° *
vÆ
, 
ovr
)

1248 
BOOL
 
b
;

1249 
c
[2];

1250 i‡(!
ovr
)

1252 
DWORD
 
d
;

1253 
d
 = 
	`GëEnvú⁄mítV¨übÀA
 (
v¨
, 
c
, 2);

1254 i‡(0 !
d
 && 
	`GëLa°Eº‹
 (Ë!
ERROR_ENVVAR_NOT_FOUND
) {

1255  
d
;

1258 
b
 = 
	`SëEnvú⁄mítV¨übÀA
 (
v¨
, 
vÆ
);

1259 i‡(
b
) {

1263 
	}
}

1281 
time_t
 
	$my_mktime
(
tm
 *tm) {

1282 #ifde‡
HAVE_TIMEGM


1283  
	`timegm
(
tm
);

1284 #ñi‡
HAVE_TM_TM_GMT_OFF


1286 
time_t
 
t
 = 
	`mktime
(
tm
);

1287 i‡(
t
 =(
time_t
)-1)

1288  
t
;

1289  
t
 + 
tm
->
tm_gmtoff
;

1290 #ñi‡
HAVE_TM___TM_GMT_OFF


1291 
time_t
 
t
 = 
	`mktime
(
tm
);

1292 i‡(
t
 =(
time_t
)-1)

1293  
t
;

1294  
t
 + 
tm
->
__tm_gmtoff
;

1295 #ñi‡
WIN32


1296  
	`_mkgmtime
(
tm
);

1298 *
tz
;

1300 
tz
 = (tz = 
	`gëív
("TZ")Ë!
NULL
 ? 
	`°rdup
(tz) : NULL;

1301 i‡(
tz
 !
NULL
)

1302 
	`£ãnv
("TZ", "", 1);

1303 
time_t
 
t
 = 
	`mktime
(
tm
);

1304 i‡(
tz
 !
NULL
)

1305 
	`£ãnv
("TZ", 
tz
, 1);

1306  
t
;

1308 
	}
}

1311 
	$£t_tm_wday
(
tm
 *tm) {

1322 
˚¡ury
 = (1900 + 
tm
->
tm_yór
) / 100;

1323 
yór
 = (1900 + 
tm
->
tm_yór
) % 100;

1324 i‡(
tm
->
tm_m⁄
 < 2)

1325 
yór
--;

1330 
m⁄
 = 
tm
->
tm_m⁄
 - 1;

1331 i‡(
m⁄
 < 1)

1332 
m⁄
 += 12;

1333 
wday
 =

1334 (
tm
->
tm_mday
 + ()
	`Êo‹
((2.6 * 
m⁄
 - 0.2)Ë+ 
yór
 + ()Êo‹(yó∏/ 4.0Ë+ ()Êo‹(
˚¡ury
 / 4.0) - 2 * century) % 7;

1335 i‡(
wday
 < 0)

1336 
wday
 += 7;

1339 
	`as£π
(
wday
 =
tm
->
tm_wday
 ||Åm->tm_wday == 8);

1341 
tm
->
tm_wday
 = 
wday
;

1342 
	}
}

1347 
	$£t_tm_yday
(
tm
 *tm) {

1348 c⁄° 
d
[] = {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334};

1349 
m⁄
 = 
tm
->
tm_m⁄
;

1350 
yór
 = 1900 + 
tm
->
tm_yór
;

1351 
À≠_day
 = 0;

1352 i‡(
tm
->
tm_m⁄
 > 1 &&

1353 ((
yór
 % 4 == 0 && year % 100 != 0) || (year % 400 == 0)))

1354 
À≠_day
 = 1;

1357 i‡(
m⁄
 < 0)

1358 
m⁄
 = -mon;

1359 i‡(
m⁄
 > 11)

1360 
m⁄
 %= 12;

1362 
yday
 = 
d
[
m⁄
] + 
À≠_day
 + 
tm
->
tm_mday
 - 1;

1363 
	`as£π
(
yday
 =
tm
->
tm_yday
 ||Åm->tm_yday == 367);

1364 
tm
->
tm_yday
 = 
yday
;

1365 
	}
}

1367 #i‚de‡
HAVE_STRPTIME


1368 *
	$°Ωtime
(c⁄° *
s
, c⁄° *
f‹m©
, 
tm
 *tm) {

1369 i‡(
	`°rcmp
(
f‹m©
, "%Y-%m-%dT%H:%M:%SZ"))

1370  
NULL
;

1372 
cou¡
, 
íd
;

1373 
cou¡
 = 
	`ssˇnf
(
s
, "%d-%d-%dT%d:%d:%d%n",

1374 &
tm
->
tm_yór
, &tm->
tm_m⁄
, &tm->
tm_mday
,

1375 &
tm
->
tm_hour
, &tm->
tm_mö
, &tm->
tm_£c
,

1376 &
íd
 );

1377 i‡(
cou¡
 =6 && 
s
[
íd
] == 'Z') {

1378 
tm
->
tm_yór
 -= 1900;

1379 
tm
->
tm_m⁄
--;

1380  (*)
s
 + 
íd
 + 1;

1382  
NULL
;

1383 
	}
}

1386 
jv
 
	$f_°Ωtime
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1387 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_STRING
 || jv_gë_köd(
b
) != JV_KIND_STRING) {

1388  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strptime/1Ñequires string inputsándárguments"));

1391 
tm
Åm;

1392 
	`mem£t
(&
tm
, 0, (tm));

1393 
tm
.
tm_wday
 = 8;

1394 
tm
.
tm_yday
 = 367;

1395 c⁄° *
öput
 = 
	`jv_°rög_vÆue
(
a
);

1396 c⁄° *
fmt
 = 
	`jv_°rög_vÆue
(
b
);

1398 #i‚de‡
HAVE_STRPTIME


1399 i‡(
	`°rcmp
(
fmt
, "%Y-%m-%dT%H:%M:%SZ")) {

1400  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strptime/1 only supports ISO 8601 onÅhisÖlatform"));

1403 c⁄° *
íd
 = 
	`°Ωtime
(
öput
, 
fmt
, &
tm
);

1404 i‡(
íd
 =
NULL
 || (*íd !'\0' && !
	`is•a˚
(*end))) {

1405  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög_fmt
("d©ê\"%s\" d€†nŸ m©ch f‹m© \"%s\"", 
öput
, 
fmt
));

1407 
	`jv_‰ì
(
b
);

1417 #ifde‡
__APPLE__


1426 
	`£t_tm_wday
(&
tm
);

1427 
	`£t_tm_yday
(&
tm
);

1429 i‡(
tm
.
tm_wday
 =8 &&Åm.
tm_mday
 !0 &&Åm.
tm_m⁄
 >= 0 &&Åm.tm_mon <= 11)

1430 
	`£t_tm_wday
(&
tm
);

1431 i‡(
tm
.
tm_yday
 =367 &&Åm.
tm_mday
 !0 &&Åm.
tm_m⁄
 >= 0 &&Åm.tm_mon <= 11)

1432 
	`£t_tm_yday
(&
tm
);

1434 
jv
 
r
 = 
	`tm2jv
(&
tm
);

1435 i‡(*
íd
 != '\0')

1436 
r
 = 
	`jv_¨øy_≠≥nd
‘, 
	`jv_°rög
(
íd
));

1437 
	`jv_‰ì
(
a
);

1438  
r
;

1439 
	}
}

1441 
	#TO_TM_FIELD
(
t
, 
j
, 
i
) \

1443 
jv
 
n
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
j
), (
i
)); \

1444 i‡(
	`jv_gë_köd
(
n
Ë!(
JV_KIND_NUMBER
)) { \

1445 
	`jv_‰ì
(
j
); \

1448 
t
 = 
	`jv_numbî_vÆue
(
n
); \

1449 
	`jv_‰ì
(
n
); \

1450 } 0)

	)

1452 
	$jv2tm
(
jv
 
a
, 
tm
 *tm) {

1453 
	`mem£t
(
tm
, 0, (*tm));

1454 
	`TO_TM_FIELD
(
tm
->
tm_yór
, 
a
, 0);

1455 
tm
->
tm_yór
 -= 1900;

1456 
	`TO_TM_FIELD
(
tm
->
tm_m⁄
, 
a
, 1);

1457 
	`TO_TM_FIELD
(
tm
->
tm_mday
, 
a
, 2);

1458 
	`TO_TM_FIELD
(
tm
->
tm_hour
, 
a
, 3);

1459 
	`TO_TM_FIELD
(
tm
->
tm_mö
, 
a
, 4);

1460 
	`TO_TM_FIELD
(
tm
->
tm_£c
, 
a
, 5);

1461 
	`TO_TM_FIELD
(
tm
->
tm_wday
, 
a
, 6);

1462 
	`TO_TM_FIELD
(
tm
->
tm_yday
, 
a
, 7);

1463 
	`jv_‰ì
(
a
);

1474 
	}
}

1476 #unde‡
TO_TM_FIELD


1478 
jv
 
	$f_mktime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1479 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_ARRAY
)

1480  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("mktimeÑequiresárray inputs"));

1481 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) < 6)

1482  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("mktimeÑequiresÖarsed datetime inputs"));

1483 
tm
Åm;

1484 i‡(!
	`jv2tm
(
a
, &
tm
))

1485  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("mktimeÑequiresÖarsed datetime inputs"));

1486 
time_t
 
t
 = 
	`my_mktime
(&
tm
);

1487 i‡(
t
 =(
time_t
)-1)

1488  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("invalid gmtimeÑepresentation"));

1489 i‡(
t
 =(
time_t
)-2)

1490  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("mktimeÇot supported onÅhisÖlatform"));

1491  
	`jv_numbî
(
t
);

1492 
	}
}

1494 #ifde‡
HAVE_GMTIME_R


1495 
jv
 
	$f_gmtime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1496 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
)

1497  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("gmtime()ÑequiresÇumeric inputs"));

1498 
tm
Åm, *
tmp
;

1499 
	`mem£t
(&
tm
, 0, (tm));

1500 
f£cs
 = 
	`jv_numbî_vÆue
(
a
);

1501 
time_t
 
£cs
 = 
f£cs
;

1502 
	`jv_‰ì
(
a
);

1503 
tmp
 = 
	`gmtime_r
(&
£cs
, &
tm
);

1504 i‡(
tmp
 =
NULL
)

1505  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("error convertingÇumber of seconds sinceÉpochÅo datetime"));

1506 
a
 = 
	`tm2jv
(
tmp
);

1507  
	`jv_¨øy_£t
(
a
, 5, 
	`jv_numbî
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
◊), 5)Ë+ (
f£cs
 - 
	`Êo‹
(fsecs))));

1508 
	}
}

1509 #ñi‡
deföed
 
HAVE_GMTIME


1510 
jv
 
	$f_gmtime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1511 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
)

1512  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("gmtimeÑequiresÇumeric inputs"));

1513 
tm
Åm, *
tmp
;

1514 
	`mem£t
(&
tm
, 0, (tm));

1515 
f£cs
 = 
	`jv_numbî_vÆue
(
a
);

1516 
time_t
 
£cs
 = 
f£cs
;

1517 
	`jv_‰ì
(
a
);

1518 
tmp
 = 
	`gmtime
(&
£cs
);

1519 i‡(
tmp
 =
NULL
)

1520  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("error convertingÇumber of seconds sinceÉpochÅo datetime"));

1521 
a
 = 
	`tm2jv
(
tmp
);

1522  
	`jv_¨øy_£t
(
a
, 5, 
	`jv_numbî
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
◊), 5)Ë+ (
f£cs
 - 
	`Êo‹
(fsecs))));

1523 
	}
}

1525 
jv
 
	$f_gmtime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1526 
	`jv_‰ì
(
a
);

1527  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("gmtimeÇot implemented onÅhisÖlatform"));

1528 
	}
}

1531 #ifde‡
HAVE_LOCALTIME_R


1532 
jv
 
	$f_loˇ…ime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1533 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
)

1534  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("localtime()ÑequiresÇumeric inputs"));

1535 
tm
Åm, *
tmp
;

1536 
	`mem£t
(&
tm
, 0, (tm));

1537 
f£cs
 = 
	`jv_numbî_vÆue
(
a
);

1538 
time_t
 
£cs
 = 
f£cs
;

1539 
	`jv_‰ì
(
a
);

1540 
tmp
 = 
	`loˇ…ime_r
(&
£cs
, &
tm
);

1541 i‡(
tmp
 =
NULL
)

1542  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("error convertingÇumber of seconds sinceÉpochÅo datetime"));

1543 
a
 = 
	`tm2jv
(
tmp
);

1544  
	`jv_¨øy_£t
(
a
, 5, 
	`jv_numbî
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
◊), 5)Ë+ (
f£cs
 - 
	`Êo‹
(fsecs))));

1545 
	}
}

1546 #ñi‡
deföed
 
HAVE_GMTIME


1547 
jv
 
	$f_loˇ…ime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1548 i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_NUMBER
)

1549  
	`ªt_îr‹
(
a
, 
	`jv_°rög
("localtimeÑequiresÇumeric inputs"));

1550 
tm
Åm, *
tmp
;

1551 
	`mem£t
(&
tm
, 0, (tm));

1552 
f£cs
 = 
	`jv_numbî_vÆue
(
a
);

1553 
time_t
 
£cs
 = 
f£cs
;

1554 
	`jv_‰ì
(
a
);

1555 
tmp
 = 
	`loˇ…ime
(&
£cs
);

1556 i‡(
tmp
 =
NULL
)

1557  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("error convertingÇumber of seconds sinceÉpochÅo datetime"));

1558 
a
 = 
	`tm2jv
(
tmp
);

1559  
	`jv_¨øy_£t
(
a
, 5, 
	`jv_numbî
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
◊), 5)Ë+ (
f£cs
 - 
	`Êo‹
(fsecs))));

1560 
	}
}

1562 
jv
 
	$f_loˇ…ime
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1563 
	`jv_‰ì
(
a
);

1564  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("localtimeÇot implemented onÅhisÖlatform"));

1565 
	}
}

1568 #ifde‡
HAVE_STRFTIME


1569 
jv
 
	$f_°r·ime
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1570 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
) {

1571 
a
 = 
	`f_gmtime
(
jq
,á);

1572 i‡(!
	`jv_is_vÆid
(
a
)) {

1573 
	`jv_‰ì
(
b
);

1574  
a
;

1576 } i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_ARRAY
) {

1577  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strftime/1ÑequiresÖarsed datetime inputs"));

1578 } i‡(
	`jv_gë_köd
(
b
Ë!
JV_KIND_STRING
) {

1579  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strftime/1Ñequiresá string format"));

1581 
tm
Åm;

1582 i‡(!
	`jv2tm
(
a
, &
tm
))

1583  
	`ªt_îr‹
(
b
, 
	`jv_°rög
("strftime/1ÑequiresÖarsed datetime inputs"));

1585 c⁄° *
fmt
 = 
	`jv_°rög_vÆue
(
b
);

1586 
size_t
 
Ælo˚d
 = 
	`°æí
(
fmt
) + 100;

1587 *
buf
 = 
	`Æloˇ
(
Ælo˚d
);

1588 
size_t
 
n
 = 
	`°r·ime
(
buf
, 
Ælo˚d
, 
fmt
, &
tm
);

1589 
	`jv_‰ì
(
b
);

1591 i‡(
n
 =0 ||Ç > 
Ælo˚d
)

1592  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("strftime/1: unknown system failure"));

1593  
	`jv_°rög
(
buf
);

1594 
	}
}

1596 
jv
 
	$f_°r·ime
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1597 
	`jv_‰ì
(
a
);

1598 
	`jv_‰ì
(
b
);

1599  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("strftime/1Çot implemented onÅhisÖlatform"));

1600 
	}
}

1603 #ifde‡
HAVE_STRFTIME


1604 
jv
 
	$f_°rÊoˇ…ime
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1605 i‡(
	`jv_gë_köd
(
a
Ë=
JV_KIND_NUMBER
) {

1606 
a
 = 
	`f_loˇ…ime
(
jq
,á);

1607 } i‡(
	`jv_gë_köd
(
a
Ë!
JV_KIND_ARRAY
) {

1608  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strflocaltime/1ÑequiresÖarsed datetime inputs"));

1609 } i‡(
	`jv_gë_köd
(
b
Ë!
JV_KIND_STRING
) {

1610  
	`ªt_îr‹2
(
a
, 
b
, 
	`jv_°rög
("strflocaltime/1Ñequiresá string format"));

1612 
tm
Åm;

1613 i‡(!
	`jv2tm
(
a
, &
tm
))

1614  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("strflocaltime/1ÑequiresÖarsed datetime inputs"));

1615 c⁄° *
fmt
 = 
	`jv_°rög_vÆue
(
b
);

1616 
size_t
 
Ælo˚d
 = 
	`°æí
(
fmt
) + 100;

1617 *
buf
 = 
	`Æloˇ
(
Ælo˚d
);

1618 
size_t
 
n
 = 
	`°r·ime
(
buf
, 
Ælo˚d
, 
fmt
, &
tm
);

1619 
	`jv_‰ì
(
b
);

1621 i‡(
n
 =0 ||Ç > 
Ælo˚d
)

1622  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("strflocaltime/1: unknown system failure"));

1623  
	`jv_°rög
(
buf
);

1624 
	}
}

1626 
jv
 
	$f_°rÊoˇ…ime
(
jq_°©e
 *
jq
, 
jv
 
a
, jv 
b
) {

1627 
	`jv_‰ì
(
a
);

1628 
	`jv_‰ì
(
b
);

1629  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("strflocaltime/1Çot implemented onÅhisÖlatform"));

1630 
	}
}

1633 #ifde‡
HAVE_GETTIMEOFDAY


1634 
jv
 
	$f_now
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1635 
	`jv_‰ì
(
a
);

1636 
timevÆ
 
tv
;

1637 i‡(
	`gëtimeofday
(&
tv
, 
NULL
) == -1)

1638  
	`jv_numbî
(
	`time
(
NULL
));

1639  
	`jv_numbî
(
tv
.
tv_£c
 +Åv.
tv_u£c
 / 1000000.0);

1640 
	}
}

1642 
jv
 
	$f_now
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1643 
	`jv_‰ì
(
a
);

1644  
	`jv_numbî
(
	`time
(
NULL
));

1645 
	}
}

1648 
jv
 
	$f_cuºít_fûíame
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1649 
	`jv_‰ì
(
a
);

1651 
jv
 
r
 = 
	`jq_utû_öput_gë_cuºít_fûíame
(
jq
);

1652 i‡(
	`jv_is_vÆid
(
r
))

1653  
r
;

1654 
	`jv_‰ì
(
r
);

1655  
	`jv_nuŒ
();

1656 
	}
}

1657 
jv
 
	$f_cuºít_löe
(
jq_°©e
 *
jq
, 
jv
 
a
) {

1658 
	`jv_‰ì
(
a
);

1659  
	`jq_utû_öput_gë_cuºít_löe
(
jq
);

1660 
	}
}

1662 
	#LIBM_DD
(
«me
) \

1663 {(
cfun˘i⁄_±r
)
f_
 ## 
«me
, #«me, 1},

	)

1664 
	#LIBM_DD_NO
(
«me
)

	)

1666 
	#LIBM_DDD
(
«me
) \

1667 {(
cfun˘i⁄_±r
)
f_
 ## 
«me
, #«me, 3},

	)

1668 
	#LIBM_DDD_NO
(
«me
)

	)

1670 
	#LIBM_DDDD
(
«me
) \

1671 {(
cfun˘i⁄_±r
)
f_
 ## 
«me
, #«me, 4},

	)

1672 
	#LIBM_DDDD_NO
(
«me
)

	)

1674 c⁄° 
cfun˘i⁄
 
	gfun˘i⁄_li°
[] = {

1675 
	~"libm.h
"

1676 #ifde‡
HAVE_FREXP


1677 {(
cfun˘i⁄_±r
)
f_‰exp
,"frexp", 1},

1679 #ifde‡
HAVE_MODF


1680 {(
cfun˘i⁄_±r
)
f_modf
,"modf", 1},

1682 #ifde‡
HAVE_LGAMMA_R


1683 {(
cfun˘i⁄_±r
)
f_lgamma_r
,"lgamma_r", 1},

1685 {(
cfun˘i⁄_±r
)
f_∂us
, "_plus", 3},

1686 {(
cfun˘i⁄_±r
)
f_√g©e
, "_negate", 1},

1687 {(
cfun˘i⁄_±r
)
f_möus
, "_minus", 3},

1688 {(
cfun˘i⁄_±r
)
f_mu…ùly
, "_multiply", 3},

1689 {(
cfun˘i⁄_±r
)
f_divide
, "_divide", 3},

1690 {(
cfun˘i⁄_±r
)
f_mod
, "_mod", 3},

1691 {(
cfun˘i⁄_±r
)
f_dump
, "tojson", 1},

1692 {(
cfun˘i⁄_±r
)
f_js⁄_∑r£
, "fromjson", 1},

1693 {(
cfun˘i⁄_±r
)
f_t⁄umbî
, "tonumber", 1},

1694 {(
cfun˘i⁄_±r
)
f_to°rög
, "tostring", 1},

1695 {(
cfun˘i⁄_±r
)
f_keys
, "keys", 1},

1696 {(
cfun˘i⁄_±r
)
f_keys_uns‹ãd
, "keys_unsorted", 1},

1697 {(
cfun˘i⁄_±r
)
f_°¨tswôh
, "startswith", 2},

1698 {(
cfun˘i⁄_±r
)
f_ídswôh
, "endswith", 2},

1699 {(
cfun˘i⁄_±r
)
f_…rim°r
, "ltrimstr", 2},

1700 {(
cfun˘i⁄_±r
)
f_πrim°r
, "rtrimstr", 2},

1701 {(
cfun˘i⁄_±r
)
f_°rög_•lô
, "split", 2},

1702 {(
cfun˘i⁄_±r
)
f_°rög_ex∂ode
, "explode", 1},

1703 {(
cfun˘i⁄_±r
)
f_°rög_im∂ode
, "implode", 1},

1704 {(
cfun˘i⁄_±r
)
f_°rög_ödexes
, "_strindices", 2},

1705 {(
cfun˘i⁄_±r
)
f_£ç©h
, "setpath", 3},

1706 {(
cfun˘i⁄_±r
)
f_gë∑th
, "getpath", 2},

1707 {(
cfun˘i⁄_±r
)
f_dñ∑ths
, "delpaths", 2},

1708 {(
cfun˘i⁄_±r
)
f_has
, "has", 2},

1709 {(
cfun˘i⁄_±r
)
f_equÆ
, "_equal", 3},

1710 {(
cfun˘i⁄_±r
)
f_nŸequÆ
, "_notequal", 3},

1711 {(
cfun˘i⁄_±r
)
f_Àss
, "_less", 3},

1712 {(
cfun˘i⁄_±r
)
f_gª©î
, "_greater", 3},

1713 {(
cfun˘i⁄_±r
)
f_Às£q
, "_lesseq", 3},

1714 {(
cfun˘i⁄_±r
)
f_gª©îeq
, "_greatereq", 3},

1715 {(
cfun˘i⁄_±r
)
f_c⁄èös
, "contains", 2},

1716 {(
cfun˘i⁄_±r
)
f_Àngth
, "length", 1},

1717 {(
cfun˘i⁄_±r
)
f_utf8byãÀngth
, "utf8bytelength", 1},

1718 {(
cfun˘i⁄_±r
)
f_ty≥
, "type", 1},

1719 {(
cfun˘i⁄_±r
)
f_isöföôe
, "isinfinite", 1},

1720 {(
cfun˘i⁄_±r
)
f_i¢™
, "isnan", 1},

1721 {(
cfun˘i⁄_±r
)
f_i¢‹mÆ
, "isnormal", 1},

1722 {(
cfun˘i⁄_±r
)
f_öföôe
, "infinite", 1},

1723 {(
cfun˘i⁄_±r
)
f_«n
, "nan", 1},

1724 {(
cfun˘i⁄_±r
)
f_s‹t
, "sort", 1},

1725 {(
cfun˘i⁄_±r
)
f_s‹t_by_im∂
, "_sort_by_impl", 2},

1726 {(
cfun˘i⁄_±r
)
f_group_by_im∂
, "_group_by_impl", 2},

1727 {(
cfun˘i⁄_±r
)
f_mö
, "min", 1},

1728 {(
cfun˘i⁄_±r
)
f_max
, "max", 1},

1729 {(
cfun˘i⁄_±r
)
f_mö_by_im∂
, "_min_by_impl", 2},

1730 {(
cfun˘i⁄_±r
)
f_max_by_im∂
, "_max_by_impl", 2},

1731 {(
cfun˘i⁄_±r
)
f_îr‹
, "error", 1},

1732 {(
cfun˘i⁄_±r
)
f_f‹m©
, "format", 2},

1733 {(
cfun˘i⁄_±r
)
f_ív
, "env", 1},

1734 {(
cfun˘i⁄_±r
)
f_hÆt
, "halt", 1},

1735 {(
cfun˘i⁄_±r
)
f_hÆt_îr‹
, "halt_error", 2},

1736 {(
cfun˘i⁄_±r
)
f_gë_£¨ch_li°
, "get_search_list", 1},

1737 {(
cfun˘i⁄_±r
)
f_gë_¥og_‹igö
, "get_prog_origin", 1},

1738 {(
cfun˘i⁄_±r
)
f_gë_jq_‹igö
, "get_jq_origin", 1},

1739 {(
cfun˘i⁄_±r
)
f_m©ch
, "_match_impl", 4},

1740 {(
cfun˘i⁄_±r
)
f_moduÀmëa
, "modulemeta", 1},

1741 {(
cfun˘i⁄_±r
)
f_öput
, "input", 1},

1742 {(
cfun˘i⁄_±r
)
f_debug
, "debug", 1},

1743 {(
cfun˘i⁄_±r
)
f_°dîr
, "stderr", 1},

1744 {(
cfun˘i⁄_±r
)
f_°Ωtime
, "strptime", 2},

1745 {(
cfun˘i⁄_±r
)
f_°r·ime
, "strftime", 2},

1746 {(
cfun˘i⁄_±r
)
f_°rÊoˇ…ime
, "strflocaltime", 2},

1747 {(
cfun˘i⁄_±r
)
f_mktime
, "mktime", 1},

1748 {(
cfun˘i⁄_±r
)
f_gmtime
, "gmtime", 1},

1749 {(
cfun˘i⁄_±r
)
f_loˇ…ime
, "localtime", 1},

1750 {(
cfun˘i⁄_±r
)
f_now
, "now", 1},

1751 {(
cfun˘i⁄_±r
)
f_cuºít_fûíame
, "input_filename", 1},

1752 {(
cfun˘i⁄_±r
)
f_cuºít_löe
, "input_line_number", 1},

1754 #unde‡
LIBM_DDDD_NO


1755 #unde‡
LIBM_DDD_NO


1756 #unde‡
LIBM_DD_NO


1757 #unde‡
LIBM_DDDD


1758 #unde‡
LIBM_DDD


1759 #unde‡
LIBM_DD


1761 
	sbyãcoded_buûtö
 { c⁄° * 
	m«me
; 
block
 
	mcode
; };

1762 
block
 
	$böd_byãcoded_buûtös
(
block
 
b
) {

1763 
block
 
buûtös
 = 
	`gí_no›
();

1765 
byãcoded_buûtö
 
buûtö_defs
[] = {

1766 {"em±y", 
	`gí_›_sim∂e
(
BACKTRACK
)},

1767 {"nŸ", 
	`gí_c⁄dbønch
(
	`gí_c⁄°
(
	`jv_Ál£
()),

1768 
	`gí_c⁄°
(
	`jv_åue
()))}

1770 
i
=0; i<(
buûtö_defs
)/(builtin_defs[0]); i++) {

1771 
buûtös
 = 
	`BLOCK
(buûtös, 
	`gí_fun˘i⁄
(
buûtö_defs
[
i
].
«me
, 
	`gí_no›
(),

1772 
buûtö_defs
[
i
].
code
));

1776 
byãcoded_buûtö
 
buûtö_def_1¨g
[] = {

1777 {"∑th", 
	`BLOCK
(
	`gí_›_sim∂e
(
PATH_BEGIN
),

1778 
	`gí_ˇŒ
("¨g", 
	`gí_no›
()),

1779 
	`gí_›_sim∂e
(
PATH_END
))},

1781 
i
=0; i<(
buûtö_def_1¨g
)/(builtin_def_1arg[0]); i++) {

1782 
buûtös
 = 
	`BLOCK
(buûtös, 
	`gí_fun˘i⁄
(
buûtö_def_1¨g
[
i
].
«me
,

1783 
	`gí_∑øm
("arg"),

1784 
buûtö_def_1¨g
[
i
].
code
));

1789 
block
 
øngev¨
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "rangevar");

1790 
block
 
ønge°¨t
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "rangestart");

1791 
block
 
ønge
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

1792 
	`gí_ˇŒ
("°¨t", 
	`gí_no›
()),

1793 
ønge°¨t
,

1794 
	`gí_ˇŒ
("íd", 
	`gí_no›
()),

1795 
	`gí_›_sim∂e
(
DUP
),

1796 
	`gí_›_bound
(
LOADV
, 
ønge°¨t
),

1798 
øngev¨
,

1799 
	`gí_›_bound
(
RANGE
, 
øngev¨
));

1800 
buûtös
 = 
	`BLOCK
(buûtös, 
	`gí_fun˘i⁄
("range",

1801 
	`BLOCK
(
	`gí_∑øm
("start"), gen_param("end")),

1802 
ønge
));

1804  
	`BLOCK
(
buûtös
, 
b
);

1805 
	}
}

1807 c⁄° 
	gjq_buûtös
[] =

1809 
	~"§c/buûtö.öc
"

1812 
	#LIBM_DD
(
«me
)

	)

1813 
	#LIBM_DDD
(
«me
)

	)

1814 
	#LIBM_DDDD
(
«me
)

	)

1815 
	#LIBM_DD_NO
(
«me
Ë"de‡" #«mê": \"Eº‹: " #«mê"/0ÇŸ foundáàbuûdÅime\"|îr‹;"

	)

1816 
	#LIBM_DDD_NO
(
«me
Ë"de‡" #«mê"◊;b): \"Eº‹: " #«mê"/2ÇŸ foundáàbuûdÅime\"|îr‹;"

	)

1817 
	#LIBM_DDDD_NO
(
«me
Ë"de‡" #«mê"◊;b;c): \"Eº‹: " #«mê"/3ÇŸ foundáàbuûdÅime\"|îr‹;"

	)

1818 
	~"libm.h
"

1819 #i‚de‡
HAVE_FREXP


1822 #i‚de‡
HAVE_MODF


1825 #i‚de‡
HAVE_LGAMMA_R


1830 #unde‡
LIBM_DDDD_NO


1831 #unde‡
LIBM_DDD_NO


1832 #unde‡
LIBM_DD_NO


1833 #unde‡
LIBM_DDDD


1834 #unde‡
LIBM_DDD


1835 #unde‡
LIBM_DD


1838 
block
 
	$gí_buûtö_li°
(
block
 
buûtös
) {

1839 
jv
 
li°
 = 
	`jv_¨øy_≠≥nd
(
	`block_li°_funcs
(
buûtös
, 1), 
	`jv_°rög
("builtins/0"));

1840  
	`BLOCK
(
buûtös
, 
	`gí_fun˘i⁄
("buûtös", 
	`gí_no›
(), 
	`gí_c⁄°
(
li°
)));

1841 
	}
}

1843 
	$buûtös_böd
(
jq_°©e
 *
jq
, 
block
* 
bb
) {

1844 
block
 
buûtös
;

1845 
locfûe
* 
§c
 = 
	`locfûe_öô
(
jq
, "<buûtö>", 
jq_buûtös
, (jq_builtins)-1);

1846 
√º‹s
 = 
	`jq_∑r£_libøry
(
§c
, &
buûtös
);

1847 
	`as£π
(!
√º‹s
);

1848 
	`locfûe_‰ì
(
§c
);

1850 
buûtös
 = 
	`böd_byãcoded_buûtös
(builtins);

1851 
buûtös
 = 
	`gí_cbödög
(
fun˘i⁄_li°
, (function_list)/(function_list[0]), builtins);

1852 
buûtös
 = 
	`gí_buûtö_li°
(builtins);

1854 *
bb
 = 
	`block_böd_ª„ªn˚d
(
buûtös
, *bb, 
OP_IS_CALL_PSEUDO
);

1855  
√º‹s
;

1856 
	}
}

	@src/builtin.h

1 #i‚de‡
BUILTIN_H


2 
	#BUILTIN_H


	)

4 
	~"jq.h
"

5 
	~"byãcode.h
"

6 
	~"compûe.h
"

8 
buûtös_böd
(
jq_°©e
 *, 
block
*);

	@src/bytecode.c

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<°dlib.h
>

5 
	~"byãcode.h
"

6 
	~"jv_Æloc.h
"

9 
	#NONE
 0, 1

	)

10 
	#CONSTANT
 
OP_HAS_CONSTANT
, 2

	)

11 
	#VARIABLE
 (
OP_HAS_VARIABLE
 | 
OP_HAS_BINDING
), 3

	)

12 
	#GLOBAL
 (
OP_HAS_CONSTANT
 | 
OP_HAS_VARIABLE
 | 
OP_HAS_BINDING
 | 
OP_IS_CALL_PSEUDO
), 4

	)

13 
	#BRANCH
 
OP_HAS_BRANCH
, 2

	)

14 
	#CFUNC
 (
OP_HAS_CFUNC
 | 
OP_HAS_BINDING
), 3

	)

15 
	#UFUNC
 (
OP_HAS_UFUNC
 | 
OP_HAS_BINDING
 | 
OP_IS_CALL_PSEUDO
), 4

	)

16 
	#DEFINITION
 (
OP_IS_CALL_PSEUDO
 | 
OP_HAS_BINDING
), 0

	)

17 
	#CLOSURE_REF_IMM
 (
OP_IS_CALL_PSEUDO
 | 
OP_HAS_BINDING
), 2

	)

19 
	#OP
(
«me
, 
imm
, 
ö
, 
out
) \

20 {
«me
, #«me, 
imm
, 
ö
, 
out
},

	)

22 c⁄° 
›code_des¸ùti⁄
 
	g›code_des¸ùti⁄s
[] = {

23 
	~"›code_li°.h
"

26 c⁄° 
›code_des¸ùti⁄
 
	gövÆid_›code_des¸ùti⁄
 = {

31 c⁄° 
›code_des¸ùti⁄
* 
	$›code_des¸ibe
(
›code
 
›
) {

32 i‡(()
›
 >0 && ()› < 
NUM_OPCODES
) {

33  &
›code_des¸ùti⁄s
[
›
];

35  &
övÆid_›code_des¸ùti⁄
;

37 
	}
}

40 
	$byãcode_›î©i⁄_Àngth
(
uöt16_t
* 
codïå
) {

41 
Àngth
 = 
	`›code_des¸ibe
(*
codïå
)->length;

42 i‡(*
codïå
 =
CALL_JQ
 || *codïå =
TAIL_CALL_JQ
) {

43 
Àngth
 +
codïå
[1] * 2;

45  
Àngth
;

46 
	}
}

48 
	$dump_code
(
ödít
, 
byãcode
* 
bc
) {

49 
pc
 = 0;

50 
pc
 < 
bc
->
codñí
) {

51 
	`¥ötf
("%*s", 
ödít
, "");

52 
	`dump_›î©i⁄
(
bc
, bc->
code
 + 
pc
);

53 
	`¥ötf
("\n");

54 
pc
 +
	`byãcode_›î©i⁄_Àngth
(
bc
->
code
 +Öc);

56 
	}
}

58 
	$symbﬁ_èbÀ_‰ì
(
symbﬁ_èbÀ
* 
syms
) {

59 
	`jv_mem_‰ì
(
syms
->
cfun˘i⁄s
);

60 
	`jv_‰ì
(
syms
->
cfunc_«mes
);

61 
	`jv_mem_‰ì
(
syms
);

62 
	}
}

64 
	$dump_dißs£mbly
(
ödít
, 
byãcode
* 
bc
) {

65 i‡(
bc
->
n˛osuªs
 > 0) {

66 
	`¥ötf
("%*s[∑øms: ", 
ödít
, "");

67 
jv
 
∑øms
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
bc
->
debugöfo
), 
	`jv_°rög
("params"));

68 
i
=0; i<
bc
->
n˛osuªs
; i++) {

69 i‡(
i
Ë
	`¥ötf
(", ");

70 
jv
 
«me
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
∑øms
), 
i
);

71 
	`¥ötf
("%s", 
	`jv_°rög_vÆue
(
«me
));

72 
	`jv_‰ì
(
«me
);

74 
	`jv_‰ì
(
∑øms
);

75 
	`¥ötf
("]\n");

77 
	`dump_code
(
ödít
, 
bc
);

78 
i
=0; i<
bc
->
nsubfun˘i⁄s
; i++) {

79 
byãcode
* 
sub‚
 = 
bc
->
subfun˘i⁄s
[
i
];

80 
jv
 
«me
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
sub‚
->
debugöfo
), 
	`jv_°rög
("name"));

81 
	`¥ötf
("%*s%s:%d:\n", 
ödít
, "", 
	`jv_°rög_vÆue
(
«me
), 
i
);

82 
	`jv_‰ì
(
«me
);

83 
	`dump_dißs£mbly
(
ödít
+2, 
sub‚
);

85 
	}
}

87 
byãcode
* 
	$gëÀvñ
(
byãcode
* 
bc
, 
Àvñ
) {

88 
Àvñ
 > 0) {

89 
bc
 = bc->
∑ª¡
;

90 
Àvñ
--;

92  
bc
;

93 
	}
}

95 
	$dump_›î©i⁄
(
byãcode
* 
bc
, 
uöt16_t
* 
codïå
) {

96 
pc
 = 
codïå
 - 
bc
->
code
;

97 
	`¥ötf
("%04d ", 
pc
);

98 c⁄° 
›code_des¸ùti⁄
* 
›
 = 
	`›code_des¸ibe
(
bc
->
code
[
pc
++]);

99 
	`¥ötf
("%s", 
›
->
«me
);

100 i‡(
›
->
Àngth
 > 1) {

101 
uöt16_t
 
imm
 = 
bc
->
code
[
pc
++];

102 i‡(
›
->› =
CALL_JQ
 || op->› =
TAIL_CALL_JQ
) {

103 
i
=0; i<
imm
+1; i++) {

104 
uöt16_t
 
Àvñ
 = 
bc
->
code
[
pc
++];

105 
uöt16_t
 
idx
 = 
bc
->
code
[
pc
++];

106 
jv
 
«me
;

107 i‡(
idx
 & 
ARG_NEWCLOSURE
) {

108 
idx
 &~
ARG_NEWCLOSURE
;

109 
«me
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
	`gëÀvñ
(
bc
,
Àvñ
)->
subfun˘i⁄s
[
idx
]->
debugöfo
),

110 
	`jv_°rög
("name"));

112 
«me
 = 
	`jv_¨øy_gë
(
	`jv_obje˘_gë
(
	`jv_c›y
(
	`gëÀvñ
(
bc
,
Àvñ
)->
debugöfo
),

113 
	`jv_°rög
("∑øms")), 
idx
);

115 
	`¥ötf
(" %s:%d",

116 
	`jv_°rög_vÆue
(
«me
),

117 
idx
);

118 
	`jv_‰ì
(
«me
);

119 i‡(
Àvñ
) {

120 
	`¥ötf
("^%d", 
Àvñ
);

123 } i‡(
›
->› =
CALL_BUILTIN
) {

124 
func
 = 
bc
->
code
[
pc
++];

125 
jv
 
«me
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
bc
->
globÆs
->
cfunc_«mes
), 
func
);

126 
	`¥ötf
(" %s", 
	`jv_°rög_vÆue
(
«me
));

127 
	`jv_‰ì
(
«me
);

128 } i‡(
›
->
Êags
 & 
OP_HAS_BRANCH
) {

129 
	`¥ötf
(" %04d", 
pc
 + 
imm
);

130 } i‡(
›
->
Êags
 & 
OP_HAS_CONSTANT
) {

131 
	`¥ötf
(" ");

132 
	`jv_dump
(
	`jv_¨øy_gë
(
	`jv_c›y
(
bc
->
c⁄°™ts
), 
imm
), 0);

133 } i‡(
›
->
Êags
 & 
OP_HAS_VARIABLE
) {

134 
uöt16_t
 
v
 = 
bc
->
code
[
pc
++];

135 
jv
 
«me
 = 
	`jv_¨øy_gë
(
	`jv_obje˘_gë
(
	`jv_c›y
(
	`gëÀvñ
(
bc
,
imm
)->
debugöfo
), 
	`jv_°rög
("loˇls")), 
v
);

136 
	`¥ötf
(" $%s:%d",

137 
	`jv_°rög_vÆue
(
«me
),

138 
v
);

139 
	`jv_‰ì
(
«me
);

140 i‡(
imm
) {

141 
	`¥ötf
("^%d", 
imm
);

144 
	`¥ötf
(" %d", 
imm
);

147 
	}
}

149 
	$byãcode_‰ì
(
byãcode
* 
bc
) {

150 i‡(!
bc
)

152 
	`jv_mem_‰ì
(
bc
->
code
);

153 
	`jv_‰ì
(
bc
->
c⁄°™ts
);

154 
i
=0; i<
bc
->
nsubfun˘i⁄s
; i++)

155 
	`byãcode_‰ì
(
bc
->
subfun˘i⁄s
[
i
]);

156 i‡(!
bc
->
∑ª¡
)

157 
	`symbﬁ_èbÀ_‰ì
(
bc
->
globÆs
);

158 
	`jv_mem_‰ì
(
bc
->
subfun˘i⁄s
);

159 
	`jv_‰ì
(
bc
->
debugöfo
);

160 
	`jv_mem_‰ì
(
bc
);

161 
	}
}

	@src/bytecode.h

1 #i‚de‡
BYTECODE_H


2 
	#BYTECODE_H


	)

3 
	~<°döt.h
>

5 
	~"jv.h
"

8 
	#OP
(
«me
, 
imm
, 
ö
, 
out
Ë«me,

	)

9 
	~"›code_li°.h
"

10 #unde‡
OP


11 } 
	t›code
;

14 
	mNUM_OPCODES
 =

15 
	#OP
(
«me
, 
imm
, 
ö
, 
out
Ë+1

	)

16 
	~"›code_li°.h
"

17 #unde‡
OP


21 
	mOP_HAS_CONSTANT
 = 2,

22 
	mOP_HAS_VARIABLE
 = 4,

23 
	mOP_HAS_BRANCH
 = 8,

24 
	mOP_HAS_CFUNC
 = 32,

25 
	mOP_HAS_UFUNC
 = 64,

26 
	mOP_IS_CALL_PSEUDO
 = 128,

27 
	mOP_HAS_BINDING
 = 1024,

30 
	mOP_BIND_WILDCARD
 = 2048,

32 
	s›code_des¸ùti⁄
 {

33 
›code
 
	m›
;

34 c⁄° * 
	m«me
;

36 
	mÊags
;

39 
	mÀngth
;

41 
	m°ack_ö
, 
	m°ack_out
;

44 c⁄° 
›code_des¸ùti⁄
* 
›code_des¸ibe
(
›code
 
›
);

47 
	#MAX_CFUNCTION_ARGS
 10

	)

48 (*
	gcfun˘i⁄_±r
)();

49 
	scfun˘i⁄
 {

50 
cfun˘i⁄_±r
 
	mÂå
;

51 c⁄° * 
	m«me
;

52 
	m«rgs
;

55 
	ssymbﬁ_èbÀ
 {

56 
cfun˘i⁄
* 
	mcfun˘i⁄s
;

57 
	mncfun˘i⁄s
;

58 
jv
 
	mcfunc_«mes
;

66 
	#ARG_NEWCLOSURE
 0x1000

	)

68 
	sbyãcode
 {

69 
uöt16_t
* 
	mcode
;

70 
	mcodñí
;

72 
	m∆oˇls
;

73 
	mn˛osuªs
;

75 
jv
 
	mc⁄°™ts
;

76 
symbﬁ_èbÀ
* 
	mglobÆs
;

78 
byãcode
** 
	msubfun˘i⁄s
;

79 
	mnsubfun˘i⁄s
;

81 
byãcode
* 
	m∑ª¡
;

83 
jv
 
	mdebugöfo
;

86 
dump_dißs£mbly
(, 
byãcode
* 
code
);

87 
dump_›î©i⁄
(
byãcode
* 
bc
, 
uöt16_t
* 
›
);

89 
byãcode_›î©i⁄_Àngth
(
uöt16_t
* 
codïå
);

90 
byãcode_‰ì
(
byãcode
* 
bc
);

	@src/compile.c

1 #i‚de‡
_GNU_SOURCE


2 
	#_GNU_SOURCE


4 
	~<as£π.h
>

	)

5 
	~<m©h.h
>

6 
	~<°rög.h
>

7 
	~<°dlib.h
>

8 
	~<uni°d.h
>

9 
	~"compûe.h
"

10 
	~"byãcode.h
"

11 
	~"locfûe.h
"

12 
	~"jv_Æloc.h
"

13 
	~"lökî.h
"

27 
	sö°
 {

28 
ö°
* 
	m√xt
;

29 
ö°
* 
	m¥ev
;

31 
›code
 
	m›
;

34 
uöt16_t
 
	mötvÆ
;

35 
ö°
* 
	mèrgë
;

36 
jv
 
	mc⁄°™t
;

37 c⁄° 
cfun˘i⁄
* 
	mcfunc
;

38 } 
	mimm
;

40 
locfûe
* 
	mlocfûe
;

41 
loˇti⁄
 
	msour˚
;

53 
ö°
* 
	mbound_by
;

54 * 
	msymbﬁ
;

55 
	m™y_unbound
;

56 
	mª„ªn˚d
;

58 
	mnf‹mÆs
;

59 
	m«˘uÆs
;

61 
block
 
	msub‚
;

62 
block
 
	m¨gli°
;

66 
byãcode
* 
	mcompûed
;

68 
	mbyãcode_pos
;

71 
ö°
* 
	$ö°_√w
(
›code
 
›
) {

72 
ö°
* 
i
 = 
	`jv_mem_Æloc
((inst));

73 
i
->
√xt
 = i->
¥ev
 = 0;

74 
i
->
›
 = op;

75 
i
->
byãcode_pos
 = -1;

76 
i
->
bound_by
 = 0;

77 
i
->
symbﬁ
 = 0;

78 
i
->
™y_unbound
 = 0;

79 
i
->
ª„ªn˚d
 = 0;

80 
i
->
nf‹mÆs
 = -1;

81 
i
->
«˘uÆs
 = -1;

82 
i
->
sub‚
 = 
	`gí_no›
();

83 
i
->
¨gli°
 = 
	`gí_no›
();

84 
i
->
sour˚
 = 
UNKNOWN_LOCATION
;

85 
i
->
locfûe
 = 0;

86  
i
;

87 
	}
}

89 
	$ö°_‰ì
(
ö°
* 
i
) {

90 
	`jv_mem_‰ì
(
i
->
symbﬁ
);

91 
	`block_‰ì
(
i
->
sub‚
);

92 
	`block_‰ì
(
i
->
¨gli°
);

93 i‡(
i
->
locfûe
)

94 
	`locfûe_‰ì
(
i
->
locfûe
);

95 i‡(
	`›code_des¸ibe
(
i
->
›
)->
Êags
 & 
OP_HAS_CONSTANT
) {

96 
	`jv_‰ì
(
i
->
imm
.
c⁄°™t
);

98 
	`jv_mem_‰ì
(
i
);

99 
	}
}

101 
block
 
	$ö°_block
(
ö°
* 
i
) {

102 
block
 
b
 = {
i
,i};

103  
b
;

104 
	}
}

106 
	$block_is_sögÀ
(
block
 
b
) {

107  
b
.
fú°
 && b.fú° =b.
œ°
;

108 
	}
}

110 
ö°
* 
	$block_èke
(
block
* 
b
) {

111 i‡(
b
->
fú°
 == 0)  0;

112 
ö°
* 
i
 = 
b
->
fú°
;

113 i‡(
i
->
√xt
) {

114 
i
->
√xt
->
¥ev
 = 0;

115 
b
->
fú°
 = 
i
->
√xt
;

116 
i
->
√xt
 = 0;

118 
b
->
fú°
 = 0;

119 
b
->
œ°
 = 0;

121  
i
;

122 
	}
}

124 
block
 
	$gí_loˇti⁄
(
loˇti⁄
 
loc
, 
locfûe
* 
l
, 
block
 
b
) {

125 
ö°
* 
i
 = 
b
.
fú°
; i; i = i->
√xt
) {

126 i‡(
i
->
sour˚
.
°¨t
 =
UNKNOWN_LOCATION
.start &&

127 
i
->
sour˚
.
íd
 =
UNKNOWN_LOCATION
.end) {

128 
i
->
sour˚
 = 
loc
;

129 
i
->
locfûe
 = 
	`locfûe_ªèö
(
l
);

132  
b
;

133 
	}
}

135 
block
 
	$gí_no›
() {

136 
block
 
b
 = {0,0};

137  
b
;

138 
	}
}

140 
	$block_is_no›
(
block
 
b
) {

141  (
b
.
fú°
 =0 && b.
œ°
 == 0);

142 
	}
}

144 
block
 
	$gí_›_sim∂e
(
›code
 
›
) {

145 
	`as£π
(
	`›code_des¸ibe
(
›
)->
Àngth
 == 1);

146  
	`ö°_block
(
	`ö°_√w
(
›
));

147 
	}
}

150 
block
 
	$gí_c⁄°
(
jv
 
c⁄°™t
) {

151 
	`as£π
(
	`›code_des¸ibe
(
LOADK
)->
Êags
 & 
OP_HAS_CONSTANT
);

152 
ö°
* 
i
 = 
	`ö°_√w
(
LOADK
);

153 
i
->
imm
.
c⁄°™t
 = constant;

154  
	`ö°_block
(
i
);

155 
	}
}

157 
block
 
	$gí_c⁄°_globÆ
(
jv
 
c⁄°™t
, c⁄° *
«me
) {

158 
	`as£π
((
	`›code_des¸ibe
(
STORE_GLOBAL
)->
Êags
 & (
OP_HAS_CONSTANT
 | 
OP_HAS_VARIABLE
 | 
OP_HAS_BINDING
)) ==

159 (
OP_HAS_CONSTANT
 | 
OP_HAS_VARIABLE
 | 
OP_HAS_BINDING
));

160 
ö°
* 
i
 = 
	`ö°_√w
(
STORE_GLOBAL
);

161 
i
->
imm
.
c⁄°™t
 = constant;

162 
i
->
symbﬁ
 = 
	`°rdup
(
«me
);

163 
i
->
™y_unbound
 = 0;

164  
	`ö°_block
(
i
);

165 
	}
}

167 
block
 
	$gí_›_pushk_undî
(
jv
 
c⁄°™t
) {

168 
	`as£π
(
	`›code_des¸ibe
(
PUSHK_UNDER
)->
Êags
 & 
OP_HAS_CONSTANT
);

169 
ö°
* 
i
 = 
	`ö°_√w
(
PUSHK_UNDER
);

170 
i
->
imm
.
c⁄°™t
 = constant;

171  
	`ö°_block
(
i
);

172 
	}
}

174 
	$block_is_c⁄°
(
block
 
b
) {

175  (
	`block_is_sögÀ
(
b
Ë&& (b.
fú°
->
›
 =
LOADK
 || b.fú°->› =
PUSHK_UNDER
));

176 
	}
}

178 
	$block_is_c⁄°_öf
(
block
 
b
) {

179  (
	`block_is_sögÀ
(
b
Ë&& b.
fú°
->
›
 =
LOADK
 &&

180 
	`jv_gë_köd
(
b
.
fú°
->
imm
.
c⁄°™t
Ë=
JV_KIND_NUMBER
 &&

181 
	`isöf
(
	`jv_numbî_vÆue
(
b
.
fú°
->
imm
.
c⁄°™t
)));

182 
	}
}

184 
jv_köd
 
	$block_c⁄°_köd
(
block
 
b
) {

185 
	`as£π
(
	`block_is_c⁄°
(
b
));

186  
	`jv_gë_köd
(
b
.
fú°
->
imm
.
c⁄°™t
);

187 
	}
}

189 
jv
 
	$block_c⁄°
(
block
 
b
) {

190 
	`as£π
(
	`block_is_c⁄°
(
b
));

191  
	`jv_c›y
(
b
.
fú°
->
imm
.
c⁄°™t
);

192 
	}
}

194 
block
 
	$gí_›_èrgë
(
›code
 
›
, 
block
 
èrgë
) {

195 
	`as£π
(
	`›code_des¸ibe
(
›
)->
Êags
 & 
OP_HAS_BRANCH
);

196 
	`as£π
(
èrgë
.
œ°
);

197 
ö°
* 
i
 = 
	`ö°_√w
(
›
);

198 
i
->
imm
.
èrgë
 =Å¨gë.
œ°
;

199  
	`ö°_block
(
i
);

200 
	}
}

202 
block
 
	$gí_›_èrgëœãr
(
›code
 
›
) {

203 
	`as£π
(
	`›code_des¸ibe
(
›
)->
Êags
 & 
OP_HAS_BRANCH
);

204 
ö°
* 
i
 = 
	`ö°_√w
(
›
);

205 
i
->
imm
.
èrgë
 = 0;

206  
	`ö°_block
(
i
);

207 
	}
}

208 
	$ö°_£t_èrgë
(
block
 
b
, block 
èrgë
) {

209 
	`as£π
(
	`block_is_sögÀ
(
b
));

210 
	`as£π
(
	`›code_des¸ibe
(
b
.
fú°
->
›
)->
Êags
 & 
OP_HAS_BRANCH
);

211 
	`as£π
(
èrgë
.
œ°
);

212 
b
.
fú°
->
imm
.
èrgë
 =Å¨gë.
œ°
;

213 
	}
}

215 
block
 
	$gí_›_unbound
(
›code
 
›
, c⁄° * 
«me
) {

216 
	`as£π
(
	`›code_des¸ibe
(
›
)->
Êags
 & 
OP_HAS_BINDING
);

217 
ö°
* 
i
 = 
	`ö°_√w
(
›
);

218 
i
->
symbﬁ
 = 
	`°rdup
(
«me
);

219 
i
->
™y_unbound
 = 1;

220  
	`ö°_block
(
i
);

221 
	}
}

223 
block
 
	$gí_›_v¨_‰esh
(
›code
 
›
, c⁄° * 
«me
) {

224 
	`as£π
(
	`›code_des¸ibe
(
›
)->
Êags
 & 
OP_HAS_VARIABLE
);

225 
block
 
b
 = 
	`gí_›_unbound
(
›
, 
«me
);

226 
b
.
fú°
->
bound_by
 = b.first;

227  
b
;

228 
	}
}

230 
block
 
	$gí_›_bound
(
›code
 
›
, 
block
 
bödî
) {

231 
	`as£π
(
	`block_is_sögÀ
(
bödî
));

232 
block
 
b
 = 
	`gí_›_unbound
(
›
, 
bödî
.
fú°
->
symbﬁ
);

233 
b
.
fú°
->
bound_by
 = 
bödî
.first;

234 
b
.
fú°
->
™y_unbound
 = 0;

235  
b
;

236 
	}
}

238 
block
 
	$gí_di˘∑ú
(
block
 
k
, block 
v
) {

239  
	`BLOCK
(
	`gí_subexp
(
k
), gí_subexp(
v
), 
	`gí_›_sim∂e
(
INSERT
));

240 
	}
}

243 
	$ö°_joö
(
ö°
* 
a
, in°* 
b
) {

244 
	`as£π
(
a
 && 
b
);

245 
	`as£π
(!
a
->
√xt
);

246 
	`as£π
(!
b
->
¥ev
);

247 
a
->
√xt
 = 
b
;

248 
b
->
¥ev
 = 
a
;

249 
	}
}

251 
	$block_≠≥nd
(
block
* 
b
, block 
b2
) {

252 i‡(
b2
.
fú°
) {

253 i‡(
b
->
œ°
) {

254 
	`ö°_joö
(
b
->
œ°
, 
b2
.
fú°
);

256 
b
->
fú°
 = 
b2
.first;

258 
b
->
œ°
 = 
b2
.last;

260 
	}
}

262 
block
 
	$block_joö
(
block
 
a
, block 
b
) {

263 
block
 
c
 = 
a
;

264 
	`block_≠≥nd
(&
c
, 
b
);

265  
c
;

266 
	}
}

268 
	$block_has_⁄ly_bödîs_™d_imp‹ts
(
block
 
bödîs
, 
bödÊags
) {

269 
bödÊags
 |
OP_HAS_BINDING
;

270 
ö°
* 
cuº
 = 
bödîs
.
fú°
; cuº; cuº = cuº->
√xt
) {

271 i‡((
	`›code_des¸ibe
(
cuº
->
›
)->
Êags
 & 
bödÊags
Ë!bödÊag†&& cuº->› !
DEPS
 && cuº->› !
MODULEMETA
) {

276 
	}
}

278 
	$ö°_is_bödî
(
ö°
 *
i
, 
bödÊags
) {

279  !((
	`›code_des¸ibe
(
i
->
›
)->
Êags
 & 
bödÊags
Ë!bödÊag†&& i->› !
MODULEMETA
);

280 
	}
}

282 
	$block_has_⁄ly_bödîs
(
block
 
bödîs
, 
bödÊags
) {

283 
bödÊags
 |
OP_HAS_BINDING
;

284 
bödÊags
 &~
OP_BIND_WILDCARD
;

285 
ö°
* 
cuº
 = 
bödîs
.
fú°
; cuº; cuº = cuº->
√xt
) {

286 i‡((
	`›code_des¸ibe
(
cuº
->
›
)->
Êags
 & 
bödÊags
Ë!bödÊag†&& cuº->› !
MODULEMETA
) {

291 
	}
}

294 
	$block_cou¡_a˘uÆs
(
block
 
b
) {

295 
¨gs
 = 0;

296 
ö°
* 
i
 = 
b
.
fú°
; i; i = i->
√xt
) {

297 
i
->
›
) {

298 : 
	`as£π
(0 && "Unknown functionÅype"); ;

299 
CLOSURE_CREATE
:

300 
CLOSURE_PARAM
:

301 
CLOSURE_CREATE_C
:

302 
¨gs
++;

306  
¨gs
;

307 
	}
}

309 
	$block_böd_subblock_ö√r
(* 
™y_unbound
, 
block
 
bödî
, block 
body
, 
bödÊags
, 
bªak_di°™˚
) {

310 
	`as£π
(
	`block_is_sögÀ
(
bödî
));

311 
	`as£π
((
	`›code_des¸ibe
(
bödî
.
fú°
->
›
)->
Êags
 & 
bödÊags
Ë=(bödÊag†& ~
OP_BIND_WILDCARD
));

312 
	`as£π
(
bödî
.
fú°
->
symbﬁ
);

313 
	`as£π
(
bödî
.
fú°
->
bound_by
 == 0 || binder.first->bound_by == binder.first);

314 
	`as£π
(
bªak_di°™˚
 >= 0);

316 
bödî
.
fú°
->
bound_by
 = binder.first;

317 
ƒefs
 = 0;

318 
ö°
* 
i
 = 
body
.
fú°
; i; i = i->
√xt
) {

319 i‡(
i
->
™y_unbound
 == 0)

322 
Êags
 = 
	`›code_des¸ibe
(
i
->
›
)->flags;

323 i‡((
Êags
 & 
bödÊags
Ë=(bödÊag†& ~
OP_BIND_WILDCARD
Ë&& 
i
->
bound_by
 == 0 &&

324 (!
	`°rcmp
(
i
->
symbﬁ
, 
bödî
.
fú°
->symbol) ||

326 ((
bödÊags
 & 
OP_BIND_WILDCARD
Ë&& 
i
->
symbﬁ
[0] == '*' &&

327 
bªak_di°™˚
 <3 && (
i
->
symbﬁ
[1] == '1' + break_distance) &&

328 
i
->
symbﬁ
[2] == '\0'))) {

330 i‡(
i
->
«˘uÆs
 =-1 || i->«˘uÆ†=
bödî
.
fú°
->
nf‹mÆs
) {

331 
i
->
bound_by
 = 
bödî
.
fú°
;

332 
ƒefs
++;

334 } i‡((
Êags
 & 
bödÊags
Ë=(bödÊag†& ~
OP_BIND_WILDCARD
Ë&& 
i
->
bound_by
 != 0 &&

335 !
	`°∫cmp
(
bödî
.
fú°
->
symbﬁ
, "*anonlabel", ("*anonlabel") - 1) &&

336 !
	`°∫cmp
(
i
->
symbﬁ
, "*anonlabel", ("*anonlabel") - 1)) {

339 
bªak_di°™˚
++;

342 
i
->
™y_unbound
 = (i->
symbﬁ
 && !i->
bound_by
);

345 
ƒefs
 +
	`block_böd_subblock_ö√r
(&
i
->
™y_unbound
, 
bödî
, i->
sub‚
, 
bödÊags
, 
bªak_di°™˚
);

347 
ƒefs
 +
	`block_böd_subblock_ö√r
(&
i
->
™y_unbound
, 
bödî
, i->
¨gli°
, 
bödÊags
, 
bªak_di°™˚
);

349 i‡(
i
->
™y_unbound
)

350 *
™y_unbound
 = 1;

352  
ƒefs
;

353 
	}
}

355 
	$block_böd_subblock
(
block
 
bödî
, block 
body
, 
bödÊags
, 
bªak_di°™˚
) {

356 
™y_unbound
;

357  
	`block_böd_subblock_ö√r
(&
™y_unbound
, 
bödî
, 
body
, 
bödÊags
, 
bªak_di°™˚
);

358 
	}
}

360 
	$block_böd_óch
(
block
 
bödî
, block 
body
, 
bödÊags
) {

361 
	`as£π
(
	`block_has_⁄ly_bödîs
(
bödî
, 
bödÊags
));

362 
bödÊags
 |
OP_HAS_BINDING
;

363 
ƒefs
 = 0;

364 
ö°
* 
cuº
 = 
bödî
.
fú°
; cuº; cuº = cuº->
√xt
) {

365 
ƒefs
 +
	`block_böd_subblock
(
	`ö°_block
(
cuº
), 
body
, 
bödÊags
, 0);

367  
ƒefs
;

368 
	}
}

370 
block
 
	$block_böd
(
block
 
bödî
, block 
body
, 
bödÊags
) {

371 
	`block_böd_óch
(
bödî
, 
body
, 
bödÊags
);

372  
	`block_joö
(
bödî
, 
body
);

373 
	}
}

375 
block
 
	$block_böd_libøry
(
block
 
bödî
, block 
body
, 
bödÊags
, c⁄° *
lib«me
) {

376 
bödÊags
 |
OP_HAS_BINDING
;

377 
ƒefs
 = 0;

378 
m©chÀn
 = (
lib«me
 =
NULL
Ë? 0 : 
	`°æí
(libname);

379 *
m©ch«me
 = 
	`jv_mem_Æloc
(
m©chÀn
+2+1);

380 
m©ch«me
[0] = '\0';

381 i‡(
lib«me
 !
NULL
 &&Üibname[0] != '\0') {

382 
	`°r˝y
(
m©ch«me
,
lib«me
);

383 
	`°r˝y
(
m©ch«me
+
m©chÀn
, "::");

384 
m©chÀn
 += 2;

386 
	`as£π
(
	`block_has_⁄ly_bödîs
(
bödî
, 
bödÊags
));

387 
ö°
 *
cuº
 = 
bödî
.
œ°
; cuº; cuº = cuº->
¥ev
) {

388 
bödÊags2
 = 
bödÊags
;

389 * 
˙ame
 = 
cuº
->
symbﬁ
;

390 * 
äame
 = 
	`jv_mem_Æloc
(
	`°æí
(
cuº
->
symbﬁ
)+
m©chÀn
+1);

391 
	`°r˝y
(
äame
, 
m©ch«me
);

392 
	`°r˝y
(
äame
+
m©chÀn
, 
cuº
->
symbﬁ
);

395 i‡((
	`›code_des¸ibe
(
cuº
->
›
)->
Êags
 & (
OP_HAS_VARIABLE
 | 
OP_HAS_CONSTANT
)))

396 
bödÊags2
 = 
OP_HAS_VARIABLE
 | 
OP_HAS_BINDING
;

399 
cuº
->
symbﬁ
 = 
äame
;

400 
ƒefs
 +
	`block_böd_subblock
(
	`ö°_block
(
cuº
), 
body
, 
bödÊags2
, 0);

401 
cuº
->
symbﬁ
 = 
˙ame
;

402 
	`‰ì
(
äame
);

404 
	`‰ì
(
m©ch«me
);

405  
body
;

406 
	}
}

408 
ö°
* 
	$block_èke_œ°
(
block
* 
b
) {

409 
ö°
* 
i
 = 
b
->
œ°
;

410 i‡(
i
 == 0)

412 i‡(
i
->
¥ev
) {

413 
i
->
¥ev
->
√xt
 = i->next;

414 
b
->
œ°
 = 
i
->
¥ev
;

415 
i
->
¥ev
 = 0;

417 
b
->
fú°
 = 0;

418 
b
->
œ°
 = 0;

420  
i
;

421 
	}
}

425 
block
 
	$block_böd_ª„ªn˚d
(
block
 
bödî
, block 
body
, 
bödÊags
) {

426 
	`as£π
(
	`block_has_⁄ly_bödîs
(
bödî
, 
bödÊags
));

427 
bödÊags
 |
OP_HAS_BINDING
;

429 
ö°
* 
cuº
;

430 (
cuº
 = 
	`block_èke_œ°
(&
bödî
))) {

431 
block
 
b
 = 
	`ö°_block
(
cuº
);

432 i‡(
	`block_böd_subblock
(
b
, 
body
, 
bödÊags
, 0) == 0) {

433 
	`block_‰ì
(
b
);

435 
body
 = 
	`BLOCK
(
b
, body);

438  
body
;

439 
	}
}

441 
block
 
	$block_böd_£lf
(
block
 
bödî
, 
bödÊags
) {

442 
	`as£π
(
	`block_has_⁄ly_bödîs
(
bödî
, 
bödÊags
));

443 
bödÊags
 |
OP_HAS_BINDING
;

444 
block
 
body
 = 
	`gí_no›
();

446 
ö°
* 
cuº
;

447 (
cuº
 = 
	`block_èke_œ°
(&
bödî
))) {

448 
block
 
b
 = 
	`ö°_block
(
cuº
);

449 
	`block_böd_subblock
(
b
, 
body
, 
bödÊags
, 0);

450 
body
 = 
	`BLOCK
(
b
, body);

452  
body
;

453 
	}
}

455 
	$block_m¨k_ª„ªn˚d
(
block
 
body
) {

456 
ßw_t›
 = 0;

457 
ö°
* 
i
 = 
body
.
œ°
; i; i = i->
¥ev
) {

458 i‡(
ßw_t›
 && 
i
->
bound_by
 =ò&& !i->
ª„ªn˚d
)

460 i‡(
i
->
›
 =
TOP
) {

461 
ßw_t›
 = 1;

463 i‡(
i
->
bound_by
) {

464 
i
->
bound_by
->
ª„ªn˚d
 = 1;

467 
	`block_m¨k_ª„ªn˚d
(
i
->
¨gli°
);

468 
	`block_m¨k_ª„ªn˚d
(
i
->
sub‚
);

470 
	}
}

472 
block
 
	$block_dr›_uƒe„ªn˚d
(
block
 
body
) {

473 
	`block_m¨k_ª„ªn˚d
(
body
);

475 
block
 
ªfd
 = 
	`gí_no›
();

476 
ö°
* 
cuº
;

477 (
cuº
 = 
	`block_èke
(&
body
))) {

478 i‡(
cuº
->
bound_by
 =cuº && !cuº->
ª„ªn˚d
) {

479 
	`ö°_‰ì
(
cuº
);

481 
ªfd
 = 
	`BLOCK
‘efd, 
	`ö°_block
(
cuº
));

484  
ªfd
;

485 
	}
}

487 
jv
 
	$block_èke_imp‹ts
(
block
* 
body
) {

488 
jv
 
imp‹ts
 = 
	`jv_¨øy
();

491 
	`as£π
(!(
body
->
fú°
 && body->fú°->
›
 =
TOP
 && body->fú°->
√xt
 &&

492 (
body
->
fú°
->
√xt
->
›
 =
MODULEMETA
 || body->fú°->√xt->› =
DEPS
)));

494 
body
->
fú°
 && (body->fú°->
›
 =
MODULEMETA
 || body->fú°->› =
DEPS
)) {

495 
ö°
* 
dï
 = 
	`block_èke
(
body
);

496 i‡(
dï
->
›
 =
DEPS
) {

497 
imp‹ts
 = 
	`jv_¨øy_≠≥nd
(imp‹ts, 
	`jv_c›y
(
dï
->
imm
.
c⁄°™t
));

499 
	`ö°_‰ì
(
dï
);

501  
imp‹ts
;

502 
	}
}

504 
jv
 
	$block_li°_funcs
(
block
 
body
, 
omô_undîsc‹es
) {

505 
jv
 
funcs
 = 
	`jv_obje˘
();

506 
ö°
 *
pos
 = 
body
.
fú°
;Öo†!
NULL
;Öo†pos->
√xt
) {

507 i‡(
pos
->
›
 =
CLOSURE_CREATE
 ||Öos->› =
CLOSURE_CREATE_C
) {

508 i‡(
pos
->
symbﬁ
 !
NULL
 && (!
omô_undîsc‹es
 ||Öos->symbol[0] != '_')) {

509 
funcs
 = 
	`jv_obje˘_£t
(funcs, 
	`jv_°rög_fmt
("%s/%i", 
pos
->
symbﬁ
,Öos->
nf‹mÆs
), 
	`jv_nuŒ
());

513  
	`jv_keys_uns‹ãd
(
funcs
);

514 
	}
}

516 
block
 
	$gí_moduÀ
(
block
 
mëad©a
) {

517 
ö°
* 
i
 = 
	`ö°_√w
(
MODULEMETA
);

518 
i
->
imm
.
c⁄°™t
 = 
	`block_c⁄°
(
mëad©a
);

519 i‡(
	`jv_gë_köd
(
i
->
imm
.
c⁄°™t
Ë!
JV_KIND_OBJECT
)

520 
i
->
imm
.
c⁄°™t
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("metadata"), i->imm.constant);

521 
	`block_‰ì
(
mëad©a
);

522  
	`ö°_block
(
i
);

523 
	}
}

525 
jv
 
	$block_moduÀ_mëa
(
block
 
b
) {

526 i‡(
b
.
fú°
 !
NULL
 && b.fú°->
›
 =
MODULEMETA
)

527  
	`jv_c›y
(
b
.
fú°
->
imm
.
c⁄°™t
);

528  
	`jv_nuŒ
();

529 
	}
}

531 
block
 
	$gí_imp‹t
(c⁄° * 
«me
, c⁄° * 
as
, 
is_d©a
) {

532 
ö°
* 
i
 = 
	`ö°_√w
(
DEPS
);

533 
jv
 
mëa
 = 
	`jv_obje˘
();

534 i‡(
as
 !
NULL
)

535 
mëa
 = 
	`jv_obje˘_£t
(mëa, 
	`jv_°rög
("as"), jv_°rög(
as
));

536 
mëa
 = 
	`jv_obje˘_£t
(mëa, 
	`jv_°rög
("is_d©a"), 
is_d©a
 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
());

537 
mëa
 = 
	`jv_obje˘_£t
(mëa, 
	`jv_°rög
("ªÕ©h"), jv_°rög(
«me
));

538 
i
->
imm
.
c⁄°™t
 = 
mëa
;

539  
	`ö°_block
(
i
);

540 
	}
}

542 
block
 
	$gí_imp‹t_mëa
(
block
 
imp‹t
, block 
mëad©a
) {

543 
	`as£π
(
	`block_is_sögÀ
(
imp‹t
Ë&& imp‹t.
fú°
->
›
 =
DEPS
);

544 
	`as£π
(
	`block_is_c⁄°
(
mëad©a
Ë&& 
	`block_c⁄°_köd
(mëad©aË=
JV_KIND_OBJECT
);

545 
ö°
 *
i
 = 
imp‹t
.
fú°
;

546 
i
->
imm
.
c⁄°™t
 = 
	`jv_obje˘_mîge
(
	`block_c⁄°
(
mëad©a
), i->imm.constant);

547 
	`block_‰ì
(
mëad©a
);

548  
imp‹t
;

549 
	}
}

551 
block
 
	$gí_fun˘i⁄
(c⁄° * 
«me
, 
block
 
f‹mÆs
, block 
body
) {

552 
ö°
* 
i
 = 
	`ö°_√w
(
CLOSURE_CREATE
);

553 
nf‹mÆs
 = 0;

554 
ö°
* 
i
 = 
f‹mÆs
.
œ°
; i; i = i->
¥ev
) {

555 
nf‹mÆs
++;

556 
i
->
nf‹mÆs
 = 0;

557 i‡(
i
->
›
 =
CLOSURE_PARAM_REGULAR
) {

558 
i
->
›
 = 
CLOSURE_PARAM
;

559 
body
 = 
	`gí_v¨_bödög
(
	`gí_ˇŒ
(
i
->
symbﬁ
, 
	`gí_no›
()), i->symbol, body);

561 
	`block_böd_subblock
(
	`ö°_block
(
i
), 
body
, 
OP_IS_CALL_PSEUDO
 | 
OP_HAS_BINDING
, 0);

563 
i
->
sub‚
 = 
body
;

564 
i
->
symbﬁ
 = 
	`°rdup
(
«me
);

565 
i
->
™y_unbound
 = -1;

566 
i
->
nf‹mÆs
 =Çformals;

567 
i
->
¨gli°
 = 
f‹mÆs
;

568 
block
 
b
 = 
	`ö°_block
(
i
);

569 
	`block_böd_subblock
(
b
, b, 
OP_IS_CALL_PSEUDO
 | 
OP_HAS_BINDING
, 0);

570  
b
;

571 
	}
}

573 
block
 
	$gí_∑øm_ªguœr
(c⁄° * 
«me
) {

574  
	`gí_›_unbound
(
CLOSURE_PARAM_REGULAR
, 
«me
);

575 
	}
}

577 
block
 
	$gí_∑øm
(c⁄° * 
«me
) {

578  
	`gí_›_unbound
(
CLOSURE_PARAM
, 
«me
);

579 
	}
}

581 
block
 
	$gí_œmbda
(
block
 
body
) {

582  
	`gí_fun˘i⁄
("@œmbda", 
	`gí_no›
(), 
body
);

583 
	}
}

585 
block
 
	$gí_ˇŒ
(c⁄° * 
«me
, 
block
 
¨gs
) {

586 
block
 
b
 = 
	`gí_›_unbound
(
CALL_JQ
, 
«me
);

587 
b
.
fú°
->
¨gli°
 = 
¨gs
;

588 
b
.
fú°
->
«˘uÆs
 = 
	`block_cou¡_a˘uÆs
(b.fú°->
¨gli°
);

589  
b
;

590 
	}
}

592 
block
 
	$gí_subexp
(
block
 
a
) {

593 i‡(
	`block_is_no›
(
a
)) {

594  
	`gí_›_sim∂e
(
DUP
);

596 i‡(
	`block_is_sögÀ
(
a
Ë&&á.
fú°
->
›
 =
LOADK
) {

597 
jv
 
c
 = 
	`block_c⁄°
(
a
);

598 
	`block_‰ì
(
a
);

599  
	`gí_›_pushk_undî
(
c
);

601  
	`BLOCK
(
	`gí_›_sim∂e
(
SUBEXP_BEGIN
), 
a
, gí_›_sim∂e(
SUBEXP_END
));

602 
	}
}

604 
block
 
	$gí_bŸh
(
block
 
a
, block 
b
) {

605 
block
 
jump
 = 
	`gí_›_èrgëœãr
(
JUMP
);

606 
block
 
f‹k
 = 
	`gí_›_èrgë
(
FORK
, 
jump
);

607 
block
 
c
 = 
	`BLOCK
(
f‹k
, 
a
, 
jump
, 
b
);

608 
	`ö°_£t_èrgë
(
jump
, 
c
);

609  
c
;

610 
	}
}

612 
block
 
	$gí_c⁄°_obje˘
(
block
 
ex¥
) {

613 
is_c⁄°
 = 1;

614 
jv
 
o
 = 
	`jv_obje˘
();

615 
jv
 
k
 = 
	`jv_nuŒ
();

616 
jv
 
v
 = 
	`jv_nuŒ
();

617 
ö°
 *
i
 = 
ex¥
.
fú°
; i; i = i->
√xt
) {

618 i‡(
i
->
›
 =
PUSHK_UNDER
) {

619 
k
 = 
	`jv_c›y
(
i
->
imm
.
c⁄°™t
);

620 
i
 = i->
√xt
;

621 } i‡(
i
->
›
 !
SUBEXP_BEGIN
 ||

622 
i
->
√xt
 =
NULL
 ||

623 
i
->
√xt
->
›
 !
LOADK
 ||

624 
i
->
√xt
->√xà=
NULL
 ||

625 
i
->
√xt
->√xt->
›
 !
SUBEXP_END
) {

626 
is_c⁄°
 = 0;

629 
k
 = 
	`jv_c›y
(
i
->
√xt
->
imm
.
c⁄°™t
);

630 
i
 = i->
√xt
->next->next;

632 i‡(
i
 !
NULL
 && i->
›
 =
PUSHK_UNDER
) {

633 
v
 = 
	`jv_c›y
(
i
->
imm
.
c⁄°™t
);

634 
i
 = i->
√xt
;

635 } i‡(
i
 =
NULL
 ||

636 
i
->
›
 !
SUBEXP_BEGIN
 ||

637 
i
->
√xt
 =
NULL
 ||

638 
i
->
√xt
->
›
 !
LOADK
 ||

639 
i
->
√xt
->√xà=
NULL
 ||

640 
i
->
√xt
->√xt->
›
 !
SUBEXP_END
) {

641 
is_c⁄°
 = 0;

644 
v
 = 
	`jv_c›y
(
i
->
√xt
->
imm
.
c⁄°™t
);

645 
i
 = i->
√xt
->next->next;

647 i‡(
i
 =
NULL
 || i->
›
 !
INSERT
) {

648 
is_c⁄°
 = 0;

651 i‡(
	`jv_gë_köd
(
k
Ë!
JV_KIND_STRING
) {

652 
is_c⁄°
 = 0;

655 
o
 = 
	`jv_obje˘_£t
(o, 
k
, 
v
);

656 
k
 = 
	`jv_nuŒ
();

657 
v
 = 
	`jv_nuŒ
();

659 i‡(!
is_c⁄°
) {

660 
	`jv_‰ì
(
o
);

661 
	`jv_‰ì
(
k
);

662 
	`jv_‰ì
(
v
);

663 
block
 
b
 = {0,0};

664  
b
;

666 
	`block_‰ì
(
ex¥
);

667  
	`gí_c⁄°
(
o
);

668 
	}
}

670 
block
 
	$gí_c⁄°_¨øy
(
block
 
ex¥
) {

693 
Æl_c⁄°
 = 1;

694 
commas
 = 0;

695 
n‹mÆ
 = 1;

696 
jv
 
a
 = 
	`jv_¨øy
();

697 
ö°
 *
i
 = 
ex¥
.
fú°
; i; i = i->
√xt
) {

698 i‡(
i
->
›
 =
FORK
) {

699 
commas
++;

700 i‡(
i
->
imm
.
èrgë
 =
NULL
 || i->imm.èrgë->
›
 !
JUMP
 ||

701 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) > 0) {

702 
n‹mÆ
 = 0;

705 } i‡(
Æl_c⁄°
 && 
i
->
›
 =
LOADK
) {

706 i‡(
i
->
√xt
 !
NULL
 && i->√xt->
›
 !
JUMP
) {

707 
n‹mÆ
 = 0;

710 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_c›y
(
i
->
imm
.
c⁄°™t
));

711 } i‡(
i
->
›
 !
JUMP
 || i->
imm
.
èrgë
 =
NULL
 ||

712 
i
->
imm
.
èrgë
->
›
 !
LOADK
) {

713 
Æl_c⁄°
 = 0;

717 i‡(
Æl_c⁄°
 && 
n‹mÆ
 &&

718 (
ex¥
.
œ°
 =
NULL
 ||Éx¥.œ°->
›
 =
LOADK
) &&

719 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)Ë=
commas
 + 1) {

720 
	`block_‰ì
(
ex¥
);

721  
	`gí_c⁄°
(
a
);

724 
	`jv_‰ì
(
a
);

725 
block
 
b
 = {0,0};

726  
b
;

727 
	}
}

729 
block
 
	$gí_cﬁÀ˘
(
block
 
ex¥
) {

730 
block
 
c⁄°_¨øy
 = 
	`gí_c⁄°_¨øy
(
ex¥
);

731 i‡(
c⁄°_¨øy
.
fú°
 !
NULL
)

732  
c⁄°_¨øy
;

734 
block
 
¨øy_v¨
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "collect");

735 
block
 
c
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_c⁄°
(
	`jv_¨øy
()), 
¨øy_v¨
);

737 
block
 
èû
 = 
	`BLOCK
(
	`gí_›_bound
(
APPEND
, 
¨øy_v¨
),

738 
	`gí_›_sim∂e
(
BACKTRACK
));

740  
	`BLOCK
(
c
,

741 
	`gí_›_èrgë
(
FORK
, 
èû
),

742 
ex¥
,

743 
èû
,

744 
	`gí_›_bound
(
LOADVN
, 
¨øy_v¨
));

745 
	}
}

747 
block
 
	$böd_m©chî
(
block
 
m©chî
, block 
body
) {

751 
ö°
* 
i
 = 
m©chî
.
fú°
; i; i = i->
√xt
) {

752 i‡((
i
->
›
 =
STOREV
 || i->› =
STOREVN
Ë&& !i->
bound_by
)

753 
	`block_böd_subblock
(
	`ö°_block
(
i
), 
body
, 
OP_HAS_VARIABLE
, 0);

755  
	`BLOCK
(
m©chî
, 
body
);

756 
	}
}

761 
	$block_gë_unbound_v¨s
(
block
 
b
, 
jv
 *
v¨s
) {

762 
	`as£π
(
v¨s
 !
NULL
);

763 
	`as£π
(
	`jv_gë_köd
(*
v¨s
Ë=
JV_KIND_OBJECT
);

764 
ö°
* 
i
 = 
b
.
fú°
; i; i = i->
√xt
) {

765 i‡(
i
->
sub‚
.
fú°
) {

766 
	`block_gë_unbound_v¨s
(
i
->
sub‚
, 
v¨s
);

769 i‡((
i
->
›
 =
STOREV
 || i->› =
STOREVN
Ë&& i->
bound_by
 =
NULL
) {

770 *
v¨s
 = 
	`jv_obje˘_£t
(*v¨s, 
	`jv_°rög
(
i
->
symbﬁ
), 
	`jv_åue
());

773 
	}
}

781 
block
 
	$böd_Æã∫©i⁄_m©chîs
(
block
 
m©chîs
, block 
body
) {

782 
block
 
¥ómbÀ
 = {0};

783 
block
 
Ætm©chîs
 = {0};

784 
block
 
mb
 = {0};

785 
block
 
föÆ_m©chî
 = 
m©chîs
;

788 
föÆ_m©chî
.
fú°
 && föÆ_m©chî.fú°->
›
 =
DESTRUCTURE_ALT
) {

789 
	`block_≠≥nd
(&
Ætm©chîs
, 
	`ö°_block
(
	`block_èke
(&
föÆ_m©chî
)));

793 i‡(
Ætm©chîs
.
fú°
 =
NULL
) {

794  
	`böd_m©chî
(
föÆ_m©chî
, 
body
);

798 
jv
 
Æl_v¨s
 = 
	`jv_obje˘
();

799 
	`block_gë_unbound_v¨s
(
Ætm©chîs
, &
Æl_v¨s
);

800 
	`block_gë_unbound_v¨s
(
föÆ_m©chî
, &
Æl_v¨s
);

803 
	`jv_obje˘_keys_f‹óch
(
Æl_v¨s
, 
key
) {

804 
¥ómbÀ
 = 
	`BLOCK
(preamble,

805 
	`gí_›_sim∂e
(
DUP
),

806 
	`gí_c⁄°
(
	`jv_nuŒ
()),

807 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
(
key
)));

808 
	`jv_‰ì
(
key
);

810 
	`jv_‰ì
(
Æl_v¨s
);

813 
ö°
 *
i
 = 
Ætm©chîs
.
fú°
; i; i = i->
√xt
) {

814 
block
 
subm©chî
 = 
i
->
sub‚
;

817 
subm©chî
 = 
	`BLOCK
(subm©chî, 
	`gí_›_èrgë
(
JUMP
, 
föÆ_m©chî
));

820 
mb
 = 
	`BLOCK
(mb, 
	`gí_›_èrgë
(
DESTRUCTURE_ALT
, 
subm©chî
), submatcher);

824 
i
->
sub‚
.
fú°
 = i->sub‚.
œ°
 = 
NULL
;

827 
	`block_‰ì
(
Ætm©chîs
);

829  
	`böd_m©chî
(
¥ómbÀ
, 
	`BLOCK
(
mb
, 
föÆ_m©chî
, 
body
));

830 
	}
}

832 
block
 
	$gí_ªdu˚
(
block
 
sour˚
, block 
m©chî
, block 
öô
, block 
body
) {

833 
block
 
ªs_v¨
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "reduce");

834 
block
 
lo›
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUPN
),

835 
sour˚
,

836 
	`böd_Æã∫©i⁄_m©chîs
(
m©chî
,

837 
	`BLOCK
(
	`gí_›_bound
(
LOADVN
, 
ªs_v¨
),

838 
body
,

839 
	`gí_›_bound
(
STOREV
, 
ªs_v¨
))),

840 
	`gí_›_sim∂e
(
BACKTRACK
));

841  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

842 
öô
,

843 
ªs_v¨
,

844 
	`gí_›_èrgë
(
FORK
, 
lo›
),

845 
lo›
,

846 
	`gí_›_bound
(
LOADVN
, 
ªs_v¨
));

847 
	}
}

849 
block
 
	$gí_f‹óch
(
block
 
sour˚
, block 
m©chî
, block 
öô
, block 
upd©e
, block 
exåa˘
) {

850 
block
 
ouçut
 = 
	`gí_›_èrgëœãr
(
JUMP
);

851 
block
 
°©e_v¨
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "foreach");

852 
block
 
lo›
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUPN
),

854 
sour˚
,

857 
	`böd_Æã∫©i⁄_m©chîs
(
m©chî
,

859 
	`BLOCK
(
	`gí_›_bound
(
LOADVN
, 
°©e_v¨
),

861 
upd©e
,

863 
	`gí_›_sim∂e
(
DUP
),

865 
	`gí_›_bound
(
STOREV
, 
°©e_v¨
),

867 
exåa˘
,

878 
ouçut
)));

879 
block
 
f‹óch
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

880 
öô
,

881 
°©e_v¨
,

882 
	`gí_›_èrgë
(
FORK
, 
lo›
),

883 
lo›
,

887 
	`gí_›_sim∂e
(
BACKTRACK
));

888 
	`ö°_£t_èrgë
(
ouçut
, 
f‹óch
);

889  
f‹óch
;

890 
	}
}

892 
block
 
	$gí_deföed‹
(
block
 
a
, block 
b
) {

894 
block
 
found_v¨
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "found");

895 
block
 
öô
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_c⁄°
(
	`jv_Ál£
()), 
found_v¨
);

898 
block
 
backåack
 = 
	`gí_›_sim∂e
(
BACKTRACK
);

899 
block
 
èû
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

900 
	`gí_›_bound
(
LOADV
, 
found_v¨
),

901 
	`gí_›_èrgë
(
JUMP_F
, 
backåack
),

902 
backåack
,

903 
	`gí_›_sim∂e
(
POP
),

904 
b
);

907 
block
 
if_nŸfound
 = 
	`gí_›_sim∂e
(
BACKTRACK
);

910 
block
 
if_found
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

911 
	`gí_c⁄°
(
	`jv_åue
()),

912 
	`gí_›_bound
(
STOREV
, 
found_v¨
),

913 
	`gí_›_èrgë
(
JUMP
, 
èû
));

915  
	`BLOCK
(
öô
,

916 
	`gí_›_èrgë
(
FORK
, 
if_nŸfound
),

917 
a
,

918 
	`gí_›_èrgë
(
JUMP_F
, 
if_found
),

919 
if_found
,

920 
if_nŸfound
,

921 
èû
);

922 
	}
}

924 
	$block_has_maö
(
block
 
t›
) {

925 
ö°
 *
c
 = 
t›
.
fú°
; c; c = c->
√xt
) {

926 i‡(
c
->
›
 =
TOP
)

930 
	}
}

932 
	$block_is_funcdef
(
block
 
b
) {

933 i‡(
b
.
fú°
 !
NULL
 && b.fú°->
›
 =
CLOSURE_CREATE
)

936 
	}
}

938 
block
 
	$gí_c⁄dbønch
(
block
 
i·rue
, block 
ifÁl£
) {

939 
i·rue
 = 
	`BLOCK
(i·rue, 
	`gí_›_èrgë
(
JUMP
, 
ifÁl£
));

940  
	`BLOCK
(
	`gí_›_èrgë
(
JUMP_F
, 
i·rue
), i·rue, 
ifÁl£
);

941 
	}
}

943 
block
 
	$gí_™d
(
block
 
a
, block 
b
) {

945  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
a
,

946 
	`gí_c⁄dbønch
(
	`BLOCK
(
	`gí_›_sim∂e
(
POP
),

947 
b
,

948 
	`gí_c⁄dbønch
(
	`gí_c⁄°
(
	`jv_åue
()),

949 
	`gí_c⁄°
(
	`jv_Ál£
()))),

950 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), 
	`gí_c⁄°
(
	`jv_Ál£
()))));

951 
	}
}

953 
block
 
	$gí_‹
(
block
 
a
, block 
b
) {

955  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
a
,

956 
	`gí_c⁄dbønch
(
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), 
	`gí_c⁄°
(
	`jv_åue
())),

957 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
),

958 
b
,

959 
	`gí_c⁄dbønch
(
	`gí_c⁄°
(
	`jv_åue
()),

960 
	`gí_c⁄°
(
	`jv_Ál£
())))));

961 
	}
}

963 
block
 
	$gí_de°ru˘uª_Æt
(
block
 
m©chî
) {

964 
ö°
 *
i
 = 
m©chî
.
fú°
; i; i = i->
√xt
) {

965 i‡(
i
->
›
 =
STOREV
) {

966 
i
->
›
 = 
STOREVN
;

969 
ö°
* 
i
 = 
	`ö°_√w
(
DESTRUCTURE_ALT
);

970 
i
->
sub‚
 = 
m©chî
;

971  
	`ö°_block
(
i
);

972 
	}
}

974 
block
 
	$gí_v¨_bödög
(
block
 
v¨
, c⁄° * 
«me
, block 
body
) {

975  
	`gí_de°ru˘uª
(
v¨
, 
	`gí_›_unbound
(
STOREV
, 
«me
), 
body
);

976 
	}
}

978 
block
 
	$gí_¨øy_m©chî
(
block
 
À·
, block 
cuº
) {

979 
ödex
;

980 i‡(
	`block_is_no›
(
À·
))

981 
ödex
 = 0;

985 
	`as£π
(
À·
.
fú°
->
›
 =
DUP
);

986 
	`as£π
(
À·
.
fú°
->
√xt
 !
NULL
);

987 
ö°
 *
i
 = 
NULL
;

988 i‡(
À·
.
fú°
->
√xt
->
›
 =
PUSHK_UNDER
) {

989 
i
 = 
À·
.
fú°
->
√xt
;

991 
	`as£π
(
À·
.
fú°
->
√xt
->
›
 =
SUBEXP_BEGIN
);

992 
	`as£π
(
À·
.
fú°
->
√xt
->√xt->
›
 =
LOADK
);

993 
i
 = 
À·
.
fú°
->
√xt
->next;

995 
ödex
 = 1 + (Ë
	`jv_numbî_vÆue
(
i
->
imm
.
c⁄°™t
);

999  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_numbî
(
ödex
))),

1000 
	`gí_›_sim∂e
(
INDEX
), 
cuº
, 
À·
);

1001 
	}
}

1003 
block
 
	$gí_obje˘_m©chî
(
block
 
«me
, block 
cuº
) {

1004  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_subexp
(
«me
), gí_›_sim∂e(
INDEX
),

1005 
cuº
);

1006 
	}
}

1008 
block
 
	$gí_de°ru˘uª
(
block
 
v¨
, block 
m©chîs
, block 
body
) {

1010 
block
 
t›
 = 
	`gí_no›
();

1011 i‡(
body
.
fú°
 && body.fú°->
›
 =
TOP
)

1012 
t›
 = 
	`ö°_block
(
	`block_èke
(&
body
));

1014 i‡(
m©chîs
.
fú°
 && m©chîs.fú°->
›
 =
DESTRUCTURE_ALT
) {

1015 
	`block_≠≥nd
(&
v¨
, 
	`gí_›_sim∂e
(
DUP
));

1017 
t›
 = 
	`BLOCK
—›, 
	`gí_›_sim∂e
(
DUP
));

1020  
	`BLOCK
(
t›
, 
	`gí_subexp
(
v¨
), 
	`gí_›_sim∂e
(
POP
), 
	`böd_Æã∫©i⁄_m©chîs
(
m©chîs
, 
body
));

1021 
	}
}

1024 
block
 
	$gí_wûdv¨_bödög
(
block
 
v¨
, c⁄° * 
«me
, block 
body
) {

1025  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
v¨
,

1026 
	`block_böd
(
	`gí_›_unbound
(
STOREV
, 
«me
),

1027 
body
, 
OP_HAS_VARIABLE
 | 
OP_BIND_WILDCARD
));

1028 
	}
}

1030 
block
 
	$gí_c⁄d
(
block
 
c⁄d
, block 
i·rue
, block 
ifÁl£
) {

1031  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), BLOCK(
	`gí_subexp
(
c⁄d
), gí_›_sim∂e(
POP
)),

1032 
	`gí_c⁄dbønch
(
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), 
i·rue
),

1033 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), 
ifÁl£
)));

1034 
	}
}

1036 
block
 
	$gí_åy_h™dÀr
(
block
 
h™dÀr
) {

1038  
	`gí_c⁄d
(

1039 
	`gí_™d
(
	`gí_ˇŒ
("_equal",

1040 
	`BLOCK
(
	`gí_œmbda
(
	`gí_c⁄°
(
	`jv_°rög
("object"))),

1041 
	`gí_œmbda
(
	`gí_ˇŒ
("ty≥", 
	`gí_no›
())))),

1042 
	`BLOCK
(
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_°rög
("__jq"))),

1043 
	`gí_no›
(),

1044 
	`gí_›_sim∂e
(
INDEX
))),

1046 
	`gí_ˇŒ
("îr‹", 
	`gí_no›
()),

1048 
h™dÀr
);

1049 
	}
}

1051 
block
 
	$gí_åy
(
block
 
exp
, block 
h™dÀr
) {

1068 i‡(!
h™dÀr
.
fú°
 && !h™dÀr.
œ°
)

1070 
h™dÀr
 = 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), gí_›_sim∂e(
POP
), handler);

1071 
exp
 = 
	`BLOCK
”xp, 
	`gí_›_èrgë
(
JUMP
, 
h™dÀr
));

1072  
	`BLOCK
(
	`gí_›_èrgë
(
FORK_OPT
, 
exp
),Éxp, 
h™dÀr
);

1073 
	}
}

1075 
block
 
	$gí_œbñ
(c⁄° *
œbñ
, 
block
 
exp
) {

1076 
block
 
c⁄d
 = 
	`gí_ˇŒ
("_equal",

1077 
	`BLOCK
(
	`gí_œmbda
(
	`gí_no›
()),

1078 
	`gí_œmbda
(
	`gí_›_unbound
(
LOADV
, 
œbñ
))));

1079  
	`gí_wûdv¨_bödög
(
	`gí_›_sim∂e
(
GENLABEL
), 
œbñ
,

1080 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
),

1088 
	`gí_åy
(
exp
,

1089 
	`gí_c⁄d
(
c⁄d
,

1090 
	`gí_›_sim∂e
(
BACKTRACK
),

1091 
	`gí_ˇŒ
("îr‹", 
	`gí_no›
())))));

1092 
	}
}

1094 
block
 
	$gí_cbödög
(c⁄° 
cfun˘i⁄
* 
cfun˘i⁄s
, 
ncfun˘i⁄s
, 
block
 
code
) {

1095 
cfunc
=0; cfunc<
ncfun˘i⁄s
; cfunc++) {

1096 
ö°
* 
i
 = 
	`ö°_√w
(
CLOSURE_CREATE_C
);

1097 
i
->
imm
.
cfunc
 = &
cfun˘i⁄s
[cfunc];

1098 
i
->
symbﬁ
 = 
	`°rdup
(
cfun˘i⁄s
[
cfunc
].
«me
);

1099 
i
->
nf‹mÆs
 = 
cfun˘i⁄s
[
cfunc
].
«rgs
 - 1;

1100 
i
->
™y_unbound
 = 0;

1101 
code
 = 
	`BLOCK
(
	`ö°_block
(
i
), code);

1103  
code
;

1104 
	}
}

1106 
uöt16_t
 
	$√°ög_Àvñ
(
byãcode
* 
bc
, 
ö°
* 
èrgë
) {

1107 
uöt16_t
 
Àvñ
 = 0;

1108 
	`as£π
(
bc
 && 
èrgë
 &&Å¨gë->
compûed
);

1109 
bc
 && 
èrgë
->
compûed
 != bc) {

1110 
Àvñ
++;

1111 
bc
 = bc->
∑ª¡
;

1113 
	`as£π
(
bc
 && b¯=
èrgë
->
compûed
);

1114  
Àvñ
;

1115 
	}
}

1117 
	$cou¡_cfun˘i⁄s
(
block
 
b
) {

1118 
n
 = 0;

1119 
ö°
* 
i
 = 
b
.
fú°
; i; i = i->
√xt
) {

1120 i‡(
i
->
›
 =
CLOSURE_CREATE_C
Ë
n
++;

1121 
n
 +
	`cou¡_cfun˘i⁄s
(
i
->
sub‚
);

1123  
n
;

1124 
	}
}

1126 #i‚de‡
WIN32


1127 **
ívú⁄
;

1130 
jv


1131 
	$make_ív
(
jv
 
ív
)

1133 i‡(
	`jv_is_vÆid
(
ív
))

1134  
	`jv_c›y
(
ív
);

1135 
jv
 
r
 = 
	`jv_obje˘
();

1136 i‡(
ívú⁄
 =
NULL
)

1137  
r
;

1138 
size_t
 
i
 = 0; 
ívú⁄
[i] !
NULL
; i++) {

1139 c⁄° *
eq
;

1141 i‡((
eq
 = 
	`°rchr
(
ívú⁄
[
i
], '=')Ë=
NULL
)

1142 
r
 = 
	`jv_obje˘_dñëe
‘, 
	`jv_°rög
(
ívú⁄
[
i
]));

1144 
r
 = 
	`jv_obje˘_£t
‘, 
	`jv_°rög_sized
(
ívú⁄
[
i
], 
eq
 -Énvú⁄[i]), 
	`jv_°rög
(eq + 1));

1146  
	`jv_c›y
(
r
);

1147 
	}
}

1150 
	$ex∑nd_ˇŒ_¨gli°
(
block
* 
b
, 
jv
 
¨gs
, jv *
ív
) {

1151 
îr‹s
 = 0;

1152 
block
 
ªt
 = 
	`gí_no›
();

1153 
ö°
* 
cuº
; (cuº = 
	`block_èke
(
b
));) {

1154 i‡(
	`›code_des¸ibe
(
cuº
->
›
)->
Êags
 & 
OP_HAS_BINDING
) {

1155 i‡(!
cuº
->
bound_by
 && cuº->
›
 =
LOADV
 && 
	`°rcmp
(cuº->
symbﬁ
, "ENV") == 0) {

1156 
cuº
->
›
 = 
LOADK
;

1157 *
ív
 = 
cuº
->
imm
.
c⁄°™t
 = 
	`make_ív
(*env);

1158 } i‡(!
cuº
->
bound_by
 && cuº->
›
 =
LOADV
 && 
	`jv_obje˘_has
(
	`jv_c›y
(
¨gs
), 
	`jv_°rög
(cuº->
symbﬁ
))) {

1159 
cuº
->
›
 = 
LOADK
;

1160 
cuº
->
imm
.
c⁄°™t
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
¨gs
), 
	`jv_°rög
(cuº->
symbﬁ
));

1161 } i‡(!
cuº
->
bound_by
) {

1162 i‡(
cuº
->
symbﬁ
[0] == '*' && curr->symbol[1] >= '1' && curr->symbol[1] <= '3' && curr->symbol[2] == '\0')

1163 
	`locfûe_loˇã
(
cuº
->
locfûe
, cuº->
sour˚
, "jq:Érror: break used outsideÜabeled control structure");

1164 i‡(
cuº
->
›
 =
LOADV
)

1165 
	`locfûe_loˇã
(
cuº
->
locfûe
, cuº->
sour˚
, "jq:Éº‹: $%†i†nŸ deföed", cuº->
symbﬁ
);

1167 
	`locfûe_loˇã
(
cuº
->
locfûe
, cuº->
sour˚
, "jq:Éº‹: %s/%d i†nŸ deföed", cuº->
symbﬁ
, cuº->
«˘uÆs
);

1168 
îr‹s
++;

1170 
ªt
 = 
	`BLOCK
‘ë, 
	`ö°_block
(
cuº
));

1175 
block
 
¥ñude
 = 
	`gí_no›
();

1176 i‡(
cuº
->
›
 =
CALL_JQ
) {

1177 
a˘uÆ_¨gs
 = 0, 
desúed_¨gs
 = 0;

1179 
cuº
->
bound_by
->
›
) {

1180 : 
	`as£π
(0 && "Unknown functionÅype"); ;

1181 
CLOSURE_CREATE
:

1182 
CLOSURE_PARAM
: {

1183 
block
 
ˇŒ¨gs
 = 
	`gí_no›
();

1184 
ö°
* 
i
; (ò
	`block_èke
(&
cuº
->
¨gli°
));) {

1185 
	`as£π
(
	`›code_des¸ibe
(
i
->
›
)->
Êags
 & 
OP_IS_CALL_PSEUDO
);

1186 
block
 
b
 = 
	`ö°_block
(
i
);

1187 
i
->
›
) {

1188 : 
	`as£π
(0 && "UnknownÅype ofÖarameter"); ;

1189 
CLOSURE_REF
:

1190 
	`block_≠≥nd
(&
ˇŒ¨gs
, 
b
);

1192 
CLOSURE_CREATE
:

1193 
	`block_≠≥nd
(&
¥ñude
, 
b
);

1194 
	`block_≠≥nd
(&
ˇŒ¨gs
, 
	`gí_›_bound
(
CLOSURE_REF
, 
b
));

1197 
a˘uÆ_¨gs
++;

1199 
cuº
->
imm
.
ötvÆ
 = 
a˘uÆ_¨gs
;

1200 
cuº
->
¨gli°
 = 
ˇŒ¨gs
;

1202 i‡(
cuº
->
bound_by
->
›
 =
CLOSURE_CREATE
) {

1203 
ö°
* 
i
 = 
cuº
->
bound_by
->
¨gli°
.
fú°
; i; i = i->
√xt
) {

1204 
	`as£π
(
i
->
›
 =
CLOSURE_PARAM
);

1205 
desúed_¨gs
++;

1211 
CLOSURE_CREATE_C
: {

1212 
ö°
* 
i
; (ò
	`block_èke
(&
cuº
->
¨gli°
)); ) {

1213 
	`as£π
(
i
->
›
 =
CLOSURE_CREATE
);

1214 
block
 
body
 = 
i
->
sub‚
;

1215 
i
->
sub‚
 = 
	`gí_no›
();

1216 
	`ö°_‰ì
(
i
);

1218 
îr‹s
 +
	`ex∑nd_ˇŒ_¨gli°
(&
body
, 
¨gs
, 
ív
);

1219 
¥ñude
 = 
	`BLOCK
(
	`gí_subexp
(
body
),Örelude);

1220 
a˘uÆ_¨gs
++;

1222 
	`as£π
(
cuº
->
›
 =
CALL_JQ
);

1223 
cuº
->
›
 = 
CALL_BUILTIN
;

1224 
cuº
->
imm
.
ötvÆ
 = 
a˘uÆ_¨gs
 + 1 ;

1225 
	`as£π
(
cuº
->
bound_by
->
›
 =
CLOSURE_CREATE_C
);

1226 
desúed_¨gs
 = 
cuº
->
bound_by
->
imm
.
cfunc
->
«rgs
 - 1;

1227 
	`as£π
(!
cuº
->
¨gli°
.
fú°
);

1232 
	`as£π
(
a˘uÆ_¨gs
 =
desúed_¨gs
);

1234 
ªt
 = 
	`BLOCK
‘ë, 
¥ñude
, 
	`ö°_block
(
cuº
));

1236 *
b
 = 
ªt
;

1237  
îr‹s
;

1238 
	}
}

1240 
	$compûe
(
byãcode
* 
bc
, 
block
 
b
, 
locfûe
* 
lf
, 
jv
 
¨gs
, jv *
ív
) {

1241 
îr‹s
 = 0;

1242 
pos
 = 0;

1243 
v¨_‰ame_idx
 = 0;

1244 
bc
->
nsubfun˘i⁄s
 = 0;

1245 
îr‹s
 +
	`ex∑nd_ˇŒ_¨gli°
(&
b
, 
¨gs
, 
ív
);

1246 
b
 = 
	`BLOCK
(b, 
	`gí_›_sim∂e
(
RET
));

1247 
jv
 
loˇ ames
 = 
	`jv_¨øy
();

1248 
ö°
* 
cuº
 = 
b
.
fú°
; cuº; cuº = cuº->
√xt
) {

1249 i‡(!
cuº
->
√xt
Ë
	`as£π
(cuº =
b
.
œ°
);

1250 
Àngth
 = 
	`›code_des¸ibe
(
cuº
->
›
)->length;

1251 i‡(
cuº
->
›
 =
CALL_JQ
) {

1252 
ö°
* 
¨g
 = 
cuº
->
¨gli°
.
fú°
;árg;árg =árg->
√xt
) {

1253 
Àngth
 += 2;

1256 
pos
 +
Àngth
;

1257 
cuº
->
byãcode_pos
 = 
pos
;

1258 
cuº
->
compûed
 = 
bc
;

1260 
	`as£π
(
cuº
->
›
 !
CLOSURE_REF
 && cuº->› !
CLOSURE_PARAM
);

1262 i‡((
	`›code_des¸ibe
(
cuº
->
›
)->
Êags
 & 
OP_HAS_VARIABLE
) &&

1263 
cuº
->
bound_by
 == curr) {

1264 
cuº
->
imm
.
ötvÆ
 = 
v¨_‰ame_idx
++;

1265 
loˇ ames
 = 
	`jv_¨øy_≠≥nd
÷oˇ ames, 
	`jv_°rög
(
cuº
->
symbﬁ
));

1268 i‡(
cuº
->
›
 =
CLOSURE_CREATE
) {

1269 
	`as£π
(
cuº
->
bound_by
 == curr);

1270 
cuº
->
imm
.
ötvÆ
 = 
bc
->
nsubfun˘i⁄s
++;

1272 i‡(
cuº
->
›
 =
CLOSURE_CREATE_C
) {

1273 
	`as£π
(
cuº
->
bound_by
 == curr);

1274 
idx
 = 
bc
->
globÆs
->
ncfun˘i⁄s
++;

1275 
bc
->
globÆs
->
cfunc_«mes
 = 
	`jv_¨øy_≠≥nd
(bc->globals->cfunc_names,

1276 
	`jv_°rög
(
cuº
->
symbﬁ
));

1277 
bc
->
globÆs
->
cfun˘i⁄s
[
idx
] = *
cuº
->
imm
.
cfunc
;

1278 
cuº
->
imm
.
ötvÆ
 = 
idx
;

1281 i‡(
pos
 > 0xFFFF) {

1283 
	`locfûe_loˇã
(
lf
, 
UNKNOWN_LOCATION
,

1284 "fun˘i⁄ compûedÅÿ%d byã†which i†toÿl⁄g", 
pos
);

1285 
îr‹s
++;

1287 
bc
->
codñí
 = 
pos
;

1288 
bc
->
debugöfo
 = 
	`jv_obje˘_£t
(bc->debugöfo, 
	`jv_°rög
("loˇls"), 
loˇ ames
);

1289 i‡(
bc
->
nsubfun˘i⁄s
) {

1290 
bc
->
subfun˘i⁄s
 = 
	`jv_mem_ˇŒoc
((
byãcode
*), bc->
nsubfun˘i⁄s
);

1291 
ö°
* 
cuº
 = 
b
.
fú°
; cuº; cuº = cuº->
√xt
) {

1292 i‡(
cuº
->
›
 =
CLOSURE_CREATE
) {

1293 
byãcode
* 
sub‚
 = 
	`jv_mem_Æloc
((bytecode));

1294 
bc
->
subfun˘i⁄s
[
cuº
->
imm
.
ötvÆ
] = 
sub‚
;

1295 
sub‚
->
globÆs
 = 
bc
->globals;

1296 
sub‚
->
∑ª¡
 = 
bc
;

1297 
sub‚
->
n˛osuªs
 = 0;

1298 
sub‚
->
debugöfo
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("«me"), jv_°rög(
cuº
->
symbﬁ
));

1299 
jv
 
∑øms
 = 
	`jv_¨øy
();

1300 
ö°
* 
∑øm
 = 
cuº
->
¨gli°
.
fú°
;Ö¨am;Ö¨am =Ö¨am->
√xt
) {

1301 
	`as£π
(
∑øm
->
›
 =
CLOSURE_PARAM
);

1302 
	`as£π
(
∑øm
->
bound_by
 ==Öaram);

1303 
∑øm
->
imm
.
ötvÆ
 = 
sub‚
->
n˛osuªs
++;

1304 
∑øm
->
compûed
 = 
sub‚
;

1305 
∑øms
 = 
	`jv_¨øy_≠≥nd
’¨ams, 
	`jv_°rög
(
∑øm
->
symbﬁ
));

1307 
sub‚
->
debugöfo
 = 
	`jv_obje˘_£t
(sub‚->debugöfo, 
	`jv_°rög
("∑øms"), 
∑øms
);

1308 
îr‹s
 +
	`compûe
(
sub‚
, 
cuº
->sub‚, 
lf
, 
¨gs
, 
ív
);

1309 
cuº
->
sub‚
 = 
	`gí_no›
();

1313 
bc
->
subfun˘i⁄s
 = 0;

1315 
uöt16_t
* 
code
 = 
	`jv_mem_ˇŒoc
((uöt16_t), 
bc
->
codñí
);

1316 
bc
->
code
 = code;

1317 
pos
 = 0;

1318 
jv
 
c⁄°™t_poﬁ
 = 
	`jv_¨øy
();

1319 
maxv¨
 = -1;

1320 i‡(!
îr‹s
Ë
ö°
* 
cuº
 = 
b
.
fú°
; cuº; cuº = cuº->
√xt
) {

1321 c⁄° 
›code_des¸ùti⁄
* 
›
 = 
	`›code_des¸ibe
(
cuº
->op);

1322 i‡(
›
->
Àngth
 == 0)

1324 
code
[
pos
++] = 
cuº
->
›
;

1325 
	`as£π
(
cuº
->
›
 !
CLOSURE_REF
 && cuº->› !
CLOSURE_PARAM
);

1326 i‡(
cuº
->
›
 =
CALL_BUILTIN
) {

1327 
	`as£π
(
cuº
->
bound_by
->
›
 =
CLOSURE_CREATE_C
);

1328 
	`as£π
(!
cuº
->
¨gli°
.
fú°
);

1329 
code
[
pos
++] = (
uöt16_t
)
cuº
->
imm
.
ötvÆ
;

1330 
code
[
pos
++] = 
cuº
->
bound_by
->
imm
.
ötvÆ
;

1331 } i‡(
cuº
->
›
 =
CALL_JQ
) {

1332 
	`as£π
(
cuº
->
bound_by
->
›
 =
CLOSURE_CREATE
 ||

1333 
cuº
->
bound_by
->
›
 =
CLOSURE_PARAM
);

1334 
code
[
pos
++] = (
uöt16_t
)
cuº
->
imm
.
ötvÆ
;

1335 
code
[
pos
++] = 
	`√°ög_Àvñ
(
bc
, 
cuº
->
bound_by
);

1336 
code
[
pos
++] = 
cuº
->
bound_by
->
imm
.
ötvÆ
 |

1337 (
cuº
->
bound_by
->
›
 =
CLOSURE_CREATE
 ? 
ARG_NEWCLOSURE
 : 0);

1338 
ö°
* 
¨g
 = 
cuº
->
¨gli°
.
fú°
;árg;árg =árg->
√xt
) {

1339 
	`as£π
(
¨g
->
›
 =
CLOSURE_REF
 &&árg->
bound_by
->› =
CLOSURE_CREATE
);

1340 
code
[
pos
++] = 
	`√°ög_Àvñ
(
bc
, 
¨g
->
bound_by
);

1341 
code
[
pos
++] = 
¨g
->
bound_by
->
imm
.
ötvÆ
 | 
ARG_NEWCLOSURE
;

1343 } i‡((
›
->
Êags
 & 
OP_HAS_CONSTANT
Ë&& (›->Êag†& 
OP_HAS_VARIABLE
)) {

1345 
code
[
pos
++] = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
c⁄°™t_poﬁ
));

1346 
c⁄°™t_poﬁ
 = 
	`jv_¨øy_≠≥nd
(c⁄°™t_poﬁ, 
	`jv_c›y
(
cuº
->
imm
.
c⁄°™t
));

1347 
code
[
pos
++] = 
	`√°ög_Àvñ
(
bc
, 
cuº
->
bound_by
);

1348 
uöt16_t
 
v¨
 = (uöt16_t)
cuº
->
bound_by
->
imm
.
ötvÆ
;

1349 
code
[
pos
++] = 
v¨
;

1350 } i‡(
›
->
Êags
 & 
OP_HAS_CONSTANT
) {

1351 
code
[
pos
++] = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
c⁄°™t_poﬁ
));

1352 
c⁄°™t_poﬁ
 = 
	`jv_¨øy_≠≥nd
(c⁄°™t_poﬁ, 
	`jv_c›y
(
cuº
->
imm
.
c⁄°™t
));

1353 } i‡(
›
->
Êags
 & 
OP_HAS_VARIABLE
) {

1354 
code
[
pos
++] = 
	`√°ög_Àvñ
(
bc
, 
cuº
->
bound_by
);

1355 
uöt16_t
 
v¨
 = (uöt16_t)
cuº
->
bound_by
->
imm
.
ötvÆ
;

1356 
code
[
pos
++] = 
v¨
;

1357 i‡(
v¨
 > 
maxv¨
) maxvar = var;

1358 } i‡(
›
->
Êags
 & 
OP_HAS_BRANCH
) {

1359 
	`as£π
(
cuº
->
imm
.
èrgë
->
byãcode_pos
 != -1);

1360 
	`as£π
(
cuº
->
imm
.
èrgë
->
byãcode_pos
 > 
pos
);

1361 
code
[
pos
] = 
cuº
->
imm
.
èrgë
->
byãcode_pos
 - (pos + 1);

1362 
pos
++;

1363 } i‡(
›
->
Àngth
 > 1) {

1364 
	`as£π
(0 && "codegenÇot implemented forÅhis operation");

1367 
bc
->
c⁄°™ts
 = 
c⁄°™t_poﬁ
;

1368 
bc
->
∆oˇls
 = 
maxv¨
 + 2;

1369 
	`block_‰ì
(
b
);

1370  
îr‹s
;

1371 
	}
}

1373 
	$block_compûe
(
block
 
b
, 
byãcode
** 
out
, 
locfûe
* 
lf
, 
jv
 
¨gs
) {

1374 
byãcode
* 
bc
 = 
	`jv_mem_Æloc
((bytecode));

1375 
bc
->
∑ª¡
 = 0;

1376 
bc
->
n˛osuªs
 = 0;

1377 
bc
->
globÆs
 = 
	`jv_mem_Æloc
((
symbﬁ_èbÀ
));

1378 
ncfunc
 = 
	`cou¡_cfun˘i⁄s
(
b
);

1379 
bc
->
globÆs
->
ncfun˘i⁄s
 = 0;

1380 
bc
->
globÆs
->
cfun˘i⁄s
 = 
	`jv_mem_ˇŒoc
((
cfun˘i⁄
), 
ncfunc
);

1381 
bc
->
globÆs
->
cfunc_«mes
 = 
	`jv_¨øy
();

1382 
bc
->
debugöfo
 = 
	`jv_obje˘_£t
(
	`jv_obje˘
(), 
	`jv_°rög
("«me"), 
	`jv_nuŒ
());

1383 
jv
 
ív
 = 
	`jv_övÆid
();

1384 
√º‹s
 = 
	`compûe
(
bc
, 
b
, 
lf
, 
¨gs
, &
ív
);

1385 
	`jv_‰ì
(
¨gs
);

1386 
	`jv_‰ì
(
ív
);

1387 
	`as£π
(
bc
->
globÆs
->
ncfun˘i⁄s
 =
ncfunc
);

1388 i‡(
√º‹s
 > 0) {

1389 
	`byãcode_‰ì
(
bc
);

1390 *
out
 = 0;

1392 *
out
 = 
bc
;

1394  
√º‹s
;

1395 
	}
}

1397 
	$block_‰ì
(
block
 
b
) {

1398 
ö°
* 
√xt
;

1399 
ö°
* 
cuº
 = 
b
.
fú°
; cuº; cuº = 
√xt
) {

1400 
√xt
 = 
cuº
->next;

1401 
	`ö°_‰ì
(
cuº
);

1403 
	}
}

	@src/compile.h

1 #i‚de‡
COMPILE_H


2 
	#COMPILE_H


	)

3 
	~<°döt.h
>

4 
	~"jv.h
"

5 
	~"byãcode.h
"

6 
	~"locfûe.h
"

8 
	gö°
;

9 
ö°
 
	tö°
;

12 
	sblock
 {

13 
ö°
* 
	mfú°
;

14 
ö°
* 
	mœ°
;

15 } 
	tblock
;

17 
block
 
gí_loˇti⁄
(
loˇti⁄
, 
locfûe
*, block);

19 
block
 
gí_no›
();

20 
block_is_no›
(
block
 
b
);

21 
block
 
gí_›_sim∂e
(
›code
 
›
);

22 
block
 
gí_c⁄°
(
jv
 
c⁄°™t
);

23 
block
 
gí_c⁄°_globÆ
(
jv
 
c⁄°™t
, c⁄° *
«me
);

24 
block_is_c⁄°
(
block
 
b
);

25 
block_is_c⁄°_öf
(
block
 
b
);

26 
jv_köd
 
block_c⁄°_köd
(
block
 
b
);

27 
jv
 
block_c⁄°
(
block
 
b
);

28 
block
 
gí_›_èrgë
(
›code
 
›
, block 
èrgë
);

29 
block
 
gí_›_unbound
(
›code
 
›
, c⁄° * 
«me
);

30 
block
 
gí_›_bound
(
›code
 
›
, block 
bödî
);

31 
block
 
gí_›_v¨_‰esh
(
›code
 
›
, c⁄° * 
«me
);

32 
block
 
gí_›_pushk_undî
(
jv
 
c⁄°™t
);

34 
block
 
gí_moduÀ
(block 
mëad©a
);

35 
jv
 
block_moduÀ_mëa
(
block
 
b
);

36 
block
 
gí_imp‹t
(c⁄° * 
«me
, c⁄° *
as
, 
is_d©a
);

37 
block
 
gí_imp‹t_mëa
(block 
imp‹t
, block 
mëad©a
);

38 
block
 
gí_fun˘i⁄
(c⁄° * 
«me
, block 
f‹mÆs
, block 
body
);

39 
block
 
gí_∑øm_ªguœr
(c⁄° * 
«me
);

40 
block
 
gí_∑øm
(c⁄° * 
«me
);

41 
block
 
gí_œmbda
(block 
body
);

42 
block
 
gí_ˇŒ
(c⁄° * 
«me
, block 
body
);

43 
block
 
gí_subexp
(block 
a
);

44 
block
 
gí_bŸh
(block 
a
, block 
b
);

45 
block
 
gí_c⁄°_obje˘
(block 
ex¥
);

46 
block
 
gí_cﬁÀ˘
(block 
ex¥
);

47 
block
 
gí_ªdu˚
(block 
sour˚
, block 
m©chî
, block 
öô
, block 
body
);

48 
block
 
gí_f‹óch
(block 
sour˚
, block 
m©chî
, block 
öô
, block 
upd©e
, block 
exåa˘
);

49 
block
 
gí_deföed‹
(block 
a
, block 
b
);

50 
block
 
gí_c⁄dbønch
(block 
i·rue
, block 
ifÁl£
);

51 
block
 
gí_™d
(block 
a
, block 
b
);

52 
block
 
gí_‹
(block 
a
, block 
b
);

53 
block
 
gí_di˘∑ú
(block 
k
, block 
v
);

55 
block
 
gí_v¨_bödög
(block 
v¨
, c⁄° * 
«me
, block 
body
);

56 
block
 
gí_¨øy_m©chî
(block 
À·
, block 
cuº
);

57 
block
 
gí_obje˘_m©chî
(block 
«me
, block 
cuº
);

58 
block
 
gí_de°ru˘uª
(block 
v¨
, block 
m©chî
, block 
body
);

59 
block
 
gí_de°ru˘uª_Æt
(block 
m©chî
);

61 
block
 
gí_c⁄d
(block 
c⁄d
, block 
i·rue
, block 
ifÁl£
);

62 
block
 
gí_åy_h™dÀr
(block 
h™dÀr
);

63 
block
 
gí_åy
(block 
exp
, block 
h™dÀr
);

64 
block
 
gí_œbñ
(c⁄° *
œbñ
, block 
exp
);

66 
block
 
gí_cbödög
(c⁄° 
cfun˘i⁄
* 
fun˘i⁄s
, 
nfun˘i⁄s
, block 
b
);

68 
block_≠≥nd
(
block
* 
b
, block 
b2
);

69 
block
 
block_joö
(block 
a
, block 
b
);

70 
block_has_⁄ly_bödîs_™d_imp‹ts
(
block
, 
bödÊags
);

71 
block_has_⁄ly_bödîs
(
block
, 
bödÊags
);

72 
block_has_maö
(
block
);

73 
block_is_funcdef
(
block
 
b
);

74 
block_is_sögÀ
(
block
 
b
);

75 
block
 
block_böd_libøry
(block 
bödî
, block 
body
, 
bödÊags
, c⁄° * 
lib«me
);

76 
block
 
block_böd_ª„ªn˚d
(block 
bödî
, block 
body
, 
bödÊags
);

77 
block
 
block_böd_£lf
(block 
bödî
, 
bödÊags
);

78 
block
 
block_dr›_uƒe„ªn˚d
(block 
body
);

80 
jv
 
block_èke_imp‹ts
(
block
* 
body
);

81 
jv
 
block_li°_funcs
(
block
 
body
, 
omô_undîsc‹es
);

83 
block_compûe
(
block
, 
byãcode
**, 
locfûe
*, 
jv
);

85 
block_‰ì
(
block
);

92 
	#BLOCK_1
(
b1
Ë(b1)

	)

93 
	#BLOCK_2
(
b1
,
b2
Ë(
	`block_joö
((b1),(b2)))

	)

94 
	#BLOCK_3
(
b1
,
b2
,
b3
Ë(
	`block_joö
(
	`BLOCK_2
(b1,b2),(b3)))

	)

95 
	#BLOCK_4
(
b1
,
b2
,
b3
,
b4
Ë(
	`block_joö
(
	`BLOCK_3
(b1,b2,b3),(b4)))

	)

96 
	#BLOCK_5
(
b1
,
b2
,
b3
,
b4
,
b5
Ë(
	`block_joö
(
	`BLOCK_4
(b1,b2,b3,b4),(b5)))

	)

97 
	#BLOCK_6
(
b1
,
b2
,
b3
,
b4
,
b5
,
b6
Ë(
	`block_joö
(
	`BLOCK_5
(b1,b2,b3,b4,b5),(b6)))

	)

98 
	#BLOCK_7
(
b1
,
b2
,
b3
,
b4
,
b5
,
b6
,
b7
Ë(
	`block_joö
(
	`BLOCK_6
(b1,b2,b3,b4,b5,b6),(b7)))

	)

99 
	#BLOCK_8
(
b1
,
b2
,
b3
,
b4
,
b5
,
b6
,
b7
,
b8
Ë(
	`block_joö
(
	`BLOCK_7
(b1,b2,b3,b4,b5,b6,b7),(b8)))

	)

101 
	#BLOCK_IDX
(
_1
,
_2
,
_3
,
_4
,
_5
,
_6
,
_7
,
_8
,
NAME
,...Ë
	)
NAME

102 
	#BLOCK
(...) \

103 
	`BLOCK_IDX
(
__VA_ARGS__
, 
BLOCK_8
, 
BLOCK_7
, 
BLOCK_6
, 
BLOCK_5
, 
BLOCK_4
, 
BLOCK_3
, 
BLOCK_2
, 
BLOCK_1
)(__VA_ARGS__)

	)

	@src/decNumber/decBasic.c

36 #i‡!
deföed
(
QUAD
)

37 #îr‹ 
decBasic
.
c
 
mu°
 
be
 
ö˛uded
 
a·î
 
decComm⁄
.c

39 #i‡
SINGLE


40 #îr‹ 
Routöes
 
ö
 
decBasic
.
c
 
¨e
 
decDoubÀ
 
™d
 
decQuad
 
⁄ly


44 
	#DIVIDE
 0x80000000

45 
	#REMAINDER
 0x40000000

46 
	#DIVIDEINT
 0x20000000

47 
	#REMNEAR
 0x10000000

48 

	)

50 
decFlﬂt
 *
decDivide
(decFloat *, const decFloat *,

51 c⁄° 
decFlﬂt
 *, 
decC⁄ãxt
 *, 
uI¡
);

52 
decFlﬂt
 *
decC™⁄iˇl
(decFloat *, const decFloat *);

53 
decFöôeMu…ùly
(
bcdnum
 *, 
uByã
 *, c⁄° 
decFlﬂt
 *,

54 c⁄° 
decFlﬂt
 *);

55 
decFlﬂt
 *
decInföôy
(decFloat *, const decFloat *);

56 
decFlﬂt
 *
decInvÆid
(decFlﬂà*, 
decC⁄ãxt
 *);

57 
decFlﬂt
 *
decNaNs
(decFloat *, const decFloat *, const decFloat *,

58 
decC⁄ãxt
 *);

59 
I¡
 
decNumCom∑ª
(c⁄° 
decFlﬂt
 *, c⁄° decFlﬂà*, 
Fœg
);

60 
decFlﬂt
 *
decToI¡egøl
(decFlﬂà*, c⁄° decFlﬂà*, 
decC⁄ãxt
 *,

61 
roundög
, 
Fœg
);

62 
uI¡
 
decToI¡32
(c⁄° 
decFlﬂt
 *, 
decC⁄ãxt
 *, 
roundög
,

63 
Fœg
, Flag);

75 
decFlﬂt
 * 
	$decC™⁄iˇl
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
) {

76 
uI¡
 
ícode
, 
¥ecode
, 
dpd
;

77 
uI¡
 
öw‹d
, 
uoff
, 
ˇn⁄
;

78 
I¡
 
n
;

79 i‡(
df
!=
ªsu…
) *result=*df;

80 i‡(
	`DFISSPECIAL
(
ªsu…
)) {

81 i‡(
	`DFISINF
(
ªsu…
)Ë 
	`decInföôy
‘esu…, 
df
);

83 
	`DFWORD
(
ªsu…
, 0)&=~
ECONNANMASK
;

84 i‡(
	`DFISCCZERO
(
df
)Ë 
ªsu…
;

89 #i‡
DOUBLE


90 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

91 
uI¡
 
souæo
=
	`DFWORD
(
df
, 1);

92 i‡(
	`CANONDPDOFF
(
sourhi
, 8)

93 && 
	`CANONDPDTWO
(
sourhi
, 
souæo
, 30)

94 && 
	`CANONDPDOFF
(
souæo
, 20)

95 && 
	`CANONDPDOFF
(
souæo
, 10)

96 && 
	`CANONDPDOFF
(
souæo
, 0)Ë 
ªsu…
;

97 #ñi‡
QUAD


98 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

99 
uI¡
 
sourmh
=
	`DFWORD
(
df
, 1);

100 
uI¡
 
sourml
=
	`DFWORD
(
df
, 2);

101 
uI¡
 
souæo
=
	`DFWORD
(
df
, 3);

102 i‡(
	`CANONDPDOFF
(
sourhi
, 4)

103 && 
	`CANONDPDTWO
(
sourhi
, 
sourmh
, 26)

104 && 
	`CANONDPDOFF
(
sourmh
, 16)

105 && 
	`CANONDPDOFF
(
sourmh
, 6)

106 && 
	`CANONDPDTWO
(
sourmh
, 
sourml
, 28)

107 && 
	`CANONDPDOFF
(
sourml
, 18)

108 && 
	`CANONDPDOFF
(
sourml
, 8)

109 && 
	`CANONDPDTWO
(
sourml
, 
souæo
, 30)

110 && 
	`CANONDPDOFF
(
souæo
, 20)

111 && 
	`CANONDPDOFF
(
souæo
, 10)

112 && 
	`CANONDPDOFF
(
souæo
, 0)Ë 
ªsu…
;

117 
öw‹d
=
DECWORDS
-1;

118 
uoff
=0;

119 
ícode
=
	`DFWORD
(
ªsu…
, 
öw‹d
);

120 
n
=
DECLETS
-1;Ç>=0;Ç--) {

121 
dpd
=
ícode
>>
uoff
;

122 
uoff
+=10;

123 i‡(
uoff
>32) {

124 
öw‹d
--;

125 
ícode
=
	`DFWORD
(
ªsu…
, 
öw‹d
);

126 
uoff
-=32;

127 
dpd
|=
ícode
<<(10-
uoff
);

129 
dpd
&=0x3ff;

130 i‡(
dpd
<0x16e) ;

131 
ˇn⁄
=
BIN2DPD
[
DPD2BIN
[
dpd
]];

132 i‡(
ˇn⁄
==
dpd
) ;

134 i‡(
uoff
>=10) {

135 
ícode
&=~(0x3ff<<(
uoff
-10));

136 
ícode
|=
ˇn⁄
<<(
uoff
-10);

137 
	`DFWORD
(
ªsu…
, 
öw‹d
)=
ícode
;

141 
¥ecode
=
	`DFWORD
(
ªsu…
, 
öw‹d
+1);

142 
¥ecode
&=0xffffffff>>(10-
uoff
);

143 
	`DFWORD
(
ªsu…
, 
öw‹d
+1)=
¥ecode
|(
ˇn⁄
<<(32-(10-
uoff
)));

144 
ícode
&=0xffffffff<<
uoff
;

145 
ícode
|=
ˇn⁄
>>(10-
uoff
);

146 
	`DFWORD
(
ªsu…
, 
öw‹d
)=
ícode
;

148  
ªsu…
;

149 
	}
}

163 
	#DIVCOUNT
 0

164 
	#DIVBASE
 ((
uI¡
)
BILLION
)

165 
	#DIVOPLEN
 
DECPMAX9


166 
	#DIVACCLEN
 (
DIVOPLEN
*3)

167 
decFlﬂt
 * 
	`decDivide
(decFlﬂà*
ªsu…
, c⁄° decFlﬂà*
dÊ
,

	)

168 c⁄° 
decFlﬂt
 *
	gd‰
, 
decC⁄ãxt
 *
	g£t
, 
uI¡
 
	g›
) {

169 
decFlﬂt
 
	gquŸõ¡
;

170 
bcdnum
 
	gnum
;

171 
uI¡
 
	gacc
[
DIVACCLEN
];

172 
uI¡
 
	gdiv
[
DIVOPLEN
];

173 
uI¡
 
	gquo
[
DIVOPLEN
+1];

174 
uByã
 
	gbcdacc
[(
DIVOPLEN
+1)*9+2];

175 
uI¡
 *
	gmsua
, *
	gmsud
, *
	gmsuq
;

176 
I¡
 
	gdivunôs
, 
	gaccunôs
;

177 
I¡
 
	gquodigôs
;

178 
uI¡
 *
	glsua
, *
	glsuq
;

179 
I¡
 
	gÀngth
, 
	gmu…ùlõr
;

180 
uI¡
 
	gˇºy
, 
	gsign
;

181 
uI¡
 *
	gua
, *
	gud
, *
	guq
;

182 
uByã
 *
	gub
;

183 
uI¡
 
	guiw‹k
;

184 
uI¡
 
	gdivt›
;

185 #i‡
DIVCOUNT


186 
uI¡
 
	gmaxcou¡
=0;

187 
uI¡
 
	gdivcou¡
=0;

191 
	gnum
.
	gsign
=(
DFWORD
(
dÊ
, 0)^DFWORD(
d‰
, 0)Ë& 
	gDECFLOAT_Sign
;

193 i‡(
DFISSPECIAL
(
dÊ
Ë|| DFISSPECIAL(
d‰
)) {

195 i‡(
DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

197 i‡(
DFISINF
(
dÊ
)) {

198 i‡(
DFISINF
(
d‰
)Ë 
decInvÆid
(
ªsu…
, 
£t
);

199 i‡(
	g›
&(
	gREMAINDER
|
	gREMNEAR
)Ë 
decInvÆid
(
ªsu…
, 
£t
);

201 
DFWORD
(
ªsu…
, 0)=
num
.
sign
;

202  
decInföôy
(
ªsu…
,Ñesult);

205 i‡(
	g›
&(
	gREMAINDER
|
	gREMNEAR
)Ë 
decC™⁄iˇl
(
ªsu…
, 
dÊ
);

208 
decFlﬂtZîo
(
ªsu…
);

209 i‡(
	g›
==
DIVIDEINT
Ë
DFWORD
(
ªsu…
, 0)|=
num
.
sign
;

210 
DFWORD
(
ªsu…
, 0)=
num
.
sign
;

211  
	gªsu…
;

214 i‡(
DFISZERO
(
d‰
)) {

215 i‡(
DFISZERO
(
dÊ
)) {

216 
decFlﬂtZîo
(
ªsu…
);

217 
DFWORD
(
ªsu…
, 0)=
DECFLOAT_qNaN
;

218 
	g£t
->
	g°©us
|=
DEC_Divisi⁄_undeföed
;

219  
	gªsu…
;

221 i‡(
	g›
&(
	gREMAINDER
|
	gREMNEAR
)Ë 
decInvÆid
(
ªsu…
, 
£t
);

222 
	g£t
->
	g°©us
|=
DEC_Divisi⁄_by_zîo
;

223 
DFWORD
(
ªsu…
, 0)=
num
.
sign
;

224  
decInföôy
(
ªsu…
,Ñesult);

226 
	gnum
.
	gexp⁄ít
=
GETEXPUN
(
dÊ
)-GETEXPUN(
d‰
);

227 i‡(
DFISZERO
(
dÊ
)) {

230 i‡(
	g›
&
	gDIVIDEINT
) {

231 
decFlﬂtZîo
(
ªsu…
);

232 
DFWORD
(
ªsu…
, 0)|=
num
.
sign
;

233  
	gªsu…
;

235 i‡(!(
	g›
&
	gDIVIDE
)) {

237 
	gnum
.
	gexp⁄ít
=
MINI
(
GETEXPUN
(
dÊ
), GETEXPUN(
d‰
));

239 
	gnum
.
	gsign
=
DFWORD
(
dÊ
, 0)&
	gDECFLOAT_Sign
;

241 
	gbcdacc
[0]=0;

242 
	gnum
.
	gmsd
=
bcdacc
;

243 
	gnum
.
	glsd
=
bcdacc
;

244  
decFöÆize
(
ªsu…
, &
num
, 
£t
);

256 
GETCOEFFBILL
(
dÊ
, 
acc
+
DIVACCLEN
-
DIVOPLEN
);

257 
GETCOEFFBILL
(
d‰
, 
div
);

259 
	gacc
[0]=0;

260 
	gacc
[1]=0;

261 
	gacc
[2]=0;

262 
	gacc
[3]=0;

263 #i‡
DOUBLE


264 #i‡
DIVOPLEN
!=2

265 #îr‹ 
U√x≥˘ed
 
DoubÀ
 
DIVOPLEN


267 #ñi‡
QUAD


268 
	gacc
[4]=0;

269 
	gacc
[5]=0;

270 
	gacc
[6]=0;

271 
	gacc
[7]=0;

272 #i‡
DIVOPLEN
!=4

273 #îr‹ 
U√x≥˘ed
 
Quad
 
DIVOPLEN


278 
	gmsua
=
acc
+
DIVACCLEN
-1;

279 
	gmsuq
=
quo
+
DIVOPLEN
;

281 
	gmsud
=
div
+
DIVOPLEN
-1; *msud==0;) msud--;

286 
	gdivunôs
=(
I¡
)(
msud
-
div
+1);

287 
	glsua
=
msua
-
divunôs
+1;

288 
	glsuq
=
msuq
;

294 
	gdivt›
=*
msud
<<2;

295 i‡(
	gdivunôs
>1) {

296 
uI¡
 *
	gum
=
msud
-1;

297 
uI¡
 
	gd
=*
um
;

298 i‡(
	gd
>=750000000Ë{
divt›
+=3; d-=750000000;}

299 i‡(
	gd
>=500000000Ë{
divt›
+=2; d-=500000000;}

300 i‡(
	gd
>=250000000Ë{
divt›
++; d-=250000000;}

301 i‡(
	gd
Ë
	gdivt›
++;

302 
	gum
--; um>=
div
; um--) if (*um) {

303 
	gdivt›
++;

308 #i‡
DECTRACE


309 {
I¡
 
	gi
;

310 
¥ötf
("----- div=");

311 
	gi
=
divunôs
-1; i>=0; i--Ë
¥ötf
("%09ld ", (
LI
)
div
[
i
]);

312 
¥ötf
("\n");}

317 
	gquodigôs
=0;

318 ;; 
	glsua
--) {

319 #i‡
DECCHECK


320 i‡(
	glsua
<
	gacc
) {

321 
¥ötf
("Acc underrun...\n");

325 #i‡
DECTRACE


326 
¥ötf
("Ouãr: quodigôs=%ldácc=", (
LI
)
quodigôs
);

327 
	gua
=
msua
; ua>=
lsua
; ua--Ë
¥ötf
("%09ld ", (
LI
)*
ua
);

328 
¥ötf
("\n");

330 *
	glsuq
=0;

334 ; *
	gmsua
==0 && 
msua
>=
lsua
;) msua--;

335 
	gaccunôs
=(
I¡
)(
msua
-
lsua
+1);

339 i‡(
	gaccunôs
<
	gdivunôs
) {

340 i‡(
	gaccunôs
==0Ë
msua
++;

351 i‡(
	gaccunôs
==
divunôs
) {

357 
ud
=
msud
, 
	gua
=
msua
; 
	gud
>
	gdiv
; ud--, ua--Ëi‡(*ud!=*
ua
) ;

359 i‡(*
	gud
>*
	gua
) ;

360 i‡(*
	gud
==*
ua
) {

361 *
lsuq
+=1;

362 
	gmsua
=
lsua
;

363 *
	gmsua
=0;

371 
	#DIVLO
 1000000U

	)

372 
	#DIVHI
 (
DIVBASE
/
DIVLO
)

	)

373 #i‡
DECUSE64


374 i‡(
	gdivunôs
>1) {

378 
uL⁄g
 
	gmul
=(uL⁄g)*
msua
 * 
DIVBASE
 + *(msua-1);

379 
uL⁄g
 
	gdiv
=(uL⁄g)*
msud
 * 
DIVBASE
 + *(msud-1);

380 #i‡
QUAD


381 i‡(
	gdivunôs
>2Ë
	gdiv
++;

383 
	gmul
/=
div
;

384 
	gmu…ùlõr
=(
I¡
)
mul
;

386 
	gmu…ùlõr
=*
msua
/(*
msud
);

388 i‡(
	gdivunôs
>1 && *
	gmsua
<
	gDIVLO
 && *
	gmsud
<DIVLO) {

389 
	gmu…ùlõr
=(*
msua
*
DIVHI
 + *(msua-1)/
DIVLO
)

390 /(*
msud
*
DIVHI
 + *(msud-1)/
DIVLO
 +1);

392 
	gmu…ùlõr
=(*
msua
<<2)/
divt›
;

397 #i‡
DECUSE64


398 
uL⁄g
 
	gmul
;

400 i‡(
	gdivunôs
>1 && *
	gmsua
<
	gDIVLO
 && *
	gmsud
<DIVLO) {

401 
	gmul
=((
uL⁄g
)*
msua
 * 
DIVHI
 * 
DIVBASE
) + *(msua-1) * DIVHI

402 + *(
msua
-2)/
DIVLO
;

403 
	gmul
/=(*
msud
*
DIVHI
 + *(msud-1)/
DIVLO
 +1);

405 i‡(
	gdivunôs
==1) {

406 
mul
=(
uL⁄g
)*
msua
 * 
DIVBASE
 + *(msua-1);

407 
	gmul
/=*
msud
;

410 
	gmul
=(
uL⁄g
)(*
msua
Ë* (
uI¡
)(
DIVBASE
<<2)

411 + (*(
msua
-1)<<2);

412 
	gmul
/=
divt›
;

414 
	gmu…ùlõr
=(
I¡
)
mul
;

416 
	gmu…ùlõr
=*
msua
 * ((
DIVBASE
<<2)/
divt›
);

419 i‡(
	gmu…ùlõr
==0Ë
mu…ùlõr
=1;

420 *
	glsuq
+=
mu…ùlõr
;

422 #i‡
DIVCOUNT


424 
	gdivcou¡
++;

430 
	#DIVMAGIC
 2305843009U

431 
	#DIVSHIFTA
 29

	)

432 
	#DIVSHIFTB
 32

	)

433 
	gˇºy
=0;

434 
	gud
=
div
, 
	gua
=
lsua
; ud<=
msud
; ud++, ua++) {

435 
uI¡
 
	glo
, 
	gh›
;

436 #i‡
DECUSE64


437 
uL⁄g
 
	gsub
=(uL⁄g)
mu…ùlõr
*(*
ud
)+
ˇºy
;

438 i‡(
	gsub
<
	gDIVBASE
) {

439 
	gˇºy
=0;

440 
	glo
=(
uI¡
)
sub
;

443 
	gh›
=(
uI¡
)(
sub
>>
DIVSHIFTA
);

444 
	gˇºy
=(
uI¡
)(((
uL⁄g
)
h›
*
DIVMAGIC
)>>
DIVSHIFTB
);

447 
	glo
=(
uI¡
)
sub
;

448 
	glo
-=
ˇºy
*
DIVBASE
;

449 i‡(
	glo
>=
DIVBASE
) {

450 
lo
-=
DIVBASE
;

451 
	gˇºy
++;

455 
uI¡
 
	ghi
;

457 
LONGMUL32HI
(
hi
, *
ud
, 
mu…ùlõr
);

458 
	glo
=
mu…ùlõr
*(*
ud
);

459 
	glo
+=
ˇºy
;

460 
	gˇºy
=
hi
+(
lo
<
ˇºy
);

461 i‡(
	gˇºy
 || 
	glo
>=
DIVBASE
) {

462 
h›
=(
ˇºy
<<3)+(
lo
>>
DIVSHIFTA
);

463 
LONGMUL32HI
(
ˇºy
, 
h›
, 
DIVMAGIC
);

468 
	glo
-=(
ˇºy
*
DIVBASE
);

470 i‡(
	glo
>=
DIVBASE
) {

471 
lo
-=
DIVBASE
;

472 
	gˇºy
++;

476 i‡(
	glo
>*
	gua
) {

477 *
	gua
+=
DIVBASE
;

478 
	gˇºy
++;

480 *
	gua
-=
lo
;

482 i‡(
	gˇºy
Ë*
	gua
-=
ˇºy
;

488 #i‡
DECTRACE


489 i‡(*
	glsuq
 || 
	gquodigôs
Ë
¥ötf
("*lsuq=%09ld\n", (
LI
)*
lsuq
);

491 i‡(
	gquodigôs
) {

492 
	gquodigôs
+=9;

493 
	glsuq
--;

494 i‡(
	gquodigôs
>
	gDECPMAX
+1) ;

496 i‡(*
	glsuq
) {

497 c⁄° 
uI¡
 *
	gpow
;

498 
	gpow
=
DECPOWERS
; *
	glsuq
>=*
pow
;Öow++Ë
	gquodigôs
++;

499 
	glsuq
--;

503 i‡(*
	gmsua
!=0) ;

506 i‡(
	glsua
>
	gacc
+
	gDIVACCLEN
-
	gDIVOPLEN
) ;

507 ; 
	gmsua
>
	glsua
 && *msua==0;) msua--;

508 i‡(*
	gmsua
==0 && 
msua
==
lsua
) ;

515 
	glsuq
++;

516 i‡(*
	gmsua
Ë*
	glsuq
|=1;

520 #i‡
DECTRACE


521 
¥ötf
("DivQuo:");

522 
	guq
=
msuq
; uq>=
lsuq
; uq--Ë
¥ötf
(" %09ld", (
LI
)*
uq
);

523 
¥ötf
("\n");

529 
	guq
=
msuq
, 
	gub
=
bcdacc
+1; uq>=
lsuq
; uq--, ub+=9) {

530 
uI¡
 
t›
, 
mid
, 
ªm
;

531 i‡(*
	guq
==0) {

532 
UBFROMUI
(
ub
, 0);

533 
UBFROMUI
(
ub
+4, 0);

534 *(
	gub
+8)=0;

539 
	#div•lô9
 1000000

540 
	#div•lô6
 1000

543 
t›
=*
uq
/
div•lô9
;

	)

544 
	gªm
=*
uq
%
div•lô9
;

545 
	gmid
=
ªm
/
div•lô6
;

546 
	gªm
=
ªm
%
div•lô6
;

548 
UBFROMUI
(
ub
, 
UBTOUI
(&
BIN2BCD8
[
t›
*4]));

549 
UBFROMUI
(
ub
+3, 
UBTOUI
(&
BIN2BCD8
[
mid
*4]));

550 
UBFROMUI
(
ub
+6, 
UBTOUI
(&
BIN2BCD8
[
ªm
*4]));

552 
	gub
--;

556 
	gnum
.
	gmsd
=
bcdacc
+1+(
msuq
-
lsuq
+1)*9-
quodigôs
;

557 
	gnum
.
	glsd
=
ub
;

560 i‡(
	glsua
<
	gacc
+
	gDIVACCLEN
-
	gDIVOPLEN
) {

561 
	gnum
.
	gexp⁄ít
-=(
I¡
)((
acc
+
DIVACCLEN
-
DIVOPLEN
-
lsua
)*9);

564 i‡(*
	gmsua
==0) {

565 ; *
	gub
==0;) ub--;

566 
	gnum
.
	gexp⁄ít
+=(
I¡
)(
num
.
lsd
-
ub
);

567 
	gnum
.
	glsd
=
ub
;

571 #i‡
DIVCOUNT


572 i‡(
	gdivcou¡
>
	gmaxcou¡
) {

573 
	gmaxcou¡
=
divcou¡
;

574 
¥ötf
("DivNewMaxCou¡: %ld\n", (
LI
)
maxcou¡
);

578 i‡(
	g›
&
	gDIVIDE
Ë 
decFöÆize
(
ªsu…
, &
num
, 
£t
);

588 
	gÀngth
=(
I¡
)(
num
.
lsd
-num.
msd
+1);

591 i‡(
	gÀngth
+
	gnum
.
	gexp⁄ít
>
	gDECPMAX
) {

592 
decFlﬂtZîo
(
ªsu…
);

593 
DFWORD
(
ªsu…
, 0)=
DECFLOAT_qNaN
;

594 
	g£t
->
	g°©us
|=
DEC_Divisi⁄_impossibÀ
;

595  
	gªsu…
;

598 i‡(
	gnum
.
	gexp⁄ít
>=0) {

599 
ub
=
num
.
lsd
+1; 
	gub
<Úum.lsd+num.
exp⁄ít
; ub++) *ub=0;

600 
	gnum
.
	glsd
+=
num
.
exp⁄ít
;

603 
I¡
 
	gdr›
=-
num
.
exp⁄ít
;

604 i‡(!(
	g›
&
	gREMNEAR
)) {

605 
	gnum
.
	glsd
-=
dr›
;

606 i‡(
	gnum
.
	glsd
<num.
	gmsd
) {

607 
	gnum
.
	glsd
=
num
.
msd
;

608 *
	gnum
.
	glsd
=0;

614 
uByã
 *
	ground©
;

615 
uByã
 
	gªround
;

616 *(
	gnum
.
	gmsd
-1)=0;

617 i‡(
	gdr›
<
	gÀngth
Ë
	ground©
=
num
.
lsd
-
dr›
+1;

618 i‡(
	gdr›
==
Àngth
Ë
round©
=
num
.
msd
;

619 
	ground©
=
num
.
msd
-1;

620 
	gªround
=*
round©
;

621 
	gub
=
round©
+1; ub<=
num
.
lsd
; ub++) {

622 i‡(*
	gub
!=0) {

623 
ªround
=
DECSTICKYTAB
[reround];

627 i‡(
	ground©
>
	gnum
.
	gmsd
Ënum.
	glsd
=
round©
-1;

629 
	gnum
.
	gmsd
--;

630 
	gnum
.
	glsd
=
num
.
msd
;

632 i‡(
	gªround
!=0) {

633 
uI¡
 
bump
=0;

635 i‡(
	gªround
>5Ë
	gbump
=1;

636 i‡(
	gªround
==5)

637 
bump
=*(
num
.
lsd
) & 0x01;

638 i‡(
	gbump
!=0) {

640 
ub
=
num
.
lsd
;

641 ; 
UBTOUI
(
ub
-3)==0x09090909; 
	gub
-=4Ë
UBFROMUI
(ub-3, 0);

642 ; *
	gub
==9; ub--) *ub=0;

643 *
	gub
+=1;

644 i‡(
	gub
<
	gnum
.
	gmsd
)Çum.msd--;

649 
	gnum
.
	gexp⁄ít
=0;

652 i‡(
	g›
&
	gDIVIDEINT
Ë 
decFöÆize
(
ªsu…
, &
num
, 
£t
);

655 
decFöÆize
(&
quŸõ¡
, &
num
, 
£t
);

656 
DFWORD
(&
quŸõ¡
, 0)^=
DECFLOAT_Sign
;

657 
	gsign
=
DFWORD
(
dÊ
, 0);

658 
decFlﬂtFMA
(
ªsu…
, &
quŸõ¡
, 
d‰
, 
dÊ
, 
£t
);

659 i‡(!
DFISZERO
(
ªsu…
)Ë 
	gªsu…
;

661 
DFWORD
(&
quŸõ¡
, 0)=
sign
;

662  
decFlﬂtC›ySign
(
ªsu…
,Ñesu…, &
quŸõ¡
);

694 
	#MULTBASE
 ((
uI¡
)
BILLION
)

695 
	#MULOPLEN
 
DECPMAX9


696 
	#MULACCLEN
 (
MULOPLEN
*2)

697 
	#LEADZEROS
 (
MULACCLEN
*9 - 
DECPMAX
*2)

698 

	)

700 #i‡
DECEMAXD
>9

701 #îr‹ 
Exp⁄ít
 
may
 
ovîÊow
 
whí
 
doubÀd
 
Mu…ùly


703 #i‡
MULACCLEN
!=(MULACCLEN/4)*4

705 #îr‹ 
MULACCLEN
 
is
 
nŸ
 
a
 
mu…ùÀ
 
of
 4

708 
	$decFöôeMu…ùly
(
bcdnum
 *
num
, 
uByã
 *
bcdacc
,

709 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
) {

710 
uI¡
 
buÊ
[
MULOPLEN
];

711 
uI¡
 
bu‰
[
MULOPLEN
];

712 
uI¡
 *
ui
, *
uj
;

713 
uByã
 *
ub
;

714 
uI¡
 
uiw‹k
;

716 #i‡
DECUSE64


717 
uL⁄g
 
ac˛
[
MULACCLEN
];

718 
uL⁄g
 *
∂
;

719 
uI¡
 
acc
[
MULACCLEN
];

721 
uI¡
 
acc
[
MULACCLEN
*2];

723 
uI¡
 *
∑
;

727 
num
->
sign
=(
	`DFWORD
(
dÊ
, 0)^DFWORD(
d‰
, 0)Ë& 
DECFLOAT_Sign
;

728 
num
->
exp⁄ít
=
	`GETEXPUN
(
dÊ
)+GETEXPUN(
d‰
);

734 
	`GETCOEFFBILL
(
dÊ
, 
buÊ
);

735 
	`GETCOEFFBILL
(
d‰
, 
bu‰
);

736 #i‡
DECTRACE
 && 0

737 
	`¥ötf
("CoeffbL:");

738 
ui
=
buÊ
+
MULOPLEN
-1; ui>=buÊ; ui--Ë
	`¥ötf
(" %08lx", (
LI
)*ui);

739 
	`¥ötf
("\n");

740 
	`¥ötf
("CoeffbR:");

741 
uj
=
bu‰
+
MULOPLEN
-1; uj>=bu‰; uj--Ë
	`¥ötf
(" %08lx", (
LI
)*uj);

742 
	`¥ötf
("\n");

746 #i‡
DECUSE64


749 #i‡
MULACCLEN
==4

750 
ac˛
[0]=0;áccl[1]=0;áccl[2]=0;áccl[3]=0;

753 
∂
=
ac˛
;Öl<ac˛+
MULACCLEN
;Öl+=4) {

754 *
∂
=0; *(pl+1)=0; *(pl+2)=0; *(pl+3)=0;

767 
ui
=
bu‰
; ui<bu‰+
MULOPLEN
; ui++) {

768 i‡(*
ui
==0) ;

769 
∂
=
ac˛
+(
ui
-
bu‰
);

770 
uj
=
buÊ
; uj<buÊ+
MULOPLEN
; uj++, 
∂
++) {

772 *
∂
+=((
uL⁄g
)*
ui
)*(*
uj
);

810 
	#MULMAGIC
 2305843009U

811 #i‡
DOUBLE


	)

812 
	#MULSHIFTA
 29

	)

813 
	#MULSHIFTB
 32

	)

814 #ñi‡
QUAD


815 
	#MULSHIFTA
 30

	)

816 
	#MULSHIFTB
 31

	)

818 #îr‹ 
U√x≥˘ed
 
ty≥


821 #i‡
DECTRACE


822 
	`¥ötf
("MulAccl:");

823 
∂
=
ac˛
+
MULACCLEN
-1;Öl>=accl;Öl--)

824 
	`¥ötf
(" %08lx:%08lx", (
LI
)(*
∂
>>32), (LI)(*pl&0xffffffff));

825 
	`¥ötf
("\n");

828 
∂
=
ac˛
, 
∑
=
acc
;Öl<ac˛+
MULACCLEN
;Öl++,Öa++) {

829 
uI¡
 
lo
, 
h›
;

830 
uI¡
 
e°
;

831 i‡(*
∂
>=
MULTBASE
) {

833 
h›
=(
uI¡
)(*
∂
>>
MULSHIFTA
);

834 
e°
=(
uI¡
)(((
uL⁄g
)
h›
*
MULMAGIC
)>>
MULSHIFTB
);

838 
lo
=(
uI¡
)(*
∂
-((
uL⁄g
)
e°
*
MULTBASE
));

840 i‡(
lo
>=
MULTBASE
) {

841 
lo
-=
MULTBASE
;

842 
e°
++;

843 #i‡
QUAD


845 i‡(
lo
>=
MULTBASE
) {

846 
lo
-=
MULTBASE
;

847 
e°
++;

854 *
∑
=
lo
;

855 *(
∂
+1)+=
e°
;

858 *
∑
=(
uI¡
)*
∂
;

863 
∑
=
acc
;;Öa+=4) {

864 *
∑
=0; *(pa+1)=0; *(pa+2)=0; *(pa+3)=0;

865 i‡(
∑
==
acc
+
MULACCLEN
*2-4) ;

879 
ui
=
bu‰
;; ui++) {

880 
uI¡
 
hi
, 
lo
;

881 
∑
=
acc
+(
ui
-
bu‰
);

882 
uj
=
buÊ
;; uj++, 
∑
++) {

883 
	`LONGMUL32HI
(
hi
, *
ui
, *
uj
);

884 
lo
=(*
ui
)*(*
uj
);

885 *
∑
+=
lo
;

886 *(
∑
+
MULACCLEN
)+=
hi
+(*∑<
lo
);

887 i‡(
uj
==
buÊ
+
MULOPLEN
-1) ;

889 i‡(
ui
==
bu‰
+
MULOPLEN
-1) ;

925 
	#MULMAGIC
 2305843009U

926 #i‡
DOUBLE


	)

927 
	#MULSHIFTA
 29

	)

928 
	#MULSHIFTB
 32

	)

929 #ñi‡
QUAD


930 
	#MULSHIFTA
 30

	)

931 
	#MULSHIFTB
 31

	)

933 #îr‹ 
U√x≥˘ed
 
ty≥


936 #i‡
DECTRACE


937 
	`¥ötf
("MulHiLo:");

938 
∑
=
acc
+
MULACCLEN
-1;Öa>=acc;Öa--)

939 
	`¥ötf
(" %08lx:%08lx", (
LI
)*(
∑
+
MULACCLEN
), (LI)*pa);

940 
	`¥ötf
("\n");

943 
∑
=
acc
;;Öa++) {

944 
uI¡
 
hi
, 
lo
;

945 
uI¡
 
h›
, 
e°lo
;

946 #i‡
QUAD


947 
uI¡
 
e°hi
;

950 
lo
=*
∑
;

951 
hi
=*(
∑
+
MULACCLEN
);

954 #i‡
DOUBLE


955 
h›
=(
hi
<<3)+(
lo
>>
MULSHIFTA
);

956 
	`LONGMUL32HI
(
e°lo
, 
h›
, 
MULMAGIC
);

961 
lo
-=(
e°lo
*
MULTBASE
);

964 i‡(
lo
>=
MULTBASE
) {

965 
lo
-=
MULTBASE
;

966 
e°lo
++;

968 #ñi‡
QUAD


969 
h›
=(
hi
<<2)+(
lo
>>
MULSHIFTA
);

970 
	`LONGMUL32HI
(
e°hi
, 
h›
, 
MULMAGIC
);

971 
e°lo
=
h›
*
MULMAGIC
;

972 
e°lo
=(
e°hi
<<1)+”°lo>>
MULSHIFTB
);

974 
lo
-=(
e°lo
*
MULTBASE
);

976 i‡(
lo
>=
MULTBASE
) {

977 
lo
-=
MULTBASE
;

978 
e°lo
++;

980 i‡(
lo
>=
MULTBASE
) {

981 
lo
-=
MULTBASE
;

982 
e°lo
++;

985 #îr‹ 
U√x≥˘ed
 
ty≥


991 *
∑
=
lo
;

992 *(
∑
+1)+=
e°lo
;

995 i‡(*(
∑
+1)<
e°lo
Ë*’a+1+
MULACCLEN
)+=1;

996 i‡(
∑
==
acc
+
MULACCLEN
-2) ;

1003 #i‡
DECTRACE


1004 
	`¥ötf
("MultAcc:");

1005 
∑
=
acc
+
MULACCLEN
-1;Öa>˜cc;Öa--Ë
	`¥ötf
(" %09ld", (
LI
)*pa);

1006 
	`¥ötf
("\n");

1011 
∑
=
acc
+
MULACCLEN
-1;

1012 i‡(*
∑
!=0Ë
num
->
msd
=
bcdacc
+
LEADZEROS
;

1014 
num
->
msd
=
bcdacc
;

1015 
∑
--;

1016 ; *
∑
==0;Öa--Ëi‡’a==
acc
) ;

1018 
ub
=
bcdacc
;; 
∑
--, ub+=9) {

1019 i‡(*
∑
!=0) {

1020 
uI¡
 
t›
, 
mid
, 
ªm
;

1023 
	#mul•lô9
 1000000

1024 
	#mul•lô6
 1000

1028 
t›
=*
∑
/
mul•lô9
;

	)

1029 
ªm
=*
∑
%
mul•lô9
;

1030 
mid
=
ªm
/
mul•lô6
;

1031 
ªm
Ùem%
mul•lô6
;

1033 
	`UBFROMUI
(
ub
, 
	`UBTOUI
(&
BIN2BCD8
[
t›
*4]));

1034 
	`UBFROMUI
(
ub
+3, 
	`UBTOUI
(&
BIN2BCD8
[
mid
*4]));

1035 
	`UBFROMUI
(
ub
+6, 
	`UBTOUI
(&
BIN2BCD8
[
ªm
*4]));

1038 
	`UBFROMUI
(
ub
, 0);

1039 
	`UBFROMUI
(
ub
+4, 0);

1040 *(
ub
+8)=0;

1042 i‡(
∑
==
acc
) ;

1045 
num
->
lsd
=
ub
+8;

1047 #i‡
DECTRACE


1048 
	`decShowNum
(
num
, "postmult");

1049 
	`decFlﬂtShow
(
dÊ
, "dfl");

1050 
	`decFlﬂtShow
(
d‰
, "dfr");

1053 
	}
}

1069 
decFlﬂt
 * 
	$decFlﬂtAbs
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

1070 
decC⁄ãxt
 *
£t
) {

1071 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

1072 
	`decC™⁄iˇl
(
ªsu…
, 
df
);

1073 
	`DFBYTE
(
ªsu…
, 0)&=~0x80;

1074  
ªsu…
;

1075 
	}
}

1087 #i‡
QUAD


1092 c⁄° 
I¡
 
	gDECTESTMSD
[64]={

1099 c⁄° 
I¡
 
DECTESTMSD
[64];

1102 
decFlﬂt
 * 
	$decFlﬂtAdd
(
decFlﬂt
 *
ªsu…
,

1103 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1104 
decC⁄ãxt
 *
£t
) {

1105 
bcdnum
 
num
;

1106 
I¡
 
bex∂
, 
bex¥
;

1107 
uByã
 *
ub
, *
us
, *
ut
;

1108 
uI¡
 
uiw‹k
;

1109 #i‡
QUAD


1110 
uSh‹t
 
usw‹k
;

1113 
uI¡
 
sourhû
, 
sourhú
;

1116 
uI¡
 
diffsign
;

1117 
uI¡
 
ˇºy
;

1118 
I¡
 
ovîœp
;

1119 
I¡
 
summ
;

1122 
uByã
 
acc
[4+2+
DECPMAX
*3+8];

1123 
uByã
 
buf
[4+2+
DECPMAX
*2];

1124 
uByã
 *
umsd
, *
ulsd
;

1126 #i‡
DECLITEND


1127 
	#CARRYPAT
 0x01000000

1128 #ñ£

	)

1129 
	#CARRYPAT
 0x00000001

1131 

	)

1141 
sourhû
=
	`DFWORD
(
dÊ
, 0);

1142 
summ
=
DECTESTMSD
[
sourhû
>>26];

1143 
bex¥
=
DECCOMBEXP
[
sourhû
>>26];

1144 
bex¥
+=
	`GETECON
(
dÊ
);

1146 
sourhú
=
	`DFWORD
(
d‰
, 0);

1147 
summ
+=
DECTESTMSD
[
sourhú
>>26];

1148 
bex∂
=
DECCOMBEXP
[
sourhú
>>26];

1149 
bex∂
+=
	`GETECON
(
d‰
);

1153 
diffsign
=(
sourhû
^
sourhú
)&
DECFLOAT_Sign
;

1165 i‡(
summ
<=8) {

1166 i‡(
summ
<0) {

1168 i‡(
summ
<-64Ë 
	`decNaNs
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
);

1170 i‡(
summ
==-64 && 
diffsign
Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

1171 i‡(
	`DFISINF
(
dÊ
)Ë 
	`decInföôy
(
ªsu…
, dfl);

1172  
	`decInföôy
(
ªsu…
, 
d‰
);

1176 i‡(
bex¥
==
bex∂
 && !
diffsign
) {

1177 
uI¡
 
èc
[
DECLETS
+1];

1178 
uI¡
 
ícode
;

1181 
	`GETCOEFFTHOU
(
dÊ
, 
èc
);

1182 
	`ADDCOEFFTHOU
(
d‰
, 
èc
);

1187 
ícode
 =
BIN2DPD
[
èc
[0]];

1188 
ícode
|=
BIN2DPD
[
èc
[1]]<<10;

1189 
ícode
|=
BIN2DPD
[
èc
[2]]<<20;

1190 
ícode
|=
BIN2DPD
[
èc
[3]]<<30;

1191 
	`DFWORD
(
ªsu…
, (
DECBYTES
/4)-1)=
ícode
;

1194 
ícode
 =
BIN2DPD
[
èc
[3]]>>2;

1195 
ícode
|=
BIN2DPD
[
èc
[4]]<<8;

1197 #i‡
QUAD


1199 
ícode
|=
BIN2DPD
[
èc
[5]]<<18;

1200 
ícode
|=
BIN2DPD
[
èc
[6]]<<28;

1201 
	`DFWORD
(
ªsu…
, 2)=
ícode
;

1203 
ícode
 =
BIN2DPD
[
èc
[6]]>>4;

1204 
ícode
|=
BIN2DPD
[
èc
[7]]<<6;

1205 
ícode
|=
BIN2DPD
[
èc
[8]]<<16;

1206 
ícode
|=
BIN2DPD
[
èc
[9]]<<26;

1207 
	`DFWORD
(
ªsu…
, 1)=
ícode
;

1210 
ícode
 =
BIN2DPD
[
èc
[9]]>>6;

1211 
ícode
|=
BIN2DPD
[
èc
[10]]<<4;

1215 
ícode
|=
sourhû
 & (
ECONMASK
 | 
DECFLOAT_Sign
);

1218 
èc
[
DECLETS
]|=(
bex∂
>>
DECECONL
)<<4;

1219 
ícode
|=
DECCOMBFROM
[
èc
[
DECLETS
]];

1220 
	`DFWORD
(
ªsu…
, 0)=
ícode
;

1223  
ªsu…
;

1232 i‡(
bex∂
<=
bex¥
) {

1234 
I¡
 
bexpsw≠
=
bex∂
;

1235 
bex∂
=
bex¥
;

1236 
bex¥
=
bexpsw≠
;

1240 c⁄° 
decFlﬂt
 *
dfsw≠
=
dÊ
;

1241 
dÊ
=
d‰
;

1242 
d‰
=
dfsw≠
;

1251 i‡(
	`DFISZERO
(
dÊ
)) {

1252 
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

1257 i‡(
diffsign
 && 
	`DFISZERO
(
ªsu…
)) {

1258 
	`DFWORD
(
ªsu…
, 0)&=~
DECFLOAT_Sign
;

1259 i‡(
£t
->
round
==
DEC_ROUND_FLOOR
Ë
	`DFWORD
(
ªsu…
, 0)|=
DECFLOAT_Sign
;

1261  
ªsu…
;

1284 #i‡
DOUBLE


1285 
	#COFF
 4

1286 #ñi‡
QUAD


	)

1287 
	`UBFROMUS
(
acc
+4, 0);

1288 
	#COFF
 6

1290 

	)

1291 
	`GETCOEFF
(
dÊ
, 
acc
+
COFF
);

1292 
ulsd
=
acc
+
COFF
+
DECPMAX
-1;

1293 
umsd
=
acc
+4;

1295 #i‡
DECTRACE


1296 {
bcdnum
 
tum
;

1297 
tum
.
msd
=
umsd
;

1298 
tum
.
lsd
=
ulsd
;

1299 
tum
.
exp⁄ít
=
bex∂
-
DECBIAS
;

1300 
tum
.
sign
=
	`DFWORD
(
dÊ
, 0Ë& 
DECFLOAT_Sign
;

1301 
	`decShowNum
(&
tum
, "dflx");}

1310 
ˇºy
=0;

1311 i‡(
diffsign
) {

1312 
ˇºy
=
CARRYPAT
;

1313 
	`UBFROMUI
(
acc
+ 4, 0x09090909-
	`UBTOUI
(acc+ 4));

1314 
	`UBFROMUI
(
acc
+ 8, 0x09090909-
	`UBTOUI
(acc+ 8));

1315 
	`UBFROMUI
(
acc
+12, 0x09090909-
	`UBTOUI
(acc+12));

1316 
	`UBFROMUI
(
acc
+16, 0x09090909-
	`UBTOUI
(acc+16));

1317 #i‡
QUAD


1318 
	`UBFROMUI
(
acc
+20, 0x09090909-
	`UBTOUI
(acc+20));

1319 
	`UBFROMUI
(
acc
+24, 0x09090909-
	`UBTOUI
(acc+24));

1320 
	`UBFROMUI
(
acc
+28, 0x09090909-
	`UBTOUI
(acc+28));

1321 
	`UBFROMUI
(
acc
+32, 0x09090909-
	`UBTOUI
(acc+32));

1322 
	`UBFROMUI
(
acc
+36, 0x09090909-
	`UBTOUI
(acc+36));

1330 
ovîœp
=
DECPMAX
-(
bex∂
-
bex¥
);

1331 #i‡
DECTRACE


1332 
	`¥ötf
("exps: %ld %ld\n", (
LI
)(
bex∂
-
DECBIAS
), (LI)(
bex¥
-DECBIAS));

1333 
	`¥ötf
("Ovîœp=%ld c¨ry=%08lx\n", (
LI
)
ovîœp
, (LI)
ˇºy
);

1336 i‡(
ovîœp
<=0) {

1337 
uI¡
 
g≠
;

1340 i‡(
ˇºy
) {

1341 
ub
=
ulsd
; *ub==9; ub--) *ub=0;

1342 *
ub
+=1;

1343 
ˇºy
=0;

1350 
g≠
=-
ovîœp
;

1351 i‡(
g≠
>
DECPMAX
) {

1352 
bex¥
+=
g≠
-1;

1353 
g≠
=
DECPMAX
;

1355 
ub
=
ulsd
+
g≠
+1;

1357 
ut
=
acc
+
COFF
+
DECPMAX
;

1358 ; 
ut
<
ub
; ut+=4Ë
	`UBFROMUI
(ut, 0);

1359 i‡(
ovîœp
<-
DECPMAX
) {

1360 *
ub
=(
uByã
)(!
	`DFISZERO
(
d‰
));

1363 
	`GETCOEFF
(
d‰
, 
ub
);

1364 
ub
+=
DECPMAX
-1;

1366 
ulsd
=
ub
;

1372 i‡(
ovîœp
==
DECPMAX
) {

1373 
ub
=
buf
+
COFF
;

1374 #i‡
QUAD


1375 
	`UBFROMUS
(
buf
+4, 0);

1377 
	`GETCOEFF
(
d‰
, 
ub
);

1380 
ub
=
buf
+
COFF
+
DECPMAX
-
ovîœp
;

1386 
	`UBFROMUI
(
buf
+4, 0);

1387 
	`UBFROMUI
(
buf
+8, 0);

1388 i‡(
ub
>
buf
+12) {

1389 
ut
=
buf
+12;

1390 ; 
ut
<
ub
; ut+=4Ë
	`UBFROMUI
(ut, 0);

1392 
	`GETCOEFF
(
d‰
, 
ub
);

1396 
	`UBFROMUI
(
acc
+
COFF
+
DECPMAX
, 
	`UBTOUI
(
buf
+COFF+DECPMAX));

1397 
	`UBFROMUI
(
acc
+
COFF
+
DECPMAX
+4, 
	`UBTOUI
(
buf
+COFF+DECPMAX+4));

1398 i‡(
buf
+
COFF
+
DECPMAX
+8<
ub
+DECPMAX) {

1399 
us
=
buf
+
COFF
+
DECPMAX
+8;

1400 
ut
=
acc
+
COFF
+
DECPMAX
+8;

1401 ; 
us
<
ub
+
DECPMAX
; us+=4, 
ut
+=4Ë
	`UBFROMUI
(ut, 
	`UBTOUI
(us));

1405 
ulsd
=
acc
+(
ub
-
buf
+
DECPMAX
-1);

1419 
ut
=
acc
+
COFF
+
DECPMAX
-4;

1420 
us
=
buf
+
COFF
+
DECPMAX
-4;

1422 #i‡!
DECLITEND


1423 ; 
ut
>=
acc
+4; ut-=4, 
us
-=4) {

1425 
ˇºy
+=
	`UBTOUI
(
us
);

1426 i‡(
ˇºy
==0) ;

1427 
ˇºy
+=
	`UBTOUI
(
ut
);

1429 
ˇºy
+=0x76f6f6f6;

1431 
	`UBFROMUI
(
ut
, (
ˇºy
 & 0x0f0f0f0f) - ((carry & 0x60606060)>>4));

1432 
ˇºy
>>=31;

1435 ; 
ut
>=
acc
+4; ut-=4, 
us
-=4) {

1437 
ˇºy
+=
	`UBTOUI
(
us
);

1438 i‡(
ˇºy
==0) ;

1439 
ˇºy
+=
	`UBTOUI
(
ut
);

1443 
ˇºy
+=0x76767676;

1444 
ˇºy
+=(carry & 0x80000000)>>15;

1445 
ˇºy
+=(carry & 0x00800000)>>15;

1446 
ˇºy
+=(carry & 0x00008000)>>15;

1447 
ˇºy
-=(carry & 0x60606060)>>4;

1448 
	`UBFROMUI
(
ut
, 
ˇºy
 & 0x0f0f0f0f);

1451 
ˇºy
=(carry & 0x00000080)<<17;

1455 #i‡
DECTRACE


1456 {
bcdnum
 
tum
;

1457 
	`¥ötf
("Add d⁄e, c¨ry=%08lx, diffsign=%ld\n", (
LI
)
ˇºy
, (LI)
diffsign
);

1458 
tum
.
msd
=
umsd
;

1459 
tum
.
lsd
=
ulsd
;

1460 
tum
.
exp⁄ít
=0;

1461 
tum
.
sign
=0;

1462 
	`decShowNum
(&
tum
, "dfadd");}

1468 i‡(
diffsign
) {

1469 i‡(!
ˇºy
) {

1472 
num
.
sign
=
	`DFWORD
(
dÊ
, 0Ë& 
DECFLOAT_Sign
;

1478 #i‡!
DECLITEND


1479 *(
ulsd
+1)=0;

1482 
	`UBFROMUI
(
umsd
, 0x09090909-
	`UBTOUI
(umsd));

1483 
	`UBFROMUI
(
umsd
+4, 0x09090909-
	`UBTOUI
(umsd+4));

1484 
	`UBFROMUI
(
umsd
+8, 0x09090909-
	`UBTOUI
(umsd+8));

1485 
	`UBFROMUI
(
umsd
+12, 0x09090909-
	`UBTOUI
(umsd+12));

1486 #i‡
DOUBLE


1487 
	#BNEXT
 16

	)

1488 #ñi‡
QUAD


1489 
	`UBFROMUI
(
umsd
+16, 0x09090909-
	`UBTOUI
(umsd+16));

1490 
	`UBFROMUI
(
umsd
+20, 0x09090909-
	`UBTOUI
(umsd+20));

1491 
	`UBFROMUI
(
umsd
+24, 0x09090909-
	`UBTOUI
(umsd+24));

1492 
	`UBFROMUI
(
umsd
+28, 0x09090909-
	`UBTOUI
(umsd+28));

1493 
	`UBFROMUI
(
umsd
+32, 0x09090909-
	`UBTOUI
(umsd+32));

1494 
	#BNEXT
 36

	)

1496 i‡(
ulsd
>=
umsd
+
BNEXT
) {

1498 
	`UBFROMUI
(
umsd
+
BNEXT
, 0x09090909-
	`UBTOUI
(umsd+BNEXT));

1499 
	`UBFROMUI
(
umsd
+
BNEXT
+4, 0x09090909-
	`UBTOUI
(umsd+BNEXT+4));

1500 #i‡
DOUBLE


1501 
	#BNEXTY
 (
BNEXT
+8)

	)

1502 #ñi‡
QUAD


1503 
	`UBFROMUI
(
umsd
+
BNEXT
+8, 0x09090909-
	`UBTOUI
(umsd+BNEXT+8));

1504 
	`UBFROMUI
(
umsd
+
BNEXT
+12, 0x09090909-
	`UBTOUI
(umsd+BNEXT+12));

1505 
	#BNEXTY
 (
BNEXT
+16)

	)

1507 i‡(
ulsd
>=
umsd
+
BNEXTY
) {

1508 
ut
=
umsd
+
BNEXTY
;

1509 ;;
ut
+=4) {

1510 
	`UBFROMUI
(
ut
, 0x09090909-
	`UBTOUI
(ut));

1511 i‡(
ut
>=
ulsd
-3) ;

1516 
ub
=
ulsd
; *ub==9; ub--) *ub=0;

1517 *
ub
+=1;

1521 
num
.
sign
=
	`DFWORD
(
d‰
, 0Ë& 
DECFLOAT_Sign
;

1532 i‡(
	`ISCOEFFZERO
(
acc
+
COFF
)) {

1533 
umsd
=
acc
+
COFF
+
DECPMAX
-1;

1534 i‡(
ulsd
>
umsd
) {

1535 
umsd
++;

1536 ; 
	`UBTOUI
(
umsd
)==0 && umsd+3<
ulsd
;) umsd+=4;

1537 ; *
umsd
==0 && umsd<
ulsd
;) umsd++;

1539 i‡(*
umsd
==0) {

1540 
num
.
sign
=0;

1541 i‡(
£t
->
round
==
DEC_ROUND_FLOOR
Ë
num
.
sign
=
DECFLOAT_Sign
;

1549 
num
.
sign
=
	`DFWORD
(
dÊ
, 0)&
DECFLOAT_Sign
;

1550 #i‡
DOUBLE


1551 i‡(
ˇºy
) {

1552 *(
acc
+3)=1;

1553 
umsd
=
acc
+3;

1558 
num
.
msd
=
umsd
;

1559 
num
.
lsd
=
ulsd
;

1560 
num
.
exp⁄ít
=
bex¥
-
DECBIAS
;

1562 #i‡
DECTRACE


1563 
	`decFlﬂtShow
(
dÊ
, "dfl");

1564 
	`decFlﬂtShow
(
d‰
, "dfr");

1565 
	`decShowNum
(&
num
, "postadd");

1567  
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

1568 
	}
}

1582 
decFlﬂt
 * 
	$decFlﬂtAnd
(
decFlﬂt
 *
ªsu…
,

1583 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1584 
decC⁄ãxt
 *
£t
) {

1585 i‡(!
	`DFISUINT01
(
dÊ
Ë|| !DFISUINT01(
d‰
)

1586 || !
	`DFISCC01
(
dÊ
Ë|| !DFISCC01(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

1588 #i‡
DOUBLE


1589 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


1590 |((
	`DFWORD
(
dÊ
, 0Ë& DFWORD(
d‰
, 0))&0x04009124);

1591 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë& DFWORD(
d‰
, 1))&0x49124491;

1592 #ñi‡
QUAD


1593 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


1594 |((
	`DFWORD
(
dÊ
, 0Ë& DFWORD(
d‰
, 0))&0x04000912);

1595 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë& DFWORD(
d‰
, 1))&0x44912449;

1596 
	`DFWORD
(
ªsu…
, 2)=(DFWORD(
dÊ
, 2Ë& DFWORD(
d‰
, 2))&0x12449124;

1597 
	`DFWORD
(
ªsu…
, 3)=(DFWORD(
dÊ
, 3Ë& DFWORD(
d‰
, 3))&0x49124491;

1599  
ªsu…
;

1600 
	}
}

1611 
decFlﬂt
 * 
	$decFlﬂtC™⁄iˇl
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
) {

1612  
	`decC™⁄iˇl
(
ªsu…
, 
df
);

1613 
	}
}

1621 
decCœss
 
	$decFlﬂtCœss
(c⁄° 
decFlﬂt
 *
df
) {

1622 
I¡
 
exp
;

1623 i‡(
	`DFISSPECIAL
(
df
)) {

1624 i‡(
	`DFISQNAN
(
df
)Ë 
DEC_CLASS_QNAN
;

1625 i‡(
	`DFISSNAN
(
df
)Ë 
DEC_CLASS_SNAN
;

1627 i‡(
	`DFISSIGNED
(
df
)Ë 
DEC_CLASS_NEG_INF
;

1628  
DEC_CLASS_POS_INF
;

1630 i‡(
	`DFISZERO
(
df
)) {

1631 i‡(
	`DFISSIGNED
(
df
)Ë 
DEC_CLASS_NEG_ZERO
;

1632  
DEC_CLASS_POS_ZERO
;

1636 
exp
=
	`GETEXPUN
(
df
)

1637 +
	`decFlﬂtDigôs
(
df
)-1;

1638 i‡(
exp
>=
DECEMIN
) {

1639 i‡(
	`DFISSIGNED
(
df
)Ë 
DEC_CLASS_NEG_NORMAL
;

1640  
DEC_CLASS_POS_NORMAL
;

1643 i‡(
	`DFISSIGNED
(
df
)Ë 
DEC_CLASS_NEG_SUBNORMAL
;

1644  
DEC_CLASS_POS_SUBNORMAL
;

1645 
	}
}

1653 c⁄° *
	$decFlﬂtCœssSåög
(c⁄° 
decFlﬂt
 *
df
) {

1654 
decCœss
 
e˛ass
=
	`decFlﬂtCœss
(
df
);

1655 i‡(
e˛ass
==
DEC_CLASS_POS_NORMAL
Ë 
DEC_CœssSåög_PN
;

1656 i‡(
e˛ass
==
DEC_CLASS_NEG_NORMAL
Ë 
DEC_CœssSåög_NN
;

1657 i‡(
e˛ass
==
DEC_CLASS_POS_ZERO
Ë 
DEC_CœssSåög_PZ
;

1658 i‡(
e˛ass
==
DEC_CLASS_NEG_ZERO
Ë 
DEC_CœssSåög_NZ
;

1659 i‡(
e˛ass
==
DEC_CLASS_POS_SUBNORMAL
Ë 
DEC_CœssSåög_PS
;

1660 i‡(
e˛ass
==
DEC_CLASS_NEG_SUBNORMAL
Ë 
DEC_CœssSåög_NS
;

1661 i‡(
e˛ass
==
DEC_CLASS_POS_INF
Ë 
DEC_CœssSåög_PI
;

1662 i‡(
e˛ass
==
DEC_CLASS_NEG_INF
Ë 
DEC_CœssSåög_NI
;

1663 i‡(
e˛ass
==
DEC_CLASS_QNAN
Ë 
DEC_CœssSåög_QN
;

1664 i‡(
e˛ass
==
DEC_CLASS_SNAN
Ë 
DEC_CœssSåög_SN
;

1665  
DEC_CœssSåög_UN
;

1666 
	}
}

1677 
decFlﬂt
 * 
	$decFlﬂtCom∑ª
(
decFlﬂt
 *
ªsu…
,

1678 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1679 
decC⁄ãxt
 *
£t
) {

1680 
I¡
 
comp
;

1682 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

1684 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 0);

1685 
	`decFlﬂtZîo
(
ªsu…
);

1686 i‡(
comp
==0Ë 
ªsu…
;

1687 
	`DFBYTE
(
ªsu…
, 
DECBYTES
-1)=0x01;

1688 i‡(
comp
<0Ë
	`DFBYTE
(
ªsu…
, 0)|=0x80;

1689  
ªsu…
;

1690 
	}
}

1701 
decFlﬂt
 * 
	$decFlﬂtCom∑ªSig«l
(
decFlﬂt
 *
ªsu…
,

1702 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1703 
decC⁄ãxt
 *
£t
) {

1704 
I¡
 
comp
;

1706 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)) {

1707 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

1708  
	`decNaNs
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
);

1711 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 0);

1712 
	`decFlﬂtZîo
(
ªsu…
);

1713 i‡(
comp
==0Ë 
ªsu…
;

1714 
	`DFBYTE
(
ªsu…
, 
DECBYTES
-1)=0x01;

1715 i‡(
comp
<0Ë
	`DFBYTE
(
ªsu…
, 0)|=0x80;

1716  
ªsu…
;

1717 
	}
}

1727 
decFlﬂt
 * 
	$decFlﬂtCom∑ªTŸÆ
(
decFlﬂt
 *
ªsu…
,

1728 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
) {

1729 
I¡
 
comp
;

1730 
uI¡
 
uiw‹k
;

1731 #i‡
QUAD


1732 
uSh‹t
 
usw‹k
;

1734 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)) {

1735 
I¡
 
«∆
, 
«ƒ
;

1737 
«∆
=
	`DFISSNAN
(
dÊ
)+
	`DFISQNAN
(dfl)*2;

1738 i‡(
	`DFISSIGNED
(
dÊ
)Ë
«∆
=-nanl;

1739 
«ƒ
=
	`DFISSNAN
(
d‰
)+
	`DFISQNAN
(dfr)*2;

1740 i‡(
	`DFISSIGNED
(
d‰
)Ë
«ƒ
=-nanr;

1741 i‡(
«∆
>
«ƒ
Ë
comp
=+1;

1742 i‡(
«∆
<
«ƒ
Ë
comp
=-1;

1745 
uByã
 
buÊ
[
DECPMAX
+4];

1746 
uByã
 
bu‰
[
DECPMAX
+4];

1747 
uByã
 *
ub
, *
uc
;

1748 
I¡
 
sigl
;

1749 
sigl
=(
	`DFISSIGNED
(
dÊ
) ? -1 : +1);

1753 #i‡
QUAD


1754 
	`UBFROMUS
(
buÊ
, 0);

1755 
	`UBFROMUS
(
bu‰
, 0);

1757 
	`GETCOEFF
(
dÊ
, 
buÊ
+
QUAD
*2);

1758 
	`GETCOEFF
(
d‰
, 
bu‰
+
QUAD
*2);

1760 
comp
=0;

1761 
ub
=
buÊ
, 
uc
=
bu‰
; ub<buÊ+
DECPMAX
+
QUAD
*2; ub+=4, uc+=4) {

1762 
uI¡
 
ui
=
	`UBTOUI
(
ub
);

1763 i‡(
ui
==
	`UBTOUI
(
uc
)) ;

1765 ;; 
ub
++, 
uc
++) {

1766 i‡(*
ub
==*
uc
) ;

1767 i‡(*
ub
>*
uc
Ë
comp
=
sigl
;

1768 
comp
=-
sigl
;

1776 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 1);

1778 
	`decFlﬂtZîo
(
ªsu…
);

1779 i‡(
comp
==0Ë 
ªsu…
;

1780 
	`DFBYTE
(
ªsu…
, 
DECBYTES
-1)=0x01;

1781 i‡(
comp
<0Ë
	`DFBYTE
(
ªsu…
, 0)|=0x80;

1782  
ªsu…
;

1783 
	}
}

1793 
decFlﬂt
 * 
	$decFlﬂtCom∑ªTŸÆMag
(
decFlﬂt
 *
ªsu…
,

1794 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
) {

1795 
decFlﬂt
 
a
, 
b
;

1797 i‡(
	`DFISSIGNED
(
dÊ
)) {

1798 
	`decFlﬂtC›yAbs
(&
a
, 
dÊ
);

1799 
dÊ
=&
a
;

1801 i‡(
	`DFISSIGNED
(
d‰
)) {

1802 
	`decFlﬂtC›yAbs
(&
b
, 
d‰
);

1803 
d‰
=&
b
;

1805  
	`decFlﬂtCom∑ªTŸÆ
(
ªsu…
, 
dÊ
, 
d‰
);

1806 
	}
}

1817 
decFlﬂt
 * 
	$decFlﬂtC›y
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
) {

1818 i‡(
dÊ
!=
ªsu…
) *result=*dfl;

1819  
ªsu…
;

1820 
	}
}

1831 
decFlﬂt
 * 
	$decFlﬂtC›yAbs
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
) {

1832 i‡(
dÊ
!=
ªsu…
) *result=*dfl;

1833 
	`DFBYTE
(
ªsu…
, 0)&=~0x80;

1834  
ªsu…
;

1835 
	}
}

1846 
decFlﬂt
 * 
	$decFlﬂtC›yNeg©e
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
) {

1847 i‡(
dÊ
!=
ªsu…
) *result=*dfl;

1848 
	`DFBYTE
(
ªsu…
, 0)^=0x80;

1849  
ªsu…
;

1850 
	}
}

1862 
decFlﬂt
 * 
	$decFlﬂtC›ySign
(
decFlﬂt
 *
ªsu…
,

1863 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
) {

1864 
uByã
 
sign
=(uByã)(
	`DFBYTE
(
d‰
, 0)&0x80);

1865 i‡(
dÊ
!=
ªsu…
) *result=*dfl;

1866 
	`DFBYTE
(
ªsu…
, 0)&=~0x80;

1867 
	`DFBYTE
(
ªsu…
, 0)=(
uByã
)(DFBYTE‘esu…, 0)|
sign
);

1868  
ªsu…
;

1869 
	}
}

1883 
	#dpdÀnchk
(
n
, 
f‹m
Ë
dpd
=(f‹m)&0x3ff; \

	)

1884 i‡(
	gdpd
Ë (
	gDECPMAX
-1-3*(
	gn
))-(3-
	gDPD2BCD8
[
dpd
*4+3])

1887 
	#dpdÀndun
(
n
, 
f‹m
Ë
dpd
=(f‹m)&0x3ff; \

	)

1888 i‡(
	gdpd
==0)  1; \

1889  (
	gDECPMAX
-1-3*(
	gn
))-(3-
	gDPD2BCD8
[
dpd
*4+3])

1891 
uI¡
 
	$decFlﬂtDigôs
(c⁄° 
decFlﬂt
 *
df
) {

1892 
uI¡
 
dpd
;

1893 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

1894 #i‡
QUAD


1895 
uI¡
 
sourmh
, 
sourml
;

1897 
uI¡
 
souæo
;

1899 i‡(
	`DFISINF
(
df
))  1;

1902 i‡(!
	`DFISNAN
(
df
Ë&& 
DECCOMBMSD
[
sourhi
>>26]Ë 
DECPMAX
;

1904 #i‡
DOUBLE


1905 i‡(
sourhi
&0x0003ffff) {

1906 
	`dpdÀnchk
(0, 
sourhi
>>8);

1907 
souæo
=
	`DFWORD
(
df
, 1);

1908 
	`dpdÀndun
(1, (
sourhi
<<2Ë| (
souæo
>>30));

1910 
souæo
=
	`DFWORD
(
df
, 1);

1911 i‡(
souæo
&0xfff00000) {

1912 
	`dpdÀnchk
(1, 
souæo
>>30);

1913 
	`dpdÀndun
(2, 
souæo
>>20);

1915 
	`dpdÀnchk
(3, 
souæo
>>10);

1916 
	`dpdÀndun
(4, 
souæo
);

1919 #ñi‡
QUAD


1920 i‡(
sourhi
&0x00003fff) {

1921 
	`dpdÀnchk
(0, 
sourhi
>>4);

1922 
sourmh
=
	`DFWORD
(
df
, 1);

1923 
	`dpdÀndun
(1, ((
sourhi
)<<6Ë| (
sourmh
>>26));

1925 
sourmh
=
	`DFWORD
(
df
, 1);

1926 i‡(
sourmh
) {

1927 
	`dpdÀnchk
(1, 
sourmh
>>26);

1928 
	`dpdÀnchk
(2, 
sourmh
>>16);

1929 
	`dpdÀnchk
(3, 
sourmh
>>6);

1930 
sourml
=
	`DFWORD
(
df
, 2);

1931 
	`dpdÀndun
(4, ((
sourmh
)<<4Ë| (
sourml
>>28));

1933 
sourml
=
	`DFWORD
(
df
, 2);

1934 i‡(
sourml
) {

1935 
	`dpdÀnchk
(4, 
sourml
>>28);

1936 
	`dpdÀnchk
(5, 
sourml
>>18);

1937 
	`dpdÀnchk
(6, 
sourml
>>8);

1938 
souæo
=
	`DFWORD
(
df
, 3);

1939 
	`dpdÀndun
(7, ((
sourml
)<<2Ë| (
souæo
>>30));

1941 
souæo
=
	`DFWORD
(
df
, 3);

1942 i‡(
souæo
&0xfff00000) {

1943 
	`dpdÀnchk
(7, 
souæo
>>30);

1944 
	`dpdÀndun
(8, 
souæo
>>20);

1946 
	`dpdÀnchk
(9, 
souæo
>>10);

1947 
	`dpdÀndun
(10, 
souæo
);

1950 
	}
}

1963 
decFlﬂt
 * 
	$decFlﬂtDivide
(
decFlﬂt
 *
ªsu…
,

1964 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1965 
decC⁄ãxt
 *
£t
) {

1966  
	`decDivide
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
, 
DIVIDE
);

1967 
	}
}

1979 
decFlﬂt
 * 
	$decFlﬂtDivideI¡egî
(
decFlﬂt
 *
ªsu…
,

1980 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

1981 
decC⁄ãxt
 *
£t
) {

1982  
	`decDivide
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
, 
DIVIDEINT
);

1983 
	}
}

1996 
decFlﬂt
 * 
	$decFlﬂtFMA
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
,

1997 c⁄° 
decFlﬂt
 *
d‰
, c⁄° decFlﬂà*
dff
,

1998 
decC⁄ãxt
 *
£t
) {

2003 
	#FMALEN
 (
	`ROUNDUP4
(1+ (
DECPMAX9
*18+1Ë+
DECPMAX
+2))

	)

2004 
uByã
 
acc
[
FMALEN
];

2006 
bcdnum
 
mul
;

2007 
bcdnum
 
fö
;

2008 
uByã
 
c€
[
	`ROUNDUP4
(
DECPMAX
)];

2009 
bcdnum
 *
hi
, *
lo
;

2010 
uI¡
 
diffsign
;

2011 
uI¡
 
hùad
;

2012 
I¡
 
∑ddög
;

2013 
uI¡
 
ˇºy
;

2014 
uByã
 *
ub
, *
uh
, *
ul
;

2015 
uI¡
 
uiw‹k
;

2019 i‡(
	`DFISSPECIAL
(
dÊ
Ë|| DFISSPECIAL(
d‰
Ë|| DFISSPECIAL(
dff
)) {

2020 
decFlﬂt
 
¥oxy
;

2022 i‡(
	`DFISSNAN
(
dÊ
Ë|| DFISSNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2023 i‡(
	`DFISSNAN
(
dff
)Ë 
	`decNaNs
(
ªsu…
, dff, 
NULL
, 
£t
);

2024 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2025 i‡(
	`DFISNAN
(
dff
)Ë 
	`decNaNs
(
ªsu…
, dff, 
NULL
, 
£t
);

2028 
	`decFlﬂtZîo
(&
¥oxy
);

2029 i‡(
	`DFISINF
(
dÊ
)) {

2030 i‡(
	`DFISZERO
(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2031 
	`decInföôy
(&
¥oxy
, &proxy);

2033 i‡(
	`DFISINF
(
d‰
)) {

2034 i‡(
	`DFISZERO
(
dÊ
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2035 
	`decInföôy
(&
¥oxy
, &proxy);

2038 
	`DFWORD
(&
¥oxy
, 0)|=(DFWORD(
dÊ
, 0)^DFWORD(
d‰
, 0))&
DECFLOAT_Sign
;

2039 i‡(!
	`DFISINF
(
dff
)Ë 
	`decFlﬂtC›y
(
ªsu…
, &
¥oxy
);

2041 i‡(!
	`DFISINF
(&
¥oxy
)Ë 
	`decInföôy
(
ªsu…
, 
dff
);

2043 i‡((
	`DFWORD
(
dff
, 0)&
DECFLOAT_Sign
)!=(DFWORD(&
¥oxy
, 0)&DECFLOAT_Sign))

2044  
	`decInvÆid
(
ªsu…
, 
£t
);

2045  
	`decFlﬂtC›y
(
ªsu…
, &
¥oxy
);

2051 
	`decFöôeMu…ùly
(&
mul
, 
acc
+1, 
dÊ
, 
d‰
);

2058 
fö
.
exp⁄ít
=
	`GETEXPUN
(
dff
);

2059 
fö
.
sign
=
	`DFWORD
(
dff
, 0)&
DECFLOAT_Sign
;

2060 
diffsign
=
mul
.
sign
^
fö
.sign;

2061 
fö
.
msd
=
c€
;

2062 
fö
.
lsd
=
c€
+
DECPMAX
-1;

2063 
	`GETCOEFF
(
dff
, 
c€
);

2068 i‡(
mul
.
exp⁄ít
>=
fö
.exponent) {

2069 
hi
=&
mul
;

2070 
lo
=&
fö
;

2073 
hi
=&
fö
;

2074 
lo
=&
mul
;

2080 ; 
	`UBTOUI
(
hi
->
msd
)==0 && hi->msd+3<hi->
lsd
;) hi->msd+=4;

2081 ; *
hi
->
msd
==0 && hi->msd<hi->
lsd
;) hi->msd++;

2082 ; 
	`UBTOUI
(
lo
->
msd
)==0 &&Üo->msd+3<lo->
lsd
;)Üo->msd+=4;

2083 ; *
lo
->
msd
==0 &&Üo->msd<lo->
lsd
;)Üo->msd++;

2088 i‡(*
hi
->
msd
==0) {

2093 i‡(
diffsign
) {

2094 i‡(*
lo
->
msd
==0) {

2095 
lo
->
sign
=0;

2096 i‡(
£t
->
round
==
DEC_ROUND_FLOOR
Ë
lo
->
sign
=
DECFLOAT_Sign
;

2099  
	`decFöÆize
(
ªsu…
, 
lo
, 
£t
);

2108 
hùad
=0;

2109 
ˇºy
=0;

2110 i‡(
diffsign
) {

2111 
hùad
=9;

2112 
ˇºy
=1;

2114 
uh
=
hi
->
msd
; uh<hi->
lsd
-3; uh+=4Ë
	`UBFROMUI
(uh, 0x09090909-
	`UBTOUI
(uh));

2115 ; 
uh
<=
hi
->
lsd
; uh++Ë*uh=(
uByã
)(0x09-*uh);

2125 
∑ddög
=
hi
->
exp⁄ít
-
lo
->exponent;

2131 
ub
=
acc
+
FMALEN
-1;

2132 
ul
=
lo
->
lsd
;

2134 i‡(
∑ddög
!=0) {

2141 
I¡
 
hûí
=(I¡)(
hi
->
lsd
-hi->
msd
+1);

2142 
I¡
 
lﬁí
=(I¡)(
lo
->
lsd
-lo->
msd
+1);

2144 i‡(
hûí
+
∑ddög
-
lﬁí
 > 
DECPMAX
+2) {

2155 
I¡
 
√wexp
=
	`MINI
(
hi
->
exp⁄ít
, hi->exp⁄ít+
hûí
-
DECPMAX
)-3;

2158 
lo
->
lsd
ˆo->
msd
;

2159 
lo
->
exp⁄ít
=
√wexp
;

2160 
∑ddög
=
hi
->
exp⁄ít
-
lo
->exponent;

2161 
ul
=
lo
->
lsd
;

2165 #i‡
DECCHECK


2166 i‡(
∑ddög
<=0Ë
	`¥ötf
("FMAÜowÖaddög: %ld\n", (
LI
)padding);

2167 i‡(
hûí
+
∑ddög
+1>
FMALEN
)

2168 
	`¥ötf
("FMAÉx˚s†hûí+∑ddög: %ld+%ld \n", (
LI
)
hûí
, (LI)
∑ddög
);

2174 ; 
ul
-3>=
lo
->
msd
 && 
∑ddög
>3;Öaddög-=4, ul-=4, 
ub
-=4) {

2175 
	`UBFROMUI
(
ub
-3, 
	`UBTOUI
(
ul
-3));

2177 ; 
ul
>=
lo
->
msd
 && 
∑ddög
>0;Öaddög--, ul--, 
ub
--) *ub=*ul;

2178 ;
∑ddög
>0;Öaddög--, 
ub
--) *ub=0;

2182 
uh
=
hi
->
lsd
;

2188 ;; 
ub
--) {

2189 i‡(
uh
<
hi
->
msd
 || 
ul
<
lo
->msd) ;

2190 *
ub
=(
uByã
)(
ˇºy
+(*
uh
--)+(*
ul
--));

2191 
ˇºy
=0;

2192 i‡(*
ub
<10) ;

2193 *
ub
-=10;

2194 
ˇºy
=1;

2197 i‡(
ul
<
lo
->
msd
) {

2198 ;; 
ub
--) {

2199 i‡(
uh
<
hi
->
msd
) ;

2200 *
ub
=(
uByã
)(
ˇºy
+(*
uh
--));

2201 
ˇºy
=0;

2202 i‡(*
ub
<10) ;

2203 *
ub
-=10;

2204 
ˇºy
=1;

2208 ;; 
ub
--) {

2209 i‡(
ul
<
lo
->
msd
) ;

2210 *
ub
=(
uByã
)(
ˇºy
+
hùad
+(*
ul
--));

2211 
ˇºy
=0;

2212 i‡(*
ub
<10) ;

2213 *
ub
-=10;

2214 
ˇºy
=1;

2221 
lo
->
msd
=
ub
+1;

2222 
lo
->
lsd
=
acc
+
FMALEN
-1;

2224 i‡(!
diffsign
) {

2225 i‡(
ˇºy
) {

2226 *
ub
=1;

2227 
lo
->
msd
--;

2231 i‡(!
ˇºy
) {

2233 
lo
->
sign
=
hi
->sign;

2234 
ul
=
lo
->
msd
; ul<lo->
lsd
-3; ul+=4Ë
	`UBFROMUI
(ul, 0x09090909-
	`UBTOUI
(ul));

2235 ; 
ul
<=
lo
->
lsd
; ul++Ë*ul=(
uByã
)(0x09-*ul);

2237 
ul
--; *ul==9; ul--) *ul=0;

2238 *
ul
+=1;

2245 ; 
	`UBTOUI
(
lo
->
msd
)==0 &&Üo->msd+3<lo->
lsd
;)Üo->msd+=4;

2246 ; *
lo
->
msd
==0 &&Üo->msd<lo->
lsd
;)Üo->msd++;

2247 i‡(*
lo
->
msd
==0) {

2248 
lo
->
sign
=0;

2249 i‡(
£t
->
round
==
DEC_ROUND_FLOOR
Ë
lo
->
sign
=
DECFLOAT_Sign
;

2255 #i‡
DECCHECK


2257 i‡(
lo
->
msd
<
acc
) {

2258 
	`¥ötf
("FMA undîru¿by %ld \n", (
LI
)(
acc
-
lo
->
msd
));

2262  
	`decFöÆize
(
ªsu…
, 
lo
, 
£t
);

2263 
	}
}

2274 
decFlﬂt
 * 
	$decFlﬂtFromI¡32
(
decFlﬂt
 *
ªsu…
, 
I¡
 
n
) {

2275 
uI¡
 
u
=(uI¡)
n
;

2276 
uI¡
 
ícode
;

2277 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD
;

2278 #i‡
QUAD


2279 
	`DFWORD
(
ªsu…
, 1)=0;

2280 
	`DFWORD
(
ªsu…
, 2)=0;

2282 i‡(
n
<0) {

2284 
u
=(~u)+1;

2285 
	`DFWORD
(
ªsu…
, 0)|=
DECFLOAT_Sign
;

2289 
ícode
=
BIN2DPD
[
u
%1000];

2290 
u
/=1000;

2291 
ícode
|=
BIN2DPD
[
u
%1000]<<10;

2292 
u
/=1000;

2293 
ícode
|=
BIN2DPD
[
u
%1000]<<20;

2294 
u
/=1000;

2295 
ícode
|=
u
<<30;

2296 
	`DFWORD
(
ªsu…
, 
DECWORDS
-1)=
ícode
;

2297  
ªsu…
;

2298 
	}
}

2309 
decFlﬂt
 * 
	$decFlﬂtFromUI¡32
(
decFlﬂt
 *
ªsu…
, 
uI¡
 
u
) {

2310 
uI¡
 
ícode
;

2311 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD
;

2312 #i‡
QUAD


2313 
	`DFWORD
(
ªsu…
, 1)=0;

2314 
	`DFWORD
(
ªsu…
, 2)=0;

2316 
ícode
=
BIN2DPD
[
u
%1000];

2317 
u
/=1000;

2318 
ícode
|=
BIN2DPD
[
u
%1000]<<10;

2319 
u
/=1000;

2320 
ícode
|=
BIN2DPD
[
u
%1000]<<20;

2321 
u
/=1000;

2322 
ícode
|=
u
<<30;

2323 
	`DFWORD
(
ªsu…
, 
DECWORDS
-1)=
ícode
;

2324 
	`DFWORD
(
ªsu…
, 
DECWORDS
-2)|=
u
>>2;

2325  
ªsu…
;

2326 
	}
}

2339 
decFlﬂt
 * 
	$decFlﬂtInvît
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

2340 
decC⁄ãxt
 *
£t
) {

2341 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

2343 i‡(!
	`DFISUINT01
(
df
Ë|| !
	`DFISCC01
(df)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2345 #i‡
DOUBLE


2346 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD
|((~
sourhi
)&0x04009124);

2347 
	`DFWORD
(
ªsu…
, 1)=(~DFWORD(
df
, 1)) &0x49124491;

2348 #ñi‡
QUAD


2349 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD
|((~
sourhi
)&0x04000912);

2350 
	`DFWORD
(
ªsu…
, 1)=(~DFWORD(
df
, 1)) &0x44912449;

2351 
	`DFWORD
(
ªsu…
, 2)=(~DFWORD(
df
, 2)) &0x12449124;

2352 
	`DFWORD
(
ªsu…
, 3)=(~DFWORD(
df
, 3)) &0x49124491;

2354  
ªsu…
;

2355 
	}
}

2367 
uI¡
 
	$decFlﬂtIsC™⁄iˇl
(c⁄° 
decFlﬂt
 *
df
) {

2368 i‡(
	`DFISSPECIAL
(
df
)) {

2369 i‡(
	`DFISINF
(
df
)) {

2370 i‡(
	`DFWORD
(
df
, 0)&
ECONMASK
)  0;

2371 i‡(!
	`DFISCCZERO
(
df
))  0;

2375 i‡(
	`DFWORD
(
df
, 0)&
ECONNANMASK
)  0;

2376 i‡(
	`DFISCCZERO
(
df
))  1;

2380 #i‡
DOUBLE


2381 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

2382 
uI¡
 
souæo
=
	`DFWORD
(
df
, 1);

2383 i‡(
	`CANONDPDOFF
(
sourhi
, 8)

2384 && 
	`CANONDPDTWO
(
sourhi
, 
souæo
, 30)

2385 && 
	`CANONDPDOFF
(
souæo
, 20)

2386 && 
	`CANONDPDOFF
(
souæo
, 10)

2387 && 
	`CANONDPDOFF
(
souæo
, 0))  1;

2388 #ñi‡
QUAD


2389 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

2390 
uI¡
 
sourmh
=
	`DFWORD
(
df
, 1);

2391 
uI¡
 
sourml
=
	`DFWORD
(
df
, 2);

2392 
uI¡
 
souæo
=
	`DFWORD
(
df
, 3);

2393 i‡(
	`CANONDPDOFF
(
sourhi
, 4)

2394 && 
	`CANONDPDTWO
(
sourhi
, 
sourmh
, 26)

2395 && 
	`CANONDPDOFF
(
sourmh
, 16)

2396 && 
	`CANONDPDOFF
(
sourmh
, 6)

2397 && 
	`CANONDPDTWO
(
sourmh
, 
sourml
, 28)

2398 && 
	`CANONDPDOFF
(
sourml
, 18)

2399 && 
	`CANONDPDOFF
(
sourml
, 8)

2400 && 
	`CANONDPDTWO
(
sourml
, 
souæo
, 30)

2401 && 
	`CANONDPDOFF
(
souæo
, 20)

2402 && 
	`CANONDPDOFF
(
souæo
, 10)

2403 && 
	`CANONDPDOFF
(
souæo
, 0))  1;

2407 
	}
}

2409 
uI¡
 
	$decFlﬂtIsFöôe
(c⁄° 
decFlﬂt
 *
df
) {

2410  !
	`DFISSPECIAL
(
df
);

2411 
	}
}

2412 
uI¡
 
	$decFlﬂtIsInföôe
(c⁄° 
decFlﬂt
 *
df
) {

2413  
	`DFISINF
(
df
);

2414 
	}
}

2415 
uI¡
 
	$decFlﬂtIsI¡egî
(c⁄° 
decFlﬂt
 *
df
) {

2416  
	`DFISINT
(
df
);

2417 
	}
}

2418 
uI¡
 
	$decFlﬂtIsLogiˇl
(c⁄° 
decFlﬂt
 *
df
) {

2419  
	`DFISUINT01
(
df
Ë& 
	`DFISCC01
(df);

2420 
	}
}

2421 
uI¡
 
	$decFlﬂtIsNaN
(c⁄° 
decFlﬂt
 *
df
) {

2422  
	`DFISNAN
(
df
);

2423 
	}
}

2424 
uI¡
 
	$decFlﬂtIsNeg©ive
(c⁄° 
decFlﬂt
 *
df
) {

2425  
	`DFISSIGNED
(
df
Ë&& !
	`DFISZERO
(dfË&& !
	`DFISNAN
(df);

2426 
	}
}

2427 
uI¡
 
	$decFlﬂtIsN‹mÆ
(c⁄° 
decFlﬂt
 *
df
) {

2428 
I¡
 
exp
;

2429 i‡(
	`DFISSPECIAL
(
df
))  0;

2430 i‡(
	`DFISZERO
(
df
))  0;

2432 
exp
=
	`GETEXPUN
(
df
)

2433 +
	`decFlﬂtDigôs
(
df
)-1;

2434  (
exp
>=
DECEMIN
);

2435 
	}
}

2436 
uI¡
 
	$decFlﬂtIsPosôive
(c⁄° 
decFlﬂt
 *
df
) {

2437  !
	`DFISSIGNED
(
df
Ë&& !
	`DFISZERO
(dfË&& !
	`DFISNAN
(df);

2438 
	}
}

2439 
uI¡
 
	$decFlﬂtIsSig«lög
(c⁄° 
decFlﬂt
 *
df
) {

2440  
	`DFISSNAN
(
df
);

2441 
	}
}

2442 
uI¡
 
	$decFlﬂtIsSig«Œög
(c⁄° 
decFlﬂt
 *
df
) {

2443  
	`DFISSNAN
(
df
);

2444 
	}
}

2445 
uI¡
 
	$decFlﬂtIsSig√d
(c⁄° 
decFlﬂt
 *
df
) {

2446  
	`DFISSIGNED
(
df
);

2447 
	}
}

2448 
uI¡
 
	$decFlﬂtIsSubn‹mÆ
(c⁄° 
decFlﬂt
 *
df
) {

2449 i‡(
	`DFISSPECIAL
(
df
))  0;

2451 i‡(
	`decFlﬂtIsN‹mÆ
(
df
))  0;

2453 i‡(
	`DFISZERO
(
df
))  0;

2455 
	}
}

2456 
uI¡
 
	$decFlﬂtIsZîo
(c⁄° 
decFlﬂt
 *
df
) {

2457  
	`DFISZERO
(
df
);

2458 
	}
}

2475 
decFlﬂt
 * 
	$decFlﬂtLogB
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

2476 
decC⁄ãxt
 *
£t
) {

2477 
I¡
 
´
;

2478 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

2479 i‡(
	`DFISINF
(
df
)) {

2480 
	`DFWORD
(
ªsu…
, 0)=0;

2481  
	`decInföôy
(
ªsu…
,Ñesult);

2483 i‡(
	`DFISZERO
(
df
)) {

2484 
£t
->
°©us
|=
DEC_Divisi⁄_by_zîo
;

2485 
	`DFWORD
(
ªsu…
, 0)=
DECFLOAT_Sign
;

2486  
	`decInföôy
(
ªsu…
,Ñesult);

2488 
´
=
	`GETEXPUN
(
df
)

2489 +
	`decFlﬂtDigôs
(
df
)-1;

2492 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD
;

2493 i‡(
´
<0) {

2494 
	`DFWORD
(
ªsu…
, 0)|=
DECFLOAT_Sign
;

2495 
´
=-ae;

2497 #i‡
DOUBLE


2498 
	`DFWORD
(
ªsu…
, 1)=
BIN2DPD
[
´
];

2499 #ñi‡
QUAD


2500 
	`DFWORD
(
ªsu…
, 1)=0;

2501 
	`DFWORD
(
ªsu…
, 2)=0;

2502 
	`DFWORD
(
ªsu…
, 3)=(
´
/1000)<<10;

2503 
	`DFWORD
(
ªsu…
, 3)|=
BIN2DPD
[
´
%1000];

2505  
ªsu…
;

2506 
	}
}

2519 
decFlﬂt
 * 
	$decFlﬂtMax
(
decFlﬂt
 *
ªsu…
,

2520 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2521 
decC⁄ãxt
 *
£t
) {

2522 
I¡
 
comp
;

2523 i‡(
	`DFISNAN
(
dÊ
)) {

2525 i‡(
	`DFISNAN
(
d‰
Ë|| 
	`DFISSNAN
(
dÊ
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2526  
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2528 i‡(
	`DFISNAN
(
d‰
)) {

2530 i‡(
	`DFISSNAN
(
d‰
)Ë 
	`decNaNs
(
ªsu…
, 
dÊ
, d‰, 
£t
);

2531  
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2535 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 1);

2536 i‡(
comp
>=0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2537  
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2538 
	}
}

2552 
decFlﬂt
 * 
	$decFlﬂtMaxMag
(
decFlﬂt
 *
ªsu…
,

2553 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2554 
decC⁄ãxt
 *
£t
) {

2555 
I¡
 
comp
;

2556 
decFlﬂt
 
ab¶
, 
ab§
;

2557 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decFlﬂtMax
(
ªsu…
, dÊ, d‰, 
£t
);

2559 
	`decFlﬂtC›yAbs
(&
ab¶
, 
dÊ
);

2560 
	`decFlﬂtC›yAbs
(&
ab§
, 
d‰
);

2561 
comp
=
	`decNumCom∑ª
(&
ab¶
, &
ab§
, 0);

2562 i‡(
comp
>0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2563 i‡(
comp
<0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2564  
	`decFlﬂtMax
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
);

2565 
	}
}

2578 
decFlﬂt
 * 
	$decFlﬂtMö
(
decFlﬂt
 *
ªsu…
,

2579 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2580 
decC⁄ãxt
 *
£t
) {

2581 
I¡
 
comp
;

2582 i‡(
	`DFISNAN
(
dÊ
)) {

2584 i‡(
	`DFISNAN
(
d‰
Ë|| 
	`DFISSNAN
(
dÊ
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2585  
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2587 i‡(
	`DFISNAN
(
d‰
)) {

2589 i‡(
	`DFISSNAN
(
d‰
)Ë 
	`decNaNs
(
ªsu…
, 
dÊ
, d‰, 
£t
);

2590  
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2594 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 1);

2595 i‡(
comp
<=0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2596  
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2597 
	}
}

2611 
decFlﬂt
 * 
	$decFlﬂtMöMag
(
decFlﬂt
 *
ªsu…
,

2612 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2613 
decC⁄ãxt
 *
£t
) {

2614 
I¡
 
comp
;

2615 
decFlﬂt
 
ab¶
, 
ab§
;

2616 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decFlﬂtMö
(
ªsu…
, dÊ, d‰, 
£t
);

2618 
	`decFlﬂtC›yAbs
(&
ab¶
, 
dÊ
);

2619 
	`decFlﬂtC›yAbs
(&
ab§
, 
d‰
);

2620 
comp
=
	`decNumCom∑ª
(&
ab¶
, &
ab§
, 0);

2621 i‡(
comp
<0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2622 i‡(
comp
>0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
d‰
);

2623  
	`decFlﬂtMö
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
);

2624 
	}
}

2640 
decFlﬂt
 * 
	$decFlﬂtMöus
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

2641 
decC⁄ãxt
 *
£t
) {

2642 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

2643 
	`decC™⁄iˇl
(
ªsu…
, 
df
);

2644 i‡(
	`DFISZERO
(
df
)Ë
	`DFBYTE
(
ªsu…
, 0)&=~0x80;

2645 
	`DFBYTE
(
ªsu…
, 0)^=0x80;

2646  
ªsu…
;

2647 
	}
}

2659 
decFlﬂt
 * 
	$decFlﬂtMu…ùly
(
decFlﬂt
 *
ªsu…
,

2660 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2661 
decC⁄ãxt
 *
£t
) {

2662 
bcdnum
 
num
;

2663 
uByã
 
bcdacc
[
DECPMAX9
*18+1];

2665 i‡(
	`DFISSPECIAL
(
dÊ
Ë|| DFISSPECIAL(
d‰
)) {

2667 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2669 i‡(
	`DFISINF
(
dÊ
Ë&& 
	`DFISZERO
(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2670 i‡(
	`DFISINF
(
d‰
Ë&& 
	`DFISZERO
(
dÊ
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2672 
	`DFWORD
(
ªsu…
, 0)=DFWORD(
dÊ
, 0)^DFWORD(
d‰
, 0);

2673  
	`decInföôy
(
ªsu…
,Ñesult);

2677 
	`decFöôeMu…ùly
(&
num
, 
bcdacc
, 
dÊ
, 
d‰
);

2678  
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

2679 
	}
}

2692 
decFlﬂt
 * 
	$decFlﬂtNextMöus
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
,

2693 
decC⁄ãxt
 *
£t
) {

2694 
decFlﬂt
 
dñè
;

2695 
uI¡
 
ßve°©
;

2696 
roundög
 
ßvîound
;

2699 i‡(
	`DFISINF
(
dÊ
Ë&& !
	`DFISSIGNED
(dfl)) {

2700 
	`DFSETNMAX
(
ªsu…
);

2701  
ªsu…
;

2708 
	`decFlﬂtZîo
(&
dñè
);

2709 
	`DFWORD
(&
dñè
, 
DECWORDS
-1)=1;

2710 
	`DFWORD
(&
dñè
, 0)=
DECFLOAT_Sign
;

2712 
ßvîound
=
£t
->
round
;

2713 
£t
->
round
=
DEC_ROUND_FLOOR
;

2714 
ßve°©
=
£t
->
°©us
;

2715 
	`decFlﬂtAdd
(
ªsu…
, 
dÊ
, &
dñè
, 
£t
);

2717 i‡(
	`DFISZERO
(
ªsu…
)Ë
	`DFWORD
‘esu…, 0)^=
DECFLOAT_Sign
;

2718 
£t
->
°©us
&=
DEC_InvÆid_›î©i⁄
;

2719 
£t
->
°©us
|=
ßve°©
;

2720 
£t
->
round
=
ßvîound
;

2721  
ªsu…
;

2722 
	}
}

2735 
decFlﬂt
 * 
	$decFlﬂtNextPlus
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
dÊ
,

2736 
decC⁄ãxt
 *
£t
) {

2737 
uI¡
 
ßve°©
;

2738 
roundög
 
ßvîound
;

2739 
decFlﬂt
 
dñè
;

2742 i‡(
	`DFISINF
(
dÊ
Ë&& 
	`DFISSIGNED
(dfl)) {

2743 
	`DFSETNMAX
(
ªsu…
);

2744 
	`DFWORD
(
ªsu…
, 0)|=
DECFLOAT_Sign
;

2745  
ªsu…
;

2752 
	`decFlﬂtZîo
(&
dñè
);

2753 
	`DFWORD
(&
dñè
, 
DECWORDS
-1)=1;

2754 
	`DFWORD
(&
dñè
, 0)=0;

2756 
ßvîound
=
£t
->
round
;

2757 
£t
->
round
=
DEC_ROUND_CEILING
;

2758 
ßve°©
=
£t
->
°©us
;

2759 
	`decFlﬂtAdd
(
ªsu…
, 
dÊ
, &
dñè
, 
£t
);

2761 i‡(
	`DFISZERO
(
ªsu…
)Ë
	`DFWORD
‘esu…, 0)^=
DECFLOAT_Sign
;

2762 
£t
->
°©us
&=
DEC_InvÆid_›î©i⁄
;

2763 
£t
->
°©us
|=
ßve°©
;

2764 
£t
->
round
=
ßvîound
;

2765  
ªsu…
;

2766 
	}
}

2781 
decFlﬂt
 * 
	$decFlﬂtNextTow¨d
(
decFlﬂt
 *
ªsu…
,

2782 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2783 
decC⁄ãxt
 *
£t
) {

2784 
decFlﬂt
 
dñè
;

2785 
decFlﬂt
 
poöt⁄e
;

2786 
uI¡
 
ßve°©
;

2787 
roundög
 
ßvîound
;

2788 
uI¡
 
dñèt›
;

2789 
I¡
 
comp
;

2791 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2793 
comp
=
	`decNumCom∑ª
(
dÊ
, 
d‰
, 0);

2794 i‡(
comp
==0Ë 
	`decFlﬂtC›ySign
(
ªsu…
, 
dÊ
, 
d‰
);

2797 i‡(
comp
<0) {

2798 i‡(
	`DFISINF
(
dÊ
Ë&& 
	`DFISSIGNED
(dfl)) {

2799 
	`DFSETNMAX
(
ªsu…
);

2800 
	`DFWORD
(
ªsu…
, 0)|=
DECFLOAT_Sign
;

2801  
ªsu…
;

2803 
ßvîound
=
£t
->
round
;

2804 
£t
->
round
=
DEC_ROUND_CEILING
;

2805 
dñèt›
=0;

2808 i‡(
	`DFISINF
(
dÊ
Ë&& !
	`DFISSIGNED
(dfl)) {

2809 
	`DFSETNMAX
(
ªsu…
);

2810  
ªsu…
;

2812 
ßvîound
=
£t
->
round
;

2813 
£t
->
round
=
DEC_ROUND_FLOOR
;

2814 
dñèt›
=
DECFLOAT_Sign
;

2816 
ßve°©
=
£t
->
°©us
;

2821 
	`decFlﬂtZîo
(&
dñè
);

2822 
	`DFWORD
(&
dñè
, 
DECWORDS
-1)=1;

2823 
	`DFWORD
(&
dñè
, 0)=
dñèt›
;

2824 
	`decFlﬂtFromSåög
(&
poöt⁄e
, "1E-1", 
£t
);

2825 
	`decFlﬂtFMA
(
ªsu…
, &
dñè
, &
poöt⁄e
, 
dÊ
, 
£t
);

2828 i‡(
	`decFlﬂtIsN‹mÆ
(
ªsu…
)Ë
£t
->
°©us
=
ßve°©
;

2829 
£t
->
round
=
ßvîound
;

2830  
ªsu…
;

2831 
	}
}

2845 
decFlﬂt
 * 
	$decFlﬂtOr
(
decFlﬂt
 *
ªsu…
,

2846 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2847 
decC⁄ãxt
 *
£t
) {

2848 i‡(!
	`DFISUINT01
(
dÊ
Ë|| !DFISUINT01(
d‰
)

2849 || !
	`DFISCC01
(
dÊ
Ë|| !DFISCC01(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2851 #i‡
DOUBLE


2852 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


2853 |((
	`DFWORD
(
dÊ
, 0Ë| DFWORD(
d‰
, 0))&0x04009124);

2854 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë| DFWORD(
d‰
, 1))&0x49124491;

2855 #ñi‡
QUAD


2856 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


2857 |((
	`DFWORD
(
dÊ
, 0Ë| DFWORD(
d‰
, 0))&0x04000912);

2858 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë| DFWORD(
d‰
, 1))&0x44912449;

2859 
	`DFWORD
(
ªsu…
, 2)=(DFWORD(
dÊ
, 2Ë| DFWORD(
d‰
, 2))&0x12449124;

2860 
	`DFWORD
(
ªsu…
, 3)=(DFWORD(
dÊ
, 3Ë| DFWORD(
d‰
, 3))&0x49124491;

2862  
ªsu…
;

2863 
	}
}

2879 
decFlﬂt
 * 
	$decFlﬂtPlus
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

2880 
decC⁄ãxt
 *
£t
) {

2881 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

2882 
	`decC™⁄iˇl
(
ªsu…
, 
df
);

2883 i‡(
	`DFISZERO
(
df
)Ë
	`DFBYTE
(
ªsu…
, 0)&=~0x80;

2884  
ªsu…
;

2885 
	}
}

2899 
decFlﬂt
 * 
	$decFlﬂtQu™tize
(
decFlﬂt
 *
ªsu…
,

2900 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

2901 
decC⁄ãxt
 *
£t
) {

2902 
I¡
 
ex∂b
, 
ex¥b
;

2903 
uByã
 *
ulsd
;

2904 
uByã
 *
ub
, *
uc
;

2905 
I¡
 
dr›
;

2906 
uI¡
 
dpd
;

2907 
uI¡
 
ícode
;

2908 
uI¡
 
sourhû
, 
sourhú
;

2909 
uI¡
 
uiw‹k
;

2910 #i‡
QUAD


2911 
uSh‹t
 
usw‹k
;

2914 
uByã
 
buf
[4+
DECPMAX
*3+2*
QUAD
];

2915 #i‡
DECTRACE


2916 
bcdnum
 
num
;

2920 
sourhû
=
	`DFWORD
(
dÊ
, 0);

2921 
ex∂b
=
DECCOMBEXP
[
sourhû
>>26];

2922 
sourhú
=
	`DFWORD
(
d‰
, 0);

2923 
ex¥b
=
DECCOMBEXP
[
sourhú
>>26];

2925 i‡(
	`EXPISSPECIAL
(
ex∂b
 | 
ex¥b
)) {

2927 i‡(
	`DFISNAN
(
dÊ
Ë|| DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

2929 i‡(
	`DFISINF
(
dÊ
)!=DFISINF(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

2931  
	`decInföôy
(
ªsu…
, 
dÊ
);

2936 
ex∂b
+=
	`GETECON
(
dÊ
);

2937 
ex¥b
+=
	`GETECON
(
d‰
);

2940 
dr›
=
ex¥b
-
ex∂b
;

2941 i‡(
dr›
==0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

2947 
	#BUFOFF
 (
buf
+4+
DECPMAX
)

	)

2948 
	`GETCOEFF
(
dÊ
, 
BUFOFF
);

2951 #i‡
DECTRACE


2952 
num
.
msd
=
BUFOFF
;

2953 
num
.
lsd
=
BUFOFF
+
DECPMAX
-1;

2954 
num
.
exp⁄ít
=
ex∂b
-
DECBIAS
;

2955 
num
.
sign
=
sourhû
 & 
DECFLOAT_Sign
;

2956 
	`decShowNum
(&
num
, "dfl");

2959 i‡(
dr›
>0) {

2963 
uByã
 *
round©
;

2964 
uByã
 
ªround
;

2970 
	`UBFROMUI
(
BUFOFF
-4, 0);

2981 i‡(
dr›
<
DECPMAX
) {

2982 
round©
=
BUFOFF
+
DECPMAX
-
dr›
;

2983 
ªround
=*
round©
;

2984 
ub
=
round©
+1; ub<
BUFOFF
+
DECPMAX
; ub++) {

2985 i‡(*
ub
!=0) {

2986 
ªround
=
DECSTICKYTAB
[reround];

2990 
ulsd
=
round©
-1;

2993 i‡(
dr›
==
DECPMAX
) {

2994 
round©
=
BUFOFF
;

2995 
ªround
=*
round©
;

2998 
round©
=
BUFOFF
-1;

2999 
ªround
=0;

3001 
ub
=
round©
+1; ub<
BUFOFF
+
DECPMAX
; ub++) {

3002 i‡(*
ub
!=0) {

3003 
ªround
=
DECSTICKYTAB
[reround];

3007 *
BUFOFF
=0;

3008 
ulsd
=
BUFOFF
;

3011 i‡(
ªround
!=0) {

3012 
uI¡
 
bump
=0;

3013 
£t
->
°©us
|=
DEC_I√xa˘
;

3016 i‡(
£t
->
round
==
DEC_ROUND_HALF_EVEN
) {

3017 i‡(
ªround
>5Ë
bump
=1;

3018 i‡(
ªround
==5)

3019 
bump
=*
ulsd
 & 0x01;

3021 
£t
->
round
) {

3022 
DEC_ROUND_DOWN
: {

3025 
DEC_ROUND_HALF_DOWN
: {

3026 i‡(
ªround
>5Ë
bump
=1;

3028 
DEC_ROUND_HALF_UP
: {

3029 i‡(
ªround
>=5Ë
bump
=1;

3031 
DEC_ROUND_UP
: {

3032 i‡(
ªround
>0Ë
bump
=1;

3034 
DEC_ROUND_CEILING
: {

3036 i‡(!(
sourhû
&
DECFLOAT_Sign
Ë&& 
ªround
>0Ë
bump
=1;

3038 
DEC_ROUND_FLOOR
: {

3041 i‡(
sourhû
&
DECFLOAT_Sign
 && 
ªround
>0Ë
bump
=1;

3043 
DEC_ROUND_05UP
: {

3044 i‡(
ªround
>0) {

3048 i‡(*
ulsd
==0 || *ulsd==5Ë
bump
=1;

3052 
£t
->
°©us
|=
DEC_InvÆid_c⁄ãxt
;

3053 #i‡
DECCHECK


3054 
	`¥ötf
("Unknow¿roundög mode: %ld\n", (
LI
)
£t
->
round
);

3060 i‡(
bump
!=0) {

3063 
ub
=
ulsd
;

3064 ; 
	`UBTOUI
(
ub
-3)==0x09090909; ub-=4Ë
	`UBFROMUI
(ub-3, 0);

3066 ; *
ub
==9; ub--) *ub=0;

3067 *
ub
+=1;

3076 i‡(
dr›
>4) {

3077 
	`UBFROMUI
(
BUFOFF
-8, 0);

3078 
uc
=
BUFOFF
-12; uc>
ulsd
-
DECPMAX
-3; uc-=4Ë
	`UBFROMUI
(uc, 0);

3087 i‡(-
dr›
>
DECPMAX
-1) {

3088 i‡(!
	`ISCOEFFZERO
(
BUFOFF
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

3090 
ulsd
=
BUFOFF
+
DECPMAX
-1;

3094 #i‡
DECLITEND


3095 c⁄° 
uI¡
 
dmask
[]={0, 0x000000ff, 0x0000ffff, 0x00ffffff};

3097 c⁄° 
uI¡
 
dmask
[]={0, 0xff000000, 0xffff0000, 0xffffff00};

3102 
uc
=
BUFOFF
+
DECPMAX
;; uc+=4) {

3103 
	`UBFROMUI
(
uc
, 0);

3104 i‡(
	`UBTOUI
(
uc
-
DECPMAX
)!=0) {

3106 i‡(
uc
<=
BUFOFF
+
DECPMAX
+(-
dr›
)-4)

3107  
	`decInvÆid
(
ªsu…
, 
£t
);

3109 i‡((
	`UBTOUI
(
uc
-
DECPMAX
)&
dmask
[(-
dr›
)%4])!=0)

3110  
	`decInvÆid
(
ªsu…
, 
£t
);

3113 i‡(
uc
>=
BUFOFF
+
DECPMAX
+(-
dr›
)-4) ;

3115 
ulsd
=
BUFOFF
+
DECPMAX
+(-
dr›
)-1;

3119 #i‡
DECTRACE


3120 
num
.
msd
=
ulsd
-
DECPMAX
+1;

3121 
num
.
lsd
=
ulsd
;

3122 
num
.
exp⁄ít
=
ex∂b
-
DECBIAS
;

3123 
num
.
sign
=
sourhû
 & 
DECFLOAT_Sign
;

3124 
	`decShowNum
(&
num
, "res");

3131 
ícode
=((
ex¥b
>>
DECECONL
)<<4Ë+ *(
ulsd
-
DECPMAX
+1);

3132 
ícode
=
DECCOMBFROM
[encode];

3134 
ícode
|=
sourhú
 & 
ECONMASK
;

3135 
ícode
|=
sourhû
&
DECFLOAT_Sign
;

3140 
	#gëDPD3q
(
dpd
, 
n
Ë
ub
=
ulsd
-(3*“))-2; \

	)

3141 
dpd
=
BCD2DPD
[(*
ub
*256)+(*(ub+1)*16)+*(ub+2)];

3143 #i‡
DOUBLE


3144 
	`gëDPD3q
(
dpd
, 4); 
ícode
|=dpd<<8;

3145 
	`gëDPD3q
(
dpd
, 3); 
ícode
|=dpd>>2;

3146 
	`DFWORD
(
ªsu…
, 0)=
ícode
;

3147 
ícode
=
dpd
<<30;

3148 
	`gëDPD3q
(
dpd
, 2); 
ícode
|=dpd<<20;

3149 
	`gëDPD3q
(
dpd
, 1); 
ícode
|=dpd<<10;

3150 
	`gëDPD3q
(
dpd
, 0); 
ícode
|=dpd;

3151 
	`DFWORD
(
ªsu…
, 1)=
ícode
;

3153 #ñi‡
QUAD


3154 
	`gëDPD3q
(
dpd
,10); 
ícode
|=dpd<<4;

3155 
	`gëDPD3q
(
dpd
, 9); 
ícode
|=dpd>>6;

3156 
	`DFWORD
(
ªsu…
, 0)=
ícode
;

3157 
ícode
=
dpd
<<26;

3158 
	`gëDPD3q
(
dpd
, 8); 
ícode
|=dpd<<16;

3159 
	`gëDPD3q
(
dpd
, 7); 
ícode
|=dpd<<6;

3160 
	`gëDPD3q
(
dpd
, 6); 
ícode
|=dpd>>4;

3161 
	`DFWORD
(
ªsu…
, 1)=
ícode
;

3162 
ícode
=
dpd
<<28;

3163 
	`gëDPD3q
(
dpd
, 5); 
ícode
|=dpd<<18;

3164 
	`gëDPD3q
(
dpd
, 4); 
ícode
|=dpd<<8;

3165 
	`gëDPD3q
(
dpd
, 3); 
ícode
|=dpd>>2;

3166 
	`DFWORD
(
ªsu…
, 2)=
ícode
;

3167 
ícode
=
dpd
<<30;

3168 
	`gëDPD3q
(
dpd
, 2); 
ícode
|=dpd<<20;

3169 
	`gëDPD3q
(
dpd
, 1); 
ícode
|=dpd<<10;

3170 
	`gëDPD3q
(
dpd
, 0); 
ícode
|=dpd;

3171 
	`DFWORD
(
ªsu…
, 3)=
ícode
;

3173  
ªsu…
;

3174 
	}
}

3189 
decFlﬂt
 * 
	$decFlﬂtRedu˚
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

3190 
decC⁄ãxt
 *
£t
) {

3191 
bcdnum
 
num
;

3192 
uByã
 
buf
[
DECPMAX
], *
ub
;

3193 i‡(
df
!=
ªsu…
) *result=*df;

3194 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

3196 i‡(
	`DFISINF
(
df
)Ë 
	`decInföôy
(
ªsu…
, df);

3197 i‡(
	`DFISZERO
(
df
)) {

3198 
uI¡
 
sign
=
	`DFWORD
(
df
, 0)&
DECFLOAT_Sign
;

3199 
	`decFlﬂtZîo
(
ªsu…
);

3200 
	`DFWORD
(
ªsu…
, 0)|=
sign
;

3201  
ªsu…
;

3204 
	`GETCOEFF
(
df
, 
buf
);

3205 
ub
=
buf
+
DECPMAX
-1;

3206 i‡(*
ub
Ë 
ªsu…
;

3207 
ub
--; *ub==0;) ub--;

3209 
num
.
sign
=
	`DFWORD
(
df
, 0)&
DECFLOAT_Sign
;

3210 
num
.
exp⁄ít
=
	`GETEXPUN
(
df
)+(
I¡
)(
buf
+
DECPMAX
-1-
ub
);

3211 
num
.
msd
=
buf
;

3212 
num
.
lsd
=
ub
;

3213  
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

3214 
	}
}

3226 
decFlﬂt
 * 
	$decFlﬂtRemaödî
(
decFlﬂt
 *
ªsu…
,

3227 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3228 
decC⁄ãxt
 *
£t
) {

3229  
	`decDivide
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
, 
REMAINDER
);

3230 
	}
}

3243 
decFlﬂt
 * 
	$decFlﬂtRemaödîNór
(
decFlﬂt
 *
ªsu…
,

3244 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3245 
decC⁄ãxt
 *
£t
) {

3246  
	`decDivide
(
ªsu…
, 
dÊ
, 
d‰
, 
£t
, 
REMNEAR
);

3247 
	}
}

3267 
	#PHALF
 (
	`ROUNDUP
(
DECPMAX
/2, 4))

3268 
decFlﬂt
 * 
	`decFlﬂtRŸ©e
(decFlﬂà*
ªsu…
,

	)

3269 c⁄° 
decFlﬂt
 *
	gdÊ
, c⁄° decFlﬂà*
	gd‰
,

3270 
decC⁄ãxt
 *
	g£t
) {

3271 
I¡
 
	grŸ©e
;

3272 
uByã
 
	gbuf
[
DECPMAX
+
PHALF
];

3273 
uI¡
 
	gdigôs
, 
	gßve°©
;

3274 
bcdnum
 
	gnum
;

3275 
uByã
 *
	gub
;

3277 i‡(
DFISNAN
(
dÊ
)||DFISNAN(
d‰
)Ë 
decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

3278 i‡(!
DFISINT
(
d‰
)Ë 
decInvÆid
(
ªsu…
, 
£t
);

3279 
	gdigôs
=
decFlﬂtDigôs
(
d‰
);

3280 i‡(
	gdigôs
>2Ë 
decInvÆid
(
ªsu…
, 
£t
);

3281 
	grŸ©e
=
DPD2BIN
[
DFWORD
(
d‰
, 
DECWORDS
-1)&0x3ff];

3282 i‡(
	grŸ©e
>
	gDECPMAX
Ë 
decInvÆid
(
ªsu…
, 
£t
);

3284 i‡(
DFISINF
(
dÊ
)Ë 
decInföôy
(
ªsu…
, dfl);

3286 i‡(
	grŸ©e
==0 || 
rŸ©e
==
DECPMAX
Ë 
decC™⁄iˇl
(
ªsu…
, 
dÊ
);

3290 i‡(
DFISSIGNED
(
d‰
)Ë
	grŸ©e
=-
rŸ©e
;

3291 i‡(
abs
(
rŸ©e
)>
	gPHALF
) {

3292 i‡(
	grŸ©e
<0ËrŸ©e=
DECPMAX
+
rŸ©e
;

3293 
	grŸ©e
=
rŸ©e
-
DECPMAX
;

3297 
	gub
=
buf
;

3298 i‡(
	grŸ©e
<0Ë
	gub
+=
PHALF
;

3299 
GETCOEFF
(
dÊ
, 
ub
);

3301 i‡(
	grŸ©e
<0) {

3302 
mem˝y
(
buf
, buf+
DECPMAX
, 
PHALF
);

3303 
	gnum
.
	gmsd
=
buf
+
PHALF
+
rŸ©e
;

3306 
mem˝y
(
buf
+
DECPMAX
, buf, 
PHALF
);

3307 
	gnum
.
	gmsd
=
buf
+
rŸ©e
;

3310 
	gnum
.
	glsd
=
num
.
msd
+
DECPMAX
-1;

3311 
	gnum
.
	gsign
=
DFWORD
(
dÊ
, 0)&
	gDECFLOAT_Sign
;

3312 
	gnum
.
	gexp⁄ít
=
GETEXPUN
(
dÊ
);

3313 
	gßve°©
=
£t
->
°©us
;

3314 
decFöÆize
(
ªsu…
, &
num
, 
£t
);

3315 
	g£t
->
	g°©us
=
ßve°©
;

3316  
	gªsu…
;

3328 
uI¡
 
	$decFlﬂtSameQu™tum
(c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
) {

3329 i‡(
	`DFISSPECIAL
(
dÊ
Ë|| DFISSPECIAL(
d‰
)) {

3330 i‡(
	`DFISNAN
(
dÊ
Ë&& DFISNAN(
d‰
))  1;

3331 i‡(
	`DFISINF
(
dÊ
Ë&& DFISINF(
d‰
))  1;

3334 i‡(
	`GETEXP
(
dÊ
)==GETEXP(
d‰
))  1;

3336 
	}
}

3352 
	#SCALEBMAX
 2*(
DECEMAX
+
DECPMAX
)

3353 
decFlﬂt
 * 
	`decFlﬂtSˇÀB
(decFlﬂà*
ªsu…
,

	)

3354 c⁄° 
decFlﬂt
 *
	gdÊ
, c⁄° decFlﬂà*
	gd‰
,

3355 
decC⁄ãxt
 *
	g£t
) {

3356 
uI¡
 
	gdigôs
;

3357 
I¡
 
	gex¥
;

3359 i‡(
DFISNAN
(
dÊ
)||DFISNAN(
d‰
)Ë 
decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

3360 i‡(!
DFISINT
(
d‰
)Ë 
decInvÆid
(
ªsu…
, 
£t
);

3361 
	gdigôs
=
decFlﬂtDigôs
(
d‰
);

3363 #i‡
DOUBLE


3364 i‡(
	gdigôs
>3Ë 
decInvÆid
(
ªsu…
, 
£t
);

3365 
	gex¥
=
DPD2BIN
[
DFWORD
(
d‰
, 1)&0x3ff];

3366 #ñi‡
QUAD


3367 i‡(
	gdigôs
>5Ë 
decInvÆid
(
ªsu…
, 
£t
);

3368 
	gex¥
=
DPD2BIN
[
DFWORD
(
d‰
, 3)&0x3ff]

3369 +
	gDPD2BIN
[(
DFWORD
(
d‰
, 3)>>10)&0x3ff]*1000;

3371 i‡(
	gex¥
>
	gSCALEBMAX
Ë 
decInvÆid
(
ªsu…
, 
£t
);

3373 i‡(
DFISINF
(
dÊ
)Ë 
decInföôy
(
ªsu…
, dfl);

3374 i‡(
DFISSIGNED
(
d‰
)Ë
	gex¥
=-
ex¥
;

3376 *
	gªsu…
=*
dÊ
;

3377  
decFlﬂtSëExp⁄ít
(
ªsu…
, 
£t
, 
GETEXPUN
‘esu…)+
ex¥
);

3398 
decFlﬂt
 * 
	$decFlﬂtShi·
(
decFlﬂt
 *
ªsu…
,

3399 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3400 
decC⁄ãxt
 *
£t
) {

3401 
I¡
 
shi·
;

3402 
uByã
 
buf
[
DECPMAX
*2];

3403 
uI¡
 
digôs
, 
ßve°©
;

3404 
bcdnum
 
num
;

3405 
uI¡
 
uiw‹k
;

3407 i‡(
	`DFISNAN
(
dÊ
)||DFISNAN(
d‰
)Ë 
	`decNaNs
(
ªsu…
, dÊ, d‰, 
£t
);

3408 i‡(!
	`DFISINT
(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

3409 
digôs
=
	`decFlﬂtDigôs
(
d‰
);

3410 i‡(
digôs
>2Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

3411 
shi·
=
DPD2BIN
[
	`DFWORD
(
d‰
, 
DECWORDS
-1)&0x3ff];

3412 i‡(
shi·
>
DECPMAX
Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

3415 i‡(
	`DFISINF
(
dÊ
)Ë 
	`decInföôy
(
ªsu…
, dfl);

3417 i‡(
shi·
==0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

3418 i‡(
shi·
==
DECPMAX
) {

3419 
uByã
 
sign
=(uByã)(
	`DFBYTE
(
dÊ
, 0)&0x80);

3420 
	`decFlﬂtZîo
(
ªsu…
);

3421 
	`DFBYTE
(
ªsu…
, 0)=(
uByã
)(DFBYTE‘esu…, 0)|
sign
);

3423  
ªsu…
;

3426 
num
.
sign
=
	`DFWORD
(
dÊ
, 0)&
DECFLOAT_Sign
;

3427 
num
.
exp⁄ít
=
	`GETEXPUN
(
dÊ
);

3428 
num
.
msd
=
buf
;

3429 
	`GETCOEFF
(
dÊ
, 
buf
);

3430 i‡(
	`DFISSIGNED
(
d‰
)) {

3432 
num
.
lsd
=
buf
+
DECPMAX
-
shi·
-1;

3435 
	`UBFROMUI
(
buf
+
DECPMAX
, 0);

3436 
	`UBFROMUI
(
buf
+
DECPMAX
+4, 0);

3437 i‡(
shi·
>8Ë
	`mem£t
(
buf
+
DECPMAX
+8, 0, 8+
QUAD
*18);

3438 
num
.
msd
+=
shi·
;

3439 
num
.
lsd
Úum.
msd
+
DECPMAX
-1;

3441 
ßve°©
=
£t
->
°©us
;

3442 
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

3443 
£t
->
°©us
=
ßve°©
;

3444  
ªsu…
;

3445 
	}
}

3457 
decFlﬂt
 * 
	$decFlﬂtSubåa˘
(
decFlﬂt
 *
ªsu…
,

3458 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3459 
decC⁄ãxt
 *
£t
) {

3460 
decFlﬂt
 
ãmp
;

3462 i‡(
	`DFISNAN
(
d‰
)Ë 
	`decFlﬂtAdd
(
ªsu…
, 
dÊ
, d‰, 
£t
);

3463 
ãmp
=*
d‰
;

3464 
	`DFBYTE
(&
ãmp
, 0)^=0x80;

3465  
	`decFlﬂtAdd
(
ªsu…
, 
dÊ
, &
ãmp
, 
£t
);

3466 
	}
}

3480 
uI¡
 
	$decFlﬂtToUI¡32
(c⁄° 
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
,

3481 
roundög
 
round
) {

3482  
	`decToI¡32
(
df
, 
£t
, 
round
, 0, 1);
	}
}

3484 
uI¡
 
	$decFlﬂtToUI¡32Exa˘
(c⁄° 
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
,

3485 
roundög
 
round
) {

3486  
	`decToI¡32
(
df
, 
£t
, 
round
, 1, 1);
	}
}

3488 
I¡
 
	$decFlﬂtToI¡32
(c⁄° 
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
,

3489 
roundög
 
round
) {

3490  (
I¡
)
	`decToI¡32
(
df
, 
£t
, 
round
, 0, 0);
	}
}

3492 
I¡
 
	$decFlﬂtToI¡32Exa˘
(c⁄° 
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
,

3493 
roundög
 
round
) {

3494  (
I¡
)
	`decToI¡32
(
df
, 
£t
, 
round
, 1, 0);
	}
}

3508 
decFlﬂt
 * 
	$decFlﬂtToI¡egølVÆue
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

3509 
decC⁄ãxt
 *
£t
, 
roundög
 
round
) {

3510  
	`decToI¡egøl
(
ªsu…
, 
df
, 
£t
, 
round
, 0);
	}
}

3512 
decFlﬂt
 * 
	$decFlﬂtToI¡egølExa˘
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

3513 
decC⁄ãxt
 *
£t
) {

3514  
	`decToI¡egøl
(
ªsu…
, 
df
, 
£t
, së->
round
, 1);
	}
}

3528 
decFlﬂt
 * 
	$decFlﬂtX‹
(
decFlﬂt
 *
ªsu…
,

3529 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3530 
decC⁄ãxt
 *
£t
) {

3531 i‡(!
	`DFISUINT01
(
dÊ
Ë|| !DFISUINT01(
d‰
)

3532 || !
	`DFISCC01
(
dÊ
Ë|| !DFISCC01(
d‰
)Ë 
	`decInvÆid
(
ªsu…
, 
£t
);

3534 #i‡
DOUBLE


3535 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


3536 |((
	`DFWORD
(
dÊ
, 0Ë^ DFWORD(
d‰
, 0))&0x04009124);

3537 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë^ DFWORD(
d‰
, 1))&0x49124491;

3538 #ñi‡
QUAD


3539 
	`DFWORD
(
ªsu…
, 0)=
ZEROWORD


3540 |((
	`DFWORD
(
dÊ
, 0Ë^ DFWORD(
d‰
, 0))&0x04000912);

3541 
	`DFWORD
(
ªsu…
, 1)=(DFWORD(
dÊ
, 1Ë^ DFWORD(
d‰
, 1))&0x44912449;

3542 
	`DFWORD
(
ªsu…
, 2)=(DFWORD(
dÊ
, 2Ë^ DFWORD(
d‰
, 2))&0x12449124;

3543 
	`DFWORD
(
ªsu…
, 3)=(DFWORD(
dÊ
, 3Ë^ DFWORD(
d‰
, 3))&0x49124491;

3545  
ªsu…
;

3546 
	}
}

3557 
decFlﬂt
 *
	$decInvÆid
(
decFlﬂt
 *
ªsu…
, 
decC⁄ãxt
 *
£t
) {

3558 
	`decFlﬂtZîo
(
ªsu…
);

3559 
	`DFWORD
(
ªsu…
, 0)=
DECFLOAT_qNaN
;

3560 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3561  
ªsu…
;

3562 
	}
}

3573 
decFlﬂt
 *
	$decInföôy
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
) {

3574 
uI¡
 
sign
=
	`DFWORD
(
df
, 0);

3575 
	`decFlﬂtZîo
(
ªsu…
);

3576 
	`DFWORD
(
ªsu…
, 0)=
DECFLOAT_Inf
 | (
sign
 & 
DECFLOAT_Sign
);

3577  
ªsu…
;

3578 
	}
}

3595 
decFlﬂt
 *
	$decNaNs
(
decFlﬂt
 *
ªsu…
,

3596 c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
,

3597 
decC⁄ãxt
 *
£t
) {

3599 i‡(
d‰
!=
NULL
 && 
	`DFISSNAN
(d‰Ë&& !DFISSNAN(
dÊ
)) dfl=dfr;

3600 i‡(
	`DFISSNAN
(
dÊ
)) {

3601 
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

3602 
	`DFWORD
(
ªsu…
, 0)&=~(
DECFLOAT_qNaN
 ^ 
DECFLOAT_sNaN
);

3603 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3604  
ªsu…
;

3607 i‡(!
	`DFISNAN
(
dÊ
)ËdÊ=
d‰
;

3608  
	`decC™⁄iˇl
(
ªsu…
, 
dÊ
);

3609 
	}
}

3621 
I¡
 
	$decNumCom∑ª
(c⁄° 
decFlﬂt
 *
dÊ
, c⁄° decFlﬂà*
d‰
, 
Fœg
 
tŸ
) {

3622 
I¡
 
sigl
, 
sigr
;

3623 
I¡
 
shi·
;

3624 
uByã
 *
ub
, *
uc
;

3625 
uI¡
 
uiw‹k
;

3627 
uByã
 
buÊ
[
DECPMAX
*2+
QUAD
*2+4];

3628 
uByã
 
bu‰
[
DECPMAX
*2+
QUAD
*2+4];

3630 
sigl
=1;

3631 i‡(
	`DFISSIGNED
(
dÊ
)) {

3632 i‡(!
	`DFISSIGNED
(
d‰
)) {

3633 i‡(
	`DFISZERO
(
dÊ
Ë&& DFISZERO(
d‰
Ë&& !
tŸ
)  0;

3636 
sigl
=-1;

3638 i‡(
	`DFISSIGNED
(
d‰
)) {

3639 i‡(!
	`DFISSIGNED
(
dÊ
)) {

3640 i‡(
	`DFISZERO
(
dÊ
Ë&& DFISZERO(
d‰
Ë&& !
tŸ
)  0;

3646 
sigr
=-
sigl
;

3648 i‡(
	`DFISINF
(
dÊ
)) {

3649 i‡(
	`DFISINF
(
d‰
))  0;

3650  
sigl
;

3652 i‡(
	`DFISINF
(
d‰
)Ë 
sigr
;

3655 
shi·
=
	`GETEXP
(
dÊ
)-GETEXP(
d‰
);

3658 i‡(
	`DFISZERO
(
dÊ
)) {

3659 i‡(!
	`DFISZERO
(
d‰
)Ë 
sigr
;

3661 i‡(
shi·
==0 || !
tŸ
)  0;

3662 i‡(
shi·
>0Ë 
sigl
;

3663  
sigr
;

3666 i‡(
	`DFISZERO
(
d‰
)Ë 
sigl
;

3672 i‡(
	`abs
(
shi·
)>=
DECPMAX
) {

3674 i‡(
shi·
>0Ë 
sigl
;

3675  
sigr
;

3680 #i‡
QUAD


3681 
	`UBFROMUI
(
buÊ
, 0);

3682 
	`UBFROMUI
(
bu‰
, 0);

3684 
	`GETCOEFF
(
dÊ
, 
buÊ
+
QUAD
*2);

3685 
	`GETCOEFF
(
d‰
, 
bu‰
+
QUAD
*2);

3686 i‡(
shi·
==0) {

3688 
ub
=
buÊ
, 
uc
=
bu‰
; ub<buÊ+
DECPMAX
+
QUAD
*2; ub+=4, uc+=4) {

3689 
uI¡
 
ui
=
	`UBTOUI
(
ub
);

3690 i‡(
ui
==
	`UBTOUI
(
uc
)) ;

3692 ;; 
ub
++, 
uc
++) {

3693 i‡(*
ub
>*
uc
Ë 
sigl
;

3694 i‡(*
ub
<*
uc
Ë 
sigr
;

3698 i‡(
shi·
>0) {

3699 
ub
=
buÊ
;

3701 
	`UBFROMUI
(
buÊ
+
DECPMAX
+
QUAD
*2, 0);

3702 
	`UBFROMUI
(
buÊ
+
DECPMAX
+
QUAD
*2+4, 0);

3703 i‡(
shi·
>8) {

3706 
uByã
 *
up
;

3707 
uByã
 *
u≥nd
=
buÊ
+
DECPMAX
+
QUAD
*2+
shi·
;

3708 
up
=
buÊ
+
DECPMAX
+
QUAD
*2+8; up<
u≥nd
; up+=4Ë
	`UBFROMUI
(up, 0);

3710 ;; 
ub
+=4) {

3711 i‡(
	`UBTOUI
(
ub
)!=0Ë 
sigl
;

3712 i‡(
ub
+4>
buÊ
+
shi·
-4) ;

3716 ; 
ub
<
buÊ
+
shi·
; ub++Ëi‡(*ub!=0Ë 
sigl
;

3720 
uc
=
bu‰
; ; uc+=4, 
ub
+=4) {

3721 
uI¡
 
ui
=
	`UBTOUI
(
ub
);

3722 i‡(
ui
!=
	`UBTOUI
(
uc
)) {

3723 ;; 
uc
++, 
ub
++) {

3724 i‡(*
ub
>*
uc
Ë 
sigl
;

3725 i‡(*
ub
<*
uc
Ë 
sigr
;

3728 i‡(
uc
==
bu‰
+
QUAD
*2+
DECPMAX
-4) ;

3733 
uc
=
bu‰
;

3735 
	`UBFROMUI
(
bu‰
+
DECPMAX
+
QUAD
*2, 0);

3736 
	`UBFROMUI
(
bu‰
+
DECPMAX
+
QUAD
*2+4, 0);

3737 i‡(
shi·
<-8) {

3740 
uByã
 *
up
;

3741 
uByã
 *
u≥nd
=
bu‰
+
DECPMAX
+
QUAD
*2-
shi·
;

3742 
up
=
bu‰
+
DECPMAX
+
QUAD
*2+8; up<
u≥nd
; up+=4Ë
	`UBFROMUI
(up, 0);

3744 ;; 
uc
+=4) {

3745 i‡(
	`UBTOUI
(
uc
)!=0Ë 
sigr
;

3746 i‡(
uc
+4>
bu‰
-
shi·
-4) ;

3750 ; 
uc
<
bu‰
-
shi·
; uc++Ëi‡(*uc!=0Ë 
sigr
;

3754 
ub
=
buÊ
; ; ub+=4, 
uc
+=4) {

3755 
uI¡
 
ui
=
	`UBTOUI
(
ub
);

3756 i‡(
ui
!=
	`UBTOUI
(
uc
)) {

3757 ;; 
ub
++, 
uc
++) {

3758 i‡(*
ub
>*
uc
Ë 
sigl
;

3759 i‡(*
ub
<*
uc
Ë 
sigr
;

3762 i‡(
ub
==
buÊ
+
QUAD
*2+
DECPMAX
-4) ;

3767 i‡(!
tŸ
)  0;

3769 i‡(
shi·
>0Ë 
sigl
;

3770 i‡(
shi·
<0Ë 
sigr
;

3772 
	}
}

3787 
uI¡
 
	$decToI¡32
(c⁄° 
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
,

3788 
roundög
 
rmode
, 
Fœg
 
exa˘
, Fœg 
unsign
) {

3789 
I¡
 
exp
;

3790 
uI¡
 
sourhi
, 
souΩí
, 
souæo
;

3791 
uI¡
 
hi
, 
lo
;

3792 
decFlﬂt
 
zîo
, 
ªsu…
;

3793 
I¡
 
i
;

3796 
sourhi
=
	`DFWORD
(
df
, 0);

3797 
exp
=
DECCOMBEXP
[
sourhi
>>26];

3798 i‡(
	`EXPISSPECIAL
(
exp
)) {

3799 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3804 i‡(
	`GETEXPUN
(
df
)==0Ë
ªsu…
=*df;

3806 
roundög
 
ßvîound
;

3807 
uI¡
 
ßve°©us
;

3808 
ßvîound
=
£t
->
round
;

3809 
ßve°©us
=
£t
->
°©us
;

3810 
£t
->
round
=
rmode
;

3811 
	`decFlﬂtZîo
(&
zîo
);

3812 
£t
->
°©us
=0;

3813 
	`decFlﬂtQu™tize
(&
ªsu…
, 
df
, &
zîo
, 
£t
);

3814 
£t
->
round
=
ßvîound
;

3815 i‡(
exa˘
Ë
£t
->
°©us
|=
ßve°©us
;

3816 
£t
->
°©us
=
ßve°©us
;

3823 #i‡
DOUBLE


3824 i‡((
	`DFWORD
(&
ªsu…
, 0)&0x1c03ff00)!=0

3825 || (
	`DFWORD
(&
ªsu…
, 0)&0x60000000)==0x60000000) {

3826 #ñi‡
QUAD


3827 i‡((
	`DFWORD
(&
ªsu…
, 2)&0xffffff00)!=0

3828 || 
	`DFWORD
(&
ªsu…
, 1)!=0

3829 || (
	`DFWORD
(&
ªsu…
, 0)&0x1c003fff)!=0

3830 || (
	`DFWORD
(&
ªsu…
, 0)&0x60000000)==0x60000000) {

3832 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3837 
souæo
=
	`DFWORD
(&
ªsu…
, 
DECWORDS
-1);

3838 
lo
=
DPD2BIN0
[
souæo
&0x3ff]

3839 +
DPD2BINK
[(
souæo
>>10)&0x3ff]

3840 +
DPD2BINM
[(
souæo
>>20)&0x3ff];

3841 
souΩí
=
	`DFWORD
(&
ªsu…
, 
DECWORDS
-2);

3842 
hi
=
DPD2BIN0
[((
souΩí
<<2Ë| (
souæo
>>30))&0x3ff];

3845 i‡(
unsign
) {

3846 i‡(
hi
>4 || (hi==4 && 
lo
>294967295Ë|| (hi+lo!=0 && 
	`DFISSIGNED
(&
ªsu…
))) {

3847 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3850  
hi
*
BILLION
+
lo
;

3853 i‡(
hi
>2 || (hi==2 && 
lo
>147483647)) {

3855 i‡(
lo
==147483648 && 
hi
==2 && 
	`DFISSIGNED
(&
ªsu…
))  0x80000000;

3856 
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

3859 
i
=
hi
*
BILLION
+
lo
;

3860 i‡(
	`DFISSIGNED
(&
ªsu…
)Ë
i
=-i;

3861  (
uI¡
)
i
;

3862 
	}
}

3874 
decFlﬂt
 * 
	$decToI¡egøl
(
decFlﬂt
 *
ªsu…
, c⁄° decFlﬂà*
df
,

3875 
decC⁄ãxt
 *
£t
, 
roundög
 
rmode
,

3876 
Fœg
 
exa˘
) {

3877 
I¡
 
exp
;

3878 
uI¡
 
sourhi
;

3879 
roundög
 
ßvîound
;

3880 
uI¡
 
ßve°©us
;

3881 
decFlﬂt
 
zîo
;

3884 
sourhi
=
	`DFWORD
(
df
, 0);

3885 
exp
=
DECCOMBEXP
[
sourhi
>>26];

3887 i‡(
	`EXPISSPECIAL
(
exp
)) {

3889 i‡(
	`DFISNAN
(
df
)Ë 
	`decNaNs
(
ªsu…
, df, 
NULL
, 
£t
);

3891  
	`decInföôy
(
ªsu…
, 
df
);

3896 
exp
+=
	`GETECON
(
df
)-
DECBIAS
;

3898 i‡(
exp
>=0Ë 
	`decC™⁄iˇl
(
ªsu…
, 
df
);

3900 
ßvîound
=
£t
->
round
;

3901 
ßve°©us
=
£t
->
°©us
;

3902 
£t
->
round
=
rmode
;

3903 
	`decFlﬂtZîo
(&
zîo
);

3904 
	`decFlﬂtQu™tize
(
ªsu…
, 
df
, &
zîo
, 
£t
);

3905 
£t
->
round
=
ßvîound
;

3906 i‡(!
exa˘
Ë
£t
->
°©us
=
ßve°©us
;

3907  
ªsu…
;

3908 
	}
}

	@src/decNumber/decCommon.c

39 #i‡
DECPMAX
==7

40 
	#SINGLE
 1

	)

41 
	#DOUBLE
 0

	)

42 
	#QUAD
 0

	)

43 
	#DEFCONTEXT
 
DEC_INIT_DECIMAL32


	)

44 #ñi‡
DECPMAX
==16

45 
	#SINGLE
 0

	)

46 
	#DOUBLE
 1

	)

47 
	#QUAD
 0

	)

48 
	#DEFCONTEXT
 
DEC_INIT_DECIMAL64


	)

49 #ñi‡
DECPMAX
==34

50 
	#SINGLE
 0

	)

51 
	#DOUBLE
 0

	)

52 
	#QUAD
 1

	)

53 
	#DEFCONTEXT
 
DEC_INIT_DECIMAL128


	)

55 #îr‹ 
U√x≥˘ed
 
DECPMAX
 
vÆue


60 #i‡
DECPMAX
!=7 && DECPMAX!=16 && DECPMAX!=34

61 #îr‹ 
U√x≥˘ed
 
Pmax
 (
DECPMAX
Ë
vÆue
 
this
 
moduÀ


66 #îr‹ 
This
 
moduÀ
 
assumes
 
ch¨a˘îs
 
¨e
 
of
 
the
 
f‹m
 0b....
¬¬


70 #îr‹ 
This
 
moduÀ
 
assumes
 '.' 
has
 
a
 
dif„ª¡
 
mask
 
th™
á 
digô


74 #i‡
DECSTRING
<
DECPMAX
+9

75 #îr‹ 
ToSåög
 
√eds
 
©
 
Àa°
 8 
ch¨a˘îs
 
Àad
-
ö
 
™d
 
dŸ


77 #i‡
DECPMAX
+
DECEMAXD
+5 > 
DECSTRING


78 #îr‹ 
Exp⁄ít
 
f‹m
 
ˇn
 
be
 
too
 
ToSåög
 
to
 
œy
 
out
 
ß„ly


80 #i‡
DECEMAXD
 > 4

81 #îr‹ 
Exp⁄ít
 
f‹m
 
is
 
too
 
ToSåög
 
to
 
œy
 
out


86 
decFlﬂt
 * 
decFöÆize
(decFlﬂà*, 
bcdnum
 *, 
decC⁄ãxt
 *);

87 
Fœg
 
decBiSå
(const *, const *, const *);

111 c⁄° 
uI¡
 
	gDECCOMBEXP
[64]={

113 1<<
DECECONL
, 1<<DECECONL, 1<<DECECONL, 1<<DECECONL,

114 1<<
DECECONL
, 1<<DECECONL, 1<<DECECONL, 1<<DECECONL,

115 2<<
DECECONL
, 2<<DECECONL, 2<<DECECONL, 2<<DECECONL,

116 2<<
DECECONL
, 2<<DECECONL, 2<<DECECONL, 2<<DECECONL,

117 0, 0, 1<<
DECECONL
, 1<<DECECONL,

118 2<<
DECECONL
, 2<<DECECONL, 
DECFLOAT_Inf
, 
DECFLOAT_NaN
,

120 1<<
DECECONL
, 1<<DECECONL, 1<<DECECONL, 1<<DECECONL,

121 1<<
DECECONL
, 1<<DECECONL, 1<<DECECONL, 1<<DECECONL,

122 2<<
DECECONL
, 2<<DECECONL, 2<<DECECONL, 2<<DECECONL,

123 2<<
DECECONL
, 2<<DECECONL, 2<<DECECONL, 2<<DECECONL,

124 0, 0, 1<<
DECECONL
, 1<<DECECONL,

125 2<<
DECECONL
, 2<<DECECONL, 
DECFLOAT_Inf
, 
DECFLOAT_NaN
};

126 #i‡!
QUAD


127 c⁄° 
uI¡
 
	gDECCOMBWEXP
[64]={

129 1<<
DECWECONL
, 1<<DECWECONL, 1<<DECWECONL, 1<<DECWECONL,

130 1<<
DECWECONL
, 1<<DECWECONL, 1<<DECWECONL, 1<<DECWECONL,

131 2<<
DECWECONL
, 2<<DECWECONL, 2<<DECWECONL, 2<<DECWECONL,

132 2<<
DECWECONL
, 2<<DECWECONL, 2<<DECWECONL, 2<<DECWECONL,

133 0, 0, 1<<
DECWECONL
, 1<<DECWECONL,

134 2<<
DECWECONL
, 2<<DECWECONL, 
DECFLOAT_Inf
, 
DECFLOAT_NaN
,

136 1<<
DECWECONL
, 1<<DECWECONL, 1<<DECWECONL, 1<<DECWECONL,

137 1<<
DECWECONL
, 1<<DECWECONL, 1<<DECWECONL, 1<<DECWECONL,

138 2<<
DECWECONL
, 2<<DECWECONL, 2<<DECWECONL, 2<<DECWECONL,

139 2<<
DECWECONL
, 2<<DECWECONL, 2<<DECWECONL, 2<<DECWECONL,

140 0, 0, 1<<
DECWECONL
, 1<<DECWECONL,

141 2<<
DECWECONL
, 2<<DECWECONL, 
DECFLOAT_Inf
, 
DECFLOAT_NaN
};

144 #i‡
QUAD


145 c⁄° 
uI¡
 
	gDECCOMBMSD
[64]={

151 c⁄° 
uI¡
 
	gDECCOMBFROM
[48]={

164 
	#DEC_BCD2DPD
 1

165 
	#DEC_BIN2DPD
 1

166 
	#DEC_BIN2BCD8
 1

167 
	#DEC_DPD2BCD8
 1

168 
	#DEC_DPD2BIN
 1

169 
	#DEC_DPD2BINK
 1

170 
	#DEC_DPD2BINM
 1

171 
	~"decDPD.h
"

172 

	)

190 
Fœg
 
	$decBiSå
(c⁄° *
èrg
, c⁄° *
°r1
, c⁄° *
°r2
) {

191 ;;
èrg
++, 
°r1
++, 
°r2
++) {

192 i‡(*
èrg
!=*
°r1
 && *èrg!=*
°r2
)  0;

194 i‡(*
èrg
=='\0') ;

197 
	}
}

220 
uByã
 
	gÆ öes
[
DECPMAX
]=

221 #i‡
SINGLE


223 #ñi‡
DOUBLE


225 #ñi‡
QUAD


230 
decFlﬂt
 * 
	$decFöÆize
(
decFlﬂt
 *
df
, 
bcdnum
 *
num
,

231 
decC⁄ãxt
 *
£t
) {

232 
uByã
 *
ub
;

233 
uI¡
 
dpd
;

234 
uI¡
 
uiw‹k
;

235 
uByã
 *
umsd
=
num
->
msd
;

236 
uByã
 *
ulsd
=
num
->
lsd
;

237 
uI¡
 
ícode
;

238 
I¡
 
Àngth
;

240 #i‡
DECCHECK


241 
I¡
 
˛í
=
ulsd
-
umsd
+1;

242 #i‡
QUAD


243 
	#COEXTRA
 2

244 #ñ£

	)

245 
	#COEXTRA
 0

	)

247 i‡(
˛í
<1 || cÀn>
DECPMAX
*3+2+
COEXTRA
)

248 
	`¥ötf
("decFöÆize: su•e˘ c€fficõ¡ [Àngth=%ld]\n", (
LI
)
˛í
);

249 i‡(
num
->
sign
!=0 &&Çum->sign!=
DECFLOAT_Sign
)

250 
	`¥ötf
("decFöÆize: bad sig¿[%08lx]\n", (
LI
)
num
->
sign
);

251 i‡(!
	`EXPISSPECIAL
(
num
->
exp⁄ít
)

252 && (
num
->
exp⁄ít
>1999999999 ||Çum->exponent<-1999999999))

253 
	`¥ötf
("decFöÆize: im¥obabÀÉxp⁄íà[%ld]\n", (
LI
)
num
->
exp⁄ít
);

259 
Àngth
=(
uI¡
)(
ulsd
-
umsd
+1);

261 i‡(!
	`NUMISSPECIAL
(
num
)) {

262 
I¡
 
dr›
;

265 i‡(*
umsd
==0) {

266 ; 
umsd
+3<
ulsd
 && 
	`UBTOUI
(umsd)==0;) umsd+=4;

267 ; *
umsd
==0 && umsd<
ulsd
;) umsd++;

268 
Àngth
=
ulsd
-
umsd
+1;

270 
dr›
=
	`MAXI
(
Àngth
-
DECPMAX
, 
DECQTINY
-
num
->
exp⁄ít
);

272 i‡(
dr›
>0) {

275 
uByã
 *
round©
;

276 
uByã
 
ªround
;

279 
num
->
exp⁄ít
+=
dr›
;

288 i‡(
dr›
<
Àngth
) {

289 
round©
=
umsd
+
Àngth
-
dr›
;

290 
ªround
=*
round©
;

291 
ub
=
round©
+1; ub<=
ulsd
; ub++) {

292 i‡(*
ub
!=0) {

293 
ªround
=
DECSTICKYTAB
[reround];

297 
ulsd
=
round©
-1;

300 i‡(
dr›
==
Àngth
) {

301 
round©
=
umsd
;

302 
ªround
=*
round©
;

305 
round©
=
umsd
-1;

306 
ªround
=0;

308 
ub
=
round©
+1; ub<=
ulsd
; ub++) {

309 i‡(*
ub
!=0) {

310 
ªround
=
DECSTICKYTAB
[reround];

314 *
umsd
=0;

315 
ulsd
=
umsd
;

318 i‡(
ªround
!=0) {

319 
uI¡
 
bump
=0;

320 
£t
->
°©us
|=
DEC_I√xa˘
;

323 i‡(
num
->
exp⁄ít
<
DECEMIN
 && (num->exp⁄ít+(
ulsd
-
umsd
+1)-1)<DECEMIN)

324 
£t
->
°©us
|=
DEC_UndîÊow
;

327 i‡(
£t
->
round
==
DEC_ROUND_HALF_EVEN
) {

328 i‡(
ªround
>5Ë
bump
=1;

329 i‡(
ªround
==5)

330 
bump
=*
ulsd
 & 0x01;

332 
£t
->
round
) {

333 
DEC_ROUND_DOWN
: {

336 
DEC_ROUND_HALF_DOWN
: {

337 i‡(
ªround
>5Ë
bump
=1;

339 
DEC_ROUND_HALF_UP
: {

340 i‡(
ªround
>=5Ë
bump
=1;

342 
DEC_ROUND_UP
: {

343 i‡(
ªround
>0Ë
bump
=1;

345 
DEC_ROUND_CEILING
: {

347 i‡(!
num
->
sign
 && 
ªround
>0Ë
bump
=1;

349 
DEC_ROUND_FLOOR
: {

352 i‡(
num
->
sign
 && 
ªround
>0Ë
bump
=1;

354 
DEC_ROUND_05UP
: {

355 i‡(
ªround
>0) {

359 i‡(*
ulsd
==0 || *ulsd==5Ë
bump
=1;

363 
£t
->
°©us
|=
DEC_InvÆid_c⁄ãxt
;

364 #i‡
DECCHECK


365 
	`¥ötf
("Unknow¿roundög mode: %ld\n", (
LI
)
£t
->
round
);

371 i‡(
bump
!=0) {

374 
ub
=
ulsd
;

375 ; 
ub
-3>=
umsd
 && 
	`UBTOUI
(ub-3)==0x09090909; ub-=4) {

376 
	`UBFROMUI
(
ub
-3, 0);

381 ; 
ub
>=
umsd
; *ub=0, ub--) {

382 i‡(*
ub
==9) ;

383 *
ub
+=1;

386 i‡(
ub
<
umsd
) {

387 *
umsd
=1;

389 i‡((
ulsd
-
umsd
+1)==
DECPMAX
) {

390 
num
->
exp⁄ít
++;

397 
ulsd
++;

398 *
ulsd
=0;

400 #i‡
DECCHECK


401 i‡(
num
->
exp⁄ít
!=
DECQTINY
)

402 
	`¥ötf
("decFinalize: badáll-ninesÉxtend [^%ld, %ld]\n",

403 (
LI
)
num
->
exp⁄ít
, (LI)(
ulsd
-
umsd
+1));

410 
Àngth
=
ulsd
-
umsd
+1;

417 i‡(
num
->
exp⁄ít
>
DECEMAX
-(
DECPMAX
-1)) {

419 i‡(*
ulsd
==0 && ulsd==
umsd
) {

420 
num
->
exp⁄ít
=
DECEMAX
-(
DECPMAX
-1);

422 i‡((
num
->
exp⁄ít
+
Àngth
-1)>
DECEMAX
) {

425 
Fœg
 
√edmax
=0;

426 
£t
->
°©us
|=(
DEC_OvîÊow
 | 
DEC_I√xa˘
);

427 
£t
->
round
) {

428 
DEC_ROUND_DOWN
: {

429 
√edmax
=1;

431 
DEC_ROUND_05UP
: {

432 
√edmax
=1;

434 
DEC_ROUND_CEILING
: {

435 i‡(
num
->
sign
Ë
√edmax
=1;

437 
DEC_ROUND_FLOOR
: {

438 i‡(!
num
->
sign
Ë
√edmax
=1;

442 i‡(!
√edmax
) {

443 
num
->
exp⁄ít
=
DECFLOAT_Inf
;

444 *
umsd
=0;

445 
ulsd
=
umsd
;

448 
umsd
=
Æ öes
;

449 
ulsd
=
Æ öes
+
DECPMAX
-1;

450 
num
->
exp⁄ít
=
DECEMAX
-(
DECPMAX
-1);

454 
I¡
 
shi·
=
num
->
exp⁄ít
-(
DECEMAX
-(
DECPMAX
-1));

455 i‡(
shi·
>0) {

459 
uByã
 
buf„r
[
	`ROUNDUP
(
DECPMAX
+3, 4)];

460 
uByã
 *
s
=
umsd
;

461 
uByã
 *
t
=
buf„r
;

462 
uByã
 *
ésd
=
buf„r
+(
ulsd
-
umsd
)+
shi·
;

464 ; 
s
<=
ulsd
; s+=4, 
t
+=4Ë
	`UBFROMUI
—, 
	`UBTOUI
(s));

465 
t
=
ésd
-
shi·
+1;Å<Òlsd;Å+=4Ë
	`UBFROMUI
(t, 0);

466 
num
->
exp⁄ít
-=
shi·
;

467 
umsd
=
buf„r
;

468 
ulsd
=
ésd
;

471 
Àngth
=
ulsd
-
umsd
+1;

482 i‡(
Àngth
==
DECPMAX
) {

483  
	`decFlﬂtFromBCD
(
df
, 
num
->
exp⁄ít
, 
umsd
,Çum->
sign
);

488 i‡(!
	`NUMISSPECIAL
(
num
)) {

490 
uI¡
 
uexp
=(uI¡)(
num
->
exp⁄ít
+
DECBIAS
);

491 
uI¡
 
code
=(
uexp
>>
DECECONL
)<<4;

494 
ícode
=
DECCOMBFROM
[
code
];

495 
ícode
|=(
uexp
<<(32-6-
DECECONL
)) & 0x03ffffff;

497 
ícode
=
num
->
exp⁄ít
;

498 
ícode
|=
num
->
sign
;

508 
	#gëDPDt
(
dpd
, 
n
Ë
ub
=
ulsd
-(3*“))-2; \

	)

509 i‡(
ub
<
umsd
-2Ë
dpd
=0; \

510 i‡(
ub
>=
umsd
Ë
dpd
=
BCD2DPD
[(*ub*256)+(*(ub+1)*16)+*(ub+2)]; \

511 {
dpd
=*(
ub
+2); i‡(ub+1==
umsd
Ëdpd+=*(ub+1)*16; dpd=
BCD2DPD
[dpd];}

516 #i‡
DECPMAX
==7

517 
	`gëDPDt
(
dpd
, 1);

518 
ícode
|=
dpd
<<10;

519 
	`gëDPDt
(
dpd
, 0);

520 
ícode
|=
dpd
;

521 
	`DFWORD
(
df
, 0)=
ícode
;

523 #ñi‡
DECPMAX
==16

524 
	`gëDPDt
(
dpd
, 4); 
ícode
|=dpd<<8;

525 
	`gëDPDt
(
dpd
, 3); 
ícode
|=dpd>>2;

526 
	`DFWORD
(
df
, 0)=
ícode
;

527 
ícode
=
dpd
<<30;

528 
	`gëDPDt
(
dpd
, 2); 
ícode
|=dpd<<20;

529 
	`gëDPDt
(
dpd
, 1); 
ícode
|=dpd<<10;

530 
	`gëDPDt
(
dpd
, 0); 
ícode
|=dpd;

531 
	`DFWORD
(
df
, 1)=
ícode
;

533 #ñi‡
DECPMAX
==34

534 
	`gëDPDt
(
dpd
,10); 
ícode
|=dpd<<4;

535 
	`gëDPDt
(
dpd
, 9); 
ícode
|=dpd>>6;

536 
	`DFWORD
(
df
, 0)=
ícode
;

538 
ícode
=
dpd
<<26;

539 
	`gëDPDt
(
dpd
, 8); 
ícode
|=dpd<<16;

540 
	`gëDPDt
(
dpd
, 7); 
ícode
|=dpd<<6;

541 
	`gëDPDt
(
dpd
, 6); 
ícode
|=dpd>>4;

542 
	`DFWORD
(
df
, 1)=
ícode
;

544 
ícode
=
dpd
<<28;

545 
	`gëDPDt
(
dpd
, 5); 
ícode
|=dpd<<18;

546 
	`gëDPDt
(
dpd
, 4); 
ícode
|=dpd<<8;

547 
	`gëDPDt
(
dpd
, 3); 
ícode
|=dpd>>2;

548 
	`DFWORD
(
df
, 2)=
ícode
;

550 
ícode
=
dpd
<<30;

551 
	`gëDPDt
(
dpd
, 2); 
ícode
|=dpd<<20;

552 
	`gëDPDt
(
dpd
, 1); 
ícode
|=dpd<<10;

553 
	`gëDPDt
(
dpd
, 0); 
ícode
|=dpd;

554 
	`DFWORD
(
df
, 3)=
ícode
;

559  
df
;

560 
	}
}

577 
decFlﬂt
 * 
	$decFlﬂtFromBCD
(
decFlﬂt
 *
df
, 
I¡
 
exp
, c⁄° 
uByã
 *
bcd¨
,

578 
I¡
 
sig
) {

579 
uI¡
 
ícode
, 
dpd
;

580 c⁄° 
uByã
 *
ub
;

582 i‡(
	`EXPISSPECIAL
(
exp
)Ë
ícode
Ûxp|
sig
;

585 
uI¡
 
uexp
=(uI¡)(
exp
+
DECBIAS
);

586 
uI¡
 
code
=(
uexp
>>
DECECONL
)<<4;

587 
code
+=
bcd¨
[0];

589 
ícode
=
DECCOMBFROM
[
code
]|
sig
;

590 
ícode
|=(
uexp
<<(32-6-
DECECONL
)) & 0x03ffffff;

598 
	#gëDPDb
(
dpd
, 
n
Ë
ub
=
bcd¨
+
DECPMAX
-1-(3*“))-2; \

	)

599 
dpd
=
BCD2DPD
[(*
ub
*256)+(*(ub+1)*16)+*(ub+2)];

604 #i‡
DECPMAX
==7

605 
	`gëDPDb
(
dpd
, 1);

606 
ícode
|=
dpd
<<10;

607 
	`gëDPDb
(
dpd
, 0);

608 
ícode
|=
dpd
;

609 
	`DFWORD
(
df
, 0)=
ícode
;

611 #ñi‡
DECPMAX
==16

612 
	`gëDPDb
(
dpd
, 4); 
ícode
|=dpd<<8;

613 
	`gëDPDb
(
dpd
, 3); 
ícode
|=dpd>>2;

614 
	`DFWORD
(
df
, 0)=
ícode
;

615 
ícode
=
dpd
<<30;

616 
	`gëDPDb
(
dpd
, 2); 
ícode
|=dpd<<20;

617 
	`gëDPDb
(
dpd
, 1); 
ícode
|=dpd<<10;

618 
	`gëDPDb
(
dpd
, 0); 
ícode
|=dpd;

619 
	`DFWORD
(
df
, 1)=
ícode
;

621 #ñi‡
DECPMAX
==34

622 
	`gëDPDb
(
dpd
,10); 
ícode
|=dpd<<4;

623 
	`gëDPDb
(
dpd
, 9); 
ícode
|=dpd>>6;

624 
	`DFWORD
(
df
, 0)=
ícode
;

626 
ícode
=
dpd
<<26;

627 
	`gëDPDb
(
dpd
, 8); 
ícode
|=dpd<<16;

628 
	`gëDPDb
(
dpd
, 7); 
ícode
|=dpd<<6;

629 
	`gëDPDb
(
dpd
, 6); 
ícode
|=dpd>>4;

630 
	`DFWORD
(
df
, 1)=
ícode
;

632 
ícode
=
dpd
<<28;

633 
	`gëDPDb
(
dpd
, 5); 
ícode
|=dpd<<18;

634 
	`gëDPDb
(
dpd
, 4); 
ícode
|=dpd<<8;

635 
	`gëDPDb
(
dpd
, 3); 
ícode
|=dpd>>2;

636 
	`DFWORD
(
df
, 2)=
ícode
;

638 
ícode
=
dpd
<<30;

639 
	`gëDPDb
(
dpd
, 2); 
ícode
|=dpd<<20;

640 
	`gëDPDb
(
dpd
, 1); 
ícode
|=dpd<<10;

641 
	`gëDPDb
(
dpd
, 0); 
ícode
|=dpd;

642 
	`DFWORD
(
df
, 3)=
ícode
;

645  
df
;

646 
	}
}

664 
decFlﬂt
 * 
	$decFlﬂtFromPacked
(
decFlﬂt
 *
df
, 
I¡
 
exp
, c⁄° 
uByã
 *
∑cked
) {

665 
uByã
 
bcd¨
[
DECPMAX
+2];

666 c⁄° 
uByã
 *
ù
;

667 
uByã
 *
›
;

668 
I¡
 
sig
=0;

671 #i‡
SINGLE


672 
›
=
bcd¨
+1;

674 
›
=
bcd¨
;

676 
ù
=
∑cked
; ip<∑cked+((
DECPMAX
+2)/2); ip++) {

677 *
›
++=*
ù
>>4;

678 *
›
++=(
uByã
)(*
ù
&0x0f);

680 
›
--;

681 i‡(*
›
==
DECPMINUS
 || *›==
DECPMINUSALT
Ë
sig
=
DECFLOAT_Sign
;

683 i‡(
	`EXPISSPECIAL
(
exp
)) {

684 i‡(!
	`EXPISINF
(
exp
)Ë
bcd¨
[1]=0;

685 
	`mem£t
(
bcd¨
+1, 0, 
DECPMAX
);

687  
	`decFlﬂtFromBCD
(
df
, 
exp
, 
bcd¨
+1, 
sig
);

688 
	}
}

708 
decFlﬂt
 * 
	$decFlﬂtFromPackedChecked
(
decFlﬂt
 *
df
, 
I¡
 
exp
,

709 c⁄° 
uByã
 *
∑cked
) {

710 
uByã
 
bcd¨
[
DECPMAX
+2];

711 c⁄° 
uByã
 *
ù
;

712 
uByã
 *
›
;

713 
I¡
 
sig
=0;

716 #i‡
SINGLE


717 
›
=
bcd¨
+1;

719 
›
=
bcd¨
;

721 
ù
=
∑cked
; ip<∑cked+((
DECPMAX
+2)/2); ip++) {

722 *
›
=*
ù
>>4;

723 i‡(*
›
>9Ë 
NULL
;

724 
›
++;

725 *
›
=(
uByã
)(*
ù
&0x0f);

726 i‡(*
›
>9 && 
ù
<
∑cked
+((
DECPMAX
+2)/2)-1Ë 
NULL
;

727 
›
++;

729 
›
--;

730 i‡(*
›
<=9Ë 
NULL
;

731 i‡(*
›
==
DECPMINUS
 || *›==
DECPMINUSALT
Ë
sig
=
DECFLOAT_Sign
;

733 #i‡!
SINGLE


734 i‡(
bcd¨
[0]!=0Ë 
NULL
;

737 i‡(
	`EXPISNAN
(
exp
)) {

738 i‡(
bcd¨
[1]!=0Ë 
NULL
;

740 i‡(
	`EXPISINF
(
exp
)) {

741 
I¡
 
i
;

742 
i
=0; i<
DECPMAX
; i++) {

743 i‡(
bcd¨
[
i
+1]!=0Ë 
NULL
;

748 i‡(
exp
>
DECEMAX
-
DECPMAX
+1Ë 
NULL
;

749 i‡(
exp
<
DECEMIN
-
DECPMAX
+1Ë 
NULL
;

751  
	`decFlﬂtFromBCD
(
df
, 
exp
, 
bcd¨
+1, 
sig
);

752 
	}
}

776 
decFlﬂt
 * 
	$decFlﬂtFromSåög
(
decFlﬂt
 *
ªsu…
, c⁄° *
°rög
,

777 
decC⁄ãxt
 *
£t
) {

778 
I¡
 
digôs
;

779 c⁄° *
dŸch¨
=
NULL
;

780 c⁄° *
cfú°
=
°rög
;

781 c⁄° *
c
;

782 
uByã
 *
ub
;

783 
uI¡
 
uiw‹k
;

784 
bcdnum
 
num
;

785 
uI¡
 
îr‹
=
DEC_C⁄vîsi⁄_sy¡ax
;

786 
uByã
 
buf„r
[
	`ROUNDUP
(
DECSTRING
+11, 8)];

788 #i‡
DECTRACE


793 
num
.
sign
=0;

794 
num
.
msd
=
buf„r
;

801 
c
=
°rög
;; c++) {

802 i‡((()(*
c
-'0'))<=9) ;

803 i‡(*
c
=='\0') ;

804 i‡(*
c
=='.') {

805 i‡(
dŸch¨
!=
NULL
) ;

806 
dŸch¨
=
c
;

808 i‡(
c
==
°rög
) {

809 i‡(*
c
=='-') {

810 
cfú°
++;

811 
num
.
sign
=
DECFLOAT_Sign
;

813 i‡(*
c
=='+') {

814 
cfú°
++;

821 
digôs
=(
uI¡
)(
c
-
cfú°
);

823 i‡(
digôs
>0) {

824 c⁄° *
˛a°
=
c
-1;

825 
I¡
 
exp
=0;

826 i‡(*
c
!='\0') {

827 
uI¡
 
edig
;

829 c⁄° *
fú°exp
;

830 i‡(*
c
!='E' && *c!='e') ;

831 
c
++;

832 i‡(*
c
=='-' || *c=='+') c++;

833 i‡(*
c
=='\0') ;

834 ; *
c
=='0';) c++;

835 
fú°exp
=
c
;

837 
edig
=(
uI¡
)*
c
-(uInt)'0';

838 i‡(
edig
<=9) {

839 
exp
+=
edig
;

840 
c
++;

841 ;; 
c
++) {

842 
edig
=(
uI¡
)*
c
-(uInt)'0';

843 i‡(
edig
>9) ;

844 
exp
Ûxp*10+
edig
;

848 i‡(*
c
!='\0') ;

854 i‡(
c
>
fú°exp
+
DECEMAXD
Ë
exp
=
DECEMAX
*2;

855 i‡(*(
˛a°
+2)=='-'Ë
exp
=-exp;

858 i‡(
dŸch¨
!=
NULL
) {

859 
digôs
--;

860 i‡(
digôs
==0) ;

861 
exp
-=(
I¡
)(
˛a°
-
dŸch¨
);

864 
num
.
exp⁄ít
=
exp
;

868 
îr‹
=0;

874 
ub
=
buf„r
;

875 i‡(
digôs
<=(
I¡
)((
buf„r
)-3)) {

876 
c
=
cfú°
;

877 i‡(
dŸch¨
!=
NULL
) {

878 i‡(*(
c
+1)=='.') {

879 *
ub
++=(
uByã
)(*
c
-'0');

880 
c
+=2;

882 ; 
c
<=
˛a°
;) {

885 i‡(
c
<=
˛a°
-3

886 && (
	`UBTOUI
(
c
)&0xf0f0f0f0)==
CHARMASK
) {

887 
	`UBFROMUI
(
ub
, 
	`UBTOUI
(
c
)&0x0f0f0f0f);

888 
ub
+=4;

889 
c
+=4;

892 i‡(*
c
=='.') {

893 
c
++;

896 *
ub
++=(
uByã
)(*
c
++-'0');

900 ; 
c
<=
˛a°
-3; c+=4, 
ub
+=4Ë
	`UBFROMUI
(ub, 
	`UBTOUI
(c)&0x0f0f0f0f);

901 ; 
c
<=
˛a°
; c++, 
ub
++Ë*ub=(
uByã
)(*c-'0');

902 
num
.
lsd
=
buf„r
+
digôs
-1;

908 i‡(*
cfú°
=='.') cfirst++;

909 i‡(*
cfú°
=='0') {

910 ; 
cfú°
<
˛a°
; cfirst++) {

911 i‡(*
cfú°
!='0') {

912 i‡(*
cfú°
=='.') ;

915 
digôs
--;

922 
c
=
cfú°
; c<=
˛a°
 && 
ub
<=
buf„r
+
DECPMAX
; c++) {

924 i‡(
c
<=
˛a°
-3

925 && (
	`UBTOUI
(
c
)&0xf0f0f0f0)==
CHARMASK
) {

926 
	`UBFROMUI
(
ub
, 
	`UBTOUI
(
c
)&0x0f0f0f0f);

927 
ub
+=4;

928 
c
+=3;

931 i‡(*
c
=='.') ;

932 *
ub
++=(
uByã
)(*
c
-'0');

934 
ub
--;

935 ; 
c
<=
˛a°
; c++) {

936 i‡(*
c
!='0') {

937 i‡(*
c
=='.') ;

938 *
ub
=
DECSTICKYTAB
[*ub];

942 
num
.
lsd
=
ub
;

944 
num
.
exp⁄ít
+=
digôs
-(
I¡
)(
ub
-
buf„r
+1);

950 i‡(*
c
=='\0') ;

951 
buf„r
[0]=0;

952 
num
.
lsd
=
buf„r
;

953 i‡(
	`decBiSå
(
c
, "infinity", "INFINITY")

954 || 
	`decBiSå
(
c
, "öf", "INF")Ë
num
.
exp⁄ít
=
DECFLOAT_Inf
;

956 
num
.
exp⁄ít
=
DECFLOAT_qNaN
;

957 i‡(*
c
=='s' || *c=='S') {

958 
num
.
exp⁄ít
=
DECFLOAT_sNaN
;

959 
c
++;

961 i‡(*
c
!='N' && *c!='n') ;

962 
c
++;

963 i‡(*
c
!='a' && *c!='A') ;

964 
c
++;

965 i‡(*
c
!='N' && *c!='n') ;

966 
c
++;

969 
cfú°
=
c
; *cfirst=='0';) cfirst++;

970 i‡(*
cfú°
!='\0') {

972 
ub
=
buf„r
;

973 
c
=
cfú°
;; c++, 
ub
++) {

974 i‡(()(*
c
-'0')>9) ;

975 i‡(
c
-
cfú°
==
DECPMAX
-1) ;

976 *
ub
=(
uByã
)(*
c
-'0');

978 i‡(*
c
!='\0') ;

979 
num
.
lsd
=
ub
-1;

982 
îr‹
=0;

989 i‡(
îr‹
!=0) {

990 
£t
->
°©us
|=
îr‹
;

991 
num
.
exp⁄ít
=
DECFLOAT_qNaN
;

992 
num
.
sign
=0;

993 
buf„r
[0]=0;

994 
num
.
lsd
=
buf„r
;

999 
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

1001  
ªsu…
;

1002 
	}
}

1017 #i‡!
QUAD


1018 
decFlﬂt
 * 
	$decFlﬂtFromWidî
(
decFlﬂt
 *
ªsu…
, c⁄° 
decFlﬂtWidî
 *
widî
,

1019 
decC⁄ãxt
 *
£t
) {

1020 
bcdnum
 
num
;

1021 
uByã
 
bcd¨
[
DECWPMAX
];

1022 
uI¡
 
widîhi
=
	`DFWWORD
(
widî
, 0);

1023 
I¡
 
exp
;

1025 
	`GETWCOEFF
(
widî
, 
bcd¨
);

1027 
num
.
msd
=
bcd¨
;

1028 
num
.
lsd
=
bcd¨
+
DECWPMAX
-1;

1029 
num
.
sign
=
widîhi
&0x80000000;

1032 
exp
=
DECCOMBWEXP
[
widîhi
>>26];

1035 i‡(
	`EXPISSPECIAL
(
exp
)Ëexp=
widîhi
&0x7e000000;

1036 
exp
+=
	`GETWECON
(
widî
)-
DECWBIAS
;

1037 
num
.
exp⁄ít
=
exp
;

1040  
	`decFöÆize
(
ªsu…
, &
num
, 
£t
);

1041 
	}
}

1058 
I¡
 
	$decFlﬂtGëC€fficõ¡
(c⁄° 
decFlﬂt
 *
df
, 
uByã
 *
bcd¨
) {

1059 i‡(
	`DFISINF
(
df
)Ë
	`mem£t
(
bcd¨
, 0, 
DECPMAX
);

1061 
	`GETCOEFF
(
df
, 
bcd¨
);

1062 i‡(
	`DFISNAN
(
df
)Ë
bcd¨
[0]=0;

1064  
	`GETSIGN
(
df
);

1065 
	}
}

1078 
I¡
 
	$decFlﬂtGëExp⁄ít
(c⁄° 
decFlﬂt
 *
df
) {

1079 i‡(
	`DFISSPECIAL
(
df
)Ë 
	`DFWORD
(df, 0)&0x7e000000;

1080  
	`GETEXPUN
(
df
);

1081 
	}
}

1095 
decFlﬂt
 * 
	$decFlﬂtSëC€fficõ¡
(
decFlﬂt
 *
df
, c⁄° 
uByã
 *
bcd¨
,

1096 
I¡
 
sig
) {

1097 
uI¡
 
exp
;

1098 
uByã
 
bcdzîo
[
DECPMAX
];

1101 i‡(
	`DFISSPECIAL
(
df
)) {

1102 
exp
=
	`DFWORD
(
df
, 0)&0x7e000000;

1103 i‡(
	`DFISINF
(
df
)) {

1104 
	`mem£t
(
bcdzîo
, 0, 
DECPMAX
);

1105  
	`decFlﬂtFromBCD
(
df
, 
exp
, 
bcdzîo
, 
sig
);

1108 
exp
=
	`GETEXPUN
(
df
);

1109  
	`decFlﬂtFromBCD
(
df
, 
exp
, 
bcd¨
, 
sig
);

1110 
	}
}

1123 
decFlﬂt
 * 
	$decFlﬂtSëExp⁄ít
(
decFlﬂt
 *
df
, 
decC⁄ãxt
 *
£t
, 
I¡
 
exp
) {

1124 
uByã
 
bcdc›y
[
DECPMAX
];

1125 
bcdnum
 
num
;

1126 
num
.
exp⁄ít
=
exp
;

1127 
num
.
sign
=
	`decFlﬂtGëC€fficõ¡
(
df
, 
bcdc›y
);

1128 i‡(
	`DFISSPECIAL
(
df
)) {

1129 i‡(
	`DFISINF
(
df
)Ë
	`mem£t
(
bcdc›y
, 0, 
DECPMAX
);

1130 
bcdc›y
[0]=0;

1132 
num
.
msd
=
bcdc›y
;

1133 
num
.
lsd
=
bcdc›y
+
DECPMAX
-1;

1134  
	`decFöÆize
(
df
, &
num
, 
£t
);

1135 
	}
}

1142 
uI¡
 
	$decFlﬂtRadix
(c⁄° 
decFlﬂt
 *
df
) {

1143 i‡(
df
)  10;

1145 
	}
}

1148 #i‡
DECPRINT


1156 
	$decFlﬂtShow
(c⁄° 
decFlﬂt
 *
df
, c⁄° *
èg
) {

1157 
hexbuf
[
DECBYTES
*2+DECBYTES/4+1];

1158 
buff
[
DECSTRING
];

1159 
I¡
 
i
, 
j
=0;

1161 
i
=0; i<
DECBYTES
; i++) {

1162 #i‡
DECLITEND


1163 
	`•rötf
(&
hexbuf
[
j
], "%02x", 
df
->
byãs
[
DECBYTES
-1-
i
]);

1165 
	`•rötf
(&
hexbuf
[
j
], "%02x", 
df
->
byãs
[
i
]);

1167 
j
+=2;

1169 i‡((
i
+1)%4==0Ë{
	`°r˝y
(&
hexbuf
[
j
], " "); j++;}

1171 
	`decFlﬂtToSåög
(
df
, 
buff
);

1172 
	`¥ötf
(">%s> %†[big-ídün] %s\n", 
èg
, 
hexbuf
, 
buff
);

1174 
	}
}

1191 
I¡
 
	$decFlﬂtToBCD
(c⁄° 
decFlﬂt
 *
df
, 
I¡
 *
exp
, 
uByã
 *
bcd¨
) {

1192 i‡(
	`DFISINF
(
df
)) {

1193 
	`mem£t
(
bcd¨
, 0, 
DECPMAX
);

1194 *
exp
=
	`DFWORD
(
df
, 0)&0x7e000000;

1197 
	`GETCOEFF
(
df
, 
bcd¨
);

1198 i‡(
	`DFISNAN
(
df
)) {

1199 
bcd¨
[0]=0;

1200 *
exp
=
	`DFWORD
(
df
, 0)&0x7e000000;

1203 *
exp
=
	`GETEXPUN
(
df
);

1206  
	`GETSIGN
(
df
);

1207 
	}
}

1221 * 
	$decFlﬂtToEngSåög
(c⁄° 
decFlﬂt
 *
df
, *
°rög
){

1222 
uI¡
 
msd
;

1223 
I¡
 
exp
;

1224 
uI¡
 
comb
;

1225 *
c°¨t
;

1226 *
c
;

1227 *
s
, *
t
;

1228 
I¡
 
¥e
, 
e
;

1229 c⁄° 
uByã
 *
u
;

1230 
uI¡
 
uiw‹k
;

1235 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

1236 #i‡
DECPMAX
==16

1237 
uI¡
 
souæo
=
	`DFWORD
(
df
, 1);

1238 #ñi‡
DECPMAX
==34

1239 
uI¡
 
sourmh
=
	`DFWORD
(
df
, 1);

1240 
uI¡
 
sourml
=
	`DFWORD
(
df
, 2);

1241 
uI¡
 
souæo
=
	`DFWORD
(
df
, 3);

1244 
c
=
°rög
;

1245 i‡(((
I¡
)
sourhi
)<0Ë*
c
++='-';

1246 
comb
=
sourhi
>>26;

1247 
msd
=
DECCOMBMSD
[
comb
];

1248 
exp
=
DECCOMBEXP
[
comb
];

1250 i‡(
	`EXPISSPECIAL
(
exp
)) {

1251 i‡(
exp
==
DECFLOAT_Inf
) {

1252 
	`°r˝y
(
c
, "Inf");

1253 
	`°r˝y
(
c
+3, "inity");

1254  
°rög
;

1256 i‡(
sourhi
&0x02000000Ë*
c
++='s';

1257 
	`°r˝y
(
c
, "NaN");

1258 
c
+=3;

1260 #i‡
DECPMAX
==7

1261 i‡((
sourhi
&0x000fffff)==0Ë 
°rög
;

1262 #ñi‡
DECPMAX
==16

1263 i‡(
souæo
==0 && (
sourhi
&0x0003ffff)==0Ë 
°rög
;

1264 #ñi‡
DECPMAX
==34

1265 i‡(
souæo
==0 && 
sourml
==0 && 
sourmh
==0

1266 && (
sourhi
&0x00003fff)==0Ë 
°rög
;

1269 
exp
=0; 
msd
=0;

1272 
exp
+=
	`GETECON
(
df
)-
DECBIAS
;

1276 
c°¨t
=
c
;

1277 i‡(
msd
Ë*
c
++=()('0'+()msd);

1289 
	#dpd2ch¨
(
dpdö
Ë
u
=&
DPD2BCD8
[((dpdö)&0x3ff)*4]; \

	)

1290 i‡(
c
!=
c°¨t
Ë{
	`UBFROMUI
(c, 
	`UBTOUI
(
u
)|
CHARMASK
); c+=3;} \

1291 i‡(*(
u
+3)) { \

1292 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
); c+=*(u+3);}

1294 #i‡
DECPMAX
==7

1295 
	`dpd2ch¨
(
sourhi
>>10);

1296 
	`dpd2ch¨
(
sourhi
);

1298 #ñi‡
DECPMAX
==16

1299 
	`dpd2ch¨
(
sourhi
>>8);

1300 
	`dpd2ch¨
((
sourhi
<<2Ë| (
souæo
>>30));

1301 
	`dpd2ch¨
(
souæo
>>20);

1302 
	`dpd2ch¨
(
souæo
>>10);

1303 
	`dpd2ch¨
(
souæo
);

1305 #ñi‡
DECPMAX
==34

1306 
	`dpd2ch¨
(
sourhi
>>4);

1307 
	`dpd2ch¨
((
sourhi
<<6Ë| (
sourmh
>>26));

1308 
	`dpd2ch¨
(
sourmh
>>16);

1309 
	`dpd2ch¨
(
sourmh
>>6);

1310 
	`dpd2ch¨
((
sourmh
<<4Ë| (
sourml
>>28));

1311 
	`dpd2ch¨
(
sourml
>>18);

1312 
	`dpd2ch¨
(
sourml
>>8);

1313 
	`dpd2ch¨
((
sourml
<<2Ë| (
souæo
>>30));

1314 
	`dpd2ch¨
(
souæo
>>20);

1315 
	`dpd2ch¨
(
souæo
>>10);

1316 
	`dpd2ch¨
(
souæo
);

1319 i‡(
c
==
c°¨t
) *c++='0';

1321 i‡(
exp
==0) {

1322 *
c
='\0';

1323  
°rög
;

1327 
e
=0;

1328 
¥e
=(
I¡
)(
c
-
c°¨t
)+
exp
;

1331 i‡(
exp
>0 || 
¥e
<-5) {

1332 
e
=
¥e
-1;

1333 
¥e
=1;

1334 i‡(
e
!=0) {

1335 
I¡
 
adj
;

1338 i‡(
e
<0) {

1339 
adj
=(-
e
)%3;

1340 i‡(
adj
!=0)ádj=3-adj;

1343 
adj
=
e
%3;

1345 
e
Û-
adj
;

1349 i‡(!
	`DFISZERO
(
df
)Ë
¥e
+=
adj
;

1351 i‡(
adj
!=0) {

1352 
e
=e+3;

1353 
¥e
=-(2-
adj
);

1361 i‡(
¥e
>0) {

1363 *
dŸ©
=
c°¨t
+
¥e
;

1364 i‡(
dŸ©
<
c
) {

1367 
s
=
dŸ©
+
	`ROUNDDOWN4
(
c
-dotat);

1368 
t
=
s
+1;

1370 ; 
s
>=
dŸ©
; s-=4, 
t
-=4Ë
	`UBFROMUI
—, 
	`UBTOUI
(s));

1371 *
dŸ©
='.';

1372 
c
++;

1374 ; 
c
<
dŸ©
; c++) *c='0';

1380 
¥e
=-pre+2;

1381 
t
=
c°¨t
+
	`ROUNDDOWN4
(
c
-c°¨t)+
¥e
;

1383 i‡(
t
>
°rög
+
DECSTRING
-5)Å=string+DECSTRING-5;

1386 
s
=
t
-
¥e
; s>=
°rög
; s-=4,Å-=4Ë
	`UBFROMUI
—, 
	`UBTOUI
(s));

1388 
s
+=3;

1389 ; 
s
>=
c°¨t
; s--, 
t
--) *(t+3)=*(s);

1391 i‡(
¥e
>=4) {

1392 
	`mem˝y
(
c°¨t
+
¥e
-4, "0000", 4);

1393 
	`mem˝y
(
c°¨t
, "0.00", 4);

1396 *(
c°¨t
+
¥e
-1)='0';

1397 
	`mem˝y
(
c°¨t
, "0.", 2);

1399 
c
+=
¥e
;

1404 i‡(
e
!=0) {

1405 
	`mem˝y
(
c
, "E+", 2);

1406 
c
++;

1407 i‡(
e
<0) {

1408 *
c
='-';

1409 
e
=-e;

1411 
c
++;

1413 #i‡
DECEMAXD
<=3

1414 
u
=&
BIN2BCD8
[
e
*4];

1417 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
);

1418 
c
+=*(
u
+3);

1419 #ñi‡
DECEMAXD
==4

1420 i‡(
e
<1000) {

1421 
u
=&
BIN2BCD8
[
e
*4];

1422 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
);

1423 
c
+=*(
u
+3);

1426 
I¡
 
thou
=((
e
>>3)*1049)>>17;

1427 
I¡
 
ªm
=
e
-(1000*
thou
);

1428 *
c
++=()('0'+()
thou
);

1429 
u
=&
BIN2BCD8
[
ªm
*4];

1430 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
)|
CHARMASK
);

1431 
c
+=3;

1435 *
c
='\0';

1437  
°rög
;

1438 
	}
}

1456 
I¡
 
	$decFlﬂtToPacked
(c⁄° 
decFlﬂt
 *
df
, 
I¡
 *
exp
, 
uByã
 *
∑cked
) {

1457 
uByã
 
bcd¨
[
DECPMAX
+2];

1458 
uByã
 *
ù
=
bcd¨
, *
›
=
∑cked
;

1459 i‡(
	`DFISINF
(
df
)) {

1460 
	`mem£t
(
bcd¨
, 0, 
DECPMAX
+2);

1461 *
exp
=
DECFLOAT_Inf
;

1464 
	`GETCOEFF
(
df
, 
bcd¨
+1);

1465 i‡(
	`DFISNAN
(
df
)) {

1466 
bcd¨
[1]=0;

1467 *
exp
=
	`DFWORD
(
df
, 0)&0x7e000000;

1470 *
exp
=
	`GETEXPUN
(
df
);

1474 #i‡
SINGLE


1475 
ù
++;

1477 *
ù
=0;

1480 
bcd¨
[
DECPMAX
+1]=(
	`DFISSIGNED
(
df
Ë? 
DECPMINUS
 : 
DECPPLUS
);

1482 ; 
›
<
∑cked
+((
DECPMAX
+2)/2); op++, 
ù
+=2) {

1483 *
›
=(
uByã
)((*
ù
<<4)+*(ip+1));

1485  (
bcd¨
[
DECPMAX
+1]==
DECPMINUS
 ? 
DECFLOAT_Sign
 : 0);

1486 
	}
}

1500 * 
	$decFlﬂtToSåög
(c⁄° 
decFlﬂt
 *
df
, *
°rög
){

1501 
uI¡
 
msd
;

1502 
I¡
 
exp
;

1503 
uI¡
 
comb
;

1504 *
c°¨t
;

1505 *
c
;

1506 *
s
, *
t
;

1507 
I¡
 
¥e
, 
e
;

1508 c⁄° 
uByã
 *
u
;

1509 
uI¡
 
uiw‹k
;

1514 
uI¡
 
sourhi
=
	`DFWORD
(
df
, 0);

1515 #i‡
DECPMAX
==16

1516 
uI¡
 
souæo
=
	`DFWORD
(
df
, 1);

1517 #ñi‡
DECPMAX
==34

1518 
uI¡
 
sourmh
=
	`DFWORD
(
df
, 1);

1519 
uI¡
 
sourml
=
	`DFWORD
(
df
, 2);

1520 
uI¡
 
souæo
=
	`DFWORD
(
df
, 3);

1523 
c
=
°rög
;

1524 i‡(((
I¡
)
sourhi
)<0Ë*
c
++='-';

1525 
comb
=
sourhi
>>26;

1526 
msd
=
DECCOMBMSD
[
comb
];

1527 
exp
=
DECCOMBEXP
[
comb
];

1529 i‡(!
	`EXPISSPECIAL
(
exp
)) {

1531 
exp
+=
	`GETECON
(
df
)-
DECBIAS
;

1534 i‡(
exp
==
DECFLOAT_Inf
) {

1535 
	`°r˝y
(
c
, "Infinity");

1536  
°rög
;

1538 i‡(
sourhi
&0x02000000Ë*
c
++='s';

1539 
	`°r˝y
(
c
, "NaN");

1540 
c
+=3;

1542 #i‡
DECPMAX
==7

1543 i‡((
sourhi
&0x000fffff)==0Ë 
°rög
;

1544 #ñi‡
DECPMAX
==16

1545 i‡(
souæo
==0 && (
sourhi
&0x0003ffff)==0Ë 
°rög
;

1546 #ñi‡
DECPMAX
==34

1547 i‡(
souæo
==0 && 
sourml
==0 && 
sourmh
==0

1548 && (
sourhi
&0x00003fff)==0Ë 
°rög
;

1551 
exp
=0; 
msd
=0;

1555 
c°¨t
=
c
;

1556 i‡(
msd
Ë*
c
++=()('0'+()msd);

1568 
	#dpd2ch¨
(
dpdö
Ë
u
=&
DPD2BCD8
[((dpdö)&0x3ff)*4]; \

	)

1569 i‡(
c
!=
c°¨t
Ë{
	`UBFROMUI
(c, 
	`UBTOUI
(
u
)|
CHARMASK
); c+=3;} \

1570 i‡(*(
u
+3)) { \

1571 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
); c+=*(u+3);}

1573 #i‡
DECPMAX
==7

1574 
	`dpd2ch¨
(
sourhi
>>10);

1575 
	`dpd2ch¨
(
sourhi
);

1577 #ñi‡
DECPMAX
==16

1578 
	`dpd2ch¨
(
sourhi
>>8);

1579 
	`dpd2ch¨
((
sourhi
<<2Ë| (
souæo
>>30));

1580 
	`dpd2ch¨
(
souæo
>>20);

1581 
	`dpd2ch¨
(
souæo
>>10);

1582 
	`dpd2ch¨
(
souæo
);

1584 #ñi‡
DECPMAX
==34

1585 
	`dpd2ch¨
(
sourhi
>>4);

1586 
	`dpd2ch¨
((
sourhi
<<6Ë| (
sourmh
>>26));

1587 
	`dpd2ch¨
(
sourmh
>>16);

1588 
	`dpd2ch¨
(
sourmh
>>6);

1589 
	`dpd2ch¨
((
sourmh
<<4Ë| (
sourml
>>28));

1590 
	`dpd2ch¨
(
sourml
>>18);

1591 
	`dpd2ch¨
(
sourml
>>8);

1592 
	`dpd2ch¨
((
sourml
<<2Ë| (
souæo
>>30));

1593 
	`dpd2ch¨
(
souæo
>>20);

1594 
	`dpd2ch¨
(
souæo
>>10);

1595 
	`dpd2ch¨
(
souæo
);

1598 i‡(
c
==
c°¨t
) *c++='0';

1606 
e
=0;

1607 
¥e
=(
I¡
)(
c
-
c°¨t
)+
exp
;

1610 i‡(
exp
>0 || 
¥e
<-5) {

1611 
e
=
¥e
-1;

1612 
¥e
=1;

1616 i‡(
¥e
>0) {

1617 *
dŸ©
=
c°¨t
+
¥e
;

1618 i‡(
dŸ©
<
c
) {

1622 
s
=
dŸ©
+
	`ROUNDDOWN4
(
c
-dotat);

1623 
t
=
s
+1;

1625 ; 
s
>=
dŸ©
; s-=4, 
t
-=4Ë
	`UBFROMUI
—, 
	`UBTOUI
(s));

1626 *
dŸ©
='.';

1627 
c
++;

1632 i‡(
e
!=0) {

1633 
	`mem˝y
(
c
, "E+", 2);

1634 
c
++;

1635 i‡(
e
<0) {

1636 *
c
='-';

1637 
e
=-e;

1639 
c
++;

1641 #i‡
DECEMAXD
<=3

1642 
u
=&
BIN2BCD8
[
e
*4];

1645 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
);

1646 
c
+=*(
u
+3);

1647 #ñi‡
DECEMAXD
==4

1648 i‡(
e
<1000) {

1649 
u
=&
BIN2BCD8
[
e
*4];

1650 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
);

1651 
c
+=*(
u
+3);

1654 
I¡
 
thou
=((
e
>>3)*1049)>>17;

1655 
I¡
 
ªm
=
e
-(1000*
thou
);

1656 *
c
++=()('0'+()
thou
);

1657 
u
=&
BIN2BCD8
[
ªm
*4];

1658 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
)|
CHARMASK
);

1659 
c
+=3;

1663 *
c
='\0';

1665  
°rög
;

1677 
¥e
=-pre+2;

1678 
t
=
c°¨t
+
	`ROUNDDOWN4
(
c
-c°¨t)+
¥e
;

1680 i‡(
t
>
°rög
+
DECSTRING
-5)Å=string+DECSTRING-5;

1683 
s
=
t
-
¥e
; s>=
°rög
; s-=4,Å-=4Ë
	`UBFROMUI
—, 
	`UBTOUI
(s));

1685 
s
+=3;

1686 ; 
s
>=
c°¨t
; s--, 
t
--) *(t+3)=*(s);

1688 i‡(
¥e
>=4) {

1689 
	`mem˝y
(
c°¨t
+
¥e
-4, "0000", 4);

1690 
	`mem˝y
(
c°¨t
, "0.00", 4);

1693 *(
c°¨t
+
¥e
-1)='0';

1694 
	`mem˝y
(
c°¨t
, "0.", 2);

1696 *(
c
+
¥e
)='\0';

1697  
°rög
;

1698 
	}
}

1713 #i‡!
QUAD


1714 
decFlﬂtWidî
 * 
	$decFlﬂtToWidî
(c⁄° 
decFlﬂt
 *
sour˚
, 
decFlﬂtWidî
 *
widî
) {

1715 
uI¡
 
msd
;

1718 i‡(
	`DFISSPECIAL
(
sour˚
)) {

1720 
	`DFWWORD
(
widî
, 0)=
	`DFWORD
(
sour˚
, 0)&0xfe000000;

1721 
msd
=0;

1724 
uI¡
 
exp
=
	`GETEXPUN
(
sour˚
)+
DECWBIAS
;

1725 
uI¡
 
code
=(
exp
>>
DECWECONL
)<<29;

1726 
code
|=(
exp
<<(32-6-
DECWECONL
)) & 0x03ffffff;

1727 
code
|=
	`DFWORD
(
sour˚
, 0)&0x80000000;

1728 
	`DFWWORD
(
widî
, 0)=
code
;

1729 
msd
=
	`GETMSD
(
sour˚
);

1732 #i‡
SINGLE


1733 
	`DFWWORD
(
widî
, 1)=(
	`DFWORD
(
sour˚
, 0)&0x000fffff)|(
msd
<<20);

1734 #ñi‡
DOUBLE


1735 
	`DFWWORD
(
widî
, 2)=(
	`DFWORD
(
sour˚
, 0)&0x0003ffff)|(
msd
<<18);

1736 
	`DFWWORD
(
widî
, 3)=
	`DFWORD
(
sour˚
, 1);

1737 
	`DFWWORD
(
widî
, 1)=0;

1739  
widî
;

1740 
	}
}

1748 c⁄° *
	$decFlﬂtVîsi⁄
() {

1749  
DECVERSION
;

1750 
	}
}

1760 
decFlﬂt
 * 
	$decFlﬂtZîo
(
decFlﬂt
 *
df
){

1761 
	`DFWORD
(
df
, 0)=
ZEROWORD
;

1762 #i‡
DOUBLE
 || 
QUAD


1763 
	`DFWORD
(
df
, 1)=0;

1764 #i‡
QUAD


1765 
	`DFWORD
(
df
, 2)=0;

1766 
	`DFWORD
(
df
, 3)=0;

1770  
df
;

1771 
	}
}

1777 #i‡
QUAD
 && (
DECCHECK
 || 
DECTRACE
)

1784 
	$decShowNum
(c⁄° 
bcdnum
 *
num
, c⁄° *
èg
) {

1785 c⁄° *
csign
="+";

1786 
uByã
 *
ub
;

1787 
uI¡
 
uiw‹k
;

1788 i‡(
num
->
sign
==
DECFLOAT_Sign
Ë
csign
="-";

1790 
	`¥ötf
(">%s> ", 
èg
);

1791 i‡(
num
->
exp⁄ít
==
DECFLOAT_Inf
Ë
	`¥ötf
("%sInföôy", 
csign
);

1792 i‡(
num
->
exp⁄ít
==
DECFLOAT_qNaN
Ë
	`¥ötf
("%sqNaN", 
csign
);

1793 i‡(
num
->
exp⁄ít
==
DECFLOAT_sNaN
Ë
	`¥ötf
("%ssNaN", 
csign
);

1795 
qbuf
[10];

1796 *
c
;

1797 c⁄° 
uByã
 *
u
;

1798 
I¡
 
e
=
num
->
exp⁄ít
;

1799 
	`°r˝y
(
qbuf
, "q=");

1800 
c
=&
qbuf
[2];

1802 i‡(
e
<0) {

1803 *
c
++='-';

1804 
e
=-e;

1806 #i‡
DECEMAXD
>4

1807 #îr‹ 
Exp⁄ít
 
f‹m
 
is
 
too
 
ShowNum
 
to
 
œy
 
out


1809 i‡(
e
==0Ë*
c
++='0';

1810 i‡(
e
<1000) {

1811 
u
=&
BIN2BCD8
[
e
*4];

1812 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
+3-*(u+3))|
CHARMASK
);

1813 
c
+=*(
u
+3);

1816 
I¡
 
thou
=((
e
>>3)*1049)>>17;

1817 
I¡
 
ªm
=
e
-(1000*
thou
);

1818 *
c
++=()('0'+()
thou
);

1819 
u
=&
BIN2BCD8
[
ªm
*4];

1820 
	`UBFROMUI
(
c
, 
	`UBTOUI
(
u
)|
CHARMASK
);

1821 
c
+=3;

1823 *
c
='\0';

1824 
	`¥ötf
("%7†c=%s", 
qbuf
, 
csign
);

1827 i‡(!
	`EXPISSPECIAL
(
num
->
exp⁄ít
Ë||Çum->
msd
!Úum->
lsd
 || *num->lsd!=0) {

1828 
ub
=
num
->
msd
; ub<Úum->
lsd
; ub++) {

1829 
	`¥ötf
("%1x", *
ub
);

1830 i‡((
num
->
lsd
-
ub
)%3==0 && ub!Úum->lsdË
	`¥ötf
(" ");

1833 
	`¥ötf
("\n");

1834 
	}
}

	@src/decNumber/decContext.c

23 
	~<°rög.h
>

24 
	~<°dio.h
>

25 
	~"decC⁄ãxt.h
"

26 
	~"decNumbîLoˇl.h
"

29 c⁄° 
I¡
 
	gmfc⁄e
=1;

30 c⁄° 
Fœg
 *
	gmf˘›
=(c⁄° Fœg *)&
mfc⁄e
;

31 
	#LITEND
 *
mf˘›


32 

	)

36 c⁄° 
uByã
 
	gDECSTICKYTAB
[10]={1,1,2,3,4,6,6,7,8,9};

41 c⁄° 
uI¡
 
	gDECPOWERS
[10]={1, 10, 100, 1000, 10000, 100000, 1000000,

54 
decC⁄ãxt
 *
	$decC⁄ãxtCÀ¨Sètus
(
decC⁄ãxt
 *
c⁄ãxt
, 
uI¡
 
mask
) {

55 
c⁄ãxt
->
°©us
&=~
mask
;

56  
c⁄ãxt
;

57 
	}
}

72 
decC⁄ãxt
 * 
	$decC⁄ãxtDeÁu…
(
decC⁄ãxt
 *
c⁄ãxt
, 
I¡
 
köd
) {

74 
c⁄ãxt
->
digôs
=9;

75 
c⁄ãxt
->
emax
=
DEC_MAX_EMAX
;

76 
c⁄ãxt
->
emö
=
DEC_MIN_EMIN
;

77 
c⁄ãxt
->
round
=
DEC_ROUND_HALF_UP
;

78 
c⁄ãxt
->
å≠s
=
DEC_Eº‹s
;

79 
c⁄ãxt
->
°©us
=0;

80 
c⁄ãxt
->
˛amp
=0;

81 #i‡
DECSUBSET


82 
c⁄ãxt
->
exãnded
=0;

84 
köd
) {

85 
DEC_INIT_BASE
:

88 
DEC_INIT_DECIMAL32
:

89 
c⁄ãxt
->
digôs
=7;

90 
c⁄ãxt
->
emax
=96;

91 
c⁄ãxt
->
emö
=-95;

92 
c⁄ãxt
->
round
=
DEC_ROUND_HALF_EVEN
;

93 
c⁄ãxt
->
å≠s
=0;

94 
c⁄ãxt
->
˛amp
=1;

95 #i‡
DECSUBSET


96 
c⁄ãxt
->
exãnded
=1;

99 
DEC_INIT_DECIMAL64
:

100 
c⁄ãxt
->
digôs
=16;

101 
c⁄ãxt
->
emax
=384;

102 
c⁄ãxt
->
emö
=-383;

103 
c⁄ãxt
->
round
=
DEC_ROUND_HALF_EVEN
;

104 
c⁄ãxt
->
å≠s
=0;

105 
c⁄ãxt
->
˛amp
=1;

106 #i‡
DECSUBSET


107 
c⁄ãxt
->
exãnded
=1;

110 
DEC_INIT_DECIMAL128
:

111 
c⁄ãxt
->
digôs
=34;

112 
c⁄ãxt
->
emax
=6144;

113 
c⁄ãxt
->
emö
=-6143;

114 
c⁄ãxt
->
round
=
DEC_ROUND_HALF_EVEN
;

115 
c⁄ãxt
->
å≠s
=0;

116 
c⁄ãxt
->
˛amp
=1;

117 #i‡
DECSUBSET


118 
c⁄ãxt
->
exãnded
=1;

124 
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_InvÆid_›î©i⁄
);

127  
c⁄ãxt
;
	}
}

137 
roundög
 
	$decC⁄ãxtGëRoundög
(
decC⁄ãxt
 *
c⁄ãxt
) {

138  
c⁄ãxt
->
round
;

139 
	}
}

149 
uI¡
 
	$decC⁄ãxtGëSètus
(
decC⁄ãxt
 *
c⁄ãxt
) {

150  
c⁄ãxt
->
°©us
;

151 
	}
}

165 
decC⁄ãxt
 *
	$decC⁄ãxtRe°‹eSètus
(
decC⁄ãxt
 *
c⁄ãxt
,

166 
uI¡
 
√w°©us
, uI¡ 
mask
) {

167 
c⁄ãxt
->
°©us
&=~
mask
;

168 
c⁄ãxt
->
°©us
|=(
mask
&
√w°©us
);

169  
c⁄ãxt
;

170 
	}
}

182 
uI¡
 
	$decC⁄ãxtSaveSètus
(
decC⁄ãxt
 *
c⁄ãxt
, 
uI¡
 
mask
) {

183  
c⁄ãxt
->
°©us
&
mask
;

184 
	}
}

195 
decC⁄ãxt
 *
	$decC⁄ãxtSëRoundög
(
decC⁄ãxt
 *
c⁄ãxt
,

196 
roundög
 
√wround
) {

197 
c⁄ãxt
->
round
=
√wround
;

198  
c⁄ãxt
;

199 
	}
}

211 
decC⁄ãxt
 * 
	$decC⁄ãxtSëSètus
(
decC⁄ãxt
 *
c⁄ãxt
, 
uI¡
 
°©us
) {

212 
c⁄ãxt
->
°©us
|=status;

213 i‡(
°©us
 & 
c⁄ãxt
->
å≠s
Ë
	`øi£
(
SIGFPE
);

214  
c⁄ãxt
;
	}
}

230 
decC⁄ãxt
 * 
	$decC⁄ãxtSëSètusFromSåög
(
decC⁄ãxt
 *
c⁄ãxt
,

231 c⁄° *
°rög
) {

232 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_CS
)==0)

233  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_C⁄vîsi⁄_sy¡ax
);

234 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DZ
)==0)

235  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Divisi⁄_by_zîo
);

236 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DI
)==0)

237  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Divisi⁄_impossibÀ
);

238 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DU
)==0)

239  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Divisi⁄_undeföed
);

240 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IE
)==0)

241  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_I√xa˘
);

242 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IS
)==0)

243  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Insufficõ¡_°‹age
);

244 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IC
)==0)

245  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_InvÆid_c⁄ãxt
);

246 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IO
)==0)

247  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_InvÆid_›î©i⁄
);

248 #i‡
DECSUBSET


249 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_LD
)==0)

250  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Lo°_digôs
);

252 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_OV
)==0)

253  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_OvîÊow
);

254 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_PA
)==0)

255  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Cœm≥d
);

256 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_RO
)==0)

257  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Rounded
);

258 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_SU
)==0)

259  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_Subn‹mÆ
);

260 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_UN
)==0)

261  
	`decC⁄ãxtSëSètus
(
c⁄ãxt
, 
DEC_UndîÊow
);

262 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_ZE
)==0)

263  
c⁄ãxt
;

264  
NULL
;

265 
	}
}

281 
decC⁄ãxt
 * 
	$decC⁄ãxtSëSètusFromSåögQuõt
(
decC⁄ãxt
 *
c⁄ãxt
,

282 c⁄° *
°rög
) {

283 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_CS
)==0)

284  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_C⁄vîsi⁄_sy¡ax
);

285 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DZ
)==0)

286  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Divisi⁄_by_zîo
);

287 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DI
)==0)

288  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Divisi⁄_impossibÀ
);

289 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_DU
)==0)

290  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Divisi⁄_undeföed
);

291 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IE
)==0)

292  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_I√xa˘
);

293 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IS
)==0)

294  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Insufficõ¡_°‹age
);

295 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IC
)==0)

296  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_InvÆid_c⁄ãxt
);

297 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_IO
)==0)

298  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_InvÆid_›î©i⁄
);

299 #i‡
DECSUBSET


300 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_LD
)==0)

301  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Lo°_digôs
);

303 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_OV
)==0)

304  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_OvîÊow
);

305 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_PA
)==0)

306  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Cœm≥d
);

307 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_RO
)==0)

308  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Rounded
);

309 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_SU
)==0)

310  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_Subn‹mÆ
);

311 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_UN
)==0)

312  
	`decC⁄ãxtSëSètusQuõt
(
c⁄ãxt
, 
DEC_UndîÊow
);

313 i‡(
	`°rcmp
(
°rög
, 
DEC_C⁄dôi⁄_ZE
)==0)

314  
c⁄ãxt
;

315  
NULL
;

316 
	}
}

327 
decC⁄ãxt
 * 
	$decC⁄ãxtSëSètusQuõt
(
decC⁄ãxt
 *
c⁄ãxt
, 
uI¡
 
°©us
) {

328 
c⁄ãxt
->
°©us
|=status;

329  
c⁄ãxt
;
	}
}

339 c⁄° *
	$decC⁄ãxtSètusToSåög
(c⁄° 
decC⁄ãxt
 *
c⁄ãxt
) {

340 
I¡
 
°©us
=
c⁄ãxt
->status;

344 i‡(
°©us
==
DEC_InvÆid_›î©i⁄
 )  
DEC_C⁄dôi⁄_IO
;

345 i‡(
°©us
==
DEC_Divisi⁄_by_zîo
 )  
DEC_C⁄dôi⁄_DZ
;

346 i‡(
°©us
==
DEC_OvîÊow
 )  
DEC_C⁄dôi⁄_OV
;

347 i‡(
°©us
==
DEC_UndîÊow
 )  
DEC_C⁄dôi⁄_UN
;

348 i‡(
°©us
==
DEC_I√xa˘
 )  
DEC_C⁄dôi⁄_IE
;

350 i‡(
°©us
==
DEC_Divisi⁄_impossibÀ
 )  
DEC_C⁄dôi⁄_DI
;

351 i‡(
°©us
==
DEC_Divisi⁄_undeföed
 )  
DEC_C⁄dôi⁄_DU
;

352 i‡(
°©us
==
DEC_Rounded
 )  
DEC_C⁄dôi⁄_RO
;

353 i‡(
°©us
==
DEC_Cœm≥d
 )  
DEC_C⁄dôi⁄_PA
;

354 i‡(
°©us
==
DEC_Subn‹mÆ
 )  
DEC_C⁄dôi⁄_SU
;

355 i‡(
°©us
==
DEC_C⁄vîsi⁄_sy¡ax
 )  
DEC_C⁄dôi⁄_CS
;

356 i‡(
°©us
==
DEC_Insufficõ¡_°‹age
 )  
DEC_C⁄dôi⁄_IS
;

357 i‡(
°©us
==
DEC_InvÆid_c⁄ãxt
 )  
DEC_C⁄dôi⁄_IC
;

358 #i‡
DECSUBSET


359 i‡(
°©us
==
DEC_Lo°_digôs
 )  
DEC_C⁄dôi⁄_LD
;

361 i‡(
°©us
==0 )  
DEC_C⁄dôi⁄_ZE
;

362  
DEC_C⁄dôi⁄_MU
;

363 
	}
}

377 
I¡
 
	$decC⁄ãxtTe°Endün
(
Fœg
 
quõt
) {

378 
I¡
 
ªs
=0;

379 
uI¡
 
dÀ
=(uI¡)
DECLITEND
;

380 i‡(
dÀ
>1) dle=1;

382 i‡(
LITEND
!=
DECLITEND
) {

383 i‡(!
quõt
) {

384 #i‡
DECPRINT


385 c⁄° *
adj
;

386 i‡(
LITEND
Ë
adj
="little";

387 
adj
="big";

388 
	`¥ötf
("Warning: DECLITEND is setÅo %d, butÅhis computeráppearsÅo be %s-endian\n",

389 
DECLITEND
, 
adj
);

392 
ªs
=(
I¡
)
LITEND
-
dÀ
;

394  
ªs
;

395 
	}
}

407 
uI¡
 
	$decC⁄ãxtTe°SavedSètus
(
uI¡
 
ﬁd°©us
, uI¡ 
mask
) {

408  (
ﬁd°©us
&
mask
)!=0;

409 
	}
}

421 
uI¡
 
	$decC⁄ãxtTe°Sètus
(
decC⁄ãxt
 *
c⁄ãxt
, 
uI¡
 
mask
) {

422  (
c⁄ãxt
->
°©us
&
mask
)!=0;

423 
	}
}

433 
decC⁄ãxt
 *
	$decC⁄ãxtZîoSètus
(
decC⁄ãxt
 *
c⁄ãxt
) {

434 
c⁄ãxt
->
°©us
=0;

435  
c⁄ãxt
;

436 
	}
}

	@src/decNumber/decContext.h

38 #i‡!
deföed
(
DECCONTEXT
)

39 
	#DECCONTEXT


	)

40 
	#DECCNAME
 "decC⁄ãxt"

	)

41 
	#DECCFULLNAME
 "DecimÆ C⁄ãxàDes¸ùt‹"

	)

42 
	#DECCAUTHOR
 "MikêCowlishaw"

	)

44 #i‡!
deföed
(
öt32_t
)

45 
	~<°döt.h
>

47 
	~<°dio.h
>

48 
	~<sig«l.h
>

51 #i‡!
deföed
(
DECEXTFLAG
)

52 
	#DECEXTFLAG
 1

	)

56 #i‡!
deföed
(
DECSUBSET
)

57 
	#DECSUBSET
 0

	)

61 
	eroundög
 {

62 
	mDEC_ROUND_CEILING
,

63 
	mDEC_ROUND_UP
,

64 
	mDEC_ROUND_HALF_UP
,

65 
	mDEC_ROUND_HALF_EVEN
,

66 
	mDEC_ROUND_HALF_DOWN
,

67 
	mDEC_ROUND_DOWN
,

68 
	mDEC_ROUND_FLOOR
,

69 
	mDEC_ROUND_05UP
,

70 
	mDEC_ROUND_MAX


72 
	#DEC_ROUND_DEFAULT
 
DEC_ROUND_HALF_EVEN
;

	)

75 
öt32_t
 
	mdigôs
;

76 
öt32_t
 
	memax
;

77 
öt32_t
 
	memö
;

78 
roundög
 
	mround
;

79 
uöt32_t
 
	må≠s
;

80 
uöt32_t
 
	m°©us
;

81 
uöt8_t
 
	m˛amp
;

82 #i‡
DECSUBSET


83 
uöt8_t
 
	mexãnded
;

85 } 
	tdecC⁄ãxt
;

88 
	#DEC_MAX_DIGITS
 999999999

	)

89 
	#DEC_MIN_DIGITS
 1

	)

90 
	#DEC_MAX_EMAX
 999999999

	)

91 
	#DEC_MIN_EMAX
 0

	)

92 
	#DEC_MAX_EMIN
 0

	)

93 
	#DEC_MIN_EMIN
 -999999999

	)

94 
	#DEC_MAX_MATH
 999999

	)

99 
	edecCœss
 {

100 
	mDEC_CLASS_SNAN
,

101 
	mDEC_CLASS_QNAN
,

102 
	mDEC_CLASS_NEG_INF
,

103 
	mDEC_CLASS_NEG_NORMAL
,

104 
	mDEC_CLASS_NEG_SUBNORMAL
,

105 
	mDEC_CLASS_NEG_ZERO
,

106 
	mDEC_CLASS_POS_ZERO
,

107 
	mDEC_CLASS_POS_SUBNORMAL
,

108 
	mDEC_CLASS_POS_NORMAL
,

109 
	mDEC_CLASS_POS_INF


112 
	#DEC_CœssSåög_SN
 "sNaN"

	)

113 
	#DEC_CœssSåög_QN
 "NaN"

	)

114 
	#DEC_CœssSåög_NI
 "-Inföôy"

	)

115 
	#DEC_CœssSåög_NN
 "-N‹mÆ"

	)

116 
	#DEC_CœssSåög_NS
 "-Subn‹mÆ"

	)

117 
	#DEC_CœssSåög_NZ
 "-Zîo"

	)

118 
	#DEC_CœssSåög_PZ
 "+Zîo"

	)

119 
	#DEC_CœssSåög_PS
 "+Subn‹mÆ"

	)

120 
	#DEC_CœssSåög_PN
 "+N‹mÆ"

	)

121 
	#DEC_CœssSåög_PI
 "+Inföôy"

	)

122 
	#DEC_CœssSåög_UN
 "InvÆid"

	)

126 #i‡
DECEXTFLAG


128 
	#DEC_C⁄vîsi⁄_sy¡ax
 0x00000001

	)

129 
	#DEC_Divisi⁄_by_zîo
 0x00000002

	)

130 
	#DEC_Divisi⁄_impossibÀ
 0x00000004

	)

131 
	#DEC_Divisi⁄_undeföed
 0x00000008

	)

132 
	#DEC_Insufficõ¡_°‹age
 0x00000010

	)

133 
	#DEC_I√xa˘
 0x00000020

	)

134 
	#DEC_InvÆid_c⁄ãxt
 0x00000040

	)

135 
	#DEC_InvÆid_›î©i⁄
 0x00000080

	)

136 #i‡
DECSUBSET


137 
	#DEC_Lo°_digôs
 0x00000100

	)

139 
	#DEC_OvîÊow
 0x00000200

	)

140 
	#DEC_Cœm≥d
 0x00000400

	)

141 
	#DEC_Rounded
 0x00000800

	)

142 
	#DEC_Subn‹mÆ
 0x00001000

	)

143 
	#DEC_UndîÊow
 0x00002000

	)

146 
	#DEC_C⁄vîsi⁄_sy¡ax
 0x00000010

	)

147 
	#DEC_Divisi⁄_by_zîo
 0x00000002

	)

148 
	#DEC_Divisi⁄_impossibÀ
 0x00000010

	)

149 
	#DEC_Divisi⁄_undeföed
 0x00000010

	)

150 
	#DEC_Insufficõ¡_°‹age
 0x00000010

	)

151 
	#DEC_I√xa˘
 0x00000001

	)

152 
	#DEC_InvÆid_c⁄ãxt
 0x00000010

	)

153 
	#DEC_InvÆid_›î©i⁄
 0x00000010

	)

154 #i‡
DECSUBSET


155 
	#DEC_Lo°_digôs
 0x00000000

	)

157 
	#DEC_OvîÊow
 0x00000008

	)

158 
	#DEC_Cœm≥d
 0x00000000

	)

159 
	#DEC_Rounded
 0x00000000

	)

160 
	#DEC_Subn‹mÆ
 0x00000000

	)

161 
	#DEC_UndîÊow
 0x00000004

	)

167 
	#DEC_IEEE_754_Divisi⁄_by_zîo
 (
DEC_Divisi⁄_by_zîo
)

	)

168 #i‡
DECSUBSET


169 
	#DEC_IEEE_754_I√xa˘
 (
DEC_I√xa˘
 | 
DEC_Lo°_digôs
)

	)

171 
	#DEC_IEEE_754_I√xa˘
 (
DEC_I√xa˘
)

	)

173 
	#DEC_IEEE_754_InvÆid_›î©i⁄
 (
DEC_C⁄vîsi⁄_sy¡ax
 | \

	)

174 
	gDEC_Divisi⁄_impossibÀ
 | \

175 
	gDEC_Divisi⁄_undeföed
 | \

176 
	gDEC_Insufficõ¡_°‹age
 | \

177 
	gDEC_InvÆid_c⁄ãxt
 | \

178 
	gDEC_InvÆid_›î©i⁄
)

179 
	#DEC_IEEE_754_OvîÊow
 (
DEC_OvîÊow
)

	)

180 
	#DEC_IEEE_754_UndîÊow
 (
DEC_UndîÊow
)

	)

183 
	#DEC_Eº‹s
 (
DEC_IEEE_754_Divisi⁄_by_zîo
 | \

	)

184 
	gDEC_IEEE_754_InvÆid_›î©i⁄
 | \

185 
	gDEC_IEEE_754_OvîÊow
 | 
	gDEC_IEEE_754_UndîÊow
)

187 
	#DEC_NaNs
 
DEC_IEEE_754_InvÆid_›î©i⁄


	)

190 #i‡
DECSUBSET


191 
	#DEC_Inf‹m©i⁄
 (
DEC_Cœm≥d
 | 
DEC_Rounded
 | 
DEC_I√xa˘
 \

	)

192 | 
	gDEC_Lo°_digôs
)

194 
	#DEC_Inf‹m©i⁄
 (
DEC_Cœm≥d
 | 
DEC_Rounded
 | 
DEC_I√xa˘
)

	)

198 
	#DEC_IEEE_854_Divisi⁄_by_zîo
 
DEC_IEEE_754_Divisi⁄_by_zîo


	)

199 
	#DEC_IEEE_854_I√xa˘
 
DEC_IEEE_754_I√xa˘


	)

200 
	#DEC_IEEE_854_InvÆid_›î©i⁄
 
DEC_IEEE_754_InvÆid_›î©i⁄


	)

201 
	#DEC_IEEE_854_OvîÊow
 
DEC_IEEE_754_OvîÊow


	)

202 
	#DEC_IEEE_854_UndîÊow
 
DEC_IEEE_754_UndîÊow


	)

205 
	#DEC_C⁄dôi⁄_CS
 "C⁄vîsi⁄ sy¡ax"

	)

206 
	#DEC_C⁄dôi⁄_DZ
 "Divisi⁄ by zîo"

	)

207 
	#DEC_C⁄dôi⁄_DI
 "Divisi⁄ impossibÀ"

	)

208 
	#DEC_C⁄dôi⁄_DU
 "Divisi⁄ undeföed"

	)

209 
	#DEC_C⁄dôi⁄_IE
 "I√xa˘"

	)

210 
	#DEC_C⁄dôi⁄_IS
 "Insufficõ¡ st‹age"

	)

211 
	#DEC_C⁄dôi⁄_IC
 "InvÆid c⁄ãxt"

	)

212 
	#DEC_C⁄dôi⁄_IO
 "InvÆid o≥øti⁄"

	)

213 #i‡
DECSUBSET


214 
	#DEC_C⁄dôi⁄_LD
 "Lo° digôs"

	)

216 
	#DEC_C⁄dôi⁄_OV
 "OvîÊow"

	)

217 
	#DEC_C⁄dôi⁄_PA
 "Cœm≥d"

	)

218 
	#DEC_C⁄dôi⁄_RO
 "Rounded"

	)

219 
	#DEC_C⁄dôi⁄_SU
 "Subn‹mÆ"

	)

220 
	#DEC_C⁄dôi⁄_UN
 "UndîÊow"

	)

221 
	#DEC_C⁄dôi⁄_ZE
 "Nÿ°©us"

	)

222 
	#DEC_C⁄dôi⁄_MU
 "Mu…ùÀ sètus"

	)

223 
	#DEC_C⁄dôi⁄_Lígth
 21

	)

227 
	#DEC_INIT_BASE
 0

	)

228 
	#DEC_INIT_DECIMAL32
 32

	)

229 
	#DEC_INIT_DECIMAL64
 64

	)

230 
	#DEC_INIT_DECIMAL128
 128

	)

232 
	#DEC_INIT_DECSINGLE
 
DEC_INIT_DECIMAL32


	)

233 
	#DEC_INIT_DECDOUBLE
 
DEC_INIT_DECIMAL64


	)

234 
	#DEC_INIT_DECQUAD
 
DEC_INIT_DECIMAL128


	)

237 
decC⁄ãxt
 * 
decC⁄ãxtCÀ¨Sètus
(decC⁄ãxà*, 
uöt32_t
);

238 
decC⁄ãxt
 * 
decC⁄ãxtDeÁu…
(decC⁄ãxà*, 
öt32_t
);

239 
roundög
 
decC⁄ãxtGëRoundög
(
decC⁄ãxt
 *);

240 
uöt32_t
 
decC⁄ãxtGëSètus
(
decC⁄ãxt
 *);

241 
decC⁄ãxt
 * 
decC⁄ãxtRe°‹eSètus
(decC⁄ãxà*, 
uöt32_t
, uint32_t);

242 
uöt32_t
 
decC⁄ãxtSaveSètus
(
decC⁄ãxt
 *, uint32_t);

243 
decC⁄ãxt
 * 
decC⁄ãxtSëRoundög
(decC⁄ãxà*, 
roundög
);

244 
decC⁄ãxt
 * 
decC⁄ãxtSëSètus
(decC⁄ãxà*, 
uöt32_t
);

245 
decC⁄ãxt
 * 
decC⁄ãxtSëSètusFromSåög
(decContext *, const *);

246 
decC⁄ãxt
 * 
decC⁄ãxtSëSètusFromSåögQuõt
(decContext *, const *);

247 
decC⁄ãxt
 * 
decC⁄ãxtSëSètusQuõt
(decC⁄ãxà*, 
uöt32_t
);

248 c⁄° * 
decC⁄ãxtSètusToSåög
(c⁄° 
decC⁄ãxt
 *);

249 
öt32_t
 
decC⁄ãxtTe°Endün
(
uöt8_t
);

250 
uöt32_t
 
decC⁄ãxtTe°SavedSètus
(uint32_t, uint32_t);

251 
uöt32_t
 
decC⁄ãxtTe°Sètus
(
decC⁄ãxt
 *, uint32_t);

252 
decC⁄ãxt
 * 
decC⁄ãxtZîoSètus
(decContext *);

	@src/decNumber/decDPD.h

34 #i‡
deföed
(
DEC_BCD2DPD
Ë&& DEC_BCD2DPD==1 && !deföed(
DECBCD2DPD
)

35 
	#DECBCD2DPD


	)

37 c⁄° 
uöt16_t
 
	gBCD2DPD
[2458]={ 0, 1, 2, 3, 4, 5, 6, 7,

229 #i‡
deföed
(
DEC_DPD2BCD
Ë&& DEC_DPD2BCD==1 && !deföed(
DECDPD2BCD
)

230 
	#DECDPD2BCD


	)

232 c⁄° 
uöt16_t
 
	gDPD2BCD
[1024]={ 0, 1, 2, 3, 4, 5, 6, 7,

314 #i‡
deföed
(
DEC_BIN2DPD
Ë&& DEC_BIN2DPD==1 && !deföed(
DECBIN2DPD
)

315 
	#DECBIN2DPD


	)

317 c⁄° 
uöt16_t
 
	gBIN2DPD
[1000]={ 0, 1, 2, 3, 4, 5, 6, 7,

397 #i‡
deföed
(
DEC_DPD2BIN
Ë&& DEC_DPD2BIN==1 && !deföed(
DECDPD2BIN
)

398 
	#DECDPD2BIN


	)

400 c⁄° 
uöt16_t
 
	gDPD2BIN
[1024]={ 0, 1, 2, 3, 4, 5, 6, 7,

482 #i‡
deföed
(
DEC_DPD2BINK
Ë&& DEC_DPD2BINK==1 && !deföed(
DECDPD2BINK
)

483 
	#DECDPD2BINK


	)

485 c⁄° 
uöt32_t
 
	gDPD2BINK
[1024]={ 0, 1000, 2000, 3000, 4000, 5000,

590 #i‡
deföed
(
DEC_DPD2BINM
Ë&& DEC_DPD2BINM==1 && !deföed(
DECDPD2BINM
)

591 
	#DECDPD2BINM


	)

593 c⁄° 
uöt32_t
 
	gDPD2BINM
[1024]={0, 1000000, 2000000, 3000000, 4000000,

742 #i‡
deföed
(
DEC_BIN2CHAR
Ë&& DEC_BIN2CHAR==1 && !deföed(
DECBIN2CHAR
)

743 
	#DECBIN2CHAR


	)

745 c⁄° 
uöt8_t
 
	gBIN2CHAR
[4001]={

948 #i‡
deföed
(
DEC_DPD2BCD8
Ë&& DEC_DPD2BCD8==1 && !deföed(
DECDPD2BCD8
)

949 
	#DECDPD2BCD8


	)

951 c⁄° 
uöt8_t
 
	gDPD2BCD8
[4096]={

1068 #i‡
deföed
(
DEC_BIN2BCD8
Ë&& DEC_BIN2BCD8==1 && !deföed(
DECBIN2BCD8
)

1069 
	#DECBIN2BCD8


	)

1071 c⁄° 
uöt8_t
 
	gBIN2BCD8
[4000]={

	@src/decNumber/decDouble.c

22 
	~"decC⁄ãxt.h
"

23 
	~"decDoubÀ.h
"

26 
	#DECPMAX
 
DECDOUBLE_Pmax


	)

27 
	#DECEMIN
 
DECDOUBLE_Emö


	)

28 
	#DECEMAX
 
DECDOUBLE_Emax


	)

29 
	#DECEMAXD
 
DECDOUBLE_EmaxD


	)

30 
	#DECBYTES
 
DECDOUBLE_Byãs


	)

31 
	#DECSTRING
 
DECDOUBLE_Såög


	)

32 
	#DECECONL
 
DECDOUBLE_Ec⁄L


	)

33 
	#DECBIAS
 
DECDOUBLE_Büs


	)

34 
	#DECLETS
 
DECDOUBLE_De˛ës


	)

35 
	#DECQTINY
 (-
DECDOUBLE_Büs
)

	)

37 
	#DECWBYTES
 
DECQUAD_Byãs


	)

38 
	#DECWPMAX
 
DECQUAD_Pmax


	)

39 
	#DECWECONL
 
DECQUAD_Ec⁄L


	)

40 
	#DECWBIAS
 
DECQUAD_Büs


	)

43 
	#decFlﬂt
 
decDoubÀ


44 
	#decFlﬂtWidî
 
decQuad


45 

	)

47 
	#decFlﬂtFromBCD
 
decDoubÀFromBCD


	)

48 
	#decFlﬂtFromI¡32
 
decDoubÀFromI¡32


	)

49 
	#decFlﬂtFromPacked
 
decDoubÀFromPacked


	)

50 
	#decFlﬂtFromPackedChecked
 
decDoubÀFromPackedChecked


	)

51 
	#decFlﬂtFromSåög
 
decDoubÀFromSåög


	)

52 
	#decFlﬂtFromUI¡32
 
decDoubÀFromUI¡32


	)

53 
	#decFlﬂtFromWidî
 
decDoubÀFromWidî


	)

54 
	#decFlﬂtGëC€fficõ¡
 
decDoubÀGëC€fficõ¡


	)

55 
	#decFlﬂtGëExp⁄ít
 
decDoubÀGëExp⁄ít


	)

56 
	#decFlﬂtSëC€fficõ¡
 
decDoubÀSëC€fficõ¡


	)

57 
	#decFlﬂtSëExp⁄ít
 
decDoubÀSëExp⁄ít


	)

58 
	#decFlﬂtShow
 
decDoubÀShow


	)

59 
	#decFlﬂtToBCD
 
decDoubÀToBCD


	)

60 
	#decFlﬂtToEngSåög
 
decDoubÀToEngSåög


	)

61 
	#decFlﬂtToI¡32
 
decDoubÀToI¡32


	)

62 
	#decFlﬂtToI¡32Exa˘
 
decDoubÀToI¡32Exa˘


	)

63 
	#decFlﬂtToPacked
 
decDoubÀToPacked


	)

64 
	#decFlﬂtToSåög
 
decDoubÀToSåög


	)

65 
	#decFlﬂtToUI¡32
 
decDoubÀToUI¡32


	)

66 
	#decFlﬂtToUI¡32Exa˘
 
decDoubÀToUI¡32Exa˘


	)

67 
	#decFlﬂtToWidî
 
decDoubÀToWidî


	)

68 
	#decFlﬂtZîo
 
decDoubÀZîo


	)

71 
	#decFlﬂtAbs
 
decDoubÀAbs


	)

72 
	#decFlﬂtAdd
 
decDoubÀAdd


	)

73 
	#decFlﬂtAnd
 
decDoubÀAnd


	)

74 
	#decFlﬂtDivide
 
decDoubÀDivide


	)

75 
	#decFlﬂtDivideI¡egî
 
decDoubÀDivideI¡egî


	)

76 
	#decFlﬂtFMA
 
decDoubÀFMA


	)

77 
	#decFlﬂtInvît
 
decDoubÀInvît


	)

78 
	#decFlﬂtLogB
 
decDoubÀLogB


	)

79 
	#decFlﬂtMax
 
decDoubÀMax


	)

80 
	#decFlﬂtMaxMag
 
decDoubÀMaxMag


	)

81 
	#decFlﬂtMö
 
decDoubÀMö


	)

82 
	#decFlﬂtMöMag
 
decDoubÀMöMag


	)

83 
	#decFlﬂtMöus
 
decDoubÀMöus


	)

84 
	#decFlﬂtMu…ùly
 
decDoubÀMu…ùly


	)

85 
	#decFlﬂtNextMöus
 
decDoubÀNextMöus


	)

86 
	#decFlﬂtNextPlus
 
decDoubÀNextPlus


	)

87 
	#decFlﬂtNextTow¨d
 
decDoubÀNextTow¨d


	)

88 
	#decFlﬂtOr
 
decDoubÀOr


	)

89 
	#decFlﬂtPlus
 
decDoubÀPlus


	)

90 
	#decFlﬂtQu™tize
 
decDoubÀQu™tize


	)

91 
	#decFlﬂtRedu˚
 
decDoubÀRedu˚


	)

92 
	#decFlﬂtRemaödî
 
decDoubÀRemaödî


	)

93 
	#decFlﬂtRemaödîNór
 
decDoubÀRemaödîNór


	)

94 
	#decFlﬂtRŸ©e
 
decDoubÀRŸ©e


	)

95 
	#decFlﬂtSˇÀB
 
decDoubÀSˇÀB


	)

96 
	#decFlﬂtShi·
 
decDoubÀShi·


	)

97 
	#decFlﬂtSubåa˘
 
decDoubÀSubåa˘


	)

98 
	#decFlﬂtToI¡egølVÆue
 
decDoubÀToI¡egølVÆue


	)

99 
	#decFlﬂtToI¡egølExa˘
 
decDoubÀToI¡egølExa˘


	)

100 
	#decFlﬂtX‹
 
decDoubÀX‹


	)

103 
	#decFlﬂtCom∑ª
 
decDoubÀCom∑ª


	)

104 
	#decFlﬂtCom∑ªSig«l
 
decDoubÀCom∑ªSig«l


	)

105 
	#decFlﬂtCom∑ªTŸÆ
 
decDoubÀCom∑ªTŸÆ


	)

106 
	#decFlﬂtCom∑ªTŸÆMag
 
decDoubÀCom∑ªTŸÆMag


	)

109 
	#decFlﬂtC™⁄iˇl
 
decDoubÀC™⁄iˇl


	)

110 
	#decFlﬂtC›y
 
decDoubÀC›y


	)

111 
	#decFlﬂtC›yAbs
 
decDoubÀC›yAbs


	)

112 
	#decFlﬂtC›yNeg©e
 
decDoubÀC›yNeg©e


	)

113 
	#decFlﬂtC›ySign
 
decDoubÀC›ySign


	)

116 
	#decFlﬂtCœss
 
decDoubÀCœss


	)

117 
	#decFlﬂtCœssSåög
 
decDoubÀCœssSåög


	)

118 
	#decFlﬂtDigôs
 
decDoubÀDigôs


	)

119 
	#decFlﬂtIsC™⁄iˇl
 
decDoubÀIsC™⁄iˇl


	)

120 
	#decFlﬂtIsFöôe
 
decDoubÀIsFöôe


	)

121 
	#decFlﬂtIsInföôe
 
decDoubÀIsInföôe


	)

122 
	#decFlﬂtIsI¡egî
 
decDoubÀIsI¡egî


	)

123 
	#decFlﬂtIsLogiˇl
 
decDoubÀIsLogiˇl


	)

124 
	#decFlﬂtIsNaN
 
decDoubÀIsNaN


	)

125 
	#decFlﬂtIsNeg©ive
 
decDoubÀIsNeg©ive


	)

126 
	#decFlﬂtIsN‹mÆ
 
decDoubÀIsN‹mÆ


	)

127 
	#decFlﬂtIsPosôive
 
decDoubÀIsPosôive


	)

128 
	#decFlﬂtIsSig«lög
 
decDoubÀIsSig«lög


	)

129 
	#decFlﬂtIsSig«Œög
 
decDoubÀIsSig«Œög


	)

130 
	#decFlﬂtIsSig√d
 
decDoubÀIsSig√d


	)

131 
	#decFlﬂtIsSubn‹mÆ
 
decDoubÀIsSubn‹mÆ


	)

132 
	#decFlﬂtIsZîo
 
decDoubÀIsZîo


	)

133 
	#decFlﬂtRadix
 
decDoubÀRadix


	)

134 
	#decFlﬂtSameQu™tum
 
decDoubÀSameQu™tum


	)

135 
	#decFlﬂtVîsi⁄
 
decDoubÀVîsi⁄


	)

137 
	~"decNumbîLoˇl.h
"

138 
	~"decComm⁄.c
"

139 
	~"decBasic.c
"

	@src/decNumber/decDouble.h

20 #i‡!
deföed
(
DECDOUBLE
)

21 
	#DECDOUBLE


	)

23 
	#DECDOUBLENAME
 "decimÆDoubÀ"

	)

24 
	#DECDOUBLETITLE
 "DecimÆ 64-bô d©um"

	)

25 
	#DECDOUBLEAUTHOR
 "MikêCowlishaw"

	)

28 
	#DECDOUBLE_Byãs
 8

	)

29 
	#DECDOUBLE_Pmax
 16

	)

30 
	#DECDOUBLE_Emö
 -383

	)

31 
	#DECDOUBLE_Emax
 384

	)

32 
	#DECDOUBLE_EmaxD
 3

	)

33 
	#DECDOUBLE_Büs
 398

	)

34 
	#DECDOUBLE_Såög
 25

	)

35 
	#DECDOUBLE_Ec⁄L
 8

	)

36 
	#DECDOUBLE_De˛ës
 5

	)

38 
	#DECDOUBLE_Ehigh
 (
DECDOUBLE_Emax
 + 
DECDOUBLE_Büs
 - (
DECDOUBLE_Pmax
-1))

	)

41 
	~"decC⁄ãxt.h
"

42 
	~"decQuad.h
"

46 
uöt8_t
 
	mbyãs
[
DECDOUBLE_Byãs
];

47 
uöt16_t
 
	msh‹ts
[
DECDOUBLE_Byãs
/2];

48 
uöt32_t
 
	mw‹ds
[
DECDOUBLE_Byãs
/4];

49 #i‡
DECUSE64


50 
uöt64_t
 
	ml⁄gs
[
DECDOUBLE_Byãs
/8];

52 } 
	tdecDoubÀ
;

59 
decDoubÀ
 * 
decDoubÀFromBCD
(decDoubÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *, int32_t);

60 
decDoubÀ
 * 
decDoubÀFromI¡32
(decDoubÀ *, 
öt32_t
);

61 
decDoubÀ
 * 
decDoubÀFromPacked
(decDoubÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *);

62 
decDoubÀ
 * 
decDoubÀFromPackedChecked
(decDoubÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *);

63 
decDoubÀ
 * 
decDoubÀFromSåög
(decDoubÀ *, c⁄° *, 
decC⁄ãxt
 *);

64 
decDoubÀ
 * 
decDoubÀFromUI¡32
(decDoubÀ *, 
uöt32_t
);

65 
decDoubÀ
 * 
decDoubÀFromWidî
(decDoubÀ *, c⁄° 
decQuad
 *, 
decC⁄ãxt
 *);

66 
öt32_t
 
decDoubÀGëC€fficõ¡
(c⁄° 
decDoubÀ
 *, 
uöt8_t
 *);

67 
öt32_t
 
decDoubÀGëExp⁄ít
(c⁄° 
decDoubÀ
 *);

68 
decDoubÀ
 * 
decDoubÀSëC€fficõ¡
(decDoubÀ *, c⁄° 
uöt8_t
 *, 
öt32_t
);

69 
decDoubÀ
 * 
decDoubÀSëExp⁄ít
(decDoubÀ *, 
decC⁄ãxt
 *, 
öt32_t
);

70 
decDoubÀShow
(c⁄° 
decDoubÀ
 *, const *);

71 
öt32_t
 
decDoubÀToBCD
(c⁄° 
decDoubÀ
 *, i¡32_à*, 
uöt8_t
 *);

72 * 
decDoubÀToEngSåög
(c⁄° 
decDoubÀ
 *, *);

73 
öt32_t
 
decDoubÀToI¡32
(c⁄° 
decDoubÀ
 *, 
decC⁄ãxt
 *, 
roundög
);

74 
öt32_t
 
decDoubÀToI¡32Exa˘
(c⁄° 
decDoubÀ
 *, 
decC⁄ãxt
 *, 
roundög
);

75 
öt32_t
 
decDoubÀToPacked
(c⁄° 
decDoubÀ
 *, i¡32_à*, 
uöt8_t
 *);

76 * 
decDoubÀToSåög
(c⁄° 
decDoubÀ
 *, *);

77 
uöt32_t
 
decDoubÀToUI¡32
(c⁄° 
decDoubÀ
 *, 
decC⁄ãxt
 *, 
roundög
);

78 
uöt32_t
 
decDoubÀToUI¡32Exa˘
(c⁄° 
decDoubÀ
 *, 
decC⁄ãxt
 *, 
roundög
);

79 
decQuad
 * 
decDoubÀToWidî
(c⁄° 
decDoubÀ
 *, decQuad *);

80 
decDoubÀ
 * 
decDoubÀZîo
(decDouble *);

83 
decDoubÀ
 * 
decDoubÀAbs
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

84 
decDoubÀ
 * 
decDoubÀAdd
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

85 
decDoubÀ
 * 
decDoubÀAnd
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

86 
decDoubÀ
 * 
decDoubÀDivide
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

87 
decDoubÀ
 * 
decDoubÀDivideI¡egî
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

88 
decDoubÀ
 * 
decDoubÀFMA
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

89 
decDoubÀ
 * 
decDoubÀInvît
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

90 
decDoubÀ
 * 
decDoubÀLogB
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

91 
decDoubÀ
 * 
decDoubÀMax
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

92 
decDoubÀ
 * 
decDoubÀMaxMag
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

93 
decDoubÀ
 * 
decDoubÀMö
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

94 
decDoubÀ
 * 
decDoubÀMöMag
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

95 
decDoubÀ
 * 
decDoubÀMöus
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

96 
decDoubÀ
 * 
decDoubÀMu…ùly
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

97 
decDoubÀ
 * 
decDoubÀNextMöus
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

98 
decDoubÀ
 * 
decDoubÀNextPlus
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

99 
decDoubÀ
 * 
decDoubÀNextTow¨d
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

100 
decDoubÀ
 * 
decDoubÀOr
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

101 
decDoubÀ
 * 
decDoubÀPlus
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

102 
decDoubÀ
 * 
decDoubÀQu™tize
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

103 
decDoubÀ
 * 
decDoubÀRedu˚
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

104 
decDoubÀ
 * 
decDoubÀRemaödî
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

105 
decDoubÀ
 * 
decDoubÀRemaödîNór
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

106 
decDoubÀ
 * 
decDoubÀRŸ©e
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

107 
decDoubÀ
 * 
decDoubÀSˇÀB
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

108 
decDoubÀ
 * 
decDoubÀShi·
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

109 
decDoubÀ
 * 
decDoubÀSubåa˘
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

110 
decDoubÀ
 * 
decDoubÀToI¡egølVÆue
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *, 
roundög
);

111 
decDoubÀ
 * 
decDoubÀToI¡egølExa˘
(decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

112 
decDoubÀ
 * 
decDoubÀX‹
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

115 
decDoubÀ
 * 
decDoubÀCom∑ª
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

116 
decDoubÀ
 * 
decDoubÀCom∑ªSig«l
(decDoubÀ *, c⁄° decDoubÀ *, c⁄° decDoubÀ *, 
decC⁄ãxt
 *);

117 
decDoubÀ
 * 
decDoubÀCom∑ªTŸÆ
(decDouble *, const decDouble *, const decDouble *);

118 
decDoubÀ
 * 
decDoubÀCom∑ªTŸÆMag
(decDouble *, const decDouble *, const decDouble *);

121 
decDoubÀ
 * 
decDoubÀC™⁄iˇl
(decDouble *, const decDouble *);

122 
decDoubÀ
 * 
decDoubÀC›y
(decDouble *, const decDouble *);

123 
decDoubÀ
 * 
decDoubÀC›yAbs
(decDouble *, const decDouble *);

124 
decDoubÀ
 * 
decDoubÀC›yNeg©e
(decDouble *, const decDouble *);

125 
decDoubÀ
 * 
decDoubÀC›ySign
(decDouble *, const decDouble *, const decDouble *);

128 
decCœss
 
decDoubÀCœss
(c⁄° 
decDoubÀ
 *);

129 c⁄° * 
decDoubÀCœssSåög
(c⁄° 
decDoubÀ
 *);

130 
uöt32_t
 
decDoubÀDigôs
(c⁄° 
decDoubÀ
 *);

131 
uöt32_t
 
decDoubÀIsC™⁄iˇl
(c⁄° 
decDoubÀ
 *);

132 
uöt32_t
 
decDoubÀIsFöôe
(c⁄° 
decDoubÀ
 *);

133 
uöt32_t
 
decDoubÀIsInföôe
(c⁄° 
decDoubÀ
 *);

134 
uöt32_t
 
decDoubÀIsI¡egî
(c⁄° 
decDoubÀ
 *);

135 
uöt32_t
 
decDoubÀIsLogiˇl
(c⁄° 
decDoubÀ
 *);

136 
uöt32_t
 
decDoubÀIsNaN
(c⁄° 
decDoubÀ
 *);

137 
uöt32_t
 
decDoubÀIsNeg©ive
(c⁄° 
decDoubÀ
 *);

138 
uöt32_t
 
decDoubÀIsN‹mÆ
(c⁄° 
decDoubÀ
 *);

139 
uöt32_t
 
decDoubÀIsPosôive
(c⁄° 
decDoubÀ
 *);

140 
uöt32_t
 
decDoubÀIsSig«lög
(c⁄° 
decDoubÀ
 *);

141 
uöt32_t
 
decDoubÀIsSig«Œög
(c⁄° 
decDoubÀ
 *);

142 
uöt32_t
 
decDoubÀIsSig√d
(c⁄° 
decDoubÀ
 *);

143 
uöt32_t
 
decDoubÀIsSubn‹mÆ
(c⁄° 
decDoubÀ
 *);

144 
uöt32_t
 
decDoubÀIsZîo
(c⁄° 
decDoubÀ
 *);

145 
uöt32_t
 
decDoubÀRadix
(c⁄° 
decDoubÀ
 *);

146 
uöt32_t
 
decDoubÀSameQu™tum
(c⁄° 
decDoubÀ
 *, const decDouble *);

147 c⁄° * 
decDoubÀVîsi⁄
();

152 
	#decDoubÀToNumbî
(
dq
, 
dn
Ë
	`decimÆ64ToNumbî
((
decimÆ64
 *)(dq), dn)

	)

153 
	#decDoubÀFromNumbî
(
dq
, 
dn
, 
£t
Ë
	`decimÆ64FromNumbî
((
decimÆ64
 *)(dq), dn, së)

	)

	@src/decNumber/decNumber.c

165 
	~<°dlib.h
>

166 
	~<°dio.h
>

167 
	~<°rög.h
>

168 
	~<˘y≥.h
>

169 
	~"decNumbî.h
"

170 
	~"decNumbîLoˇl.h
"

174 c⁄° 
uByã
 
	gd2uèbÀ
[
DECMAXD2U
+1]=
D2UTABLE
;

176 
	#DECVERB
 1

177 
	#powîs
 
DECPOWERS


178 

	)

180 
	#DIVIDE
 0x80

181 
	#REMAINDER
 0x40

182 
	#DIVIDEINT
 0x20

183 
	#REMNEAR
 0x10

184 
	#COMPARE
 0x01

185 
	#COMPMAX
 0x02

186 
	#COMPMIN
 0x03

187 
	#COMPTOTAL
 0x04

188 
	#COMPNAN
 0x05

189 
	#COMPSIG
 0x06

190 
	#COMPMAXMAG
 0x07

191 
	#COMPMINMAG
 0x08

192 

	)

193 
	#DEC_sNaN
 0x40000000

194 
	#BADINT
 (
I¡
)0x80000000

196 
	#BIGEVEN
 (
I¡
)0x80000002

	)

197 
	#BIGODD
 (
I¡
)0x80000003

	)

199 
Unô
 
	gu¨r⁄e
[1]={1};

202 #i‡
DECDPUN
<=4

203 
	#eI¡
 
I¡


204 
	#ueI¡
 
uI¡


208 c⁄° 
uI¡
 
mu…õs
[]={131073, 26215, 5243, 1049, 210};

	)

210 
	#QUOT10
(
u
, 
n
Ë((((
uI¡
)(u)>>“))*
mu…õs
[n])>>17)

	)

213 #i‡!
DECUSE64


214 #îr‹ 
decNumbî
.
c
: 
DECUSE64
 
mu°
 
be
 1 
whí
 
DECDPUN
>4

216 
	#eI¡
 
L⁄g


217 
	#ueI¡
 
uL⁄g


219 

	)

221 
decNumbî
 * 
decAddOp
(decNumber *, const decNumber *, const decNumber *,

222 
decC⁄ãxt
 *, 
uByã
, 
uI¡
 *);

223 
Fœg
 
decBiSå
(const *, const *, const *);

224 
uI¡
 
decCheckM©h
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *, uInt *);

225 
decAµlyRound
(
decNumbî
 *, 
decC⁄ãxt
 *, 
I¡
, 
uI¡
 *);

226 
I¡
 
decCom∑ª
(c⁄° 
decNumbî
 *
lhs
, c⁄° decNumbî *
rhs
, 
Fœg
);

227 
decNumbî
 * 
decCom∑ªOp
(decNumber *, const decNumber *,

228 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *,

229 
Fœg
, 
uI¡
 *);

230 
decC›yFô
(
decNumbî
 *, c⁄° decNumbî *, 
decC⁄ãxt
 *,

231 
I¡
 *, 
uI¡
 *);

232 
decNumbî
 * 
decDeˇp
(decNumbî *, 
I¡
);

233 
decNumbî
 * 
decDivideOp
(decNumber *, const decNumber *,

234 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *, 
Fœg
, 
uI¡
 *);

235 
decNumbî
 * 
decExpOp
(decNumber *, const decNumber *,

236 
decC⁄ãxt
 *, 
uI¡
 *);

237 
decFöÆize
(
decNumbî
 *, 
decC⁄ãxt
 *, 
I¡
 *, 
uI¡
 *);

238 
I¡
 
decGëDigôs
(
Unô
 *, Int);

239 
I¡
 
decGëI¡
(c⁄° 
decNumbî
 *);

240 
decNumbî
 * 
decLnOp
(decNumber *, const decNumber *,

241 
decC⁄ãxt
 *, 
uI¡
 *);

242 
decNumbî
 * 
decMu…ùlyOp
(decNumber *, const decNumber *,

243 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *,

244 
uI¡
 *);

245 
decNumbî
 * 
decNaNs
(decNumber *, const decNumber *,

246 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *, 
uI¡
 *);

247 
decNumbî
 * 
decQu™tizeOp
(decNumber *, const decNumber *,

248 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *, 
Fœg
,

249 
uI¡
 *);

250 
decRevî£
(
Unô
 *, Unit *);

251 
decSëC€ff
(
decNumbî
 *, 
decC⁄ãxt
 *, c⁄° 
Unô
 *,

252 
I¡
, I¡ *, 
uI¡
 *);

253 
decSëMaxVÆue
(
decNumbî
 *, 
decC⁄ãxt
 *);

254 
decSëOvîÊow
(
decNumbî
 *, 
decC⁄ãxt
 *, 
uI¡
 *);

255 
decSëSubn‹mÆ
(
decNumbî
 *, 
decC⁄ãxt
 *, 
I¡
 *, 
uI¡
 *);

256 
I¡
 
decShi·ToLó°
(
Unô
 *, Int, Int);

257 
I¡
 
decShi·ToMo°
(
Unô
 *, Int, Int);

258 
decSètus
(
decNumbî
 *, 
uI¡
, 
decC⁄ãxt
 *);

259 
decToSåög
(c⁄° 
decNumbî
 *, [], 
Fœg
);

260 
decNumbî
 * 
decTrim
(decNumbî *, 
decC⁄ãxt
 *, 
Fœg
, Fœg, 
I¡
 *);

261 
I¡
 
decUnôAddSub
(c⁄° 
Unô
 *, Int, const Unit *, Int, Int,

262 
Unô
 *, 
I¡
);

263 
I¡
 
decUnôCom∑ª
(c⁄° 
Unô
 *, Int, const Unit *, Int, Int);

265 #i‡!
DECSUBSET


267 
	#decFöish
(
a
,
b
,
c
,
d
Ë
	`decFöÆize
◊,b,c,d)

	)

269 
decFöish
(
decNumbî
 *, 
decC⁄ãxt
 *, 
I¡
 *, 
uI¡
 *);

270 
decNumbî
 * 
decRoundO≥ønd
(c⁄° decNumbî *, 
decC⁄ãxt
 *, 
uI¡
 *);

275 
	#SPECIALARG
 (
rhs
->
bôs
 & 
DECSPECIAL
)

	)

276 
	#SPECIALARGS
 ((
lhs
->
bôs
 | 
rhs
->bôsË& 
DECSPECIAL
)

	)

279 #i‡
DECALLOC


283 
	#mÆloc
(
a
Ë
	`decMÆloc
◊)

	)

284 
	#‰ì
(
a
Ë
	`decFªe
◊)

	)

285 
	#DECFENCE
 0x5a

287 *
	`decMÆloc
(
size_t
);

	)

288 
decFªe
(*);

289 
uI¡
 
	gdecAŒocByãs
=0;

297 #i‡
DECCHECK


306 
	#DECUNRESU
 ((
decNumbî
 *)(*)0xffffffff)

	)

307 
	#DECUNUSED
 ((c⁄° 
decNumbî
 *)(*)0xffffffff)

	)

308 
	#DECUNCONT
 ((
decC⁄ãxt
 *)(*)(0xffffffff))

	)

309 
Fœg
 
decCheckO≥ønds
(
decNumbî
 *, const decNumber *,

310 c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

311 
Fœg
 
decCheckNumbî
(c⁄° 
decNumbî
 *);

312 
decCheckI√xa˘
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

315 #i‡
DECTRACE
 || 
DECCHECK


317 
decNumbîShow
(c⁄° 
decNumbî
 *);

318 
decDumpAr
(, c⁄° 
Unô
 *, 
I¡
);

334 
decNumbî
 * 
	$decNumbîFromI¡32
(
decNumbî
 *
dn
, 
I¡
 
ö
) {

335 
uI¡
 
unsig
;

336 i‡(
ö
>=0Ë
unsig
=in;

338 i‡(
ö
==
BADINT
Ë
unsig
=(
uI¡
)1073741824*2;

339 
unsig
=-
ö
;

342 
	`decNumbîFromUI¡32
(
dn
, 
unsig
);

343 i‡(
ö
<0Ë
dn
->
bôs
=
DECNEG
;

344  
dn
;

345 
	}
}

347 
decNumbî
 * 
	$decNumbîFromUI¡32
(
decNumbî
 *
dn
, 
uI¡
 
uö
) {

348 
Unô
 *
up
;

349 
	`decNumbîZîo
(
dn
);

350 i‡(
uö
==0Ë 
dn
;

351 
up
=
dn
->
lsu
; 
uö
>0; up++) {

352 *
up
=(
Unô
)(
uö
%(
DECDPUNMAX
+1));

353 
uö
=uö/(
DECDPUNMAX
+1);

355 
dn
->
digôs
=
	`decGëDigôs
(dn->
lsu
, 
up
-dn->lsu);

356  
dn
;

357 
	}
}

369 
I¡
 
	$decNumbîToI¡32
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

370 #i‡
DECCHECK


371 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, 
dn
, 
£t
))  0;

375 i‡(
dn
->
bôs
&
DECSPECIAL
 || dn->
digôs
>10 || dn->
exp⁄ít
!=0) ;

377 
I¡
 
d
;

378 c⁄° 
Unô
 *
up
;

379 
uI¡
 
hi
=0, 
lo
;

380 
up
=
dn
->
lsu
;

381 
lo
=*
up
;

382 #i‡
DECDPUN
>1

383 
hi
=
lo
/10;

384 
lo
=lo%10;

386 
up
++;

388 
d
=
DECDPUN
; d<
dn
->
digôs
; 
up
++, d+=DECDPUNË
hi
+=*up*
powîs
[d-1];

390 i‡(
hi
>214748364 || (hi==214748364 && 
lo
>7)) {

392 i‡(
dn
->
bôs
&
DECNEG
 && 
hi
==214748364 && 
lo
==8)  0x80000000;

396 
I¡
 
i
=
	`X10
(
hi
)+
lo
;

397 i‡(
dn
->
bôs
&
DECNEG
Ë -
i
;

398  
i
;

401 
	`decC⁄ãxtSëSètus
(
£t
, 
DEC_InvÆid_›î©i⁄
);

403 
	}
}

405 
uI¡
 
	$decNumbîToUI¡32
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

406 #i‡
DECCHECK


407 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, 
dn
, 
£t
))  0;

410 i‡(
dn
->
bôs
&
DECSPECIAL
 || dn->
digôs
>10 || dn->
exp⁄ít
!=0

411 || (
dn
->
bôs
&
DECNEG
 && !
	`ISZERO
(dn)));

413 
I¡
 
d
;

414 c⁄° 
Unô
 *
up
;

415 
uI¡
 
hi
=0, 
lo
;

416 
up
=
dn
->
lsu
;

417 
lo
=*
up
;

418 #i‡
DECDPUN
>1

419 
hi
=
lo
/10;

420 
lo
=lo%10;

422 
up
++;

424 
d
=
DECDPUN
; d<
dn
->
digôs
; 
up
++, d+=DECDPUNË
hi
+=*up*
powîs
[d-1];

427 i‡(
hi
>429496729 || (hi==429496729 && 
lo
>5)) ;

428  
	`X10
(
hi
)+
lo
;

430 
	`decC⁄ãxtSëSètus
(
£t
, 
DEC_InvÆid_›î©i⁄
);

432 
	}
}

448 * 
	$decNumbîToSåög
(c⁄° 
decNumbî
 *
dn
, *
°rög
){

449 
	`decToSåög
(
dn
, 
°rög
, 0);

450  
°rög
;

451 
	}
}

453 * 
	$decNumbîToEngSåög
(c⁄° 
decNumbî
 *
dn
, *
°rög
){

454 
	`decToSåög
(
dn
, 
°rög
, 1);

455  
°rög
;

456 
	}
}

478 
decNumbî
 * 
	$decNumbîFromSåög
(
decNumbî
 *
dn
, c⁄° 
ch¨s
[],

479 
decC⁄ãxt
 *
£t
) {

480 
I¡
 
exp⁄ít
=0;

481 
uByã
 
bôs
=0;

482 
Unô
 *
ªs
;

483 
Unô
 
ªsbuff
[
	`SD2U
(
DECBUFFER
+9)];

485 
Unô
 *
Ælo¸es
=
NULL
;

486 
I¡
 
d
=0;

487 c⁄° *
dŸch¨
=
NULL
;

488 c⁄° *
cfú°
=
ch¨s
;

489 c⁄° *
œ°
=
NULL
;

490 c⁄° *
c
;

491 
Unô
 *
up
;

492 #i‡
DECDPUN
>1

493 
I¡
 
cut
, 
out
;

495 
I¡
 
ªsidue
;

496 
uI¡
 
°©us
=0;

498 #i‡
DECCHECK


499 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, DECUNUSED, 
£t
))

500  
	`decNumbîZîo
(
dn
);

504 
c
=
ch¨s
;; c++) {

505 i‡(*
c
>='0' && *c<='9') {

506 
œ°
=
c
;

507 
d
++;

510 i‡(*
c
=='.' && 
dŸch¨
==
NULL
) {

511 
dŸch¨
=
c
;

512 i‡(
c
==
cfú°
) cfirst++;

514 i‡(
c
==
ch¨s
) {

515 i‡(*
c
=='-') {

516 
cfú°
++;

517 
bôs
=
DECNEG
;

519 i‡(*
c
=='+') {

520 
cfú°
++;

527 i‡(
œ°
==
NULL
) {

528 
°©us
=
DEC_C⁄vîsi⁄_sy¡ax
;

529 i‡(*
c
=='\0') ;

530 #i‡
DECSUBSET


532 i‡(!
£t
->
exãnded
) ;

535 i‡(
dŸch¨
!=
NULL
) ;

536 
	`decNumbîZîo
(
dn
);

537 i‡(
	`decBiSå
(
c
, "infinity", "INFINITY")

538 || 
	`decBiSå
(
c
, "inf", "INF")) {

539 
dn
->
bôs
=bô†| 
DECINF
;

540 
°©us
=0;

545 
dn
->
bôs
=bô†| 
DECNAN
;

546 i‡(*
c
=='s' || *c=='S') {

547 
c
++;

548 
dn
->
bôs
=bô†| 
DECSNAN
;

550 i‡(*
c
!='n' && *c!='N') ;

551 
c
++;

552 i‡(*
c
!='a' && *c!='A') ;

553 
c
++;

554 i‡(*
c
!='n' && *c!='N') ;

555 
c
++;

558 
cfú°
=
c
; *cfirst=='0';) cfirst++;

559 i‡(*
cfú°
=='\0') {

560 
°©us
=0;

564 
c
=
cfú°
;; c++, 
d
++) {

565 i‡(*
c
<'0' || *c>'9') ;

566 
œ°
=
c
;

568 i‡(*
c
!='\0') ;

569 i‡(
d
>
£t
->
digôs
-1) {

572 i‡(
£t
->
˛amp
) ;

573 i‡(
d
>
£t
->
digôs
) ;

576 
°©us
=0;

577 
bôs
=
dn
->bits;

580 i‡(*
c
!='\0') {

582 
Fœg
 
√ge
;

583 c⁄° *
fú°exp
;

584 
°©us
=
DEC_C⁄vîsi⁄_sy¡ax
;

585 i‡(*
c
!='e' && *c!='E') ;

588 
√ge
=0;

589 
c
++;

590 i‡(*
c
=='-'Ë{
√ge
=1; c++;}

591 i‡(*
c
=='+') c++;

592 i‡(*
c
=='\0') ;

594 ; *
c
=='0' && *(c+1)!='\0';) c++;

595 
fú°exp
=
c
;

596 ; ;
c
++) {

597 i‡(*
c
<'0' || *c>'9') ;

598 
exp⁄ít
=
	`X10
”xp⁄ít)+(
I¡
)*
c
-(Int)'0';

601 i‡(*
c
!='\0') ;

606 i‡(
c
>=
fú°exp
+9+1) {

607 i‡(
c
>
fú°exp
+9+1 || *fú°exp>'1'Ë
exp⁄ít
=
DECNUMMAXE
*2;

610 i‡(
√ge
Ë
exp⁄ít
=-exponent;

611 
°©us
=0;

618 i‡(*
cfú°
=='0') {

619 
c
=
cfú°
; c<
œ°
; c++, cfirst++) {

620 i‡(*
c
=='.') ;

621 i‡(*
c
!='0') ;

622 
d
--;

624 #i‡
DECSUBSET


626 i‡(*
cfú°
=='0' && !
£t
->
exãnded
) {

627 
	`decNumbîZîo
(
dn
);

634 i‡(
dŸch¨
!=
NULL
 && dŸch¨<
œ°
)

635 
exp⁄ít
-=(
œ°
-
dŸch¨
);

640 i‡(
d
<=
£t
->
digôs
Ë
ªs
=
dn
->
lsu
;

642 
I¡
 
√edbyãs
=
	`D2U
(
d
)*(
Unô
);

643 
ªs
=
ªsbuff
;

644 i‡(
√edbyãs
>(
I¡
)(
ªsbuff
)) {

645 
Ælo¸es
=(
Unô
 *)
	`mÆloc
(
√edbyãs
);

646 i‡(
Ælo¸es
==
NULL
Ë{
°©us
|=
DEC_Insufficõ¡_°‹age
; ;}

647 
ªs
=
Ælo¸es
;

654 #i‡
DECDPUN
>1

655 
out
=0;

656 
up
=
ªs
+
	`D2U
(
d
)-1;

657 
cut
=
d
-(
up
-
ªs
)*
DECDPUN
;

658 
c
=
cfú°
;; c++) {

659 i‡(*
c
=='.') ;

660 
out
=
	`X10
(out)+(
I¡
)*
c
-(Int)'0';

661 i‡(
c
==
œ°
) ;

662 
cut
--;

663 i‡(
cut
>0) ;

664 *
up
=(
Unô
)
out
;

665 
up
--;

666 
cut
=
DECDPUN
;

667 
out
=0;

669 *
up
=(
Unô
)
out
;

673 
up
=
ªs
;

674 
c
=
œ°
; c>=
cfú°
; c--) {

675 i‡(*
c
=='.') ;

676 *
up
=(
Unô
)((
I¡
)*
c
-(Int)'0');

677 
up
++;

681 
dn
->
bôs
=bits;

682 
dn
->
exp⁄ít
=exponent;

683 
dn
->
digôs
=
d
;

686 i‡(
d
>
£t
->
digôs
) {

687 
ªsidue
=0;

688 
	`decSëC€ff
(
dn
, 
£t
, 
ªs
, 
d
, &
ªsidue
, &
°©us
);

690 
	`decFöÆize
(
dn
, 
£t
, &
ªsidue
, &
°©us
);

694 i‡((
dn
->
exp⁄ít
-1<
£t
->
emö
-dn->
digôs
)

695 || (
dn
->
exp⁄ít
-1>
£t
->
emax
-£t->
digôs
)) {

696 
ªsidue
=0;

697 
	`decFöÆize
(
dn
, 
£t
, &
ªsidue
, &
°©us
);

703 i‡(
Ælo¸es
!=
NULL
Ë
	`‰ì
(allocres);

704 i‡(
°©us
!=0Ë
	`decSètus
(
dn
, sètus, 
£t
);

705  
dn
;

706 
	}
}

727 
decNumbî
 * 
	$decNumbîAbs
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

728 
decC⁄ãxt
 *
£t
) {

729 
decNumbî
 
dzîo
;

730 
uI¡
 
°©us
=0;

732 #i‡
DECCHECK


733 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

736 
	`decNumbîZîo
(&
dzîo
);

737 
dzîo
.
exp⁄ít
=
rhs
->exponent;

738 
	`decAddOp
(
ªs
, &
dzîo
, 
rhs
, 
£t
, (
uByã
)‘hs->
bôs
 & 
DECNEG
), &
°©us
);

739 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

740 #i‡
DECCHECK


741 
	`decCheckI√xa˘
(
ªs
, 
£t
);

743  
ªs
;

744 
	}
}

759 
decNumbî
 * 
	$decNumbîAdd
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

760 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

761 
uI¡
 
°©us
=0;

762 
	`decAddOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 0, &
°©us
);

763 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

764 #i‡
DECCHECK


765 
	`decCheckI√xa˘
(
ªs
, 
£t
);

767  
ªs
;

768 
	}
}

785 
decNumbî
 * 
	$decNumbîAnd
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

786 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

787 c⁄° 
Unô
 *
ua
, *
ub
;

788 c⁄° 
Unô
 *
msua
, *
msub
;

789 
Unô
 *
uc
, *
msuc
;

790 
I¡
 
msudigs
;

791 #i‡
DECCHECK


792 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

795 i‡(
lhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
÷hsË|| 
	`decNumbîIsNeg©ive
(lhs)

796 || 
rhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
‘hsË|| 
	`decNumbîIsNeg©ive
(rhs)) {

797 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

798  
ªs
;

802 
ua
=
lhs
->
lsu
;

803 
ub
=
rhs
->
lsu
;

804 
uc
=
ªs
->
lsu
;

805 
msua
=
ua
+
	`D2U
(
lhs
->
digôs
)-1;

806 
msub
=
ub
+
	`D2U
(
rhs
->
digôs
)-1;

807 
msuc
=
uc
+
	`D2U
(
£t
->
digôs
)-1;

808 
msudigs
=
	`MSUDIGITS
(
£t
->
digôs
);

809 ; 
uc
<=
msuc
; 
ua
++, 
ub
++, uc++) {

810 
Unô
 
a
, 
b
;

811 i‡(
ua
>
msua
Ë
a
=0;

812 
a
=*
ua
;

813 i‡(
ub
>
msub
Ë
b
=0;

814 
b
=*
ub
;

815 *
uc
=0;

816 i‡(
a
|
b
) {

817 
I¡
 
i
, 
j
;

818 *
uc
=0;

820 
i
=0; i<
DECDPUN
; i++) {

821 i‡(
a
&
b
&1Ë*
uc
=*uc+(
Unô
)
powîs
[
i
];

822 
j
=
a
%10;

823 
a
=a/10;

824 
j
|=
b
%10;

825 
b
=b/10;

826 i‡(
j
>1) {

827 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

828  
ªs
;

830 i‡(
uc
==
msuc
 && 
i
==
msudigs
-1) ;

835 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
uc
-res->lsu);

836 
ªs
->
exp⁄ít
=0;

837 
ªs
->
bôs
=0;

838  
ªs
;

839 
	}
}

853 
decNumbî
 * 
	$decNumbîCom∑ª
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

854 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

855 
uI¡
 
°©us
=0;

856 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPARE
, &
°©us
);

857 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

858  
ªs
;

859 
	}
}

873 
decNumbî
 * 
	$decNumbîCom∑ªSig«l
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

874 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

875 
uI¡
 
°©us
=0;

876 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPSIG
, &
°©us
);

877 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

878  
ªs
;

879 
	}
}

894 
decNumbî
 * 
	$decNumbîCom∑ªTŸÆ
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

895 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

896 
uI¡
 
°©us
=0;

897 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPTOTAL
, &
°©us
);

898 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

899  
ªs
;

900 
	}
}

915 
decNumbî
 * 
	$decNumbîCom∑ªTŸÆMag
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

916 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

917 
uI¡
 
°©us
=0;

918 
uI¡
 
√edbyãs
;

919 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
+1)];

920 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

921 
decNumbî
 
bufb
[
	`D2N
(
DECBUFFER
+1)];

922 
decNumbî
 *
Ælocbufb
=
NULL
;

923 
decNumbî
 *
a
, *
b
;

925 #i‡
DECCHECK


926 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

931 i‡(
	`decNumbîIsNeg©ive
(
lhs
)) {

932 
a
=
buÁ
;

933 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
lhs
->
digôs
)-1)*(
Unô
);

934 i‡(
√edbyãs
>(
buÁ
)) {

935 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

936 i‡(
ÆlocbuÁ
==
NULL
) {

937 
°©us
|=
DEC_Insufficõ¡_°‹age
;

939 
a
=
ÆlocbuÁ
;

941 
	`decNumbîC›y
(
a
, 
lhs
);

942 
a
->
bôs
&=~
DECNEG
;

943 
lhs
=
a
;

945 i‡(
	`decNumbîIsNeg©ive
(
rhs
)) {

946 
b
=
bufb
;

947 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
rhs
->
digôs
)-1)*(
Unô
);

948 i‡(
√edbyãs
>(
bufb
)) {

949 
Ælocbufb
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

950 i‡(
Ælocbufb
==
NULL
) {

951 
°©us
|=
DEC_Insufficõ¡_°‹age
;

953 
b
=
Ælocbufb
;

955 
	`decNumbîC›y
(
b
, 
rhs
);

956 
b
->
bôs
&=~
DECNEG
;

957 
rhs
=
b
;

959 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPTOTAL
, &
°©us
);

962 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

963 i‡(
Ælocbufb
!=
NULL
Ë
	`‰ì
(allocbufb);

964 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

965  
ªs
;

966 
	}
}

980 
decNumbî
 * 
	$decNumbîDivide
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

981 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

982 
uI¡
 
°©us
=0;

983 
	`decDivideOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
DIVIDE
, &
°©us
);

984 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

985 #i‡
DECCHECK


986 
	`decCheckI√xa˘
(
ªs
, 
£t
);

988  
ªs
;

989 
	}
}

1003 
decNumbî
 * 
	$decNumbîDivideI¡egî
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1004 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1005 
uI¡
 
°©us
=0;

1006 
	`decDivideOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
DIVIDEINT
, &
°©us
);

1007 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1008  
ªs
;

1009 
	}
}

1036 
decNumbî
 * 
	$decNumbîExp
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1037 
decC⁄ãxt
 *
£t
) {

1038 
uI¡
 
°©us
=0;

1039 #i‡
DECSUBSET


1040 
decNumbî
 *
Ælo¸hs
=
NULL
;

1043 #i‡
DECCHECK


1044 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1051 i‡(!
	`decCheckM©h
(
rhs
, 
£t
, &
°©us
)) do {

1052 #i‡
DECSUBSET


1053 i‡(!
£t
->
exãnded
) {

1055 i‡(
rhs
->
digôs
>
£t
->digits) {

1056 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

1057 i‡(
Ælo¸hs
==
NULL
) ;

1058 
rhs
=
Ælo¸hs
;

1062 
	`decExpOp
(
ªs
, 
rhs
, 
£t
, &
°©us
);

1065 #i‡
DECSUBSET


1066 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

1069 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1070 #i‡
DECCHECK


1071 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1073  
ªs
;

1074 
	}
}

1092 
decNumbî
 * 
	$decNumbîFMA
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1093 c⁄° 
decNumbî
 *
rhs
, c⁄° decNumbî *
fhs
,

1094 
decC⁄ãxt
 *
£t
) {

1095 
uI¡
 
°©us
=0;

1096 
decC⁄ãxt
 
dcmul
;

1097 
uI¡
 
√edbyãs
;

1098 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
*2+1)];

1099 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

1100 
decNumbî
 *
acc
;

1101 
decNumbî
 
dzîo
;

1103 #i‡
DECCHECK


1104 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

1105 i‡(
	`decCheckO≥ønds
(
ªs
, 
fhs
, 
DECUNUSED
, 
£t
)) Ñes;

1109 #i‡
DECSUBSET


1110 i‡(!
£t
->
exãnded
) {

1111 
°©us
|=
DEC_InvÆid_›î©i⁄
;

1115 i‡((!
	`decNumbîIsS≥cül
(
lhs
Ë&& 
	`decCheckM©h
÷hs, 
£t
, &
°©us
))

1116 || (!
	`decNumbîIsS≥cül
(
rhs
Ë&& 
	`decCheckM©h
‘hs, 
£t
, &
°©us
))

1117 || (!
	`decNumbîIsS≥cül
(
fhs
Ë&& 
	`decCheckM©h
(fhs, 
£t
, &
°©us
))) ;

1119 
dcmul
=*
£t
;

1120 
dcmul
.
digôs
=
lhs
->digôs+
rhs
->digits;

1122 
dcmul
.
emax
=
DEC_MAX_EMAX
;

1123 
dcmul
.
emö
=
DEC_MIN_EMIN
;

1125 
acc
=
buÁ
;

1126 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
dcmul
.
digôs
)-1)*(
Unô
);

1127 i‡(
√edbyãs
>(
buÁ
)) {

1128 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

1129 i‡(
ÆlocbuÁ
==
NULL
) {

1130 
°©us
|=
DEC_Insufficõ¡_°‹age
;

1132 
acc
=
ÆlocbuÁ
;

1136 
	`decMu…ùlyOp
(
acc
, 
lhs
, 
rhs
, &
dcmul
, &
°©us
);

1143 i‡((
°©us
&
DEC_InvÆid_›î©i⁄
)!=0) {

1144 i‡(!(
°©us
&
DEC_sNaN
)) {

1145 
	`decNumbîZîo
(
ªs
);

1146 
ªs
->
bôs
=
DECNAN
;

1149 
	`decNumbîZîo
(&
dzîo
);

1150 
fhs
=&
dzîo
;

1152 #i‡
DECCHECK


1154 i‡(
°©us
!=0Ë
	`¥ötf
("Sètus=%08lxá·î FMA mu…ùly\n", (
LI
)status);

1158 
	`decAddOp
(
ªs
, 
acc
, 
fhs
, 
£t
, 0, &
°©us
);

1161 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

1162 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1163 #i‡
DECCHECK


1164 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1166  
ªs
;

1167 
	}
}

1183 
decNumbî
 * 
	$decNumbîInvît
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1184 
decC⁄ãxt
 *
£t
) {

1185 c⁄° 
Unô
 *
ua
, *
msua
;

1186 
Unô
 *
uc
, *
msuc
;

1187 
I¡
 
msudigs
;

1188 #i‡
DECCHECK


1189 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1192 i‡(
rhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
‘hsË|| 
	`decNumbîIsNeg©ive
(rhs)) {

1193 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

1194  
ªs
;

1197 
ua
=
rhs
->
lsu
;

1198 
uc
=
ªs
->
lsu
;

1199 
msua
=
ua
+
	`D2U
(
rhs
->
digôs
)-1;

1200 
msuc
=
uc
+
	`D2U
(
£t
->
digôs
)-1;

1201 
msudigs
=
	`MSUDIGITS
(
£t
->
digôs
);

1202 ; 
uc
<=
msuc
; 
ua
++, uc++) {

1203 
Unô
 
a
;

1204 
I¡
 
i
, 
j
;

1205 i‡(
ua
>
msua
Ë
a
=0;

1206 
a
=*
ua
;

1207 *
uc
=0;

1210 
i
=0; i<
DECDPUN
; i++) {

1211 i‡((~
a
)&1Ë*
uc
=*uc+(
Unô
)
powîs
[
i
];

1212 
j
=
a
%10;

1213 
a
=a/10;

1214 i‡(
j
>1) {

1215 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

1216  
ªs
;

1218 i‡(
uc
==
msuc
 && 
i
==
msudigs
-1) ;

1222 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
uc
-res->lsu);

1223 
ªs
->
exp⁄ít
=0;

1224 
ªs
->
bôs
=0;

1225  
ªs
;

1226 
	}
}

1256 
decNumbî
 * 
	$decNumbîLn
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1257 
decC⁄ãxt
 *
£t
) {

1258 
uI¡
 
°©us
=0;

1259 #i‡
DECSUBSET


1260 
decNumbî
 *
Ælo¸hs
=
NULL
;

1263 #i‡
DECCHECK


1264 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1269 i‡(!
	`decCheckM©h
(
rhs
, 
£t
, &
°©us
)) do {

1270 #i‡
DECSUBSET


1271 i‡(!
£t
->
exãnded
) {

1273 i‡(
rhs
->
digôs
>
£t
->digits) {

1274 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

1275 i‡(
Ælo¸hs
==
NULL
) ;

1276 
rhs
=
Ælo¸hs
;

1279 i‡(
	`ISZERO
(
rhs
)) {

1280 
°©us
|=
DEC_InvÆid_›î©i⁄
;

1284 
	`decLnOp
(
ªs
, 
rhs
, 
£t
, &
°©us
);

1287 #i‡
DECSUBSET


1288 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

1291 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1292 #i‡
DECCHECK


1293 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1295  
ªs
;

1296 
	}
}

1322 
decNumbî
 * 
	$decNumbîLogB
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1323 
decC⁄ãxt
 *
£t
) {

1324 
uI¡
 
°©us
=0;

1326 #i‡
DECCHECK


1327 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1331 i‡(
	`decNumbîIsNaN
(
rhs
)Ë
	`decNaNs
(
ªs
,Ñhs, 
NULL
, 
£t
, &
°©us
);

1332 i‡(
	`decNumbîIsInföôe
(
rhs
)Ë
	`decNumbîC›yAbs
(
ªs
,Ñhs);

1333 i‡(
	`decNumbîIsZîo
(
rhs
)) {

1334 
	`decNumbîZîo
(
ªs
);

1335 
ªs
->
bôs
=
DECNEG
|
DECINF
;

1336 
°©us
|=
DEC_Divisi⁄_by_zîo
;

1339 
I¡
 
´
=
rhs
->
exp⁄ít
+rhs->
digôs
-1;

1340 i‡(
£t
->
digôs
>=10Ë
	`decNumbîFromI¡32
(
ªs
, 
´
);

1342 
decNumbî
 
bu·
[
	`D2N
(10)];

1343 
decNumbî
 *
t
=
bu·
;

1344 
	`decNumbîFromI¡32
(
t
, 
´
);

1345 
	`decNumbîPlus
(
ªs
, 
t
, 
£t
);

1349 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1350  
ªs
;

1351 
	}
}

1384 
decNumbî
 * 
	$decNumbîLog10
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1385 
decC⁄ãxt
 *
£t
) {

1386 
uI¡
 
°©us
=0, 
ign‹e
=0;

1387 
uI¡
 
√edbyãs
;

1388 
I¡
 
p
;

1389 
I¡
 
t
;

1393 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
+2)];

1394 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

1395 
decNumbî
 *
a
=
buÁ
;

1396 
decNumbî
 
bufb
[
	`D2N
(
DECBUFFER
+2)];

1397 
decNumbî
 *
Ælocbufb
=
NULL
;

1398 
decNumbî
 *
b
=
bufb
;

1399 
decNumbî
 
bufw
[
	`D2N
(10)];

1400 
decNumbî
 *
w
=
bufw
;

1401 #i‡
DECSUBSET


1402 
decNumbî
 *
Ælo¸hs
=
NULL
;

1405 
decC⁄ãxt
 
a£t
;

1407 #i‡
DECCHECK


1408 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1413 i‡(!
	`decCheckM©h
(
rhs
, 
£t
, &
°©us
)) do {

1414 #i‡
DECSUBSET


1415 i‡(!
£t
->
exãnded
) {

1417 i‡(
rhs
->
digôs
>
£t
->digits) {

1418 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

1419 i‡(
Ælo¸hs
==
NULL
) ;

1420 
rhs
=
Ælo¸hs
;

1423 i‡(
	`ISZERO
(
rhs
)) {

1424 
°©us
|=
DEC_InvÆid_›î©i⁄
;

1429 
	`decC⁄ãxtDeÁu…
(&
a£t
, 
DEC_INIT_DECIMAL64
);

1432 i‡(!(
rhs
->
bôs
&(
DECNEG
|
DECSPECIAL
)Ë&& !
	`ISZERO
(rhs)) {

1433 
I¡
 
ªsidue
=0;

1434 
uI¡
 
c›y°©
=0;

1437 
a£t
.
digôs
=1;

1438 
	`decC›yFô
(
w
, 
rhs
, &
a£t
, &
ªsidue
, &
c›y°©
);

1440 i‡(!(
c›y°©
&
DEC_I√xa˘
Ë&& 
w
->
lsu
[0]==1) {

1445 
	`decNumbîFromI¡32
(
w
, w->
exp⁄ít
);

1446 
ªsidue
=0;

1447 
	`decC›yFô
(
ªs
, 
w
, 
£t
, &
ªsidue
, &
°©us
);

1448 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, &
°©us
);

1457 
t
=6;

1460 
p
=(
rhs
->
digôs
+
t
>
£t
->digits?rhs->digits+t:set->digits)+3;

1461 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
p
)-1)*(
Unô
);

1462 i‡(
√edbyãs
>(
buÁ
)) {

1463 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

1464 i‡(
ÆlocbuÁ
==
NULL
) {

1465 
°©us
|=
DEC_Insufficõ¡_°‹age
;

1467 
a
=
ÆlocbuÁ
;

1469 
a£t
.
digôs
=
p
;

1470 
a£t
.
emax
=
DEC_MAX_MATH
;

1471 
a£t
.
emö
=-
DEC_MAX_MATH
;

1472 
a£t
.
˛amp
=0;

1473 
	`decLnOp
(
a
, 
rhs
, &
a£t
, &
°©us
);

1477 i‡(
°©us
&
DEC_NaNs
 && !(°©us&
DEC_sNaN
)) ;

1478 i‡(
a
->
bôs
&
DECSPECIAL
 || 
	`ISZERO
(a)) {

1479 
	`decNumbîC›y
(
ªs
, 
a
);

1483 
p
=
£t
->
digôs
+3;

1484 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
p
)-1)*(
Unô
);

1485 i‡(
√edbyãs
>(
bufb
)) {

1486 
Ælocbufb
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

1487 i‡(
Ælocbufb
==
NULL
) {

1488 
°©us
|=
DEC_Insufficõ¡_°‹age
;

1490 
b
=
Ælocbufb
;

1492 
	`decNumbîZîo
(
w
);

1493 #i‡
DECDPUN
==1

1494 
w
->
lsu
[1]=1; w->lsu[0]=0;

1496 
w
->
lsu
[0]=10;

1498 
w
->
digôs
=2;

1500 
a£t
.
digôs
=
p
;

1501 
	`decLnOp
(
b
, 
w
, &
a£t
, &
ign‹e
);

1503 
a£t
.
digôs
=
£t
->digits;

1504 
	`decDivideOp
(
ªs
, 
a
, 
b
, &
a£t
, 
DIVIDE
, &
°©us
);

1507 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

1508 i‡(
Ælocbufb
!=
NULL
Ë
	`‰ì
(allocbufb);

1509 #i‡
DECSUBSET


1510 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

1513 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1514 #i‡
DECCHECK


1515 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1517  
ªs
;

1518 
	}
}

1532 
decNumbî
 * 
	$decNumbîMax
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1533 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1534 
uI¡
 
°©us
=0;

1535 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPMAX
, &
°©us
);

1536 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1537 #i‡
DECCHECK


1538 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1540  
ªs
;

1541 
	}
}

1555 
decNumbî
 * 
	$decNumbîMaxMag
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1556 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1557 
uI¡
 
°©us
=0;

1558 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPMAXMAG
, &
°©us
);

1559 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1560 #i‡
DECCHECK


1561 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1563  
ªs
;

1564 
	}
}

1578 
decNumbî
 * 
	$decNumbîMö
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1579 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1580 
uI¡
 
°©us
=0;

1581 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPMIN
, &
°©us
);

1582 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1583 #i‡
DECCHECK


1584 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1586  
ªs
;

1587 
	}
}

1601 
decNumbî
 * 
	$decNumbîMöMag
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1602 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1603 
uI¡
 
°©us
=0;

1604 
	`decCom∑ªOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
COMPMINMAG
, &
°©us
);

1605 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1606 #i‡
DECCHECK


1607 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1609  
ªs
;

1610 
	}
}

1626 
decNumbî
 * 
	$decNumbîMöus
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1627 
decC⁄ãxt
 *
£t
) {

1628 
decNumbî
 
dzîo
;

1629 
uI¡
 
°©us
=0;

1631 #i‡
DECCHECK


1632 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1635 
	`decNumbîZîo
(&
dzîo
);

1636 
dzîo
.
exp⁄ít
=
rhs
->exponent;

1637 
	`decAddOp
(
ªs
, &
dzîo
, 
rhs
, 
£t
, 
DECNEG
, &
°©us
);

1638 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1639 #i‡
DECCHECK


1640 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1642  
ªs
;

1643 
	}
}

1656 
decNumbî
 * 
	$decNumbîNextMöus
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1657 
decC⁄ãxt
 *
£t
) {

1658 
decNumbî
 
dtöy
;

1659 
decC⁄ãxt
 
w‹k£t
=*
£t
;

1660 
uI¡
 
°©us
=0;

1661 #i‡
DECCHECK


1662 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1666 i‡((
rhs
->
bôs
&(
DECINF
|
DECNEG
))==DECINF) {

1667 
	`decSëMaxVÆue
(
ªs
, 
£t
);

1669  
ªs
;

1671 
	`decNumbîZîo
(&
dtöy
);

1672 
dtöy
.
lsu
[0]=1;

1673 
dtöy
.
exp⁄ít
=
DEC_MIN_EMIN
-1;

1674 
w‹k£t
.
round
=
DEC_ROUND_FLOOR
;

1675 
	`decAddOp
(
ªs
, 
rhs
, &
dtöy
, &
w‹k£t
, 
DECNEG
, &
°©us
);

1676 
°©us
&=
DEC_InvÆid_›î©i⁄
|
DEC_sNaN
;

1677 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1678  
ªs
;

1679 
	}
}

1692 
decNumbî
 * 
	$decNumbîNextPlus
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1693 
decC⁄ãxt
 *
£t
) {

1694 
decNumbî
 
dtöy
;

1695 
decC⁄ãxt
 
w‹k£t
=*
£t
;

1696 
uI¡
 
°©us
=0;

1697 #i‡
DECCHECK


1698 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1702 i‡((
rhs
->
bôs
&(
DECINF
|
DECNEG
))==(DECINF|DECNEG)) {

1703 
	`decSëMaxVÆue
(
ªs
, 
£t
);

1704 
ªs
->
bôs
=
DECNEG
;

1706  
ªs
;

1708 
	`decNumbîZîo
(&
dtöy
);

1709 
dtöy
.
lsu
[0]=1;

1710 
dtöy
.
exp⁄ít
=
DEC_MIN_EMIN
-1;

1711 
w‹k£t
.
round
=
DEC_ROUND_CEILING
;

1712 
	`decAddOp
(
ªs
, 
rhs
, &
dtöy
, &
w‹k£t
, 0, &
°©us
);

1713 
°©us
&=
DEC_InvÆid_›î©i⁄
|
DEC_sNaN
;

1714 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1715  
ªs
;

1716 
	}
}

1732 
decNumbî
 * 
	$decNumbîNextTow¨d
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1733 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1734 
decNumbî
 
dtöy
;

1735 
decC⁄ãxt
 
w‹k£t
=*
£t
;

1736 
I¡
 
ªsu…
;

1737 
uI¡
 
°©us
=0;

1738 #i‡
DECCHECK


1739 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

1742 i‡(
	`decNumbîIsNaN
(
lhs
Ë|| decNumbîIsNaN(
rhs
)) {

1743 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

1746 
ªsu…
=
	`decCom∑ª
(
lhs
, 
rhs
, 0);

1747 i‡(
ªsu…
==
BADINT
Ë
°©us
|=
DEC_Insufficõ¡_°‹age
;

1749 i‡(
ªsu…
==0Ë
	`decNumbîC›ySign
(
ªs
, 
lhs
, 
rhs
);

1751 
uByã
 
sub
;

1752 i‡(
ªsu…
<0) {

1754 i‡((
lhs
->
bôs
&(
DECINF
|
DECNEG
))==(DECINF|DECNEG)) {

1755 
	`decSëMaxVÆue
(
ªs
, 
£t
);

1756 
ªs
->
bôs
=
DECNEG
;

1757  
ªs
;

1759 
w‹k£t
.
round
=
DEC_ROUND_CEILING
;

1760 
sub
=0;

1764 i‡((
lhs
->
bôs
&(
DECINF
|
DECNEG
))==DECINF) {

1765 
	`decSëMaxVÆue
(
ªs
, 
£t
);

1766  
ªs
;

1768 
w‹k£t
.
round
=
DEC_ROUND_FLOOR
;

1769 
sub
=
DECNEG
;

1771 
	`decNumbîZîo
(&
dtöy
);

1772 
dtöy
.
lsu
[0]=1;

1773 
dtöy
.
exp⁄ít
=
DEC_MIN_EMIN
-1;

1774 
	`decAddOp
(
ªs
, 
lhs
, &
dtöy
, &
w‹k£t
, 
sub
, &
°©us
);

1777 i‡(
	`decNumbîIsN‹mÆ
(
ªs
, 
£t
)Ë
°©us
=0;

1781 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1782  
ªs
;

1783 
	}
}

1800 
decNumbî
 * 
	$decNumbîOr
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1801 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1802 c⁄° 
Unô
 *
ua
, *
ub
;

1803 c⁄° 
Unô
 *
msua
, *
msub
;

1804 
Unô
 *
uc
, *
msuc
;

1805 
I¡
 
msudigs
;

1806 #i‡
DECCHECK


1807 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

1810 i‡(
lhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
÷hsË|| 
	`decNumbîIsNeg©ive
(lhs)

1811 || 
rhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
‘hsË|| 
	`decNumbîIsNeg©ive
(rhs)) {

1812 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

1813  
ªs
;

1816 
ua
=
lhs
->
lsu
;

1817 
ub
=
rhs
->
lsu
;

1818 
uc
=
ªs
->
lsu
;

1819 
msua
=
ua
+
	`D2U
(
lhs
->
digôs
)-1;

1820 
msub
=
ub
+
	`D2U
(
rhs
->
digôs
)-1;

1821 
msuc
=
uc
+
	`D2U
(
£t
->
digôs
)-1;

1822 
msudigs
=
	`MSUDIGITS
(
£t
->
digôs
);

1823 ; 
uc
<=
msuc
; 
ua
++, 
ub
++, uc++) {

1824 
Unô
 
a
, 
b
;

1825 i‡(
ua
>
msua
Ë
a
=0;

1826 
a
=*
ua
;

1827 i‡(
ub
>
msub
Ë
b
=0;

1828 
b
=*
ub
;

1829 *
uc
=0;

1830 i‡(
a
|
b
) {

1831 
I¡
 
i
, 
j
;

1833 
i
=0; i<
DECDPUN
; i++) {

1834 i‡((
a
|
b
)&1Ë*
uc
=*uc+(
Unô
)
powîs
[
i
];

1835 
j
=
a
%10;

1836 
a
=a/10;

1837 
j
|=
b
%10;

1838 
b
=b/10;

1839 i‡(
j
>1) {

1840 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

1841  
ªs
;

1843 i‡(
uc
==
msuc
 && 
i
==
msudigs
-1) ;

1848 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
uc
-res->lsu);

1849 
ªs
->
exp⁄ít
=0;

1850 
ªs
->
bôs
=0;

1851  
ªs
;

1852 
	}
}

1870 
decNumbî
 * 
	$decNumbîPlus
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

1871 
decC⁄ãxt
 *
£t
) {

1872 
decNumbî
 
dzîo
;

1873 
uI¡
 
°©us
=0;

1874 #i‡
DECCHECK


1875 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

1878 
	`decNumbîZîo
(&
dzîo
);

1879 
dzîo
.
exp⁄ít
=
rhs
->exponent;

1880 
	`decAddOp
(
ªs
, &
dzîo
, 
rhs
, 
£t
, 0, &
°©us
);

1881 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1882 #i‡
DECCHECK


1883 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1885  
ªs
;

1886 
	}
}

1900 
decNumbî
 * 
	$decNumbîMu…ùly
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1901 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1902 
uI¡
 
°©us
=0;

1903 
	`decMu…ùlyOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

1904 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

1905 #i‡
DECCHECK


1906 
	`decCheckI√xa˘
(
ªs
, 
£t
);

1908  
ªs
;

1909 
	}
}

1937 
decNumbî
 * 
	$decNumbîPowî
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

1938 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

1939 #i‡
DECSUBSET


1940 
decNumbî
 *
Ælo˛hs
=
NULL
;

1941 
decNumbî
 *
Ælo¸hs
=
NULL
;

1943 
decNumbî
 *
Ælocdac
=
NULL
;

1944 
decNumbî
 *
Ælocöv
=
NULL
;

1945 
I¡
 
ªqdigôs
=
£t
->
digôs
;

1946 
I¡
 
n
;

1947 
Fœg
 
rhsöt
=0;

1948 
Fœg
 
u£öt
=0;

1949 
Fœg
 
isoddöt
=0;

1950 
I¡
 
i
;

1951 #i‡
DECSUBSET


1952 
I¡
 
dr›≥d
;

1954 
uI¡
 
√edbyãs
;

1955 
Fœg
 
£íbô
;

1956 
I¡
 
ªsidue
=0;

1957 
uI¡
 
°©us
=0;

1958 
uByã
 
bôs
=0;

1959 
decC⁄ãxt
 
a£t
;

1960 
decNumbî
 
dnO√
;

1962 
decNumbî
 
dacbuff
[
	`D2N
(
DECBUFFER
+9)];

1963 
decNumbî
 *
dac
=
dacbuff
;

1965 
decNumbî
 
övbuff
[
	`D2N
(
DECBUFFER
+9)];

1967 #i‡
DECCHECK


1968 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

1972 #i‡
DECSUBSET


1973 i‡(!
£t
->
exãnded
) {

1974 i‡(
lhs
->
digôs
>
ªqdigôs
) {

1975 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, &
°©us
);

1976 i‡(
Ælo˛hs
==
NULL
) ;

1977 
lhs
=
Ælo˛hs
;

1979 i‡(
rhs
->
digôs
>
ªqdigôs
) {

1980 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

1981 i‡(
Ælo¸hs
==
NULL
) ;

1982 
rhs
=
Ælo¸hs
;

1989 i‡(
SPECIALARGS
) {

1990 i‡(
	`decNumbîIsNaN
(
lhs
Ë|| decNumbîIsNaN(
rhs
)) {

1991 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

1993 i‡(
	`decNumbîIsInföôe
(
rhs
)) {

1994 
Fœg
 
rh¢eg
=
rhs
->
bôs
&
DECNEG
;

1995 i‡(
	`decNumbîIsNeg©ive
(
lhs
)

1996 && !
	`decNumbîIsZîo
(
lhs
))

1997 
°©us
|=
DEC_InvÆid_›î©i⁄
;

1999 
	`decNumbîZîo
(&
dnO√
);

2000 
dnO√
.
lsu
[0]=1;

2001 
	`decNumbîCom∑ª
(
dac
, 
lhs
, &
dnO√
, 
£t
);

2002 
	`decNumbîZîo
(
ªs
);

2003 i‡(
	`decNumbîIsNeg©ive
(
dac
)) {

2004 i‡(
rh¢eg
Ë
ªs
->
bôs
|=
DECINF
;

2006 i‡(
dac
->
lsu
[0]==0) {

2008 
I¡
 
shi·
=
£t
->
digôs
-1;

2009 *
ªs
->
lsu
=1;

2010 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
, 1, 
shi·
);

2011 
ªs
->
exp⁄ít
=-
shi·
;

2012 
°©us
|=
DEC_I√xa˘
|
DEC_Rounded
;

2015 i‡(!
rh¢eg
Ë
ªs
->
bôs
|=
DECINF
;

2023 
n
=
	`decGëI¡
(
rhs
);

2024 i‡(
n
!=
BADINT
) {

2025 
rhsöt
=1;

2026 
isoddöt
=(
Fœg
)
n
&1;

2027 i‡(
n
!=
BIGEVEN
 &&Ç!=
BIGODD
)

2028 
u£öt
=1;

2031 i‡(
	`decNumbîIsNeg©ive
(
lhs
)

2032 && 
isoddöt
Ë
bôs
=
DECNEG
;

2035 i‡(
	`decNumbîIsInföôe
(
lhs
)) {

2036 
uByã
 
rbôs
=
rhs
->
bôs
;

2037 
	`decNumbîZîo
(
ªs
);

2038 i‡(
n
==0Ë*
ªs
->
lsu
=1;

2041 i‡(!
rhsöt
 && 
	`decNumbîIsNeg©ive
(
lhs
)) {

2042 
°©us
|=
DEC_InvÆid_›î©i⁄
;

2044 i‡(!(
rbôs
 & 
DECNEG
)Ë
bôs
|=
DECINF
;

2046 
ªs
->
bôs
=bits;

2051 i‡(
	`decNumbîIsZîo
(
lhs
)) {

2052 i‡(
n
==0) {

2053 #i‡
DECSUBSET


2054 i‡(!
£t
->
exãnded
) {

2055 
	`decNumbîZîo
(
ªs
);

2056 *
ªs
->
lsu
=1;

2059 
°©us
|=
DEC_InvÆid_›î©i⁄
;

2062 
uByã
 
rbôs
=
rhs
->
bôs
;

2063 i‡(
rbôs
 & 
DECNEG
) {

2064 #i‡
DECSUBSET


2065 i‡(!
£t
->
exãnded
) {

2066 
°©us
|=
DEC_InvÆid_›î©i⁄
;

2069 
bôs
|=
DECINF
;

2071 
	`decNumbîZîo
(
ªs
);

2073 
ªs
->
bôs
=bits;

2079 i‡(!
u£öt
) {

2082 i‡(
	`decNumbîIsNeg©ive
(
lhs
)) {

2083 
°©us
|=
DEC_InvÆid_›î©i⁄
;

2085 i‡(
	`decCheckM©h
(
lhs
, 
£t
, &
°©us
)

2086 || 
	`decCheckM©h
(
rhs
, 
£t
, &
°©us
)) ;

2088 
	`decC⁄ãxtDeÁu…
(&
a£t
, 
DEC_INIT_DECIMAL64
);

2089 
a£t
.
emax
=
DEC_MAX_MATH
;

2090 
a£t
.
emö
=-
DEC_MAX_MATH
;

2091 
a£t
.
˛amp
=0;

2103 
a£t
.
digôs
=
	`MAXI
(
lhs
->digôs, 
£t
->digits)+6+4;

2107 i‡(
n
==0) {

2109 
	`decNumbîZîo
(
ªs
);

2110 *
ªs
->
lsu
=1;

2113 i‡(
n
<0)Ç=-n;

2115 
a£t
=*
£t
;

2116 
a£t
.
round
=
DEC_ROUND_HALF_EVEN
;

2118 
a£t
.
digôs
=
ªqdigôs
+(
rhs
->digôs+rhs->
exp⁄ít
)+2;

2119 #i‡
DECSUBSET


2120 i‡(!
£t
->
exãnded
Ë
a£t
.
digôs
--;

2123 i‡(
a£t
.
digôs
>
DECNUMMAXP
Ë{
°©us
|=
DEC_InvÆid_›î©i⁄
; ;}

2128 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
a£t
.
digôs
)-1)*(
Unô
);

2130 i‡(
√edbyãs
>(
dacbuff
)) {

2131 
Ælocdac
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

2132 i‡(
Ælocdac
==
NULL
) {

2133 
°©us
|=
DEC_Insufficõ¡_°‹age
;

2135 
dac
=
Ælocdac
;

2139 i‡(!
u£öt
) {

2143 
	`decLnOp
(
dac
, 
lhs
, &
a£t
, &
°©us
);

2145 i‡(
	`ISZERO
(
dac
)) {

2147 *
dac
->
lsu
=1;

2148 i‡(!
rhsöt
) {

2149 
I¡
 
shi·
=
£t
->
digôs
-1;

2150 
dac
->
digôs
=
	`decShi·ToMo°
(dac->
lsu
, 1, 
shi·
);

2151 
dac
->
exp⁄ít
=-
shi·
;

2152 
°©us
|=
DEC_I√xa˘
|
DEC_Rounded
;

2156 
	`decMu…ùlyOp
(
dac
, dac, 
rhs
, &
a£t
, &
°©us
);

2157 
	`decExpOp
(
dac
, dac, &
a£t
, &
°©us
);

2163 
	`decNumbîZîo
(
dac
);

2164 *
dac
->
lsu
=1;

2168 i‡(
	`decNumbîIsNeg©ive
(
rhs
)) {

2169 
decNumbî
 *
öv
=
övbuff
;

2170 
	`decNumbîC›y
(&
dnO√
, 
dac
);

2171 #i‡
DECSUBSET


2172 i‡(
£t
->
exãnded
) {

2175 
	`decDivideOp
(
dac
, &
dnO√
, 
lhs
, &
a£t
, 
DIVIDE
, &
°©us
);

2177 i‡(
√edbyãs
>(
övbuff
)) {

2178 
Ælocöv
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

2179 i‡(
Ælocöv
==
NULL
) {

2180 
°©us
|=
DEC_Insufficõ¡_°‹age
;

2182 
öv
=
Ælocöv
;

2185 
	`decNumbîC›y
(
öv
, 
dac
);

2186 
	`decNumbîC›y
(
dac
, &
dnO√
);

2187 
lhs
=
öv
;

2188 #i‡
DECSUBSET


2194 
£íbô
=0;

2195 
i
=1;;i++){

2197 i‡(
°©us
 & (
DEC_OvîÊow
|
DEC_UndîÊow
)) {

2198 i‡(
°©us
&
DEC_OvîÊow
 || 
	`ISZERO
(
dac
)) ;

2202 
n
=n<<1;

2203 i‡(
n
<0) {

2204 
£íbô
=1;

2205 
	`decMu…ùlyOp
(
dac
, dac, 
lhs
, &
a£t
, &
°©us
);

2207 i‡(
i
==31) ;

2208 i‡(!
£íbô
) ;

2209 
	`decMu…ùlyOp
(
dac
, dac, dac, &
a£t
, &
°©us
);

2213 i‡(
°©us
 & (
DEC_OvîÊow
|
DEC_UndîÊow
)) {

2214 #i‡
DECSUBSET


2217 i‡(!
£t
->
exãnded
 && 
	`decNumbîIsNeg©ive
(
rhs
)) {

2218 i‡(
°©us
 & 
DEC_OvîÊow
)

2219 
°©us
^=
DEC_OvîÊow
 | 
DEC_UndîÊow
 | 
DEC_Subn‹mÆ
;

2221 
°©us
&=~(
DEC_UndîÊow
 | 
DEC_Subn‹mÆ
);

2222 
°©us
|=
DEC_OvîÊow
;

2226 
dac
->
bôs
=(dac->bô†& ~
DECNEG
) | bits;

2229 
	`decFöÆize
(
dac
, 
£t
, &
ªsidue
, &
°©us
);

2230 
	`decNumbîC›y
(
ªs
, 
dac
);

2234 #i‡
DECSUBSET


2235 i‡(!
£t
->
exãnded
 &&

2236 
	`decNumbîIsNeg©ive
(
rhs
)) {

2238 
	`decDivideOp
(
dac
, &
dnO√
, dac, &
a£t
, 
DIVIDE
, &
°©us
);

2244 
	`decC›yFô
(
ªs
, 
dac
, 
£t
, &
ªsidue
, &
°©us
);

2245 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, &
°©us
);

2246 #i‡
DECSUBSET


2247 i‡(!
£t
->
exãnded
Ë
	`decTrim
(
ªs
, së, 0, 1, &
dr›≥d
);

2251 i‡(
Ælocdac
!=
NULL
Ë
	`‰ì
(allocdac);

2252 i‡(
Ælocöv
!=
NULL
Ë
	`‰ì
(allocinv);

2253 #i‡
DECSUBSET


2254 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

2255 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

2257 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2258 #i‡
DECCHECK


2259 
	`decCheckI√xa˘
(
ªs
, 
£t
);

2261  
ªs
;

2262 
	}
}

2282 
decNumbî
 * 
	$decNumbîQu™tize
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2283 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2284 
uI¡
 
°©us
=0;

2285 
	`decQu™tizeOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 1, &
°©us
);

2286 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2287  
ªs
;

2288 
	}
}

2302 
decNumbî
 * 
	$decNumbîN‹mÆize
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

2303 
decC⁄ãxt
 *
£t
) {

2304  
	`decNumbîRedu˚
(
ªs
, 
rhs
, 
£t
);

2305 
	}
}

2307 
decNumbî
 * 
	$decNumbîRedu˚
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

2308 
decC⁄ãxt
 *
£t
) {

2309 #i‡
DECSUBSET


2310 
decNumbî
 *
Ælo¸hs
=
NULL
;

2312 
uI¡
 
°©us
=0;

2313 
I¡
 
ªsidue
=0;

2314 
I¡
 
dr›≥d
;

2316 #i‡
DECCHECK


2317 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

2321 #i‡
DECSUBSET


2322 i‡(!
£t
->
exãnded
) {

2324 i‡(
rhs
->
digôs
>
£t
->digits) {

2325 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

2326 i‡(
Ælo¸hs
==
NULL
) ;

2327 
rhs
=
Ælo¸hs
;

2334 i‡(
	`decNumbîIsNaN
(
rhs
)) {

2335 
	`decNaNs
(
ªs
, 
rhs
, 
NULL
, 
£t
, &
°©us
);

2340 
	`decC›yFô
(
ªs
, 
rhs
, 
£t
, &
ªsidue
, &
°©us
);

2341 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, &
°©us
);

2342 
	`decTrim
(
ªs
, 
£t
, 1, 0, &
dr›≥d
);

2346 #i‡
DECSUBSET


2347 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

2349 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2350  
ªs
;

2351 
	}
}

2371 
decNumbî
 * 
	$decNumbîResˇÀ
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2372 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2373 
uI¡
 
°©us
=0;

2374 
	`decQu™tizeOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 0, &
°©us
);

2375 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2376  
ªs
;

2377 
	}
}

2391 
decNumbî
 * 
	$decNumbîRemaödî
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2392 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2393 
uI¡
 
°©us
=0;

2394 
	`decDivideOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
REMAINDER
, &
°©us
);

2395 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2396 #i‡
DECCHECK


2397 
	`decCheckI√xa˘
(
ªs
, 
£t
);

2399  
ªs
;

2400 
	}
}

2414 
decNumbî
 * 
	$decNumbîRemaödîNór
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2415 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2416 
uI¡
 
°©us
=0;

2417 
	`decDivideOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
REMNEAR
, &
°©us
);

2418 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2419 #i‡
DECCHECK


2420 
	`decCheckI√xa˘
(
ªs
, 
£t
);

2422  
ªs
;

2423 
	}
}

2450 
decNumbî
 * 
	$decNumbîRŸ©e
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2451 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2452 
uI¡
 
°©us
=0;

2453 
I¡
 
rŸ©e
;

2455 #i‡
DECCHECK


2456 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

2460 i‡(
	`decNumbîIsNaN
(
lhs
Ë|| decNumbîIsNaN(
rhs
))

2461 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

2463 i‡(
	`decNumbîIsInföôe
(
rhs
Ë||Ñhs->
exp⁄ít
!=0)

2464 
°©us
=
DEC_InvÆid_›î©i⁄
;

2466 
rŸ©e
=
	`decGëI¡
(
rhs
);

2467 i‡(
rŸ©e
==
BADINT


2468 || 
rŸ©e
==
BIGODD
 ||ÑŸ©e==
BIGEVEN


2469 || 
	`abs
(
rŸ©e
)>
£t
->
digôs
)

2470 
°©us
=
DEC_InvÆid_›î©i⁄
;

2472 
	`decNumbîC›y
(
ªs
, 
lhs
);

2474 i‡(
rŸ©e
<0ËrŸ©e=
£t
->
digôs
+rotate;

2475 i‡(
rŸ©e
!=0 &&ÑŸ©e!=
£t
->
digôs


2476 && !
	`decNumbîIsInföôe
(
ªs
)) {

2478 
uI¡
 
unôs
, 
shi·
;

2479 
uI¡
 
msudigôs
;

2480 
Unô
 *
msu
=
ªs
->
lsu
+
	`D2U
‘es->
digôs
)-1;

2481 
Unô
 *
msumax
=
ªs
->
lsu
+
	`D2U
(
£t
->
digôs
)-1;

2482 
msu
++; msu<=
msumax
; msu++) *msu=0;

2483 
ªs
->
digôs
=
£t
->digits;

2484 
msudigôs
=
	`MSUDIGITS
(
ªs
->
digôs
);

2517 
rŸ©e
=
£t
->
digôs
-rotate;

2518 
unôs
=
rŸ©e
/
DECDPUN
;

2519 
shi·
=
rŸ©e
%
DECDPUN
;

2520 i‡(
shi·
>0) {

2521 
uI¡
 
ßve
=
ªs
->
lsu
[0]%
powîs
[
shi·
];

2522 
	`decShi·ToLó°
(
ªs
->
lsu
, 
	`D2U
‘es->
digôs
), 
shi·
);

2523 i‡(
shi·
>
msudigôs
) {

2524 
uI¡
 
ªm
=
ßve
%
powîs
[
shi·
-
msudigôs
];

2525 *
msumax
=(
Unô
)(
ßve
/
powîs
[
shi·
-
msudigôs
]);

2526 *(
msumax
-1)=*(msumax-1)

2527 +(
Unô
)(
ªm
*
powîs
[
DECDPUN
-(
shi·
-
msudigôs
)]);

2530 *
msumax
=*msumax+(
Unô
)(
ßve
*
powîs
[
msudigôs
-
shi·
]);

2535 i‡(
unôs
>0) {

2539 
shi·
=
DECDPUN
-
msudigôs
;

2540 i‡(
shi·
>0) {

2541 
uI¡
 
ßve
=
ªs
->
lsu
[0]%
powîs
[
shi·
];

2542 
	`decShi·ToLó°
(
ªs
->
lsu
, 
unôs
, 
shi·
);

2543 *
msumax
=*msumax+(
Unô
)(
ßve
*
powîs
[
msudigôs
]);

2548 
	`decRevî£
(
ªs
->
lsu
+
unôs
, 
msumax
);

2549 
	`decRevî£
(
ªs
->
lsu
,Ñes->lsu+
unôs
-1);

2550 
	`decRevî£
(
ªs
->
lsu
, 
msumax
);

2554 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
msumax
-res->lsu+1);

2558 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2559  
ªs
;

2560 
	}
}

2571 
decNumbî
 * 
	$decNumbîSameQu™tum
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2572 c⁄° 
decNumbî
 *
rhs
) {

2573 
Unô
 
ªt
=0;

2575 #i‡
DECCHECK


2576 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
DECUNCONT
)) Ñes;

2579 i‡(
SPECIALARGS
) {

2580 i‡(
	`decNumbîIsNaN
(
lhs
Ë&& decNumbîIsNaN(
rhs
)Ë
ªt
=1;

2581 i‡(
	`decNumbîIsInföôe
(
lhs
Ë&& decNumbîIsInföôe(
rhs
)Ë
ªt
=1;

2584 i‡(
lhs
->
exp⁄ít
==
rhs
->exp⁄ítË
ªt
=1;

2586 
	`decNumbîZîo
(
ªs
);

2587 *
ªs
->
lsu
=
ªt
;

2588  
ªs
;

2589 
	}
}

2606 
decNumbî
 * 
	$decNumbîSˇÀB
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2607 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2608 
I¡
 
ªqexp
;

2609 
uI¡
 
°©us
=0;

2610 
I¡
 
ªsidue
;

2612 #i‡
DECCHECK


2613 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

2617 i‡(
	`decNumbîIsNaN
(
lhs
Ë|| decNumbîIsNaN(
rhs
))

2618 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

2620 i‡(
	`decNumbîIsInföôe
(
rhs
Ë||Ñhs->
exp⁄ít
!=0)

2621 
°©us
=
DEC_InvÆid_›î©i⁄
;

2624 
ªqexp
=
	`decGëI¡
(
rhs
);

2627 i‡(
ªqexp
==
BADINT


2628 || 
ªqexp
==
BIGODD
 ||Ñeqexp==
BIGEVEN


2629 || (
	`abs
(
ªqexp
)+1)/2>(
£t
->
digôs
+£t->
emax
))

2630 
°©us
=
DEC_InvÆid_›î©i⁄
;

2632 
	`decNumbîC›y
(
ªs
, 
lhs
);

2633 i‡(!
	`decNumbîIsInföôe
(
ªs
)) {

2634 
I¡
 
exp
=
ªs
->
exp⁄ít
;

2635 
ªs
->
exp⁄ít
+=
ªqexp
;

2636 i‡(((
exp
^
ªqexp
)>=0)

2637 && ((
exp
^
ªs
->
exp⁄ít
)<0)) {

2639 i‡(
exp
<0Ë
ªs
->
exp⁄ít
=
DEC_MIN_EMIN
-
DEC_MAX_DIGITS
;

2640 
ªs
->
exp⁄ít
=
DEC_MAX_EMAX
+1;

2642 
ªsidue
=0;

2643 
	`decFöÆize
(
ªs
, 
£t
, &
ªsidue
, &
°©us
);

2647 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2648  
ªs
;

2649 
	}
}

2672 
decNumbî
 * 
	$decNumbîShi·
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

2673 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

2674 
uI¡
 
°©us
=0;

2675 
I¡
 
shi·
;

2677 #i‡
DECCHECK


2678 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

2682 i‡(
	`decNumbîIsNaN
(
lhs
Ë|| decNumbîIsNaN(
rhs
))

2683 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, &
°©us
);

2685 i‡(
	`decNumbîIsInföôe
(
rhs
Ë||Ñhs->
exp⁄ít
!=0)

2686 
°©us
=
DEC_InvÆid_›î©i⁄
;

2688 
shi·
=
	`decGëI¡
(
rhs
);

2689 i‡(
shi·
==
BADINT


2690 || 
shi·
==
BIGODD
 || shi·==
BIGEVEN


2691 || 
	`abs
(
shi·
)>
£t
->
digôs
)

2692 
°©us
=
DEC_InvÆid_›î©i⁄
;

2694 
	`decNumbîC›y
(
ªs
, 
lhs
);

2695 i‡(
shi·
!=0 && !
	`decNumbîIsInföôe
(
ªs
)) {

2696 i‡(
shi·
>0) {

2697 i‡(
shi·
==
£t
->
digôs
) {

2698 *
ªs
->
lsu
=0;

2699 
ªs
->
digôs
=1;

2703 i‡(
ªs
->
digôs
+
shi·
>
£t
->digits) {

2704 
	`decDeˇp
(
ªs
,Ñes->
digôs
+
shi·
-
£t
->digits);

2708 i‡(
ªs
->
digôs
>1 || *ªs->
lsu
)

2709 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digôs, 
shi·
);

2713 i‡(-
shi·
>=
ªs
->
digôs
) {

2714 *
ªs
->
lsu
=0;

2715 
ªs
->
digôs
=1;

2718 
	`decShi·ToLó°
(
ªs
->
lsu
, 
	`D2U
‘es->
digôs
), -
shi·
);

2719 
ªs
->
digôs
-=(-
shi·
);

2725 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

2726  
ªs
;

2727 
	}
}

2801 
decNumbî
 * 
	$decNumbîSqu¨eRoŸ
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

2802 
decC⁄ãxt
 *
£t
) {

2803 
decC⁄ãxt
 
w‹k£t
, 
≠¥ox£t
;

2804 
decNumbî
 
dzîo
;

2805 
I¡
 
maxp
;

2806 
I¡
 
w‹kp
;

2807 
I¡
 
ªsidue
=0;

2808 
uI¡
 
°©us
=0, 
ign‹e
=0;

2809 
uI¡
 
r°©us
;

2810 
I¡
 
exp
;

2811 
I¡
 
idól
;

2812 
I¡
 
√edbyãs
;

2813 
I¡
 
dr›≥d
;

2815 #i‡
DECSUBSET


2816 
decNumbî
 *
Ælo¸hs
=
NULL
;

2819 
decNumbî
 
buff
[
	`D2N
(
DECBUFFER
+1)];

2821 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
+2)];

2823 
decNumbî
 
bufb
[
	`D2N
(
DECBUFFER
+2)];

2824 
decNumbî
 *
Ælocbuff
=
NULL
;

2825 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

2826 
decNumbî
 *
Ælocbufb
=
NULL
;

2827 
decNumbî
 *
f
=
buff
;

2828 
decNumbî
 *
a
=
buÁ
;

2829 
decNumbî
 *
b
=
bufb
;

2831 
decNumbî
 
bu·
[
	`D2N
(3)];

2832 
decNumbî
 *
t
=
bu·
;

2834 #i‡
DECCHECK


2835 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

2839 #i‡
DECSUBSET


2840 i‡(!
£t
->
exãnded
) {

2842 i‡(
rhs
->
digôs
>
£t
->digits) {

2843 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, &
°©us
);

2844 i‡(
Ælo¸hs
==
NULL
) ;

2847 
rhs
=
Ælo¸hs
;

2854 i‡(
SPECIALARG
) {

2855 i‡(
	`decNumbîIsInföôe
(
rhs
)) {

2856 i‡(
	`decNumbîIsNeg©ive
(
rhs
)Ë
°©us
|=
DEC_InvÆid_›î©i⁄
;

2857 
	`decNumbîC›y
(
ªs
, 
rhs
);

2859 
	`decNaNs
(
ªs
, 
rhs
, 
NULL
, 
£t
, &
°©us
);

2866 
idól
=(
rhs
->
exp⁄ít
&~1)/2;

2869 i‡(
	`ISZERO
(
rhs
)) {

2870 
	`decNumbîC›y
(
ªs
, 
rhs
);

2871 
ªs
->
exp⁄ít
=
idól
;

2873 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, &
°©us
);

2878 i‡(
	`decNumbîIsNeg©ive
(
rhs
)) {

2879 
°©us
|=
DEC_InvÆid_›î©i⁄
;

2890 
w‹kp
=
	`MAXI
(
£t
->
digôs
+1, 
rhs
->digits);

2891 
w‹kp
=
	`MAXI
(workp, 7);

2892 
maxp
=
w‹kp
+2;

2894 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
rhs
->
digôs
)-1)*(
Unô
);

2895 i‡(
√edbyãs
>(
I¡
)(
buff
)) {

2896 
Ælocbuff
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

2897 i‡(
Ælocbuff
==
NULL
) {

2898 
°©us
|=
DEC_Insufficõ¡_°‹age
;

2900 
f
=
Ælocbuff
;

2903 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
maxp
)-1)*(
Unô
);

2904 i‡(
√edbyãs
>(
I¡
)(
buÁ
)) {

2905 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

2906 
Ælocbufb
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

2907 i‡(
ÆlocbuÁ
==
NULL
 || 
Ælocbufb
==NULL) {

2908 
°©us
|=
DEC_Insufficõ¡_°‹age
;

2910 
a
=
ÆlocbuÁ
;

2911 
b
=
Ælocbufb
;

2915 
	`decNumbîC›y
(
f
, 
rhs
);

2916 
exp
=
f
->
exp⁄ít
+f->
digôs
;

2917 
f
->
exp⁄ít
=-(f->
digôs
);

2920 
	`decC⁄ãxtDeÁu…
(&
w‹k£t
, 
DEC_INIT_DECIMAL64
);

2921 
w‹k£t
.
emax
=
DEC_MAX_EMAX
;

2922 
w‹k£t
.
emö
=
DEC_MIN_EMIN
;

2928 
w‹k£t
.
digôs
=
w‹kp
;

2929 
t
->
bôs
=0;Å->
digôs
=3;

2930 
a
->
bôs
=0;á->
digôs
=3;

2931 i‡((
exp
 & 1)==0) {

2933 
t
->
exp⁄ít
=-3;

2934 
a
->
exp⁄ít
=-3;

2935 #i‡
DECDPUN
>=3

2936 
t
->
lsu
[0]=259;

2937 
a
->
lsu
[0]=819;

2938 #ñi‡
DECDPUN
==2

2939 
t
->
lsu
[0]=59;Å->lsu[1]=2;

2940 
a
->
lsu
[0]=19;á->lsu[1]=8;

2942 
t
->
lsu
[0]=9;Å->lsu[1]=5;Å->lsu[2]=2;

2943 
a
->
lsu
[0]=9;á->lsu[1]=1;á->lsu[2]=8;

2948 
f
->
exp⁄ít
--;

2949 
exp
++;

2950 
t
->
exp⁄ít
=-4;

2951 
a
->
exp⁄ít
=-2;

2952 #i‡
DECDPUN
>=3

2953 
t
->
lsu
[0]=819;

2954 
a
->
lsu
[0]=259;

2955 #ñi‡
DECDPUN
==2

2956 
t
->
lsu
[0]=19;Å->lsu[1]=8;

2957 
a
->
lsu
[0]=59;á->lsu[1]=2;

2959 
t
->
lsu
[0]=9;Å->lsu[1]=1;Å->lsu[2]=8;

2960 
a
->
lsu
[0]=9;á->lsu[1]=5;á->lsu[2]=2;

2964 
	`decMu…ùlyOp
(
a
,á, 
f
, &
w‹k£t
, &
ign‹e
);

2965 
	`decAddOp
(
a
,á, 
t
, &
w‹k£t
, 0, &
ign‹e
);

2970 
	`decNumbîZîo
(&
dzîo
);

2971 
	`decNumbîZîo
(
t
);

2972 
t
->
lsu
[0]=5;

2973 
t
->
exp⁄ít
=-1;

2974 
w‹k£t
.
digôs
=3;

2975 ; 
w‹k£t
.
digôs
<
maxp
;) {

2977 
w‹k£t
.
digôs
=
	`MINI
(w‹k£t.digôs*2-2, 
maxp
);

2980 
	`decDivideOp
(
b
, 
f
, 
a
, &
w‹k£t
, 
DIVIDE
, &
ign‹e
);

2981 
	`decAddOp
(
b
, b, 
a
, &
w‹k£t
, 0, &
ign‹e
);

2982 
	`decMu…ùlyOp
(
a
, 
b
, 
t
, &
w‹k£t
, &
ign‹e
);

2989 
≠¥ox£t
=*
£t
;

2990 
≠¥ox£t
.
round
=
DEC_ROUND_HALF_EVEN
;

2991 
a
->
exp⁄ít
+=
exp
/2;

2992 
r°©us
=0;

2993 
ªsidue
=0;

2994 
	`decC›yFô
(
a
,á, &
≠¥ox£t
, &
ªsidue
, &
r°©us
);

2995 
	`decFöish
(
a
, &
≠¥ox£t
, &
ªsidue
, &
r°©us
);

2999 i‡(
r°©us
&
DEC_OvîÊow
) {

3000 
°©us
=
r°©us
;

3001 
	`decNumbîC›y
(
ªs
, 
a
);

3006 
°©us
|=(
r°©us
 & ~(
DEC_Rounded
|
DEC_I√xa˘
));

3009 
a
->
exp⁄ít
-=
exp
/2;

3016 
w‹k£t
.
digôs
--;

3017 
t
->
exp⁄ít
=-
a
->
digôs
-1;

3018 
	`decAddOp
(
b
, 
a
, 
t
, &
w‹k£t
, 
DECNEG
, &
ign‹e
);

3019 
w‹k£t
.
round
=
DEC_ROUND_UP
;

3020 
	`decMu…ùlyOp
(
b
, b, b, &
w‹k£t
, &
ign‹e
);

3021 
	`decCom∑ªOp
(
b
, 
f
, b, &
w‹k£t
, 
COMPARE
, &
ign‹e
);

3022 i‡(
	`decNumbîIsNeg©ive
(
b
)) {

3024 
t
->
exp⁄ít
++;

3025 
t
->
lsu
[0]=1;

3026 
	`decAddOp
(
a
,á, 
t
, &
w‹k£t
, 
DECNEG
, &
ign‹e
);

3028 
≠¥ox£t
.
emö
-=
exp
/2;

3029 
≠¥ox£t
.
emax
-=
exp
/2;

3030 
	`decAddOp
(
a
, &
dzîo
,á, &
≠¥ox£t
, 0, &
ign‹e
);

3033 
	`decAddOp
(
b
, 
a
, 
t
, &
w‹k£t
, 0, &
ign‹e
);

3034 
w‹k£t
.
round
=
DEC_ROUND_DOWN
;

3035 
	`decMu…ùlyOp
(
b
, b, b, &
w‹k£t
, &
ign‹e
);

3036 
	`decCom∑ªOp
(
b
, b, 
f
, &
w‹k£t
, 
COMPARE
, &
ign‹e
);

3037 i‡(
	`decNumbîIsNeg©ive
(
b
)) {

3038 
t
->
exp⁄ít
++;

3039 
t
->
lsu
[0]=1;

3040 
	`decAddOp
(
a
,á, 
t
, &
w‹k£t
, 0, &
ign‹e
);

3042 
≠¥ox£t
.
emö
-=
exp
/2;

3043 
≠¥ox£t
.
emax
-=
exp
/2;

3044 
	`decAddOp
(
a
, &
dzîo
,á, &
≠¥ox£t
, 0, &
ign‹e
);

3051 
a
->
exp⁄ít
+=
exp
/2;

3055 
	`decNumbîC›y
(
b
, 
a
);

3056 
	`decTrim
(
b
, 
£t
, 1, 1, &
dr›≥d
);

3062 i‡(
b
->
digôs
*2-1 > 
w‹kp
) {

3063 
°©us
|=
DEC_I√xa˘
|
DEC_Rounded
;

3066 
uI¡
 
m°©us
=0;

3067 
	`decMu…ùlyOp
(
b
, b, b, &
w‹k£t
, &
m°©us
);

3068 i‡(
m°©us
&
DEC_OvîÊow
) {

3069 
°©us
|=
DEC_I√xa˘
|
DEC_Rounded
;

3072 
	`decCom∑ªOp
(
t
, 
b
, 
rhs
, &
w‹k£t
, 
COMPARE
, &
m°©us
);

3073 i‡(!
	`ISZERO
(
t
)Ë
°©us
|=
DEC_I√xa˘
|
DEC_Rounded
;

3077 
I¡
 
todr›
=
idól
-
a
->
exp⁄ít
;

3078 i‡(
todr›
<0Ë
°©us
|=
DEC_Rounded
;

3081 
I¡
 
maxexp
=
£t
->
emax
-£t->
digôs
+1;

3082 
I¡
 
maxdr›
=
maxexp
-
a
->
exp⁄ít
;

3083 i‡(
todr›
>
maxdr›
 && 
£t
->
˛amp
) {

3084 
todr›
=
maxdr›
;

3085 
°©us
|=
DEC_Cœm≥d
;

3087 i‡(
dr›≥d
<
todr›
) {

3088 
todr›
=
dr›≥d
;

3089 
°©us
|=
DEC_Cœm≥d
;

3091 i‡(
todr›
>0) {

3092 
	`decShi·ToLó°
(
a
->
lsu
, 
	`D2U
◊->
digôs
), 
todr›
);

3093 
a
->
exp⁄ít
+=
todr›
;

3094 
a
->
digôs
-=
todr›
;

3103 i‡(
°©us
&
DEC_UndîÊow
) {

3104 
I¡
 
´
=
rhs
->
exp⁄ít
+rhs->
digôs
-1;

3106 #i‡
DECEXTFLAG


3107 i‡(
´
>=
£t
->
emö
*2Ë
°©us
&=~(
DEC_Subn‹mÆ
|
DEC_UndîÊow
);

3109 i‡(
´
>=
£t
->
emö
*2Ë
°©us
&=~
DEC_UndîÊow
;

3112 i‡(!(
°©us
&
DEC_I√xa˘
)Ë°©us&=~
DEC_UndîÊow
;

3115 
	`decNumbîC›y
(
ªs
, 
a
);

3118 i‡(
Ælocbuff
!=
NULL
Ë
	`‰ì
(allocbuff);

3119 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

3120 i‡(
Ælocbufb
!=
NULL
Ë
	`‰ì
(allocbufb);

3121 #i‡
DECSUBSET


3122 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

3124 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

3125 #i‡
DECCHECK


3126 
	`decCheckI√xa˘
(
ªs
, 
£t
);

3128  
ªs
;

3129 
	}
}

3143 
decNumbî
 * 
	$decNumbîSubåa˘
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

3144 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

3145 
uI¡
 
°©us
=0;

3147 
	`decAddOp
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
DECNEG
, &
°©us
);

3148 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

3149 #i‡
DECCHECK


3150 
	`decCheckI√xa˘
(
ªs
, 
£t
);

3152  
ªs
;

3153 
	}
}

3176 
decNumbî
 * 
	$decNumbîToI¡egølExa˘
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

3177 
decC⁄ãxt
 *
£t
) {

3178 
decNumbî
 
dn
;

3179 
decC⁄ãxt
 
w‹k£t
;

3180 
uI¡
 
°©us
=0;

3182 #i‡
DECCHECK


3183 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

3187 i‡(
SPECIALARG
) {

3188 i‡(
	`decNumbîIsInföôe
(
rhs
)Ë
	`decNumbîC›y
(
ªs
,Ñhs);

3189 
	`decNaNs
(
ªs
, 
rhs
, 
NULL
, 
£t
, &
°©us
);

3193 i‡(
rhs
->
exp⁄ít
>=0Ë 
	`decNumbîC›y
(
ªs
,Ñhs);

3195 
w‹k£t
=*
£t
;

3196 
w‹k£t
.
digôs
=
rhs
->digits;

3197 
w‹k£t
.
å≠s
=0;

3198 
	`decNumbîZîo
(&
dn
);

3199 
	`decNumbîQu™tize
(
ªs
, 
rhs
, &
dn
, &
w‹k£t
);

3200 
°©us
|=
w‹k£t
.status;

3202 i‡(
°©us
!=0Ë
	`decSètus
(
ªs
, sètus, 
£t
);

3203  
ªs
;

3204 
	}
}

3206 
decNumbî
 * 
	$decNumbîToI¡egølVÆue
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
,

3207 
decC⁄ãxt
 *
£t
) {

3208 
decC⁄ãxt
 
w‹k£t
=*
£t
;

3209 
w‹k£t
.
å≠s
=0;

3210 
	`decNumbîToI¡egølExa˘
(
ªs
, 
rhs
, &
w‹k£t
);

3213 
£t
->
°©us
|=
w‹k£t
.°©us&
DEC_InvÆid_›î©i⁄
;

3214  
ªs
;

3215 
	}
}

3232 
decNumbî
 * 
	$decNumbîX‹
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

3233 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

3234 c⁄° 
Unô
 *
ua
, *
ub
;

3235 c⁄° 
Unô
 *
msua
, *
msub
;

3236 
Unô
 *
uc
, *
msuc
;

3237 
I¡
 
msudigs
;

3238 #i‡
DECCHECK


3239 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

3242 i‡(
lhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
÷hsË|| 
	`decNumbîIsNeg©ive
(lhs)

3243 || 
rhs
->
exp⁄ít
!=0 || 
	`decNumbîIsS≥cül
‘hsË|| 
	`decNumbîIsNeg©ive
(rhs)) {

3244 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

3245  
ªs
;

3248 
ua
=
lhs
->
lsu
;

3249 
ub
=
rhs
->
lsu
;

3250 
uc
=
ªs
->
lsu
;

3251 
msua
=
ua
+
	`D2U
(
lhs
->
digôs
)-1;

3252 
msub
=
ub
+
	`D2U
(
rhs
->
digôs
)-1;

3253 
msuc
=
uc
+
	`D2U
(
£t
->
digôs
)-1;

3254 
msudigs
=
	`MSUDIGITS
(
£t
->
digôs
);

3255 ; 
uc
<=
msuc
; 
ua
++, 
ub
++, uc++) {

3256 
Unô
 
a
, 
b
;

3257 i‡(
ua
>
msua
Ë
a
=0;

3258 
a
=*
ua
;

3259 i‡(
ub
>
msub
Ë
b
=0;

3260 
b
=*
ub
;

3261 *
uc
=0;

3262 i‡(
a
|
b
) {

3263 
I¡
 
i
, 
j
;

3265 
i
=0; i<
DECDPUN
; i++) {

3266 i‡((
a
^
b
)&1Ë*
uc
=*uc+(
Unô
)
powîs
[
i
];

3267 
j
=
a
%10;

3268 
a
=a/10;

3269 
j
|=
b
%10;

3270 
b
=b/10;

3271 i‡(
j
>1) {

3272 
	`decSètus
(
ªs
, 
DEC_InvÆid_›î©i⁄
, 
£t
);

3273  
ªs
;

3275 i‡(
uc
==
msuc
 && 
i
==
msudigs
-1) ;

3280 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
uc
-res->lsu);

3281 
ªs
->
exp⁄ít
=0;

3282 
ªs
->
bôs
=0;

3283  
ªs
;

3284 
	}
}

3297 
decCœss
 
	$decNumbîCœss
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

3298 i‡(
	`decNumbîIsS≥cül
(
dn
)) {

3299 i‡(
	`decNumbîIsQNaN
(
dn
)Ë 
DEC_CLASS_QNAN
;

3300 i‡(
	`decNumbîIsSNaN
(
dn
)Ë 
DEC_CLASS_SNAN
;

3302 i‡(
	`decNumbîIsNeg©ive
(
dn
)Ë 
DEC_CLASS_NEG_INF
;

3303  
DEC_CLASS_POS_INF
;

3306 i‡(
	`decNumbîIsN‹mÆ
(
dn
, 
£t
)) {

3307 i‡(
	`decNumbîIsNeg©ive
(
dn
)Ë 
DEC_CLASS_NEG_NORMAL
;

3308  
DEC_CLASS_POS_NORMAL
;

3311 i‡(
	`decNumbîIsZîo
(
dn
)) {

3312 i‡(
	`decNumbîIsNeg©ive
(
dn
)Ë 
DEC_CLASS_NEG_ZERO
;

3313  
DEC_CLASS_POS_ZERO
;

3315 i‡(
	`decNumbîIsNeg©ive
(
dn
)Ë 
DEC_CLASS_NEG_SUBNORMAL
;

3316  
DEC_CLASS_POS_SUBNORMAL
;

3317 
	}
}

3325 c⁄° *
	$decNumbîCœssToSåög
(
decCœss
 
e˛ass
) {

3326 i‡(
e˛ass
==
DEC_CLASS_POS_NORMAL
Ë 
DEC_CœssSåög_PN
;

3327 i‡(
e˛ass
==
DEC_CLASS_NEG_NORMAL
Ë 
DEC_CœssSåög_NN
;

3328 i‡(
e˛ass
==
DEC_CLASS_POS_ZERO
Ë 
DEC_CœssSåög_PZ
;

3329 i‡(
e˛ass
==
DEC_CLASS_NEG_ZERO
Ë 
DEC_CœssSåög_NZ
;

3330 i‡(
e˛ass
==
DEC_CLASS_POS_SUBNORMAL
Ë 
DEC_CœssSåög_PS
;

3331 i‡(
e˛ass
==
DEC_CLASS_NEG_SUBNORMAL
Ë 
DEC_CœssSåög_NS
;

3332 i‡(
e˛ass
==
DEC_CLASS_POS_INF
Ë 
DEC_CœssSåög_PI
;

3333 i‡(
e˛ass
==
DEC_CLASS_NEG_INF
Ë 
DEC_CœssSåög_NI
;

3334 i‡(
e˛ass
==
DEC_CLASS_QNAN
Ë 
DEC_CœssSåög_QN
;

3335 i‡(
e˛ass
==
DEC_CLASS_SNAN
Ë 
DEC_CœssSåög_SN
;

3336  
DEC_CœssSåög_UN
;

3337 
	}
}

3350 
decNumbî
 * 
	$decNumbîC›y
(
decNumbî
 *
de°
, c⁄° decNumbî *
§c
) {

3352 #i‡
DECCHECK


3353 i‡(
§c
==
NULL
Ë 
	`decNumbîZîo
(
de°
);

3356 i‡(
de°
==
§c
)  dest;

3362 
de°
->
bôs
=
§c
->bits;

3363 
de°
->
exp⁄ít
=
§c
->exponent;

3364 
de°
->
digôs
=
§c
->digits;

3365 
de°
->
lsu
[0]=
§c
->lsu[0];

3366 i‡(
§c
->
digôs
>
DECDPUN
) {

3367 c⁄° 
Unô
 *
smsup
, *
s
;

3368 
Unô
 *
d
;

3371 
d
=
de°
->
lsu
+1;

3372 
smsup
=
§c
->
lsu
+
	`D2U
(§c->
digôs
);

3373 
s
=
§c
->
lsu
+1; s<
smsup
; s++, 
d
++) *d=*s;

3375  
de°
;

3376 
	}
}

3390 
decNumbî
 * 
	$decNumbîC›yAbs
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
) {

3391 #i‡
DECCHECK


3392 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
DECUNCONT
)) Ñes;

3394 
	`decNumbîC›y
(
ªs
, 
rhs
);

3395 
ªs
->
bôs
&=~
DECNEG
;

3396  
ªs
;

3397 
	}
}

3411 
decNumbî
 * 
	$decNumbîC›yNeg©e
(
decNumbî
 *
ªs
, c⁄° decNumbî *
rhs
) {

3412 #i‡
DECCHECK


3413 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
DECUNCONT
)) Ñes;

3415 
	`decNumbîC›y
(
ªs
, 
rhs
);

3416 
ªs
->
bôs
^=
DECNEG
;

3417  
ªs
;

3418 
	}
}

3432 
decNumbî
 * 
	$decNumbîC›ySign
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

3433 c⁄° 
decNumbî
 *
rhs
) {

3434 
uByã
 
sign
;

3435 #i‡
DECCHECK


3436 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
DECUNCONT
)) Ñes;

3438 
sign
=
rhs
->
bôs
 & 
DECNEG
;

3439 
	`decNumbîC›y
(
ªs
, 
lhs
);

3440 
ªs
->
bôs
&=~
DECNEG
;

3441 
ªs
->
bôs
|=
sign
;

3442  
ªs
;

3443 
	}
}

3455 
uByã
 * 
	$decNumbîGëBCD
(c⁄° 
decNumbî
 *
dn
, 
uByã
 *
bcd
) {

3456 
uByã
 *
ub
=
bcd
+
dn
->
digôs
-1;

3457 c⁄° 
Unô
 *
up
=
dn
->
lsu
;

3459 #i‡
DECDPUN
==1

3460 ; 
ub
>=
bcd
; ub--, 
up
++) *ub=*up;

3462 
uI¡
 
u
=*
up
;

3463 
uI¡
 
cut
=
DECDPUN
;

3464 ; 
ub
>=
bcd
; ub--) {

3465 *
ub
=(
uByã
)(
u
%10);

3466 
u
=u/10;

3467 
cut
--;

3468 i‡(
cut
>0) ;

3469 
up
++;

3470 
u
=*
up
;

3471 
cut
=
DECDPUN
;

3474  
bcd
;

3475 
	}
}

3489 
decNumbî
 * 
	$decNumbîSëBCD
(
decNumbî
 *
dn
, c⁄° 
uByã
 *
bcd
, 
uI¡
 
n
) {

3490 
Unô
 *
up
=
dn
->
lsu
+
	`D2U
(dn->
digôs
)-1;

3491 c⁄° 
uByã
 *
ub
=
bcd
;

3493 #i‡
DECDPUN
==1

3494 ; 
ub
<
bcd
+
n
; ub++, 
up
--) *up=*ub;

3497 
I¡
 
cut
=
	`MSUDIGITS
(
n
);

3498 ;
up
>=
dn
->
lsu
; up--) {

3499 *
up
=0;

3500 ; 
cut
>0; 
ub
++, cut--Ë*
up
=
	`X10
(*up)+*ub;

3501 
cut
=
DECDPUN
;

3504 
dn
->
digôs
=
n
;

3505  
dn
;

3506 
	}
}

3514 
I¡
 
	$decNumbîIsN‹mÆ
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

3515 
I¡
 
´
;

3516 #i‡
DECCHECK


3517 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, 
dn
, 
£t
))  0;

3520 i‡(
	`decNumbîIsS≥cül
(
dn
))  0;

3521 i‡(
	`decNumbîIsZîo
(
dn
))  0;

3523 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

3524 i‡(
´
<
£t
->
emö
)  0;

3526 
	}
}

3534 
I¡
 
	$decNumbîIsSubn‹mÆ
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

3535 
I¡
 
´
;

3536 #i‡
DECCHECK


3537 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, 
dn
, 
£t
))  0;

3540 i‡(
	`decNumbîIsS≥cül
(
dn
))  0;

3541 i‡(
	`decNumbîIsZîo
(
dn
))  0;

3543 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

3544 i‡(
´
<
£t
->
emö
)  1;

3546 
	}
}

3558 
decNumbî
 * 
	$decNumbîTrim
(
decNumbî
 *
dn
) {

3559 
I¡
 
dr›≥d
;

3560 
decC⁄ãxt
 
£t
;

3561 #i‡
DECCHECK


3562 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
DECUNUSED
, 
dn
, 
DECUNCONT
))  dn;

3564 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

3565  
	`decTrim
(
dn
, &
£t
, 0, 1, &
dr›≥d
);

3566 
	}
}

3573 c⁄° * 
	$decNumbîVîsi⁄
() {

3574  
DECVERSION
;

3575 
	}
}

3586 
decNumbî
 * 
	$decNumbîZîo
(
decNumbî
 *
dn
) {

3588 #i‡
DECCHECK


3589 i‡(
	`decCheckO≥ønds
(
dn
, 
DECUNUSED
, DECUNUSED, 
DECUNCONT
))  dn;

3592 
dn
->
bôs
=0;

3593 
dn
->
exp⁄ít
=0;

3594 
dn
->
digôs
=1;

3595 
dn
->
lsu
[0]=0;

3596  
dn
;

3597 
	}
}

3619 
	$decToSåög
(c⁄° 
decNumbî
 *
dn
, *
°rög
, 
Fœg
 
íg
) {

3620 
I¡
 
exp
=
dn
->
exp⁄ít
;

3621 
I¡
 
e
;

3622 
I¡
 
¥e
;

3623 
I¡
 
cut
;

3624 *
c
=
°rög
;

3625 c⁄° 
Unô
 *
up
=
dn
->
lsu
+
	`D2U
(dn->
digôs
)-1;

3626 
uI¡
 
u
, 
pow
;

3628 #i‡
DECCHECK


3629 i‡(
	`decCheckO≥ønds
(
DECUNRESU
, 
dn
, 
DECUNUSED
, 
DECUNCONT
)) {

3630 
	`°r˝y
(
°rög
, "?");

3634 i‡(
	`decNumbîIsNeg©ive
(
dn
)) {

3635 *
c
='-';

3636 
c
++;

3638 i‡(
dn
->
bôs
&
DECSPECIAL
) {

3639 i‡(
	`decNumbîIsInföôe
(
dn
)) {

3640 
	`°r˝y
(
c
, "Inf");

3641 
	`°r˝y
(
c
+3, "inity");

3644 i‡(
dn
->
bôs
&
DECSNAN
) {

3645 *
c
='s';

3646 
c
++;

3648 
	`°r˝y
(
c
, "NaN");

3649 
c
+=3;

3652 i‡(
exp
!=0 || (*
dn
->
lsu
==0 && dn->
digôs
==1)) ;

3657 
cut
=
	`MSUDIGITS
(
dn
->
digôs
);

3658 
cut
--;

3660 i‡(
exp
==0) {

3661 ;
up
>=
dn
->
lsu
; up--) {

3662 
u
=*
up
;

3663 ; 
cut
>=0; 
c
++, cut--Ë
	`TODIGIT
(
u
, cut, c, 
pow
);

3664 
cut
=
DECDPUN
-1;

3666 *
c
='\0';

3670 
¥e
=
dn
->
digôs
+
exp
;

3671 
e
=0;

3672 i‡((
exp
>0Ë|| (
¥e
<-5)) {

3673 
e
=
exp
+
dn
->
digôs
-1;

3674 
¥e
=1;

3675 i‡(
íg
 && (
e
!=0)) {

3676 
I¡
 
adj
;

3679 i‡(
e
<0) {

3680 
adj
=(-
e
)%3;

3681 i‡(
adj
!=0)ádj=3-adj;

3684 
adj
=
e
%3;

3686 
e
Û-
adj
;

3690 i‡(!
	`ISZERO
(
dn
)Ë
¥e
+=
adj
;

3692 i‡(
adj
!=0) {

3693 
e
=e+3;

3694 
¥e
=-(2-
adj
);

3701 
u
=*
up
;

3702 i‡(
¥e
>0) {

3703 
I¡
 
n
=
¥e
;

3704 ; 
¥e
>0;Öª--, 
c
++, 
cut
--) {

3705 i‡(
cut
<0) {

3706 i‡(
up
==
dn
->
lsu
) ;

3707 
up
--;

3708 
cut
=
DECDPUN
-1;

3709 
u
=*
up
;

3711 
	`TODIGIT
(
u
, 
cut
, 
c
, 
pow
);

3713 i‡(
n
<
dn
->
digôs
) {

3714 *
c
='.'; c++;

3715 ;; 
c
++, 
cut
--) {

3716 i‡(
cut
<0) {

3717 i‡(
up
==
dn
->
lsu
) ;

3718 
up
--;

3719 
cut
=
DECDPUN
-1;

3720 
u
=*
up
;

3722 
	`TODIGIT
(
u
, 
cut
, 
c
, 
pow
);

3725 ; 
¥e
>0;Öª--, 
c
++) *c='0';

3728 *
c
='0'; c++;

3729 *
c
='.'; c++;

3730 ; 
¥e
<0;Öª++, 
c
++) *c='0';

3731 ; ; 
c
++, 
cut
--) {

3732 i‡(
cut
<0) {

3733 i‡(
up
==
dn
->
lsu
) ;

3734 
up
--;

3735 
cut
=
DECDPUN
-1;

3736 
u
=*
up
;

3738 
	`TODIGIT
(
u
, 
cut
, 
c
, 
pow
);

3745 i‡(
e
!=0) {

3746 
Fœg
 
had
=0;

3747 *
c
='E'; c++;

3748 *
c
='+'; c++;

3749 
u
=
e
;

3750 i‡(
e
<0) {

3751 *(
c
-1)='-';

3752 
u
=-
e
;

3755 
cut
=9; cut>=0; cut--) {

3756 
	`TODIGIT
(
u
, 
cut
, 
c
, 
pow
);

3757 i‡(*
c
=='0' && !
had
) ;

3758 
had
=1;

3759 
c
++;

3762 *
c
='\0';

3764 
	}
}

3801 
decNumbî
 * 
	$decAddOp
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

3802 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

3803 
uByã
 
√g©e
, 
uI¡
 *
°©us
) {

3804 #i‡
DECSUBSET


3805 
decNumbî
 *
Ælo˛hs
=
NULL
;

3806 
decNumbî
 *
Ælo¸hs
=
NULL
;

3808 
I¡
 
rhsshi·
;

3809 
I¡
 
maxdigôs
;

3810 
I¡
 
mu…
;

3811 
I¡
 
ªsidue
;

3812 
uByã
 
bôs
;

3813 
Fœg
 
diffsign
;

3814 
Unô
 *
acc
;

3815 
Unô
 
accbuff
[
	`SD2U
(
DECBUFFER
*2+20)];

3818 
Unô
 *
Æloˇcc
=
NULL
;

3819 
I¡
 
ªqdigôs
=
£t
->
digôs
;

3820 
I¡
 
∑ddög
;

3822 #i‡
DECCHECK


3823 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

3827 #i‡
DECSUBSET


3828 i‡(!
£t
->
exãnded
) {

3830 i‡(
lhs
->
digôs
>
ªqdigôs
) {

3831 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, 
°©us
);

3832 i‡(
Ælo˛hs
==
NULL
) ;

3833 
lhs
=
Ælo˛hs
;

3835 i‡(
rhs
->
digôs
>
ªqdigôs
) {

3836 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, 
°©us
);

3837 i‡(
Ælo¸hs
==
NULL
) ;

3838 
rhs
=
Ælo¸hs
;

3845 
diffsign
=(
Fœg
)((
lhs
->
bôs
^
rhs
->bôs^
√g©e
)&
DECNEG
);

3848 i‡(
SPECIALARGS
) {

3849 i‡(
SPECIALARGS
 & (
DECSNAN
 | 
DECNAN
))

3850 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
°©us
);

3852 i‡(
	`decNumbîIsInföôe
(
lhs
)) {

3854 i‡(
	`decNumbîIsInföôe
(
rhs
Ë&& 
diffsign
) {

3855 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

3858 
bôs
=
lhs
->bô†& 
DECNEG
;

3860 
bôs
=(
rhs
->bôs^
√g©e
Ë& 
DECNEG
;

3861 
bôs
|=
DECINF
;

3862 
	`decNumbîZîo
(
ªs
);

3863 
ªs
->
bôs
=bits;

3869 i‡(
	`ISZERO
(
lhs
)) {

3870 
I¡
 
adju°
;

3871 
I¡
 
Àxp
=
lhs
->
exp⁄ít
;

3872 
bôs
=
lhs
->bits;

3873 
ªsidue
=0;

3874 
	`decC›yFô
(
ªs
, 
rhs
, 
£t
, &
ªsidue
, 
°©us
);

3875 
ªs
->
bôs
^=
√g©e
;

3876 #i‡
DECSUBSET


3877 i‡(
£t
->
exãnded
) {

3880 
adju°
=
Àxp
-
ªs
->
exp⁄ít
;

3881 i‡(
	`ISZERO
(
ªs
)) {

3882 i‡(
adju°
<0Ë
ªs
->
exp⁄ít
=
Àxp
;

3884 i‡(
diffsign
) {

3885 i‡(
£t
->
round
!=
DEC_ROUND_FLOOR
Ë
ªs
->
bôs
=0;

3886 
ªs
->
bôs
=
DECNEG
;

3890 i‡(
adju°
<0) {

3891 i‡((
ªs
->
digôs
-
adju°
)>
£t
->digits) {

3892 
adju°
=
ªs
->
digôs
-
£t
->digits;

3893 *
°©us
|=
DEC_Rounded
;

3895 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digôs, -
adju°
);

3896 
ªs
->
exp⁄ít
+=
adju°
;

3899 #i‡
DECSUBSET


3902 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

3905 i‡(
	`ISZERO
(
rhs
)) {

3906 
I¡
 
adju°
;

3907 
I¡
 
ªxp
=
rhs
->
exp⁄ít
;

3908 
bôs
=
rhs
->bits;

3909 
ªsidue
=0;

3910 
	`decC›yFô
(
ªs
, 
lhs
, 
£t
, &
ªsidue
, 
°©us
);

3911 #i‡
DECSUBSET


3912 i‡(
£t
->
exãnded
) {

3916 
adju°
=
ªxp
-
ªs
->
exp⁄ít
;

3917 i‡(
adju°
<0) {

3918 i‡((
ªs
->
digôs
-
adju°
)>
£t
->digits) {

3919 
adju°
=
ªs
->
digôs
-
£t
->digits;

3920 *
°©us
|=
DEC_Rounded
;

3922 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digôs, -
adju°
);

3923 
ªs
->
exp⁄ít
+=
adju°
;

3925 #i‡
DECSUBSET


3928 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

3935 
∑ddög
=
rhs
->
exp⁄ít
-
lhs
->exponent;

3940 i‡(
∑ddög
==0

3941 && 
rhs
->
digôs
<=
DECDPUN


3942 && 
rhs
->
exp⁄ít
>=
£t
->
emö


3943 && 
rhs
->
exp⁄ít
<=
£t
->
emax
-£t->
digôs
+1

3944 && 
rhs
->
digôs
<=
ªqdigôs


3945 && 
lhs
->
digôs
<=
ªqdigôs
) {

3946 
I¡
 
∑πül
=*
lhs
->
lsu
;

3947 i‡(!
diffsign
) {

3948 
∑πül
+=*
rhs
->
lsu
;

3949 i‡((
∑πül
<=
DECDPUNMAX
)

3950 && (
lhs
->
digôs
>=
DECDPUN
 ||

3951 
∑πül
<(
I¡
)
powîs
[
lhs
->
digôs
])) {

3952 i‡(
ªs
!=
lhs
Ë
	`decNumbîC›y
(res,Ühs);

3953 *
ªs
->
lsu
=(
Unô
)
∑πül
;

3959 
∑πül
-=*
rhs
->
lsu
;

3960 i‡(
∑πül
>0) {

3961 i‡(
ªs
!=
lhs
Ë
	`decNumbîC›y
(res,Ühs);

3962 *
ªs
->
lsu
=(
Unô
)
∑πül
;

3964 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
	`D2U
(res->digits));

3978 
rhsshi·
=0;

3979 
bôs
=
lhs
->bits;

3980 
mu…
=1;

3983 i‡(
∑ddög
!=0) {

3987 
Fœg
 
sw≠≥d
=0;

3988 i‡(
∑ddög
<0) {

3989 c⁄° 
decNumbî
 *
t
;

3990 
∑ddög
=-padding;

3991 
bôs
=(
uByã
)(
rhs
->bôs^
√g©e
);

3992 
t
=
lhs
;Ühs=
rhs
;Ñhs=t;

3993 
sw≠≥d
=1;

3999 i‡(
rhs
->
digôs
+
∑ddög
 > 
lhs
->digôs+
ªqdigôs
+1) {

4002 
I¡
 
shi·
=
ªqdigôs
-
rhs
->
digôs
;

4003 
ªsidue
=1;

4004 i‡(
diffsign
Ë
ªsidue
=-residue;

4006 
	`decC›yFô
(
ªs
, 
rhs
, 
£t
, &
ªsidue
, 
°©us
);

4008 i‡(
shi·
>0) {

4009 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digôs, 
shi·
);

4010 
ªs
->
exp⁄ít
-=
shi·
;

4013 i‡(!
sw≠≥d
Ë
ªs
->
bôs
^=
√g©e
;

4014 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4018 
rhsshi·
=
	`D2U
(
∑ddög
+1)-1;

4019 
mu…
=
powîs
[
∑ddög
-(
rhsshi·
*
DECDPUN
)];

4022 i‡(
diffsign
Ë
mu…
=-mult;

4025 
maxdigôs
=
rhs
->
digôs
+
∑ddög
;

4026 i‡(
lhs
->
digôs
>
maxdigôs
) maxdigits=lhs->digits;

4030 
acc
=
ªs
->
lsu
;

4034 i‡((
maxdigôs
>=
ªqdigôs
)

4035 || (
ªs
==
rhs
 && 
rhsshi·
>0)) {

4038 
I¡
 
√ed
=
	`D2U
(
maxdigôs
)+1;

4039 
acc
=
accbuff
;

4040 i‡(
√ed
*(
Unô
)>(
accbuff
)) {

4042 
Æloˇcc
=(
Unô
 *)
	`mÆloc
(
√ed
*(Unit));

4043 i‡(
Æloˇcc
==
NULL
) {

4044 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

4046 
acc
=
Æloˇcc
;

4050 
ªs
->
bôs
=(
uByã
)(bôs&
DECNEG
);

4051 
ªs
->
exp⁄ít
=
lhs
->exponent;

4053 #i‡
DECTRACE


4054 
	`decDumpAr
('A', 
lhs
->
lsu
, 
	`D2U
÷hs->
digôs
));

4055 
	`decDumpAr
('B', 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
));

4056 
	`¥ötf
(" :h: %ld %ld\n", 
rhsshi·
, 
mu…
);

4060 
ªs
->
digôs
=
	`decUnôAddSub
(
lhs
->
lsu
, 
	`D2U
(lhs->digits),

4061 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
),

4062 
rhsshi·
, 
acc
, 
mu…
)

4063 *
DECDPUN
;

4064 i‡(
ªs
->
digôs
<0) {

4065 
ªs
->
digôs
=-res->digits;

4066 
ªs
->
bôs
^=
DECNEG
;

4068 #i‡
DECTRACE


4069 
	`decDumpAr
('+', 
acc
, 
	`D2U
(
ªs
->
digôs
));

4075 
ªsidue
=0;

4076 i‡(
acc
!=
ªs
->
lsu
) {

4077 #i‡
DECSUBSET


4078 i‡(
£t
->
exãnded
) {

4082 i‡(
ªs
->
digôs
>
ªqdigôs
)

4083 
ªs
->
digôs
=
	`decGëDigôs
(
acc
, 
	`D2U
(res->digits));

4084 
	`decSëC€ff
(
ªs
, 
£t
, 
acc
,Ñes->
digôs
, &
ªsidue
, 
°©us
);

4085 #i‡
DECSUBSET


4093 i‡(
ªs
->
digôs
<
maxdigôs
) {

4094 *(
acc
+
	`D2U
(
ªs
->
digôs
))=0;

4095 
ªs
->
digôs
=
maxdigôs
;

4101 i‡(
ªs
->
digôs
>
ªqdigôs
) {

4102 
ªs
->
digôs
=
	`decGëDigôs
(
acc
, 
	`D2U
(res->digits));

4103 i‡(
ªs
->
digôs
<
maxdigôs
)Ñes->digits=maxdigits;

4106 
	`decSëC€ff
(
ªs
, 
£t
, 
acc
,Ñes->
digôs
, &
ªsidue
, 
°©us
);

4109 i‡(
ªsidue
!=0) {

4110 
	`decAµlyRound
(
ªs
, 
£t
, 
ªsidue
, 
°©us
);

4111 
ªsidue
=0;

4118 
ªs
->
digôs
=
	`decGëDigôs
‘es->
lsu
, 
	`D2U
(res->digits));

4121 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4127 i‡(
	`ISZERO
(
ªs
Ë&& 
diffsign


4128 #i‡
DECSUBSET


4129 && 
£t
->
exãnded


4131 && (*
°©us
&
DEC_I√xa˘
)==0) {

4132 i‡(
£t
->
round
==
DEC_ROUND_FLOOR
Ë
ªs
->
bôs
|=
DECNEG
;

4133 
ªs
->
bôs
&=~
DECNEG
;

4137 i‡(
Æloˇcc
!=
NULL
Ë
	`‰ì
(allocacc);

4138 #i‡
DECSUBSET


4139 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

4140 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

4142  
ªs
;

4143 
	}
}

4215 
decNumbî
 * 
	$decDivideOp
(
decNumbî
 *
ªs
,

4216 c⁄° 
decNumbî
 *
lhs
, c⁄° decNumbî *
rhs
,

4217 
decC⁄ãxt
 *
£t
, 
Fœg
 
›
, 
uI¡
 *
°©us
) {

4218 #i‡
DECSUBSET


4219 
decNumbî
 *
Ælo˛hs
=
NULL
;

4220 
decNumbî
 *
Ælo¸hs
=
NULL
;

4222 
Unô
 
accbuff
[
	`SD2U
(
DECBUFFER
+
DECDPUN
+10)];

4223 
Unô
 *
acc
=
accbuff
;

4224 
Unô
 *
Æloˇcc
=
NULL
;

4225 
Unô
 *
ac˙ext
;

4226 
I¡
 
ac˛ígth
;

4227 
I¡
 
accunôs
;

4228 
I¡
 
accdigôs
;

4230 
Unô
 
v¨buff
[
	`SD2U
(
DECBUFFER
*2+
DECDPUN
)];

4231 
Unô
 *
v¨1
=
v¨buff
;

4232 
Unô
 *
v¨Æloc
=
NULL
;

4233 
Unô
 *
msu1
;

4235 c⁄° 
Unô
 *
v¨2
;

4236 c⁄° 
Unô
 *
msu2
;

4237 
I¡
 
msu2∂us
;

4238 
eI¡
 
msu2∑ú
;

4240 
I¡
 
v¨1unôs
, 
v¨2unôs
;

4241 
I¡
 
v¨2uÀn
;

4242 
I¡
 
v¨1öô∑d
=0;

4243 
I¡
 
maxdigôs
;

4244 
I¡
 
mu…
;

4245 
Unô
 
thisunô
;

4246 
I¡
 
ªsidue
;

4247 
I¡
 
ªqdigôs
=
£t
->
digôs
;

4248 
I¡
 
exp⁄ít
;

4249 
I¡
 
maxexp⁄ít
=0;

4250 
uByã
 
bôs
;

4251 
Unô
 *
èrgë
;

4252 c⁄° 
Unô
 *
sour˚
;

4253 
uI¡
 c⁄° *
pow
;

4254 
I¡
 
shi·
, 
cut
;

4255 #i‡
DECSUBSET


4256 
I¡
 
dr›≥d
;

4259 #i‡
DECCHECK


4260 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

4264 #i‡
DECSUBSET


4265 i‡(!
£t
->
exãnded
) {

4267 i‡(
lhs
->
digôs
>
ªqdigôs
) {

4268 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, 
°©us
);

4269 i‡(
Ælo˛hs
==
NULL
) ;

4270 
lhs
=
Ælo˛hs
;

4272 i‡(
rhs
->
digôs
>
ªqdigôs
) {

4273 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, 
°©us
);

4274 i‡(
Ælo¸hs
==
NULL
) ;

4275 
rhs
=
Ælo¸hs
;

4281 
bôs
=(
lhs
->bôs^
rhs
->bôs)&
DECNEG
;

4284 i‡(
SPECIALARGS
) {

4285 i‡(
SPECIALARGS
 & (
DECSNAN
 | 
DECNAN
)) {

4286 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
°©us
);

4290 i‡(
	`decNumbîIsInföôe
(
lhs
)) {

4291 i‡(
	`decNumbîIsInföôe
(
rhs
) ||

4292 
›
 & (
REMAINDER
 | 
REMNEAR
)) {

4293 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

4297 
	`decNumbîZîo
(
ªs
);

4298 
ªs
->
bôs
=bôs|
DECINF
;

4302 
ªsidue
=0;

4303 i‡(
›
&(
REMAINDER
|
REMNEAR
)) {

4305 
	`decC›yFô
(
ªs
, 
lhs
, 
£t
, &
ªsidue
, 
°©us
);

4308 
	`decNumbîZîo
(
ªs
);

4309 
ªs
->
bôs
=bits;

4312 i‡(
›
&
DIVIDE
) {

4313 
ªs
->
exp⁄ít
=
£t
->
emö
-£t->
digôs
+1;

4314 *
°©us
|=
DEC_Cœm≥d
;

4317 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4323 i‡(
	`ISZERO
(
rhs
)) {

4324 i‡(
	`ISZERO
(
lhs
)) {

4325 
	`decNumbîZîo
(
ªs
);

4326 *
°©us
|=
DEC_Divisi⁄_undeföed
;

4329 
	`decNumbîZîo
(
ªs
);

4330 i‡(
›
&(
REMAINDER
|
REMNEAR
)Ë*
°©us
|=
DEC_InvÆid_›î©i⁄
;

4332 *
°©us
|=
DEC_Divisi⁄_by_zîo
;

4333 
ªs
->
bôs
=bôs|
DECINF
;

4339 i‡(
	`ISZERO
(
lhs
)) {

4340 #i‡
DECSUBSET


4341 i‡(!
£t
->
exãnded
Ë
	`decNumbîZîo
(
ªs
);

4344 i‡(
›
&
DIVIDE
) {

4345 
ªsidue
=0;

4346 
exp⁄ít
=
lhs
->exp⁄ít-
rhs
->exponent;

4347 
	`decNumbîC›y
(
ªs
, 
lhs
);

4348 
ªs
->
bôs
=bits;

4349 
ªs
->
exp⁄ít
=exponent;

4350 
	`decFöÆize
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4352 i‡(
›
&
DIVIDEINT
) {

4353 
	`decNumbîZîo
(
ªs
);

4354 
ªs
->
bôs
=bits;

4357 
exp⁄ít
=
rhs
->exponent;

4358 
	`decNumbîC›y
(
ªs
, 
lhs
);

4359 i‡(
exp⁄ít
<
ªs
->exponent)Ñes->exponent=exponent;

4361 #i‡
DECSUBSET


4370 
exp⁄ít
=(
lhs
->exp⁄ít+lhs->
digôs
)-(
rhs
->exponent+rhs->digits);

4375 i‡(
exp⁄ít
<0 && !(
›
==
DIVIDE
)) {

4376 i‡(
›
&
DIVIDEINT
) {

4377 
	`decNumbîZîo
(
ªs
);

4378 #i‡
DECSUBSET


4379 i‡(
£t
->
exãnded
)

4381 
ªs
->
bôs
=bits;

4385 i‡(
lhs
->
exp⁄ít
<=
rhs
->exponent) {

4386 i‡(
›
&
REMAINDER
 || 
exp⁄ít
<-1) {

4389 
ªsidue
=0;

4390 
	`decC›yFô
(
ªs
, 
lhs
, 
£t
, &
ªsidue
, 
°©us
);

4391 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4402 
ac˛ígth
=
	`D2U
(
ªqdigôs
+
DECDPUN
);

4403 i‡(
ac˛ígth
*(
Unô
)>(
accbuff
)) {

4405 
Æloˇcc
=(
Unô
 *)
	`mÆloc
(
ac˛ígth
*(Unit));

4406 i‡(
Æloˇcc
==
NULL
) {

4407 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

4409 
acc
=
Æloˇcc
;

4423 
maxdigôs
=
rhs
->
digôs
+
ªqdigôs
-1;

4424 i‡(
lhs
->
digôs
>
maxdigôs
) maxdigits=lhs->digits;

4425 
v¨1unôs
=
	`D2U
(
maxdigôs
)+2;

4427 i‡(!(
›
&
DIVIDE
)Ë
v¨1unôs
++;

4428 i‡((
v¨1unôs
+1)*(
Unô
)>(
v¨buff
)) {

4430 
v¨Æloc
=(
Unô
 *)
	`mÆloc
((
v¨1unôs
+1)*(Unit));

4431 i‡(
v¨Æloc
==
NULL
) {

4432 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

4434 
v¨1
=
v¨Æloc
;

4443 
msu1
=
v¨1
+
v¨1unôs
-1;

4444 
sour˚
=
lhs
->
lsu
+
	`D2U
÷hs->
digôs
)-1;

4445 
èrgë
=
msu1
; 
sour˚
>=
lhs
->
lsu
; source--,Åarget--) *target=*source;

4446 ; 
èrgë
>=
v¨1
;Åarget--) *target=0;

4449 
v¨2uÀn
=
v¨1unôs
;

4450 
v¨2unôs
=
	`D2U
(
rhs
->
digôs
);

4451 
v¨2
=
rhs
->
lsu
;

4452 
msu2
=
v¨2
+
v¨2unôs
-1;

4456 
msu2∂us
=*
msu2
;

4457 i‡(
v¨2unôs
>1Ë
msu2∂us
++;

4458 
msu2∑ú
=(
eI¡
)*
msu2
*(
DECDPUNMAX
+1);

4459 i‡(
v¨2unôs
>1) {

4460 
msu2∑ú
+=*(
msu2
-1);

4461 i‡(
v¨2unôs
>2Ë
msu2∑ú
++;

4470 
pow
=&
powîs
[1]; *
msu1
>=*pow;Öow++Ë
exp⁄ít
--;

4471 
pow
=&
powîs
[1]; *
msu2
>=*pow;Öow++Ë
exp⁄ít
++;

4478 i‡(!(
›
&
DIVIDE
)) {

4479 
Unô
 *
u
;

4481 
v¨1öô∑d
=(
v¨1unôs
-
	`D2U
(
lhs
->
digôs
))*
DECDPUN
;

4483 i‡(
exp⁄ít
<0Ë
cut
=-exponent;

4484 
cut
=
DECDPUN
-
exp⁄ít
%DECDPUN;

4485 
	`decShi·ToLó°
(
v¨1
, 
v¨1unôs
, 
cut
);

4486 
exp⁄ít
+=
cut
;

4487 
v¨1öô∑d
-=
cut
;

4489 
u
=
msu1
; 
cut
>=
DECDPUN
; cut-=DECDPUN, u--) *u=0;

4492 
maxexp⁄ít
=
lhs
->
exp⁄ít
-
rhs
->exponent;

4495 i‡(*
msu1
<*
msu2
) {

4496 
v¨2uÀn
--;

4497 
exp⁄ít
-=
DECDPUN
;

4502 
accunôs
=0;

4503 
accdigôs
=0;

4504 
ac˙ext
=
acc
+
ac˛ígth
-1;

4506 
thisunô
=0;

4511 ; *
msu1
==0 && msu1>
v¨1
; msu1--Ë
v¨1unôs
--;

4513 i‡(
v¨1unôs
<
v¨2uÀn
) ;

4514 i‡(
v¨1unôs
==
v¨2uÀn
) {

4516 c⁄° 
Unô
 *
pv1
, *
pv2
;

4517 
Unô
 
v2
;

4518 
pv2
=
msu2
;

4519 
pv1
=
msu1
; ;Öv1--, 
pv2
--) {

4521 
v2
=0;

4522 i‡(
pv2
>=
v¨2
Ë
v2
=*pv2;

4523 i‡(*
pv1
!=
v2
) ;

4524 i‡(
pv1
==
v¨1
) ;

4527 i‡(*
pv1
<
v2
) ;

4528 i‡(*
pv1
==
v2
) {

4532 
thisunô
++;

4533 *
v¨1
=0;

4534 
v¨1unôs
=1;

4540 
mu…
=(
I¡
)(((
eI¡
)*
msu1
*(
DECDPUNMAX
+1)+*(msu1-1))/
msu2∑ú
);

4545 
mu…
=(
I¡
)(((
eI¡
)*
msu1
*(
DECDPUNMAX
+1)+*(msu1-1))/
msu2∂us
);

4547 i‡(
mu…
==0) mult=1;

4549 
thisunô
=(
Unô
)—hisunô+
mu…
);

4552 
shi·
=
v¨2uÀn
-
v¨2unôs
;

4553 #i‡
DECTRACE


4554 
	`decDumpAr
('1', &
v¨1
[
shi·
], 
v¨1unôs
-shift);

4555 
	`decDumpAr
('2', 
v¨2
, 
v¨2unôs
);

4556 
	`¥ötf
("m=%ld\n", -
mu…
);

4558 
	`decUnôAddSub
(&
v¨1
[
shi·
], 
v¨1unôs
-shift,

4559 
v¨2
, 
v¨2unôs
, 0,

4560 &
v¨1
[
shi·
], -
mu…
);

4561 #i‡
DECTRACE


4562 
	`decDumpAr
('#', &
v¨1
[
shi·
], 
v¨1unôs
-shift);

4570 i‡(
accunôs
!=0 || 
thisunô
!=0) {

4571 *
ac˙ext
=
thisunô
;

4573 i‡(
accunôs
==0) {

4574 
accdigôs
++;

4575 
pow
=&
powîs
[1]; 
thisunô
>=*pow;Öow++Ë
accdigôs
++;

4577 
accdigôs
+=
DECDPUN
;

4578 
accunôs
++;

4579 
ac˙ext
--;

4580 i‡(
accdigôs
>
ªqdigôs
) ;

4585 i‡(*
v¨1
==0 && 
v¨1unôs
==1) {

4586 i‡(
›
&(
REMAINDER
|
REMNEAR
)) ;

4587 i‡((
›
&
DIVIDE
Ë&& (
exp⁄ít
<=
maxexp⁄ít
)) ;

4592 i‡(
exp⁄ít
==0 && !(
›
&
DIVIDE
)) ;

4596 
v¨2uÀn
--;

4597 
exp⁄ít
-=
DECDPUN
;

4605 i‡(
accunôs
==0) {

4606 
accunôs
=1;

4607 
accdigôs
=1;

4608 *
ac˙ext
=0;

4610 
ac˙ext
++;

4613 
ªsidue
=0;

4614 i‡(
›
&
DIVIDE
) {

4616 i‡(*
v¨1
!=0 || 
v¨1unôs
>1Ë
ªsidue
=1;

4622 #i‡
DECDPUN
>1

4623 
Unô
 
lsu
=*
ac˙ext
;

4624 i‡(!(
lsu
&0x01) && (lsu!=0)) {

4626 
I¡
 
dr›
=0;

4627 ;; 
dr›
++) {

4628 i‡(
exp⁄ít
>=
maxexp⁄ít
) ;

4629 #i‡
DECDPUN
<=4

4630 i‡((
lsu
-
	`QUOT10
÷su, 
dr›
+1)

4631 *
powîs
[
dr›
+1])!=0) ;

4633 i‡(
lsu
%
powîs
[
dr›
+1]!=0) ;

4635 
exp⁄ít
++;

4637 i‡(
dr›
>0) {

4638 
accunôs
=
	`decShi·ToLó°
(
ac˙ext
,áccunôs, 
dr›
);

4639 
accdigôs
=
	`decGëDigôs
(
ac˙ext
, 
accunôs
);

4640 
accunôs
=
	`D2U
(
accdigôs
);

4649 i‡(
accdigôs
+
exp⁄ít
>
ªqdigôs
) {

4650 *
°©us
|=
DEC_Divisi⁄_impossibÀ
;

4653 i‡(
›
 & (
REMAINDER
|
REMNEAR
)) {

4656 
I¡
 
po°shi·
;

4657 
Fœg
 
wasodd
=0;

4658 
Unô
 *
quŸlsu
;

4659 
I¡
 
quŸdigôs
;

4661 
bôs
=
lhs
->bits;

4665 i‡(*
v¨1
==0 && 
v¨1unôs
==1) {

4666 
I¡
 
exp
=
lhs
->
exp⁄ít
;

4667 i‡(
rhs
->
exp⁄ít
<
exp
)Éxp=rhs->exponent;

4668 
	`decNumbîZîo
(
ªs
);

4669 #i‡
DECSUBSET


4670 i‡(
£t
->
exãnded
)

4672 
ªs
->
exp⁄ít
=
exp
;

4673 
ªs
->
bôs
=(
uByã
)(bôs&
DECNEG
);

4674 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4678 i‡(*
ac˙ext
 & 0x01Ë
wasodd
=1;

4679 
quŸlsu
=
ac˙ext
;

4680 
quŸdigôs
=
accdigôs
;

4686 
po°shi·
=
v¨1öô∑d
+
exp⁄ít
-
lhs
->exp⁄ít+
rhs
->exponent;

4688 i‡(
v¨1öô∑d
<
po°shi·
)Öostshift=var1initpad;

4691 
v¨1unôs
=
	`decShi·ToLó°
(
v¨1
, v¨1unôs, 
po°shi·
);

4692 
ac˙ext
=
v¨1
;

4693 
accdigôs
=
	`decGëDigôs
(
v¨1
, 
v¨1unôs
);

4694 
accunôs
=
	`D2U
(
accdigôs
);

4696 
exp⁄ít
=
lhs
->exponent;

4697 i‡(
rhs
->
exp⁄ít
<exponent)Éxponent=rhs->exponent;

4702 i‡(
›
&
REMNEAR
) {

4703 
I¡
 
com∑ª
, 
èrunôs
;

4704 
Unô
 *
up
;

4708 
èrunôs
=
	`decUnôAddSub
(
ac˙ext
, 
accunôs
,áccnext,áccunits,

4709 0, 
ac˙ext
, 1);

4715 
com∑ª
=
	`decUnôCom∑ª
(
ac˙ext
, 
èrunôs
, 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
),

4716 
rhs
->
exp⁄ít
-exponent);

4717 i‡(
com∑ª
==
BADINT
) {

4718 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

4723 
up
=
ac˙ext
; up<ac˙ext+
èrunôs
; up++) {

4724 
I¡
 
hÆf
;

4725 
hÆf
=*
up
 & 0x01;

4726 *
up
/=2;

4727 i‡(!
hÆf
) ;

4728 *(
up
-1)+=(
DECDPUNMAX
+1)/2;

4732 i‡(
com∑ª
>0 || (com∑ª==0 && 
wasodd
)) {

4733 
I¡
 
exp
, 
expunôs
, 
ex¥em
;

4738 
Fœg
 
Æ öes
=0;

4739 i‡(
quŸdigôs
==
ªqdigôs
) {

4740 
up
=
quŸlsu
; ; up++) {

4741 i‡(
quŸdigôs
>
DECDPUN
) {

4742 i‡(*
up
!=
DECDPUNMAX
) ;

4745 i‡(*
up
==
powîs
[
quŸdigôs
]-1Ë
Æ öes
=1;

4748 
quŸdigôs
-=
DECDPUN
;

4751 i‡(
Æ öes
) {

4752 *
°©us
|=
DEC_Divisi⁄_impossibÀ
;

4757 
exp
=
rhs
->
exp⁄ít
-exponent;

4759 
expunôs
=
exp
/
DECDPUN
;

4760 
ex¥em
=
exp
%
DECDPUN
;

4762 
accunôs
=-
	`decUnôAddSub
(
ac˙ext
,áccunits,

4763 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
),

4764 
expunôs
, 
ac˙ext
, -(
I¡
)
powîs
[
ex¥em
]);

4765 
accdigôs
=
	`decGëDigôs
(
ac˙ext
, 
accunôs
);

4766 
accunôs
=
	`D2U
(
accdigôs
);

4768 
bôs
^=
DECNEG
;

4775 
ªs
->
exp⁄ít
=exponent;

4776 
ªs
->
bôs
=(
uByã
)(bôs&
DECNEG
);

4779 
	`decSëC€ff
(
ªs
, 
£t
, 
ac˙ext
, 
accdigôs
, &
ªsidue
, 
°©us
);

4781 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

4783 #i‡
DECSUBSET


4785 i‡(!
£t
->
exãnded
 && (
›
==
DIVIDE
)Ë
	`decTrim
(
ªs
, së, 0, 1, &
dr›≥d
);

4789 i‡(
v¨Æloc
!=
NULL
Ë
	`‰ì
(varalloc);

4790 i‡(
Æloˇcc
!=
NULL
Ë
	`‰ì
(allocacc);

4791 #i‡
DECSUBSET


4792 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

4793 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

4795  
ªs
;

4796 
	}
}

4834 
	#FASTMUL
 (
DECUSE64
 && 
DECDPUN
<5)

	)

4835 
decNumbî
 * 
	$decMu…ùlyOp
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

4836 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

4837 
uI¡
 *
°©us
) {

4838 
I¡
 
accunôs
;

4839 
I¡
 
exp⁄ít
;

4840 
I¡
 
ªsidue
=0;

4841 
uByã
 
bôs
;

4842 
Unô
 *
acc
;

4843 
I¡
 
√edbyãs
;

4844 *
Æloˇcc
=
NULL
;

4845 
Unô
 
accbuff
[
	`SD2U
(
DECBUFFER
*4+1)];

4847 c⁄° 
Unô
 *
mî
, *
mîmsup
;

4848 
I¡
 
madÀngth
;

4849 
I¡
 
shi·
;

4851 #i‡
FASTMUL


4854 #i‡
DECDPUN
 & 1

4855 
	#FASTBASE
 1000000000

4856 
	#FASTDIGS
 9

4857 
	#FASTLAZY
 18

4858 #ñ£

	)

4859 
	#FASTBASE
 100000000

	)

4860 
	#FASTDIGS
 8

	)

4861 
	#FASTLAZY
 1844

4866 
uI¡
 
zlhibuff
[(
DECBUFFER
*2+1)/8+1];

4867 
uI¡
 *
zlhi
=
zlhibuff
;

4868 
uI¡
 *
Ælo˛hi
=
NULL
;

4869 
uI¡
 
zrhibuff
[(
DECBUFFER
*2+1)/8+1];

4870 
uI¡
 *
zrhi
=
zrhibuff
;

4871 
uI¡
 *
Ælo¸hi
=
NULL
;

4872 
uL⁄g
 
zaccbuff
[(
DECBUFFER
*2+1)/4+2];

4874 
uL⁄g
 *
zacc
=
zaccbuff
;

4875 #i‡
DECDPUN
==1

	)

4876 
I¡
 
zoff
;

4878 
uI¡
 *
lù
, *
rù
;

4879 
uI¡
 *
lmsi
, *
rmsi
;

4880 
I¡
 
ûhs
, 
úhs
, 
ücc
;

4881 
I¡
 
œzy
;

4882 
uL⁄g
 
lˇºy
;

4883 
uI¡
 
ˇºy
;

4884 
I¡
 
cou¡
;

4885 c⁄° 
Unô
 *
cup
;

4886 
Unô
 *
up
;

4887 
uL⁄g
 *
Õ
;

4888 
I¡
 
p
;

4891 #i‡
DECSUBSET


4892 
decNumbî
 *
Ælo˛hs
=
NULL
;

4893 
decNumbî
 *
Ælo¸hs
=
NULL
;

4896 #i‡
DECCHECK


4897 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

4901 
bôs
=(
uByã
)((
lhs
->bôs^
rhs
->bôs)&
DECNEG
);

4904 i‡(
SPECIALARGS
) {

4905 i‡(
SPECIALARGS
 & (
DECSNAN
 | 
DECNAN
)) {

4906 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
°©us
);

4907  
ªs
;}

4909 i‡(((
lhs
->
bôs
 & 
DECINF
)==0 && 
	`ISZERO
(lhs))

4910 ||((
rhs
->
bôs
 & 
DECINF
)==0 && 
	`ISZERO
(rhs))) {

4911 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

4912  
ªs
;}

4913 
	`decNumbîZîo
(
ªs
);

4914 
ªs
->
bôs
=bôs|
DECINF
;

4915  
ªs
;}

4921 i‡(
lhs
->
digôs
<
rhs
->digits) {

4922 c⁄° 
decNumbî
 *
hﬁd
=
lhs
;

4923 
lhs
=
rhs
;

4924 
rhs
=
hﬁd
;

4928 #i‡
DECSUBSET


4929 i‡(!
£t
->
exãnded
) {

4931 i‡(
lhs
->
digôs
>
£t
->digits) {

4932 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, 
°©us
);

4933 i‡(
Ælo˛hs
==
NULL
) ;

4934 
lhs
=
Ælo˛hs
;

4936 i‡(
rhs
->
digôs
>
£t
->digits) {

4937 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, 
°©us
);

4938 i‡(
Ælo¸hs
==
NULL
) ;

4939 
rhs
=
Ælo¸hs
;

4945 #i‡
FASTMUL


4948 
	#NEEDTWO
 (
DECDPUN
*2)

4949 i‡(
rhs
->
digôs
>
NEEDTWO
) {

4951 
ûhs
=(
lhs
->
digôs
+
FASTDIGS
-1)/FASTDIGS;

4952 
úhs
=(
rhs
->
digôs
+
FASTDIGS
-1)/FASTDIGS;

4953 
ücc
=
ûhs
+
úhs
;

	)

4956 
√edbyãs
=
ûhs
*(
uI¡
);

4957 i‡(
√edbyãs
>(
I¡
)(
zlhibuff
)) {

4958 
Ælo˛hi
=(
uI¡
 *)
	`mÆloc
(
√edbyãs
);

4959 
zlhi
=
Ælo˛hi
;}

4960 
√edbyãs
=
úhs
*(
uI¡
);

4961 i‡(
√edbyãs
>(
I¡
)(
zrhibuff
)) {

4962 
Ælo¸hi
=(
uI¡
 *)
	`mÆloc
(
√edbyãs
);

4963 
zrhi
=
Ælo¸hi
;}

4972 
√edbyãs
=
ücc
*(
uL⁄g
);

4973 #i‡
DECDPUN
==1

4974 
zoff
=(
ücc
+7)/8;

4975 
√edbyãs
+=
zoff
*8;

4977 i‡(
√edbyãs
>(
I¡
)(
zaccbuff
)) {

4978 
Æloˇcc
=(
uL⁄g
 *)
	`mÆloc
(
√edbyãs
);

4979 
zacc
=(
uL⁄g
 *)
Æloˇcc
;}

4980 i‡(
zlhi
==
NULL
||
zrhi
==NULL||
zacc
==NULL) {

4981 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

4984 
acc
=(
Unô
 *)
zacc
;

4985 #i‡
DECDPUN
==1

4986 
zacc
+=
zoff
;

4990 
cou¡
=
lhs
->
digôs
, 
cup
ˆhs->
lsu
, 
lù
=
zlhi
; count>0;Üip++)

4991 
p
=0, *
lù
=0;Ö<
FASTDIGS
 && 
cou¡
>0;

4992 
p
+=
DECDPUN
, 
cup
++, 
cou¡
-=DECDPUN)

4993 *
lù
+=*
cup
*
powîs
[
p
];

4994 
lmsi
=
lù
-1;

4995 
cou¡
=
rhs
->
digôs
, 
cup
Ùhs->
lsu
, 
rù
=
zrhi
; count>0;Ñip++)

4996 
p
=0, *
rù
=0;Ö<
FASTDIGS
 && 
cou¡
>0;

4997 
p
+=
DECDPUN
, 
cup
++, 
cou¡
-=DECDPUN)

4998 *
rù
+=*
cup
*
powîs
[
p
];

4999 
rmsi
=
rù
-1;

5002 
Õ
=
zacc
;Üp<zacc+
ücc
;Üp++) *lp=0;

5021 
œzy
=
FASTLAZY
;

5022 
rù
=
zrhi
;Ñù<=
rmsi
;Ñip++) {

5023 
Õ
=
zacc
+(
rù
-
zrhi
);

5024 
lù
=
zlhi
;Üù<=
lmsi
;Üù++, 
Õ
++) {

5025 *
Õ
+=(
uL⁄g
)(*
lù
)*(*
rù
);

5027 
œzy
--;

5028 i‡(
œzy
>0 && 
rù
!=
rmsi
) ;

5029 
œzy
=
FASTLAZY
;

5031 
Õ
=
zacc
;Üp<zacc+
ücc
;Üp++) {

5032 i‡(*
Õ
<
FASTBASE
) ;

5033 
lˇºy
=*
Õ
/
FASTBASE
;

5038 i‡(
lˇºy
<
FASTBASE
Ë
ˇºy
=(
uI¡
)lcarry;

5040 
uI¡
 
ˇºy2
=(uI¡)(
lˇºy
/
FASTBASE
);

5041 *(
Õ
+2)+=
ˇºy2
;

5042 *
Õ
-=((
uL⁄g
)
FASTBASE
*FASTBASE*
ˇºy2
);

5043 
ˇºy
=(
uI¡
)(
lˇºy
-((
uL⁄g
)
FASTBASE
*
ˇºy2
));

5045 *(
Õ
+1)+=
ˇºy
;

5046 *
Õ
-=((
uL⁄g
)
FASTBASE
*
ˇºy
);

5056 
Õ
=
zacc
, 
up
=
acc
;Üp<zacc+
ücc
;Üp++) {

5057 
uI¡
 
ôem
=(uI¡)*
Õ
;

5058 
p
=0;Ö<
FASTDIGS
-
DECDPUN
;Ö+=DECDPUN, 
up
++) {

5059 
uI¡
 
∑π
=
ôem
/(
DECDPUNMAX
+1);

5060 *
up
=(
Unô
)(
ôem
-(
∑π
*(
DECDPUNMAX
+1)));

5061 
ôem
=
∑π
;

5063 *
up
=(
Unô
)
ôem
; up++;

5065 
accunôs
=
up
-
acc
;

5071 
acc
=
accbuff
;

5072 
√edbyãs
=(
	`D2U
(
lhs
->
digôs
)+D2U(
rhs
->digôs))*(
Unô
);

5073 i‡(
√edbyãs
>(
I¡
)(
accbuff
)) {

5074 
Æloˇcc
=(
Unô
 *)
	`mÆloc
(
√edbyãs
);

5075 i‡(
Æloˇcc
==
NULL
Ë{*
°©us
|=
DEC_Insufficõ¡_°‹age
; ;}

5076 
acc
=(
Unô
 *)
Æloˇcc
;

5084 
accunôs
=1;

5085 *
acc
=0;

5086 
shi·
=0;

5087 
madÀngth
=
	`D2U
(
lhs
->
digôs
);

5088 
mîmsup
=
rhs
->
lsu
+
	`D2U
‘hs->
digôs
);

5090 
mî
=
rhs
->
lsu
; mî<
mîmsup
; mer++) {

5093 i‡(*
mî
!=0Ë
accunôs
=
	`decUnôAddSub
(&
acc
[
shi·
],áccunits-shift,

5094 
lhs
->
lsu
, 
madÀngth
, 0,

5095 &
acc
[
shi·
], *
mî
)

5096 + 
shi·
;

5098 *(
acc
+
accunôs
)=0;

5099 
accunôs
++;

5102 
shi·
++;

5104 #i‡
FASTMUL


5108 #i‡
DECTRACE


5109 
	`decDumpAr
('*', 
acc
, 
accunôs
);

5115 
ªs
->
bôs
=bits;

5116 
ªs
->
digôs
=
	`decGëDigôs
(
acc
, 
accunôs
);

5123 
exp⁄ít
=
lhs
->exp⁄ít+
rhs
->exponent;

5124 i‡(
lhs
->
exp⁄ít
<0 && 
rhs
->exponent<0 &&Éxponent>0)

5125 
exp⁄ít
=-2*
DECNUMMAXE
;

5126 
ªs
->
exp⁄ít
=exponent;

5130 
	`decSëC€ff
(
ªs
, 
£t
, 
acc
,Ñes->
digôs
, &
ªsidue
, 
°©us
);

5131 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

5134 i‡(
Æloˇcc
!=
NULL
Ë
	`‰ì
(allocacc);

5135 #i‡
DECSUBSET


5136 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

5137 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

5139 #i‡
FASTMUL


5140 i‡(
Ælo¸hi
!=
NULL
Ë
	`‰ì
(allocrhi);

5141 i‡(
Ælo˛hi
!=
NULL
Ë
	`‰ì
(alloclhi);

5143  
ªs
;

5225 
decNumbî
 * 
	`decExpOp
(decNumbî *
ªs
, c⁄° decNumbî *
rhs
,

5226 
decC⁄ãxt
 *
£t
, 
uI¡
 *
°©us
) {

5227 
uI¡
 
ign‹e
=0;

5228 
I¡
 
h
;

5229 
I¡
 
p
;

5230 
I¡
 
ªsidue
;

5231 
uI¡
 
√edbyãs
;

5232 c⁄° 
decNumbî
 *
x
=
rhs
;

5233 
decC⁄ãxt
 
a£t
, 
t£t
, 
d£t
;

5234 
I¡
 
comp
;

5239 
decNumbî
 
bu‰
[
	`D2N
(
DECBUFFER
*2+1)];

5240 
decNumbî
 *
Ælo¸hs
=
NULL
;

5247 
decNumbî
 
bu·
[
	`D2N
(
DECBUFFER
*2+9+1)];

5248 
decNumbî
 *
Ælocbu·
=
NULL
;

5249 
decNumbî
 *
t
=
bu·
;

5251 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
*4+18+1)];

5252 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

5253 
decNumbî
 *
a
=
buÁ
;

5256 
decNumbî
 
bufd
[
	`D2N
(16)];

5257 
decNumbî
 *
d
=
bufd
;

5258 
decNumbî
 
num⁄e
;

5260 #i‡
DECCHECK


5261 
I¡
 
ôî©i⁄s
=0;

5262 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

5266 i‡(
SPECIALARG
) {

5267 i‡(
	`decNumbîIsInföôe
(
rhs
)) {

5268 i‡(
	`decNumbîIsNeg©ive
(
rhs
))

5269 
	`decNumbîZîo
(
ªs
);

5270 
	`decNumbîC›y
(
ªs
, 
rhs
);

5272 
	`decNaNs
(
ªs
, 
rhs
, 
NULL
, 
£t
, 
°©us
);

5275 i‡(
	`ISZERO
(
rhs
)) {

5276 
	`decNumbîZîo
(
ªs
);

5277 *
ªs
->
lsu
=1;

5294 
	`decNumbîZîo
(
d
);

5295 *
d
->
lsu
=4;

5296 
d
->
exp⁄ít
=-
£t
->
digôs
;

5297 i‡(
	`decNumbîIsNeg©ive
(
rhs
)Ë
d
->
exp⁄ít
--;

5298 
comp
=
	`decCom∑ª
(
d
, 
rhs
, 1);

5299 i‡(
comp
==
BADINT
) {

5300 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5302 i‡(
comp
>=0) {

5303 
I¡
 
shi·
=
£t
->
digôs
-1;

5304 
	`decNumbîZîo
(
ªs
);

5305 *
ªs
->
lsu
=1;

5306 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
, 1, 
shi·
);

5307 
ªs
->
exp⁄ít
=-
shi·
;

5308 *
°©us
|=
DEC_I√xa˘
 | 
DEC_Rounded
;

5313 
	`decC⁄ãxtDeÁu…
(&
a£t
, 
DEC_INIT_DECIMAL64
);

5315 
a£t
.
emax
=
£t
->emax;

5316 
a£t
.
emö
=
£t
->emin;

5317 
a£t
.
˛amp
=0;

5321 
h
=
rhs
->
exp⁄ít
+rhs->
digôs
;

5327 i‡(
h
>8) {

5331 
	`decNumbîZîo
(
a
);

5332 *
a
->
lsu
=2;

5333 i‡(
	`decNumbîIsNeg©ive
(
rhs
)Ë
a
->
exp⁄ít
=-2;

5334 
h
=8;

5335 
p
=9;

5338 
I¡
 
maxÀvî
=(
rhs
->
digôs
>8?1:0);

5349 
I¡
 
Àvî
=
	`MINI
(8-
h
, 
maxÀvî
);

5350 
I¡
 
u£
=-
rhs
->
digôs
-
Àvî
;

5351 
h
+=
Àvî
;

5352 i‡(
h
<0) {

5353 
u£
+=
h
;

5354 
h
=0;

5357 i‡(
rhs
->
exp⁄ít
!=
u£
) {

5358 
decNumbî
 *
√wrhs
=
bu‰
;

5359 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
rhs
->
digôs
)-1)*(
Unô
);

5360 i‡(
√edbyãs
>(
bu‰
)) {

5361 
Ælo¸hs
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

5362 i‡(
Ælo¸hs
==
NULL
) {

5363 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5365 
√wrhs
=
Ælo¸hs
;

5367 
	`decNumbîC›y
(
√wrhs
, 
rhs
);

5368 
√wrhs
->
exp⁄ít
=
u£
;

5369 
x
=
√wrhs
;

5383 
p
=
	`MAXI
(
x
->
digôs
, 
£t
->digôs)+
h
+2;

5391 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
p
*2)-1)*(
Unô
);

5392 i‡(
√edbyãs
>(
buÁ
)) {

5393 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

5394 i‡(
ÆlocbuÁ
==
NULL
) {

5395 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5397 
a
=
ÆlocbuÁ
;

5403 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
p
+2)-1)*(
Unô
);

5404 i‡(
√edbyãs
>(
bu·
)) {

5405 
Ælocbu·
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

5406 i‡(
Ælocbu·
==
NULL
) {

5407 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5409 
t
=
Ælocbu·
;

5412 
	`decNumbîC›y
(
t
, 
x
);

5413 
	`decNumbîZîo
(
a
); *a->
lsu
=1;

5414 
	`decNumbîZîo
(
d
); *d->
lsu
=2;

5415 
	`decNumbîZîo
(&
num⁄e
); *num⁄e.
lsu
=1;

5418 
	`decC⁄ãxtDeÁu…
(&
t£t
, 
DEC_INIT_DECIMAL64
);

5419 
d£t
=
t£t
;

5421 
a£t
.
digôs
=
p
*2;

5423 
t£t
.
digôs
=
p
;

5424 
t£t
.
emö
=
DEC_MIN_EMIN
;

5429 #i‡
DECCHECK


5430 
ôî©i⁄s
++;

5434 
	`decAddOp
(
a
,á, 
t
, &
a£t
, 0, 
°©us
);

5435 
	`decMu…ùlyOp
(
t
,Å, 
x
, &
t£t
, &
ign‹e
);

5436 
	`decDivideOp
(
t
,Å, 
d
, &
t£t
, 
DIVIDE
, &
ign‹e
);

5441 i‡(((
a
->
digôs
+a->
exp⁄ít
)>=(
t
->digôs+t->exp⁄ít+
p
+1))

5442 && (
a
->
digôs
>=
p
)) ;

5443 
	`decAddOp
(
d
, d, &
num⁄e
, &
d£t
, 0, &
ign‹e
);

5446 #i‡
DECCHECK


5448 i‡(
ôî©i⁄s
>
p
+3)

5449 
	`¥ötf
("Exp iterations=%ld, status=%08lx,Ö=%ld, d=%ld\n",

5450 (
LI
)
ôî©i⁄s
, (LI)*
°©us
, (LI)
p
, (LI)
x
->
digôs
);

5456 i‡(
h
>0) {

5457 
I¡
 
£íbô
=0;

5458 
I¡
 
i
;

5459 
I¡
 
n
=
powîs
[
h
];

5460 
a£t
.
digôs
=
p
+2;

5464 
	`decNumbîZîo
(
t
); *t->
lsu
=1;

5465 
i
=1;;i++){

5467 i‡(*
°©us
 & (
DEC_OvîÊow
|
DEC_UndîÊow
)) {

5468 i‡(*
°©us
&
DEC_OvîÊow
 || 
	`ISZERO
(
t
)) ;}

5469 
n
=n<<1;

5470 i‡(
n
<0) {

5471 
£íbô
=1;

5472 
	`decMu…ùlyOp
(
t
,Å, 
a
, &
a£t
, 
°©us
);

5474 i‡(
i
==31) ;

5475 i‡(!
£íbô
) ;

5476 
	`decMu…ùlyOp
(
t
,Å,Å, &
a£t
, 
°©us
);

5479 
a
=
t
;

5483 
ªsidue
=1;

5484 i‡(
	`ISZERO
(
a
)Ë
ªsidue
=0;

5485 
a£t
.
digôs
=
£t
->digits;

5486 
	`decC›yFô
(
ªs
, 
a
, &
a£t
, &
ªsidue
, 
°©us
);

5487 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

5490 i‡(
Ælo¸hs
 !=
NULL
Ë
	`‰ì
(allocrhs);

5491 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

5492 i‡(
Ælocbu·
!=
NULL
Ë
	`‰ì
(allocbuft);

5494  
ªs
;

5513 c⁄° 
uSh‹t
 
LN¬
[90]={9016, 8652, 8316, 8008, 7724, 7456, 7208,

5585 
decNumbî
 * 
	`decLnOp
(decNumbî *
ªs
, c⁄° decNumbî *
rhs
,

5586 
decC⁄ãxt
 *
£t
, 
uI¡
 *
°©us
) {

5587 
uI¡
 
ign‹e
=0;

5588 
uI¡
 
√edbyãs
;

5589 
I¡
 
ªsidue
;

5590 
I¡
 
r
;

5591 
I¡
 
p
;

5592 
I¡
 
µ
;

5593 
I¡
 
t
;

5597 
decNumbî
 
buÁ
[
	`D2N
(
DECBUFFER
+12)];

5598 
decNumbî
 *
ÆlocbuÁ
=
NULL
;

5599 
decNumbî
 *
a
=
buÁ
;

5600 
decNumbî
 
bufb
[
	`D2N
(
DECBUFFER
*2+2)];

5601 
decNumbî
 *
Ælocbufb
=
NULL
;

5602 
decNumbî
 *
b
=
bufb
;

5604 
decNumbî
 
num⁄e
;

5605 
decNumbî
 
cmp
;

5606 
decC⁄ãxt
 
a£t
, 
b£t
;

5608 #i‡
DECCHECK


5609 
I¡
 
ôî©i⁄s
=0;

5610 i‡(
	`decCheckO≥ønds
(
ªs
, 
DECUNUSED
, 
rhs
, 
£t
)) Ñes;

5614 i‡(
SPECIALARG
) {

5615 i‡(
	`decNumbîIsInföôe
(
rhs
)) {

5616 i‡(
	`decNumbîIsNeg©ive
(
rhs
))

5617 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5618 
	`decNumbîC›y
(
ªs
, 
rhs
);

5620 
	`decNaNs
(
ªs
, 
rhs
, 
NULL
, 
£t
, 
°©us
);

5623 i‡(
	`ISZERO
(
rhs
)) {

5624 
	`decNumbîZîo
(
ªs
);

5625 
ªs
->
bôs
=
DECINF
|
DECNEG
;

5629 i‡(
	`decNumbîIsNeg©ive
(
rhs
)) {

5630 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5636 i‡(
rhs
->
exp⁄ít
==0 && 
£t
->
digôs
<=40) {

5637 #i‡
DECDPUN
==1

5638 i‡(
rhs
->
lsu
[0]==0 &&Ñhs->lsu[1]==1 &&Ñhs->
digôs
==2) {

5640 i‡(
rhs
->
lsu
[0]==10 &&Ñhs->
digôs
==2) {

5642 
a£t
=*
£t
;á£t.
round
=
DEC_ROUND_HALF_EVEN
;

5643 
	#LN10
 "2.302585092994045684017991454684364207601"

	)

5644 
	`decNumbîFromSåög
(
ªs
, 
LN10
, &
a£t
);

5645 *
°©us
|=(
DEC_I√xa˘
 | 
DEC_Rounded
);

5647 i‡(
rhs
->
lsu
[0]==2 &&Ñhs->
digôs
==1) {

5648 
a£t
=*
£t
;á£t.
round
=
DEC_ROUND_HALF_EVEN
;

5649 
	#LN2
 "0.6931471805599453094172321214581765680755"

	)

5650 
	`decNumbîFromSåög
(
ªs
, 
LN2
, &
a£t
);

5651 *
°©us
|=(
DEC_I√xa˘
 | 
DEC_Rounded
);

5660 
p
=
	`MAXI
(
rhs
->
digôs
, MAXI(
£t
->digits, 7))+2;

5668 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
	`MAXI
(
p
,16))-1)*(
Unô
);

5669 i‡(
√edbyãs
>(
buÁ
)) {

5670 
ÆlocbuÁ
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

5671 i‡(
ÆlocbuÁ
==
NULL
) {

5672 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5674 
a
=
ÆlocbuÁ
;

5676 
µ
=
p
+
rhs
->
digôs
;

5677 
√edbyãs
=(
decNumbî
)+(
	`D2U
(
	`MAXI
(
µ
,16))-1)*(
Unô
);

5678 i‡(
√edbyãs
>(
bufb
)) {

5679 
Ælocbufb
=(
decNumbî
 *)
	`mÆloc
(
√edbyãs
);

5680 i‡(
Ælocbufb
==
NULL
) {

5681 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

5683 
b
=
Ælocbufb
;

5695 
	`decC⁄ãxtDeÁu…
(&
a£t
, 
DEC_INIT_DECIMAL64
);

5696 
r
=
rhs
->
exp⁄ít
+rhs->
digôs
;

5697 
	`decNumbîFromI¡32
(
a
, 
r
);

5698 
	`decNumbîFromI¡32
(
b
, 2302585);

5699 
b
->
exp⁄ít
=-6;

5700 
	`decMu…ùlyOp
(
a
,á, 
b
, &
a£t
, &
ign‹e
);

5703 
ªsidue
=0;

5704 
a£t
.
digôs
=2;á£t.
round
=
DEC_ROUND_DOWN
;

5705 
	`decC›yFô
(
b
, 
rhs
, &
a£t
, &
ªsidue
, &
ign‹e
);

5706 
b
->
exp⁄ít
=0;

5707 
t
=
	`decGëI¡
(
b
);

5708 i‡(
t
<10Ët=
	`X10
(t);

5709 
t
=
LN¬
[t-10];

5710 
	`decNumbîFromI¡32
(
b
, 
t
>>2);

5711 
b
->
exp⁄ít
=-(
t
&3)-3;

5712 
b
->
bôs
=
DECNEG
;

5713 
a£t
.
digôs
=16;á£t.
round
=
DEC_ROUND_HALF_EVEN
;

5714 
	`decAddOp
(
a
,á, 
b
, &
a£t
, 0, &
ign‹e
);

5719 
	`decNumbîZîo
(&
num⁄e
); *num⁄e.
lsu
=1;

5723 
a£t
.
emax
=
£t
->emax;

5724 
a£t
.
emö
=
£t
->emin;

5725 
a£t
.
˛amp
=0;

5727 
b£t
=
a£t
;

5728 
b£t
.
emax
=
DEC_MAX_MATH
*2;

5729 
b£t
.
emö
=-
DEC_MAX_MATH
*2;

5733 
µ
=9;

5736 
a£t
.
digôs
=
µ
;

5737 
b£t
.
digôs
=
µ
+
rhs
->digits;

5739 #i‡
DECCHECK


5740 
ôî©i⁄s
++;

5741 i‡(
ôî©i⁄s
>24) ;

5748 
a
->
bôs
^=
DECNEG
;

5749 
	`decExpOp
(
b
, 
a
, &
b£t
, &
ign‹e
);

5750 
a
->
bôs
^=
DECNEG
;

5752 
	`decMu…ùlyOp
(
b
, b, 
rhs
, &
b£t
, &
ign‹e
);

5753 
	`decAddOp
(
b
, b, &
num⁄e
, &
b£t
, 
DECNEG
, &
ign‹e
);

5763 i‡(
	`decNumbîIsZîo
(
b
) ||

5764 (
a
->
digôs
+a->
exp⁄ít
)>=(
b
->digôs+b->exp⁄ít+
£t
->digits+1)) {

5765 i‡(
a
->
digôs
==
p
) ;

5766 i‡(
	`decNumbîIsZîo
(
a
)) {

5767 
	`decCom∑ªOp
(&
cmp
, 
rhs
, &
num⁄e
, &
a£t
, 
COMPARE
, &
ign‹e
);

5768 i‡(
cmp
.
lsu
[0]==0Ë
a
->
exp⁄ít
=0;

5769 *
°©us
|=(
DEC_I√xa˘
 | 
DEC_Rounded
);

5773 i‡(
	`decNumbîIsZîo
(
b
)Ëb->
exp⁄ít
=
a
->exp⁄ít-
p
;

5777 
	`decAddOp
(
a
,á, 
b
, &
a£t
, 0, &
ign‹e
);

5778 i‡(
µ
==
p
) ;

5780 
µ
=pp*2;

5781 i‡(
µ
>
p
)Öp=p;

5782 
a£t
.
digôs
=
µ
;

5783 
b£t
.
digôs
=
µ
+
rhs
->digits;

5786 #i‡
DECCHECK


5788 i‡(
ôî©i⁄s
>24)

5789 
	`¥ötf
("Ln iterations=%ld, status=%08lx,Ö=%ld, d=%ld\n",

5790 (
LI
)
ôî©i⁄s
, (LI)*
°©us
, (LI)
p
, (LI)
rhs
->
digôs
);

5794 
ªsidue
=1;

5795 i‡(
	`ISZERO
(
a
)Ë
ªsidue
=0;

5796 
a£t
.
digôs
=
£t
->digits;

5797 
	`decC›yFô
(
ªs
, 
a
, &
a£t
, &
ªsidue
, 
°©us
);

5798 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

5801 i‡(
ÆlocbuÁ
!=
NULL
Ë
	`‰ì
(allocbufa);

5802 i‡(
Ælocbufb
!=
NULL
Ë
	`‰ì
(allocbufb);

5804  
ªs
;

5829 
decNumbî
 * 
	`decQu™tizeOp
(decNumbî *
ªs
, c⁄° decNumbî *
lhs
,

5830 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

5831 
Fœg
 
qu™t
, 
uI¡
 *
°©us
) {

5832 #i‡
DECSUBSET


5833 
decNumbî
 *
Ælo˛hs
=
NULL
;

5834 
decNumbî
 *
Ælo¸hs
=
NULL
;

5836 c⁄° 
decNumbî
 *
örhs
=
rhs
;

5837 
I¡
 
ªqdigôs
=
£t
->
digôs
;

5838 
I¡
 
ªqexp
;

5839 
I¡
 
ªsidue
=0;

5840 
I¡
 
ëöy
=
£t
->
emö
-(
ªqdigôs
-1);

5842 #i‡
DECCHECK


5843 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

5847 #i‡
DECSUBSET


5848 i‡(!
£t
->
exãnded
) {

5850 i‡(
lhs
->
digôs
>
ªqdigôs
) {

5851 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, 
°©us
);

5852 i‡(
Ælo˛hs
==
NULL
) ;

5853 
lhs
=
Ælo˛hs
;

5855 i‡(
rhs
->
digôs
>
ªqdigôs
) {

5856 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, 
°©us
);

5857 i‡(
Ælo¸hs
==
NULL
) ;

5858 
rhs
=
Ælo¸hs
;

5865 i‡(
SPECIALARGS
) {

5867 i‡(
SPECIALARGS
 & (
DECSNAN
 | 
DECNAN
))

5868 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
°©us
);

5870 i‡((
lhs
->
bôs
 ^ 
rhs
->bôsË& 
DECINF
)

5871 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5873 
	`decNumbîC›y
(
ªs
, 
lhs
);

5878 i‡(
qu™t
Ë
ªqexp
=
örhs
->
exp⁄ít
;

5883 
ªqexp
=
	`decGëI¡
(
örhs
);

5886 #i‡
DECSUBSET


5887 i‡(!
£t
->
exãnded
Ë
ëöy
=£t->
emö
;

5890 i‡(
ªqexp
==
BADINT


5891 || 
ªqexp
==
BIGODD
 ||Ñeqexp==
BIGEVEN


5892 || (
ªqexp
<
ëöy
)

5893 || (
ªqexp
>
£t
->
emax
)) {

5894 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5898 i‡(
	`ISZERO
(
lhs
)) {

5899 
	`decNumbîC›y
(
ªs
, 
lhs
);

5900 
ªs
->
exp⁄ít
=
ªqexp
;

5901 #i‡
DECSUBSET


5902 i‡(!
£t
->
exãnded
Ë
ªs
->
bôs
=0;

5906 
I¡
 
adju°
=
ªqexp
-
lhs
->
exp⁄ít
;

5908 i‡((
lhs
->
digôs
-
adju°
)>
ªqdigôs
) {

5909 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5913 i‡(
adju°
>0) {

5916 
decC⁄ãxt
 
w‹k£t
;

5917 
w‹k£t
=*
£t
;

5918 
w‹k£t
.
digôs
=
lhs
->digôs-
adju°
;

5920 
	`decC›yFô
(
ªs
, 
lhs
, &
w‹k£t
, &
ªsidue
, 
°©us
);

5921 
	`decAµlyRound
(
ªs
, &
w‹k£t
, 
ªsidue
, 
°©us
);

5922 
ªsidue
=0;

5925 i‡(
ªs
->
exp⁄ít
>
ªqexp
) {

5928 i‡(
ªs
->
digôs
==
ªqdigôs
) {

5929 *
°©us
&=~(
DEC_I√xa˘
 | 
DEC_Rounded
);

5930 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5933 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digits, 1);

5934 
ªs
->
exp⁄ít
--;

5936 #i‡
DECSUBSET


5937 i‡(
	`ISZERO
(
ªs
Ë&& !
£t
->
exãnded
Ëªs->
bôs
=0;

5944 
	`decNumbîC›y
(
ªs
, 
lhs
);

5946 i‡(
adju°
<0) {

5947 
ªs
->
digôs
=
	`decShi·ToMo°
‘es->
lsu
,Ñes->digôs, -
adju°
);

5948 
ªs
->
exp⁄ít
+=
adju°
;

5955 i‡(
ªs
->
exp⁄ít
>
£t
->
emax
-ªs->
digôs
+1) {

5956 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

5960 
	`decFöÆize
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

5961 *
°©us
&=~
DEC_UndîÊow
;

5965 #i‡
DECSUBSET


5966 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

5967 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

5969  
ªs
;

6002 
decNumbî
 * 
	`decCom∑ªOp
(decNumbî *
ªs
, c⁄° decNumbî *
lhs
,

6003 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

6004 
Fœg
 
›
, 
uI¡
 *
°©us
) {

6005 #i‡
DECSUBSET


6006 
decNumbî
 *
Ælo˛hs
=
NULL
;

6007 
decNumbî
 *
Ælo¸hs
=
NULL
;

6009 
I¡
 
ªsu…
=0;

6010 
uByã
 
mîged
;

6012 #i‡
DECCHECK


6013 i‡(
	`decCheckO≥ønds
(
ªs
, 
lhs
, 
rhs
, 
£t
)) Ñes;

6017 #i‡
DECSUBSET


6018 i‡(!
£t
->
exãnded
) {

6020 i‡(
lhs
->
digôs
>
£t
->digits) {

6021 
Ælo˛hs
=
	`decRoundO≥ønd
(
lhs
, 
£t
, 
°©us
);

6022 i‡(
Ælo˛hs
==
NULL
Ë{
ªsu…
=
BADINT
; ;}

6023 
lhs
=
Ælo˛hs
;

6025 i‡(
rhs
->
digôs
>
£t
->digits) {

6026 
Ælo¸hs
=
	`decRoundO≥ønd
(
rhs
, 
£t
, 
°©us
);

6027 i‡(
Ælo¸hs
==
NULL
Ë{
ªsu…
=
BADINT
; ;}

6028 
rhs
=
Ælo¸hs
;

6035 i‡(
›
==
COMPTOTAL
) {

6036 i‡(
	`decNumbîIsNeg©ive
(
lhs
Ë& !decNumbîIsNeg©ive(
rhs
)) {

6037 
ªsu…
=-1;

6040 i‡(!
	`decNumbîIsNeg©ive
(
lhs
Ë& decNumbîIsNeg©ive(
rhs
)) {

6041 
ªsu…
=+1;

6048 
mîged
=(
lhs
->
bôs
 | 
rhs
->bôsË& (
DECSNAN
 | 
DECNAN
);

6049 i‡(
mîged
) {

6050 i‡(
›
==
COMPARE
);

6051 i‡(
›
==
COMPSIG
)

6052 *
°©us
|=
DEC_InvÆid_›î©i⁄
 | 
DEC_sNaN
;

6053 i‡(
›
==
COMPTOTAL
) {

6056 i‡(!
	`decNumbîIsNaN
(
lhs
)Ë
ªsu…
=-1;

6057 i‡(!
	`decNumbîIsNaN
(
rhs
)Ë
ªsu…
=+1;

6059 i‡(
	`decNumbîIsSNaN
(
lhs
Ë&& 
	`decNumbîIsQNaN
(
rhs
)Ë
ªsu…
=-1;

6060 i‡(
	`decNumbîIsQNaN
(
lhs
Ë&& 
	`decNumbîIsSNaN
(
rhs
)Ë
ªsu…
=+1;

6063 
ªsu…
=
	`decUnôCom∑ª
(
lhs
->
lsu
, 
	`D2U
÷hs->
digôs
),

6064 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
), 0);

6067 i‡(
	`decNumbîIsNeg©ive
(
lhs
)Ë
ªsu…
=-result;

6071 i‡(
mîged
 & 
DECSNAN
);

6074 i‡(!
	`decNumbîIsNaN
(
lhs
Ë|| !decNumbîIsNaN(
rhs
)) {

6076 
›
=
COMPMAX
;

6077 i‡(
lhs
->
bôs
 & 
DECNAN
Ë
ªsu…
=-1;

6078 
ªsu…
=+1;

6082 
›
=
COMPNAN
;

6083 
	`decNaNs
(
ªs
, 
lhs
, 
rhs
, 
£t
, 
°©us
);

6087 i‡(
›
==
COMPMAXMAG
 || op==
COMPMINMAG
Ë
ªsu…
=
	`decCom∑ª
(
lhs
, 
rhs
, 1);

6088 
ªsu…
=
	`decCom∑ª
(
lhs
, 
rhs
, 0);

6091 i‡(
ªsu…
==
BADINT
Ë*
°©us
|=
DEC_Insufficõ¡_°‹age
;

6093 i‡(
›
==
COMPARE
 || op==
COMPSIG
 ||›==
COMPTOTAL
) {

6094 i‡(
›
==
COMPTOTAL
 && 
ªsu…
==0) {

6097 i‡(
lhs
->
exp⁄ít
!=
rhs
->exponent) {

6098 i‡(
lhs
->
exp⁄ít
<
rhs
->exp⁄ítË
ªsu…
=-1;

6099 
ªsu…
=+1;

6100 i‡(
	`decNumbîIsNeg©ive
(
lhs
)Ë
ªsu…
=-result;

6103 
	`decNumbîZîo
(
ªs
);

6104 i‡(
ªsu…
!=0) {

6105 *
ªs
->
lsu
=1;

6106 i‡(
ªsu…
<0Ë
ªs
->
bôs
=
DECNEG
;

6109 i‡(
›
==
COMPNAN
);

6111 
I¡
 
ªsidue
=0;

6113 c⁄° 
decNumbî
 *
choi˚
;

6114 i‡(
ªsu…
==0) {

6116 
uByã
 
¶hs
=(
lhs
->
bôs
 & 
DECNEG
);

6117 
uByã
 
§hs
=(
rhs
->
bôs
 & 
DECNEG
);

6118 #i‡
DECSUBSET


6119 i‡(!
£t
->
exãnded
) {

6120 
›
=
COMPMAX
;

6121 
ªsu…
=+1;

6125 i‡(
¶hs
!=
§hs
) {

6126 i‡(
¶hs
Ë
ªsu…
=-1;

6127 
ªsu…
=+1;

6129 i‡(
¶hs
 && 
§hs
) {

6130 i‡(
lhs
->
exp⁄ít
<
rhs
->exp⁄ítË
ªsu…
=+1;

6131 
ªsu…
=-1;

6135 i‡(
lhs
->
exp⁄ít
>
rhs
->exp⁄ítË
ªsu…
=+1;

6136 
ªsu…
=-1;

6141 i‡(
›
==
COMPMIN
 || op==
COMPMINMAG
Ë
ªsu…
=-result;

6142 
choi˚
=(
ªsu…
>0 ? 
lhs
 : 
rhs
);

6144 
	`decC›yFô
(
ªs
, 
choi˚
, 
£t
, &
ªsidue
, 
°©us
);

6145 
	`decFöish
(
ªs
, 
£t
, &
ªsidue
, 
°©us
);

6148 #i‡
DECSUBSET


6149 i‡(
Ælo¸hs
!=
NULL
Ë
	`‰ì
(allocrhs);

6150 i‡(
Ælo˛hs
!=
NULL
Ë
	`‰ì
(alloclhs);

6152  
ªs
;

6167 
I¡
 
	`decCom∑ª
(c⁄° 
decNumbî
 *
lhs
, c⁄° decNumbî *
rhs
,

6168 
Fœg
 
abs
) {

6169 
I¡
 
ªsu…
;

6170 
I¡
 
sigr
;

6171 
I¡
 
com∑ª
;

6173 
ªsu…
=1;

6174 i‡(
	`ISZERO
(
lhs
)Ë
ªsu…
=0;

6175 i‡(
abs
) {

6176 i‡(
	`ISZERO
(
rhs
)Ë 
ªsu…
;

6178 i‡(
ªsu…
==0)  -1;

6182 i‡(
ªsu…
 && 
	`decNumbîIsNeg©ive
(
lhs
))Ñesult=-1;

6183 
sigr
=1;

6184 i‡(
	`ISZERO
(
rhs
)Ë
sigr
=0;

6185 i‡(
	`decNumbîIsNeg©ive
(
rhs
)Ë
sigr
=-1;

6186 i‡(
ªsu…
 > 
sigr
)  +1;

6187 i‡(
ªsu…
 < 
sigr
)  -1;

6188 i‡(
ªsu…
==0)  0;

6192 i‡((
lhs
->
bôs
 | 
rhs
->bôsË& 
DECINF
) {

6193 i‡(
	`decNumbîIsInföôe
(
rhs
)) {

6194 i‡(
	`decNumbîIsInföôe
(
lhs
)Ë
ªsu…
=0;

6195 
ªsu…
=-result;

6197  
ªsu…
;

6200 i‡(
lhs
->
exp⁄ít
>
rhs
->exponent) {

6202 c⁄° 
decNumbî
 *
ãmp
=
lhs
;

6203 
lhs
=
rhs
;

6204 
rhs
=
ãmp
;

6205 
ªsu…
=-result;

6207 
com∑ª
=
	`decUnôCom∑ª
(
lhs
->
lsu
, 
	`D2U
÷hs->
digôs
),

6208 
rhs
->
lsu
, 
	`D2U
‘hs->
digôs
),

6209 
rhs
->
exp⁄ít
-
lhs
->exponent);

6210 i‡(
com∑ª
!=
BADINT
Ëcom∑ª*=
ªsu…
;

6211  
com∑ª
;

6231 
I¡
 
	`decUnôCom∑ª
(c⁄° 
Unô
 *
a
, I¡ 
Æígth
,

6232 c⁄° 
Unô
 *
b
, 
I¡
 
bÀngth
, I¡ 
exp
) {

6233 
Unô
 *
acc
;

6234 
Unô
 
accbuff
[
	`SD2U
(
DECBUFFER
*2+1)];

6235 
Unô
 *
Æloˇcc
=
NULL
;

6236 
I¡
 
accunôs
, 
√ed
;

6237 c⁄° 
Unô
 *
l
, *
r
, *
u
;

6238 
I¡
 
expunôs
, 
ex¥em
, 
ªsu…
;

6240 i‡(
exp
==0) {

6241 i‡(
Æígth
>
bÀngth
)  1;

6242 i‡(
Æígth
<
bÀngth
)  -1;

6244 
l
=
a
+
Æígth
-1;

6245 
r
=
b
+
Æígth
-1;

6246 ;
l
>=
a
;Ü--, 
r
--) {

6247 i‡(*
l
>*
r
)  1;

6248 i‡(*
l
<*
r
)  -1;

6255 i‡(
Æígth
>
bÀngth
+(
I¡
)
	`D2U
(
exp
))  1;

6256 i‡(
Æígth
+1<
bÀngth
+(
I¡
)
	`D2U
(
exp
))  -1;

6261 
√ed
=
bÀngth
+
	`D2U
(
exp
);

6262 i‡(
√ed
<
Æígth
)Çeed=alength;

6263 
√ed
+=2;

6264 
acc
=
accbuff
;

6265 i‡(
√ed
*(
Unô
)>(
accbuff
)) {

6266 
Æloˇcc
=(
Unô
 *)
	`mÆloc
(
√ed
*(Unit));

6267 i‡(
Æloˇcc
==
NULL
Ë 
BADINT
;

6268 
acc
=
Æloˇcc
;

6271 
expunôs
=
exp
/
DECDPUN
;

6272 
ex¥em
=
exp
%
DECDPUN
;

6274 
accunôs
=
	`decUnôAddSub
(
a
, 
Æígth
, 
b
, 
bÀngth
, 
expunôs
, 
acc
,

6275 -(
I¡
)
powîs
[
ex¥em
]);

6277 i‡(
accunôs
<0Ë
ªsu…
=-1;

6280 
u
=
acc
; u<acc+
accunôs
-1 && *u==0;) u++;

6281 
ªsu…
=(*
u
==0 ? 0 : +1);

6284 i‡(
Æloˇcc
!=
NULL
Ë
	`‰ì
(allocacc);

6285  
ªsu…
;

6335 
I¡
 
	`decUnôAddSub
(c⁄° 
Unô
 *
a
, I¡ 
Æígth
,

6336 c⁄° 
Unô
 *
b
, 
I¡
 
bÀngth
, I¡ 
bshi·
,

6337 
Unô
 *
c
, 
I¡
 
m
) {

6338 c⁄° 
Unô
 *
Æsu
=
a
;

6339 
Unô
 *
˛su
=
c
;

6340 
Unô
 *
möC
;

6341 
Unô
 *
maxC
;

6342 
eI¡
 
ˇºy
=0;

6343 
I¡
 
add
;

6344 #i‡
DECDPUN
<=4

6345 
I¡
 
e°
;

6348 #i‡
DECTRACE


6349 i‡(
Æígth
<1 || 
bÀngth
<1)

6350 
	`¥ötf
("decUnôAddSub:áÀ¿bÀ¿m %ld %ld [%ld]\n", 
Æígth
, 
bÀngth
, 
m
);

6353 
maxC
=
c
+
Æígth
;

6354 
möC
=
c
+
bÀngth
;

6355 i‡(
bshi·
!=0) {

6356 
möC
+=
bshi·
;

6358 i‡(
a
==
c
 && 
bshi·
<=
Æígth
) {

6359 
c
+=
bshi·
;

6360 
a
+=
bshi·
;

6362 ; 
c
<
˛su
+
bshi·
; 
a
++, c++) {

6363 i‡(
a
<
Æsu
+
Æígth
Ë*
c
=*a;

6364 *
c
=0;

6367 i‡(
möC
>
maxC
) {

6368 
Unô
 *
hﬁd
=
möC
;

6369 
möC
=
maxC
;

6370 
maxC
=
hﬁd
;

6377 ; 
c
<
möC
; c++) {

6378 
ˇºy
+=*
a
;

6379 
a
++;

6380 
ˇºy
+=((
eI¡
)*
b
)*
m
;

6381 
b
++;

6383 i‡((
ueI¡
)
ˇºy
<=
DECDPUNMAX
) {

6384 *
c
=(
Unô
)
ˇºy
;

6385 
ˇºy
=0;

6388 #i‡
DECDPUN
==4

6389 i‡(
ˇºy
>=0) {

6390 
e°
=(((
ueI¡
)
ˇºy
>>11)*53687)>>18;

6391 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6392 
ˇºy
=
e°
;

6393 i‡(*
c
<
DECDPUNMAX
+1) ;

6394 
ˇºy
++;

6395 *
c
-=
DECDPUNMAX
+1;

6399 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6400 
e°
=(((
ueI¡
)
ˇºy
>>11)*53687)>>18;

6401 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6402 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6403 i‡(*
c
<
DECDPUNMAX
+1) ;

6404 
ˇºy
++;

6405 *
c
-=
DECDPUNMAX
+1;

6406 #ñi‡
DECDPUN
==3

6407 i‡(
ˇºy
>=0) {

6408 
e°
=(((
ueI¡
)
ˇºy
>>3)*16777)>>21;

6409 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6410 
ˇºy
=
e°
;

6411 i‡(*
c
<
DECDPUNMAX
+1) ;

6412 
ˇºy
++;

6413 *
c
-=
DECDPUNMAX
+1;

6417 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6418 
e°
=(((
ueI¡
)
ˇºy
>>3)*16777)>>21;

6419 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6420 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6421 i‡(*
c
<
DECDPUNMAX
+1) ;

6422 
ˇºy
++;

6423 *
c
-=
DECDPUNMAX
+1;

6424 #ñi‡
DECDPUN
<=2

6426 i‡(
ˇºy
>=0) {

6427 
e°
=
	`QUOT10
(
ˇºy
, 
DECDPUN
);

6428 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6429 
ˇºy
=
e°
;

6433 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6434 
e°
=
	`QUOT10
(
ˇºy
, 
DECDPUN
);

6435 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6436 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6439 i‡((
ueI¡
)
ˇºy
<(
DECDPUNMAX
+1)*2) {

6440 *
c
=(
Unô
)(
ˇºy
-(
DECDPUNMAX
+1));

6441 
ˇºy
=1;

6444 i‡(
ˇºy
>=0) {

6445 *
c
=(
Unô
)(
ˇºy
%(
DECDPUNMAX
+1));

6446 
ˇºy
=ˇºy/(
DECDPUNMAX
+1);

6450 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6451 *
c
=(
Unô
)(
ˇºy
%(
DECDPUNMAX
+1));

6452 
ˇºy
=ˇºy/(
DECDPUNMAX
+1)-(DECDPUNMAX+1);

6458 i‡(
c
<
maxC
) ; c<maxC; c++) {

6459 i‡(
a
<
Æsu
+
Æígth
) {

6460 
ˇºy
+=*
a
;

6461 
a
++;

6464 
ˇºy
+=((
eI¡
)*
b
)*
m
;

6465 
b
++;

6469 i‡((
ueI¡
)
ˇºy
<=
DECDPUNMAX
) {

6470 *
c
=(
Unô
)
ˇºy
;

6471 
ˇºy
=0;

6475 #i‡
DECDPUN
==4

6476 i‡(
ˇºy
>=0) {

6477 
e°
=(((
ueI¡
)
ˇºy
>>11)*53687)>>18;

6478 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6479 
ˇºy
=
e°
;

6480 i‡(*
c
<
DECDPUNMAX
+1) ;

6481 
ˇºy
++;

6482 *
c
-=
DECDPUNMAX
+1;

6486 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6487 
e°
=(((
ueI¡
)
ˇºy
>>11)*53687)>>18;

6488 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6489 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6490 i‡(*
c
<
DECDPUNMAX
+1) ;

6491 
ˇºy
++;

6492 *
c
-=
DECDPUNMAX
+1;

6493 #ñi‡
DECDPUN
==3

6494 i‡(
ˇºy
>=0) {

6495 
e°
=(((
ueI¡
)
ˇºy
>>3)*16777)>>21;

6496 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6497 
ˇºy
=
e°
;

6498 i‡(*
c
<
DECDPUNMAX
+1) ;

6499 
ˇºy
++;

6500 *
c
-=
DECDPUNMAX
+1;

6504 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6505 
e°
=(((
ueI¡
)
ˇºy
>>3)*16777)>>21;

6506 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6507 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6508 i‡(*
c
<
DECDPUNMAX
+1) ;

6509 
ˇºy
++;

6510 *
c
-=
DECDPUNMAX
+1;

6511 #ñi‡
DECDPUN
<=2

6512 i‡(
ˇºy
>=0) {

6513 
e°
=
	`QUOT10
(
ˇºy
, 
DECDPUN
);

6514 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6515 
ˇºy
=
e°
;

6519 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6520 
e°
=
	`QUOT10
(
ˇºy
, 
DECDPUN
);

6521 *
c
=(
Unô
)(
ˇºy
-
e°
*(
DECDPUNMAX
+1));

6522 
ˇºy
=
e°
-(
DECDPUNMAX
+1);

6524 i‡((
ueI¡
)
ˇºy
<(
DECDPUNMAX
+1)*2){

6525 *
c
=(
Unô
)(
ˇºy
-(
DECDPUNMAX
+1));

6526 
ˇºy
=1;

6530 i‡(
ˇºy
>=0) {

6531 *
c
=(
Unô
)(
ˇºy
%(
DECDPUNMAX
+1));

6532 
ˇºy
=ˇºy/(
DECDPUNMAX
+1);

6536 
ˇºy
=ˇºy+(
eI¡
)(
DECDPUNMAX
+1)*(DECDPUNMAX+1);

6537 *
c
=(
Unô
)(
ˇºy
%(
DECDPUNMAX
+1));

6538 
ˇºy
=ˇºy/(
DECDPUNMAX
+1)-(DECDPUNMAX+1);

6544 i‡(
ˇºy
==0Ë 
c
-
˛su
;

6545 i‡(
ˇºy
>0) {

6546 *
c
=(
Unô
)
ˇºy
;

6547 
c
++;

6548  
c
-
˛su
;

6551 
add
=1;

6552 
c
=
˛su
; c<
maxC
; c++) {

6553 
add
=
DECDPUNMAX
+add-*
c
;

6554 i‡(
add
<=
DECDPUNMAX
) {

6555 *
c
=(
Unô
)
add
;

6556 
add
=0;

6559 *
c
=0;

6560 
add
=1;

6564 #i‡
DECTRACE


6565 
	`¥ötf
("UAS b‹row:ádd %ld, c¨ry %ld\n", 
add
, 
ˇºy
);

6567 i‡((
add
-
ˇºy
-1)!=0) {

6568 *
c
=(
Unô
)(
add
-
ˇºy
-1);

6569 
c
++;

6571  
˛su
-
c
;

6589 
decNumbî
 * 
	`decTrim
(decNumbî *
dn
, 
decC⁄ãxt
 *
£t
, 
Fœg
 
Æl
,

6590 
Fœg
 
no˛amp
, 
I¡
 *
dr›≥d
) {

6591 
I¡
 
d
, 
exp
;

6592 
uI¡
 
cut
;

6593 
Unô
 *
up
;

6595 #i‡
DECCHECK


6596 i‡(
	`decCheckO≥ønds
(
dn
, 
DECUNUSED
, DECUNUSED, 
DECUNCONT
))  dn;

6599 *
dr›≥d
=0;

6600 i‡((
dn
->
bôs
 & 
DECSPECIAL
)

6601 || (*
dn
->
lsu
 & 0x01))  dn;

6602 i‡(
	`ISZERO
(
dn
)) {

6603 
dn
->
exp⁄ít
=0;

6604  
dn
;

6608 
exp
=
dn
->
exp⁄ít
;

6609 
cut
=1;

6610 
up
=
dn
->
lsu
;

6611 
d
=0; d<
dn
->
digôs
-1; d++) {

6613 #i‡
DECDPUN
<=4

6614 
uI¡
 
quŸ
=
	`QUOT10
(*
up
, 
cut
);

6615 i‡((*
up
-
quŸ
*
powîs
[
cut
])!=0) ;

6617 i‡(*
up
%
powîs
[
cut
]!=0) ;

6620 i‡(!
Æl
) {

6622 i‡(
exp
<=0) {

6623 i‡(
exp
==0) ;

6624 
exp
++;

6627 
cut
++;

6628 i‡(
cut
>
DECDPUN
) {

6629 
up
++;

6630 
cut
=1;

6633 i‡(
d
==0Ë 
dn
;

6636 i‡(
£t
->
˛amp
 && !
no˛amp
) {

6637 
I¡
 
maxd
=
£t
->
emax
-£t->
digôs
+1-
dn
->
exp⁄ít
;

6638 i‡(
maxd
<=0Ë 
dn
;

6639 i‡(
d
>
maxd
) d=maxd;

6643 
	`decShi·ToLó°
(
dn
->
lsu
, 
	`D2U
(dn->
digôs
), 
d
);

6644 
dn
->
exp⁄ít
+=
d
;

6645 
dn
->
digôs
-=
d
;

6646 *
dr›≥d
=
d
;

6647  
dn
;

6660 
	`decRevî£
(
Unô
 *
ulo
, Unô *
uhi
) {

6661 
Unô
 
ãmp
;

6662 ; 
ulo
<
uhi
; ulo++, uhi--) {

6663 
ãmp
=*
ulo
;

6664 *
ulo
=*
uhi
;

6665 *
uhi
=
ãmp
;

6683 
I¡
 
	`decShi·ToMo°
(
Unô
 *
u¨
, I¡ 
digôs
, I¡ 
shi·
) {

6684 
Unô
 *
èrgë
, *
sour˚
, *
fú°
;

6685 
I¡
 
cut
;

6686 
uI¡
 
√xt
;

6688 i‡(
shi·
==0Ë 
digôs
;

6689 i‡((
digôs
+
shi·
)<=
DECDPUN
) {

6690 *
u¨
=(
Unô
)(*u¨*
powîs
[
shi·
]);

6691  
digôs
+
shi·
;

6694 
√xt
=0;

6695 
sour˚
=
u¨
+
	`D2U
(
digôs
)-1;

6696 
èrgë
=
sour˚
+
	`D2U
(
shi·
);

6697 
cut
=
DECDPUN
-
	`MSUDIGITS
(
shi·
);

6698 i‡(
cut
==0) {

6699 ; 
sour˚
>=
u¨
; sour˚--, 
èrgë
--) *target=*source;

6702 
fú°
=
u¨
+
	`D2U
(
digôs
+
shi·
)-1;

6703 ; 
sour˚
>=
u¨
; sour˚--, 
èrgë
--) {

6705 #i‡
DECDPUN
<=4

6706 
uI¡
 
quŸ
=
	`QUOT10
(*
sour˚
, 
cut
);

6707 
uI¡
 
ªm
=*
sour˚
-
quŸ
*
powîs
[
cut
];

6708 
√xt
+=
quŸ
;

6710 
uI¡
 
ªm
=*
sour˚
%
powîs
[
cut
];

6711 
√xt
+=*
sour˚
/
powîs
[
cut
];

6713 i‡(
èrgë
<=
fú°
Ë*èrgë=(
Unô
)
√xt
;

6714 
√xt
=
ªm
*
powîs
[
DECDPUN
-
cut
];

6719 ; 
èrgë
>=
u¨
;Åarget--) {

6720 *
èrgë
=(
Unô
)
√xt
;

6721 
√xt
=0;

6723  
digôs
+
shi·
;

6739 
I¡
 
	`decShi·ToLó°
(
Unô
 *
u¨
, I¡ 
unôs
, I¡ 
shi·
) {

6740 
Unô
 *
èrgë
, *
up
;

6741 
I¡
 
cut
, 
cou¡
;

6742 
I¡
 
quŸ
, 
ªm
;

6744 i‡(
shi·
==0Ë 
unôs
;

6745 i‡(
shi·
==
unôs
*
DECDPUN
) {

6746 *
u¨
=0;

6750 
èrgë
=
u¨
;

6751 
cut
=
	`MSUDIGITS
(
shi·
);

6752 i‡(
cut
==
DECDPUN
) {

6753 
up
=
u¨
+
	`D2U
(
shi·
);

6754 ; 
up
<
u¨
+
unôs
; 
èrgë
++, up++) *target=*up;

6755  
èrgë
-
u¨
;

6759 
up
=
u¨
+
	`D2U
(
shi·
-
cut
);

6760 
cou¡
=
unôs
*
DECDPUN
-
shi·
;

6761 #i‡
DECDPUN
<=4

6762 
quŸ
=
	`QUOT10
(*
up
, 
cut
);

6764 
quŸ
=*
up
/
powîs
[
cut
];

6766 ; ; 
èrgë
++) {

6767 *
èrgë
=(
Unô
)
quŸ
;

6768 
cou¡
-=(
DECDPUN
-
cut
);

6769 i‡(
cou¡
<=0) ;

6770 
up
++;

6771 
quŸ
=*
up
;

6772 #i‡
DECDPUN
<=4

6773 
quŸ
=
	`QUOT10
(quŸ, 
cut
);

6774 
ªm
=*
up
-
quŸ
*
powîs
[
cut
];

6776 
ªm
=
quŸ
%
powîs
[
cut
];

6777 
quŸ
=quŸ/
powîs
[
cut
];

6779 *
èrgë
=(
Unô
)(*èrgë+
ªm
*
powîs
[
DECDPUN
-
cut
]);

6780 
cou¡
-=
cut
;

6781 i‡(
cou¡
<=0) ;

6783  
èrgë
-
u¨
+1;

6786 #i‡
DECSUBSET


6805 
decNumbî
 *
	`decRoundO≥ønd
(c⁄° decNumbî *
dn
, 
decC⁄ãxt
 *
£t
,

6806 
uI¡
 *
°©us
) {

6807 
decNumbî
 *
ªs
;

6808 
uI¡
 
√w°©us
=0;

6809 
I¡
 
ªsidue
=0;

6813 
ªs
=(
decNumbî
 *)
	`mÆloc
((decNumber)

6814 +(
	`D2U
(
£t
->
digôs
)-1)*(
Unô
));

6815 i‡(
ªs
==
NULL
) {

6816 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

6817  
NULL
;

6819 
	`decC›yFô
(
ªs
, 
dn
, 
£t
, &
ªsidue
, &
√w°©us
);

6820 
	`decAµlyRound
(
ªs
, 
£t
, 
ªsidue
, &
√w°©us
);

6823 i‡(
√w°©us
 & 
DEC_I√xa˘
Ë√w°©us|=
DEC_Lo°_digôs
;

6824 *
°©us
|=
√w°©us
;

6825  
ªs
;

6841 
	`decC›yFô
(
decNumbî
 *
de°
, c⁄° decNumbî *
§c
,

6842 
decC⁄ãxt
 *
£t
, 
I¡
 *
ªsidue
, 
uI¡
 *
°©us
) {

6843 
de°
->
bôs
=
§c
->bits;

6844 
de°
->
exp⁄ít
=
§c
->exponent;

6845 
	`decSëC€ff
(
de°
, 
£t
, 
§c
->
lsu
, src->
digôs
, 
ªsidue
, 
°©us
);

6886 c⁄° 
uByã
 
ªsm≠
[10]={0, 3, 3, 3, 3, 5, 7, 7, 7, 7};

6887 
	`decSëC€ff
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, c⁄° 
Unô
 *
lsu
,

6888 
I¡
 
Àn
, I¡ *
ªsidue
, 
uI¡
 *
°©us
) {

6889 
I¡
 
disˇrd
;

6890 
uI¡
 
cut
;

6891 c⁄° 
Unô
 *
up
;

6892 
Unô
 *
èrgë
;

6893 
I¡
 
cou¡
;

6894 #i‡
DECDPUN
<=4

6895 
uI¡
 
ãmp
;

6898 
disˇrd
=
Àn
-
£t
->
digôs
;

6899 i‡(
disˇrd
<=0) {

6900 i‡(
dn
->
lsu
!=lsu) {

6902 
cou¡
=
Àn
;

6903 
up
=
lsu
;

6904 
èrgë
=
dn
->
lsu
; 
cou¡
>0;Å¨gë++, 
up
++, cou¡-=
DECDPUN
)

6905 *
èrgë
=*
up
;

6906 
dn
->
digôs
=
Àn
;

6909 i‡(*
ªsidue
!=0Ë*
°©us
|=(
DEC_I√xa˘
 | 
DEC_Rounded
);

6914 
dn
->
exp⁄ít
+=
disˇrd
;

6915 *
°©us
|=
DEC_Rounded
;

6916 i‡(*
ªsidue
>1) *residue=1;

6918 i‡(
disˇrd
>
Àn
) {

6921 i‡(*
ªsidue
<=0) {

6922 
cou¡
=
Àn
;

6923 
up
=
lsu
; 
cou¡
>0; up++, cou¡-=
DECDPUN
) if (*up!=0) {

6924 *
ªsidue
=1;

6928 i‡(*
ªsidue
!=0Ë*
°©us
|=
DEC_I√xa˘
;

6929 *
dn
->
lsu
=0;

6930 
dn
->
digôs
=1;

6940 
cou¡
=0;

6941 
up
=
lsu
;; up++) {

6942 
cou¡
+=
DECDPUN
;

6943 i‡(
cou¡
>=
disˇrd
) ;

6944 i‡(*
up
!=0Ë*
ªsidue
=1;

6948 
cut
=
disˇrd
-(
cou¡
-
DECDPUN
)-1;

6949 i‡(
cut
==
DECDPUN
-1) {

6950 
Unô
 
hÆf
=(Unô)
powîs
[
DECDPUN
]>>1;

6952 i‡(*
up
>=
hÆf
) {

6953 i‡(*
up
>
hÆf
Ë*
ªsidue
=7;

6954 *
ªsidue
+=5;

6957 i‡(*
up
!=0Ë*
ªsidue
=3;

6959 i‡(
£t
->
digôs
<=0) {

6960 *
dn
->
lsu
=0;

6961 
dn
->
digôs
=1;

6964 
cou¡
=
£t
->
digôs
;

6965 
dn
->
digôs
=
cou¡
;

6966 
up
++;

6968 
èrgë
=
dn
->
lsu
; 
cou¡
>0;Å¨gë++, 
up
++, cou¡-=
DECDPUN
)

6969 *
èrgë
=*
up
;

6974 
uI¡
 
disˇrd1
;

6975 
uI¡
 
quŸ
, 
ªm
;

6976 i‡(
cut
==0Ë
quŸ
=*
up
;

6978 #i‡
DECDPUN
<=4

6979 
quŸ
=
	`QUOT10
(*
up
, 
cut
);

6980 
ªm
=*
up
-
quŸ
*
powîs
[
cut
];

6982 
ªm
=*
up
%
powîs
[
cut
];

6983 
quŸ
=*
up
/
powîs
[
cut
];

6985 i‡(
ªm
!=0Ë*
ªsidue
=1;

6988 #i‡
DECDPUN
<=4

6989 
ãmp
=(
quŸ
*6554)>>16;

6991 
disˇrd1
=
quŸ
-
	`X10
(
ãmp
);

6992 
quŸ
=
ãmp
;

6994 
disˇrd1
=
quŸ
%10;

6995 
quŸ
=quot/10;

6999 *
ªsidue
+=
ªsm≠
[
disˇrd1
];

7000 
cut
++;

7004 i‡(
£t
->
digôs
<=0) {

7005 *
dn
->
lsu
=0;

7006 
dn
->
digôs
=1;

7009 
cou¡
=
£t
->
digôs
;

7010 
dn
->
digôs
=
cou¡
;

7012 
èrgë
=
dn
->
lsu
; ;Åarget++) {

7013 *
èrgë
=(
Unô
)
quŸ
;

7014 
cou¡
-=(
DECDPUN
-
cut
);

7015 i‡(
cou¡
<=0) ;

7016 
up
++;

7017 
quŸ
=*
up
;

7018 #i‡
DECDPUN
<=4

7019 
quŸ
=
	`QUOT10
(quŸ, 
cut
);

7020 
ªm
=*
up
-
quŸ
*
powîs
[
cut
];

7022 
ªm
=
quŸ
%
powîs
[
cut
];

7023 
quŸ
=quŸ/
powîs
[
cut
];

7025 *
èrgë
=(
Unô
)(*èrgë+
ªm
*
powîs
[
DECDPUN
-
cut
]);

7026 
cou¡
-=
cut
;

7027 i‡(
cou¡
<=0) ;

7032 i‡(*
ªsidue
!=0Ë*
°©us
|=
DEC_I√xa˘
;

7068 
	`decAµlyRound
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, 
I¡
 
ªsidue
,

7069 
uI¡
 *
°©us
) {

7070 
I¡
 
bump
;

7073 i‡(
ªsidue
==0) ;

7075 
bump
=0;

7078 
£t
->
round
) {

7079 
DEC_ROUND_05UP
: {

7085 
I¡
 
lsd5
=*
dn
->
lsu
%5;

7086 i‡(
ªsidue
<0 && 
lsd5
!=1Ë
bump
=-1;

7087 i‡(
ªsidue
>0 && 
lsd5
==0Ë
bump
=1;

7091 
DEC_ROUND_DOWN
: {

7093 i‡(
ªsidue
<0Ë
bump
=-1;

7096 
DEC_ROUND_HALF_DOWN
: {

7097 i‡(
ªsidue
>5Ë
bump
=1;

7100 
DEC_ROUND_HALF_EVEN
: {

7101 i‡(
ªsidue
>5Ë
bump
=1;

7102 i‡(
ªsidue
==5) {

7104 i‡(*
dn
->
lsu
 & 0x01Ë
bump
=1;

7108 
DEC_ROUND_HALF_UP
: {

7109 i‡(
ªsidue
>=5Ë
bump
=1;

7112 
DEC_ROUND_UP
: {

7113 i‡(
ªsidue
>0Ë
bump
=1;

7116 
DEC_ROUND_CEILING
: {

7119 i‡(
	`decNumbîIsNeg©ive
(
dn
)) {

7120 i‡(
ªsidue
<0Ë
bump
=-1;

7123 i‡(
ªsidue
>0Ë
bump
=1;

7127 
DEC_ROUND_FLOOR
: {

7130 i‡(!
	`decNumbîIsNeg©ive
(
dn
)) {

7131 i‡(
ªsidue
<0Ë
bump
=-1;

7134 i‡(
ªsidue
>0Ë
bump
=1;

7139 *
°©us
|=
DEC_InvÆid_c⁄ãxt
;

7140 #i‡
DECTRACE
 || (
DECCHECK
 && 
DECVERB
)

7141 
	`¥ötf
("Unknow¿roundög mode: %d\n", 
£t
->
round
);

7147 i‡(
bump
==0) ;

7154 i‡(
bump
>0) {

7155 
Unô
 *
up
;

7156 
uI¡
 
cou¡
=
dn
->
digôs
;

7157 
up
=
dn
->
lsu
; ; up++) {

7158 i‡(
cou¡
<=
DECDPUN
) {

7160 i‡(*
up
!=
powîs
[
cou¡
]-1) ;

7162 *
up
=(
Unô
)
powîs
[
cou¡
-1];

7163 
up
=up-1; up>=
dn
->
lsu
; up--) *up=0;

7164 
dn
->
exp⁄ít
++;

7166 i‡((
dn
->
exp⁄ít
+dn->
digôs
)>
£t
->
emax
+1) {

7167 
	`decSëOvîÊow
(
dn
, 
£t
, 
°©us
);

7172 i‡(*
up
!=
DECDPUNMAX
) ;

7173 
cou¡
-=
DECDPUN
;

7179 
Unô
 *
up
, *
sup
;

7180 
uI¡
 
cou¡
=
dn
->
digôs
;

7181 
up
=
dn
->
lsu
; ; up++) {

7182 i‡(
cou¡
<=
DECDPUN
) {

7184 i‡(*
up
!=
powîs
[
cou¡
-1]) ;

7186 
sup
=
up
;

7187 *
up
=(
Unô
)
powîs
[
cou¡
]-1;

7189 
up
=up-1; up>=
dn
->
lsu
; up--Ë*up=(
Unô
)
powîs
[
DECDPUN
]-1;

7190 
dn
->
exp⁄ít
--;

7197 i‡(
dn
->
exp⁄ít
+1==
£t
->
emö
-£t->
digôs
+1) {

7198 i‡(
cou¡
==1 && 
dn
->
digôs
==1Ë*
sup
=0;

7200 *
sup
=(
Unô
)
powîs
[
cou¡
-1]-1;

7201 
dn
->
digôs
--;

7203 
dn
->
exp⁄ít
++;

7204 *
°©us
|=
DEC_UndîÊow
 | 
DEC_Subn‹mÆ
 | 
DEC_I√xa˘
 | 
DEC_Rounded
;

7210 i‡(*
up
!=0) ;

7211 
cou¡
-=
DECDPUN
;

7217 
	`decUnôAddSub
(
dn
->
lsu
, 
	`D2U
(dn->
digôs
), 
u¨r⁄e
, 1, 0, dn->lsu, 
bump
);

7220 #i‡
DECSUBSET


7237 
	`decFöish
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, 
I¡
 *
ªsidue
,

7238 
uI¡
 *
°©us
) {

7239 i‡(!
£t
->
exãnded
) {

7240 
	`ISZERO
(
dn
) {

7241 
dn
->
exp⁄ít
=0;

7242 
dn
->
bôs
=0;

7245 i‡(
dn
->
exp⁄ít
>=0) {

7247 i‡(
£t
->
digôs
 >(
dn
->
exp⁄ít
+dn->digits)) {

7248 
dn
->
digôs
=
	`decShi·ToMo°
(dn->
lsu
, dn->digôs, dn->
exp⁄ít
);

7249 
dn
->
exp⁄ít
=0;

7254 
	`decFöÆize
(
dn
, 
£t
, 
ªsidue
, 
°©us
);

7272 
	`decFöÆize
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, 
I¡
 *
ªsidue
,

7273 
uI¡
 *
°©us
) {

7274 
I¡
 
shi·
;

7275 
I¡
 
töyexp
=
£t
->
emö
-
dn
->
digôs
+1;

7283 i‡(
dn
->
exp⁄ít
<=
töyexp
) {

7284 
I¡
 
comp
;

7285 
decNumbî
 
nmö
;

7287 i‡(
dn
->
exp⁄ít
<
töyexp
) {

7289 
	`decSëSubn‹mÆ
(
dn
, 
£t
, 
ªsidue
, 
°©us
);

7293 
	`decNumbîZîo
(&
nmö
);

7294 
nmö
.
lsu
[0]=1;

7295 
nmö
.
exp⁄ít
=
£t
->
emö
;

7296 
comp
=
	`decCom∑ª
(
dn
, &
nmö
, 1);

7297 i‡(
comp
==
BADINT
) {

7298 *
°©us
|=
DEC_Insufficõ¡_°‹age
;

7301 i‡(*
ªsidue
<0 && 
comp
==0) {

7302 
	`decAµlyRound
(
dn
, 
£t
, *
ªsidue
, 
°©us
);

7303 
	`decSëSubn‹mÆ
(
dn
, 
£t
, 
ªsidue
, 
°©us
);

7309 i‡(*
ªsidue
!=0Ë
	`decAµlyRound
(
dn
, 
£t
, *ªsidue, 
°©us
);

7312 i‡(
dn
->
exp⁄ít
<=
£t
->
emax
-£t->
digôs
+1) ;

7316 i‡(
dn
->
exp⁄ít
>
£t
->
emax
-dn->
digôs
+1) {

7317 
	`decSëOvîÊow
(
dn
, 
£t
, 
°©us
);

7321 i‡(!
£t
->
˛amp
) ;

7324 
shi·
=
dn
->
exp⁄ít
-(
£t
->
emax
-£t->
digôs
+1);

7327 i‡(!
	`ISZERO
(
dn
)) {

7328 
dn
->
digôs
=
	`decShi·ToMo°
(dn->
lsu
, dn->digôs, 
shi·
);

7330 
dn
->
exp⁄ít
-=
shi·
;

7331 *
°©us
|=
DEC_Cœm≥d
;

7346 
	`decSëOvîÊow
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, 
uI¡
 *
°©us
) {

7347 
Fœg
 
√edmax
=0;

7348 
uByã
 
sign
=
dn
->
bôs
&
DECNEG
;

7350 i‡(
	`ISZERO
(
dn
)) {

7351 
I¡
 
emax
=
£t
->emax;

7352 i‡(
£t
->
˛amp
Ë
emax
-=£t->
digôs
-1;

7353 i‡(
dn
->
exp⁄ít
>
emax
) {

7354 
dn
->
exp⁄ít
=
emax
;

7355 *
°©us
|=
DEC_Cœm≥d
;

7360 
	`decNumbîZîo
(
dn
);

7361 
£t
->
round
) {

7362 
DEC_ROUND_DOWN
: {

7363 
√edmax
=1;

7365 
DEC_ROUND_05UP
: {

7366 
√edmax
=1;

7368 
DEC_ROUND_CEILING
: {

7369 i‡(
sign
Ë
√edmax
=1;

7371 
DEC_ROUND_FLOOR
: {

7372 i‡(!
sign
Ë
√edmax
=1;

7376 i‡(
√edmax
) {

7377 
	`decSëMaxVÆue
(
dn
, 
£t
);

7378 
dn
->
bôs
=
sign
;

7380 
dn
->
bôs
=
sign
|
DECINF
;

7381 *
°©us
|=
DEC_OvîÊow
 | 
DEC_I√xa˘
 | 
DEC_Rounded
;

7392 
	`decSëMaxVÆue
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

7393 
Unô
 *
up
;

7394 
I¡
 
cou¡
=
£t
->
digôs
;

7395 
dn
->
digôs
=
cou¡
;

7397 
up
=
dn
->
lsu
; ; up++) {

7398 i‡(
cou¡
>
DECDPUN
Ë*
up
=
DECDPUNMAX
;

7400 *
up
=(
Unô
)(
powîs
[
cou¡
]-1);

7403 
cou¡
-=
DECDPUN
;

7405 
dn
->
bôs
=0;

7406 
dn
->
exp⁄ít
=
£t
->
emax
-£t->
digôs
+1;

7426 
	`decSëSubn‹mÆ
(
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
, 
I¡
 *
ªsidue
,

7427 
uI¡
 *
°©us
) {

7428 
decC⁄ãxt
 
w‹k£t
;

7429 
I¡
 
ëöy
, 
adju°
;

7431 #i‡
DECSUBSET


7433 i‡(!
£t
->
exãnded
) {

7434 
	`decNumbîZîo
(
dn
);

7436 *
°©us
|=
DEC_UndîÊow
 | 
DEC_Subn‹mÆ
 | 
DEC_I√xa˘
 | 
DEC_Rounded
;

7443 
ëöy
=
£t
->
emö
-(£t->
digôs
-1);

7445 
	`ISZERO
(
dn
) {

7447 #i‡
DECCHECK


7448 i‡(*
ªsidue
!=0) {

7449 
	`¥ötf
("++ Subn‹mÆ 0Ñesiduê%ld\n", (
LI
)*
ªsidue
);

7450 *
°©us
|=
DEC_InvÆid_›î©i⁄
;

7453 i‡(
dn
->
exp⁄ít
<
ëöy
) {

7454 
dn
->
exp⁄ít
=
ëöy
;

7455 *
°©us
|=
DEC_Cœm≥d
;

7460 *
°©us
|=
DEC_Subn‹mÆ
;

7461 
adju°
=
ëöy
-
dn
->
exp⁄ít
;

7462 i‡(
adju°
<=0) {

7466 i‡(*
°©us
&
DEC_I√xa˘
Ë*°©us|=
DEC_UndîÊow
;

7472 
w‹k£t
=*
£t
;

7473 
w‹k£t
.
digôs
=
dn
->digôs-
adju°
;

7474 
w‹k£t
.
emö
-=
adju°
;

7476 
	`decSëC€ff
(
dn
, &
w‹k£t
, dn->
lsu
, dn->
digôs
, 
ªsidue
, 
°©us
);

7477 
	`decAµlyRound
(
dn
, &
w‹k£t
, *
ªsidue
, 
°©us
);

7481 i‡(*
°©us
&
DEC_I√xa˘
Ë*°©us|=
DEC_UndîÊow
;

7485 i‡(
dn
->
exp⁄ít
>
ëöy
) {

7486 
dn
->
digôs
=
	`decShi·ToMo°
(dn->
lsu
, dn->digits, 1);

7487 
dn
->
exp⁄ít
--;

7491 i‡(
	`ISZERO
(
dn
)Ë*
°©us
|=
DEC_Cœm≥d
;

7512 
uI¡
 
	`decCheckM©h
(c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

7513 
uI¡
 *
°©us
) {

7514 
uI¡
 
ßve
=*
°©us
;

7515 i‡(
£t
->
digôs
>
DEC_MAX_MATH


7516 || 
£t
->
emax
>
DEC_MAX_MATH


7517 || -
£t
->
emö
>
DEC_MAX_MATH
Ë*
°©us
|=
DEC_InvÆid_c⁄ãxt
;

7518 i‡((
rhs
->
digôs
>
DEC_MAX_MATH


7519 || 
rhs
->
exp⁄ít
+rhs->
digôs
>
DEC_MAX_MATH
+1

7520 || 
rhs
->
exp⁄ít
+rhs->
digôs
<2*(1-
DEC_MAX_MATH
))

7521 && !
	`ISZERO
(
rhs
)Ë*
°©us
|=
DEC_InvÆid_›î©i⁄
;

7522  (*
°©us
!=
ßve
);

7540 
I¡
 
	`decGëI¡
(c⁄° 
decNumbî
 *
dn
) {

7541 
I¡
 
theI¡
;

7542 c⁄° 
Unô
 *
up
;

7543 
I¡
 
gŸ
;

7544 
I¡
 
ûígth
=
dn
->
digôs
+dn->
exp⁄ít
;

7545 
Fœg
 
√g
=
	`decNumbîIsNeg©ive
(
dn
);

7549 #i‡
DEC_MAX_EMAX
 > 999999999

7550 #îr‹ 
GëI¡
 
may
 
√ed
 
upd©ög
 [
Emax
]

7552 #i‡
DEC_MIN_EMIN
 < -999999999

7553 #îr‹ 
GëI¡
 
may
 
√ed
 
upd©ög
 [
Emö
]

7555 i‡(
	`ISZERO
(
dn
))  0;

7557 
up
=
dn
->
lsu
;

7558 
theI¡
=0;

7559 i‡(
dn
->
exp⁄ít
>=0) {

7561 
gŸ
=
dn
->
exp⁄ít
;

7564 
I¡
 
cou¡
=-
dn
->
exp⁄ít
;

7566 ; 
cou¡
>=
DECDPUN
; 
up
++) {

7567 i‡(*
up
!=0Ë 
BADINT
;

7568 
cou¡
-=
DECDPUN
;

7570 i‡(
cou¡
==0Ë
gŸ
=0;

7572 
I¡
 
ªm
;

7574 #i‡
DECDPUN
<=4

7575 
theI¡
=
	`QUOT10
(*
up
, 
cou¡
);

7576 
ªm
=*
up
-
theI¡
*
powîs
[
cou¡
];

7578 
ªm
=*
up
%
powîs
[
cou¡
];

7579 
theI¡
=*
up
/
powîs
[
cou¡
];

7581 i‡(
ªm
!=0Ë 
BADINT
;

7583 
gŸ
=
DECDPUN
-
cou¡
;

7584 
up
++;

7590 i‡(
gŸ
==0Ë{
theI¡
=*
up
; gŸ+=
DECDPUN
; up++;}

7592 i‡(
ûígth
<11) {

7593 
I¡
 
ßve
=
theI¡
;

7595 ; 
gŸ
<
ûígth
; 
up
++) {

7596 
theI¡
+=*
up
*
powîs
[
gŸ
];

7597 
gŸ
+=
DECDPUN
;

7599 i‡(
ûígth
==10) {

7600 i‡(
theI¡
/(
I¡
)
powîs
[
gŸ
-
DECDPUN
]!=(I¡)*(
up
-1)Ë
ûígth
=11;

7602 i‡(
√g
 && 
theI¡
>1999999997Ë
ûígth
=11;

7603 i‡(!
√g
 && 
theI¡
>999999999Ë
ûígth
=11;

7604 i‡(
ûígth
==11Ë
theI¡
=
ßve
;

7608 i‡(
ûígth
>10) {

7609 i‡(
theI¡
&1Ë 
BIGODD
;

7610  
BIGEVEN
;

7613 i‡(
√g
Ë
theI¡
=-theInt;

7614  
theI¡
;

7629 
decNumbî
 *
	`decDeˇp
(decNumbî *
dn
, 
I¡
 
dr›
) {

7630 
Unô
 *
msu
;

7631 
I¡
 
cut
;

7632 i‡(
dr›
>=
dn
->
digôs
) {

7633 #i‡
DECCHECK


7634 i‡(
dr›
>
dn
->
digôs
)

7635 
	`¥ötf
("decDecap called with drop>digits [%ld>%ld]\n",

7636 (
LI
)
dr›
, (LI)
dn
->
digôs
);

7638 
dn
->
lsu
[0]=0;

7639 
dn
->
digôs
=1;

7640  
dn
;

7642 
msu
=
dn
->
lsu
+
	`D2U
(dn->
digôs
-
dr›
)-1;

7643 
cut
=
	`MSUDIGITS
(
dn
->
digôs
-
dr›
);

7644 i‡(
cut
!=
DECDPUN
Ë*
msu
%=
powîs
[cut];

7646 
dn
->
digôs
=
	`decGëDigôs
(dn->
lsu
, 
msu
-dn->lsu+1);

7647  
dn
;

7665 
Fœg
 
	`decBiSå
(c⁄° *
èrg
, c⁄° *
°r1
, c⁄° *
°r2
) {

7666 ;;
èrg
++, 
°r1
++, 
°r2
++) {

7667 i‡(*
èrg
!=*
°r1
 && *èrg!=*
°r2
)  0;

7669 i‡(*
èrg
=='\0') ;

7688 
decNumbî
 * 
	`decNaNs
(decNumbî *
ªs
, c⁄° decNumbî *
lhs
,

7689 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
,

7690 
uI¡
 *
°©us
) {

7693 i‡(
lhs
->
bôs
 & 
DECSNAN
)

7694 *
°©us
|=
DEC_InvÆid_›î©i⁄
 | 
DEC_sNaN
;

7695 i‡(
rhs
==
NULL
);

7696 i‡(
rhs
->
bôs
 & 
DECSNAN
) {

7697 
lhs
=
rhs
;

7698 *
°©us
|=
DEC_InvÆid_›î©i⁄
 | 
DEC_sNaN
;

7700 i‡(
lhs
->
bôs
 & 
DECNAN
);

7701 
lhs
=
rhs
;

7704 i‡(
lhs
->
digôs
<=
£t
->digôsË
	`decNumbîC›y
(
ªs
,Ühs);

7706 c⁄° 
Unô
 *
ul
;

7707 
Unô
 *
ur
, *
uª•1
;

7709 
ªs
->
bôs
=
lhs
->bits;

7710 
uª•1
=
ªs
->
lsu
+
	`D2U
(
£t
->
digôs
);

7711 
ur
=
ªs
->
lsu
, 
ul
=
lhs
->lsu; ur<
uª•1
; ur++, ul++) *ur=*ul;

7712 
ªs
->
digôs
=
	`D2U
(
£t
->digôs)*
DECDPUN
;

7714 i‡(
ªs
->
digôs
>
£t
->digôsË
	`decDeˇp
(res,Ñes->digits-set->digits);

7717 
ªs
->
bôs
&=~
DECSNAN
;

7718 
ªs
->
bôs
|=
DECNAN
;

7719 
ªs
->
exp⁄ít
=0;

7721  
ªs
;

7739 
	`decSètus
(
decNumbî
 *
dn
, 
uI¡
 
°©us
, 
decC⁄ãxt
 *
£t
) {

7740 i‡(
°©us
 & 
DEC_NaNs
) {

7742 i‡(
°©us
 & 
DEC_sNaN
) status&=~DEC_sNaN;

7744 
	`decNumbîZîo
(
dn
);

7745 
dn
->
bôs
=
DECNAN
;

7748 
	`decC⁄ãxtSëSètus
(
£t
, 
°©us
);

7765 
I¡
 
	`decGëDigôs
(
Unô
 *
u¨
, I¡ 
Àn
) {

7766 
Unô
 *
up
=
u¨
+(
Àn
-1);

7767 
I¡
 
digôs
=(
Àn
-1)*
DECDPUN
+1;

7768 #i‡
DECDPUN
>4

7769 
uI¡
 c⁄° *
pow
;

7772 #i‡
DECCHECK


7773 i‡(
Àn
<1Ë
	`¥ötf
("decGëDigô†ˇŒed wôhÜí<1 [%ld]\n", (
LI
)len);

7776 ; 
up
>=
u¨
; up--) {

7777 i‡(*
up
==0) {

7778 i‡(
digôs
==1) ;

7779 
digôs
-=
DECDPUN
;

7782 #i‡
DECDPUN
>1

7783 i‡(*
up
<10) ;

7784 
digôs
++;

7785 #i‡
DECDPUN
>2

7786 i‡(*
up
<100) ;

7787 
digôs
++;

7788 #i‡
DECDPUN
>3

7789 i‡(*
up
<1000) ;

7790 
digôs
++;

7791 #i‡
DECDPUN
>4

7792 
pow
=&
powîs
[4]; *
up
>=*pow;Öow++Ë
digôs
++;

7799  
digôs
;

7802 #i‡
DECTRACE
 | 
DECCHECK


7811 
	`decNumbîShow
(c⁄° 
decNumbî
 *
dn
) {

7812 c⁄° 
Unô
 *
up
;

7813 
uI¡
 
u
, 
d
;

7814 
I¡
 
cut
;

7815 
isign
='+';

7816 i‡(
dn
==
NULL
) {

7817 
	`¥ötf
("NULL\n");

7819 i‡(
	`decNumbîIsNeg©ive
(
dn
)Ë
isign
='-';

7820 
	`¥ötf
(" >> %¯", 
isign
);

7821 i‡(
dn
->
bôs
&
DECSPECIAL
) {

7822 i‡(
	`decNumbîIsInföôe
(
dn
)Ë
	`¥ötf
("Infinity");

7824 i‡(
dn
->
bôs
&
DECSNAN
Ë
	`¥ötf
("sNaN");

7825 
	`¥ötf
("NaN");

7828 i‡(
dn
->
exp⁄ít
==0 && dn->
digôs
==1 && *dn->
lsu
==0) {

7829 
	`¥ötf
("\n");

7832 
	`¥ötf
(" ");

7836 
up
=
dn
->
lsu
+
	`D2U
(dn->
digôs
)-1;

7837 
	`¥ötf
("%ld", (
LI
)*
up
);

7838 
up
=up-1; up>=
dn
->
lsu
; up--) {

7839 
u
=*
up
;

7840 
	`¥ötf
(":");

7841 
cut
=
DECDPUN
-1; cut>=0; cut--) {

7842 
d
=
u
/
powîs
[
cut
];

7843 
u
-=
d
*
powîs
[
cut
];

7844 
	`¥ötf
("%ld", (
LI
)
d
);

7847 i‡(
dn
->
exp⁄ít
!=0) {

7848 
esign
='+';

7849 i‡(
dn
->
exp⁄ít
<0Ë
esign
='-';

7850 
	`¥ötf
(" E%c%ld", 
esign
, (
LI
)
	`abs
(
dn
->
exp⁄ít
));

7852 
	`¥ötf
(" [%ld]\n", (
LI
)
dn
->
digôs
);

7856 #i‡
DECTRACE
 || 
DECCHECK


7863 
	`decDumpAr
(
«me
, c⁄° 
Unô
 *
¨
, 
I¡
 
Àn
) {

7864 
I¡
 
i
;

7865 c⁄° *
•ec
;

7866 #i‡
DECDPUN
==9

7867 
•ec
="%09d ";

7868 #ñi‡
DECDPUN
==8

7869 
•ec
="%08d ";

7870 #ñi‡
DECDPUN
==7

7871 
•ec
="%07d ";

7872 #ñi‡
DECDPUN
==6

7873 
•ec
="%06d ";

7874 #ñi‡
DECDPUN
==5

7875 
•ec
="%05d ";

7876 #ñi‡
DECDPUN
==4

7877 
•ec
="%04d ";

7878 #ñi‡
DECDPUN
==3

7879 
•ec
="%03d ";

7880 #ñi‡
DECDPUN
==2

7881 
•ec
="%02d ";

7883 
•ec
="%d ";

7885 
	`¥ötf
(" :%c: ", 
«me
);

7886 
i
=
Àn
-1; i>=0; i--) {

7887 i‡(
i
==
Àn
-1Ë
	`¥ötf
("%ld ", (
LI
)
¨
[i]);

7888 
	`¥ötf
(
•ec
, 
¨
[
i
]);

7890 
	`¥ötf
("\n");

7894 #i‡
DECCHECK


7908 
Fœg
 
	`decCheckO≥ønds
(
decNumbî
 *
ªs
, c⁄° decNumbî *
lhs
,

7909 c⁄° 
decNumbî
 *
rhs
, 
decC⁄ãxt
 *
£t
) {

7910 
Fœg
 
bad
=0;

7911 i‡(
£t
==
NULL
) {

7912 #i‡
DECTRACE
 || 
DECVERB


7913 
	`¥ötf
("ReferenceÅo context is NULL.\n");

7915 
bad
=1;

7917 i‡(
£t
!=
DECUNCONT


7918 && (
£t
->
digôs
<1 || së->
round
>=
DEC_ROUND_MAX
)) {

7919 
bad
=1;

7920 #i‡
DECTRACE
 || 
DECVERB


7921 
	`¥ötf
("Bad context [digits=%ldÑound=%ld].\n",

7922 (
LI
)
£t
->
digôs
, (LI)£t->
round
);

7926 i‡(
ªs
==
NULL
) {

7927 
bad
=1;

7928 #i‡
DECTRACE


7930 
	`¥ötf
("ReferenceÅoÑesult is NULL.\n");

7933 i‡(!
bad
 && 
lhs
!=
DECUNUSED
Ëbad=(
	`decCheckNumbî
(lhs));

7934 i‡(!
bad
 && 
rhs
!=
DECUNUSED
Ëbad=(
	`decCheckNumbî
(rhs));

7936 i‡(
bad
) {

7937 i‡(
£t
!=
DECUNCONT
Ë
	`decC⁄ãxtSëSètus
(£t, 
DEC_InvÆid_›î©i⁄
);

7938 i‡(
ªs
!=
DECUNRESU
 &&Ñes!=
NULL
) {

7939 
	`decNumbîZîo
(
ªs
);

7940 
ªs
->
bôs
=
DECNAN
;

7943  
bad
;

7954 
Fœg
 
	`decCheckNumbî
(c⁄° 
decNumbî
 *
dn
) {

7955 c⁄° 
Unô
 *
up
;

7956 
uI¡
 
maxuöt
;

7957 
I¡
 
´
, 
d
, 
digôs
;

7958 
I¡
 
emö
, 
emax
;

7960 i‡(
dn
==
NULL
) {

7961 #i‡
DECTRACE


7963 
	`¥ötf
("ReferenceÅo decNumber is NULL.\n");

7968 i‡(
dn
->
bôs
 & 
DECSPECIAL
) {

7969 i‡(
dn
->
exp⁄ít
!=0) {

7970 #i‡
DECTRACE
 || 
DECVERB


7971 
	`¥ötf
("Exponent %ld (not 0) forá special value [%02x].\n",

7972 (
LI
)
dn
->
exp⁄ít
, dn->
bôs
);

7977 i‡(
	`decNumbîIsInföôe
(
dn
)) {

7978 i‡(
dn
->
digôs
!=1) {

7979 #i‡
DECTRACE
 || 
DECVERB


7980 
	`¥ötf
("Digô†%ld (nŸ 1Ëf‹á¿öföôy.\n", (
LI
)
dn
->
digôs
);

7983 i‡(*
dn
->
lsu
!=0) {

7984 #i‡
DECTRACE
 || 
DECVERB


7985 
	`¥ötf
("LSU %ld (nŸ 0Ëf‹á¿öföôy.\n", (
LI
)*
dn
->
lsu
);

7987 
	`decDumpAr
('I', 
dn
->
lsu
, 
	`D2U
(dn->
digôs
));

7996 i‡(
dn
->
digôs
<1 || dn->digôs>
DECNUMMAXP
) {

7997 #i‡
DECTRACE
 || 
DECVERB


7998 
	`¥ötf
("Digô†%ld i¿numbî.\n", (
LI
)
dn
->
digôs
);

8002 
d
=
dn
->
digôs
;

8004 
up
=
dn
->
lsu
; 
d
>0; up++) {

8005 i‡(
d
>
DECDPUN
Ë
maxuöt
=
DECDPUNMAX
;

8007 
maxuöt
=
powîs
[
d
]-1;

8008 i‡(
dn
->
digôs
>1 && *
up
<
powîs
[
d
-1]) {

8009 #i‡
DECTRACE
 || 
DECVERB


8010 
	`¥ötf
("Leading 0 inÇumber.\n");

8011 
	`decNumbîShow
(
dn
);

8015 i‡(*
up
>
maxuöt
) {

8016 #i‡
DECTRACE
 || 
DECVERB


8017 
	`¥ötf
("Bad Unit [%08lx] in %ld-digitÇumberát offset %ld [maxuint %ld].\n",

8018 (
LI
)*
up
, (LI)
dn
->
digôs
, (LI)(up-dn->
lsu
), (LI)
maxuöt
);

8021 
d
-=
DECDPUN
;

8027 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

8028 
emax
=
DECNUMMAXE
;

8029 
emö
=
DECNUMMINE
;

8030 
digôs
=
DECNUMMAXP
;

8031 i‡(
´
<
emö
-(
digôs
-1)) {

8032 #i‡
DECTRACE
 || 
DECVERB


8033 
	`¥ötf
("Adju°edÉxp⁄íàundîÊow [%ld].\n", (
LI
)
´
);

8034 
	`decNumbîShow
(
dn
);

8037 i‡(
´
>+
emax
) {

8038 #i‡
DECTRACE
 || 
DECVERB


8039 
	`¥ötf
("Adju°edÉxp⁄íàovîÊow [%ld].\n", (
LI
)
´
);

8040 
	`decNumbîShow
(
dn
);

8055 
	`decCheckI√xa˘
(c⁄° 
decNumbî
 *
dn
, 
decC⁄ãxt
 *
£t
) {

8056 #i‡!
DECSUBSET
 && 
DECEXTFLAG


8057 i‡((
£t
->
°©us
 & (
DEC_I√xa˘
|
DEC_Subn‹mÆ
))==DEC_Inexact

8058 && (
£t
->
digôs
!=
dn
->digôsË&& !(dn->
bôs
 & 
DECSPECIAL
)) {

8059 #i‡
DECTRACE
 || 
DECVERB


8060 
	`¥ötf
("Insufficient digits [%ld] onÇormal InexactÑesult.\n",

8061 (
LI
)
dn
->
digôs
);

8062 
	`decNumbîShow
(
dn
);

8064 
	`decC⁄ãxtSëSètus
(
£t
, 
DEC_InvÆid_›î©i⁄
);

8068 i‡(
dn
!=
NULL
 && dn->
digôs
==0Ë
£t
->
°©us
|=
DEC_InvÆid_›î©i⁄
;

8074 #i‡
DECALLOC


8075 #unde‡
mÆloc


8076 #unde‡
‰ì


8091 *
	`decMÆloc
(
size_t
 
n
) {

8092 
uI¡
 
size
=
n
+12;

8093 *
Æloc
;

8094 
uByã
 *
b
, *
b0
;

8095 
uI¡
 
uiw‹k
;

8097 
Æloc
=
	`mÆloc
(
size
);

8098 i‡(
Æloc
==
NULL
)  NULL;

8099 
b0
=(
uByã
 *)
Æloc
;

8100 
decAŒocByãs
+=
n
;

8101 
	`UBFROMUI
(
Æloc
, 
n
);

8103 
b
=
b0
+4; b<b0+8; b++Ë*b=
DECFENCE
;

8104 
b
=
b0
+
n
+8; b<b0+n+12; b++Ë*b=
DECFENCE
;

8105  
b0
+8;

8120 
	`decFªe
(*
Æloc
) {

8121 
uI¡
 
n
;

8122 
uByã
 *
b
, *
b0
;

8123 
uI¡
 
uiw‹k
;

8125 i‡(
Æloc
==
NULL
) ;

8126 
b0
=(
uByã
 *)
Æloc
;

8127 
b0
-=8;

8128 
n
=
	`UBTOUI
(
b0
);

8129 
b
=
b0
+4; b<b0+8; b++Ëi‡(*b!=
DECFENCE
)

8130 
	`¥ötf
("==C‹ru± byã [%02x]áàoff£à%d from %ld ===\n", *
b
,

8131 
b
-
b0
-8, (
LI
)b0);

8132 
b
=
b0
+
n
+8; b<b0+n+12; b++Ëi‡(*b!=
DECFENCE
)

8133 
	`¥ötf
("==C‹ru± byã [%02x]áàoff£à+%d from %ld,Ç=%ld ===\n", *
b
,

8134 
b
-
b0
-8, (
LI
)b0, (LI)
n
);

8135 
	`‰ì
(
b0
);

8136 
decAŒocByãs
-=
n
;

8139 
	#mÆloc
(
a
Ë
	`decMÆloc
◊)

	)

8140 
	#‰ì
(
a
Ë
	`decFªe
◊)

	)

	@src/decNumber/decNumber.h

20 #i‡!
deföed
(
DECNUMBER
)

21 
	#DECNUMBER


	)

22 
	#DECNAME
 "decNumbî"

	)

23 
	#DECFULLNAME
 "DecimÆ Numbî ModuÀ"

	)

24 
	#DECAUTHOR
 "MikêCowlishaw"

	)

26 #i‡!
deföed
(
DECCONTEXT
)

27 
	~"decC⁄ãxt.h
"

31 
	#DECNEG
 0x80

	)

32 
	#DECINF
 0x40

	)

33 
	#DECNAN
 0x20

	)

34 
	#DECSNAN
 0x10

	)

36 
	#DECSPECIAL
 (
DECINF
|
DECNAN
|
DECSNAN
Ë

	)

43 
	#DECDPUN
 3

	)

50 #i‡!
deföed
(
DECNUMDIGITS
)

51 
	#DECNUMDIGITS
 1

	)

56 #i‡ 
DECDPUN
<=2

57 
	#decNumbîUnô
 
uöt8_t


	)

58 #ñi‡
DECDPUN
<=4

59 
	#decNumbîUnô
 
uöt16_t


	)

61 
	#decNumbîUnô
 
uöt32_t


	)

64 
	#DECNUMUNITS
 ((
DECNUMDIGITS
+
DECDPUN
-1)/DECDPUN)

	)

68 
öt32_t
 
	mdigôs
;

69 
öt32_t
 
	mexp⁄ít
;

71 
uöt8_t
 
	mbôs
;

73 
decNumbîUnô
 
	mlsu
[
DECNUMUNITS
];

74 } 
	tdecNumbî
;

99 
decNumbî
 * 
decNumbîFromI¡32
(decNumbî *, 
öt32_t
);

100 
decNumbî
 * 
decNumbîFromUI¡32
(decNumbî *, 
uöt32_t
);

101 
decNumbî
 * 
decNumbîFromSåög
(decNumbî *, c⁄° *, 
decC⁄ãxt
 *);

102 * 
decNumbîToSåög
(c⁄° 
decNumbî
 *, *);

103 * 
decNumbîToEngSåög
(c⁄° 
decNumbî
 *, *);

104 
uöt32_t
 
decNumbîToUI¡32
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

105 
öt32_t
 
decNumbîToI¡32
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

106 
uöt8_t
 * 
decNumbîGëBCD
(c⁄° 
decNumbî
 *, uint8_t *);

107 
decNumbî
 * 
decNumbîSëBCD
(decNumbî *, c⁄° 
uöt8_t
 *, 
uöt32_t
);

110 
decNumbî
 * 
decNumbîAbs
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

111 
decNumbî
 * 
decNumbîAdd
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

112 
decNumbî
 * 
decNumbîAnd
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

113 
decNumbî
 * 
decNumbîCom∑ª
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

114 
decNumbî
 * 
decNumbîCom∑ªSig«l
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

115 
decNumbî
 * 
decNumbîCom∑ªTŸÆ
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

116 
decNumbî
 * 
decNumbîCom∑ªTŸÆMag
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

117 
decNumbî
 * 
decNumbîDivide
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

118 
decNumbî
 * 
decNumbîDivideI¡egî
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

119 
decNumbî
 * 
decNumbîExp
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

120 
decNumbî
 * 
decNumbîFMA
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

121 
decNumbî
 * 
decNumbîInvît
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

122 
decNumbî
 * 
decNumbîLn
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

123 
decNumbî
 * 
decNumbîLogB
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

124 
decNumbî
 * 
decNumbîLog10
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

125 
decNumbî
 * 
decNumbîMax
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

126 
decNumbî
 * 
decNumbîMaxMag
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

127 
decNumbî
 * 
decNumbîMö
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

128 
decNumbî
 * 
decNumbîMöMag
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

129 
decNumbî
 * 
decNumbîMöus
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

130 
decNumbî
 * 
decNumbîMu…ùly
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

131 
decNumbî
 * 
decNumbîN‹mÆize
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

132 
decNumbî
 * 
decNumbîOr
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

133 
decNumbî
 * 
decNumbîPlus
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

134 
decNumbî
 * 
decNumbîPowî
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

135 
decNumbî
 * 
decNumbîQu™tize
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

136 
decNumbî
 * 
decNumbîRedu˚
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

137 
decNumbî
 * 
decNumbîRemaödî
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

138 
decNumbî
 * 
decNumbîRemaödîNór
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

139 
decNumbî
 * 
decNumbîResˇÀ
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

140 
decNumbî
 * 
decNumbîRŸ©e
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

141 
decNumbî
 * 
decNumbîSameQu™tum
(decNumber *, const decNumber *, const decNumber *);

142 
decNumbî
 * 
decNumbîSˇÀB
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

143 
decNumbî
 * 
decNumbîShi·
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

144 
decNumbî
 * 
decNumbîSqu¨eRoŸ
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

145 
decNumbî
 * 
decNumbîSubåa˘
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

146 
decNumbî
 * 
decNumbîToI¡egølExa˘
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

147 
decNumbî
 * 
decNumbîToI¡egølVÆue
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

148 
decNumbî
 * 
decNumbîX‹
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

151 
decCœss
 
decNumbîCœss
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

152 c⁄° * 
decNumbîCœssToSåög
(
decCœss
);

153 
decNumbî
 * 
decNumbîC›y
(decNumber *, const decNumber *);

154 
decNumbî
 * 
decNumbîC›yAbs
(decNumber *, const decNumber *);

155 
decNumbî
 * 
decNumbîC›yNeg©e
(decNumber *, const decNumber *);

156 
decNumbî
 * 
decNumbîC›ySign
(decNumber *, const decNumber *, const decNumber *);

157 
decNumbî
 * 
decNumbîNextMöus
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

158 
decNumbî
 * 
decNumbîNextPlus
(decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

159 
decNumbî
 * 
decNumbîNextTow¨d
(decNumbî *, c⁄° decNumbî *, c⁄° decNumbî *, 
decC⁄ãxt
 *);

160 
decNumbî
 * 
decNumbîTrim
(decNumber *);

161 c⁄° * 
decNumbîVîsi⁄
();

162 
decNumbî
 * 
decNumbîZîo
(decNumber *);

165 
öt32_t
 
decNumbîIsN‹mÆ
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

166 
öt32_t
 
decNumbîIsSubn‹mÆ
(c⁄° 
decNumbî
 *, 
decC⁄ãxt
 *);

169 
	#decNumbîIsC™⁄iˇl
(
dn
Ë(1Ë

	)

170 
	#decNumbîIsFöôe
(
dn
Ë(((dn)->
bôs
&
DECSPECIAL
)==0)

	)

171 
	#decNumbîIsInföôe
(
dn
Ë(((dn)->
bôs
&
DECINF
)!=0)

	)

172 
	#decNumbîIsNaN
(
dn
Ë(((dn)->
bôs
&(
DECNAN
|
DECSNAN
))!=0)

	)

173 
	#decNumbîIsNeg©ive
(
dn
Ë(((dn)->
bôs
&
DECNEG
)!=0)

	)

174 
	#decNumbîIsQNaN
(
dn
Ë(((dn)->
bôs
&(
DECNAN
))!=0)

	)

175 
	#decNumbîIsSNaN
(
dn
Ë(((dn)->
bôs
&(
DECSNAN
))!=0)

	)

176 
	#decNumbîIsS≥cül
(
dn
Ë(((dn)->
bôs
&
DECSPECIAL
)!=0)

	)

177 
	#decNumbîIsZîo
(
dn
Ë(*(dn)->
lsu
==0 \

	)

178 && (
	gdn
)->
	gdigôs
==1 \

179 && (((
dn
)->
bôs
&
DECSPECIAL
)==0))

180 
	#decNumbîRadix
(
dn
Ë(10)

	)

	@src/decNumber/decNumberLocal.h

25 #i‡!
deföed
(
DECNUMBERLOC
)

26 
	#DECNUMBERLOC


	)

27 
	#DECVERSION
 "decNumbî 3.68"

	)

28 
	#DECNLAUTHOR
 "MikêCowlishaw"

	)

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

34 #i‡!
deföed
(
DECLITEND
)

35 
	#DECLITEND
 1

	)

39 #i‡!
deföed
(
DECUSE64
)

40 
	#DECUSE64
 1

	)

44 #i‡!
deföed
(
DECPRINT
)

45 
	#DECPRINT
 1

	)

49 #i‡!
deföed
(
DECCHECK
)

50 
	#DECCHECK
 0

	)

52 #i‡!
deföed
(
DECALLOC
)

53 
	#DECALLOC
 0

	)

55 #i‡!
deföed
(
DECTRACE
)

56 
	#DECTRACE
 0

	)

60 #i‡!
deföed
(
DECBUFFER
)

61 
	#DECBUFFER
 36

	)

71 #i‡
DECCHECK
 & !
DECPRINT


72 #îr‹ 
DECCHECK
 
√eds
 
DECPRINT
 
to
 
be
 
u£ful


74 #i‡
DECALLOC
 & !
DECPRINT


75 #îr‹ 
DECALLOC
 
√eds
 
DECPRINT
 
to
 
be
 
u£ful


77 #i‡
DECTRACE
 & !
DECPRINT


78 #îr‹ 
DECTRACE
 
√eds
 
DECPRINT
 
to
 
be
 
u£ful


87 
	#Fœg
 
uöt8_t


	)

88 
	#Byã
 
öt8_t


	)

89 
	#uByã
 
uöt8_t


	)

90 
	#Sh‹t
 
öt16_t


	)

91 
	#uSh‹t
 
uöt16_t


	)

92 
	#I¡
 
öt32_t


	)

93 
	#uI¡
 
uöt32_t


	)

94 
	#Unô
 
decNumbîUnô


	)

95 #i‡
DECUSE64


96 
	#L⁄g
 
öt64_t


	)

97 
	#uL⁄g
 
uöt64_t


	)

101 
	tLI
;

102 
	#DECNOINT
 0

	)

104 #i‡
DECNOINT


106 ?

	)

107 ??

	)

111 c⁄° 
uByã
 
DECSTICKYTAB
[10];

112 c⁄° 
uI¡
 
DECPOWERS
[10];

114 c⁄° 
uSh‹t
 
DPD2BIN
[1024];

115 c⁄° 
uSh‹t
 
BIN2DPD
[1000];

116 c⁄° 
uI¡
 
DPD2BINK
[1024];

117 c⁄° 
uI¡
 
DPD2BINM
[1024];

118 c⁄° 
uByã
 
DPD2BCD8
[4096];

119 c⁄° 
uByã
 
BIN2BCD8
[4000];

120 c⁄° 
uSh‹t
 
BCD2DPD
[2458];

127 
	#LONGMUL32HI
(
w
, 
u
, 
v
Ë{ \

	)

128 
uI¡
 
	gu0
, 
	gu1
, 
	gv0
, 
	gv1
, 
	gw0
, 
	gw1
, 
	gw2
, 
	gt
; \

129 
	gu0
=
u
 & 0xffff; 
	gu1
=u>>16; \

130 
	gv0
=
v
 & 0xffff; 
	gv1
=v>>16; \

131 
	gw0
=
u0
*
v0
; \

132 
	gt
=
u1
*
v0
 + (
w0
>>16); \

133 
	gw1
=
t
 & 0xffff; 
	gw2
=t>>16; \

134 
	gw1
=
u0
*
v1
 + 
w1
; \

135 (
	gw
)=
u1
*
v1
 + 
w2
 + (
w1
>>16);}

138 
	#ROUNDUP
(
i
, 
n
Ë((((i)+“)-1)/n)*n)

	)

139 
	#ROUNDUP4
(
i
Ë(((i)+3)&~3Ë

	)

142 
	#ROUNDDOWN
(
i
, 
n
Ë(((i)/n)*n)

	)

143 
	#ROUNDDOWN4
(
i
Ë((i)&~3Ë

	)

152 
	#UBTOUS
(
b
Ë(
	`mem˝y
((*)&
usw‹k
, b, 2), usw‹k)

	)

153 
	#UBTOUI
(
b
Ë(
	`mem˝y
((*)&
uiw‹k
, b, 4), uiw‹k)

	)

158 
	#UBFROMUS
(
b
, 
i
Ë(
usw‹k
=(i), 
	`mem˝y
(b, (*)&usw‹k, 2), usw‹k)

	)

159 
	#UBFROMUI
(
b
, 
i
Ë(
uiw‹k
=(i), 
	`mem˝y
(b, (*)&uiw‹k, 4), uiw‹k)

	)

163 
	#X10
(
i
Ë(((i)<<1)+((i)<<3))

	)

164 
	#X100
(
i
Ë(((i)<<2)+((i)<<5)+((i)<<6))

	)

167 
	#MAXI
(
x
,
y
Ë((x)<(y)?(y):(x))

	)

168 
	#MINI
(
x
,
y
Ë((x)>(y)?(y):(x))

	)

171 
	#BILLION
 1000000000

	)

173 
	#CHARMASK
 ((((((((
uI¡
)'0')<<8)+'0')<<8)+'0')<<8)+'0')

	)

182 
	#DECNUMMAXP
 999999999

	)

183 
	#DECNUMMAXE
 999999999

	)

184 
	#DECNUMMINE
 -999999999

	)

185 #i‡(
DECNUMMAXP
 !
DEC_MAX_DIGITS
)

186 #îr‹ 
Maximum
 
digôs
 
mism©ch


188 #i‡(
DECNUMMAXE
 !
DEC_MAX_EMAX
)

189 #îr‹ 
Maximum
 
exp⁄ít
 
mism©ch


191 #i‡(
DECNUMMINE
 !
DEC_MIN_EMIN
)

192 #îr‹ 
Möimum
 
exp⁄ít
 
mism©ch


197 #i‡ 
DECDPUN
==1

198 
	#DECDPUNMAX
 9

	)

199 
	#D2UTABLE
 {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17, \

	)

203 #ñi‡
DECDPUN
==2

204 
	#DECDPUNMAX
 99

	)

205 
	#D2UTABLE
 {0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10, \

	)

208 #ñi‡
DECDPUN
==3

209 
	#DECDPUNMAX
 999

	)

210 
	#D2UTABLE
 {0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7, \

	)

213 #ñi‡
DECDPUN
==4

214 
	#DECDPUNMAX
 9999

	)

215 
	#D2UTABLE
 {0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6, \

	)

218 #ñi‡
DECDPUN
==5

219 
	#DECDPUNMAX
 99999

	)

220 
	#D2UTABLE
 {0,1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5, \

	)

223 #ñi‡
DECDPUN
==6

224 
	#DECDPUNMAX
 999999

	)

225 
	#D2UTABLE
 {0,1,1,1,1,1,1,2,2,2,2,2,2,3,3,3,3,3,3,4,4,4, \

	)

228 #ñi‡
DECDPUN
==7

229 
	#DECDPUNMAX
 9999999

	)

230 
	#D2UTABLE
 {0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,3,3,3,3,3,3,3, \

	)

233 #ñi‡
DECDPUN
==8

234 
	#DECDPUNMAX
 99999999

	)

235 
	#D2UTABLE
 {0,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3, \

	)

238 #ñi‡
DECDPUN
==9

239 
	#DECDPUNMAX
 999999999

	)

240 
	#D2UTABLE
 {0,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,3,3,3, \

	)

243 #ñi‡
deföed
(
DECDPUN
)

244 #îr‹ 
DECDPUN
 
mu°
 
be
 
ö
 
the
 
ønge
 1-9

249 
	#DECMAXD2U
 49

	)

250 c⁄° 
uByã
 
d2uèbÀ
[
DECMAXD2U
+1];

255 
	#ISZERO
(
dn
Ë
	`decNumbîIsZîo
(dnË

	)

259 #i‡
DECDPUN
==8

260 
	#D2U
(
d
Ë(()((d)<=
DECMAXD2U
?
d2uèbÀ
[d]:((d)+7)>>3))

	)

261 #ñi‡
DECDPUN
==4

262 
	#D2U
(
d
Ë(()((d)<=
DECMAXD2U
?
d2uèbÀ
[d]:((d)+3)>>2))

	)

264 
	#D2U
(
d
Ë((d)<=
DECMAXD2U
?
d2uèbÀ
[d]:((d)+
DECDPUN
-1)/DECDPUN)

	)

267 
	#SD2U
(
d
Ë(((d)+
DECDPUN
-1)/DECDPUN)

	)

271 
	#MSUDIGITS
(
d
Ë((d)-(
	`D2U
(d)-1)*
DECDPUN
)

	)

278 
	#D2N
(
d
Ë\

	)

279 ((((
SD2U
(
d
)-1)*(
	gUnô
))+(
	gdecNumbî
)*2-1)/(
decNumbî
))

288 
	#TODIGIT
(
u
, 
cut
, 
c
, 
pow
Ë{ \

	)

289 *(
c
)='0'; \

290 
pow
=
DECPOWERS
[
cut
]*2; \

291 i‡((
u
)>
pow
) { \

292 
pow
*=4; \

293 i‡((
u
)>=
pow
Ë{(u)-ıow; *(
c
)+=8;} \

294 
pow
/=2; \

295 i‡((
u
)>=
pow
Ë{(u)-ıow; *(
c
)+=4;} \

296 
pow
/=2; \

298 i‡((
u
)>=
pow
Ë{(u)-ıow; *(
c
)+=2;} \

299 
pow
/=2; \

300 i‡((
u
)>=
pow
Ë{(u)-ıow; *(
c
)+=1;} \

301 
	}
}

311 
uByã
 *
	mmsd
;

312 
uByã
 *
	mlsd
;

313 
uI¡
 
	msign
;

314 
I¡
 
	mexp⁄ít
;

316 } 
	tbcdnum
;

319 
	#EXPISSPECIAL
(
exp
Ë(”xp)>=
DECFLOAT_MöSp
)

	)

320 
	#EXPISINF
(
exp
Ë”xp==
DECFLOAT_Inf
)

	)

321 
	#EXPISNAN
(
exp
Ë”xp==
DECFLOAT_qNaN
 ||Éxp==
DECFLOAT_sNaN
)

	)

322 
	#NUMISSPECIAL
(
num
Ë(
	`EXPISSPECIAL
(“um)->
exp⁄ít
))

	)

328 
	#DECWORDS
 (
DECBYTES
/4)

	)

329 
	#DECWWORDS
 (
DECWBYTES
/4)

	)

330 #i‡
DECLITEND


331 
	#DFBYTE
(
df
, 
off
Ë((df)->
byãs
[
DECBYTES
-1-(off)])

	)

332 
	#DFWORD
(
df
, 
off
Ë((df)->
w‹ds
[
DECWORDS
-1-(off)])

	)

333 
	#DFWWORD
(
dfw
, 
off
Ë((dfw)->
w‹ds
[
DECWWORDS
-1-(off)])

	)

335 
	#DFBYTE
(
df
, 
off
Ë((df)->
byãs
[off])

	)

336 
	#DFWORD
(
df
, 
off
Ë((df)->
w‹ds
[off])

	)

337 
	#DFWWORD
(
dfw
, 
off
Ë((dfw)->
w‹ds
[off])

	)

341 
	#DFISSIGNED
(
df
Ë((
	`DFWORD
(df, 0)&0x80000000)!=0)

	)

342 
	#DFISSPECIAL
(
df
Ë((
	`DFWORD
(df, 0)&0x78000000)==0x78000000)

	)

343 
	#DFISINF
(
df
Ë((
	`DFWORD
(df, 0)&0x7c000000)==0x78000000)

	)

344 
	#DFISNAN
(
df
Ë((
	`DFWORD
(df, 0)&0x7c000000)==0x7c000000)

	)

345 
	#DFISQNAN
(
df
Ë((
	`DFWORD
(df, 0)&0x7e000000)==0x7c000000)

	)

346 
	#DFISSNAN
(
df
Ë((
	`DFWORD
(df, 0)&0x7e000000)==0x7e000000)

	)

349 c⁄° 
uI¡
 
DECCOMBMSD
[64];

350 c⁄° 
uI¡
 
DECCOMBFROM
[48];

353 #i‡
DECCHECK
 || 
DECTRACE


354 
decShowNum
(c⁄° 
bcdnum
 *, const *);

358 #i‡
deföed
(
DECPMAX
)

361 
	#DECPMAX9
 (
	`ROUNDUP
(
DECPMAX
, 9)/9Ë

	)

363 
	#SINGLEZERO
 0x22500000

	)

364 
	#DOUBLEZERO
 0x22380000

	)

365 
	#QUADZERO
 0x22080000

	)

383 #i‡
DECPMAX
==7

384 
	#ZEROWORD
 
SINGLEZERO


	)

386 
	#DFISZERO
(
df
Ë((
	`DFWORD
(df, 0)&0x1c0fffff)==0 \

	)

387 && (
DFWORD
(
df
, 0)&0x60000000)!=0x60000000)

388 #ñi‡
DECPMAX
==16

389 
	#ZEROWORD
 
DOUBLEZERO


	)

390 
	#DFISZERO
(
df
Ë((
	`DFWORD
(df, 1)==0 \

	)

391 && (
DFWORD
(
df
, 0)&0x1c03ffff)==0 \

392 && (
DFWORD
(
df
, 0)&0x60000000)!=0x60000000))

393 
	#DFISINT
(
df
Ë((
	`DFWORD
(df, 0)&0x63fc0000)==0x22380000 \

	)

394 ||(
DFWORD
(
df
, 0)&0x7bfc0000)==0x6a380000)

395 
	#DFISUINT01
(
df
Ë((
	`DFWORD
(df, 0)&0xfbfc0000)==0x22380000)

	)

396 
	#DFISCCZERO
(
df
Ë(
	`DFWORD
(df, 1)==0 \

	)

397 && (
DFWORD
(
df
, 0)&0x0003ffff)==0)

398 
	#DFISCC01
(
df
Ë((
	`DFWORD
(df, 0)&~0xfffc9124)==0 \

	)

399 && (
DFWORD
(
df
, 1)&~0x49124491)==0)

400 #ñi‡
DECPMAX
==34

401 
	#ZEROWORD
 
QUADZERO


	)

402 
	#DFISZERO
(
df
Ë((
	`DFWORD
(df, 3)==0 \

	)

403 && 
DFWORD
(
df
, 2)==0 \

404 && 
DFWORD
(
df
, 1)==0 \

405 && (
DFWORD
(
df
, 0)&0x1c003fff)==0 \

406 && (
DFWORD
(
df
, 0)&0x60000000)!=0x60000000))

407 
	#DFISINT
(
df
Ë((
	`DFWORD
(df, 0)&0x63ffc000)==0x22080000 \

	)

408 ||(
DFWORD
(
df
, 0)&0x7bffc000)==0x6a080000)

409 
	#DFISUINT01
(
df
Ë((
	`DFWORD
(df, 0)&0xfbffc000)==0x22080000)

	)

410 
	#DFISCCZERO
(
df
Ë(
	`DFWORD
(df, 3)==0 \

	)

411 && 
DFWORD
(
df
, 2)==0 \

412 && 
DFWORD
(
df
, 1)==0 \

413 && (
DFWORD
(
df
, 0)&0x00003fff)==0)

415 
	#DFISCC01
(
df
Ë((
	`DFWORD
(df, 0)&~0xffffc912)==0 \

	)

416 && (
DFWORD
(
df
, 1)&~0x44912449)==0 \

417 && (
DFWORD
(
df
, 2)&~0x12449124)==0 \

418 && (
DFWORD
(
df
, 3)&~0x49124491)==0)

424 
	#CANONDPD
(
dpd
Ë(((dpd)&0x300)==0 || ((dpd)&0x6e)!=0x6e)

	)

426 
	#CANONDPDOFF
(
dpd
, 
k
Ë(((dpd)&(0x300<<(k)))==0 \

	)

427 || ((
	gdpd
)&(((
	guI¡
)0x6e)<<(
	gk
)))!=(((
uI¡
)0x6e)<<(
k
)))

430 
	#CANONDPDTWO
(
hi
, 
lo
, 
k
Ë(((hi)&(0x300>>(32-(k))))==0 \

	)

431 || ((
	ghi
)&(0x6e>>(32-(
	gk
))))!=(0x6e>>(32-(
k
))) \

432 || ((
lo
)&(((
uI¡
)0x6e)<<(
k
)))!=(((uInt)0x6e)<<(k)))

438 #i‡
DECPMAX
==7

439 
	#ISCOEFFZERO
(
u
Ë–\

	)

440 
UBTOUI
((
u
)+
DECPMAX
-4)==0 \

441 && 
UBTOUS
((
u
)+
DECPMAX
-6)==0 \

442 && *(
u
)==0)

443 #ñi‡
DECPMAX
==16

444 
	#ISCOEFFZERO
(
u
Ë–\

	)

445 
UBTOUI
((
u
)+
DECPMAX
-4)==0 \

446 && 
UBTOUI
((
u
)+
DECPMAX
-8)==0 \

447 && 
UBTOUI
((
u
)+
DECPMAX
-12)==0 \

448 && 
UBTOUI
(
u
)==0)

449 #ñi‡
DECPMAX
==34

450 
	#ISCOEFFZERO
(
u
Ë–\

	)

451 
UBTOUI
((
u
)+
DECPMAX
-4)==0 \

452 && 
UBTOUI
((
u
)+
DECPMAX
-8)==0 \

453 && 
UBTOUI
((
u
)+
DECPMAX
-12)==0 \

454 && 
UBTOUI
((
u
)+
DECPMAX
-16)==0 \

455 && 
UBTOUI
((
u
)+
DECPMAX
-20)==0 \

456 && 
UBTOUI
((
u
)+
DECPMAX
-24)==0 \

457 && 
UBTOUI
((
u
)+
DECPMAX
-28)==0 \

458 && 
UBTOUI
((
u
)+
DECPMAX
-32)==0 \

459 && 
UBTOUS
(
u
)==0)

464 
	#GETSIGN
(
df
Ë(
	`DFWORD
(df, 0)&0x80000000)

	)

466 
	#GETECON
(
df
Ë((
I¡
)((
	`DFWORD
((df), 0)&0x03ffffff)>>(32-6-
DECECONL
)))

	)

468 
	#GETWECON
(
df
Ë((
I¡
)((
	`DFWWORD
((df), 0)&0x03ffffff)>>(32-6-
DECWECONL
)))

	)

470 
	#GETEXP
(
df
Ë((
I¡
)(
DECCOMBEXP
[
	`DFWORD
((df), 0)>>26]+
	`GETECON
(df)))

	)

472 
	#GETEXPUN
(
df
Ë((
I¡
)
	`GETEXP
(df)-
DECBIAS
)

	)

474 
	#GETMSD
(
df
Ë(
DECCOMBMSD
[
	`DFWORD
((df), 0)>>26])

	)

478 
	#ECONMASK
 ((0x03ffffff>>(32-6-
DECECONL
))<<(32-6-DECECONL))

	)

480 
	#ECONNANMASK
 ((0x01ffffff>>(32-6-
DECECONL
))<<(32-6-DECECONL))

	)

490 
	#dpd2bcd8
(
u
, 
dpd
Ë
	`mem˝y
(u, &
DPD2BCD8
[((dpd)&0x3ff)*4], 4)

	)

491 
	#dpd2bcd83
(
u
, 
dpd
Ë
	`mem˝y
(u, &
DPD2BCD8
[((dpd)&0x3ff)*4], 3)

	)

507 #i‡
DECPMAX
==7

508 
	#GETCOEFF
(
df
, 
bcd
Ë{ \

	)

509 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

510 *(
	gbcd
)=(
uByã
)
DECCOMBMSD
[
sourhi
>>26]; \

511 
dpd2bcd8
(
bcd
+1, 
sourhi
>>10); \

512 
dpd2bcd83
(
bcd
+4, 
sourhi
);}

513 
	#GETWCOEFF
(
df
, 
bcd
Ë{ \

	)

514 
uI¡
 
	gsourhi
=
DFWWORD
(
df
, 0); \

515 
uI¡
 
	gsouæo
=
DFWWORD
(
df
, 1); \

516 *(
	gbcd
)=(
uByã
)
DECCOMBMSD
[
sourhi
>>26]; \

517 
dpd2bcd8
(
bcd
+1, 
sourhi
>>8); \

518 
dpd2bcd8
(
bcd
+4, (
sourhi
<<2Ë| (
souæo
>>30)); \

519 
dpd2bcd8
(
bcd
+7, 
souæo
>>20); \

520 
dpd2bcd8
(
bcd
+10, 
souæo
>>10); \

521 
dpd2bcd83
(
bcd
+13, 
souæo
);}

523 #ñi‡
DECPMAX
==16

524 
	#GETCOEFF
(
df
, 
bcd
Ë{ \

	)

525 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

526 
uI¡
 
	gsouæo
=
DFWORD
(
df
, 1); \

527 *(
	gbcd
)=(
uByã
)
DECCOMBMSD
[
sourhi
>>26]; \

528 
dpd2bcd8
(
bcd
+1, 
sourhi
>>8); \

529 
dpd2bcd8
(
bcd
+4, (
sourhi
<<2Ë| (
souæo
>>30)); \

530 
dpd2bcd8
(
bcd
+7, 
souæo
>>20); \

531 
dpd2bcd8
(
bcd
+10, 
souæo
>>10); \

532 
dpd2bcd83
(
bcd
+13, 
souæo
);}

533 
	#GETWCOEFF
(
df
, 
bcd
Ë{ \

	)

534 
uI¡
 
	gsourhi
=
DFWWORD
(
df
, 0); \

535 
uI¡
 
	gsourmh
=
DFWWORD
(
df
, 1); \

536 
uI¡
 
	gsourml
=
DFWWORD
(
df
, 2); \

537 
uI¡
 
	gsouæo
=
DFWWORD
(
df
, 3); \

538 *(
	gbcd
)=(
uByã
)
DECCOMBMSD
[
sourhi
>>26]; \

539 
dpd2bcd8
(
bcd
+1, 
sourhi
>>4); \

540 
dpd2bcd8
(
bcd
+4, ((
sourhi
)<<6Ë| (
sourmh
>>26)); \

541 
dpd2bcd8
(
bcd
+7, 
sourmh
>>16); \

542 
dpd2bcd8
(
bcd
+10, 
sourmh
>>6); \

543 
dpd2bcd8
(
bcd
+13, ((
sourmh
)<<4Ë| (
sourml
>>28)); \

544 
dpd2bcd8
(
bcd
+16, 
sourml
>>18); \

545 
dpd2bcd8
(
bcd
+19, 
sourml
>>8); \

546 
dpd2bcd8
(
bcd
+22, ((
sourml
)<<2Ë| (
souæo
>>30)); \

547 
dpd2bcd8
(
bcd
+25, 
souæo
>>20); \

548 
dpd2bcd8
(
bcd
+28, 
souæo
>>10); \

549 
dpd2bcd83
(
bcd
+31, 
souæo
);}

551 #ñi‡
DECPMAX
==34

552 
	#GETCOEFF
(
df
, 
bcd
Ë{ \

	)

553 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

554 
uI¡
 
	gsourmh
=
DFWORD
(
df
, 1); \

555 
uI¡
 
	gsourml
=
DFWORD
(
df
, 2); \

556 
uI¡
 
	gsouæo
=
DFWORD
(
df
, 3); \

557 *(
	gbcd
)=(
uByã
)
DECCOMBMSD
[
sourhi
>>26]; \

558 
dpd2bcd8
(
bcd
+1, 
sourhi
>>4); \

559 
dpd2bcd8
(
bcd
+4, ((
sourhi
)<<6Ë| (
sourmh
>>26)); \

560 
dpd2bcd8
(
bcd
+7, 
sourmh
>>16); \

561 
dpd2bcd8
(
bcd
+10, 
sourmh
>>6); \

562 
dpd2bcd8
(
bcd
+13, ((
sourmh
)<<4Ë| (
sourml
>>28)); \

563 
dpd2bcd8
(
bcd
+16, 
sourml
>>18); \

564 
dpd2bcd8
(
bcd
+19, 
sourml
>>8); \

565 
dpd2bcd8
(
bcd
+22, ((
sourml
)<<2Ë| (
souæo
>>30)); \

566 
dpd2bcd8
(
bcd
+25, 
souæo
>>20); \

567 
dpd2bcd8
(
bcd
+28, 
souæo
>>10); \

568 
dpd2bcd83
(
bcd
+31, 
souæo
);}

570 
	#GETWCOEFF
(
df
, 
bcd
Ë{??}

	)

583 
	#DPD2BIN0
 
DPD2BIN


	)

585 #i‡
DECPMAX
==7

586 
	#GETCOEFFBILL
(
df
, 
buf
Ë{ \

	)

587 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

588 (
	gbuf
)[0]=
DPD2BIN0
[
sourhi
&0x3ff] \

589 +
DPD2BINK
[(
sourhi
>>10)&0x3ff] \

590 +
DPD2BINM
[
DECCOMBMSD
[
sourhi
>>26]];}

592 #ñi‡
DECPMAX
==16

593 
	#GETCOEFFBILL
(
df
, 
buf
Ë{ \

	)

594 
uI¡
 
	gsourhi
, 
	gsouæo
; \

595 
	gsouæo
=
DFWORD
(
df
, 1); \

596 (
	gbuf
)[0]=
DPD2BIN0
[
souæo
&0x3ff] \

597 +
DPD2BINK
[(
souæo
>>10)&0x3ff] \

598 +
DPD2BINM
[(
souæo
>>20)&0x3ff]; \

599 
	gsourhi
=
DFWORD
(
df
, 0); \

600 (
	gbuf
)[1]=
DPD2BIN0
[((
sourhi
<<2Ë| (
souæo
>>30))&0x3ff] \

601 +
DPD2BINK
[(
sourhi
>>8)&0x3ff] \

602 +
DPD2BINM
[
DECCOMBMSD
[
sourhi
>>26]];}

604 #ñi‡
DECPMAX
==34

605 
	#GETCOEFFBILL
(
df
, 
buf
Ë{ \

	)

606 
uI¡
 
	gsourhi
, 
	gsourmh
, 
	gsourml
, 
	gsouæo
; \

607 
	gsouæo
=
DFWORD
(
df
, 3); \

608 (
	gbuf
)[0]=
DPD2BIN0
[
souæo
&0x3ff] \

609 +
DPD2BINK
[(
souæo
>>10)&0x3ff] \

610 +
DPD2BINM
[(
souæo
>>20)&0x3ff]; \

611 
	gsourml
=
DFWORD
(
df
, 2); \

612 (
	gbuf
)[1]=
DPD2BIN0
[((
sourml
<<2Ë| (
souæo
>>30))&0x3ff] \

613 +
DPD2BINK
[(
sourml
>>8)&0x3ff] \

614 +
DPD2BINM
[(
sourml
>>18)&0x3ff]; \

615 
	gsourmh
=
DFWORD
(
df
, 1); \

616 (
	gbuf
)[2]=
DPD2BIN0
[((
sourmh
<<4Ë| (
sourml
>>28))&0x3ff] \

617 +
DPD2BINK
[(
sourmh
>>6)&0x3ff] \

618 +
DPD2BINM
[(
sourmh
>>16)&0x3ff]; \

619 
	gsourhi
=
DFWORD
(
df
, 0); \

620 (
	gbuf
)[3]=
DPD2BIN0
[((
sourhi
<<6Ë| (
sourmh
>>26))&0x3ff] \

621 +
DPD2BINK
[(
sourhi
>>4)&0x3ff] \

622 +
DPD2BINM
[
DECCOMBMSD
[
sourhi
>>26]];}

632 #i‡
DECPMAX
==7

633 
	#GETCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

634 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

635 (
	gbuf
)[0]=
DPD2BIN
[
sourhi
&0x3ff]; \

636 (
	gbuf
)[1]=
DPD2BIN
[(
sourhi
>>10)&0x3ff]; \

637 (
	gbuf
)[2]=
DECCOMBMSD
[
sourhi
>>26];}

639 #ñi‡
DECPMAX
==16

640 
	#GETCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

641 
uI¡
 
	gsourhi
, 
	gsouæo
; \

642 
	gsouæo
=
DFWORD
(
df
, 1); \

643 (
	gbuf
)[0]=
DPD2BIN
[
souæo
&0x3ff]; \

644 (
	gbuf
)[1]=
DPD2BIN
[(
souæo
>>10)&0x3ff]; \

645 (
	gbuf
)[2]=
DPD2BIN
[(
souæo
>>20)&0x3ff]; \

646 
	gsourhi
=
DFWORD
(
df
, 0); \

647 (
	gbuf
)[3]=
DPD2BIN
[((
sourhi
<<2Ë| (
souæo
>>30))&0x3ff]; \

648 (
	gbuf
)[4]=
DPD2BIN
[(
sourhi
>>8)&0x3ff]; \

649 (
	gbuf
)[5]=
DECCOMBMSD
[
sourhi
>>26];}

651 #ñi‡
DECPMAX
==34

652 
	#GETCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

653 
uI¡
 
	gsourhi
, 
	gsourmh
, 
	gsourml
, 
	gsouæo
; \

654 
	gsouæo
=
DFWORD
(
df
, 3); \

655 (
	gbuf
)[0]=
DPD2BIN
[
souæo
&0x3ff]; \

656 (
	gbuf
)[1]=
DPD2BIN
[(
souæo
>>10)&0x3ff]; \

657 (
	gbuf
)[2]=
DPD2BIN
[(
souæo
>>20)&0x3ff]; \

658 
	gsourml
=
DFWORD
(
df
, 2); \

659 (
	gbuf
)[3]=
DPD2BIN
[((
sourml
<<2Ë| (
souæo
>>30))&0x3ff]; \

660 (
	gbuf
)[4]=
DPD2BIN
[(
sourml
>>8)&0x3ff]; \

661 (
	gbuf
)[5]=
DPD2BIN
[(
sourml
>>18)&0x3ff]; \

662 
	gsourmh
=
DFWORD
(
df
, 1); \

663 (
	gbuf
)[6]=
DPD2BIN
[((
sourmh
<<4Ë| (
sourml
>>28))&0x3ff]; \

664 (
	gbuf
)[7]=
DPD2BIN
[(
sourmh
>>6)&0x3ff]; \

665 (
	gbuf
)[8]=
DPD2BIN
[(
sourmh
>>16)&0x3ff]; \

666 
	gsourhi
=
DFWORD
(
df
, 0); \

667 (
	gbuf
)[9]=
DPD2BIN
[((
sourhi
<<6Ë| (
sourmh
>>26))&0x3ff]; \

668 (
	gbuf
)[10]=
DPD2BIN
[(
sourhi
>>4)&0x3ff]; \

669 (
	gbuf
)[11]=
DECCOMBMSD
[
sourhi
>>26];}

677 #i‡
DECPMAX
==7

678 
	#ADDCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

679 
uI¡
 
	gsourhi
=
DFWORD
(
df
, 0); \

680 (
	gbuf
)[0]+=
DPD2BIN
[
sourhi
&0x3ff]; \

681 i‡(
	gbuf
[0]>999) {buf[0]-=1000; buf[1]++;} \

682 (
	gbuf
)[1]+=
DPD2BIN
[(
sourhi
>>10)&0x3ff]; \

683 i‡(
	gbuf
[1]>999) {buf[1]-=1000; buf[2]++;} \

684 (
	gbuf
)[2]+=
DECCOMBMSD
[
sourhi
>>26];}

686 #ñi‡
DECPMAX
==16

687 
	#ADDCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

688 
uI¡
 
	gsourhi
, 
	gsouæo
; \

689 
	gsouæo
=
DFWORD
(
df
, 1); \

690 (
	gbuf
)[0]+=
DPD2BIN
[
souæo
&0x3ff]; \

691 i‡(
	gbuf
[0]>999) {buf[0]-=1000; buf[1]++;} \

692 (
	gbuf
)[1]+=
DPD2BIN
[(
souæo
>>10)&0x3ff]; \

693 i‡(
	gbuf
[1]>999) {buf[1]-=1000; buf[2]++;} \

694 (
	gbuf
)[2]+=
DPD2BIN
[(
souæo
>>20)&0x3ff]; \

695 i‡(
	gbuf
[2]>999) {buf[2]-=1000; buf[3]++;} \

696 
	gsourhi
=
DFWORD
(
df
, 0); \

697 (
	gbuf
)[3]+=
DPD2BIN
[((
sourhi
<<2Ë| (
souæo
>>30))&0x3ff]; \

698 i‡(
	gbuf
[3]>999) {buf[3]-=1000; buf[4]++;} \

699 (
	gbuf
)[4]+=
DPD2BIN
[(
sourhi
>>8)&0x3ff]; \

700 i‡(
	gbuf
[4]>999) {buf[4]-=1000; buf[5]++;} \

701 (
	gbuf
)[5]+=
DECCOMBMSD
[
sourhi
>>26];}

703 #ñi‡
DECPMAX
==34

704 
	#ADDCOEFFTHOU
(
df
, 
buf
Ë{ \

	)

705 
uI¡
 
	gsourhi
, 
	gsourmh
, 
	gsourml
, 
	gsouæo
; \

706 
	gsouæo
=
DFWORD
(
df
, 3); \

707 (
	gbuf
)[0]+=
DPD2BIN
[
souæo
&0x3ff]; \

708 i‡(
	gbuf
[0]>999) {buf[0]-=1000; buf[1]++;} \

709 (
	gbuf
)[1]+=
DPD2BIN
[(
souæo
>>10)&0x3ff]; \

710 i‡(
	gbuf
[1]>999) {buf[1]-=1000; buf[2]++;} \

711 (
	gbuf
)[2]+=
DPD2BIN
[(
souæo
>>20)&0x3ff]; \

712 i‡(
	gbuf
[2]>999) {buf[2]-=1000; buf[3]++;} \

713 
	gsourml
=
DFWORD
(
df
, 2); \

714 (
	gbuf
)[3]+=
DPD2BIN
[((
sourml
<<2Ë| (
souæo
>>30))&0x3ff]; \

715 i‡(
	gbuf
[3]>999) {buf[3]-=1000; buf[4]++;} \

716 (
	gbuf
)[4]+=
DPD2BIN
[(
sourml
>>8)&0x3ff]; \

717 i‡(
	gbuf
[4]>999) {buf[4]-=1000; buf[5]++;} \

718 (
	gbuf
)[5]+=
DPD2BIN
[(
sourml
>>18)&0x3ff]; \

719 i‡(
	gbuf
[5]>999) {buf[5]-=1000; buf[6]++;} \

720 
	gsourmh
=
DFWORD
(
df
, 1); \

721 (
	gbuf
)[6]+=
DPD2BIN
[((
sourmh
<<4Ë| (
sourml
>>28))&0x3ff]; \

722 i‡(
	gbuf
[6]>999) {buf[6]-=1000; buf[7]++;} \

723 (
	gbuf
)[7]+=
DPD2BIN
[(
sourmh
>>6)&0x3ff]; \

724 i‡(
	gbuf
[7]>999) {buf[7]-=1000; buf[8]++;} \

725 (
	gbuf
)[8]+=
DPD2BIN
[(
sourmh
>>16)&0x3ff]; \

726 i‡(
	gbuf
[8]>999) {buf[8]-=1000; buf[9]++;} \

727 
	gsourhi
=
DFWORD
(
df
, 0); \

728 (
	gbuf
)[9]+=
DPD2BIN
[((
sourhi
<<6Ë| (
sourmh
>>26))&0x3ff]; \

729 i‡(
	gbuf
[9]>999) {buf[9]-=1000; buf[10]++;} \

730 (
	gbuf
)[10]+=
DPD2BIN
[(
sourhi
>>4)&0x3ff]; \

731 i‡(
	gbuf
[10]>999) {buf[10]-=1000; buf[11]++;} \

732 (
	gbuf
)[11]+=
DECCOMBMSD
[
sourhi
>>26];}

737 #i‡
DECPMAX
==7

738 
	#DFSETNMAX
(
df
Ë\

	)

739 {
DFWORD
(
df
, 0)=0x77f3fcff;}

740 #ñi‡
DECPMAX
==16

741 
	#DFSETNMAX
(
df
Ë\

	)

742 {
DFWORD
(
df
, 0)=0x77fcff3f; \

743 
DFWORD
(
df
, 1)=0xcff3fcff;}

744 #ñi‡
DECPMAX
==34

745 
	#DFSETNMAX
(
df
Ë\

	)

746 {
DFWORD
(
df
, 0)=0x77ffcff3; \

747 
DFWORD
(
df
, 1)=0xfcff3fcf; \

748 
DFWORD
(
df
, 2)=0xf3fcff3f; \

749 
DFWORD
(
df
, 3)=0xcff3fcff;}

756 #îr‹ 
decNumbîLoˇl
 
ö˛uded
 
m‹e
 
th™
 
⁄˚


	@src/decNumber/decPacked.c

29 
	~<°rög.h
>

30 
	~"decNumbî.h
"

31 
	~"decPacked.h
"

32 
	~"decNumbîLoˇl.h
"

59 
uByã
 * 
	$decPackedFromNumbî
(
uByã
 *
bcd
, 
I¡
 
Àngth
, I¡ *
sˇÀ
,

60 c⁄° 
decNumbî
 *
dn
) {

61 c⁄° 
Unô
 *
up
=
dn
->
lsu
;

62 
uByã
 
obyã
, *
out
;

63 
I¡
 
ödigs
=
dn
->
digôs
;

64 
uI¡
 
cut
=
DECDPUN
;

65 
uI¡
 
u
=*
up
;

66 
uI¡
 
nib
;

67 #i‡
DECDPUN
<=4

68 
uI¡
 
ãmp
;

71 i‡(
dn
->
digôs
>
Àngth
*2-1

72 ||(
dn
->
bôs
 & 
DECSPECIAL
)Ë 
NULL
;

74 i‡(
dn
->
bôs
&
DECNEG
Ë
obyã
=
DECPMINUS
;

75 
obyã
=
DECPPLUS
;

76 *
sˇÀ
=-
dn
->
exp⁄ít
;

79 
out
=
bcd
+
Àngth
-1;

80 ; 
out
>=
bcd
; out--) {

81 i‡(
ödigs
>0) {

82 i‡(
cut
==0) {

83 
up
++;

84 
u
=*
up
;

85 
cut
=
DECDPUN
;

87 #i‡
DECDPUN
<=4

88 
ãmp
=(
u
*6554)>>16;

89 
nib
=
u
-
	`X10
(
ãmp
);

90 
u
=
ãmp
;

92 
nib
=
u
%10;

93 
u
=u/10;

95 
obyã
|=(
nib
<<4);

96 
ödigs
--;

97 
cut
--;

99 *
out
=
obyã
;

100 
obyã
=0;

101 i‡(
ödigs
>0) {

102 i‡(
cut
==0) {

103 
up
++;

104 
u
=*
up
;

105 
cut
=
DECDPUN
;

107 #i‡
DECDPUN
<=4

108 
ãmp
=(
u
*6554)>>16;

109 
obyã
=(
uByã
)(
u
-
	`X10
(
ãmp
));

110 
u
=
ãmp
;

112 
obyã
=(
uByã
)(
u
%10);

113 
u
=u/10;

115 
ödigs
--;

116 
cut
--;

120  
bcd
;

121 
	}
}

147 
decNumbî
 * 
	$decPackedToNumbî
(c⁄° 
uByã
 *
bcd
, 
I¡
 
Àngth
,

148 c⁄° 
I¡
 *
sˇÀ
, 
decNumbî
 *
dn
) {

149 c⁄° 
uByã
 *
œ°
=
bcd
+
Àngth
-1;

150 c⁄° 
uByã
 *
fú°
;

151 
uI¡
 
nib
;

152 
Unô
 *
up
=
dn
->
lsu
;

153 
I¡
 
digôs
;

154 
I¡
 
cut
=0;

156 
	`decNumbîZîo
(
dn
);

157 
œ°
=&
bcd
[
Àngth
-1];

158 
nib
=*
œ°
 & 0x0f;

159 i‡(
nib
==
DECPMINUS
 ||Çib==
DECPMINUSALT
Ë
dn
->
bôs
=
DECNEG
;

160 i‡(
nib
<=9Ë 
NULL
;

163 
fú°
=
bcd
; *first==0;) first++;

164 
digôs
=(
œ°
-
fú°
)*2+1;

165 i‡((*
fú°
 & 0xf0)==0Ë
digôs
--;

166 i‡(
digôs
!=0Ë
dn
->digits=digits;

170 
dn
->
exp⁄ít
=-*
sˇÀ
;

171 i‡(*
sˇÀ
>=0) {

172 i‡((
dn
->
digôs
-*
sˇÀ
-1)<-
DECNUMMAXE
) {

173 
	`decNumbîZîo
(
dn
);

174  
NULL
;}

178 i‡((*
sˇÀ
<-
DECNUMMAXE
)

179 || ((
dn
->
digôs
-*
sˇÀ
-1)>
DECNUMMAXE
)) {

180 
	`decNumbîZîo
(
dn
);

181  
NULL
;}

183 i‡(
digôs
==0Ë 
dn
;

189 
nib
=()(*
œ°
 & 0xf0)>>4;

191 i‡(
nib
>9Ë{
	`decNumbîZîo
(
dn
);  
NULL
;}

193 i‡(
cut
==0Ë*
up
=(
Unô
)
nib
;

194 *
up
=(
Unô
)(*up+
nib
*
DECPOWERS
[
cut
]);

195 
digôs
--;

196 i‡(
digôs
==0) ;

197 
cut
++;

198 i‡(
cut
==
DECDPUN
) {

199 
up
++;

200 
cut
=0;

202 
œ°
--;

203 
nib
=*
œ°
 & 0x0f;

204 i‡(
nib
>9Ë{
	`decNumbîZîo
(
dn
);  
NULL
;}

207 i‡(
cut
==0Ë*
up
=(
Unô
)
nib
;

208 *
up
=(
Unô
)(*up+
nib
*
DECPOWERS
[
cut
]);

209 
digôs
--;

210 i‡(
digôs
==0) ;

211 
cut
++;

212 i‡(
cut
==
DECDPUN
) {

213 
up
++;

214 
cut
=0;

218  
dn
;

219 
	}
}

	@src/decNumber/decPacked.h

20 #i‡!
deföed
(
DECPACKED
)

21 
	#DECPACKED


	)

22 
	#DECPNAME
 "decPacked"

	)

23 
	#DECPFULLNAME
 "Packed DecimÆ c⁄vîsi⁄s"

	)

24 
	#DECPAUTHOR
 "MikêCowlishaw"

	)

26 
	#DECPACKED_DefP
 32

	)

28 #i‚de‡ 
DECNUMDIGITS


29 
	#DECNUMDIGITS
 
DECPACKED_DefP


	)

31 
	~"decNumbî.h
"

34 #i‡!
deföed
(
DECPPLUSALT
)

35 
	#DECPPLUSALT
 0x0A

	)

36 
	#DECPMINUSALT
 0x0B

	)

37 
	#DECPPLUS
 0x0C

	)

38 
	#DECPMINUS
 0x0D

	)

39 
	#DECPPLUSALT2
 0x0E

	)

40 
	#DECPUNSIGNED
 0x0F

	)

47 
uöt8_t
 * 
decPackedFromNumbî
(uöt8_à*, 
öt32_t
, int32_t *,

48 c⁄° 
decNumbî
 *);

49 
decNumbî
 * 
decPackedToNumbî
(c⁄° 
uöt8_t
 *, 
öt32_t
, const int32_t *,

50 
decNumbî
 *);

	@src/decNumber/decQuad.c

24 
	#DECPMAX
 
DECQUAD_Pmax


	)

25 
	#DECEMIN
 
DECQUAD_Emö


	)

26 
	#DECEMAX
 
DECQUAD_Emax


	)

27 
	#DECEMAXD
 
DECQUAD_EmaxD


	)

28 
	#DECBYTES
 
DECQUAD_Byãs


	)

29 
	#DECSTRING
 
DECQUAD_Såög


	)

30 
	#DECECONL
 
DECQUAD_Ec⁄L


	)

31 
	#DECBIAS
 
DECQUAD_Büs


	)

32 
	#DECLETS
 
DECQUAD_De˛ës


	)

33 
	#DECQTINY
 (-
DECQUAD_Büs
)

	)

36 
	#decFlﬂt
 
decQuad


37 

	)

39 
	#decFlﬂtFromBCD
 
decQuadFromBCD


	)

40 
	#decFlﬂtFromI¡32
 
decQuadFromI¡32


	)

41 
	#decFlﬂtFromPacked
 
decQuadFromPacked


	)

42 
	#decFlﬂtFromPackedChecked
 
decQuadFromPackedChecked


	)

43 
	#decFlﬂtFromSåög
 
decQuadFromSåög


	)

44 
	#decFlﬂtFromUI¡32
 
decQuadFromUI¡32


	)

45 
	#decFlﬂtFromWidî
 
decQuadFromWidî


	)

46 
	#decFlﬂtGëC€fficõ¡
 
decQuadGëC€fficõ¡


	)

47 
	#decFlﬂtGëExp⁄ít
 
decQuadGëExp⁄ít


	)

48 
	#decFlﬂtSëC€fficõ¡
 
decQuadSëC€fficõ¡


	)

49 
	#decFlﬂtSëExp⁄ít
 
decQuadSëExp⁄ít


	)

50 
	#decFlﬂtShow
 
decQuadShow


	)

51 
	#decFlﬂtToBCD
 
decQuadToBCD


	)

52 
	#decFlﬂtToEngSåög
 
decQuadToEngSåög


	)

53 
	#decFlﬂtToI¡32
 
decQuadToI¡32


	)

54 
	#decFlﬂtToI¡32Exa˘
 
decQuadToI¡32Exa˘


	)

55 
	#decFlﬂtToPacked
 
decQuadToPacked


	)

56 
	#decFlﬂtToSåög
 
decQuadToSåög


	)

57 
	#decFlﬂtToUI¡32
 
decQuadToUI¡32


	)

58 
	#decFlﬂtToUI¡32Exa˘
 
decQuadToUI¡32Exa˘


	)

59 
	#decFlﬂtToWidî
 
decQuadToWidî


	)

60 
	#decFlﬂtZîo
 
decQuadZîo


	)

63 
	#decFlﬂtAbs
 
decQuadAbs


	)

64 
	#decFlﬂtAdd
 
decQuadAdd


	)

65 
	#decFlﬂtAnd
 
decQuadAnd


	)

66 
	#decFlﬂtDivide
 
decQuadDivide


	)

67 
	#decFlﬂtDivideI¡egî
 
decQuadDivideI¡egî


	)

68 
	#decFlﬂtFMA
 
decQuadFMA


	)

69 
	#decFlﬂtInvît
 
decQuadInvît


	)

70 
	#decFlﬂtLogB
 
decQuadLogB


	)

71 
	#decFlﬂtMax
 
decQuadMax


	)

72 
	#decFlﬂtMaxMag
 
decQuadMaxMag


	)

73 
	#decFlﬂtMö
 
decQuadMö


	)

74 
	#decFlﬂtMöMag
 
decQuadMöMag


	)

75 
	#decFlﬂtMöus
 
decQuadMöus


	)

76 
	#decFlﬂtMu…ùly
 
decQuadMu…ùly


	)

77 
	#decFlﬂtNextMöus
 
decQuadNextMöus


	)

78 
	#decFlﬂtNextPlus
 
decQuadNextPlus


	)

79 
	#decFlﬂtNextTow¨d
 
decQuadNextTow¨d


	)

80 
	#decFlﬂtOr
 
decQuadOr


	)

81 
	#decFlﬂtPlus
 
decQuadPlus


	)

82 
	#decFlﬂtQu™tize
 
decQuadQu™tize


	)

83 
	#decFlﬂtRedu˚
 
decQuadRedu˚


	)

84 
	#decFlﬂtRemaödî
 
decQuadRemaödî


	)

85 
	#decFlﬂtRemaödîNór
 
decQuadRemaödîNór


	)

86 
	#decFlﬂtRŸ©e
 
decQuadRŸ©e


	)

87 
	#decFlﬂtSˇÀB
 
decQuadSˇÀB


	)

88 
	#decFlﬂtShi·
 
decQuadShi·


	)

89 
	#decFlﬂtSubåa˘
 
decQuadSubåa˘


	)

90 
	#decFlﬂtToI¡egølVÆue
 
decQuadToI¡egølVÆue


	)

91 
	#decFlﬂtToI¡egølExa˘
 
decQuadToI¡egølExa˘


	)

92 
	#decFlﬂtX‹
 
decQuadX‹


	)

95 
	#decFlﬂtCom∑ª
 
decQuadCom∑ª


	)

96 
	#decFlﬂtCom∑ªSig«l
 
decQuadCom∑ªSig«l


	)

97 
	#decFlﬂtCom∑ªTŸÆ
 
decQuadCom∑ªTŸÆ


	)

98 
	#decFlﬂtCom∑ªTŸÆMag
 
decQuadCom∑ªTŸÆMag


	)

101 
	#decFlﬂtC™⁄iˇl
 
decQuadC™⁄iˇl


	)

102 
	#decFlﬂtC›y
 
decQuadC›y


	)

103 
	#decFlﬂtC›yAbs
 
decQuadC›yAbs


	)

104 
	#decFlﬂtC›yNeg©e
 
decQuadC›yNeg©e


	)

105 
	#decFlﬂtC›ySign
 
decQuadC›ySign


	)

108 
	#decFlﬂtCœss
 
decQuadCœss


	)

109 
	#decFlﬂtCœssSåög
 
decQuadCœssSåög


	)

110 
	#decFlﬂtDigôs
 
decQuadDigôs


	)

111 
	#decFlﬂtIsC™⁄iˇl
 
decQuadIsC™⁄iˇl


	)

112 
	#decFlﬂtIsFöôe
 
decQuadIsFöôe


	)

113 
	#decFlﬂtIsInföôe
 
decQuadIsInföôe


	)

114 
	#decFlﬂtIsI¡egî
 
decQuadIsI¡egî


	)

115 
	#decFlﬂtIsLogiˇl
 
decQuadIsLogiˇl


	)

116 
	#decFlﬂtIsNaN
 
decQuadIsNaN


	)

117 
	#decFlﬂtIsNeg©ive
 
decQuadIsNeg©ive


	)

118 
	#decFlﬂtIsN‹mÆ
 
decQuadIsN‹mÆ


	)

119 
	#decFlﬂtIsPosôive
 
decQuadIsPosôive


	)

120 
	#decFlﬂtIsSig«lög
 
decQuadIsSig«lög


	)

121 
	#decFlﬂtIsSig«Œög
 
decQuadIsSig«Œög


	)

122 
	#decFlﬂtIsSig√d
 
decQuadIsSig√d


	)

123 
	#decFlﬂtIsSubn‹mÆ
 
decQuadIsSubn‹mÆ


	)

124 
	#decFlﬂtIsZîo
 
decQuadIsZîo


	)

125 
	#decFlﬂtRadix
 
decQuadRadix


	)

126 
	#decFlﬂtSameQu™tum
 
decQuadSameQu™tum


	)

127 
	#decFlﬂtVîsi⁄
 
decQuadVîsi⁄


	)

130 
	~"decC⁄ãxt.h
"

131 
	~"decQuad.h
"

132 
	~"decNumbîLoˇl.h
"

133 
	~"decComm⁄.c
"

134 
	~"decBasic.c
"

	@src/decNumber/decQuad.h

22 #i‡!
deföed
(
DECQUAD
)

23 
	#DECQUAD


	)

25 
	#DECQUADNAME
 "decimÆQuad"

	)

26 
	#DECQUADTITLE
 "DecimÆ 128-bô d©um"

	)

27 
	#DECQUADAUTHOR
 "MikêCowlishaw"

	)

30 
	#DECQUAD_Byãs
 16

	)

31 
	#DECQUAD_Pmax
 34

	)

32 
	#DECQUAD_Emö
 -6143

	)

33 
	#DECQUAD_Emax
 6144

	)

34 
	#DECQUAD_EmaxD
 4

	)

35 
	#DECQUAD_Büs
 6176

	)

36 
	#DECQUAD_Såög
 43

	)

37 
	#DECQUAD_Ec⁄L
 12

	)

38 
	#DECQUAD_De˛ës
 11

	)

40 
	#DECQUAD_Ehigh
 (
DECQUAD_Emax
 + 
DECQUAD_Büs
 - (
DECQUAD_Pmax
-1))

	)

43 
	~"decC⁄ãxt.h
"

47 
uöt8_t
 
	mbyãs
[
DECQUAD_Byãs
];

48 
uöt16_t
 
	msh‹ts
[
DECQUAD_Byãs
/2];

49 
uöt32_t
 
	mw‹ds
[
DECQUAD_Byãs
/4];

50 #i‡
DECUSE64


51 
uöt64_t
 
	ml⁄gs
[
DECQUAD_Byãs
/8];

53 } 
	tdecQuad
;

61 
	#DECFLOAT_Sign
 0x80000000

	)

62 
	#DECFLOAT_NaN
 0x7c000000

	)

63 
	#DECFLOAT_qNaN
 0x7c000000

	)

64 
	#DECFLOAT_sNaN
 0x7e000000

	)

65 
	#DECFLOAT_Inf
 0x78000000

	)

66 
	#DECFLOAT_MöSp
 0x78000000

	)

69 #i‡!
deföed
(
DECPPLUSALT
)

70 
	#DECPPLUSALT
 0x0A

	)

71 
	#DECPMINUSALT
 0x0B

	)

72 
	#DECPPLUS
 0x0C

	)

73 
	#DECPMINUS
 0x0D

	)

74 
	#DECPPLUSALT2
 0x0E

	)

75 
	#DECPUNSIGNED
 0x0F

	)

83 
decQuad
 * 
decQuadFromBCD
(decQuad *, 
öt32_t
, c⁄° 
uöt8_t
 *, int32_t);

84 
decQuad
 * 
decQuadFromI¡32
(decQuad *, 
öt32_t
);

85 
decQuad
 * 
decQuadFromPacked
(decQuad *, 
öt32_t
, c⁄° 
uöt8_t
 *);

86 
decQuad
 * 
decQuadFromPackedChecked
(decQuad *, 
öt32_t
, c⁄° 
uöt8_t
 *);

87 
decQuad
 * 
decQuadFromSåög
(decQuad *, c⁄° *, 
decC⁄ãxt
 *);

88 
decQuad
 * 
decQuadFromUI¡32
(decQuad *, 
uöt32_t
);

89 
öt32_t
 
decQuadGëC€fficõ¡
(c⁄° 
decQuad
 *, 
uöt8_t
 *);

90 
öt32_t
 
decQuadGëExp⁄ít
(c⁄° 
decQuad
 *);

91 
decQuad
 * 
decQuadSëC€fficõ¡
(decQuad *, c⁄° 
uöt8_t
 *, 
öt32_t
);

92 
decQuad
 * 
decQuadSëExp⁄ít
(decQuad *, 
decC⁄ãxt
 *, 
öt32_t
);

93 
decQuadShow
(c⁄° 
decQuad
 *, const *);

94 
öt32_t
 
decQuadToBCD
(c⁄° 
decQuad
 *, i¡32_à*, 
uöt8_t
 *);

95 * 
decQuadToEngSåög
(c⁄° 
decQuad
 *, *);

96 
öt32_t
 
decQuadToI¡32
(c⁄° 
decQuad
 *, 
decC⁄ãxt
 *, 
roundög
);

97 
öt32_t
 
decQuadToI¡32Exa˘
(c⁄° 
decQuad
 *, 
decC⁄ãxt
 *, 
roundög
);

98 
öt32_t
 
decQuadToPacked
(c⁄° 
decQuad
 *, i¡32_à*, 
uöt8_t
 *);

99 * 
decQuadToSåög
(c⁄° 
decQuad
 *, *);

100 
uöt32_t
 
decQuadToUI¡32
(c⁄° 
decQuad
 *, 
decC⁄ãxt
 *, 
roundög
);

101 
uöt32_t
 
decQuadToUI¡32Exa˘
(c⁄° 
decQuad
 *, 
decC⁄ãxt
 *, 
roundög
);

102 
decQuad
 * 
decQuadZîo
(decQuad *);

105 
decQuad
 * 
decQuadAbs
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

106 
decQuad
 * 
decQuadAdd
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

107 
decQuad
 * 
decQuadAnd
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

108 
decQuad
 * 
decQuadDivide
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

109 
decQuad
 * 
decQuadDivideI¡egî
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

110 
decQuad
 * 
decQuadFMA
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

111 
decQuad
 * 
decQuadInvît
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

112 
decQuad
 * 
decQuadLogB
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

113 
decQuad
 * 
decQuadMax
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

114 
decQuad
 * 
decQuadMaxMag
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

115 
decQuad
 * 
decQuadMö
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

116 
decQuad
 * 
decQuadMöMag
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

117 
decQuad
 * 
decQuadMöus
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

118 
decQuad
 * 
decQuadMu…ùly
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

119 
decQuad
 * 
decQuadNextMöus
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

120 
decQuad
 * 
decQuadNextPlus
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

121 
decQuad
 * 
decQuadNextTow¨d
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

122 
decQuad
 * 
decQuadOr
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

123 
decQuad
 * 
decQuadPlus
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

124 
decQuad
 * 
decQuadQu™tize
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

125 
decQuad
 * 
decQuadRedu˚
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

126 
decQuad
 * 
decQuadRemaödî
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

127 
decQuad
 * 
decQuadRemaödîNór
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

128 
decQuad
 * 
decQuadRŸ©e
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

129 
decQuad
 * 
decQuadSˇÀB
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

130 
decQuad
 * 
decQuadShi·
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

131 
decQuad
 * 
decQuadSubåa˘
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

132 
decQuad
 * 
decQuadToI¡egølVÆue
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *, 
roundög
);

133 
decQuad
 * 
decQuadToI¡egølExa˘
(decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

134 
decQuad
 * 
decQuadX‹
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

137 
decQuad
 * 
decQuadCom∑ª
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

138 
decQuad
 * 
decQuadCom∑ªSig«l
(decQuad *, c⁄° decQuad *, c⁄° decQuad *, 
decC⁄ãxt
 *);

139 
decQuad
 * 
decQuadCom∑ªTŸÆ
(decQuad *, const decQuad *, const decQuad *);

140 
decQuad
 * 
decQuadCom∑ªTŸÆMag
(decQuad *, const decQuad *, const decQuad *);

143 
decQuad
 * 
decQuadC™⁄iˇl
(decQuad *, const decQuad *);

144 
decQuad
 * 
decQuadC›y
(decQuad *, const decQuad *);

145 
decQuad
 * 
decQuadC›yAbs
(decQuad *, const decQuad *);

146 
decQuad
 * 
decQuadC›yNeg©e
(decQuad *, const decQuad *);

147 
decQuad
 * 
decQuadC›ySign
(decQuad *, const decQuad *, const decQuad *);

150 
decCœss
 
decQuadCœss
(c⁄° 
decQuad
 *);

151 c⁄° * 
decQuadCœssSåög
(c⁄° 
decQuad
 *);

152 
uöt32_t
 
decQuadDigôs
(c⁄° 
decQuad
 *);

153 
uöt32_t
 
decQuadIsC™⁄iˇl
(c⁄° 
decQuad
 *);

154 
uöt32_t
 
decQuadIsFöôe
(c⁄° 
decQuad
 *);

155 
uöt32_t
 
decQuadIsI¡egî
(c⁄° 
decQuad
 *);

156 
uöt32_t
 
decQuadIsLogiˇl
(c⁄° 
decQuad
 *);

157 
uöt32_t
 
decQuadIsInföôe
(c⁄° 
decQuad
 *);

158 
uöt32_t
 
decQuadIsNaN
(c⁄° 
decQuad
 *);

159 
uöt32_t
 
decQuadIsNeg©ive
(c⁄° 
decQuad
 *);

160 
uöt32_t
 
decQuadIsN‹mÆ
(c⁄° 
decQuad
 *);

161 
uöt32_t
 
decQuadIsPosôive
(c⁄° 
decQuad
 *);

162 
uöt32_t
 
decQuadIsSig«lög
(c⁄° 
decQuad
 *);

163 
uöt32_t
 
decQuadIsSig«Œög
(c⁄° 
decQuad
 *);

164 
uöt32_t
 
decQuadIsSig√d
(c⁄° 
decQuad
 *);

165 
uöt32_t
 
decQuadIsSubn‹mÆ
(c⁄° 
decQuad
 *);

166 
uöt32_t
 
decQuadIsZîo
(c⁄° 
decQuad
 *);

167 
uöt32_t
 
decQuadRadix
(c⁄° 
decQuad
 *);

168 
uöt32_t
 
decQuadSameQu™tum
(c⁄° 
decQuad
 *, const decQuad *);

169 c⁄° * 
decQuadVîsi⁄
();

174 
	#decQuadToNumbî
(
dq
, 
dn
Ë
	`decimÆ128ToNumbî
((
decimÆ128
 *)(dq), dn)

	)

175 
	#decQuadFromNumbî
(
dq
, 
dn
, 
£t
Ë
	`decimÆ128FromNumbî
((
decimÆ128
 *)(dq), dn, së)

	)

	@src/decNumber/decSingle.c

22 
	~"decC⁄ãxt.h
"

23 
	~"decSögÀ.h
"

26 
	#DECPMAX
 
DECSINGLE_Pmax


	)

27 
	#DECEMIN
 
DECSINGLE_Emö


	)

28 
	#DECEMAX
 
DECSINGLE_Emax


	)

29 
	#DECEMAXD
 
DECSINGLE_EmaxD


	)

30 
	#DECBYTES
 
DECSINGLE_Byãs


	)

31 
	#DECSTRING
 
DECSINGLE_Såög


	)

32 
	#DECECONL
 
DECSINGLE_Ec⁄L


	)

33 
	#DECBIAS
 
DECSINGLE_Büs


	)

34 
	#DECLETS
 
DECSINGLE_De˛ës


	)

35 
	#DECQTINY
 (-
DECSINGLE_Büs
)

	)

37 
	#DECWBYTES
 
DECDOUBLE_Byãs


	)

38 
	#DECWPMAX
 
DECDOUBLE_Pmax


	)

39 
	#DECWECONL
 
DECDOUBLE_Ec⁄L


	)

40 
	#DECWBIAS
 
DECDOUBLE_Büs


	)

43 
	#decFlﬂt
 
decSögÀ


44 
	#decFlﬂtWidî
 
decDoubÀ


45 

	)

47 
	#decFlﬂtFromBCD
 
decSögÀFromBCD


	)

48 
	#decFlﬂtFromPacked
 
decSögÀFromPacked


	)

49 
	#decFlﬂtFromPackedChecked
 
decSögÀFromPackedChecked


	)

50 
	#decFlﬂtFromSåög
 
decSögÀFromSåög


	)

51 
	#decFlﬂtFromWidî
 
decSögÀFromWidî


	)

52 
	#decFlﬂtGëC€fficõ¡
 
decSögÀGëC€fficõ¡


	)

53 
	#decFlﬂtGëExp⁄ít
 
decSögÀGëExp⁄ít


	)

54 
	#decFlﬂtSëC€fficõ¡
 
decSögÀSëC€fficõ¡


	)

55 
	#decFlﬂtSëExp⁄ít
 
decSögÀSëExp⁄ít


	)

56 
	#decFlﬂtShow
 
decSögÀShow


	)

57 
	#decFlﬂtToBCD
 
decSögÀToBCD


	)

58 
	#decFlﬂtToEngSåög
 
decSögÀToEngSåög


	)

59 
	#decFlﬂtToPacked
 
decSögÀToPacked


	)

60 
	#decFlﬂtToSåög
 
decSögÀToSåög


	)

61 
	#decFlﬂtToWidî
 
decSögÀToWidî


	)

62 
	#decFlﬂtZîo
 
decSögÀZîo


	)

65 
	#decFlﬂtRadix
 
decSögÀRadix


	)

66 
	#decFlﬂtVîsi⁄
 
decSögÀVîsi⁄


	)

68 
	~"decNumbîLoˇl.h
"

69 
	~"decComm⁄.c
"

	@src/decNumber/decSingle.h

20 #i‡!
deföed
(
DECSINGLE
)

21 
	#DECSINGLE


	)

23 
	#DECSINGLENAME
 "decSögÀ"

	)

24 
	#DECSINGLETITLE
 "DecimÆ 32-bô d©um"

	)

25 
	#DECSINGLEAUTHOR
 "MikêCowlishaw"

	)

28 
	#DECSINGLE_Byãs
 4

	)

29 
	#DECSINGLE_Pmax
 7

	)

30 
	#DECSINGLE_Emö
 -95

	)

31 
	#DECSINGLE_Emax
 96

	)

32 
	#DECSINGLE_EmaxD
 3

	)

33 
	#DECSINGLE_Büs
 101

	)

34 
	#DECSINGLE_Såög
 16

	)

35 
	#DECSINGLE_Ec⁄L
 6

	)

36 
	#DECSINGLE_De˛ës
 2

	)

38 
	#DECSINGLE_Ehigh
 (
DECSINGLE_Emax
 + 
DECSINGLE_Büs
 - (
DECSINGLE_Pmax
-1))

	)

41 
	~"decC⁄ãxt.h
"

42 
	~"decQuad.h
"

43 
	~"decDoubÀ.h
"

47 
uöt8_t
 
	mbyãs
[
DECSINGLE_Byãs
];

48 
uöt16_t
 
	msh‹ts
[
DECSINGLE_Byãs
/2];

49 
uöt32_t
 
	mw‹ds
[
DECSINGLE_Byãs
/4];

50 } 
	tdecSögÀ
;

57 
decSögÀ
 * 
decSögÀFromBCD
(decSögÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *, int32_t);

58 
decSögÀ
 * 
decSögÀFromPacked
(decSögÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *);

59 
decSögÀ
 * 
decSögÀFromPackedChecked
(decSögÀ *, 
öt32_t
, c⁄° 
uöt8_t
 *);

60 
decSögÀ
 * 
decSögÀFromSåög
(decSögÀ *, c⁄° *, 
decC⁄ãxt
 *);

61 
decSögÀ
 * 
decSögÀFromWidî
(decSögÀ *, c⁄° 
decDoubÀ
 *, 
decC⁄ãxt
 *);

62 
öt32_t
 
decSögÀGëC€fficõ¡
(c⁄° 
decSögÀ
 *, 
uöt8_t
 *);

63 
öt32_t
 
decSögÀGëExp⁄ít
(c⁄° 
decSögÀ
 *);

64 
decSögÀ
 * 
decSögÀSëC€fficõ¡
(decSögÀ *, c⁄° 
uöt8_t
 *, 
öt32_t
);

65 
decSögÀ
 * 
decSögÀSëExp⁄ít
(decSögÀ *, 
decC⁄ãxt
 *, 
öt32_t
);

66 
decSögÀShow
(c⁄° 
decSögÀ
 *, const *);

67 
öt32_t
 
decSögÀToBCD
(c⁄° 
decSögÀ
 *, i¡32_à*, 
uöt8_t
 *);

68 * 
decSögÀToEngSåög
(c⁄° 
decSögÀ
 *, *);

69 
öt32_t
 
decSögÀToPacked
(c⁄° 
decSögÀ
 *, i¡32_à*, 
uöt8_t
 *);

70 * 
decSögÀToSåög
(c⁄° 
decSögÀ
 *, *);

71 
decDoubÀ
 * 
decSögÀToWidî
(c⁄° 
decSögÀ
 *, decDouble *);

72 
decSögÀ
 * 
decSögÀZîo
(decSingle *);

77 
uöt32_t
 
decSögÀRadix
(c⁄° 
decSögÀ
 *);

78 c⁄° * 
decSögÀVîsi⁄
();

83 
	#decSögÀToNumbî
(
dq
, 
dn
Ë
	`decimÆ32ToNumbî
((
decimÆ32
 *)(dq), dn)

	)

84 
	#decSögÀFromNumbî
(
dq
, 
dn
, 
£t
Ë
	`decimÆ32FromNumbî
((
decimÆ32
 *)(dq), dn, së)

	)

	@src/decNumber/decimal128.c

27 
	~<°rög.h
>

28 
	~<°dio.h
>

30 
	#DECNUMDIGITS
 34

31 
	~"decNumbî.h
"

32 
	~"decNumbîLoˇl.h
"

33 
	~"decimÆ128.h
"

34 

	)

38 
	#DPD2BIN
 
DPD2BINx


	)

39 
	#BIN2DPD
 
BIN2DPDx


	)

40 c⁄° 
uI¡
 
COMBEXP
[32], 
COMBMSD
[32];

41 c⁄° 
uSh‹t
 
DPD2BIN
[1024];

42 c⁄° 
uSh‹t
 
BIN2DPD
[1000];

43 c⁄° 
uByã
 
BIN2CHAR
[4001];

45 
decDigôsFromDPD
(
decNumbî
 *, c⁄° 
uI¡
 *, 
I¡
);

46 
decDigôsToDPD
(c⁄° 
decNumbî
 *, 
uI¡
 *, 
I¡
);

48 #i‡
DECTRACE
 || 
DECCHECK


49 
decimÆ128Show
(c⁄° 
decimÆ128
 *);

50 
decNumbîShow
(c⁄° 
decNumbî
 *);

55 
	#DEC_˛ór
(
d
Ë
	`mem£t
(d, 0, (*d))

	)

74 
decimÆ128
 * 
	$decimÆ128FromNumbî
(
decimÆ128
 *
d128
, c⁄° 
decNumbî
 *
dn
,

75 
decC⁄ãxt
 *
£t
) {

76 
uI¡
 
°©us
=0;

77 
I¡
 
´
;

78 
decNumbî
 
dw
;

79 
decC⁄ãxt
 
dc
;

80 
uI¡
 
comb
, 
exp
;

81 
uI¡
 
uiw‹k
;

82 
uI¡
 
èrg¨
[4]={0,0,0,0};

83 
	#èrghi
 
èrg¨
[3]

84 
	#èrgmh
 
èrg¨
[2]

85 
	#èrgml
 
èrg¨
[1]

86 
	#èrglo
 
èrg¨
[0]

87 

	)

93 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

94 i‡(
dn
->
digôs
>
DECIMAL128_Pmax


95 || 
´
>
DECIMAL128_Emax


96 || 
´
<
DECIMAL128_Emö
) {

97 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL128
);

98 
dc
.
round
=
£t
->round;

99 
	`decNumbîPlus
(&
dw
, 
dn
, &
dc
);

101 
dw
.
bôs
|=
dn
->bôs&
DECNEG
;

102 
°©us
=
dc
.status;

103 
dn
=&
dw
;

106 i‡(
dn
->
bôs
&
DECSPECIAL
) {

107 i‡(
dn
->
bôs
&
DECINF
Ë
èrghi
=
DECIMAL_Inf
<<24;

109 i‡((*
dn
->
lsu
!=0 || dn->
digôs
>1)

110 && (
dn
->
digôs
<
DECIMAL128_Pmax
)) {

111 
	`decDigôsToDPD
(
dn
, 
èrg¨
, 0);

113 i‡(
dn
->
bôs
&
DECNAN
Ë
èrghi
|=
DECIMAL_NaN
<<24;

114 
èrghi
|=
DECIMAL_sNaN
<<24;

119 i‡(
	`decNumbîIsZîo
(
dn
)) {

121 i‡(
dn
->
exp⁄ít
<-
DECIMAL128_Büs
) {

122 
exp
=0;

123 
°©us
|=
DEC_Cœm≥d
;

126 
exp
=
dn
->
exp⁄ít
+
DECIMAL128_Büs
;

127 i‡(
exp
>
DECIMAL128_Ehigh
) {

128 
exp
=
DECIMAL128_Ehigh
;

129 
°©us
|=
DEC_Cœm≥d
;

132 
comb
=(
exp
>>9) & 0x18;

135 
uI¡
 
msd
;

136 
I¡
 
∑d
=0;

139 
exp
=(
uI¡
)(
dn
->
exp⁄ít
+
DECIMAL128_Büs
);

140 i‡(
exp
>
DECIMAL128_Ehigh
) {

141 
∑d
=
exp
-
DECIMAL128_Ehigh
;

142 
exp
=
DECIMAL128_Ehigh
;

143 
°©us
|=
DEC_Cœm≥d
;

147 
	`decDigôsToDPD
(
dn
, 
èrg¨
, 
∑d
);

149 
msd
=
èrghi
>>14;

150 
èrghi
&=0x00003fff;

153 i‡(
msd
>=8Ë
comb
=0x18 | ((
exp
>>11) & 0x06) | (msd & 0x01);

154 
comb
=((
exp
>>9Ë& 0x18Ë| 
msd
;

156 
èrghi
|=
comb
<<26;

157 
èrghi
|=(
exp
&0xfff)<<14;

160 i‡(
dn
->
bôs
&
DECNEG
Ë
èrghi
|=0x80000000;

163 i‡(
DECLITEND
) {

165 
	`UBFROMUI
(
d128
->
byãs
, 
èrglo
);

166 
	`UBFROMUI
(
d128
->
byãs
+4, 
èrgml
);

167 
	`UBFROMUI
(
d128
->
byãs
+8, 
èrgmh
);

168 
	`UBFROMUI
(
d128
->
byãs
+12, 
èrghi
);

172 
	`UBFROMUI
(
d128
->
byãs
, 
èrghi
);

173 
	`UBFROMUI
(
d128
->
byãs
+4, 
èrgmh
);

174 
	`UBFROMUI
(
d128
->
byãs
+8, 
èrgml
);

175 
	`UBFROMUI
(
d128
->
byãs
+12, 
èrglo
);

178 i‡(
°©us
!=0Ë
	`decC⁄ãxtSëSètus
(
£t
, status);

180  
d128
;

181 
	}
}

189 
decNumbî
 * 
	$decimÆ128ToNumbî
(c⁄° 
decimÆ128
 *
d128
, 
decNumbî
 *
dn
) {

190 
uI¡
 
msd
;

191 
uI¡
 
exp
;

192 
uI¡
 
comb
;

193 
I¡
 
√ed
;

194 
uI¡
 
uiw‹k
;

195 
uI¡
 
souør
[4];

196 
	#sourhi
 
souør
[3]

197 
	#sourmh
 
souør
[2]

198 
	#sourml
 
souør
[1]

199 
	#souæo
 
souør
[0]

200 

	)

202 i‡(
DECLITEND
) {

203 
souæo
=
	`UBTOUI
(
d128
->
byãs
 );

204 
sourml
=
	`UBTOUI
(
d128
->
byãs
+4 );

205 
sourmh
=
	`UBTOUI
(
d128
->
byãs
+8 );

206 
sourhi
=
	`UBTOUI
(
d128
->
byãs
+12);

209 
sourhi
=
	`UBTOUI
(
d128
->
byãs
 );

210 
sourmh
=
	`UBTOUI
(
d128
->
byãs
+4 );

211 
sourml
=
	`UBTOUI
(
d128
->
byãs
+8 );

212 
souæo
=
	`UBTOUI
(
d128
->
byãs
+12);

215 
comb
=(
sourhi
>>26)&0x1f;

217 
	`decNumbîZîo
(
dn
);

218 i‡(
sourhi
&0x80000000Ë
dn
->
bôs
=
DECNEG
;

220 
msd
=
COMBMSD
[
comb
];

221 
exp
=
COMBEXP
[
comb
];

223 i‡(
exp
==3) {

224 i‡(
msd
==0) {

225 
dn
->
bôs
|=
DECINF
;

226  
dn
;

228 i‡(
sourhi
&0x02000000Ë
dn
->
bôs
|=
DECSNAN
;

229 
dn
->
bôs
|=
DECNAN
;

230 
msd
=0;

233 
dn
->
exp⁄ít
=(
exp
<<12)+((
sourhi
>>14)&0xfff)-
DECIMAL128_Büs
;

237 
sourhi
&=0x00003fff;

238 i‡(
msd
) {

239 
sourhi
|=
msd
<<14;

240 
√ed
=12;

243 i‡(
sourhi
Ë
√ed
=11;

244 i‡(
sourmh
Ë
√ed
=10;

245 i‡(
sourml
Ë
√ed
=7;

246 i‡(
souæo
Ë
√ed
=4;

247  
dn
;

250 
	`decDigôsFromDPD
(
dn
, 
souør
, 
√ed
);

252  
dn
;

253 
	}
}

269 * 
	$decimÆ128ToEngSåög
(c⁄° 
decimÆ128
 *
d128
, *
°rög
){

270 
decNumbî
 
dn
;

271 
	`decimÆ128ToNumbî
(
d128
, &
dn
);

272 
	`decNumbîToEngSåög
(&
dn
, 
°rög
);

273  
°rög
;

274 
	}
}

276 * 
	$decimÆ128ToSåög
(c⁄° 
decimÆ128
 *
d128
, *
°rög
){

277 
uI¡
 
msd
;

278 
I¡
 
exp
;

279 
uI¡
 
comb
;

280 *
c°¨t
;

281 *
c
;

282 c⁄° 
uByã
 *
u
;

283 *
s
, *
t
;

284 
I¡
 
dpd
;

285 
I¡
 
¥e
, 
e
;

286 
uI¡
 
uiw‹k
;

288 
uI¡
 
souør
[4];

289 
	#sourhi
 
souør
[3]

290 
	#sourmh
 
souør
[2]

291 
	#sourml
 
souør
[1]

292 
	#souæo
 
souør
[0]

293 

	)

295 i‡(
DECLITEND
) {

296 
souæo
=
	`UBTOUI
(
d128
->
byãs
 );

297 
sourml
=
	`UBTOUI
(
d128
->
byãs
+4 );

298 
sourmh
=
	`UBTOUI
(
d128
->
byãs
+8 );

299 
sourhi
=
	`UBTOUI
(
d128
->
byãs
+12);

302 
sourhi
=
	`UBTOUI
(
d128
->
byãs
 );

303 
sourmh
=
	`UBTOUI
(
d128
->
byãs
+4 );

304 
sourml
=
	`UBTOUI
(
d128
->
byãs
+8 );

305 
souæo
=
	`UBTOUI
(
d128
->
byãs
+12);

308 
c
=
°rög
;

309 i‡(((
I¡
)
sourhi
)<0Ë*
c
++='-';

311 
comb
=(
sourhi
>>26)&0x1f;

312 
msd
=
COMBMSD
[
comb
];

313 
exp
=
COMBEXP
[
comb
];

315 i‡(
exp
==3) {

316 i‡(
msd
==0) {

317 
	`°r˝y
(
c
, "Inf");

318 
	`°r˝y
(
c
+3, "inity");

319  
°rög
;

321 i‡(
sourhi
&0x02000000Ë*
c
++='s';

322 
	`°r˝y
(
c
, "NaN");

323 
c
+=3;

324 i‡(
souæo
==0 && 
sourml
==0 && 
sourmh
==0

325 && (
sourhi
&0x0003ffff)==0Ë 
°rög
;

327 
exp
=0; 
msd
=0;

329 
exp
=”xp<<12)+((
sourhi
>>14)&0xfff)-
DECIMAL128_Büs
;

332 
c°¨t
=
c
;

333 i‡(
msd
Ë*
c
++='0'+()msd;

343 
	#dpd2ch¨
 
u
=&
BIN2CHAR
[
DPD2BIN
[
dpd
]*4]; \

	)

344 i‡(
c
!=
c°¨t
Ë{
	`mem˝y
(c, 
u
+1, 4); c+=3;} \

345 i‡(*
u
Ë{
	`mem˝y
(
c
, u+4-*u, 4); c+=*u;}

346 
dpd
=(
sourhi
>>4)&0x3ff;

347 
dpd2ch¨
;

348 
dpd
=((
sourhi
&0xf)<<6Ë| (
sourmh
>>26);

349 
dpd2ch¨
;

350 
dpd
=(
sourmh
>>16)&0x3ff;

351 
dpd2ch¨
;

352 
dpd
=(
sourmh
>>6)&0x3ff;

353 
dpd2ch¨
;

354 
dpd
=((
sourmh
&0x3f)<<4Ë| (
sourml
>>28);

355 
dpd2ch¨
;

356 
dpd
=(
sourml
>>18)&0x3ff;

357 
dpd2ch¨
;

358 
dpd
=(
sourml
>>8)&0x3ff;

359 
dpd2ch¨
;

360 
dpd
=((
sourml
&0xff)<<2Ë| (
souæo
>>30);

361 
dpd2ch¨
;

362 
dpd
=(
souæo
>>20)&0x3ff;

363 
dpd2ch¨
;

364 
dpd
=(
souæo
>>10)&0x3ff;

365 
dpd2ch¨
;

366 
dpd
=(
souæo
)&0x3ff;

367 
dpd2ch¨
;

369 i‡(
c
==
c°¨t
) *c++='0';

371 i‡(
exp
==0) {

372 *
c
='\0';

373  
°rög
;

377 
e
=0;

378 
¥e
=
c
-
c°¨t
+
exp
;

380 i‡(
exp
>0 || 
¥e
<-5) {

381 
e
=
¥e
-1;

382 
¥e
=1;

386 
s
=
c
-1;

387 i‡(
¥e
>0) {

388 *
dŸ©
=
c°¨t
+
¥e
;

389 i‡(
dŸ©
<
c
) {

390 
t
=
c
;

391 ; 
s
>=
dŸ©
; s--, 
t
--) *t=*s;

392 *
t
='.';

393 
c
++;

398 i‡(
e
!=0) {

399 *
c
++='E';

400 *
c
++='+';

401 i‡(
e
<0) {

402 *(
c
-1)='-';

403 
e
=-e;

405 i‡(
e
<1000) {

406 
u
=&
BIN2CHAR
[
e
*4];

407 
	`mem˝y
(
c
, 
u
+4-*u, 4);

408 
c
+=*
u
;

411 
I¡
 
thou
=((
e
>>3)*1049)>>17;

412 
I¡
 
ªm
=
e
-(1000*
thou
);

413 *
c
++='0'+()
thou
;

414 
u
=&
BIN2CHAR
[
ªm
*4];

415 
	`mem˝y
(
c
, 
u
+1, 4);

416 
c
+=3;

419 *
c
='\0';

421  
°rög
;

425 
t
=
c
+1-
¥e
;

426 *(
t
+1)='\0';

427 ; 
s
>=
c°¨t
; s--, 
t
--) *t=*s;

428 
c
=
c°¨t
;

429 *
c
++='0';

430 *
c
++='.';

431 ; 
¥e
<0;Öª++Ë*
c
++='0';

433  
°rög
;

434 
	}
}

451 
decimÆ128
 * 
	$decimÆ128FromSåög
(
decimÆ128
 *
ªsu…
, c⁄° *
°rög
,

452 
decC⁄ãxt
 *
£t
) {

453 
decC⁄ãxt
 
dc
;

454 
decNumbî
 
dn
;

456 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL128
);

457 
dc
.
round
=
£t
->round;

459 
	`decNumbîFromSåög
(&
dn
, 
°rög
, &
dc
);

460 
	`decimÆ128FromNumbî
(
ªsu…
, &
dn
, &
dc
);

461 i‡(
dc
.
°©us
!=0) {

462 
	`decC⁄ãxtSëSètus
(
£t
, 
dc
.
°©us
);

464  
ªsu…
;

465 
	}
}

473 
uI¡
 
	$decimÆ128IsC™⁄iˇl
(c⁄° 
decimÆ128
 *
d128
) {

474 
decNumbî
 
dn
;

475 
decimÆ128
 
ˇn⁄
;

476 
decC⁄ãxt
 
dc
;

477 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL128
);

478 
	`decimÆ128ToNumbî
(
d128
, &
dn
);

479 
	`decimÆ128FromNumbî
(&
ˇn⁄
, &
dn
, &
dc
);

480  
	`memcmp
(
d128
, &
ˇn⁄
, 
DECIMAL128_Byãs
)==0;

481 
	}
}

490 
decimÆ128
 * 
	$decimÆ128C™⁄iˇl
(
decimÆ128
 *
ªsu…
, c⁄° decimÆ128 *
d128
) {

491 
decNumbî
 
dn
;

492 
decC⁄ãxt
 
dc
;

493 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL128
);

494 
	`decimÆ128ToNumbî
(
d128
, &
dn
);

495 
	`decimÆ128FromNumbî
(
ªsu…
, &
dn
, &
dc
);

496  
ªsu…
;

497 
	}
}

499 #i‡
DECTRACE
 || 
DECCHECK


504 
	#decimÆ128Sign
(
d
Ë(()(d)->
byãs
[0]>>7)

	)

507 
	#decimÆ128Comb
(
d
Ë(((d)->
byãs
[0] & 0x7c)>>2)

	)

510 
	#decimÆ128ExpC⁄
(
d
Ë((((d)->
byãs
[0] & 0x03)<<10Ë\

	)

511 | (()(
	gd
)->
	gbyãs
[1]<<2) \

512 | (()(
	gd
)->
	gbyãs
[2]>>6))

515 
	#decimÆ128SëSign
(
d
, 
b
Ë{ \

	)

516 (
	gd
)->
	gbyãs
[0]|=(()(
b
)<<7);}

521 
	#decimÆ128SëExpC⁄
(
d
, 
e
Ë{ \

	)

522 (
	gd
)->
	gbyãs
[0]|=(
uByã
)((
e
)>>10); \

523 (
	gd
)->
	gbyãs
[1] =(
uByã
)(((
e
)&0x3fc)>>2); \

524 (
	gd
)->
	gbyãs
[2]|=(
uByã
)(((
e
)&0x03)<<6);}

531 
	$decimÆ128Show
(c⁄° 
decimÆ128
 *
d128
) {

532 
buf
[
DECIMAL128_Byãs
*2+1];

533 
I¡
 
i
, 
j
=0;

535 i‡(
DECLITEND
) {

536 
i
=0; i<
DECIMAL128_Byãs
; i++, 
j
+=2) {

537 
	`•rötf
(&
buf
[
j
], "%02x", 
d128
->
byãs
[15-
i
]);

539 
	`¥ötf
(" D128> %†[S:%d Cb:%02x Ec:%02x] LôéeEndün\n", 
buf
,

540 
d128
->
byãs
[15]>>7, (d128->bytes[15]>>2)&0x1f,

541 ((
d128
->
byãs
[15]&0x3)<<10)|(d128->bytes[14]<<2)|

542 (
d128
->
byãs
[13]>>6));

545 
i
=0; i<
DECIMAL128_Byãs
; i++, 
j
+=2) {

546 
	`•rötf
(&
buf
[
j
], "%02x", 
d128
->
byãs
[
i
]);

548 
	`¥ötf
(" D128> %†[S:%d Cb:%02x Ec:%02x] BigEndün\n", 
buf
,

549 
	`decimÆ128Sign
(
d128
), 
	`decimÆ128Comb
(d128),

550 
	`decimÆ128ExpC⁄
(
d128
));

552 
	}
}

	@src/decNumber/decimal128.h

20 #i‡!
deföed
(
DECIMAL128
)

21 
	#DECIMAL128


	)

22 
	#DEC128NAME
 "decimÆ128"

	)

23 
	#DEC128FULLNAME
 "DecimÆ 128-bô Numbî"

	)

24 
	#DEC128AUTHOR
 "MikêCowlishaw"

	)

27 
	#DECIMAL128_Byãs
 16

	)

28 
	#DECIMAL128_Pmax
 34

	)

29 
	#DECIMAL128_Emax
 6144

	)

30 
	#DECIMAL128_Emö
 -6143

	)

31 
	#DECIMAL128_Büs
 6176

	)

32 
	#DECIMAL128_Såög
 43

	)

33 
	#DECIMAL128_Ec⁄L
 12

	)

35 
	#DECIMAL128_Ehigh
 (
DECIMAL128_Emax
+
DECIMAL128_Büs
-
DECIMAL128_Pmax
+1)

	)

38 #i‡
deföed
(
DECNUMDIGITS
)

39 #i‡(
DECNUMDIGITS
<
DECIMAL128_Pmax
)

40 #îr‹ 
decimÆ128
.
h
 
√eds
 
¥e
-
deföed
 
DECNUMDIGITS
>=34 
ß„
 
u£


44 #i‚de‡
DECNUMDIGITS


45 
	#DECNUMDIGITS
 
DECIMAL128_Pmax


	)

47 #i‚de‡
DECNUMBER


48 
	~"decNumbî.h
"

53 
uöt8_t
 
	mbyãs
[
DECIMAL128_Byãs
];

54 } 
	tdecimÆ128
;

58 #i‡!
deföed
(
DECIMAL_NaN
)

59 
	#DECIMAL_NaN
 0x7¯

	)

60 
	#DECIMAL_sNaN
 0x7ê

	)

61 
	#DECIMAL_Inf
 0x78

	)

68 
decimÆ128
 * 
decimÆ128FromSåög
(decimÆ128 *, c⁄° *, 
decC⁄ãxt
 *);

69 * 
decimÆ128ToSåög
(c⁄° 
decimÆ128
 *, *);

70 * 
decimÆ128ToEngSåög
(c⁄° 
decimÆ128
 *, *);

73 
decimÆ128
 * 
decimÆ128FromNumbî
(decimÆ128 *, c⁄° 
decNumbî
 *,

74 
decC⁄ãxt
 *);

75 
decNumbî
 * 
decimÆ128ToNumbî
(c⁄° 
decimÆ128
 *, decNumber *);

78 
uöt32_t
 
decimÆ128IsC™⁄iˇl
(c⁄° 
decimÆ128
 *);

79 
decimÆ128
 * 
decimÆ128C™⁄iˇl
(decimal128 *, const decimal128 *);

	@src/decNumber/decimal32.c

27 
	~<°rög.h
>

28 
	~<°dio.h
>

30 
	#DECNUMDIGITS
 7

31 
	~"decNumbî.h
"

32 
	~"decNumbîLoˇl.h
"

33 
	~"decimÆ32.h
"

34 

	)

38 
	#DPD2BIN
 
DPD2BINx


	)

39 
	#BIN2DPD
 
BIN2DPDx


	)

40 c⁄° 
uI¡
 
COMBEXP
[32], 
COMBMSD
[32];

41 c⁄° 
uSh‹t
 
DPD2BIN
[1024];

42 c⁄° 
uSh‹t
 
BIN2DPD
[1000];

43 c⁄° 
uByã
 
BIN2CHAR
[4001];

45 
decDigôsToDPD
(c⁄° 
decNumbî
 *, 
uI¡
 *, 
I¡
);

46 
decDigôsFromDPD
(
decNumbî
 *, c⁄° 
uI¡
 *, 
I¡
);

48 #i‡
DECTRACE
 || 
DECCHECK


49 
decimÆ32Show
(c⁄° 
decimÆ32
 *);

50 
decNumbîShow
(c⁄° 
decNumbî
 *);

55 
	#DEC_˛ór
(
d
Ë
	`mem£t
(d, 0, (*d))

	)

74 
decimÆ32
 * 
	$decimÆ32FromNumbî
(
decimÆ32
 *
d32
, c⁄° 
decNumbî
 *
dn
,

75 
decC⁄ãxt
 *
£t
) {

76 
uI¡
 
°©us
=0;

77 
I¡
 
´
;

78 
decNumbî
 
dw
;

79 
decC⁄ãxt
 
dc
;

80 
uI¡
 
comb
, 
exp
;

81 
uI¡
 
uiw‹k
;

82 
uI¡
 
èrg
=0;

89 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

90 i‡(
dn
->
digôs
>
DECIMAL32_Pmax


91 || 
´
>
DECIMAL32_Emax


92 || 
´
<
DECIMAL32_Emö
) {

93 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL32
);

94 
dc
.
round
=
£t
->round;

95 
	`decNumbîPlus
(&
dw
, 
dn
, &
dc
);

97 
dw
.
bôs
|=
dn
->bôs&
DECNEG
;

98 
°©us
=
dc
.status;

99 
dn
=&
dw
;

102 i‡(
dn
->
bôs
&
DECSPECIAL
) {

103 i‡(
dn
->
bôs
&
DECINF
Ë
èrg
=
DECIMAL_Inf
<<24;

105 i‡((*
dn
->
lsu
!=0 || dn->
digôs
>1)

106 && (
dn
->
digôs
<
DECIMAL32_Pmax
)) {

107 
	`decDigôsToDPD
(
dn
, &
èrg
, 0);

109 i‡(
dn
->
bôs
&
DECNAN
Ë
èrg
|=
DECIMAL_NaN
<<24;

110 
èrg
|=
DECIMAL_sNaN
<<24;

115 i‡(
	`decNumbîIsZîo
(
dn
)) {

117 i‡(
dn
->
exp⁄ít
<-
DECIMAL32_Büs
) {

118 
exp
=0;

119 
°©us
|=
DEC_Cœm≥d
;

122 
exp
=
dn
->
exp⁄ít
+
DECIMAL32_Büs
;

123 i‡(
exp
>
DECIMAL32_Ehigh
) {

124 
exp
=
DECIMAL32_Ehigh
;

125 
°©us
|=
DEC_Cœm≥d
;

128 
comb
=(
exp
>>3) & 0x18;

131 
uI¡
 
msd
;

132 
I¡
 
∑d
=0;

135 
exp
=(
uI¡
)(
dn
->
exp⁄ít
+
DECIMAL32_Büs
);

136 i‡(
exp
>
DECIMAL32_Ehigh
) {

137 
∑d
=
exp
-
DECIMAL32_Ehigh
;

138 
exp
=
DECIMAL32_Ehigh
;

139 
°©us
|=
DEC_Cœm≥d
;

143 i‡(
DECDPUN
==3 && 
∑d
==0) {

144 
èrg
=
BIN2DPD
[
dn
->
lsu
[0]];

145 i‡(
dn
->
digôs
>3Ë
èrg
|=(
uI¡
)(
BIN2DPD
[dn->
lsu
[1]])<<10;

146 
msd
=(
dn
->
digôs
==7 ? dn->
lsu
[2] : 0);

149 
	`decDigôsToDPD
(
dn
, &
èrg
, 
∑d
);

151 
msd
=
èrg
>>20;

152 
èrg
&=0x000fffff;

156 i‡(
msd
>=8Ë
comb
=0x18 | ((
exp
>>5) & 0x06) | (msd & 0x01);

157 
comb
=((
exp
>>3Ë& 0x18Ë| 
msd
;

159 
èrg
|=
comb
<<26;

160 
èrg
|=(
exp
&0x3f)<<20;

163 i‡(
dn
->
bôs
&
DECNEG
Ë
èrg
|=0x80000000;

166 
	`UBFROMUI
(
d32
->
byãs
, 
èrg
);

168 i‡(
°©us
!=0Ë
	`decC⁄ãxtSëSètus
(
£t
, status);

170  
d32
;

171 
	}
}

179 
decNumbî
 * 
	$decimÆ32ToNumbî
(c⁄° 
decimÆ32
 *
d32
, 
decNumbî
 *
dn
) {

180 
uI¡
 
msd
;

181 
uI¡
 
exp
;

182 
uI¡
 
comb
;

183 
uI¡
 
sour
;

184 
uI¡
 
uiw‹k
;

187 
sour
=
	`UBTOUI
(
d32
->
byãs
);

189 
comb
=(
sour
>>26)&0x1f;

191 
	`decNumbîZîo
(
dn
);

192 i‡(
sour
&0x80000000Ë
dn
->
bôs
=
DECNEG
;

194 
msd
=
COMBMSD
[
comb
];

195 
exp
=
COMBEXP
[
comb
];

197 i‡(
exp
==3) {

198 i‡(
msd
==0) {

199 
dn
->
bôs
|=
DECINF
;

200  
dn
;

202 i‡(
sour
&0x02000000Ë
dn
->
bôs
|=
DECSNAN
;

203 
dn
->
bôs
|=
DECNAN
;

204 
msd
=0;

207 
dn
->
exp⁄ít
=(
exp
<<6)+((
sour
>>20)&0x3f)-
DECIMAL32_Büs
;

211 
sour
&=0x000fffff;

212 i‡(
msd
) {

213 
sour
|=
msd
<<20;

214 
	`decDigôsFromDPD
(
dn
, &
sour
, 3);

215  
dn
;

218 i‡(!
sour
Ë 
dn
;

219 i‡(
sour
&0x000ffc00)

220 
	`decDigôsFromDPD
(
dn
, &
sour
, 2);

222 
	`decDigôsFromDPD
(
dn
, &
sour
, 1);

223  
dn
;

224 
	}
}

240 * 
	$decimÆ32ToEngSåög
(c⁄° 
decimÆ32
 *
d32
, *
°rög
){

241 
decNumbî
 
dn
;

242 
	`decimÆ32ToNumbî
(
d32
, &
dn
);

243 
	`decNumbîToEngSåög
(&
dn
, 
°rög
);

244  
°rög
;

245 
	}
}

247 * 
	$decimÆ32ToSåög
(c⁄° 
decimÆ32
 *
d32
, *
°rög
){

248 
uI¡
 
msd
;

249 
I¡
 
exp
;

250 
uI¡
 
comb
;

251 *
c°¨t
;

252 *
c
;

253 c⁄° 
uByã
 *
u
;

254 *
s
, *
t
;

255 
I¡
 
dpd
;

256 
I¡
 
¥e
, 
e
;

257 
uI¡
 
uiw‹k
;

258 
uI¡
 
sour
;

261 
sour
=
	`UBTOUI
(
d32
->
byãs
);

263 
c
=
°rög
;

264 i‡(((
I¡
)
sour
)<0Ë*
c
++='-';

266 
comb
=(
sour
>>26)&0x1f;

267 
msd
=
COMBMSD
[
comb
];

268 
exp
=
COMBEXP
[
comb
];

270 i‡(
exp
==3) {

271 i‡(
msd
==0) {

272 
	`°r˝y
(
c
, "Inf");

273 
	`°r˝y
(
c
+3, "inity");

274  
°rög
;

276 i‡(
sour
&0x02000000Ë*
c
++='s';

277 
	`°r˝y
(
c
, "NaN");

278 
c
+=3;

279 i‡((
sour
&0x000fffff)==0Ë 
°rög
;

281 
exp
=0; 
msd
=0;

283 
exp
=”xp<<6)+((
sour
>>20)&0x3f)-
DECIMAL32_Büs
;

286 
c°¨t
=
c
;

287 i‡(
msd
Ë*
c
++='0'+()msd;

297 
	#dpd2ch¨
 
u
=&
BIN2CHAR
[
DPD2BIN
[
dpd
]*4]; \

	)

298 i‡(
c
!=
c°¨t
Ë{
	`mem˝y
(c, 
u
+1, 4); c+=3;} \

299 i‡(*
u
Ë{
	`mem˝y
(
c
, u+4-*u, 4); c+=*u;}

301 
dpd
=(
sour
>>10)&0x3ff;

302 
dpd2ch¨
;

303 
dpd
=(
sour
)&0x3ff;

304 
dpd2ch¨
;

306 i‡(
c
==
c°¨t
) *c++='0';

308 i‡(
exp
==0) {

309 *
c
='\0';

310  
°rög
;

314 
e
=0;

315 
¥e
=
c
-
c°¨t
+
exp
;

317 i‡(
exp
>0 || 
¥e
<-5) {

318 
e
=
¥e
-1;

319 
¥e
=1;

323 
s
=
c
-1;

324 i‡(
¥e
>0) {

325 *
dŸ©
=
c°¨t
+
¥e
;

326 i‡(
dŸ©
<
c
) {

327 
t
=
c
;

328 ; 
s
>=
dŸ©
; s--, 
t
--) *t=*s;

329 *
t
='.';

330 
c
++;

335 i‡(
e
!=0) {

336 *
c
++='E';

337 *
c
++='+';

338 i‡(
e
<0) {

339 *(
c
-1)='-';

340 
e
=-e;

342 
u
=&
BIN2CHAR
[
e
*4];

343 
	`mem˝y
(
c
, 
u
+4-*u, 4);

344 
c
+=*
u
;

346 *
c
='\0';

348  
°rög
;

352 
t
=
c
+1-
¥e
;

353 *(
t
+1)='\0';

354 ; 
s
>=
c°¨t
; s--, 
t
--) *t=*s;

355 
c
=
c°¨t
;

356 *
c
++='0';

357 *
c
++='.';

358 ; 
¥e
<0;Öª++Ë*
c
++='0';

360  
°rög
;

361 
	}
}

378 
decimÆ32
 * 
	$decimÆ32FromSåög
(
decimÆ32
 *
ªsu…
, c⁄° *
°rög
,

379 
decC⁄ãxt
 *
£t
) {

380 
decC⁄ãxt
 
dc
;

381 
decNumbî
 
dn
;

383 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL32
);

384 
dc
.
round
=
£t
->round;

386 
	`decNumbîFromSåög
(&
dn
, 
°rög
, &
dc
);

387 
	`decimÆ32FromNumbî
(
ªsu…
, &
dn
, &
dc
);

388 i‡(
dc
.
°©us
!=0) {

389 
	`decC⁄ãxtSëSètus
(
£t
, 
dc
.
°©us
);

391  
ªsu…
;

392 
	}
}

400 
uI¡
 
	$decimÆ32IsC™⁄iˇl
(c⁄° 
decimÆ32
 *
d32
) {

401 
decNumbî
 
dn
;

402 
decimÆ32
 
ˇn⁄
;

403 
decC⁄ãxt
 
dc
;

404 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL32
);

405 
	`decimÆ32ToNumbî
(
d32
, &
dn
);

406 
	`decimÆ32FromNumbî
(&
ˇn⁄
, &
dn
, &
dc
);

407  
	`memcmp
(
d32
, &
ˇn⁄
, 
DECIMAL32_Byãs
)==0;

408 
	}
}

417 
decimÆ32
 * 
	$decimÆ32C™⁄iˇl
(
decimÆ32
 *
ªsu…
, c⁄° decimÆ32 *
d32
) {

418 
decNumbî
 
dn
;

419 
decC⁄ãxt
 
dc
;

420 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL32
);

421 
	`decimÆ32ToNumbî
(
d32
, &
dn
);

422 
	`decimÆ32FromNumbî
(
ªsu…
, &
dn
, &
dc
);

423  
ªsu…
;

424 
	}
}

426 #i‡
DECTRACE
 || 
DECCHECK


431 
	#decimÆ32Sign
(
d
Ë(()(d)->
byãs
[0]>>7)

	)

434 
	#decimÆ32Comb
(
d
Ë(((d)->
byãs
[0] & 0x7c)>>2)

	)

437 
	#decimÆ32ExpC⁄
(
d
Ë((((d)->
byãs
[0] & 0x03)<<4Ë\

	)

438 | (()(
	gd
)->
	gbyãs
[1]>>4))

441 
	#decimÆ32SëSign
(
d
, 
b
Ë{ \

	)

442 (
	gd
)->
	gbyãs
[0]|=(()(
b
)<<7);}

447 
	#decimÆ32SëExpC⁄
(
d
, 
e
Ë{ \

	)

448 (
	gd
)->
	gbyãs
[0]|=(
uByã
)((
e
)>>4); \

449 (
	gd
)->
	gbyãs
[1]|=(
uByã
)(((
e
)&0x0F)<<4);}

456 
	$decimÆ32Show
(c⁄° 
decimÆ32
 *
d32
) {

457 
buf
[
DECIMAL32_Byãs
*2+1];

458 
I¡
 
i
, 
j
=0;

460 i‡(
DECLITEND
) {

461 
i
=0; i<
DECIMAL32_Byãs
; i++, 
j
+=2) {

462 
	`•rötf
(&
buf
[
j
], "%02x", 
d32
->
byãs
[3-
i
]);

464 
	`¥ötf
(" D32> %†[S:%d Cb:%02x Ec:%02x] LôéeEndün\n", 
buf
,

465 
d32
->
byãs
[3]>>7, (d32->bytes[3]>>2)&0x1f,

466 ((
d32
->
byãs
[3]&0x3)<<4)| (d32->bytes[2]>>4));

469 
i
=0; i<
DECIMAL32_Byãs
; i++, 
j
+=2) {

470 
	`•rötf
(&
buf
[
j
], "%02x", 
d32
->
byãs
[
i
]);

472 
	`¥ötf
(" D32> %†[S:%d Cb:%02x Ec:%02x] BigEndün\n", 
buf
,

473 
	`decimÆ32Sign
(
d32
), 
	`decimÆ32Comb
(d32), 
	`decimÆ32ExpC⁄
(d32));

475 
	}
}

	@src/decNumber/decimal32.h

20 #i‡!
deföed
(
DECIMAL32
)

21 
	#DECIMAL32


	)

22 
	#DEC32NAME
 "decimÆ32"

	)

23 
	#DEC32FULLNAME
 "DecimÆ 32-bô Numbî"

	)

24 
	#DEC32AUTHOR
 "MikêCowlishaw"

	)

27 
	#DECIMAL32_Byãs
 4

	)

28 
	#DECIMAL32_Pmax
 7

	)

29 
	#DECIMAL32_Emax
 96

	)

30 
	#DECIMAL32_Emö
 -95

	)

31 
	#DECIMAL32_Büs
 101

	)

32 
	#DECIMAL32_Såög
 15

	)

33 
	#DECIMAL32_Ec⁄L
 6

	)

35 
	#DECIMAL32_Ehigh
 (
DECIMAL32_Emax
+
DECIMAL32_Büs
-
DECIMAL32_Pmax
+1)

	)

38 #i‡
deföed
(
DECNUMDIGITS
)

39 #i‡(
DECNUMDIGITS
<
DECIMAL32_Pmax
)

40 #îr‹ 
decimÆ32
.
h
 
√eds
 
¥e
-
deföed
 
DECNUMDIGITS
>=7 
ß„
 
u£


44 #i‚de‡
DECNUMDIGITS


45 
	#DECNUMDIGITS
 
DECIMAL32_Pmax


	)

47 #i‚de‡
DECNUMBER


48 
	~"decNumbî.h
"

53 
uöt8_t
 
	mbyãs
[
DECIMAL32_Byãs
];

54 } 
	tdecimÆ32
;

58 #i‡!
deföed
(
DECIMAL_NaN
)

59 
	#DECIMAL_NaN
 0x7¯

	)

60 
	#DECIMAL_sNaN
 0x7ê

	)

61 
	#DECIMAL_Inf
 0x78

	)

68 
decimÆ32
 * 
decimÆ32FromSåög
(decimÆ32 *, c⁄° *, 
decC⁄ãxt
 *);

69 * 
decimÆ32ToSåög
(c⁄° 
decimÆ32
 *, *);

70 * 
decimÆ32ToEngSåög
(c⁄° 
decimÆ32
 *, *);

73 
decimÆ32
 * 
decimÆ32FromNumbî
(decimÆ32 *, c⁄° 
decNumbî
 *,

74 
decC⁄ãxt
 *);

75 
decNumbî
 * 
decimÆ32ToNumbî
(c⁄° 
decimÆ32
 *, decNumber *);

78 
uöt32_t
 
decimÆ32IsC™⁄iˇl
(c⁄° 
decimÆ32
 *);

79 
decimÆ32
 * 
decimÆ32C™⁄iˇl
(decimal32 *, const decimal32 *);

	@src/decNumber/decimal64.c

27 
	~<°rög.h
>

28 
	~<°dio.h
>

30 
	#DECNUMDIGITS
 16

31 
	~"decNumbî.h
"

32 
	~"decNumbîLoˇl.h
"

33 
	~"decimÆ64.h
"

34 

	)

38 
	#DPD2BIN
 
DPD2BINx


	)

39 
	#BIN2DPD
 
BIN2DPDx


	)

40 c⁄° 
uI¡
 
COMBEXP
[32], 
COMBMSD
[32];

41 c⁄° 
uSh‹t
 
DPD2BIN
[1024];

42 c⁄° 
uSh‹t
 
BIN2DPD
[1000];

43 c⁄° 
uByã
 
BIN2CHAR
[4001];

45 
decDigôsFromDPD
(
decNumbî
 *, c⁄° 
uI¡
 *, 
I¡
);

46 
decDigôsToDPD
(c⁄° 
decNumbî
 *, 
uI¡
 *, 
I¡
);

48 #i‡
DECTRACE
 || 
DECCHECK


49 
decimÆ64Show
(c⁄° 
decimÆ64
 *);

50 
decNumbîShow
(c⁄° 
decNumbî
 *);

55 
	#DEC_˛ór
(
d
Ë
	`mem£t
(d, 0, (*d))

	)

58 
	#DEC_BIN2CHAR
 1

	)

59 
	#DEC_DPD2BIN
 1

	)

60 
	#DEC_BIN2DPD
 1

61 
	~"decDPD.h
"

62 

	)

80 
decimÆ64
 * 
	$decimÆ64FromNumbî
(
decimÆ64
 *
d64
, c⁄° 
decNumbî
 *
dn
,

81 
decC⁄ãxt
 *
£t
) {

82 
uI¡
 
°©us
=0;

83 
I¡
 
´
;

84 
decNumbî
 
dw
;

85 
decC⁄ãxt
 
dc
;

86 
uI¡
 
comb
, 
exp
;

87 
uI¡
 
uiw‹k
;

88 
uI¡
 
èrg¨
[2]={0, 0};

89 
	#èrghi
 
èrg¨
[1]

90 
	#èrglo
 
èrg¨
[0]

91 

	)

97 
´
=
dn
->
exp⁄ít
+dn->
digôs
-1;

98 i‡(
dn
->
digôs
>
DECIMAL64_Pmax


99 || 
´
>
DECIMAL64_Emax


100 || 
´
<
DECIMAL64_Emö
) {

101 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL64
);

102 
dc
.
round
=
£t
->round;

103 
	`decNumbîPlus
(&
dw
, 
dn
, &
dc
);

105 
dw
.
bôs
|=
dn
->bôs&
DECNEG
;

106 
°©us
=
dc
.status;

107 
dn
=&
dw
;

110 i‡(
dn
->
bôs
&
DECSPECIAL
) {

111 i‡(
dn
->
bôs
&
DECINF
Ë
èrghi
=
DECIMAL_Inf
<<24;

113 i‡((*
dn
->
lsu
!=0 || dn->
digôs
>1)

114 && (
dn
->
digôs
<
DECIMAL64_Pmax
)) {

115 
	`decDigôsToDPD
(
dn
, 
èrg¨
, 0);

117 i‡(
dn
->
bôs
&
DECNAN
Ë
èrghi
|=
DECIMAL_NaN
<<24;

118 
èrghi
|=
DECIMAL_sNaN
<<24;

123 i‡(
	`decNumbîIsZîo
(
dn
)) {

125 i‡(
dn
->
exp⁄ít
<-
DECIMAL64_Büs
) {

126 
exp
=0;

127 
°©us
|=
DEC_Cœm≥d
;

130 
exp
=
dn
->
exp⁄ít
+
DECIMAL64_Büs
;

131 i‡(
exp
>
DECIMAL64_Ehigh
) {

132 
exp
=
DECIMAL64_Ehigh
;

133 
°©us
|=
DEC_Cœm≥d
;

136 
comb
=(
exp
>>5) & 0x18;

139 
uI¡
 
msd
;

140 
I¡
 
∑d
=0;

143 
exp
=(
uI¡
)(
dn
->
exp⁄ít
+
DECIMAL64_Büs
);

144 i‡(
exp
>
DECIMAL64_Ehigh
) {

145 
∑d
=
exp
-
DECIMAL64_Ehigh
;

146 
exp
=
DECIMAL64_Ehigh
;

147 
°©us
|=
DEC_Cœm≥d
;

151 i‡(
DECDPUN
==3 && 
∑d
==0) {

152 
uI¡
 
dpd
[6]={0,0,0,0,0,0};

153 
uI¡
 
i
;

154 
I¡
 
d
=
dn
->
digôs
;

155 
i
=0; 
d
>0; i++, d-=3Ë
dpd
[i]=
BIN2DPD
[
dn
->
lsu
[i]];

156 
èrglo
 =
dpd
[0];

157 
èrglo
|=
dpd
[1]<<10;

158 
èrglo
|=
dpd
[2]<<20;

159 i‡(
dn
->
digôs
>6) {

160 
èrglo
|=
dpd
[3]<<30;

161 
èrghi
 =
dpd
[3]>>2;

162 
èrghi
|=
dpd
[4]<<8;

164 
msd
=
dpd
[5];

167 
	`decDigôsToDPD
(
dn
, 
èrg¨
, 
∑d
);

169 
msd
=
èrghi
>>18;

170 
èrghi
&=0x0003ffff;

174 i‡(
msd
>=8Ë
comb
=0x18 | ((
exp
>>7) & 0x06) | (msd & 0x01);

175 
comb
=((
exp
>>5Ë& 0x18Ë| 
msd
;

177 
èrghi
|=
comb
<<26;

178 
èrghi
|=(
exp
&0xff)<<18;

181 i‡(
dn
->
bôs
&
DECNEG
Ë
èrghi
|=0x80000000;

184 i‡(
DECLITEND
) {

186 
	`UBFROMUI
(
d64
->
byãs
, 
èrg¨
[0]);

187 
	`UBFROMUI
(
d64
->
byãs
+4, 
èrg¨
[1]);

191 
	`UBFROMUI
(
d64
->
byãs
, 
èrg¨
[1]);

192 
	`UBFROMUI
(
d64
->
byãs
+4, 
èrg¨
[0]);

195 i‡(
°©us
!=0Ë
	`decC⁄ãxtSëSètus
(
£t
, status);

197  
d64
;

198 
	}
}

206 
decNumbî
 * 
	$decimÆ64ToNumbî
(c⁄° 
decimÆ64
 *
d64
, 
decNumbî
 *
dn
) {

207 
uI¡
 
msd
;

208 
uI¡
 
exp
;

209 
uI¡
 
comb
;

210 
I¡
 
√ed
;

211 
uI¡
 
uiw‹k
;

212 
uI¡
 
souør
[2];

213 
	#sourhi
 
souør
[1]

214 
	#souæo
 
souør
[0]

215 

	)

217 i‡(
DECLITEND
) {

218 
souæo
=
	`UBTOUI
(
d64
->
byãs
 );

219 
sourhi
=
	`UBTOUI
(
d64
->
byãs
+4);

222 
sourhi
=
	`UBTOUI
(
d64
->
byãs
 );

223 
souæo
=
	`UBTOUI
(
d64
->
byãs
+4);

226 
comb
=(
sourhi
>>26)&0x1f;

228 
	`decNumbîZîo
(
dn
);

229 i‡(
sourhi
&0x80000000Ë
dn
->
bôs
=
DECNEG
;

231 
msd
=
COMBMSD
[
comb
];

232 
exp
=
COMBEXP
[
comb
];

234 i‡(
exp
==3) {

235 i‡(
msd
==0) {

236 
dn
->
bôs
|=
DECINF
;

237  
dn
;

239 i‡(
sourhi
&0x02000000Ë
dn
->
bôs
|=
DECSNAN
;

240 
dn
->
bôs
|=
DECNAN
;

241 
msd
=0;

244 
dn
->
exp⁄ít
=(
exp
<<8)+((
sourhi
>>18)&0xff)-
DECIMAL64_Büs
;

248 
sourhi
&=0x0003ffff;

249 i‡(
msd
) {

250 
sourhi
|=
msd
<<18;

251 
√ed
=6;

254 i‡(!
sourhi
) {

255 i‡(!
souæo
Ë 
dn
;

256 
√ed
=3;

257 i‡(
souæo
&0xc0000000Ë
√ed
++;

261 
√ed
=4;

262 i‡(
sourhi
&0x0003ff00Ë
√ed
++;

266 
	`decDigôsFromDPD
(
dn
, 
souør
, 
√ed
);

267  
dn
;

268 
	}
}

285 * 
	$decimÆ64ToEngSåög
(c⁄° 
decimÆ64
 *
d64
, *
°rög
){

286 
decNumbî
 
dn
;

287 
	`decimÆ64ToNumbî
(
d64
, &
dn
);

288 
	`decNumbîToEngSåög
(&
dn
, 
°rög
);

289  
°rög
;

290 
	}
}

292 * 
	$decimÆ64ToSåög
(c⁄° 
decimÆ64
 *
d64
, *
°rög
){

293 
uI¡
 
msd
;

294 
I¡
 
exp
;

295 
uI¡
 
comb
;

296 *
c°¨t
;

297 *
c
;

298 c⁄° 
uByã
 *
u
;

299 *
s
, *
t
;

300 
I¡
 
dpd
;

301 
I¡
 
¥e
, 
e
;

302 
uI¡
 
uiw‹k
;

304 
uI¡
 
souør
[2];

305 
	#sourhi
 
souør
[1]

306 
	#souæo
 
souør
[0]

307 

	)

309 i‡(
DECLITEND
) {

310 
souæo
=
	`UBTOUI
(
d64
->
byãs
 );

311 
sourhi
=
	`UBTOUI
(
d64
->
byãs
+4);

314 
sourhi
=
	`UBTOUI
(
d64
->
byãs
 );

315 
souæo
=
	`UBTOUI
(
d64
->
byãs
+4);

318 
c
=
°rög
;

319 i‡(((
I¡
)
sourhi
)<0Ë*
c
++='-';

321 
comb
=(
sourhi
>>26)&0x1f;

322 
msd
=
COMBMSD
[
comb
];

323 
exp
=
COMBEXP
[
comb
];

325 i‡(
exp
==3) {

326 i‡(
msd
==0) {

327 
	`°r˝y
(
c
, "Inf");

328 
	`°r˝y
(
c
+3, "inity");

329  
°rög
;

331 i‡(
sourhi
&0x02000000Ë*
c
++='s';

332 
	`°r˝y
(
c
, "NaN");

333 
c
+=3;

334 i‡(
souæo
==0 && (
sourhi
&0x0003ffff)==0Ë 
°rög
;

336 
exp
=0; 
msd
=0;

338 
exp
=”xp<<8)+((
sourhi
>>18)&0xff)-
DECIMAL64_Büs
;

341 
c°¨t
=
c
;

342 i‡(
msd
Ë*
c
++='0'+()msd;

352 
	#dpd2ch¨
 
u
=&
BIN2CHAR
[
DPD2BIN
[
dpd
]*4]; \

	)

353 i‡(
c
!=
c°¨t
Ë{
	`mem˝y
(c, 
u
+1, 4); c+=3;} \

354 i‡(*
u
Ë{
	`mem˝y
(
c
, u+4-*u, 4); c+=*u;}

356 
dpd
=(
sourhi
>>8)&0x3ff;

357 
dpd2ch¨
;

358 
dpd
=((
sourhi
&0xff)<<2Ë| (
souæo
>>30);

359 
dpd2ch¨
;

360 
dpd
=(
souæo
>>20)&0x3ff;

361 
dpd2ch¨
;

362 
dpd
=(
souæo
>>10)&0x3ff;

363 
dpd2ch¨
;

364 
dpd
=(
souæo
)&0x3ff;

365 
dpd2ch¨
;

367 i‡(
c
==
c°¨t
) *c++='0';

369 i‡(
exp
==0) {

370 *
c
='\0';

371  
°rög
;

375 
e
=0;

376 
¥e
=
c
-
c°¨t
+
exp
;

378 i‡(
exp
>0 || 
¥e
<-5) {

379 
e
=
¥e
-1;

380 
¥e
=1;

384 
s
=
c
-1;

385 i‡(
¥e
>0) {

386 *
dŸ©
=
c°¨t
+
¥e
;

387 i‡(
dŸ©
<
c
) {

388 
t
=
c
;

389 ; 
s
>=
dŸ©
; s--, 
t
--) *t=*s;

390 *
t
='.';

391 
c
++;

396 i‡(
e
!=0) {

397 *
c
++='E';

398 *
c
++='+';

399 i‡(
e
<0) {

400 *(
c
-1)='-';

401 
e
=-e;

403 
u
=&
BIN2CHAR
[
e
*4];

404 
	`mem˝y
(
c
, 
u
+4-*u, 4);

405 
c
+=*
u
;

407 *
c
='\0';

409  
°rög
;

413 
t
=
c
+1-
¥e
;

414 *(
t
+1)='\0';

415 ; 
s
>=
c°¨t
; s--, 
t
--) *t=*s;

416 
c
=
c°¨t
;

417 *
c
++='0';

418 *
c
++='.';

419 ; 
¥e
<0;Öª++Ë*
c
++='0';

421  
°rög
;

422 
	}
}

439 
decimÆ64
 * 
	$decimÆ64FromSåög
(
decimÆ64
 *
ªsu…
, c⁄° *
°rög
,

440 
decC⁄ãxt
 *
£t
) {

441 
decC⁄ãxt
 
dc
;

442 
decNumbî
 
dn
;

444 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL64
);

445 
dc
.
round
=
£t
->round;

447 
	`decNumbîFromSåög
(&
dn
, 
°rög
, &
dc
);

449 
	`decimÆ64FromNumbî
(
ªsu…
, &
dn
, &
dc
);

450 i‡(
dc
.
°©us
!=0) {

451 
	`decC⁄ãxtSëSètus
(
£t
, 
dc
.
°©us
);

453  
ªsu…
;

454 
	}
}

462 
uI¡
 
	$decimÆ64IsC™⁄iˇl
(c⁄° 
decimÆ64
 *
d64
) {

463 
decNumbî
 
dn
;

464 
decimÆ64
 
ˇn⁄
;

465 
decC⁄ãxt
 
dc
;

466 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL64
);

467 
	`decimÆ64ToNumbî
(
d64
, &
dn
);

468 
	`decimÆ64FromNumbî
(&
ˇn⁄
, &
dn
, &
dc
);

469  
	`memcmp
(
d64
, &
ˇn⁄
, 
DECIMAL64_Byãs
)==0;

470 
	}
}

479 
decimÆ64
 * 
	$decimÆ64C™⁄iˇl
(
decimÆ64
 *
ªsu…
, c⁄° decimÆ64 *
d64
) {

480 
decNumbî
 
dn
;

481 
decC⁄ãxt
 
dc
;

482 
	`decC⁄ãxtDeÁu…
(&
dc
, 
DEC_INIT_DECIMAL64
);

483 
	`decimÆ64ToNumbî
(
d64
, &
dn
);

484 
	`decimÆ64FromNumbî
(
ªsu…
, &
dn
, &
dc
);

485  
ªsu…
;

486 
	}
}

488 #i‡
DECTRACE
 || 
DECCHECK


493 
	#decimÆ64Sign
(
d
Ë(()(d)->
byãs
[0]>>7)

	)

496 
	#decimÆ64Comb
(
d
Ë(((d)->
byãs
[0] & 0x7c)>>2)

	)

499 
	#decimÆ64ExpC⁄
(
d
Ë((((d)->
byãs
[0] & 0x03)<<6Ë\

	)

500 | (()(
	gd
)->
	gbyãs
[1]>>2))

503 
	#decimÆ64SëSign
(
d
, 
b
Ë{ \

	)

504 (
	gd
)->
	gbyãs
[0]|=(()(
b
)<<7);}

509 
	#decimÆ64SëExpC⁄
(
d
, 
e
Ë{ \

	)

510 (
	gd
)->
	gbyãs
[0]|=(
uByã
)((
e
)>>6); \

511 (
	gd
)->
	gbyãs
[1]|=(
uByã
)(((
e
)&0x3F)<<2);}

518 
	$decimÆ64Show
(c⁄° 
decimÆ64
 *
d64
) {

519 
buf
[
DECIMAL64_Byãs
*2+1];

520 
I¡
 
i
, 
j
=0;

522 i‡(
DECLITEND
) {

523 
i
=0; i<
DECIMAL64_Byãs
; i++, 
j
+=2) {

524 
	`•rötf
(&
buf
[
j
], "%02x", 
d64
->
byãs
[7-
i
]);

526 
	`¥ötf
(" D64> %†[S:%d Cb:%02x Ec:%02x] LôéeEndün\n", 
buf
,

527 
d64
->
byãs
[7]>>7, (d64->bytes[7]>>2)&0x1f,

528 ((
d64
->
byãs
[7]&0x3)<<6)| (d64->bytes[6]>>2));

531 
i
=0; i<
DECIMAL64_Byãs
; i++, 
j
+=2) {

532 
	`•rötf
(&
buf
[
j
], "%02x", 
d64
->
byãs
[
i
]);

534 
	`¥ötf
(" D64> %†[S:%d Cb:%02x Ec:%02x] BigEndün\n", 
buf
,

535 
	`decimÆ64Sign
(
d64
), 
	`decimÆ64Comb
(d64), 
	`decimÆ64ExpC⁄
(d64));

537 
	}
}

544 #i‡
DECDPUN
==3

545 
	#DEC_DPD2BIN
 1

	)

547 
	#DEC_DPD2BCD
 1

	)

549 
	~"decDPD.h
"

556 
	#DECMAX754
 34

	)

557 
	#DECMAXUNITS
 ((
DECMAX754
+
DECDPUN
-1)/DECDPUN)

	)

569 c⁄° 
uI¡
 
	gCOMBEXP
[32]={0, 0, 0, 0, 0, 0, 0, 0,

573 c⁄° 
uI¡
 
	gCOMBMSD
[32]={0, 1, 2, 3, 4, 5, 6, 7,

600 #i‡
DECDPUN
<=4

604 c⁄° 
uI¡
 
	gmu…õs
[]={131073, 26215, 5243, 1049, 210};

606 
	#QUOT10
(
u
, 
n
Ë((((
uI¡
)(u)>>“))*
mu…õs
[n])>>17)

	)

608 
	$decDigôsToDPD
(c⁄° 
decNumbî
 *
dn
, 
uI¡
 *
èrg
, 
I¡
 
shi·
) {

609 
I¡
 
cut
;

610 
I¡
 
n
;

611 
I¡
 
digôs
=
dn
->digits;

612 
uI¡
 
dpd
;

613 
uI¡
 
bö
;

614 
uI¡
 *
uout
=
èrg
;

615 
uI¡
 
uoff
=0;

616 c⁄° 
Unô
 *
öu
=
dn
->
lsu
;

617 
Unô
 
u¨
[
DECMAXUNITS
];

618 #i‡
DECDPUN
!=3

619 
Unô
 
ö
;

622 i‡(
shi·
!=0) {

626 c⁄° 
Unô
 *
sour˚
;

627 
Unô
 *
èrgë
, *
fú°
;

628 
uI¡
 
√xt
=0;

630 
sour˚
=
dn
->
lsu
+
	`D2U
(
digôs
)-1;

631 
èrgë
=
u¨
+
	`D2U
(
digôs
)-1+D2U(
shi·
);

632 
cut
=
DECDPUN
-
	`MSUDIGITS
(
shi·
);

633 i‡(
cut
==0) {

634 ; 
sour˚
>=
dn
->
lsu
; sour˚--, 
èrgë
--) *target=*source;

637 
fú°
=
u¨
+
	`D2U
(
digôs
+
shi·
)-1;

638 ; 
sour˚
>=
dn
->
lsu
; sour˚--, 
èrgë
--) {

640 #i‡
DECDPUN
<=4

641 
uI¡
 
quŸ
=
	`QUOT10
(*
sour˚
, 
cut
);

642 
uI¡
 
ªm
=*
sour˚
-
quŸ
*
DECPOWERS
[
cut
];

643 
√xt
+=
quŸ
;

645 
uI¡
 
ªm
=*
sour˚
%
DECPOWERS
[
cut
];

646 
√xt
+=*
sour˚
/
DECPOWERS
[
cut
];

648 i‡(
èrgë
<=
fú°
Ë*èrgë=(
Unô
)
√xt
;

649 
√xt
=
ªm
*
DECPOWERS
[
DECDPUN
-
cut
];

653 ; 
èrgë
>=
u¨
;Åarget--) {

654 *
èrgë
=(
Unô
)
√xt
;

655 
√xt
=0;

657 
digôs
+=
shi·
;

658 
öu
=
u¨
;

663 #i‡
DECDPUN
!=3

664 
ö
=*
öu
;

665 
cut
=0;

666 
bö
=0;

669 
n
=0; 
digôs
>0;Ç++) {

670 #i‡
DECDPUN
==3

671 
bö
=*
öu
;

672 
digôs
-=3;

673 
öu
++;

676 
Unô
 
dig
;

677 
I¡
 
j
;

678 
j
=0; j<3; j++) {

679 #i‡
DECDPUN
<=4

680 
Unô
 
ãmp
=(Unô)((
uI¡
)(
ö
*6554)>>16);

681 
dig
=(
Unô
)(
ö
-
	`X10
(
ãmp
));

682 
ö
=
ãmp
;

684 
dig
=
ö
%10;

685 
ö
=in/10;

687 i‡(
j
==0Ë
bö
=
dig
;

688 i‡(
j
==1Ë
bö
+=
	`X10
(
dig
);

689 
bö
+=
	`X100
(
dig
);

690 
digôs
--;

691 i‡(
digôs
==0) ;

692 
cut
++;

693 i‡(
cut
==
DECDPUN
Ë{
öu
++; 
ö
=*inu; cut=0;}

698 
dpd
=
BIN2DPD
[
bö
];

701 *
uout
|=
dpd
<<
uoff
;

702 
uoff
+=10;

703 i‡(
uoff
<32) ;

704 
uout
++;

705 
uoff
-=32;

706 *
uout
|=
dpd
>>(10-
uoff
);

709 
	}
}

734 
	$decDigôsFromDPD
(
decNumbî
 *
dn
, c⁄° 
uI¡
 *
sour
, 
I¡
 
de˛ës
) {

736 
uI¡
 
dpd
;

737 
I¡
 
n
;

738 
Unô
 *
uout
=
dn
->
lsu
;

739 
Unô
 *
œ°
=
uout
;

740 c⁄° 
uI¡
 *
uö
=
sour
;

741 
uI¡
 
uoff
=0;

743 #i‡
DECDPUN
!=3

744 
uI¡
 
bcd
;

745 
uI¡
 
nibbÀ
;

746 
Unô
 
out
=0;

747 
I¡
 
cut
=0;

749 #i‡
DECDPUN
>4

750 
uI¡
 c⁄° *
pow
;

754 
n
=
de˛ës
-1;Ç>=0;Ç--) {

755 
dpd
=*
uö
>>
uoff
;

756 
uoff
+=10;

757 i‡(
uoff
>32) {

758 
uö
++;

759 
uoff
-=32;

760 
dpd
|=*
uö
<<(10-
uoff
);

762 
dpd
&=0x3ff;

764 #i‡
DECDPUN
==3

765 i‡(
dpd
==0Ë*
uout
=0;

767 *
uout
=
DPD2BIN
[
dpd
];

768 
œ°
=
uout
;

770 
uout
++;

774 i‡(
dpd
==0) {

776 
cut
++;

777 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

778 i‡(
n
==0) ;

779 
cut
++;

780 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

781 
cut
++;

782 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

786 
bcd
=
DPD2BCD
[
dpd
];

789 
nibbÀ
=
bcd
 & 0x00f;

790 i‡(
nibbÀ
Ë
out
=(
Unô
)(out+nibbÀ*
DECPOWERS
[
cut
]);

791 
cut
++;

792 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

793 
bcd
>>=4;

799 i‡(
n
==0 && !
bcd
) ;

801 
nibbÀ
=
bcd
 & 0x00f;

802 i‡(
nibbÀ
Ë
out
=(
Unô
)(out+nibbÀ*
DECPOWERS
[
cut
]);

803 
cut
++;

804 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

805 
bcd
>>=4;

807 
nibbÀ
=
bcd
 & 0x00f;

808 i‡(
nibbÀ
Ë
out
=(
Unô
)(out+nibbÀ*
DECPOWERS
[
cut
]);

809 
cut
++;

810 i‡(
cut
==
DECDPUN
Ë{*
uout
=
out
; i‡(outË{
œ°
=uout; out=0;} uout++; cut=0;}

812 i‡(
cut
!=0) {

813 *
uout
=
out
;

814 i‡(
out
Ë
œ°
=
uout
;

821 
dn
->
digôs
=(
œ°
-dn->
lsu
)*
DECDPUN
+1;

823 #i‡
DECDPUN
>1

824 i‡(*
œ°
<10) ;

825 
dn
->
digôs
++;

826 #i‡
DECDPUN
>2

827 i‡(*
œ°
<100) ;

828 
dn
->
digôs
++;

829 #i‡
DECDPUN
>3

830 i‡(*
œ°
<1000) ;

831 
dn
->
digôs
++;

832 #i‡
DECDPUN
>4

833 
pow
=&
DECPOWERS
[4]; *
œ°
>=*pow;Öow++Ë
dn
->
digôs
++;

839 
	}
}

	@src/decNumber/decimal64.h

20 #i‡!
deföed
(
DECIMAL64
)

21 
	#DECIMAL64


	)

22 
	#DEC64NAME
 "decimÆ64"

	)

23 
	#DEC64FULLNAME
 "DecimÆ 64-bô Numbî"

	)

24 
	#DEC64AUTHOR
 "MikêCowlishaw"

	)

28 
	#DECIMAL64_Byãs
 8

	)

29 
	#DECIMAL64_Pmax
 16

	)

30 
	#DECIMAL64_Emax
 384

	)

31 
	#DECIMAL64_Emö
 -383

	)

32 
	#DECIMAL64_Büs
 398

	)

33 
	#DECIMAL64_Såög
 24

	)

34 
	#DECIMAL64_Ec⁄L
 8

	)

36 
	#DECIMAL64_Ehigh
 (
DECIMAL64_Emax
+
DECIMAL64_Büs
-
DECIMAL64_Pmax
+1)

	)

39 #i‡
deföed
(
DECNUMDIGITS
)

40 #i‡(
DECNUMDIGITS
<
DECIMAL64_Pmax
)

41 #îr‹ 
decimÆ64
.
h
 
√eds
 
¥e
-
deföed
 
DECNUMDIGITS
>=16 
ß„
 
u£


46 #i‚de‡
DECNUMDIGITS


47 
	#DECNUMDIGITS
 
DECIMAL64_Pmax


	)

49 #i‚de‡
DECNUMBER


50 
	~"decNumbî.h
"

55 
uöt8_t
 
	mbyãs
[
DECIMAL64_Byãs
];

56 } 
	tdecimÆ64
;

60 #i‡!
deföed
(
DECIMAL_NaN
)

61 
	#DECIMAL_NaN
 0x7¯

	)

62 
	#DECIMAL_sNaN
 0x7ê

	)

63 
	#DECIMAL_Inf
 0x78

	)

70 
decimÆ64
 * 
decimÆ64FromSåög
(decimÆ64 *, c⁄° *, 
decC⁄ãxt
 *);

71 * 
decimÆ64ToSåög
(c⁄° 
decimÆ64
 *, *);

72 * 
decimÆ64ToEngSåög
(c⁄° 
decimÆ64
 *, *);

75 
decimÆ64
 * 
decimÆ64FromNumbî
(decimÆ64 *, c⁄° 
decNumbî
 *,

76 
decC⁄ãxt
 *);

77 
decNumbî
 * 
decimÆ64ToNumbî
(c⁄° 
decimÆ64
 *, decNumber *);

80 
uöt32_t
 
decimÆ64IsC™⁄iˇl
(c⁄° 
decimÆ64
 *);

81 
decimÆ64
 * 
decimÆ64C™⁄iˇl
(decimal64 *, const decimal64 *);

	@src/decNumber/example1.c

11 
	#DECNUMDIGITS
 34

12 
	~"decNumbî.h
"

13 
	~<°dio.h
>

14 

	)

15 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
decNumbî
 
a
, 
b
;

17 
decC⁄ãxt
 
£t
;

18 
°rög
[
DECNUMDIGITS
+14];

20 
	`decC⁄ãxtTe°Endün
(0);

22 i‡(
¨gc
<3) {

23 
	`¥ötf
("Please supplyÅwoÇumbersÅoádd.\n");

26 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

27 
£t
.
å≠s
=0;

28 
£t
.
digôs
=
DECNUMDIGITS
;

30 
	`decNumbîFromSåög
(&
a
, 
¨gv
[1], &
£t
);

31 
	`decNumbîFromSåög
(&
b
, 
¨gv
[2], &
£t
);

33 
	`decNumbîAdd
(&
a
, &a, &
b
, &
£t
);

34 
	`decNumbîToSåög
(&
a
, 
°rög
);

36 
	`¥ötf
("%†+ %†=> %s\n", 
¨gv
[1],árgv[2], 
°rög
);

38 
	}
}

	@src/decNumber/example2.c

11 
	#DECNUMDIGITS
 38

12 
	~"decNumbî.h
"

13 
	~<°dio.h
>

14 

	)

15 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
√ed
=3;

17 i‡(
¨gc
<
√ed
+1) {

18 
	`¥ötf
("PÀa£ suµly %dÇumbî(s).\n", 
√ed
);

23 
decNumbî
 
⁄e
, 
mtwo
, 
hundªd
;

24 
decNumbî
 
°¨t
, 
øã
, 
yórs
;

25 
decNumbî
 
tŸÆ
;

26 
decC⁄ãxt
 
£t
;

27 
°rög
[
DECNUMDIGITS
+14];

29 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

30 
£t
.
å≠s
=0;

31 
£t
.
digôs
=25;

32 
	`decNumbîFromSåög
(&
⁄e
, "1", &
£t
);

33 
	`decNumbîFromSåög
(&
mtwo
, "-2", &
£t
);

34 
	`decNumbîFromSåög
(&
hundªd
, "100", &
£t
);

36 
	`decNumbîFromSåög
(&
°¨t
, 
¨gv
[1], &
£t
);

37 
	`decNumbîFromSåög
(&
øã
, 
¨gv
[2], &
£t
);

38 
	`decNumbîFromSåög
(&
yórs
, 
¨gv
[3], &
£t
);

40 
	`decNumbîDivide
(&
øã
, &øã, &
hundªd
, &
£t
);

41 
	`decNumbîAdd
(&
øã
, &øã, &
⁄e
, &
£t
);

42 
	`decNumbîPowî
(&
øã
, &øã, &
yórs
, &
£t
);

43 
	`decNumbîMu…ùly
(&
tŸÆ
, &
øã
, &
°¨t
, &
£t
);

44 
	`decNumbîResˇÀ
(&
tŸÆ
, &tŸÆ, &
mtwo
, &
£t
);

46 
	`decNumbîToSåög
(&
tŸÆ
, 
°rög
);

47 
	`¥ötf
("%sát %s%% for %s years => %s\n",

48 
¨gv
[1],árgv[2],árgv[3], 
°rög
);

52 
	}
}

	@src/decNumber/example3.c

11 
	#DECNUMDIGITS
 38

12 
	~"decNumbî.h
"

13 
	~<°dio.h
>

14 

	)

15 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
√ed
=3;

17 i‡(
¨gc
<
√ed
+1) {

18 
	`¥ötf
("PÀa£ suµly %dÇumbî(s).\n", 
√ed
);

23 
decNumbî
 
⁄e
, 
mtwo
, 
hundªd
;

24 
decNumbî
 
°¨t
, 
øã
, 
yórs
;

25 
decNumbî
 
tŸÆ
;

26 
decC⁄ãxt
 
£t
;

27 
°rög
[
DECNUMDIGITS
+14];

29 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

30 
£t
.
å≠s
=0;

31 
£t
.
digôs
=25;

32 
	`decNumbîFromSåög
(&
⁄e
, "1", &
£t
);

33 
	`decNumbîFromSåög
(&
mtwo
, "-2", &
£t
);

34 
	`decNumbîFromSåög
(&
hundªd
, "100", &
£t
);

37 
	`decNumbîFromSåög
(&
°¨t
, 
¨gv
[1], &
£t
);

38 
	`decNumbîFromSåög
(&
øã
, 
¨gv
[2], &
£t
);

39 
	`decNumbîFromSåög
(&
yórs
, 
¨gv
[3], &
£t
);

40 i‡(
£t
.
°©us
 & 
DEC_Eº‹s
) {

41 
	`¥ötf
("An inputárgument word was invalid [%s]\n",

42 
	`decC⁄ãxtSètusToSåög
(&
£t
));

45 
	`decNumbîDivide
(&
øã
, &øã, &
hundªd
, &
£t
);

46 
	`decNumbîAdd
(&
øã
, &øã, &
⁄e
, &
£t
);

47 
	`decNumbîPowî
(&
øã
, &øã, &
yórs
, &
£t
);

48 
	`decNumbîMu…ùly
(&
tŸÆ
, &
øã
, &
°¨t
, &
£t
);

49 
	`decNumbîResˇÀ
(&
tŸÆ
, &tŸÆ, &
mtwo
, &
£t
);

50 i‡(
£t
.
°©us
 & 
DEC_Eº‹s
) {

51 
£t
.
°©us
 &
DEC_Eº‹s
;

52 
	`¥ötf
("Result couldÇot be calculated [%s]\n",

53 
	`decC⁄ãxtSètusToSåög
(&
£t
));

58 
	`decNumbîToSåög
(&
tŸÆ
, 
°rög
);

59 
	`¥ötf
("%sát %s%% for %s years => %s\n",

60 
¨gv
[1],árgv[2],árgv[3], 
°rög
);

64 
	}
}

	@src/decNumber/example4.c

11 
	#DECNUMDIGITS
 38

12 
	~"decNumbî.h
"

13 
	~<°dio.h
>

14 

	)

16 
	~<sig«l.h
>

17 
	~<£tjmp.h
>

19 
jmp_buf
 
	g¥e£rve
;

21 
sig«lH™dÀr
();

22 
	$sig«lH™dÀr
(
sig
) {

23 
	`sig«l
(
SIGFPE
, 
sig«lH™dÀr
);

24 
	`l⁄gjmp
(
¥e£rve
, 
sig
);

25 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[]) {

28 
decNumbî
 
a
, 
b
;

29 
decC⁄ãxt
 
£t
;

30 
°rög
[
DECNUMDIGITS
+14];

31 
vÆue
;

33 i‡(
¨gc
<3) {

34 
	`¥ötf
("Please supplyÅwoÇumbersÅoádd.\n");

37 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

40 
	`sig«l
(
SIGFPE
, 
sig«lH™dÀr
);

41 
vÆue
=
	`£tjmp
(
¥e£rve
);

42 i‡(
vÆue
) {

43 
£t
.
°©us
 &
DEC_Eº‹s
;

44 
	`¥ötf
("Sig«»å≠≥d [%s].\n", 
	`decC⁄ãxtSètusToSåög
(&
£t
));

51 
£t
.
digôs
=
DECNUMDIGITS
;

53 
	`decNumbîFromSåög
(&
a
, 
¨gv
[1], &
£t
);

54 
	`decNumbîFromSåög
(&
b
, 
¨gv
[2], &
£t
);

56 
	`decNumbîAdd
(&
a
, &a, &
b
, &
£t
);

57 
	`decNumbîToSåög
(&
a
, 
°rög
);

59 
	`¥ötf
("%†+ %†=> %s\n", 
¨gv
[1],árgv[2], 
°rög
);

61 
	}
}

	@src/decNumber/example5.c

10 
	~"decimÆ64.h
"

11 
	~<°dio.h
>

13 
	$maö
(
¨gc
, *
¨gv
[]) {

14 
decimÆ64
 
a
;

15 
decNumbî
 
d
;

16 
decC⁄ãxt
 
£t
;

17 
°rög
[
DECIMAL64_Såög
];

18 
hexes
[25];

19 
i
;

21 i‡(
¨gc
<2) {

22 
	`¥ötf
("Please supplyáÇumber.\n");

25 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_DECIMAL64
);

27 
	`decimÆ64FromSåög
(&
a
, 
¨gv
[1], &
£t
);

29 
i
=0; i<8; i++) {

30 
	`•rötf
(&
hexes
[
i
*3], "%02x ", 
a
.
byãs
[i]);

32 
	`decimÆ64ToNumbî
(&
a
, &
d
);

33 
	`decNumbîToSåög
(&
d
, 
°rög
);

34 
	`¥ötf
("%†=> %s=> %s\n", 
¨gv
[1], 
hexes
, 
°rög
);

36 
	}
}

	@src/decNumber/example6.c

11 
	~"decPacked.h
"

12 
	~<°dio.h
>

14 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
decNumbî
 
⁄e
, 
mtwo
, 
hundªd
;

17 
decNumbî
 
°¨t
, 
øã
, 
yórs
;

18 
decNumbî
 
tŸÆ
;

19 
decC⁄ãxt
 
£t
;

21 
uöt8_t
 
°¨çack
[]={0x01, 0x00, 0x00, 0x0C};

22 
öt32_t
 
°¨tsˇÀ
=0;

23 
uöt8_t
 
øã∑ck
[]={0x06, 0x5C};

24 
öt32_t
 
øãsˇÀ
=1;

25 
uöt8_t
 
yór•ack
[]={0x02, 0x0C};

26 
öt32_t
 
yórssˇÀ
=0;

27 
uöt8_t
 
ª•ack
[16];

28 
öt32_t
 
ªssˇÀ
;

29 
hexes
[49];

30 
i
;

32 i‡(
¨gc
<0Ë
	`¥ötf
("%s", 
¨gv
[1]);

34 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_BASE
);

35 
£t
.
å≠s
=0;

36 
£t
.
digôs
=25;

37 
	`decNumbîFromSåög
(&
⁄e
, "1", &
£t
);

38 
	`decNumbîFromSåög
(&
mtwo
, "-2", &
£t
);

39 
	`decNumbîFromSåög
(&
hundªd
, "100", &
£t
);

41 
	`decPackedToNumbî
(
°¨çack
, (°¨çack), &
°¨tsˇÀ
, &
°¨t
);

42 
	`decPackedToNumbî
(
øã∑ck
, ‘©ïack), &
øãsˇÀ
, &
øã
);

43 
	`decPackedToNumbî
(
yór•ack
, (yór•ack), &
yórssˇÀ
, &
yórs
);

45 
	`decNumbîDivide
(&
øã
, &øã, &
hundªd
, &
£t
);

46 
	`decNumbîAdd
(&
øã
, &øã, &
⁄e
, &
£t
);

47 
	`decNumbîPowî
(&
øã
, &øã, &
yórs
, &
£t
);

48 
	`decNumbîMu…ùly
(&
tŸÆ
, &
øã
, &
°¨t
, &
£t
);

49 
	`decNumbîResˇÀ
(&
tŸÆ
, &tŸÆ, &
mtwo
, &
£t
);

51 
	`decPackedFromNumbî
(
ª•ack
, ‘e•ack), &
ªssˇÀ
, &
tŸÆ
);

54 
i
=0; i<16; i++) {

55 
	`•rötf
(&
hexes
[
i
*3], "%02x ", 
ª•ack
[i]);

57 
	`¥ötf
("Resu…: %†(sˇÀ=%ld)\n", 
hexes
, ()
ªssˇÀ
);

61 
	}
}

	@src/decNumber/example7.c

12 
	~"decQuad.h
"

13 
	~<°dio.h
>

15 
	$maö
(
¨gc
, *
¨gv
[]) {

16 
decQuad
 
a
, 
b
;

17 
decC⁄ãxt
 
£t
;

18 
°rög
[
DECQUAD_Såög
];

20 
	`decC⁄ãxtTe°Endün
(0);

22 i‡(
¨gc
<3) {

23 
	`¥ötf
("Please supplyÅwoÇumbersÅoádd.\n");

26 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_DECQUAD
);

28 
	`decQuadFromSåög
(&
a
, 
¨gv
[1], &
£t
);

29 
	`decQuadFromSåög
(&
b
, 
¨gv
[2], &
£t
);

30 
	`decQuadAdd
(&
a
, &a, &
b
, &
£t
);

31 
	`decQuadToSåög
(&
a
, 
°rög
);

33 
	`¥ötf
("%†+ %†=> %s\n", 
¨gv
[1],árgv[2], 
°rög
);

35 
	}
}

	@src/decNumber/example8.c

13 
	~"decQuad.h
"

14 
	~"decimÆ128.h
"

15 
	~<°dio.h
>

17 
	$maö
(
¨gc
, *
¨gv
[]) {

18 
decQuad
 
a
;

19 
decNumbî
 
numa
, 
numb
;

20 
decC⁄ãxt
 
£t
;

21 
°rög
[
DECQUAD_Såög
];

23 i‡(
¨gc
<3) {

24 
	`¥ötf
("Please supplyÅwoÇumbers forÖower(2*a, b).\n");

27 
	`decC⁄ãxtDeÁu…
(&
£t
, 
DEC_INIT_DECQUAD
);

29 
	`decQuadFromSåög
(&
a
, 
¨gv
[1], &
£t
);

30 
	`decQuadAdd
(&
a
, &a, &a, &
£t
);

31 
	`decQuadToNumbî
(&
a
, &
numa
);

32 
	`decNumbîFromSåög
(&
numb
, 
¨gv
[2], &
£t
);

33 
	`decNumbîPowî
(&
numa
, &numa, &
numb
, &
£t
);

34 
	`decQuadFromNumbî
(&
a
, &
numa
, &
£t
);

35 
	`decQuadToSåög
(&
a
, 
°rög
);

37 
	`¥ötf
("powî(2*%s, %sË=> %s\n", 
¨gv
[1],árgv[2], 
°rög
);

39 
	}
}

	@src/exec_stack.h

1 #i‚de‡
EXEC_STACK_H


2 
	#EXEC_STACK_H


	)

3 
	~<°ddef.h
>

4 
	~<°döt.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~"jv_Æloc.h
"

38 
	sdëîmöe_Æignmít
 {

39 
	mx
;

40 uni⁄ { 
	mi
; 
	md
; 
uöt64_t
 
	mu64
; 
size_t
 
	msz
; * 
	m±r
; } 
	mu
;

42 íum {
	mALIGNMENT
 = 
off£tof
(
dëîmöe_Æignmít
, 
u
)};

44 
size_t
 
	$Æign_round_up
(
size_t
 
sz
) {

45  ((
sz
 + (
ALIGNMENT
 - 1)) / ALIGNMENT) * ALIGNMENT;

46 
	}
}

48 
	t°ack_±r
;

50 
	s°ack
 {

51 * 
	mmem_íd
;

52 
°ack_±r
 
	mbound
;

53 
°ack_±r
 
	mlimô
;

56 
	$°ack_öô
(
°ack
* 
s
) {

57 
s
->
mem_íd
 = 0;

58 
s
->
bound
 = 
ALIGNMENT
;

59 
s
->
limô
 = 0;

60 
	}
}

62 
	$°ack_ª£t
(
°ack
* 
s
) {

63 
	`as£π
(
s
->
limô
 == 0 && "stack freed whileÇotÉmpty");

64 * 
mem_°¨t
 = 
s
->
mem_íd
 - ( -s->
bound
 + 
ALIGNMENT
);

65 
	`‰ì
(
mem_°¨t
);

66 
	`°ack_öô
(
s
);

67 
	}
}

69 
	$°ack_p›_wûl_‰ì
(
°ack
* 
s
, 
°ack_±r
 
p
) {

70  
p
 =
s
->
limô
;

71 
	}
}

73 * 
	$°ack_block
(
°ack
* 
s
, 
°ack_±r
 
p
) {

74  (*)(
s
->
mem_íd
 + 
p
);

75 
	}
}

77 
°ack_±r
* 
	$°ack_block_√xt
(
°ack
* 
s
, 
°ack_±r
 
p
) {

78  &((
°ack_±r
*)
	`°ack_block
(
s
, 
p
))[-1];

79 
	}
}

81 
	$°ack_ªÆloˇã
(
°ack
* 
s
, 
size_t
 
sz
) {

82 
ﬁd_mem_Àngth
 = -(
s
->
bound
Ë+ 
ALIGNMENT
;

83 * 
ﬁd_mem_°¨t
 = 
s
->
mem_íd
 - 
ﬁd_mem_Àngth
;

85 
√w_mem_Àngth
 = 
	`Æign_round_up
((
ﬁd_mem_Àngth
 + 
sz
 + 256) * 2);

86 * 
√w_mem_°¨t
 = 
	`jv_mem_ªÆloc
(
ﬁd_mem_°¨t
, 
√w_mem_Àngth
);

87 
	`memmove
(
√w_mem_°¨t
 + (
√w_mem_Àngth
 - 
ﬁd_mem_Àngth
),

88 
√w_mem_°¨t
, 
ﬁd_mem_Àngth
);

89 
s
->
mem_íd
 = 
√w_mem_°¨t
 + 
√w_mem_Àngth
;

90 
s
->
bound
 = -(
√w_mem_Àngth
 - 
ALIGNMENT
);

91 
	}
}

93 
°ack_±r
 
	$°ack_push_block
(
°ack
* 
s
, 
°ack_±r
 
p
, 
size_t
 
sz
) {

94 
Æloc_sz
 = 
	`Æign_round_up
(
sz
Ë+ 
ALIGNMENT
;

95 
°ack_±r
 
r
 = 
s
->
limô
 - 
Æloc_sz
;

96 i‡(
r
 < 
s
->
bound
) {

97 
	`°ack_ªÆloˇã
(
s
, 
Æloc_sz
);

99 
s
->
limô
 = 
r
;

100 *
	`°ack_block_√xt
(
s
, 
r
Ë
p
;

101  
r
;

102 
	}
}

104 
°ack_±r
 
	$°ack_p›_block
(
°ack
* 
s
, 
°ack_±r
 
p
, 
size_t
 
sz
) {

105 
°ack_±r
 
r
 = *
	`°ack_block_√xt
(
s
, 
p
);

106 i‡(
p
 =
s
->
limô
) {

107 
Æloc_sz
 = 
	`Æign_round_up
(
sz
Ë+ 
ALIGNMENT
;

108 
s
->
limô
 +
Æloc_sz
;

110  
r
;

111 
	}
}

	@src/execute.c

1 
	~<as£π.h
>

2 
	~<î∫o.h
>

3 
	~<°d¨g.h
>

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°döt.h
>

7 
	~<sys/°©.h
>

9 
	~"exec_°ack.h
"

10 
	~"byãcode.h
"

12 
	~"jv_Æloc.h
"

13 
	~"jq_∑r£r.h
"

14 
	~"locfûe.h
"

15 
	~"jv.h
"

16 
	~"jq.h
"

17 
	~"∑r£r.h
"

18 
	~"buûtö.h
"

19 
	~"utû.h
"

20 
	~"lökî.h
"

22 
	sjq_°©e
 {

23 (*
	mnomem_h™dÀr
)(*);

24 *
	mnomem_h™dÀr_d©a
;

25 
byãcode
* 
	mbc
;

27 
jq_msg_cb
 
	mîr_cb
;

28 *
	mîr_cb_d©a
;

29 
jv
 
	mîr‹
;

31 
°ack
 
	m°k
;

32 
°ack_±r
 
	mcuº_‰ame
;

33 
°ack_±r
 
	m°k_t›
;

34 
°ack_±r
 
	mf‹k_t›
;

36 
jv
 
	m∑th
;

37 
jv
 
	mvÆue_©_∑th
;

38 
	msubexp_√°
;

39 
	mdebug_åa˚_íabÀd
;

40 
	möôül_executi⁄
;

41 
	m√xt_œbñ
;

43 
	mhÆãd
;

44 
jv
 
	mexô_code
;

45 
jv
 
	mîr‹_mesßge
;

47 
jv
 
	m©ås
;

48 
jq_öput_cb
 
	möput_cb
;

49 *
	möput_cb_d©a
;

50 
jq_msg_cb
 
	mdebug_cb
;

51 *
	mdebug_cb_d©a
;

54 
	s˛osuª
 {

55 
byãcode
* 
	mbc
;

56 
°ack_±r
 
	mív
;

60 
	u‰ame_íåy
 {

61 
˛osuª
 
	m˛osuª
;

62 
jv
 
	mloˇlv¨
;

66 
	s‰ame
 {

67 
byãcode
* 
	mbc
;

68 
°ack_±r
 
	mív
;

69 
°ack_±r
 
	mªtd©a
;

70 
uöt16_t
* 
	mªèddr
;

71 
‰ame_íåy
 
	míåõs
[];

74 
	$‰ame_size
(
byãcode
* 
bc
) {

75  (
‰ame
Ë+ (
‰ame_íåy
Ë* (
bc
->
n˛osuªs
 + bc->
∆oˇls
);

76 
	}
}

78 
‰ame
* 
	$‰ame_cuºít
(
jq_°©e
* 
jq
) {

79 
‰ame
* 
Â
 = 
	`°ack_block
(&
jq
->
°k
, jq->
cuº_‰ame
);

81 
°ack_±r
 
√xt
 = *
	`°ack_block_√xt
(&
jq
->
°k
, jq->
cuº_‰ame
);

82 i‡(
√xt
) {

83 
‰ame
* 
Â√xt
 = 
	`°ack_block
(&
jq
->
°k
, 
√xt
);

84 
byãcode
* 
bc
 = 
Â√xt
->bc;

85 
	`as£π
(
Â
->
ªèddr
 >
bc
->
code
 && fp->ªèdd∏< bc->codê+ bc->
codñí
);

87 
	`as£π
(
Â
->
ªèddr
 == 0);

89  
Â
;

90 
	}
}

92 
°ack_±r
 
	$‰ame_gë_Àvñ
(
jq_°©e
* 
jq
, 
Àvñ
) {

93 
°ack_±r
 
‰
 = 
jq
->
cuº_‰ame
;

94 
i
=0; i<
Àvñ
; i++) {

95 
‰ame
* 
Â
 = 
	`°ack_block
(&
jq
->
°k
, 
‰
);

96 
‰
 = 
Â
->
ív
;

98  
‰
;

99 
	}
}

101 
jv
* 
	$‰ame_loˇl_v¨
(
jq_°©e
* 
jq
, 
v¨
, 
Àvñ
) {

102 
‰ame
* 
‰
 = 
	`°ack_block
(&
jq
->
°k
, 
	`‰ame_gë_Àvñ
(jq, 
Àvñ
));

103 
	`as£π
(
v¨
 >= 0);

104 
	`as£π
(
v¨
 < 
‰
->
bc
->
∆oˇls
);

105  &
‰
->
íåõs
[‰->
bc
->
n˛osuªs
 + 
v¨
].
loˇlv¨
;

106 
	}
}

108 
˛osuª
 
	$make_˛osuª
(
jq_°©e
* 
jq
, 
uöt16_t
* 
pc
) {

109 
uöt16_t
 
Àvñ
 = *
pc
++;

110 
uöt16_t
 
idx
 = *
pc
++;

111 
°ack_±r
 
‰idx
 = 
	`‰ame_gë_Àvñ
(
jq
, 
Àvñ
);

112 
‰ame
* 
‰
 = 
	`°ack_block
(&
jq
->
°k
, 
‰idx
);

113 i‡(
idx
 & 
ARG_NEWCLOSURE
) {

116 
sub‚_idx
 = 
idx
 & ~
ARG_NEWCLOSURE
;

117 
	`as£π
(
sub‚_idx
 < 
‰
->
bc
->
nsubfun˘i⁄s
);

118 
˛osuª
 
˛
 = {
‰
->
bc
->
subfun˘i⁄s
[
sub‚_idx
],

119 
‰idx
};

120  
˛
;

124 
˛osuª
 = 
idx
;

125 
	`as£π
(
˛osuª
 >= 0);

126 
	`as£π
(
˛osuª
 < 
‰
->
bc
->
n˛osuªs
);

127  
‰
->
íåõs
[
˛osuª
].closure;

129 
	}
}

131 
‰ame
* 
	$‰ame_push
(
jq_°©e
* 
jq
, 
˛osuª
 
ˇŒì
,

132 
uöt16_t
* 
¨gdef
, 
«rgs
) {

133 
°ack_±r
 
√w_‰ame_idx
 = 
	`°ack_push_block
(&
jq
->
°k
, jq->
cuº_‰ame
, 
	`‰ame_size
(
ˇŒì
.
bc
));

134 
‰ame
* 
√w_‰ame
 = 
	`°ack_block
(&
jq
->
°k
, 
√w_‰ame_idx
);

135 
√w_‰ame
->
bc
 = 
ˇŒì
.bc;

136 
√w_‰ame
->
ív
 = 
ˇŒì
.env;

137 
	`as£π
(
«rgs
 =
√w_‰ame
->
bc
->
n˛osuªs
);

138 
‰ame_íåy
* 
íåõs
 = 
√w_‰ame
->entries;

139 
i
=0; i<
«rgs
; i++) {

140 
íåõs
->
˛osuª
 = 
	`make_˛osuª
(
jq
, 
¨gdef
 + 
i
 * 2);

141 
íåõs
++;

143 
i
=0; i<
ˇŒì
.
bc
->
∆oˇls
; i++) {

144 
íåõs
->
loˇlv¨
 = 
	`jv_övÆid
();

145 
íåõs
++;

147 
jq
->
cuº_‰ame
 = 
√w_‰ame_idx
;

148  
√w_‰ame
;

149 
	}
}

151 
	$‰ame_p›
(
jq_°©e
* 
jq
) {

152 
	`as£π
(
jq
->
cuº_‰ame
);

153 
‰ame
* 
Â
 = 
	`‰ame_cuºít
(
jq
);

154 i‡(
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
cuº_‰ame
)) {

155 
∆oˇls
 = 
Â
->
bc
->nlocals;

156 
i
=0; i<
∆oˇls
; i++) {

157 
	`jv_‰ì
(*
	`‰ame_loˇl_v¨
(
jq
, 
i
, 0));

160 
jq
->
cuº_‰ame
 = 
	`°ack_p›_block
(&jq->
°k
, jq->cuº_‰ame, 
	`‰ame_size
(
Â
->
bc
));

161 
	}
}

163 
	$°ack_push
(
jq_°©e
 *
jq
, 
jv
 
vÆ
) {

164 
	`as£π
(
	`jv_is_vÆid
(
vÆ
));

165 
jq
->
°k_t›
 = 
	`°ack_push_block
(&jq->
°k
, jq->°k_t›, (
jv
));

166 
jv
* 
svÆ
 = 
	`°ack_block
(&
jq
->
°k
, jq->
°k_t›
);

167 *
svÆ
 = 
vÆ
;

168 
	}
}

170 
jv
 
	$°ack_p›
(
jq_°©e
 *
jq
) {

171 
jv
* 
svÆ
 = 
	`°ack_block
(&
jq
->
°k
, jq->
°k_t›
);

172 
jv
 
vÆ
 = *
svÆ
;

173 i‡(!
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
°k_t›
)) {

174 
vÆ
 = 
	`jv_c›y
(val);

176 
jq
->
°k_t›
 = 
	`°ack_p›_block
(&jq->
°k
, jq->°k_t›, (
jv
));

177 
	`as£π
(
	`jv_is_vÆid
(
vÆ
));

178  
vÆ
;

179 
	}
}

183 
jv
 
	$°ack_p›n
(
jq_°©e
 *
jq
) {

184 
jv
* 
svÆ
 = 
	`°ack_block
(&
jq
->
°k
, jq->
°k_t›
);

185 
jv
 
vÆ
 = *
svÆ
;

186 i‡(!
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
°k_t›
)) {

187 *
svÆ
 = 
	`jv_nuŒ
();

189 
jq
->
°k_t›
 = 
	`°ack_p›_block
(&jq->
°k
, jq->°k_t›, (
jv
));

190 
	`as£π
(
	`jv_is_vÆid
(
vÆ
));

191  
vÆ
;

192 
	}
}

195 
	sf‹kpoöt
 {

196 
°ack_±r
 
	mßved_d©a_°ack
;

197 
°ack_±r
 
	mßved_cuº_‰ame
;

198 
	m∑th_Àn
, 
	msubexp_√°
;

199 
jv
 
	mvÆue_©_∑th
;

200 
uöt16_t
* 
	mªtu∫_addªss
;

203 
	s°ack_pos
 {

204 
°ack_±r
 
	mßved_d©a_°ack
, 
	mßved_cuº_‰ame
;

207 
°ack_pos
 
	$°ack_gë_pos
(
jq_°©e
* 
jq
) {

208 
°ack_pos
 
•
 = {
jq
->
°k_t›
, jq->
cuº_‰ame
};

209  
•
;

210 
	}
}

212 
	$°ack_ßve
(
jq_°©e
 *
jq
, 
uöt16_t
* 
ªèddr
, 
°ack_pos
 
•
){

213 
jq
->
f‹k_t›
 = 
	`°ack_push_block
(&jq->
°k
, jq->f‹k_t›, (
f‹kpoöt
));

214 
f‹kpoöt
* 
f‹k
 = 
	`°ack_block
(&
jq
->
°k
, jq->
f‹k_t›
);

215 
f‹k
->
ßved_d©a_°ack
 = 
jq
->
°k_t›
;

216 
f‹k
->
ßved_cuº_‰ame
 = 
jq
->
cuº_‰ame
;

217 
f‹k
->
∑th_Àn
 =

218 
	`jv_gë_köd
(
jq
->
∑th
Ë=
JV_KIND_ARRAY
 ? 
	`jv_¨øy_Àngth
(
	`jv_c›y
(jq->path)) : 0;

219 
f‹k
->
vÆue_©_∑th
 = 
	`jv_c›y
(
jq
->value_at_path);

220 
f‹k
->
subexp_√°
 = 
jq
->subexp_nest;

221 
f‹k
->
ªtu∫_addªss
 = 
ªèddr
;

222 
jq
->
°k_t›
 = 
•
.
ßved_d©a_°ack
;

223 
jq
->
cuº_‰ame
 = 
•
.
ßved_cuº_‰ame
;

224 
	}
}

226 
	$∑th_öè˘
(
jq_°©e
 *
jq
, 
jv
 
cuº
) {

227 i‡(
jq
->
subexp_√°
 =0 && 
	`jv_gë_köd
(jq->
∑th
Ë=
JV_KIND_ARRAY
) {

228  
	`jv_idítiˇl
(
cuº
, 
	`jv_c›y
(
jq
->
vÆue_©_∑th
));

230 
	`jv_‰ì
(
cuº
);

233 
	}
}

235 
	$∑th_≠≥nd
(
jq_°©e
* 
jq
, 
jv
 
comp⁄ít
, jv 
vÆue_©_∑th
) {

236 i‡(
jq
->
subexp_√°
 =0 && 
	`jv_gë_köd
(jq->
∑th
Ë=
JV_KIND_ARRAY
) {

237 
n1
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
jq
->
∑th
));

238 
jq
->
∑th
 = 
	`jv_¨øy_≠≥nd
(jq->∑th, 
comp⁄ít
);

239 
n2
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
jq
->
∑th
));

240 
	`as£π
(
n2
 =
n1
 + 1);

241 
	`jv_‰ì
(
jq
->
vÆue_©_∑th
);

242 
jq
->
vÆue_©_∑th
 = value_at_path;

244 
	`jv_‰ì
(
comp⁄ít
);

245 
	`jv_‰ì
(
vÆue_©_∑th
);

247 
	}
}

250 
jv


251 
	$_jq_∑th_≠≥nd
(
jq_°©e
 *
jq
, 
jv
 
v
, jv 
p
, jv 
vÆue_©_∑th
) {

252 i‡(
jq
->
subexp_√°
 != 0 ||

253 
	`jv_gë_köd
(
jq
->
∑th
Ë!
JV_KIND_ARRAY
 ||

254 !
	`jv_is_vÆid
(
vÆue_©_∑th
)) {

255 
	`jv_‰ì
(
v
);

256 
	`jv_‰ì
(
p
);

257  
vÆue_©_∑th
;

259 i‡(!
	`jv_idítiˇl
(
v
, 
	`jv_c›y
(
jq
->
vÆue_©_∑th
))) {

260 
	`jv_‰ì
(
p
);

261  
vÆue_©_∑th
;

263 i‡(
	`jv_gë_köd
(
p
Ë=
JV_KIND_ARRAY
)

264 
jq
->
∑th
 = 
	`jv_¨øy_c⁄ˇt
(jq->∑th, 
p
);

266 
jq
->
∑th
 = 
	`jv_¨øy_≠≥nd
(jq->∑th, 
p
);

267 
	`jv_‰ì
(
jq
->
vÆue_©_∑th
);

268  
	`jv_c›y
(
jq
->
vÆue_©_∑th
 = value_at_path);

269 
	}
}

271 
uöt16_t
* 
	$°ack_ª°‹e
(
jq_°©e
 *
jq
){

272 !
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
f‹k_t›
)) {

273 i‡(
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
°k_t›
)) {

274 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

275 } i‡(
	`°ack_p›_wûl_‰ì
(&
jq
->
°k
, jq->
cuº_‰ame
)) {

276 
	`‰ame_p›
(
jq
);

278 
	`as£π
(0);

282 i‡(
jq
->
f‹k_t›
 == 0) {

286 
f‹kpoöt
* 
f‹k
 = 
	`°ack_block
(&
jq
->
°k
, jq->
f‹k_t›
);

287 
uöt16_t
* 
ªèddr
 = 
f‹k
->
ªtu∫_addªss
;

288 
jq
->
°k_t›
 = 
f‹k
->
ßved_d©a_°ack
;

289 
jq
->
cuº_‰ame
 = 
f‹k
->
ßved_cuº_‰ame
;

290 
∑th_Àn
 = 
f‹k
->path_len;

291 i‡(
	`jv_gë_köd
(
jq
->
∑th
Ë=
JV_KIND_ARRAY
) {

292 
	`as£π
(
∑th_Àn
 >= 0);

293 
jq
->
∑th
 = 
	`jv_¨øy_¶i˚
(jq->∑th, 0, 
∑th_Àn
);

295 
f‹k
->
∑th_Àn
 = 0;

297 
	`jv_‰ì
(
jq
->
vÆue_©_∑th
);

298 
jq
->
vÆue_©_∑th
 = 
f‹k
->value_at_path;

299 
jq
->
subexp_√°
 = 
f‹k
->subexp_nest;

300 
jq
->
f‹k_t›
 = 
	`°ack_p›_block
(&jq->
°k
, jq->f‹k_t›, (
f‹kpoöt
));

301  
ªèddr
;

302 
	}
}

304 
	$jq_ª£t
(
jq_°©e
 *
jq
) {

305 
	`°ack_ª°‹e
(
jq
)) {}

307 
	`as£π
(
jq
->
°k_t›
 == 0);

308 
	`as£π
(
jq
->
f‹k_t›
 == 0);

309 
	`as£π
(
jq
->
cuº_‰ame
 == 0);

310 
	`°ack_ª£t
(&
jq
->
°k
);

311 
	`jv_‰ì
(
jq
->
îr‹
);

312 
jq
->
îr‹
 = 
	`jv_nuŒ
();

314 
jq
->
hÆãd
 = 0;

315 
	`jv_‰ì
(
jq
->
exô_code
);

316 
	`jv_‰ì
(
jq
->
îr‹_mesßge
);

317 i‡(
	`jv_gë_köd
(
jq
->
∑th
Ë!
JV_KIND_INVALID
)

318 
	`jv_‰ì
(
jq
->
∑th
);

319 
jq
->
∑th
 = 
	`jv_nuŒ
();

320 
	`jv_‰ì
(
jq
->
vÆue_©_∑th
);

321 
jq
->
vÆue_©_∑th
 = 
	`jv_nuŒ
();

322 
jq
->
subexp_√°
 = 0;

323 
	}
}

325 
	$jq_ªp‹t_îr‹
(
jq_°©e
 *
jq
, 
jv
 
vÆue
) {

326 
	`as£π
(
jq
->
îr_cb
);

328 
jq
->
	`îr_cb
(jq->
îr_cb_d©a
, 
vÆue
);

329 
	}
}

331 
	$£t_îr‹
(
jq_°©e
 *
jq
, 
jv
 
vÆue
) {

333 
	`jv_‰ì
(
jq
->
îr‹
);

334 
jq
->
îr‹
 = 
vÆue
;

335 
	}
}

337 
	#ON_BACKTRACK
(
›
Ë((›)+
NUM_OPCODES
)

	)

339 
jv
 
	$jq_√xt
(
jq_°©e
 *
jq
) {

340 
jv
 
cfunc_öput
[
MAX_CFUNCTION_ARGS
];

342 
	`jv_nomem_h™dÀr
(
jq
->
nomem_h™dÀr
, jq->
nomem_h™dÀr_d©a
);

344 
uöt16_t
* 
pc
 = 
	`°ack_ª°‹e
(
jq
);

345 
	`as£π
(
pc
);

347 
øisög
;

348 
backåackög
 = !
jq
->
öôül_executi⁄
;

349 
jq
->
öôül_executi⁄
 = 0;

350 
	`as£π
(
	`jv_gë_köd
(
jq
->
îr‹
Ë=
JV_KIND_NULL
);

352 i‡(
jq
->
hÆãd
) {

353 i‡(
jq
->
debug_åa˚_íabÀd
)

354 
	`¥ötf
("\t<halted>\n");

355  
	`jv_övÆid
();

357 
uöt16_t
 
›code
 = *
pc
;

358 
øisög
 = 0;

360 i‡(
jq
->
debug_åa˚_íabÀd
) {

361 
	`dump_›î©i⁄
(
	`‰ame_cuºít
(
jq
)->
bc
, 
pc
);

362 
	`¥ötf
("\t");

363 c⁄° 
›code_des¸ùti⁄
* 
›desc
 = 
	`›code_des¸ibe
(
›code
);

364 
°ack_±r
 
∑øm
 = 0;

365 i‡(!
backåackög
) {

366 
°ack_ö
 = 
›desc
->stack_in;

367 i‡(
°ack_ö
 =-1Ë°ack_ö = 
pc
[1];

368 
∑øm
 = 
jq
->
°k_t›
;

369 
i
=0; i<
°ack_ö
; i++) {

370 i‡(
i
 != 0) {

371 
	`¥ötf
(" | ");

372 
∑øm
 = *
	`°ack_block_√xt
(&
jq
->
°k
,Öaram);

374 i‡(!
∑øm
) ;

375 
	`jv_dump
(
	`jv_c›y
(*(
jv
*)
	`°ack_block
(&
jq
->
°k
, 
∑øm
)), 
JV_PRINT_REFCOUNT
);

380 i‡(
jq
->
debug_åa˚_íabÀd
 & 
JQ_DEBUG_TRACE_DETAIL
) {

381 (
∑øm
 = *
	`°ack_block_√xt
(&
jq
->
°k
,Öaram))) {

382 
	`¥ötf
(" || ");

383 
	`jv_dump
(
	`jv_c›y
(*(
jv
*)
	`°ack_block
(&
jq
->
°k
, 
∑øm
)), 
JV_PRINT_REFCOUNT
);

387 
	`¥ötf
("\t<backtracking>");

390 
	`¥ötf
("\n");

393 i‡(
backåackög
) {

394 
›code
 = 
	`ON_BACKTRACK
(opcode);

395 
backåackög
 = 0;

396 
øisög
 = !
	`jv_is_vÆid
(
jq
->
îr‹
);

398 
pc
++;

400 
›code
) {

401 : 
	`as£π
(0 && "invalid instruction");

403 
TOP
: ;

405 
LOADK
: {

406 
jv
 
v
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
	`‰ame_cuºít
(
jq
)->
bc
->
c⁄°™ts
), *
pc
++);

407 
	`as£π
(
	`jv_is_vÆid
(
v
));

408 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

409 
	`°ack_push
(
jq
, 
v
);

413 
GENLABEL
: {

414 
	`°ack_push
(
jq
, 
	`JV_OBJECT
(
	`jv_°rög
("__jq"), 
	`jv_numbî
(jq->
√xt_œbñ
++)));

418 
DUP
: {

419 
jv
 
v
 = 
	`°ack_p›
(
jq
);

420 
	`°ack_push
(
jq
, 
	`jv_c›y
(
v
));

421 
	`°ack_push
(
jq
, 
v
);

425 
DUPN
: {

426 
jv
 
v
 = 
	`°ack_p›n
(
jq
);

427 
	`°ack_push
(
jq
, 
	`jv_c›y
(
v
));

428 
	`°ack_push
(
jq
, 
v
);

432 
DUP2
: {

433 
jv
 
kìp
 = 
	`°ack_p›
(
jq
);

434 
jv
 
v
 = 
	`°ack_p›
(
jq
);

435 
	`°ack_push
(
jq
, 
	`jv_c›y
(
v
));

436 
	`°ack_push
(
jq
, 
kìp
);

437 
	`°ack_push
(
jq
, 
v
);

441 
SUBEXP_BEGIN
: {

442 
jv
 
v
 = 
	`°ack_p›
(
jq
);

443 
	`°ack_push
(
jq
, 
	`jv_c›y
(
v
));

444 
	`°ack_push
(
jq
, 
v
);

445 
jq
->
subexp_√°
++;

449 
SUBEXP_END
: {

450 
	`as£π
(
jq
->
subexp_√°
 > 0);

451 
jq
->
subexp_√°
--;

452 
jv
 
a
 = 
	`°ack_p›
(
jq
);

453 
jv
 
b
 = 
	`°ack_p›
(
jq
);

454 
	`°ack_push
(
jq
, 
a
);

455 
	`°ack_push
(
jq
, 
b
);

459 
PUSHK_UNDER
: {

460 
jv
 
v
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
	`‰ame_cuºít
(
jq
)->
bc
->
c⁄°™ts
), *
pc
++);

461 
	`as£π
(
	`jv_is_vÆid
(
v
));

462 
jv
 
v2
 = 
	`°ack_p›
(
jq
);

463 
	`°ack_push
(
jq
, 
v
);

464 
	`°ack_push
(
jq
, 
v2
);

468 
POP
: {

469 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

473 
APPEND
: {

474 
jv
 
v
 = 
	`°ack_p›
(
jq
);

475 
uöt16_t
 
Àvñ
 = *
pc
++;

476 
uöt16_t
 
vidx
 = *
pc
++;

477 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
vidx
, 
Àvñ
);

478 
	`as£π
(
	`jv_gë_köd
(*
v¨
Ë=
JV_KIND_ARRAY
);

479 *
v¨
 = 
	`jv_¨øy_≠≥nd
(*v¨, 
v
);

483 
INSERT
: {

484 
jv
 
°kt›
 = 
	`°ack_p›
(
jq
);

485 
jv
 
v
 = 
	`°ack_p›
(
jq
);

486 
jv
 
k
 = 
	`°ack_p›
(
jq
);

487 
jv
 
objv
 = 
	`°ack_p›
(
jq
);

488 
	`as£π
(
	`jv_gë_köd
(
objv
Ë=
JV_KIND_OBJECT
);

489 i‡(
	`jv_gë_köd
(
k
Ë=
JV_KIND_STRING
) {

490 
	`°ack_push
(
jq
, 
	`jv_obje˘_£t
(
objv
, 
k
, 
v
));

491 
	`°ack_push
(
jq
, 
°kt›
);

493 
îrbuf
[15];

494 
	`£t_îr‹
(
jq
, 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot use %s (%s)ás object key",

495 
	`jv_köd_«me
(
	`jv_gë_köd
(
k
)),

496 
	`jv_dump_°rög_åunc
(
	`jv_c›y
(
k
), 
îrbuf
, (errbuf)))));

497 
	`jv_‰ì
(
°kt›
);

498 
	`jv_‰ì
(
v
);

499 
	`jv_‰ì
(
k
);

500 
	`jv_‰ì
(
objv
);

501 
do_backåack
;

506 
	`ON_BACKTRACK
(
RANGE
):

507 
RANGE
: {

508 
uöt16_t
 
Àvñ
 = *
pc
++;

509 
uöt16_t
 
v
 = *
pc
++;

510 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

511 
jv
 
max
 = 
	`°ack_p›
(
jq
);

512 i‡(
øisög
) {

513 
	`jv_‰ì
(
max
);

514 
do_backåack
;

516 i‡(
	`jv_gë_köd
(*
v¨
Ë!
JV_KIND_NUMBER
 ||

517 
	`jv_gë_köd
(
max
Ë!
JV_KIND_NUMBER
) {

518 
	`£t_îr‹
(
jq
, 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Range bounds must beÇumeric")));

519 
	`jv_‰ì
(
max
);

520 
do_backåack
;

521 } i‡(
	`jv_numbî_vÆue
(*
v¨
Ë>jv_numbî_vÆue(
max
)) {

523 
	`jv_‰ì
(
max
);

524 
do_backåack
;

526 
jv
 
cuº
 = *
v¨
;

527 *
v¨
 = 
	`jv_numbî
(
	`jv_numbî_vÆue
(*var) + 1);

529 
°ack_pos
 
•os
 = 
	`°ack_gë_pos
(
jq
);

530 
	`°ack_push
(
jq
, 
max
);

531 
	`°ack_ßve
(
jq
, 
pc
 - 3, 
•os
);

533 
	`°ack_push
(
jq
, 
cuº
);

539 
LOADV
: {

540 
uöt16_t
 
Àvñ
 = *
pc
++;

541 
uöt16_t
 
v
 = *
pc
++;

542 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

543 i‡(
jq
->
debug_åa˚_íabÀd
) {

544 
	`¥ötf
("V%d = ", 
v
);

545 
	`jv_dump
(
	`jv_c›y
(*
v¨
), 
JV_PRINT_REFCOUNT
);

546 
	`¥ötf
("\n");

548 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

549 
	`°ack_push
(
jq
, 
	`jv_c›y
(*
v¨
));

554 
LOADVN
: {

555 
uöt16_t
 
Àvñ
 = *
pc
++;

556 
uöt16_t
 
v
 = *
pc
++;

557 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

558 i‡(
jq
->
debug_åa˚_íabÀd
) {

559 
	`¥ötf
("V%d = ", 
v
);

560 
	`jv_dump
(
	`jv_c›y
(*
v¨
), 
JV_PRINT_REFCOUNT
);

561 
	`¥ötf
("\n");

563 
	`jv_‰ì
(
	`°ack_p›n
(
jq
));

566 
	`°ack_push
(
jq
, *
v¨
);

568 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

569 *
v¨
 = 
	`jv_nuŒ
();

573 
STOREVN
:

574 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
	`°ack_gë_pos
(jq));

575 
STOREV
: {

576 
uöt16_t
 
Àvñ
 = *
pc
++;

577 
uöt16_t
 
v
 = *
pc
++;

578 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

579 
jv
 
vÆ
 = 
	`°ack_p›
(
jq
);

580 i‡(
jq
->
debug_åa˚_íabÀd
) {

581 
	`¥ötf
("V%d = ", 
v
);

582 
	`jv_dump
(
	`jv_c›y
(
vÆ
), 0);

583 
	`¥ötf
(" (%d)\n", 
	`jv_gë_ªf˙t
(
vÆ
));

585 
	`jv_‰ì
(*
v¨
);

586 *
v¨
 = 
vÆ
;

590 
	`ON_BACKTRACK
(
STOREVN
): {

591 
uöt16_t
 
Àvñ
 = *
pc
++;

592 
uöt16_t
 
v
 = *
pc
++;

593 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

594 
	`jv_‰ì
(*
v¨
);

595 *
v¨
 = 
	`jv_nuŒ
();

596 
do_backåack
;

600 
STORE_GLOBAL
: {

602 
jv
 
vÆ
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
	`‰ame_cuºít
(
jq
)->
bc
->
c⁄°™ts
), *
pc
++);

603 
	`as£π
(
	`jv_is_vÆid
(
vÆ
));

606 
uöt16_t
 
Àvñ
 = *
pc
++;

607 
uöt16_t
 
v
 = *
pc
++;

608 
jv
* 
v¨
 = 
	`‰ame_loˇl_v¨
(
jq
, 
v
, 
Àvñ
);

609 i‡(
jq
->
debug_åa˚_íabÀd
) {

610 
	`¥ötf
("V%d = ", 
v
);

611 
	`jv_dump
(
	`jv_c›y
(
vÆ
), 0);

612 
	`¥ötf
(" (%d)\n", 
	`jv_gë_ªf˙t
(
vÆ
));

614 
	`jv_‰ì
(*
v¨
);

615 *
v¨
 = 
vÆ
;

619 
PATH_BEGIN
: {

620 
jv
 
v
 = 
	`°ack_p›
(
jq
);

621 
	`°ack_push
(
jq
, jq->
∑th
);

623 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
	`°ack_gë_pos
(jq));

625 
	`°ack_push
(
jq
, 
	`jv_numbî
(jq->
subexp_√°
));

626 
	`°ack_push
(
jq
, jq->
vÆue_©_∑th
);

627 
	`°ack_push
(
jq
, 
	`jv_c›y
(
v
));

629 
jq
->
∑th
 = 
	`jv_¨øy
();

630 
jq
->
vÆue_©_∑th
 = 
v
;

631 
jq
->
subexp_√°
 = 0;

635 
PATH_END
: {

636 
jv
 
v
 = 
	`°ack_p›
(
jq
);

638 i‡(!
	`∑th_öè˘
(
jq
, 
	`jv_c›y
(
v
))) {

639 
îrbuf
[30];

640 
jv
 
msg
 = 
	`jv_°rög_fmt
(

642 
	`jv_dump_°rög_åunc
(
v
, 
îrbuf
, (errbuf)));

643 
	`£t_îr‹
(
jq
, 
	`jv_övÆid_wôh_msg
(
msg
));

644 
do_backåack
;

646 
	`jv_‰ì
(
v
);

648 
jv
 
ﬁd_vÆue_©_∑th
 = 
	`°ack_p›
(
jq
);

649 
ﬁd_subexp_√°
 = ()
	`jv_numbî_vÆue
(
	`°ack_p›
(
jq
));

651 
jv
 
∑th
 = 
jq
->path;

652 
jq
->
∑th
 = 
	`°ack_p›
(jq);

654 
°ack_pos
 
•os
 = 
	`°ack_gë_pos
(
jq
);

655 
	`°ack_push
(
jq
, 
	`jv_c›y
(
∑th
));

656 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
•os
);

658 
	`°ack_push
(
jq
, 
∑th
);

659 
jq
->
subexp_√°
 = 
ﬁd_subexp_√°
;

660 
	`jv_‰ì
(
jq
->
vÆue_©_∑th
);

661 
jq
->
vÆue_©_∑th
 = 
ﬁd_vÆue_©_∑th
;

665 
	`ON_BACKTRACK
(
PATH_BEGIN
):

666 
	`ON_BACKTRACK
(
PATH_END
): {

667 
	`jv_‰ì
(
jq
->
∑th
);

668 
jq
->
∑th
 = 
	`°ack_p›
(jq);

669 
do_backåack
;

672 
INDEX
:

673 
INDEX_OPT
: {

674 
jv
 
t
 = 
	`°ack_p›
(
jq
);

675 
jv
 
k
 = 
	`°ack_p›
(
jq
);

677 i‡(!
	`∑th_öè˘
(
jq
, 
	`jv_c›y
(
t
))) {

678 
keybuf
[15];

679 
objbuf
[30];

680 
jv
 
msg
 = 
	`jv_°rög_fmt
(

682 
	`jv_dump_°rög_åunc
(
k
, 
keybuf
, (keybuf)),

683 
	`jv_dump_°rög_åunc
(
t
, 
objbuf
, (objbuf)));

684 
	`£t_îr‹
(
jq
, 
	`jv_övÆid_wôh_msg
(
msg
));

685 
do_backåack
;

687 
jv
 
v
 = 
	`jv_gë
(
t
, 
	`jv_c›y
(
k
));

688 i‡(
	`jv_is_vÆid
(
v
)) {

689 
	`∑th_≠≥nd
(
jq
, 
k
, 
	`jv_c›y
(
v
));

690 
	`°ack_push
(
jq
, 
v
);

692 
	`jv_‰ì
(
k
);

693 i‡(
›code
 =
INDEX
)

694 
	`£t_îr‹
(
jq
, 
v
);

696 
	`jv_‰ì
(
v
);

697 
do_backåack
;

703 
JUMP
: {

704 
uöt16_t
 
off£t
 = *
pc
++;

705 
pc
 +
off£t
;

709 
JUMP_F
: {

710 
uöt16_t
 
off£t
 = *
pc
++;

711 
jv
 
t
 = 
	`°ack_p›
(
jq
);

712 
jv_köd
 
köd
 = 
	`jv_gë_köd
(
t
);

713 i‡(
köd
 =
JV_KIND_FALSE
 || köd =
JV_KIND_NULL
) {

714 
pc
 +
off£t
;

716 
	`°ack_push
(
jq
, 
t
);

720 
EACH
:

721 
EACH_OPT
: {

722 
jv
 
c⁄èöî
 = 
	`°ack_p›
(
jq
);

724 i‡(!
	`∑th_öè˘
(
jq
, 
	`jv_c›y
(
c⁄èöî
))) {

725 
îrbuf
[30];

726 
jv
 
msg
 = 
	`jv_°rög_fmt
(

728 
	`jv_dump_°rög_åunc
(
c⁄èöî
, 
îrbuf
, (errbuf)));

729 
	`£t_îr‹
(
jq
, 
	`jv_övÆid_wôh_msg
(
msg
));

730 
do_backåack
;

732 
	`°ack_push
(
jq
, 
c⁄èöî
);

733 
	`°ack_push
(
jq
, 
	`jv_numbî
(-1));

736 
	`ON_BACKTRACK
(
EACH
):

737 
	`ON_BACKTRACK
(
EACH_OPT
): {

738 
idx
 = 
	`jv_numbî_vÆue
(
	`°ack_p›
(
jq
));

739 
jv
 
c⁄èöî
 = 
	`°ack_p›
(
jq
);

741 
kìp_goög
, 
is_œ°
 = 0;

742 
jv
 
key
, 
vÆue
;

743 i‡(
	`jv_gë_köd
(
c⁄èöî
Ë=
JV_KIND_ARRAY
) {

744 i‡(
›code
 =
EACH
 || opcodê=
EACH_OPT
Ë
idx
 = 0;

745 
idx
 = idx + 1;

746 
Àn
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
c⁄èöî
));

747 
kìp_goög
 = 
idx
 < 
Àn
;

748 
is_œ°
 = 
idx
 =
Àn
 - 1;

749 i‡(
kìp_goög
) {

750 
key
 = 
	`jv_numbî
(
idx
);

751 
vÆue
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
c⁄èöî
), 
idx
);

753 } i‡(
	`jv_gë_köd
(
c⁄èöî
Ë=
JV_KIND_OBJECT
) {

754 i‡(
›code
 =
EACH
 || opcodê=
EACH_OPT
Ë
idx
 = 
	`jv_obje˘_ôî
(
c⁄èöî
);

755 
idx
 = 
	`jv_obje˘_ôî_√xt
(
c⁄èöî
, idx);

756 
kìp_goög
 = 
	`jv_obje˘_ôî_vÆid
(
c⁄èöî
, 
idx
);

757 i‡(
kìp_goög
) {

758 
key
 = 
	`jv_obje˘_ôî_key
(
c⁄èöî
, 
idx
);

759 
vÆue
 = 
	`jv_obje˘_ôî_vÆue
(
c⁄èöî
, 
idx
);

762 
	`as£π
(
›code
 =
EACH
 || opcodê=
EACH_OPT
);

763 i‡(
›code
 =
EACH
) {

764 
îrbuf
[15];

765 
	`£t_îr‹
(
jq
,

766 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot iterate over %s (%s)",

767 
	`jv_köd_«me
(
	`jv_gë_köd
(
c⁄èöî
)),

768 
	`jv_dump_°rög_åunc
(
	`jv_c›y
(
c⁄èöî
), 
îrbuf
, (errbuf)))));

770 
kìp_goög
 = 0;

773 i‡(!
kìp_goög
 || 
øisög
) {

774 i‡(
kìp_goög
)

775 
	`jv_‰ì
(
vÆue
);

776 
	`jv_‰ì
(
c⁄èöî
);

777 
do_backåack
;

778 } i‡(
is_œ°
) {

780 
	`jv_‰ì
(
c⁄èöî
);

781 
	`∑th_≠≥nd
(
jq
, 
key
, 
	`jv_c›y
(
vÆue
));

782 
	`°ack_push
(
jq
, 
vÆue
);

784 
°ack_pos
 
•os
 = 
	`°ack_gë_pos
(
jq
);

785 
	`°ack_push
(
jq
, 
c⁄èöî
);

786 
	`°ack_push
(
jq
, 
	`jv_numbî
(
idx
));

787 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
•os
);

788 
	`∑th_≠≥nd
(
jq
, 
key
, 
	`jv_c›y
(
vÆue
));

789 
	`°ack_push
(
jq
, 
vÆue
);

794 
do_backåack
:

795 
BACKTRACK
: {

796 
pc
 = 
	`°ack_ª°‹e
(
jq
);

797 i‡(!
pc
) {

798 i‡(!
	`jv_is_vÆid
(
jq
->
îr‹
)) {

799 
jv
 
îr‹
 = 
jq
->error;

800 
jq
->
îr‹
 = 
	`jv_nuŒ
();

801  
îr‹
;

803  
	`jv_övÆid
();

805 
backåackög
 = 1;

809 
FORK_OPT
:

810 
DESTRUCTURE_ALT
:

811 
FORK
: {

812 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
	`°ack_gë_pos
(jq));

813 
pc
++;

817 
	`ON_BACKTRACK
(
FORK_OPT
):

818 
	`ON_BACKTRACK
(
DESTRUCTURE_ALT
): {

819 i‡(
	`jv_is_vÆid
(
jq
->
îr‹
)) {

821 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

822 
do_backåack
;

827 i‡(
›code
 !
	`ON_BACKTRACK
(
DESTRUCTURE_ALT
)) {

828 
	`jv_‰ì
(
	`°ack_p›
(
jq
));

829 
	`°ack_push
(
jq
, 
	`jv_övÆid_gë_msg
(jq->
îr‹
));

831 
	`jv_‰ì
(
jq
->
îr‹
);

833 
jq
->
îr‹
 = 
	`jv_nuŒ
();

834 
uöt16_t
 
off£t
 = *
pc
++;

835 
pc
 +
off£t
;

838 
	`ON_BACKTRACK
(
FORK
): {

839 i‡(
øisög
Ë
do_backåack
;

840 
uöt16_t
 
off£t
 = *
pc
++;

841 
pc
 +
off£t
;

845 
CALL_BUILTIN
: {

846 
«rgs
 = *
pc
++;

847 
jv
 
t›
 = 
	`°ack_p›
(
jq
);

848 
jv
* 
ö
 = 
cfunc_öput
;

849 
ö
[0] = 
t›
;

850 
i
 = 1; i < 
«rgs
; i++) {

851 
ö
[
i
] = 
	`°ack_p›
(
jq
);

853 
cfun˘i⁄
* 
fun˘i⁄
 = &
	`‰ame_cuºít
(
jq
)->
bc
->
globÆs
->
cfun˘i⁄s
[*
pc
++];

854 
	`jv
 (*
	tfunc_1
)(
	tjq_°©e
*,
	tjv
);

855 
	`jv
 (*
	tfunc_2
)(
	tjq_°©e
*,
	tjv
,jv);

856 
	`jv
 (*
	tfunc_3
)(
	tjq_°©e
*,
	tjv
,jv,jv);

857 
	`jv
 (*
	tfunc_4
)(
	tjq_°©e
*,
	tjv
,jv,jv,jv);

858 
	`jv
 (*
	tfunc_5
)(
	tjq_°©e
*,
	tjv
,jv,jv,jv,jv);

859 
fun˘i⁄
->
«rgs
) {

860 1: 
t›
 = ((
func_1
)
fun˘i⁄
->
Âå
)(
jq
, 
ö
[0]); ;

861 2: 
t›
 = ((
func_2
)
fun˘i⁄
->
Âå
)(
jq
, 
ö
[0], in[1]); ;

862 3: 
t›
 = ((
func_3
)
fun˘i⁄
->
Âå
)(
jq
, 
ö
[0], in[1], in[2]); ;

863 4: 
t›
 = ((
func_4
)
fun˘i⁄
->
Âå
)(
jq
, 
ö
[0], in[1], in[2], in[3]); ;

864 5: 
t›
 = ((
func_5
)
fun˘i⁄
->
Âå
)(
jq
, 
ö
[0], in[1], in[2], in[3], in[4]); ;

867 :  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("FunctionÅakesÅoo manyárguments"));

870 i‡(
	`jv_is_vÆid
(
t›
)) {

871 
	`°ack_push
(
jq
, 
t›
);

872 } i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
t›
))) {

873 
	`£t_îr‹
(
jq
, 
t›
);

874 
do_backåack
;

878 
do_backåack
;

883 
TAIL_CALL_JQ
:

884 
CALL_JQ
: {

909 
jv
 
öput
 = 
	`°ack_p›
(
jq
);

910 
uöt16_t
 
n˛osuªs
 = *
pc
++;

911 
uöt16_t
* 
ªèddr
 = 
pc
 + 2 + 
n˛osuªs
*2;

912 
°ack_±r
 
ªtd©a
 = 
jq
->
°k_t›
;

913 
‰ame
* 
√w_‰ame
;

914 
˛osuª
 
˛
 = 
	`make_˛osuª
(
jq
, 
pc
);

915 i‡(
›code
 =
TAIL_CALL_JQ
) {

916 
ªèddr
 = 
	`‰ame_cuºít
(
jq
)->retaddr;

917 
ªtd©a
 = 
	`‰ame_cuºít
(
jq
)->retdata;

918 
	`‰ame_p›
(
jq
);

920 
√w_‰ame
 = 
	`‰ame_push
(
jq
, 
˛
, 
pc
 + 2, 
n˛osuªs
);

921 
√w_‰ame
->
ªtd©a
 =Ñetdata;

922 
√w_‰ame
->
ªèddr
 =Ñetaddr;

923 
pc
 = 
√w_‰ame
->
bc
->
code
;

924 
	`°ack_push
(
jq
, 
öput
);

928 
RET
: {

929 
jv
 
vÆue
 = 
	`°ack_p›
(
jq
);

930 
	`as£π
(
jq
->
°k_t›
 =
	`‰ame_cuºít
(jq)->
ªtd©a
);

931 
uöt16_t
* 
ªèddr
 = 
	`‰ame_cuºít
(
jq
)->retaddr;

932 i‡(
ªèddr
) {

934 
pc
 = 
ªèddr
;

935 
	`‰ame_p›
(
jq
);

938 
°ack_pos
 
•os
 = 
	`°ack_gë_pos
(
jq
);

939 
	`°ack_push
(
jq
, 
	`jv_nuŒ
());

940 
	`°ack_ßve
(
jq
, 
pc
 - 1, 
•os
);

941  
vÆue
;

943 
	`°ack_push
(
jq
, 
vÆue
);

946 
	`ON_BACKTRACK
(
RET
): {

948 
do_backåack
;

952 
	}
}

954 
jv
 
	$jq_f‹m©_îr‹
(
jv
 
msg
) {

955 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_NULL
 ||

956 (
	`jv_gë_köd
(
msg
Ë=
JV_KIND_INVALID
 && !
	`jv_övÆid_has_msg
(
	`jv_c›y
(msg)))) {

957 
	`jv_‰ì
(
msg
);

958 
	`Ârötf
(
°dîr
, "jq:Érror: out of memory\n");

959  
	`jv_nuŒ
();

962 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
)

963  
msg
;

965 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_INVALID
)

966 
msg
 = 
	`jv_övÆid_gë_msg
(msg);

968 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_NULL
)

969  
	`jq_f‹m©_îr‹
(
msg
);

973 i‡(
	`jv_gë_köd
(
msg
Ë!
JV_KIND_INVALID
) {

974 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
)

975  
	`jv_°rög_fmt
("jq:Éº‹: %s", 
	`jv_°rög_vÆue
(
msg
));

977 
msg
 = 
	`jv_dump_°rög
(msg, 
JV_PRINT_INVALID
);

978 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
)

979  
	`jv_°rög_fmt
("jq:Éº‹: %s", 
	`jv_°rög_vÆue
(
msg
));

980  
	`jq_f‹m©_îr‹
(
	`jv_nuŒ
());

984  
	`jq_f‹m©_îr‹
(
	`jv_övÆid_gë_msg
(
msg
));

985 
	}
}

990 
	$deÁu…_îr_cb
(*
d©a
, 
jv
 
msg
) {

991 
msg
 = 
	`jq_f‹m©_îr‹
(msg);

992 
	`Ârötf
((
FILE
 *)
d©a
, "%s\n", 
	`jv_°rög_vÆue
(
msg
));

993 
	`jv_‰ì
(
msg
);

994 
	}
}

996 
jq_°©e
 *
	$jq_öô
() {

997 
jq_°©e
 *
jq
;

998 
jq
 = 
	`jv_mem_Æloc_ungu¨ded
((*jq));

999 i‡(
jq
 =
NULL
)

1000  
NULL
;

1002 
jq
->
bc
 = 0;

1003 
jq
->
√xt_œbñ
 = 0;

1005 
	`°ack_öô
(&
jq
->
°k
);

1006 
jq
->
°k_t›
 = 0;

1007 
jq
->
f‹k_t›
 = 0;

1008 
jq
->
cuº_‰ame
 = 0;

1009 
jq
->
îr‹
 = 
	`jv_nuŒ
();

1011 
jq
->
hÆãd
 = 0;

1012 
jq
->
exô_code
 = 
	`jv_övÆid
();

1013 
jq
->
îr‹_mesßge
 = 
	`jv_övÆid
();

1015 
jq
->
îr_cb
 = 
deÁu…_îr_cb
;

1016 
jq
->
îr_cb_d©a
 = 
°dîr
;

1018 
jq
->
©ås
 = 
	`jv_obje˘
();

1019 
jq
->
∑th
 = 
	`jv_nuŒ
();

1020 
jq
->
vÆue_©_∑th
 = 
	`jv_nuŒ
();

1022 
jq
->
nomem_h™dÀr
 = 
NULL
;

1023 
jq
->
nomem_h™dÀr_d©a
 = 
NULL
;

1024  
jq
;

1025 
	}
}

1027 
	$jq_£t_îr‹_cb
(
jq_°©e
 *
jq
, 
jq_msg_cb
 
cb
, *
d©a
) {

1028 i‡(
cb
 =
NULL
) {

1029 
jq
->
îr_cb
 = 
deÁu…_îr_cb
;

1030 
jq
->
îr_cb_d©a
 = 
°dîr
;

1032 
jq
->
îr_cb
 = 
cb
;

1033 
jq
->
îr_cb_d©a
 = 
d©a
;

1035 
	}
}

1037 
	$jq_gë_îr‹_cb
(
jq_°©e
 *
jq
, 
jq_msg_cb
 *
cb
, **
d©a
) {

1038 *
cb
 = 
jq
->
îr_cb
;

1039 *
d©a
 = 
jq
->
îr_cb_d©a
;

1040 
	}
}

1042 
	$jq_£t_nomem_h™dÀr
(
jq_°©e
 *
jq
, (*
nomem_h™dÀr
)(*), *
d©a
) {

1043 
	`jv_nomem_h™dÀr
(
nomem_h™dÀr
, 
d©a
);

1044 
jq
->
nomem_h™dÀr
 =Çomem_handler;

1045 
jq
->
nomem_h™dÀr_d©a
 = 
d©a
;

1046 
	}
}

1049 
	$jq_°¨t
(
jq_°©e
 *
jq
, 
jv
 
öput
, 
Êags
) {

1050 
	`jv_nomem_h™dÀr
(
jq
->
nomem_h™dÀr
, jq->
nomem_h™dÀr_d©a
);

1051 
	`jq_ª£t
(
jq
);

1053 
˛osuª
 
t›
 = {
jq
->
bc
, -1};

1054 
‰ame
* 
t›_‰ame
 = 
	`‰ame_push
(
jq
, 
t›
, 0, 0);

1055 
t›_‰ame
->
ªtd©a
 = 0;

1056 
t›_‰ame
->
ªèddr
 = 0;

1058 
	`°ack_push
(
jq
, 
öput
);

1059 
	`°ack_ßve
(
jq
, jq->
bc
->
code
, 
	`°ack_gë_pos
(jq));

1060 
jq
->
debug_åa˚_íabÀd
 = 
Êags
 & 
JQ_DEBUG_TRACE_ALL
;

1061 
jq
->
öôül_executi⁄
 = 1;

1062 
	}
}

1064 
	$jq_ã¨down
(
jq_°©e
 **
jq
) {

1065 
jq_°©e
 *
ﬁd_jq
 = *
jq
;

1066 i‡(
ﬁd_jq
 =
NULL
)

1068 *
jq
 = 
NULL
;

1070 
	`jq_ª£t
(
ﬁd_jq
);

1071 
	`byãcode_‰ì
(
ﬁd_jq
->
bc
);

1072 
ﬁd_jq
->
bc
 = 0;

1073 
	`jv_‰ì
(
ﬁd_jq
->
©ås
);

1075 
	`jv_mem_‰ì
(
ﬁd_jq
);

1076 
	}
}

1078 
	$ªt_fﬁlows
(
uöt16_t
 *
pc
) {

1079 i‡(*
pc
 =
RET
)

1081 i‡(*
pc
++ !
JUMP
)

1083  
	`ªt_fﬁlows
(
pc
 + *pc + 1);

1084 
	}
}

1110 
uöt16_t
 
	$èû_ˇŒ_™Æyze
(
uöt16_t
 *
pc
) {

1111 
	`as£π
(*
pc
 =
CALL_JQ
);

1112 
pc
++;

1114 
uöt16_t
 
n˛osuªs
 = *
pc
++ + 1;Çclosures > 0;Öc++,Çclosures--) {

1115 i‡(*
pc
++ == 0)

1116  
CALL_JQ
;

1118 i‡(
	`ªt_fﬁlows
(
pc
))

1119  
TAIL_CALL_JQ
;

1120  
CALL_JQ
;

1121 
	}
}

1123 
byãcode
 *
	$›timize_code
(
byãcode
 *
bc
) {

1124 
uöt16_t
 *
pc
 = 
bc
->
code
;

1126 
pc
 < 
bc
->
code
 + bc->
codñí
) {

1127 *
pc
) {

1128 
CALL_JQ
:

1129 *
pc
 = 
	`èû_ˇŒ_™Æyze
(pc);

1136 
pc
 +
	`byãcode_›î©i⁄_Àngth
(pc);

1138  
bc
;

1139 
	}
}

1141 
byãcode
 *
	$›timize
(
byãcode
 *
bc
) {

1142 
i
=0; i<
bc
->
nsubfun˘i⁄s
; i++) {

1143 
bc
->
subfun˘i⁄s
[
i
] = 
	`›timize
(bc->subfunctions[i]);

1145  
	`›timize_code
(
bc
);

1146 
	}
}

1148 
jv


1149 
	$¨gs2obj
(
jv
 
¨gs
)

1151 i‡(
	`jv_gë_köd
(
¨gs
Ë=
JV_KIND_OBJECT
)

1152  
¨gs
;

1153 
	`as£π
(
	`jv_gë_köd
(
¨gs
Ë=
JV_KIND_ARRAY
);

1154 
jv
 
r
 = 
	`jv_obje˘
();

1155 
jv
 
kk
 = 
	`jv_°rög
("name");

1156 
jv
 
vk
 = 
	`jv_°rög
("value");

1157 
	`jv_¨øy_f‹óch
(
¨gs
, 
i
, 
v
)

1158 
r
 = 
	`jv_obje˘_£t
‘, 
	`jv_obje˘_gë
(
	`jv_c›y
(
v
), 
kk
), jv_obje˘_gë(v, 
vk
));

1159 
	`jv_‰ì
(
¨gs
);

1160 
	`jv_‰ì
(
kk
);

1161 
	`jv_‰ì
(
vk
);

1162  
r
;

1163 
	}
}

1165 
	$jq_compûe_¨gs
(
jq_°©e
 *
jq
, c⁄° * 
°r
, 
jv
 
¨gs
) {

1166 
	`jv_nomem_h™dÀr
(
jq
->
nomem_h™dÀr
, jq->
nomem_h™dÀr_d©a
);

1167 
	`as£π
(
	`jv_gë_köd
(
¨gs
Ë=
JV_KIND_ARRAY
 || jv_gë_köd◊rgsË=
JV_KIND_OBJECT
);

1168 
locfûe
* 
loˇti⁄s
;

1169 
loˇti⁄s
 = 
	`locfûe_öô
(
jq
, "<t›-Àvñ>", 
°r
, 
	`°æí
(str));

1170 
block
 
¥ogøm
;

1171 
	`jq_ª£t
(
jq
);

1172 i‡(
jq
->
bc
) {

1173 
	`byãcode_‰ì
(
jq
->
bc
);

1174 
jq
->
bc
 = 0;

1176 
√º‹s
 = 
	`lﬂd_¥ogøm
(
jq
, 
loˇti⁄s
, &
¥ogøm
);

1177 i‡(
√º‹s
 == 0) {

1178 
√º‹s
 = 
	`buûtös_böd
(
jq
, &
¥ogøm
);

1179 i‡(
√º‹s
 == 0) {

1180 
√º‹s
 = 
	`block_compûe
(
¥ogøm
, &
jq
->
bc
, 
loˇti⁄s
, 
¨gs
 = 
	`¨gs2obj
(args));

1183 
	`jv_‰ì
(
¨gs
);

1184 i‡(
√º‹s
)

1185 
	`jq_ªp‹t_îr‹
(
jq
, 
	`jv_°rög_fmt
("jq: %d compûê%s", 
√º‹s
,Çerrors > 1 ? "errors" : "error"));

1186 i‡(
jq
->
bc
)

1187 
jq
->
bc
 = 
	`›timize
(jq->bc);

1188 
	`locfûe_‰ì
(
loˇti⁄s
);

1189  
jq
->
bc
 !
NULL
;

1190 
	}
}

1192 
	$jq_compûe
(
jq_°©e
 *
jq
, c⁄° * 
°r
) {

1193  
	`jq_compûe_¨gs
(
jq
, 
°r
, 
	`jv_obje˘
());

1194 
	}
}

1196 
jv
 
	$jq_gë_jq_‹igö
(
jq_°©e
 *
jq
) {

1197  
	`jq_gë_©å
(
jq
, 
	`jv_°rög
("JQ_ORIGIN"));

1198 
	}
}

1200 
jv
 
	$jq_gë_¥og_‹igö
(
jq_°©e
 *
jq
) {

1201  
	`jq_gë_©å
(
jq
, 
	`jv_°rög
("PROGRAM_ORIGIN"));

1202 
	}
}

1204 
jv
 
	$jq_gë_lib_dús
(
jq_°©e
 *
jq
) {

1205  
	`jq_gë_©å
(
jq
, 
	`jv_°rög
("JQ_LIBRARY_PATH"));

1206 
	}
}

1208 
	$jq_£t_©ås
(
jq_°©e
 *
jq
, 
jv
 
©ås
) {

1209 
	`as£π
(
	`jv_gë_köd
(
©ås
Ë=
JV_KIND_OBJECT
);

1210 
	`jv_‰ì
(
jq
->
©ås
);

1211 
jq
->
©ås
 =áttrs;

1212 
	}
}

1214 
	$jq_£t_©å
(
jq_°©e
 *
jq
, 
jv
 
©å
, jv 
vÆ
) {

1215 
jq
->
©ås
 = 
	`jv_obje˘_£t
(jq->©ås, 
©å
, 
vÆ
);

1216 
	}
}

1218 
jv
 
	$jq_gë_©å
(
jq_°©e
 *
jq
, 
jv
 
©å
) {

1219  
	`jv_obje˘_gë
(
	`jv_c›y
(
jq
->
©ås
), 
©å
);

1220 
	}
}

1222 
	$jq_dump_dißs£mbly
(
jq_°©e
 *
jq
, 
ödít
) {

1223 
	`dump_dißs£mbly
(
ödít
, 
jq
->
bc
);

1224 
	}
}

1226 
	$jq_£t_öput_cb
(
jq_°©e
 *
jq
, 
jq_öput_cb
 
cb
, *
d©a
) {

1227 
jq
->
öput_cb
 = 
cb
;

1228 
jq
->
öput_cb_d©a
 = 
d©a
;

1229 
	}
}

1231 
	$jq_gë_öput_cb
(
jq_°©e
 *
jq
, 
jq_öput_cb
 *
cb
, **
d©a
) {

1232 *
cb
 = 
jq
->
öput_cb
;

1233 *
d©a
 = 
jq
->
öput_cb_d©a
;

1234 
	}
}

1236 
	$jq_£t_debug_cb
(
jq_°©e
 *
jq
, 
jq_msg_cb
 
cb
, *
d©a
) {

1237 
jq
->
debug_cb
 = 
cb
;

1238 
jq
->
debug_cb_d©a
 = 
d©a
;

1239 
	}
}

1241 
	$jq_gë_debug_cb
(
jq_°©e
 *
jq
, 
jq_msg_cb
 *
cb
, **
d©a
) {

1242 *
cb
 = 
jq
->
debug_cb
;

1243 *
d©a
 = 
jq
->
debug_cb_d©a
;

1244 
	}
}

1247 
	$jq_hÆt
(
jq_°©e
 *
jq
, 
jv
 
exô_code
, jv 
îr‹_mesßge
)

1249 
	`as£π
(!
jq
->
hÆãd
);

1250 
jq
->
hÆãd
 = 1;

1251 
jq
->
exô_code
 =Éxit_code;

1252 
jq
->
îr‹_mesßge
 =Érror_message;

1253 
	}
}

1256 
	$jq_hÆãd
(
jq_°©e
 *
jq
)

1258  
jq
->
hÆãd
;

1259 
	}
}

1261 
jv
 
	$jq_gë_exô_code
(
jq_°©e
 *
jq
)

1263  
	`jv_c›y
(
jq
->
exô_code
);

1264 
	}
}

1266 
jv
 
	$jq_gë_îr‹_mesßge
(
jq_°©e
 *
jq
)

1268  
	`jv_c›y
(
jq
->
îr‹_mesßge
);

1269 
	}
}

	@src/inject_errors.c

2 
	#_GNU_SOURCE


	)

3 
	~<as£π.h
>

4 
	~<dlf˙.h
>

5 
	~<î∫o.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

10 
FILE
 *
	gÁû
;

11 
FILE
 *
	gÁû_ªad
;

12 
FILE
 *
	gÁû_wrôe
;

13 
FILE
 *
	gÁû_˛o£
;

14 
	gîr‹
;

16 
	gFILE
 * (*
	gªÆ_f›í
)(const *, const *);

17 (*
ªÆ_f˛o£
)(
FILE
 *);

18 (*
ªÆ_„º‹
)(
FILE
 *);

19 (*
ªÆ_˛óªº
)(
FILE
 *);

20 * (*
ªÆ_fgës
)(*, , 
FILE
 *);

21 
	$size_t
 (*
ªÆ_‰ód
)(*, 
size_t
, size_t, 
FILE
 *);

22 
	$size_t
 (*
ªÆ_fwrôe
)(c⁄° *, 
size_t
, size_t, 
FILE
 *);

24 
	#GET_REAL
(
sym
) \

26 i‡(
ªÆ_
 ## 
sym
 == 0) { \

27 
ªÆ_
 ## 
sym
 = 
	`dlsym
(
RTLD_NEXT
, #sym); \

28 
	`as£π
(
ªÆ_
 ## 
sym
 != 0); \

30 
	}
} 0)

	)

32 
	#dbg_wrôe
(
msg
Ë()
	`wrôe
(2, msg, (msgË- 1)

	)

34 
	#dbg
() \

36 
	`dbg_wrôe
("here: "); \

37 
	`dbg_wrôe
(
__func__
); \

38 
	`dbg_wrôe
("!\n"); \

39 } 0)

	)

41 
FILE
 *
	$f›í
(c⁄° *
∑th
, c⁄° *
mode
) {

42 
	`GET_REAL
(
f›í
);

43 
Áû
 = 
Áû_ªad
 = 
Áû_wrôe
 = 
Áû_˛o£
 = 0;

44 
FILE
 *
f
 = 
	`ªÆ_f›í
(
∑th
, 
mode
);

45 
îr‹
 = 
EIO
;

46 i‡(
	`°rcmp
(
∑th
, "fail_read") == 0) {

47 
Áû
 = 
Áû_ªad
 = 
f
;

48 } i‡(
	`°∫cmp
(
∑th
, "fail_write", ("fail_write") - 1) == 0) {

50 
Áû
 = 
Áû_wrôe
 = 
f
;

51 i‡(
	`°rcmp
(
∑th
, "fail_write_enospc") == 0)

52 
îr‹
 = 
ENOSPC
;

53 } i‡(
	`°∫cmp
(
∑th
, "fail_close", ("fail_close") - 1) == 0) {

54 
Áû
 = 
Áû_˛o£
 = 
f
;

55 i‡(
	`°rcmp
(
∑th
, "fail_close_enospc") == 0)

56 
îr‹
 = 
ENOSPC
;

58  
f
;

59 
	}
}

61 
	$f˛o£
(
FILE
 *
f
) {

62 
	`GET_REAL
(
f˛o£
);

63 
ªs
 = 
	`ªÆ_f˛o£
(
f
);

64 i‡(
Áû_˛o£
 =
f
) {

65 
Áû
 = 
Áû_ªad
 = 
Áû_wrôe
 = 
Áû_˛o£
 = 0;

66  
EOF
;

68  
ªs
;

69 
	}
}

71 * 
	$fgës
(*
buf
, 
Àn
, 
FILE
 *
f
) {

72 
	`GET_REAL
(
fgës
);

73 *
ªs
 = 
	`ªÆ_fgës
(
buf
, 
Àn
, 
f
);

74 i‡(
Áû_ªad
 =
f
)

76  
ªs
;

77 
	}
}

79 
size_t
 
	$‰ód
(*
buf
, 
size_t
 
sz
, size_à
√mb
, 
FILE
 *
f
) {

80 
	`GET_REAL
(
‰ód
);

81 
size_t
 
ªs
 = 
	`ªÆ_‰ód
(
buf
, 
sz
, 
√mb
, 
f
);

82 i‡(
Áû_ªad
 =
f
)

84  
ªs
;

85 
	}
}

87 
size_t
 
	$fwrôe
(c⁄° *
buf
, 
size_t
 
sz
, size_à
√mb
, 
FILE
 *
f
) {

88 
	`GET_REAL
(
fwrôe
);

89 
size_t
 
ªs
 = 
	`ªÆ_fwrôe
(
buf
, 
sz
, 
√mb
, 
f
);

90 i‡(
Áû_wrôe
 =
f
)

92  
ªs
;

93 
	}
}

95 
	$„º‹
(
FILE
 *
f
) {

96 
	`GET_REAL
(
„º‹
);

97 
ªs
 = 
	`ªÆ_„º‹
(
f
);

98 i‡(
Áû
 =
f
) {

99 
î∫o
 = 
îr‹
;

102  
ªs
;

103 
	}
}

105 
	$˛óªº
(
FILE
 *
f
) {

106 
	`GET_REAL
(
˛óªº
);

107 
	`ªÆ_˛óªº
(
f
);

108 i‡(
Áû
 =
f
) {

109 
Áû
 = 
Áû_ªad
 = 
Áû_wrôe
 = 
Áû_˛o£
 = 0;

110 
îr‹
 = 0;

112 
	}
}

	@src/jq.h

1 #i‚de‡
JQ_H


2 
	#JQ_H


	)

4 
	~<°dio.h
>

5 
	~"jv.h
"

8 
	mJQ_DEBUG_TRACE
 = 1,

9 
	mJQ_DEBUG_TRACE_DETAIL
 = 2,

10 
	mJQ_DEBUG_TRACE_ALL
 = 
JQ_DEBUG_TRACE
 | 
JQ_DEBUG_TRACE_DETAIL
,

13 
jq_°©e
 
	tjq_°©e
;

14 (*
	tjq_msg_cb
)(*, 
	tjv
);

16 
jq_°©e
 *
	`jq_öô
();

17 
	`jq_£t_îr‹_cb
(
jq_°©e
 *, 
jq_msg_cb
, *);

18 
	`jq_gë_îr‹_cb
(
jq_°©e
 *, 
jq_msg_cb
 *, **);

19 
	`jq_£t_nomem_h™dÀr
(
jq_°©e
 *, (*)(*), *);

20 
jv
 
	`jq_f‹m©_îr‹
(jv 
msg
);

21 
	`jq_ªp‹t_îr‹
(
jq_°©e
 *, 
jv
);

22 
	`jq_compûe
(
jq_°©e
 *, const *);

23 
	`jq_compûe_¨gs
(
jq_°©e
 *, c⁄° *, 
jv
);

24 
	`jq_dump_dißs£mbly
(
jq_°©e
 *, );

25 
	`jq_°¨t
(
jq_°©e
 *, 
jv
 
vÆue
, );

26 
jv
 
	`jq_√xt
(
jq_°©e
 *);

27 
	`jq_ã¨down
(
jq_°©e
 **);

29 
	`jq_hÆt
(
jq_°©e
 *, 
jv
, jv);

30 
	`jq_hÆãd
(
jq_°©e
 *);

31 
jv
 
	`jq_gë_exô_code
(
jq_°©e
 *);

32 
jv
 
	`jq_gë_îr‹_mesßge
(
jq_°©e
 *);

34 
	$jv
 (*
	tjq_öput_cb
)(
	tjq_°©e
 *, *);

35 
	`jq_£t_öput_cb
(
jq_°©e
 *, 
jq_öput_cb
, *);

36 
	`jq_gë_öput_cb
(
jq_°©e
 *, 
jq_öput_cb
 *, **);

38 
	`jq_£t_debug_cb
(
jq_°©e
 *, 
jq_msg_cb
, *);

39 
	`jq_gë_debug_cb
(
jq_°©e
 *, 
jq_msg_cb
 *, **);

41 
	`jq_£t_©ås
(
jq_°©e
 *, 
jv
);

42 
jv
 
	`jq_gë_©ås
(
jq_°©e
 *);

43 
jv
 
	`jq_gë_jq_‹igö
(
jq_°©e
 *);

44 
jv
 
	`jq_gë_¥og_‹igö
(
jq_°©e
 *);

45 
jv
 
	`jq_gë_lib_dús
(
jq_°©e
 *);

46 
	`jq_£t_©å
(
jq_°©e
 *, 
jv
, jv);

47 
jv
 
	`jq_gë_©å
(
jq_°©e
 *, jv);

55 
jq_utû_öput_°©e
 
	tjq_utû_öput_°©e
;

56 (*
	tjq_utû_msg_cb
)(*, const *);

58 
jq_utû_öput_°©e
 *
	`jq_utû_öput_öô
(
jq_utû_msg_cb
, *);

59 
	`jq_utû_öput_£t_∑r£r
(
jq_utû_öput_°©e
 *, 
jv_∑r£r
 *, );

60 
	`jq_utû_öput_‰ì
(
jq_utû_öput_°©e
 **);

61 
	`jq_utû_öput_add_öput
(
jq_utû_öput_°©e
 *, const *);

62 
	`jq_utû_öput_îr‹s
(
jq_utû_öput_°©e
 *);

63 
jv
 
	`jq_utû_öput_√xt_öput
(
jq_utû_öput_°©e
 *);

64 
jv
 
	`jq_utû_öput_√xt_öput_cb
(
jq_°©e
 *, *);

65 
jv
 
	`jq_utû_öput_gë_posôi⁄
(
jq_°©e
*);

66 
jv
 
	`jq_utû_öput_gë_cuºít_fûíame
(
jq_°©e
*);

67 
jv
 
	`jq_utû_öput_gë_cuºít_löe
(
jq_°©e
*);

69 
	`jq_£t_cﬁ‹s
(const *);

	@src/jq_parser.h

1 #i‚de‡
JQ_PARSER_H


2 
	#JQ_PARSER_H


	)

3 
	~"locfûe.h
"

4 
	~"compûe.h
"

6 
jq_∑r£
(
locfûe
* 
sour˚
, 
block
* 
™swî
);

7 
jq_∑r£_libøry
(
locfûe
* 
loˇti⁄s
, 
block
* 
™swî
);

	@src/jq_test.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~"jv.h
"

6 
	~"jq.h
"

8 
jv_ã°
();

9 
run_jq_ã°s
(
jv
, , 
FILE
 *, , );

12 
	$jq_ã°suôe
(
jv
 
libdús
, 
vîbo£
, 
¨gc
, * 
¨gv
[]) {

13 
FILE
 *
ã°d©a
 = 
°dö
;

14 
skù
 = -1;

15 
èke
 = -1;

16 
	`jv_ã°
();

17 i‡(
¨gc
 > 0) {

18 
i
 = 0; i < 
¨gc
; i++) {

19 i‡(!
	`°rcmp
(
¨gv
[
i
], "--skip")) {

20 
skù
 = 
	`©oi
(
¨gv
[
i
+1]);

21 
i
++;

22 } i‡(!
	`°rcmp
(
¨gv
[
i
], "--take")) {

23 
èke
 = 
	`©oi
(
¨gv
[
i
+1]);

24 
i
++;

26 
ã°d©a
 = 
	`f›í
(
¨gv
[
i
], "r");

27 i‡(!
ã°d©a
) {

28 
	`≥º‹
("fopen");

29 
	`exô
(1);

34 
	`run_jq_ã°s
(
libdús
, 
vîbo£
, 
ã°d©a
, 
skù
, 
èke
);

36 
	}
}

38 
	$skùlöe
(c⁄° * 
buf
) {

39 
p
 = 0;

40 
buf
[
p
] == ' ' || buf[p] == '\t')Ö++;

41 i‡(
buf
[
p
] == '#' || buf[p] == '\n' || buf[p] == 0)  1;

43 
	}
}

45 
	$checkîr‹msg
(c⁄° * 
buf
) {

46  
	`°rcmp
(
buf
, "%%FAIL\n") == 0;

47 
	}
}

49 
	$checkÁû
(c⁄° * 
buf
) {

50  
	`°rcmp
(
buf
, "%%FAIL\n") == 0 || strcmp(buf, "%%FAIL IGNORE MSG\n") == 0;

51 
	}
}

53 
	sîr_d©a
 {

54 
	mbuf
[4096];

57 
	$ã°_îr_cb
(*
d©a
, 
jv
 
e
) {

58 
îr_d©a
 *îr_d©®
d©a
;

59 i‡(
	`jv_gë_köd
(
e
Ë!
JV_KIND_STRING
)

60 
e
 = 
	`jv_dump_°rög
”, 
JV_PRINT_INVALID
);

61 i‡(!
	`°∫cmp
(
	`jv_°rög_vÆue
(
e
), "jq:Érror", ("jq:Érror") - 1))

62 
	`¢¥ötf
(
îr_d©a
->
buf
, ”º_d©a->buf), "%s", 
	`jv_°rög_vÆue
(
e
));

63 i‡(
	`°rchr
(
îr_d©a
->
buf
, '\n'))

64 *(
	`°rchr
(
îr_d©a
->
buf
, '\n')) = '\0';

65 
	`jv_‰ì
(
e
);

66 
	}
}

68 
	$run_jq_ã°s
(
jv
 
lib_dús
, 
vîbo£
, 
FILE
 *
ã°d©a
, 
skù
, 
èke
) {

69 
¥og
[4096];

70 
buf
[4096];

71 
îr_d©a
 
îr_msg
;

72 
ã°s
 = 0, 
∑s£d
 = 0, 
övÆid
 = 0;

73 
löío
 = 0;

74 
mu°_Áû
 = 0;

75 
check_msg
 = 0;

76 
jq_°©e
 *
jq
 = 
NULL
;

78 
ã°s_to_skù
 = 
skù
 > 0 ? skip : 0;

79 
ã°s_to_èke
 = 
èke
;

81 
jq
 = 
	`jq_öô
();

82 
	`as£π
(
jq
);

83 i‡(
	`jv_gë_köd
(
lib_dús
Ë=
JV_KIND_NULL
)

84 
lib_dús
 = 
	`jv_¨øy
();

85 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("JQ_LIBRARY_PATH"), 
lib_dús
);

88 i‡(!
	`fgës
(
¥og
, ’rog), 
ã°d©a
)) ;

89 
löío
++;

90 i‡(
	`skùlöe
(
¥og
)) ;

91 i‡(
	`checkÁû
(
¥og
)) {

92 
mu°_Áû
 = 1;

93 
check_msg
 = 
	`checkîr‹msg
(
¥og
);

94 
	`jq_£t_îr‹_cb
(
jq
, 
ã°_îr_cb
, &
îr_msg
);

97 i‡(
¥og
[
	`°æí
(prog)-1] == '\n')Örog[strlen(prog)-1] = 0;

99 i‡(
skù
 > 0) {

100 
skù
--;

103 
	`fgës
(
buf
, (buf), 
ã°d©a
)) {

104 
löío
++;

105 i‡(
buf
[0] == '\n' || (buf[0] == '\r' && buf[1] == '\n'))

109 
mu°_Áû
 = 0;

110 
check_msg
 = 0;

113 } i‡(
skù
 == 0) {

114 
	`¥ötf
("Skù≥d %dÅe°s\n", 
ã°s_to_skù
);

115 
skù
 = -1;

118 i‡(
èke
 > 0) {

119 
èke
--;

120 } i‡(
èke
 == 0) {

121 
	`¥ötf
("HôÅhênumbî o‡ã°†limô (%d), bªakög\n", 
ã°s_to_èke
);

122 
èke
 = -1;

126 
∑ss
 = 1;

127 
ã°s
++;

128 
	`¥ötf
("Te° #%d: '%s'áàlöênumbî %u\n", 
ã°s
 + 
ã°s_to_skù
, 
¥og
, 
löío
);

129 
compûed
 = 
	`jq_compûe
(
jq
, 
¥og
);

131 i‡(
mu°_Áû
) {

132 
	`jq_£t_îr‹_cb
(
jq
, 
NULL
, NULL);

133 i‡(!
	`fgës
(
buf
, (buf), 
ã°d©a
)Ë{ 
övÆid
++; ; }

134 
löío
++;

135 i‡(
buf
[
	`°æí
(buf)-1] == '\n') buf[strlen(buf)-1] = 0;

136 i‡(
compûed
) {

137 
	`¥ötf
("*** Te°Örogøm compûedÅh© shouldÇŸ havê©Üöê%u: %s\n", 
löío
, 
¥og
);

138 
mu°_Áû
 = 0;

139 
check_msg
 = 0;

140 
övÆid
++;

143 i‡(
check_msg
 && 
	`°rcmp
(
buf
, 
îr_msg
.buf) != 0) {

144 
	`¥ötf
("*** Eº⁄eou†ã°Örogøm faûed wôh wr⁄g mesßgê(%sË©Üöê%u: %s\n", 
îr_msg
.
buf
, 
löío
, 
¥og
);

145 
övÆid
++;

147 
∑s£d
++;

149 
mu°_Áû
 = 0;

150 
check_msg
 = 0;

154 i‡(!
compûed
) {

155 
	`¥ötf
("*** Te°Örogøm faûedÅÿcompûê©Üöê%u: %s\n", 
löío
, 
¥og
);

156 
övÆid
++;

158 
	`fgës
(
buf
, (buf), 
ã°d©a
)) {

159 
löío
++;

160 i‡(
buf
[0] == '\n' || (buf[0] == '\r' && buf[1] == '\n'))

165 i‡(
vîbo£
) {

166 
	`¥ötf
("Disassembly:\n");

167 
	`jq_dump_dißs£mbly
(
jq
, 2);

168 
	`¥ötf
("\n");

170 i‡(!
	`fgës
(
buf
, (buf), 
ã°d©a
)Ë{ 
övÆid
++; ; }

171 
löío
++;

172 
jv
 
öput
 = 
	`jv_∑r£
(
buf
);

173 i‡(!
	`jv_is_vÆid
(
öput
)) {

174 
	`¥ötf
("*** I≈uài†övÆid o¿löê%u: %s\n", 
löío
, 
buf
);

175 
övÆid
++;

178 
	`jq_°¨t
(
jq
, 
öput
, 
vîbo£
 ? 
JQ_DEBUG_TRACE
 : 0);

180 
	`fgës
(
buf
, (buf), 
ã°d©a
)) {

181 
löío
++;

182 i‡(
	`skùlöe
(
buf
)) ;

183 
jv
 
ex≥˘ed
 = 
	`jv_∑r£
(
buf
);

184 i‡(!
	`jv_is_vÆid
(
ex≥˘ed
)) {

185 
	`¥ötf
("*** Ex≥˘edÑesu… i†övÆid o¿löê%u: %s\n", 
löío
, 
buf
);

186 
övÆid
++;

189 
jv
 
a˘uÆ
 = 
	`jq_√xt
(
jq
);

190 i‡(!
	`jv_is_vÆid
(
a˘uÆ
)) {

191 
	`jv_‰ì
(
a˘uÆ
);

192 
	`¥ötf
("*** Insufficõ¡Ñesu…†f‹Åe°áàlöênumbî %u: %s\n", 
löío
, 
¥og
);

193 
∑ss
 = 0;

195 } i‡(!
	`jv_equÆ
(
	`jv_c›y
(
ex≥˘ed
), jv_c›y(
a˘uÆ
))) {

196 
	`¥ötf
("*** Expected ");

197 
	`jv_dump
(
	`jv_c›y
(
ex≥˘ed
), 0);

198 
	`¥ötf
(", but got ");

199 
	`jv_dump
(
	`jv_c›y
(
a˘uÆ
), 0);

200 
	`¥ötf
(" f‹Åe°áàlöênumbî %u: %s\n", 
löío
, 
¥og
);

201 
∑ss
 = 0;

203 
jv
 
as_°rög
 = 
	`jv_dump_°rög
(
	`jv_c›y
(
ex≥˘ed
), 
	`ønd
(Ë& ~(
JV_PRINT_COLOR
|
JV_PRINT_REFCOUNT
));

204 
jv
 
ª∑r£d
 = 
	`jv_∑r£_sized
(
	`jv_°rög_vÆue
(
as_°rög
), 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(as_string)));

205 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
ex≥˘ed
), jv_c›y(
ª∑r£d
)));

206 
	`jv_‰ì
(
as_°rög
);

207 
	`jv_‰ì
(
ª∑r£d
);

208 
	`jv_‰ì
(
ex≥˘ed
);

209 
	`jv_‰ì
(
a˘uÆ
);

211 i‡(
∑ss
) {

212 
jv
 
exåa
 = 
	`jq_√xt
(
jq
);

213 i‡(
	`jv_is_vÆid
(
exåa
)) {

214 
	`¥ötf
("*** SuperfluousÑesult: ");

215 
	`jv_dump
(
exåa
, 0);

216 
	`¥ötf
(" f‹Åe°áàlöênumbî %u, %s\n", 
löío
, 
¥og
);

217 
∑ss
 = 0;

219 
	`jv_‰ì
(
exåa
);

222 
∑s£d
+=
∑ss
;

224 
	`jq_ã¨down
(&
jq
);

226 
tŸÆ_skù≥d
 = 
ã°s_to_skù
;

228 i‡(
skù
 > 0) {

229 
tŸÆ_skù≥d
 = 
ã°s_to_skù
 - 
skù
;

232 
	`¥ötf
("%d of %dÅestsÖassed (%d malformed, %d skipped)\n",

233 
∑s£d
, 
ã°s
, 
övÆid
, 
tŸÆ_skù≥d
);

235 i‡(
skù
 > 0) {

236 
	`¥ötf
("WARN: skippedÖastÅheÉnd of file,Éxiting with status 2\n");

237 
	`exô
(2);

240 i‡(
∑s£d
 !
ã°s
Ë
	`exô
(1);

241 
	}
}

244 
	$jv_ã°
() {

247 
jv
 
v
 = 
	`jv_∑r£
("{\"a':\"12\"}");

248 
	`as£π
(
	`jv_gë_köd
(
v
Ë=
JV_KIND_INVALID
);

249 
v
 = 
	`jv_övÆid_gë_msg
(v);

250 
	`as£π
(
	`°rcmp
(
	`jv_°rög_vÆue
(
v
), "Expected separator between valuesátÜine 1, column 9 (whileÖarsing '{\"a':\"12\"}')") == 0);

251 
	`jv_‰ì
(
v
);

255 
jv
 
a
 = 
	`jv_¨øy
();

256 
	`as£π
(
	`jv_gë_köd
(
a
Ë=
JV_KIND_ARRAY
);

257 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) == 0);

258 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) == 0);

260 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_numbî
(42));

261 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) == 1);

262 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 0)) == 42);

264 
jv
 
a2
 = 
	`jv_¨øy_≠≥nd
(
	`jv_¨øy
(), 
	`jv_numbî
(42));

265 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a
), jv_copy(a)));

266 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a2
), jv_copy(a2)));

267 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a
), jv_c›y(
a2
)));

268 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a2
), jv_c›y(
a
)));

269 
	`jv_‰ì
(
a2
);

271 
a2
 = 
	`jv_¨øy_≠≥nd
(
	`jv_¨øy
(), 
	`jv_numbî
(19));

272 
	`as£π
(!
	`jv_equÆ
(
	`jv_c›y
(
a
), jv_c›y(
a2
)));

273 
	`as£π
(!
	`jv_equÆ
(
	`jv_c›y
(
a2
), jv_c›y(
a
)));

274 
	`jv_‰ì
(
a2
);

277 
	`as£π
(
	`jv_gë_ªf˙t
(
a
) == 1);

278 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_c›y
(a));

279 
	`as£π
(
	`jv_gë_ªf˙t
(
a
) == 1);

281 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) == 2);

282 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 0)) == 42);

284 
i
=0; i<10; i++) {

285 
jv
 
sub¨øy
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 1);

286 
	`as£π
(
	`jv_gë_köd
(
sub¨øy
Ë=
JV_KIND_ARRAY
);

287 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
sub¨øy
)) == 1);

288 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
sub¨øy
), 0)) == 42);

289 
	`jv_‰ì
(
sub¨øy
);

293 
jv
 
sub¨øy
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 1);

294 
	`as£π
(
	`jv_gë_köd
(
sub¨øy
Ë=
JV_KIND_ARRAY
);

295 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
sub¨øy
)) == 1);

296 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
sub¨øy
), 0)) == 42);

298 
jv
 
sub2
 = 
	`jv_c›y
(
sub¨øy
);

299 
sub2
 = 
	`jv_¨øy_≠≥nd
(sub2, 
	`jv_numbî
(19));

301 
	`as£π
(
	`jv_gë_köd
(
sub2
Ë=
JV_KIND_ARRAY
);

302 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
sub2
)) == 2);

303 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
sub2
), 0)) == 42);

304 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
sub2
), 1)) == 19);

306 
	`as£π
(
	`jv_gë_köd
(
sub¨øy
Ë=
JV_KIND_ARRAY
);

307 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
sub¨øy
)) == 1);

308 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
sub¨øy
), 0)) == 42);

310 
	`jv_‰ì
(
sub¨øy
);

312 * 
bef‹e
 = 
sub2
.
u
.
±r
;

313 
sub2
 = 
	`jv_¨øy_≠≥nd
(sub2, 
	`jv_numbî
(200));

314 * 
a·î
 = 
sub2
.
u
.
±r
;

315 
	`as£π
(
bef‹e
 =
a·î
);

316 
	`jv_‰ì
(
sub2
);

318 
jv
 
a3
 = 
	`jv_¨øy_≠≥nd
(
	`jv_c›y
(
a
), 
	`jv_numbî
(19));

319 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a3
)) == 3);

320 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a3
), 0)) == 42);

321 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a3
), 1)) == 1);

322 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a3
), 2)) == 19);

323 
	`jv_‰ì
(
a3
);

326 
jv
 
a4
 = 
	`jv_¨øy
();

327 
a4
 = 
	`jv_¨øy_≠≥nd
◊4, 
	`jv_numbî
(1));

328 
a4
 = 
	`jv_¨øy_≠≥nd
◊4, 
	`jv_numbî
(2));

329 
jv
 
a5
 = 
	`jv_c›y
(
a4
);

330 
a4
 = 
	`jv_¨øy_≠≥nd
◊4, 
	`jv_numbî
(3));

331 
a4
 = 
	`jv_¨øy_¶i˚
(a4, 0, 1);

332 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a4
)) == 1);

333 
a4
 = 
	`jv_¨øy_≠≥nd
◊4, 
	`jv_numbî
(4));

334 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a4
)) == 2);

335 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a5
)) == 2);

336 
	`jv_‰ì
(
a4
);

337 
	`jv_‰ì
(
a5
);

340 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)) == 2);

341 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 0)) == 42);

342 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 1)) == 1);

346 
	`jv_‰ì
(
a
);

352 
	`as£π
(
	`jv_equÆ
(
	`jv_°rög
("foo"), 
	`jv_°rög_sized
("foo", 3)));

353 
«°y
[] = "foo\0";

354 
jv
 
sh‹t°r
 = 
	`jv_°rög
(
«°y
), 
l⁄g°r
 = 
	`jv_°rög_sized
(nasty, (nasty));

355 
	`as£π
(
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
sh‹t°r
)Ë=()
	`°æí
(
«°y
));

356 
	`as£π
(
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
l⁄g°r
)Ë=()(
«°y
));

357 
	`jv_‰ì
(
sh‹t°r
);

358 
	`jv_‰ì
(
l⁄g°r
);

361 
a1s
[] = "hñlo", 
a2s
[] = "hñlo", 
bs
[] = "goodbye";

362 
jv
 
a1
 = 
	`jv_°rög
(
a1s
), 
a2
 = jv_°rög(
a2s
), 
b
 = jv_°rög(
bs
);

363 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a1
), jv_c›y(
a2
)));

364 
	`as£π
(
	`jv_equÆ
(
	`jv_c›y
(
a2
), jv_c›y(
a1
)));

365 
	`as£π
(!
	`jv_equÆ
(
	`jv_c›y
(
a1
), jv_c›y(
b
)));

367 
	`as£π
(
	`jv_°rög_hash
(
	`jv_c›y
(
a1
)) == jv_string_hash(jv_copy(a1)));

368 
	`as£π
(
	`jv_°rög_hash
(
	`jv_c›y
(
a1
)Ë=jv_°rög_hash(jv_c›y(
a2
)));

369 
	`as£π
(
	`jv_°rög_hash
(
	`jv_c›y
(
b
)Ë!jv_°rög_hash(jv_c›y(
a1
)));

370 
	`jv_‰ì
(
a1
);

371 
	`jv_‰ì
(
a2
);

372 
	`jv_‰ì
(
b
);

374 
	`as£π
(
	`jv_equÆ
(
	`jv_°rög
("hñlo42!"), 
	`jv_°rög_fmt
("hello%d%s", 42, "!")));

375 
big
[20000];

376 
i
=0; i<()(
big
); i++) big[i] = 'a';

377 
big
[(big)-1] = 0;

378 
jv
 
°r
 = 
	`jv_°rög_fmt
("%s", 
big
);

379 
	`as£π
(
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
°r
)Ë=(
big
) - 1);

380 
	`as£π
(!
	`°rcmp
(
big
, 
	`jv_°rög_vÆue
(
°r
)));

381 
	`jv_‰ì
(
°r
);

386 
jv
 
o1
 = 
	`jv_obje˘
();

387 
o1
 = 
	`jv_obje˘_£t
(o1, 
	`jv_°rög
("foo"), 
	`jv_numbî
(42));

388 
o1
 = 
	`jv_obje˘_£t
(o1, 
	`jv_°rög
("b¨"), 
	`jv_numbî
(24));

389 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o1
), 
	`jv_°rög
("foo"))) == 42);

390 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o1
), 
	`jv_°rög
("bar"))) == 24);

392 
jv
 
o2
 = 
	`jv_obje˘_£t
(
	`jv_c›y
(
o1
), 
	`jv_°rög
("foo"), 
	`jv_numbî
(420));

393 
o2
 = 
	`jv_obje˘_£t
(o2, 
	`jv_°rög
("b¨"), 
	`jv_numbî
(240));

394 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o1
), 
	`jv_°rög
("foo"))) == 42);

395 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o1
), 
	`jv_°rög
("bar"))) == 24);

396 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o2
), 
	`jv_°rög
("foo"))) == 420);

397 
	`jv_‰ì
(
o1
);

398 
	`as£π
(
	`jv_numbî_vÆue
(
	`jv_obje˘_gë
(
	`jv_c›y
(
o2
), 
	`jv_°rög
("bar"))) == 240);

401 
	`jv_‰ì
(
o2
);

403 
	}
}

	@src/jv.c

33 
	~<°döt.h
>

34 
	~<°ddef.h
>

35 
	~<as£π.h
>

36 
	~<°dlib.h
>

37 
	~<°dio.h
>

38 
	~<°rög.h
>

39 
	~<°d¨g.h
>

40 
	~<limôs.h
>

41 
	~<m©h.h
>

42 
	~<Êﬂt.h
>

44 
	~"jv_Æloc.h
"

45 
	~"jv.h
"

46 
	~"jv_unicode.h
"

47 
	~"utû.h
"

49 
	~"jv_dtﬂ.h
"

50 
	~"jv_dtﬂ_tsd.h
"

53 
	#DECNUMDIGITS
 1

	)

54 
	~"decNumbî/decNumbî.h
"

56 
	~"jv_ty≥_¥iv©e.h
"

62 
	sjv_ªf˙t
 {

63 
	mcou¡
;

64 } 
	tjv_ªf˙t
;

66 c⁄° 
jv_ªf˙t
 
	gJV_REFCNT_INIT
 = {1};

68 
	$jvp_ªf˙t_öc
(
jv_ªf˙t
* 
c
) {

69 
c
->
cou¡
++;

70 
	}
}

72 
	$jvp_ªf˙t_dec
(
jv_ªf˙t
* 
c
) {

73 
c
->
cou¡
--;

74  
c
->
cou¡
 == 0;

75 
	}
}

77 
	$jvp_ªf˙t_unsh¨ed
(
jv_ªf˙t
* 
c
) {

78 
	`as£π
(
c
->
cou¡
 > 0);

79  
c
->
cou¡
 == 1;

80 
	}
}

82 
	#KIND_MASK
 0xF

	)

83 
	#PFLAGS_MASK
 0xF0

	)

84 
	#PTYPE_MASK
 0x70

	)

87 
	mJVP_PAYLOAD_NONE
 = 0,

88 
	mJVP_PAYLOAD_ALLOCATED
 = 0x80,

89 } 
	t∑ylﬂd_Êags
;

91 
	#JVP_MAKE_PFLAGS
(
±y≥
, 
Æloˇãd
Ë(((’ty≥Ë<< 4Ë& 
PTYPE_MASK
Ë| (◊ŒoˇãdË? 
JVP_PAYLOAD_ALLOCATED
 : 0))

	)

92 
	#JVP_MAKE_FLAGS
(
köd
, 
pÊags
Ë((köd & 
KIND_MASK
Ë| (pÊag†& 
PFLAGS_MASK
))

	)

94 
	#JVP_FLAGS
(
j
Ë((j).
köd_Êags
)

	)

95 
	#JVP_KIND
(
j
Ë(
	`JVP_FLAGS
(jË& 
KIND_MASK
)

	)

97 
	#JVP_HAS_FLAGS
(
j
, 
Êags
Ë(
	`JVP_FLAGS
(jË=Êags)

	)

98 
	#JVP_HAS_KIND
(
j
, 
köd
Ë(
	`JVP_KIND
(jË=köd)

	)

100 
	#JVP_IS_ALLOCATED
(
j
Ë(j.
köd_Êags
 & 
JVP_PAYLOAD_ALLOCATED
)

	)

102 
	#JVP_FLAGS_NULL
 
	`JVP_MAKE_FLAGS
(
JV_KIND_NULL
, 
JVP_PAYLOAD_NONE
)

	)

103 
	#JVP_FLAGS_INVALID
 
	`JVP_MAKE_FLAGS
(
JV_KIND_INVALID
, 
JVP_PAYLOAD_NONE
)

	)

104 
	#JVP_FLAGS_FALSE
 
	`JVP_MAKE_FLAGS
(
JV_KIND_FALSE
, 
JVP_PAYLOAD_NONE
)

	)

105 
	#JVP_FLAGS_TRUE
 
	`JVP_MAKE_FLAGS
(
JV_KIND_TRUE
, 
JVP_PAYLOAD_NONE
)

	)

107 
jv_köd
 
	$jv_gë_köd
(
jv
 
x
) {

108  
	`JVP_KIND
(
x
);

109 
	}
}

111 c⁄° * 
	$jv_köd_«me
(
jv_köd
 
k
) {

112 
k
) {

113 
JV_KIND_INVALID
:  "<invalid>";

114 
JV_KIND_NULL
:  "null";

115 
JV_KIND_FALSE
:  "boolean";

116 
JV_KIND_TRUE
:  "boolean";

117 
JV_KIND_NUMBER
:  "number";

118 
JV_KIND_STRING
:  "string";

119 
JV_KIND_ARRAY
:  "array";

120 
JV_KIND_OBJECT
:  "object";

122 
	`as£π
(0 && "invalid kind");

124 
	}
}

126 c⁄° 
jv
 
	gJV_NULL
 = {
JVP_FLAGS_NULL
, 0, 0, 0, {0}};

127 c⁄° 
jv
 
	gJV_INVALID
 = {
JVP_FLAGS_INVALID
, 0, 0, 0, {0}};

128 c⁄° 
jv
 
	gJV_FALSE
 = {
JVP_FLAGS_FALSE
, 0, 0, 0, {0}};

129 c⁄° 
jv
 
	gJV_TRUE
 = {
JVP_FLAGS_TRUE
, 0, 0, 0, {0}};

131 
jv
 
	$jv_åue
() {

132  
JV_TRUE
;

133 
	}
}

135 
jv
 
	$jv_Ál£
() {

136  
JV_FALSE
;

137 
	}
}

139 
jv
 
	$jv_nuŒ
() {

140  
JV_NULL
;

141 
	}
}

143 
jv
 
	$jv_boﬁ
(
x
) {

144  
x
 ? 
JV_TRUE
 : 
JV_FALSE
;

145 
	}
}

151 
	#JVP_FLAGS_INVALID_MSG
 
	`JVP_MAKE_FLAGS
(
JV_KIND_INVALID
, 
JVP_PAYLOAD_ALLOCATED
)

	)

154 
jv_ªf˙t
 
	mªf˙t
;

155 
jv
 
	mîrmsg
;

156 } 
	tjvp_övÆid
;

158 
jv
 
	$jv_övÆid_wôh_msg
(
jv
 
îr
) {

159 i‡(
	`JVP_HAS_KIND
(
îr
, 
JV_KIND_NULL
))

160  
JV_INVALID
;

161 
jvp_övÆid
* 
i
 = 
	`jv_mem_Æloc
((jvp_invalid));

162 
i
->
ªf˙t
 = 
JV_REFCNT_INIT
;

163 
i
->
îrmsg
 = 
îr
;

165 
jv
 
x
 = {
JVP_FLAGS_INVALID_MSG
, 0, 0, 0, {&
i
->
ªf˙t
}};

166  
x
;

167 
	}
}

169 
jv
 
	$jv_övÆid
() {

170  
JV_INVALID
;

171 
	}
}

173 
jv
 
	$jv_övÆid_gë_msg
(
jv
 
öv
) {

174 
	`as£π
(
	`JVP_HAS_KIND
(
öv
, 
JV_KIND_INVALID
));

176 
jv
 
x
;

177 i‡(
	`JVP_HAS_FLAGS
(
öv
, 
JVP_FLAGS_INVALID_MSG
)) {

178 
x
 = 
	`jv_c›y
(((
jvp_övÆid
*)
öv
.
u
.
±r
)->
îrmsg
);

181 
x
 = 
	`jv_nuŒ
();

184 
	`jv_‰ì
(
öv
);

185  
x
;

186 
	}
}

188 
	$jv_övÆid_has_msg
(
jv
 
öv
) {

189 
	`as£π
(
	`JVP_HAS_KIND
(
öv
, 
JV_KIND_INVALID
));

190 
r
 = 
	`JVP_HAS_FLAGS
(
öv
, 
JVP_FLAGS_INVALID_MSG
);

191 
	`jv_‰ì
(
öv
);

192  
r
;

193 
	}
}

195 
	$jvp_övÆid_‰ì
(
jv
 
x
) {

196 
	`as£π
(
	`JVP_HAS_KIND
(
x
, 
JV_KIND_INVALID
));

197 i‡(
	`JVP_HAS_FLAGS
(
x
, 
JVP_FLAGS_INVALID_MSG
Ë&& 
	`jvp_ªf˙t_dec
(x.
u
.
±r
)) {

198 
	`jv_‰ì
(((
jvp_övÆid
*)
x
.
u
.
±r
)->
îrmsg
);

199 
	`jv_mem_‰ì
(
x
.
u
.
±r
);

201 
	}
}

208 
	mJVP_NUMBER_NATIVE
 = 0,

209 
	mJVP_NUMBER_DECIMAL
 = 1

212 
	#JV_NUMBER_SIZE_INIT
 (0)

	)

213 
	#JV_NUMBER_SIZE_CONVERTED
 (1)

	)

215 
	#JVP_FLAGS_NUMBER_NATIVE
 
	`JVP_MAKE_FLAGS
(
JV_KIND_NUMBER
, 
	`JVP_MAKE_PFLAGS
(
JVP_NUMBER_NATIVE
, 0))

	)

216 
	#JVP_FLAGS_NUMBER_NATIVE_STR
 
	`JVP_MAKE_FLAGS
(
JV_KIND_NUMBER
, 
	`JVP_MAKE_PFLAGS
(
JVP_NUMBER_NATIVE
, 1))

	)

217 
	#JVP_FLAGS_NUMBER_LITERAL
 
	`JVP_MAKE_FLAGS
(
JV_KIND_NUMBER
, 
	`JVP_MAKE_PFLAGS
(
JVP_NUMBER_DECIMAL
, 1))

	)

219 
	#STR
(
x
Ë#x

	)

220 
	#XSTR
(
x
Ë
	`STR
(x)

	)

221 
	#DBL_MAX_STR
 
	`XSTR
(
DBL_MAX
)

	)

222 
	#DBL_MIN_STR
 "-" 
	`XSTR
(
DBL_MAX
)

	)

225 
	#BIN64_DEC_PRECISION
 (17)

	)

226 
	#DEC_NUMBER_STRING_GUARD
 (14)

	)

228 #ifde‡
__APPLE__


229 
	~"jv_thªad.h
"

231 
	~<jv_thªad.h
>

233 #ifde‡
WIN32


252 
és_keys
 
	tés_keys
;

253 
	sés_keys
 {

254 (**
	mkeys_dt‹s
)(*);

255 
size_t
 
	mkeys_°¨t_idx
;

256 
size_t
 
	mkeys_num
;

257 
és_keys
 *
	mkeys_√xt
;

264 
±hªad_muãx_t
 
	gés_key_defs_lock
 = 
PTHREAD_MUTEX_INITIALIZER
;

265 
és_keys
 *
	gés_key_defs
;

268 
	sés_vÆues
 {

269 **
	mvÆues
;

270 
size_t
 
	mvÆues_num
;

273 #ifde‡
_MSC_VER


274 
	$__de˛•ec
(
thªad
Ë
nomem_h™dÀr
Çomem_handler;

276 
__thªad
 
és_vÆues
 
vÆues
;

279 
	#DEAD_KEY
 ((*)8)

	)

282 
	$w32_£rvi˚_thªad_dëach
(*
unu£d
)

284 
és_keys
 *
key_defs
;

285 (*
dt‹
)(*);

286 
size_t
 
i
;

288 
	`±hªad_muãx_lock
(&
és_key_defs_lock
);

289 
key_defs
 = 
és_key_defs
;

290 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

292 i‡(
key_defs
 =
NULL
)

295 
i
 = 0; i < 
vÆues
.
vÆues_num
; i++) {

296 
	`as£π
(
i
 >
key_defs
->
keys_°¨t_idx
);

297 i‡(
i
 >
key_defs
->
keys_°¨t_idx
 + key_defs->
keys_num
) {

298 
	`±hªad_muãx_lock
(&
és_key_defs_lock
);

299 
key_defs
 = key_defs->
keys_√xt
;

300 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

302 
	`as£π
(
key_defs
 !
NULL
);

303 
	`as£π
(
i
 >
key_defs
->
keys_°¨t_idx
);

304 
	`as£π
(
i
 < 
key_defs
->
keys_°¨t_idx
 + key_defs->
keys_num
);

306 
dt‹
 = 
key_defs
->
keys_dt‹s
[
i
 - key_defs->
keys_°¨t_idx
];

307 i‡(
vÆues
.vÆues[
i
] !
NULL
 && 
dt‹
 !NULL && dt‹ !
DEAD_KEY
)

308 
	`dt‹
(
vÆues
.vÆues[
i
]);

309 
vÆues
.vÆues[
i
] = 
NULL
;

311 
	}
}

313 
jv_tsd_dtﬂ_˘x_öô
();

314 
jv_tsd_dtﬂ_˘x_föi
();

315 
jv_tsd_dec_˘x_föi
();

316 
jv_tsd_dec_˘x_öô
();

318 
BOOL
 
WINAPI
 
	$DŒMaö
(
HINSTANCE
 
hö°DLL
,

319 
DWORD
 
fdwRós⁄
,

320 
LPVOID
 
ÕvRe£rved
)

322 
fdwRós⁄
) {

323 
DLL_PROCESS_ATTACH
:

325 
	`jv_tsd_dtﬂ_˘x_öô
();

326 
	`jv_tsd_dec_˘x_öô
();

327  
TRUE
;

328 
DLL_PROCESS_DETACH
:

329 
	`jv_tsd_dtﬂ_˘x_föi
();

330 
	`jv_tsd_dec_˘x_föi
();

331  
TRUE
;

332 
DLL_THREAD_ATTACH
:  0;

333 
DLL_THREAD_DETACH
:

334 
	`w32_£rvi˚_thªad_dëach
(
NULL
);

335  
TRUE
;

336 :  
TRUE
;

338 
	}
}

341 
	$±hªad_key_¸óã
(
±hªad_key_t
 *
key
, (*
dt‹
)(*))

343 
és_keys
 *
key_defs
, *
√w_key_defs
;

344 
size_t
 
i
, 
k
;

345 
ªt
 = 
ENOMEM
;

347 
	`±hªad_muãx_lock
(&
és_key_defs_lock
);

348 i‡(
és_key_defs
 =
NULL
) {

350 
√w_key_defs
 = 
	`ˇŒoc
(1, (*new_key_defs));

351 i‡(
√w_key_defs
 =
NULL
) {

352 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

353  
ENOMEM
;

355 
√w_key_defs
->
keys_num
 = 8;

356 
√w_key_defs
->
keys_dt‹s
 = 
	`ˇŒoc
“ew_key_defs->
keys_num
,

357 (*
√w_key_defs
->
keys_dt‹s
));

358 i‡(
√w_key_defs
->
keys_dt‹s
 =
NULL
) {

359 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

360 
	`‰ì
(
√w_key_defs
);

361  
ENOMEM
;

363 
és_key_defs
 = 
√w_key_defs
;

364 
√w_key_defs
->
keys_dt‹s
[0] = 
dt‹
;

365 
i
 = 1; i < 
√w_key_defs
->
keys_num
; i++)

366 
√w_key_defs
->
keys_dt‹s
[
i
] = 
NULL
;

367 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

371 
key_defs
 = 
és_key_defs
;

372 
key_defs
 !
NULL
;

373 
key_defs
 = key_defs->
keys_√xt
) {

374 
k
 = 
key_defs
->
keys_°¨t_idx
;

375 
i
 = 0; i < 
key_defs
->
keys_num
; i++, 
k
++) {

376 i‡(
key_defs
->
keys_dt‹s
[
i
] =
NULL
) {

378 
key_defs
->
keys_dt‹s
[
i
] = 
dt‹
;

379 *
key
 = 
k
;

380 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

384 i‡(
key_defs
->
keys_√xt
 !
NULL
)

389 
√w_key_defs
 = 
	`ˇŒoc
(1, (*new_key_defs));

390 i‡(
√w_key_defs
 =
NULL
)

393 
√w_key_defs
->
keys_dt‹s
 =

394 
	`ˇŒoc
(
key_defs
->
keys_num
 + key_defs->keys_num / 2,

395 (*
√w_key_defs
->
keys_dt‹s
));

396 i‡(
√w_key_defs
->
keys_dt‹s
 =
NULL
) {

397 
	`‰ì
(
√w_key_defs
);

400 
√w_key_defs
->
keys_°¨t_idx
 = 
key_defs
->keys_start_idx +

401 
key_defs
->
keys_num
;

402 
√w_key_defs
->
keys_num
 = 
key_defs
->keys_num + key_defs->keys_num / 2;

403 
√w_key_defs
->
keys_dt‹s
[
i
] = 
dt‹
;

404 
i
 = 1; i < 
√w_key_defs
->
keys_num
; i++)

405 
√w_key_defs
->
keys_dt‹s
[
i
] = 
NULL
;

406 
key_defs
->
keys_√xt
 = 
√w_key_defs
;

407 
ªt
 = 0;

410 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

411  
ªt
;

412 
	}
}

415 
key_lookup
(
±hªad_key_t
 
key
, 
és_keys
 **
kd
,

416 
size_t
 *
dt‹_idx
, (**
dt‹
)(*))

418 
és_keys
 *
key_defs
;

420 i‡(
kd
 !
NULL
)

421 *
kd
 = 
NULL
;

422 i‡(
dt‹_idx
 !
NULL
)

423 *
dt‹_idx
 = 0;

424 i‡(
dt‹
 !
NULL
)

425 *
dt‹
 = 
NULL
;

427 
	`±hªad_muãx_lock
(&
és_key_defs_lock
);

428 
key_defs
 = 
és_key_defs
;

429 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

431 
key_defs
 !
NULL
) {

432 i‡(
key
 >
key_defs
->
keys_°¨t_idx
 &&

433 
key
 < 
key_defs
->
keys_°¨t_idx
 + key_defs->
keys_num
) {

434 i‡(
kd
 !
NULL
)

435 *
kd
 = 
key_defs
;

436 i‡(
dt‹_idx
 !
NULL
)

437 *
dt‹_idx
 = 
key
 - 
key_defs
->
keys_°¨t_idx
;

438 i‡(
dt‹
 !
NULL
)

439 *
dt‹
 = 
key_defs
->
keys_dt‹s
[
key
 - key_defs->
keys_°¨t_idx
];

443 
	`±hªad_muãx_lock
(&
és_key_defs_lock
);

444 
key_defs
 = key_defs->
keys_√xt
;

445 
	`±hªad_muãx_u∆ock
(&
és_key_defs_lock
);

446 
	`as£π
(
key_defs
 !
NULL
);

447 
	`as£π
(
key
 >
key_defs
->
keys_°¨t_idx
);

449 
	}
}

452 
	$±hªad_£t•ecific
(
±hªad_key_t
 
key
, *
vÆue
)

454 **
√w_vÆues
;

455 
size_t
 
√w_num
;

456 (*
dt‹
)(*);

457 
size_t
 
i
;

459 
	`key_lookup
(
key
, 
NULL
, NULL, &
dt‹
);

460 i‡(
dt‹
 =
NULL
)

461  
EINVAL
;

463 i‡(
key
 >
vÆues
.
vÆues_num
) {

464 i‡(
vÆues
.
vÆues_num
 == 0) {

465 
vÆues
.vÆue†
NULL
;

466 
√w_num
 = 8;

468 
√w_num
 = (
vÆues
.
vÆues_num
 + values.values_num / 2);

470 
√w_vÆues
 = 
	`ªÆloc
(
vÆues
.vÆues, (*Ë* 
√w_num
);

471 i‡(
√w_vÆues
 =
NULL
)

472  
ENOMEM
;

473 
i
 = 
vÆues
.
vÆues_num
; i < 
√w_num
; i++)

474 
√w_vÆues
[
i
] = 
NULL
;

475 
vÆues
.vÆue†
√w_vÆues
;

476 
vÆues
.
vÆues_num
 = 
√w_num
;

479 
	`as£π
(
key
 < 
vÆues
.
vÆues_num
);

481 i‡(
vÆues
.vÆues[
key
] !
NULL
 && 
dt‹
 !NULL && dt‹ !
DEAD_KEY
)

482 
	`dt‹
(
vÆues
.vÆues[
key
]);

484 
vÆues
.vÆues[
key
] = 
vÆue
;

486 
	}
}

489 
	$±hªad_gë•ecific
(
±hªad_key_t
 
key
)

491 i‡(
key
 >
vÆues
.
vÆues_num
)

492  
NULL
;

493  
vÆues
.vÆues[
key
];

494 
	}
}

496 
	~<±hªad.h
>

499 
±hªad_key_t
 
	gdec_˘x_key
;

500 
±hªad_key_t
 
	gdec_˘x_dbl_key
;

501 #i‚de‡
WIN32


502 
±hªad_⁄˚_t
 
	gdec_˘x_⁄˚
 = 
PTHREAD_ONCE_INIT
;

505 
	#DEC_CONTEXT
(Ë
	`tsd_dec_˘x_gë
(&
dec_˘x_key
)

	)

506 
	#DEC_CONTEXT_TO_DOUBLE
(Ë
	`tsd_dec_˘x_gë
(&
dec_˘x_dbl_key
)

	)

510 
	$jv_tsd_dec_˘x_föi
() {

511 
	`jv_mem_‰ì
(
	`±hªad_gë•ecific
(
dec_˘x_key
));

512 
	`jv_mem_‰ì
(
	`±hªad_gë•ecific
(
dec_˘x_dbl_key
));

513 
	`±hªad_£t•ecific
(
dec_˘x_key
, 
NULL
);

514 
	`±hªad_£t•ecific
(
dec_˘x_dbl_key
, 
NULL
);

515 
	}
}

517 
	$jv_tsd_dec_˘x_öô
() {

518 i‡(
	`±hªad_key_¸óã
(&
dec_˘x_key
, 
jv_mem_‰ì
) != 0) {

519 
	`Ârötf
(
°dîr
, "error: cannot createÅhread specific key");

520 
	`ab‹t
();

522 i‡(
	`±hªad_key_¸óã
(&
dec_˘x_dbl_key
, 
jv_mem_‰ì
) != 0) {

523 
	`Ârötf
(
°dîr
, "error: cannot createÅhread specific key");

524 
	`ab‹t
();

526 #i‚de‡
WIN32


527 
	`©exô
(
jv_tsd_dec_˘x_föi
);

529 
	}
}

531 
decC⁄ãxt
* 
	$tsd_dec_˘x_gë
(
±hªad_key_t
 *
key
) {

532 #i‚de‡
WIN32


533 
	`±hªad_⁄˚
(&
dec_˘x_⁄˚
, 
jv_tsd_dec_˘x_öô
);

535 
decC⁄ãxt
 *
˘x
 = (decC⁄ãxt*)
	`±hªad_gë•ecific
(*
key
);

536 i‡(
˘x
) {

537  
˘x
;

540 
decC⁄ãxt
 
_˘x
 = {

542 
DEC_MAX_EMAX
,

543 
DEC_MIN_EMAX
,

544 
DEC_ROUND_HALF_UP
,

549 i‡(
key
 =&
dec_˘x_key
) {

550 
_˘x
.
digôs
 = 
DEC_MAX_DIGITS
;

551 } i‡(
key
 =&
dec_˘x_dbl_key
) {

552 
_˘x
.
digôs
 = 
BIN64_DEC_PRECISION
;

555 
˘x
 = 
	`mÆloc
((
decC⁄ãxt
));

556 i‡(
˘x
) {

557 *
˘x
 = 
_˘x
;

558 i‡(
	`±hªad_£t•ecific
(*
key
, 
˘x
) != 0) {

559 
	`Ârötf
(
°dîr
, "error: cannot storeÅhread specific data");

560 
	`ab‹t
();

563  
˘x
;

564 
	}
}

567 
jv_ªf˙t
 
	mªf˙t
;

568 
	mnum_doubÀ
;

569 * 
	mlôîÆ_d©a
;

570 
decNumbî
 
	mnum_decimÆ
;

571 } 
	tjvp_lôîÆ_numbî
;

574 
decNumbî
 
	mnumbî
;

575 
decNumbîUnô
 
	munôs
[1];

576 } 
	tdecNumbîSögÀ
;

579 
decNumbî
 
	mnumbî
;

580 
decNumbîUnô
 
	munôs
[
BIN64_DEC_PRECISION
];

581 } 
	tdecNumbîDoubÀPªcisi⁄
;

584 
ölöe
 
	$jvp_numbî_is_lôîÆ
(
jv
 
n
) {

585 
	`as£π
(
	`JVP_HAS_KIND
(
n
, 
JV_KIND_NUMBER
));

586  
	`JVP_HAS_FLAGS
(
n
, 
JVP_FLAGS_NUMBER_LITERAL
);

587 
	}
}

589 
jvp_lôîÆ_numbî
* 
	$jvp_lôîÆ_numbî_±r
(
jv
 
j
) {

590 
	`as£π
(
	`JVP_HAS_FLAGS
(
j
, 
JVP_FLAGS_NUMBER_LITERAL
));

591  (
jvp_lôîÆ_numbî
*)
j
.
u
.
±r
;

592 
	}
}

594 
decNumbî
* 
	$jvp_dec_numbî_±r
(
jv
 
j
) {

595 
	`as£π
(
	`JVP_HAS_FLAGS
(
j
, 
JVP_FLAGS_NUMBER_LITERAL
));

596  &(((
jvp_lôîÆ_numbî
*)
j
.
u
.
±r
)->
num_decimÆ
);

597 
	}
}

599 
jvp_lôîÆ_numbî
* 
	$jvp_lôîÆ_numbî_Æloc
(
lôîÆ_Àngth
) {

602 
unôs
 = ((
lôîÆ_Àngth
+
DECDPUN
-1)/DECDPUN);

604 
jvp_lôîÆ_numbî
* 
n
 = 
	`jv_mem_Æloc
(

605 (
jvp_lôîÆ_numbî
)

606 + (
decNumbîUnô
Ë* 
unôs


609  
n
;

610 
	}
}

612 
jv
 
	$jvp_lôîÆ_numbî_√w
(c⁄° * 
lôîÆ
) {

614 
jvp_lôîÆ_numbî
 * 
n
 = 
	`jvp_lôîÆ_numbî_Æloc
(
	`°æí
(
lôîÆ
));

616 
n
->
ªf˙t
 = 
JV_REFCNT_INIT
;

617 
n
->
lôîÆ_d©a
 = 
NULL
;

618 
decC⁄ãxt
 *
˘x
 = 
	`DEC_CONTEXT
();

619 
	`decC⁄ãxtCÀ¨Sètus
(
˘x
, 
DEC_C⁄vîsi⁄_sy¡ax
);

620 
	`decNumbîFromSåög
(&
n
->
num_decimÆ
, 
lôîÆ
, 
˘x
);

621 
n
->
num_doubÀ
 = 
NAN
;

623 i‡(
˘x
->
°©us
 & 
DEC_C⁄vîsi⁄_sy¡ax
) {

624 
	`jv_mem_‰ì
(
n
);

625  
JV_INVALID
;

628 
jv
 
r
 = {
JVP_FLAGS_NUMBER_LITERAL
, 0, 0, 
JV_NUMBER_SIZE_INIT
, {&
n
->
ªf˙t
}};

629  
r
;

630 
	}
}

632 
	$jvp_lôîÆ_numbî_to_doubÀ
(
jv
 
j
) {

633 
	`as£π
(
	`JVP_HAS_FLAGS
(
j
, 
JVP_FLAGS_NUMBER_LITERAL
));

635 
decNumbî
 *
p_dec_numbî
 = 
	`jvp_dec_numbî_±r
(
j
);

636 
decNumbîDoubÀPªcisi⁄
 
dec_doubÀ
;

637 
lôîÆ
[
BIN64_DEC_PRECISION
 + 
DEC_NUMBER_STRING_GUARD
 + 1];

642 
	`decNumbîRedu˚
(&
dec_doubÀ
.
numbî
, 
p_dec_numbî
, 
	`DEC_CONTEXT_TO_DOUBLE
());

644 
	`decNumbîToSåög
(&
dec_doubÀ
.
numbî
, 
lôîÆ
);

646 *
íd
;

647  
	`jvp_°πod
(
	`tsd_dtﬂ_c⁄ãxt_gë
(), 
lôîÆ
, &
íd
);

648 
	}
}

651 
	$jvp_numbî_equÆ
(
jv
 
a
, jv 
b
) {

652  
	`jvp_numbî_cmp
(
a
, 
b
) == 0;

653 
	}
}

655 c⁄° * 
	$jvp_lôîÆ_numbî_lôîÆ
(
jv
 
n
) {

656 
	`as£π
(
	`JVP_HAS_FLAGS
(
n
, 
JVP_FLAGS_NUMBER_LITERAL
));

657 
decNumbî
 *
pdec
 = 
	`jvp_dec_numbî_±r
(
n
);

658 
jvp_lôîÆ_numbî
* 
∂ô
 = 
	`jvp_lôîÆ_numbî_±r
(
n
);

660 i‡(
	`decNumbîIsNaN
(
pdec
)) {

664 i‡(
	`decNumbîIsInföôe
(
pdec
)) {

666 i‡(
	`decNumbîIsNeg©ive
(
pdec
)) {

667  
DBL_MIN_STR
;

669  
DBL_MAX_STR
;

673 i‡(
∂ô
->
lôîÆ_d©a
 =
NULL
) {

674 
Àn
 = 
	`jvp_dec_numbî_±r
(
n
)->
digôs
 + 14;

675 
∂ô
->
lôîÆ_d©a
 = 
	`jv_mem_Æloc
(
Àn
);

680 
	`decNumbîToSåög
(
pdec
, 
∂ô
->
lôîÆ_d©a
);

683  
∂ô
->
lôîÆ_d©a
;

684 
	}
}

686 
	$jv_numbî_has_lôîÆ
(
jv
 
n
) {

687 
	`as£π
(
	`JVP_HAS_KIND
(
n
, 
JV_KIND_NUMBER
));

688  
	`JVP_HAS_FLAGS
(
n
, 
JVP_FLAGS_NUMBER_LITERAL
);

689 
	}
}

691 c⁄° * 
	$jv_numbî_gë_lôîÆ
(
jv
 
n
) {

692 
	`as£π
(
	`JVP_HAS_KIND
(
n
, 
JV_KIND_NUMBER
));

694 i‡(
	`JVP_HAS_FLAGS
(
n
, 
JVP_FLAGS_NUMBER_LITERAL
)) {

695  
	`jvp_lôîÆ_numbî_lôîÆ
(
n
);

697  
NULL
;

699 
	}
}

701 
	$jvp_numbî_‰ì
(
jv
 
j
) {

702 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_NUMBER
));

703 i‡(
	`JVP_HAS_FLAGS
(
j
, 
JVP_FLAGS_NUMBER_LITERAL
Ë&& 
	`jvp_ªf˙t_dec
(j.
u
.
±r
)) {

704 
jvp_lôîÆ_numbî
* 
n
 = 
	`jvp_lôîÆ_numbî_±r
(
j
);

705 i‡(
n
->
lôîÆ_d©a
) {

706 
	`jv_mem_‰ì
(
n
->
lôîÆ_d©a
);

708 
	`jv_mem_‰ì
(
n
);

710 
	}
}

712 
jv
 
	$jv_numbî_wôh_lôîÆ
(c⁄° * 
lôîÆ
) {

713  
	`jvp_lôîÆ_numbî_√w
(
lôîÆ
);

714 
	}
}

716 
jv
 
	$jv_numbî
(
x
) {

717 
jv
 
j
 = {
JVP_FLAGS_NUMBER_NATIVE
, 0, 0, 0, {.
numbî
 = 
x
}};

718  
j
;

719 
	}
}

721 
	$jv_numbî_vÆue
(
jv
 
j
) {

722 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_NUMBER
));

723 #ifde‡
USE_DECNUM


724 i‡(
	`JVP_HAS_FLAGS
(
j
, 
JVP_FLAGS_NUMBER_LITERAL
)) {

725 
jvp_lôîÆ_numbî
* 
n
 = 
	`jvp_lôîÆ_numbî_±r
(
j
);

727 i‡(
j
.
size
 !
JV_NUMBER_SIZE_CONVERTED
) {

728 
n
->
num_doubÀ
 = 
	`jvp_lôîÆ_numbî_to_doubÀ
(
j
);

729 
j
.
size
 = 
JV_NUMBER_SIZE_CONVERTED
;

732  
n
->
num_doubÀ
;

735  
j
.
u
.
numbî
;

736 #ifde‡
USE_DECNUM


739 
	}
}

741 
	$jv_is_öãgî
(
jv
 
j
){

742 if(!
	`JVP_HAS_KIND
(
j
, 
JV_KIND_NUMBER
)){

746 
x
 = 
	`jv_numbî_vÆue
(
j
);

748 
ù¨t
;

749 
Â¨t
 = 
	`modf
(
x
, &
ù¨t
);

751  
	`Ábs
(
Â¨t
Ë< 
DBL_EPSILON
;

752 
	}
}

754 
	$jvp_numbî_is_«n
(
jv
 
n
) {

755 
	`as£π
(
	`JVP_HAS_KIND
(
n
, 
JV_KIND_NUMBER
));

757 i‡(
	`JVP_HAS_FLAGS
(
n
, 
JVP_FLAGS_NUMBER_LITERAL
)) {

758 
decNumbî
 *
pdec
 = 
	`jvp_dec_numbî_±r
(
n
);

759  
	`decNumbîIsNaN
(
pdec
);

761  
n
.
u
.
numbî
 !=Ç.u.number;

763 
	}
}

765 
	$jvp_numbî_cmp
(
jv
 
a
, jv 
b
) {

766 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_NUMBER
));

767 
	`as£π
(
	`JVP_HAS_KIND
(
b
, 
JV_KIND_NUMBER
));

769 if(
	`JVP_HAS_FLAGS
(
a
, 
JVP_FLAGS_NUMBER_LITERAL
Ë&& JVP_HAS_FLAGS(
b
, JVP_FLAGS_NUMBER_LITERAL)) {

770 
decNumbîSögÀ
 
ªs
;

771 
	`decNumbîCom∑ª
(&
ªs
.
numbî
,

772 
	`jvp_dec_numbî_±r
(
a
),

773 
	`jvp_dec_numbî_±r
(
b
),

774 
	`DEC_CONTEXT
()

776 i‡(
	`decNumbîIsZîo
(&
ªs
.
numbî
)) {

778 } i‡(
	`decNumbîIsNeg©ive
(&
ªs
.
numbî
)) {

784 
da
 = 
	`jv_numbî_vÆue
(
a
), 
db
 = jv_numbî_vÆue(
b
);

785 i‡(
da
 < 
db
) {

787 } i‡(
da
 =
db
) {

793 
	}
}

799 
	#ARRAY_SIZE_ROUND_UP
(
n
Ë((“)*3)/2)

	)

800 
	#JVP_FLAGS_ARRAY
 
	`JVP_MAKE_FLAGS
(
JV_KIND_ARRAY
, 
JVP_PAYLOAD_ALLOCATED
)

	)

802 
	$imax
(
a
, 
b
) {

803 i‡(
a
>
b
) á;

804  
b
;

805 
	}
}

809 
jv_ªf˙t
 
	mªf˙t
;

810 
	mÀngth
, 
	mÆloc_Àngth
;

811 
jv
 
	mñemíts
[];

812 } 
	tjvp_¨øy
;

814 
jvp_¨øy
* 
	$jvp_¨øy_±r
(
jv
 
a
) {

815 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

816  (
jvp_¨øy
*)
a
.
u
.
±r
;

817 
	}
}

819 
jvp_¨øy
* 
	$jvp_¨øy_Æloc
(
size
) {

820 
jvp_¨øy
* 
a
 = 
	`jv_mem_Æloc
((jvp_¨øyË+ (
jv
Ë* 
size
);

821 
a
->
ªf˙t
.
cou¡
 = 1;

822 
a
->
Àngth
 = 0;

823 
a
->
Æloc_Àngth
 = 
size
;

824  
a
;

825 
	}
}

827 
jv
 
	$jvp_¨øy_√w
(
size
) {

828 
jv
 
r
 = {
JVP_FLAGS_ARRAY
, 0, 0, 0, {&
	`jvp_¨øy_Æloc
(
size
)->
ªf˙t
}};

829  
r
;

830 
	}
}

832 
	$jvp_¨øy_‰ì
(
jv
 
a
) {

833 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

834 i‡(
	`jvp_ªf˙t_dec
(
a
.
u
.
±r
)) {

835 
jvp_¨øy
* 
¨øy
 = 
	`jvp_¨øy_±r
(
a
);

836 
i
=0; i<
¨øy
->
Àngth
; i++) {

837 
	`jv_‰ì
(
¨øy
->
ñemíts
[
i
]);

839 
	`jv_mem_‰ì
(
¨øy
);

841 
	}
}

843 
	$jvp_¨øy_Àngth
(
jv
 
a
) {

844 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

845  
a
.
size
;

846 
	}
}

848 
	$jvp_¨øy_off£t
(
jv
 
a
) {

849 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

850  
a
.
off£t
;

851 
	}
}

853 
jv
* 
	$jvp_¨øy_ªad
(
jv
 
a
, 
i
) {

854 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

855 i‡(
i
 >0 && i < 
	`jvp_¨øy_Àngth
(
a
)) {

856 
jvp_¨øy
* 
¨øy
 = 
	`jvp_¨øy_±r
(
a
);

857 
	`as£π
(
i
 + 
	`jvp_¨øy_off£t
(
a
Ë< 
¨øy
->
Àngth
);

858  &
¨øy
->
ñemíts
[
i
 + 
	`jvp_¨øy_off£t
(
a
)];

862 
	}
}

864 
jv
* 
	$jvp_¨øy_wrôe
(
jv
* 
a
, 
i
) {

865 
	`as£π
(
i
 >= 0);

866 
jvp_¨øy
* 
¨øy
 = 
	`jvp_¨øy_±r
(*
a
);

868 
pos
 = 
i
 + 
	`jvp_¨øy_off£t
(*
a
);

869 i‡(
pos
 < 
¨øy
->
Æloc_Àngth
 && 
	`jvp_ªf˙t_unsh¨ed
(
a
->
u
.
±r
)) {

871 
j
 = 
¨øy
->
Àngth
; j <
pos
; j++) {

872 
¨øy
->
ñemíts
[
j
] = 
JV_NULL
;

874 
¨øy
->
Àngth
 = 
	`imax
(
pos
 + 1,árray->length);

875 
a
->
size
 = 
	`imax
(
i
 + 1,á->size);

876  &
¨øy
->
ñemíts
[
pos
];

879 
√w_Àngth
 = 
	`imax
(
i
 + 1, 
	`jvp_¨øy_Àngth
(*
a
));

880 
jvp_¨øy
* 
√w_¨øy
 = 
	`jvp_¨øy_Æloc
(
	`ARRAY_SIZE_ROUND_UP
(
√w_Àngth
));

881 
j
;

882 
j
 = 0; j < 
	`jvp_¨øy_Àngth
(*
a
); j++) {

883 
√w_¨øy
->
ñemíts
[
j
] =

884 
	`jv_c›y
(
¨øy
->
ñemíts
[
j
 + 
	`jvp_¨øy_off£t
(*
a
)]);

886 ; 
j
 < 
√w_Àngth
; j++) {

887 
√w_¨øy
->
ñemíts
[
j
] = 
JV_NULL
;

889 
√w_¨øy
->
Àngth
 = 
√w_Àngth
;

890 
	`jvp_¨øy_‰ì
(*
a
);

891 
jv
 
√w_jv
 = {
JVP_FLAGS_ARRAY
, 0, 0, 
√w_Àngth
, {&
√w_¨øy
->
ªf˙t
}};

892 *
a
 = 
√w_jv
;

893  &
√w_¨øy
->
ñemíts
[
i
];

895 
	}
}

897 
	$jvp_¨øy_equÆ
(
jv
 
a
, jv 
b
) {

898 i‡(
	`jvp_¨øy_Àngth
(
a
Ë!jvp_¨øy_Àngth(
b
))

900 i‡(
	`jvp_¨øy_±r
(
a
Ë=jvp_¨øy_±r(
b
) &&

901 
	`jvp_¨øy_off£t
(
a
Ë=jvp_¨øy_off£t(
b
))

903 
i
=0; i<
	`jvp_¨øy_Àngth
(
a
); i++) {

904 i‡(!
	`jv_equÆ
(
	`jv_c›y
(*
	`jvp_¨øy_ªad
(
a
, 
i
)),

905 
	`jv_c›y
(*
	`jvp_¨øy_ªad
(
b
, 
i
))))

909 
	}
}

911 
	$jvp_˛amp_¶i˚_∑øms
(
Àn
, *
p°¨t
, *
≥nd
)

913 i‡(*
p°¨t
 < 0Ë*p°¨à
Àn
 + *pstart;

914 i‡(*
≥nd
 < 0Ë*≥nd = 
Àn
 + *pend;

916 i‡(*
p°¨t
 < 0) *pstart = 0;

917 i‡(*
p°¨t
 > 
Àn
) *pstart =Üen;

918 i‡(*
≥nd
 > 
Àn
) *pend =Üen;

919 i‡(*
≥nd
 < *
p°¨t
) *pend = *pstart;

920 
	}
}

923 
	$jvp_¨øy_c⁄èös
(
jv
 
a
, jv 
b
) {

924 
r
 = 1;

925 
	`jv_¨øy_f‹óch
(
b
, 
bi
, 
bñem
) {

926 
ri
 = 0;

927 
	`jv_¨øy_f‹óch
(
a
, 
ai
, 
´Àm
) {

928 i‡(
	`jv_c⁄èös
(
´Àm
, 
	`jv_c›y
(
bñem
))) {

929 
ri
 = 1;

933 
	`jv_‰ì
(
bñem
);

934 i‡(!
ri
) {

935 
r
 = 0;

939  
r
;

940 
	}
}

947 
jv
 
	$jvp_¨øy_¶i˚
(
jv
 
a
, 
°¨t
, 
íd
) {

948 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

949 
Àn
 = 
	`jvp_¨øy_Àngth
(
a
);

950 
	`jvp_˛amp_¶i˚_∑øms
(
Àn
, &
°¨t
, &
íd
);

951 
	`as£π
(0 <
°¨t
 && sèπ <
íd
 &&Énd <
Àn
);

954 i‡(
°¨t
 =
íd
) {

955 
	`jv_‰ì
(
a
);

956  
	`jv_¨øy
();

959 i‡(
a
.
off£t
 + 
°¨t
 >1 << (◊.off£tË* 
CHAR_BIT
)) {

960 
jv
 
r
 = 
	`jv_¨øy_sized
(
íd
 - 
°¨t
);

961 
i
 = 
°¨t
; i < 
íd
; i++)

962 
r
 = 
	`jv_¨øy_≠≥nd
‘, 
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 
i
));

963 
	`jv_‰ì
(
a
);

964  
r
;

966 
a
.
off£t
 +
°¨t
;

967 
a
.
size
 = 
íd
 - 
°¨t
;

968  
a
;

970 
	}
}

976 
jv
 
	$jv_¨øy_sized
(
n
) {

977  
	`jvp_¨øy_√w
(
n
);

978 
	}
}

980 
jv
 
	$jv_¨øy
() {

981  
	`jv_¨øy_sized
(16);

982 
	}
}

984 
	$jv_¨øy_Àngth
(
jv
 
j
) {

985 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_ARRAY
));

986 
Àn
 = 
	`jvp_¨øy_Àngth
(
j
);

987 
	`jv_‰ì
(
j
);

988  
Àn
;

989 
	}
}

991 
jv
 
	$jv_¨øy_gë
(
jv
 
j
, 
idx
) {

992 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_ARRAY
));

993 
jv
* 
¶Ÿ
 = 
	`jvp_¨øy_ªad
(
j
, 
idx
);

994 
jv
 
vÆ
;

995 i‡(
¶Ÿ
) {

996 
vÆ
 = 
	`jv_c›y
(*
¶Ÿ
);

998 
vÆ
 = 
	`jv_övÆid
();

1000 
	`jv_‰ì
(
j
);

1001  
vÆ
;

1002 
	}
}

1004 
jv
 
	$jv_¨øy_£t
(
jv
 
j
, 
idx
, jv 
vÆ
) {

1005 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_ARRAY
));

1007 i‡(
idx
 < 0)

1008 
idx
 = 
	`jvp_¨øy_Àngth
(
j
) + idx;

1009 i‡(
idx
 < 0) {

1010 
	`jv_‰ì
(
j
);

1011 
	`jv_‰ì
(
vÆ
);

1012  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Out of boundsÇegativeárray index"));

1015 
jv
* 
¶Ÿ
 = 
	`jvp_¨øy_wrôe
(&
j
, 
idx
);

1016 
	`jv_‰ì
(*
¶Ÿ
);

1017 *
¶Ÿ
 = 
vÆ
;

1018  
j
;

1019 
	}
}

1021 
jv
 
	$jv_¨øy_≠≥nd
(
jv
 
j
, jv 
vÆ
) {

1023  
	`jv_¨øy_£t
(
j
, 
	`jv_¨øy_Àngth
(
	`jv_c›y
(j)), 
vÆ
);

1024 
	}
}

1026 
jv
 
	$jv_¨øy_c⁄ˇt
(
jv
 
a
, jv 
b
) {

1027 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

1028 
	`as£π
(
	`JVP_HAS_KIND
(
b
, 
JV_KIND_ARRAY
));

1031 
	`jv_¨øy_f‹óch
(
b
, 
i
, 
ñem
) {

1032 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
ñem
);

1034 
	`jv_‰ì
(
b
);

1035  
a
;

1036 
	}
}

1038 
jv
 
	$jv_¨øy_¶i˚
(
jv
 
a
, 
°¨t
, 
íd
) {

1039 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
));

1041  
	`jvp_¨øy_¶i˚
(
a
, 
°¨t
, 
íd
);

1042 
	}
}

1044 
jv
 
	$jv_¨øy_ödexes
(
jv
 
a
, jv 
b
) {

1045 
jv
 
ªs
 = 
	`jv_¨øy
();

1046 
idx
 = -1;

1047 
	`jv_¨øy_f‹óch
(
a
, 
ai
, 
´Àm
) {

1048 
	`jv_‰ì
(
´Àm
);

1049 
	`jv_¨øy_f‹óch
(
b
, 
bi
, 
bñem
) {

1050 i‡(!
	`jv_equÆ
(
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 
ai
 + 
bi
), jv_c›y(
bñem
)))

1051 
idx
 = -1;

1052 i‡(
bi
 =0 && 
idx
 == -1)

1053 
idx
 = 
ai
;

1054 
	`jv_‰ì
(
bñem
);

1056 i‡(
idx
 > -1)

1057 
ªs
 = 
	`jv_¨øy_≠≥nd
‘es, 
	`jv_numbî
(
idx
));

1058 
idx
 = -1;

1060 
	`jv_‰ì
(
a
);

1061 
	`jv_‰ì
(
b
);

1062  
ªs
;

1063 
	}
}

1069 
	#JVP_FLAGS_STRING
 
	`JVP_MAKE_FLAGS
(
JV_KIND_STRING
, 
JVP_PAYLOAD_ALLOCATED
)

	)

1072 
jv_ªf˙t
 
	mªf˙t
;

1073 
uöt32_t
 
	mhash
;

1076 
uöt32_t
 
	mÀngth_hashed
;

1077 
uöt32_t
 
	mÆloc_Àngth
;

1078 
	md©a
[];

1079 } 
	tjvp_°rög
;

1081 
jvp_°rög
* 
	$jvp_°rög_±r
(
jv
 
a
) {

1082 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_STRING
));

1083  (
jvp_°rög
*)
a
.
u
.
±r
;

1084 
	}
}

1086 
jvp_°rög
* 
	$jvp_°rög_Æloc
(
uöt32_t
 
size
) {

1087 
jvp_°rög
* 
s
 = 
	`jv_mem_Æloc
((jvp_°rögË+ 
size
 + 1);

1088 
s
->
ªf˙t
.
cou¡
 = 1;

1089 
s
->
Æloc_Àngth
 = 
size
;

1090  
s
;

1091 
	}
}

1094 
jv
 
	$jvp_°rög_c›y_ª∂a˚_bad
(c⁄° * 
d©a
, 
uöt32_t
 
Àngth
) {

1095 c⁄° * 
íd
 = 
d©a
 + 
Àngth
;

1096 c⁄° * 
i
 = 
d©a
;

1097 c⁄° * 
c°¨t
;

1099 
uöt32_t
 
maxÀngth
 = 
Àngth
 * 3 + 1;

1100 
jvp_°rög
* 
s
 = 
	`jvp_°rög_Æloc
(
maxÀngth
);

1101 * 
out
 = 
s
->
d©a
;

1102 
c
 = 0;

1104 (
i
 = 
	`jvp_utf8_√xt
((
c°¨t
 = i), 
íd
, &
c
))) {

1105 i‡(
c
 == -1) {

1106 
c
 = 0xFFFD;

1108 
out
 +
	`jvp_utf8_ícode
(
c
, out);

1109 
	`as£π
(
out
 < 
s
->
d©a
 + 
maxÀngth
);

1111 
Àngth
 = 
out
 - 
s
->
d©a
;

1112 
s
->
d©a
[
Àngth
] = 0;

1113 
s
->
Àngth_hashed
 = 
Àngth
 << 1;

1114 
jv
 
r
 = {
JVP_FLAGS_STRING
, 0, 0, 0, {&
s
->
ªf˙t
}};

1115  
r
;

1116 
	}
}

1119 
jv
 
	$jvp_°rög_√w
(c⁄° * 
d©a
, 
uöt32_t
 
Àngth
) {

1120 
jvp_°rög
* 
s
 = 
	`jvp_°rög_Æloc
(
Àngth
);

1121 
s
->
Àngth_hashed
 = 
Àngth
 << 1;

1122 i‡(
d©a
 !
NULL
)

1123 
	`mem˝y
(
s
->
d©a
, d©a, 
Àngth
);

1124 
s
->
d©a
[
Àngth
] = 0;

1125 
jv
 
r
 = {
JVP_FLAGS_STRING
, 0, 0, 0, {&
s
->
ªf˙t
}};

1126  
r
;

1127 
	}
}

1129 
jv
 
	$jvp_°rög_em±y_√w
(
uöt32_t
 
Àngth
) {

1130 
jvp_°rög
* 
s
 = 
	`jvp_°rög_Æloc
(
Àngth
);

1131 
s
->
Àngth_hashed
 = 0;

1132 
	`mem£t
(
s
->
d©a
, 0, 
Àngth
);

1133 
jv
 
r
 = {
JVP_FLAGS_STRING
, 0, 0, 0, {&
s
->
ªf˙t
}};

1134  
r
;

1135 
	}
}

1138 
	$jvp_°rög_‰ì
(
jv
 
js
) {

1139 
jvp_°rög
* 
s
 = 
	`jvp_°rög_±r
(
js
);

1140 i‡(
	`jvp_ªf˙t_dec
(&
s
->
ªf˙t
)) {

1141 
	`jv_mem_‰ì
(
s
);

1143 
	}
}

1145 
uöt32_t
 
	$jvp_°rög_Àngth
(
jvp_°rög
* 
s
) {

1146  
s
->
Àngth_hashed
 >> 1;

1147 
	}
}

1149 
uöt32_t
 
	$jvp_°rög_ªmaöög_•a˚
(
jvp_°rög
* 
s
) {

1150 
	`as£π
(
s
->
Æloc_Àngth
 >
	`jvp_°rög_Àngth
(s));

1151 
uöt32_t
 
r
 = 
s
->
Æloc_Àngth
 - 
	`jvp_°rög_Àngth
(s);

1152  
r
;

1153 
	}
}

1155 
jv
 
	$jvp_°rög_≠≥nd
(
jv
 
°rög
, c⁄° * 
d©a
, 
uöt32_t
 
Àn
) {

1156 
jvp_°rög
* 
s
 = 
	`jvp_°rög_±r
(
°rög
);

1157 
uöt32_t
 
cuºÀn
 = 
	`jvp_°rög_Àngth
(
s
);

1159 i‡(
	`jvp_ªf˙t_unsh¨ed
(
°rög
.
u
.
±r
) &&

1160 
	`jvp_°rög_ªmaöög_•a˚
(
s
Ë>
Àn
) {

1162 
	`mem˝y
(
s
->
d©a
 + 
cuºÀn
, d©a, 
Àn
);

1163 
s
->
d©a
[
cuºÀn
 + 
Àn
] = 0;

1164 
s
->
Àngth_hashed
 = (
cuºÀn
 + 
Àn
) << 1;

1165  
°rög
;

1168 
uöt32_t
 
Ælocsz
 = (
cuºÀn
 + 
Àn
) * 2;

1169 i‡(
Ælocsz
 < 32)állocsz = 32;

1170 
jvp_°rög
* 
√ws
 = 
	`jvp_°rög_Æloc
(
Ælocsz
);

1171 
√ws
->
Àngth_hashed
 = (
cuºÀn
 + 
Àn
) << 1;

1172 
	`mem˝y
(
√ws
->
d©a
, 
s
->d©a, 
cuºÀn
);

1173 
	`mem˝y
(
√ws
->
d©a
 + 
cuºÀn
, d©a, 
Àn
);

1174 
√ws
->
d©a
[
cuºÀn
 + 
Àn
] = 0;

1175 
	`jvp_°rög_‰ì
(
°rög
);

1176 
jv
 
r
 = {
JVP_FLAGS_STRING
, 0, 0, 0, {&
√ws
->
ªf˙t
}};

1177  
r
;

1179 
	}
}

1181 c⁄° 
uöt32_t
 
	gHASH_SEED
 = 0x432A9843;

1183 
uöt32_t
 
	$rŸl32
 (
uöt32_t
 
x
, 
öt8_t
 
r
){

1184  (
x
 << 
r
) | (x >> (32 -Ñ));

1185 
	}
}

1187 
uöt32_t
 
	$jvp_°rög_hash
(
jv
 
j°r
) {

1188 
jvp_°rög
* 
°r
 = 
	`jvp_°rög_±r
(
j°r
);

1189 i‡(
°r
->
Àngth_hashed
 & 1)

1190  
°r
->
hash
;

1196 c⁄° 
uöt8_t
* 
d©a
 = (c⁄° uöt8_t*)
°r
->data;

1197 
Àn
 = ()
	`jvp_°rög_Àngth
(
°r
);

1198 c⁄° 
nblocks
 = 
Àn
 / 4;

1200 
uöt32_t
 
h1
 = 
HASH_SEED
;

1202 c⁄° 
uöt32_t
 
c1
 = 0xcc9e2d51;

1203 c⁄° 
uöt32_t
 
c2
 = 0x1b873593;

1204 c⁄° 
uöt32_t
* 
blocks
 = (c⁄° uöt32_à*)(
d©a
 + 
nblocks
*4);

1206 
i
 = -
nblocks
; i; i++) {

1207 
uöt32_t
 
k1
 = 
blocks
[
i
];

1209 
k1
 *
c1
;

1210 
k1
 = 
	`rŸl32
(k1,15);

1211 
k1
 *
c2
;

1213 
h1
 ^
k1
;

1214 
h1
 = 
	`rŸl32
(h1,13);

1215 
h1
 = h1*5+0xe6546b64;

1218 c⁄° 
uöt8_t
* 
èû
 = (c⁄° uöt8_t*)(
d©a
 + 
nblocks
*4);

1220 
uöt32_t
 
k1
 = 0;

1222 
Àn
 & 3) {

1223 3: 
k1
 ^
èû
[2] << 16;

1224 2: 
k1
 ^
èû
[1] << 8;

1225 1: 
k1
 ^
èû
[0];

1226 
k1
 *
c1
; k1 = 
	`rŸl32
(k1,15); k1 *
c2
; 
h1
 ^= k1;

1229 
h1
 ^
Àn
;

1231 
h1
 ^= h1 >> 16;

1232 
h1
 *= 0x85ebca6b;

1233 
h1
 ^= h1 >> 13;

1234 
h1
 *= 0xc2b2ae35;

1235 
h1
 ^= h1 >> 16;

1237 
°r
->
Àngth_hashed
 |= 1;

1238 
°r
->
hash
 = 
h1
;

1240  
h1
;

1241 
	}
}

1244 
	$jvp_°rög_equÆ
(
jv
 
a
, jv 
b
) {

1245 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_STRING
));

1246 
	`as£π
(
	`JVP_HAS_KIND
(
b
, 
JV_KIND_STRING
));

1247 
jvp_°rög
* 
°ø
 = 
	`jvp_°rög_±r
(
a
);

1248 
jvp_°rög
* 
°rb
 = 
	`jvp_°rög_±r
(
b
);

1249 i‡(
	`jvp_°rög_Àngth
(
°ø
Ë!jvp_°rög_Àngth(
°rb
))  0;

1250  
	`memcmp
(
°ø
->
d©a
, 
°rb
->d©a, 
	`jvp_°rög_Àngth
(stra)) == 0;

1251 
	}
}

1257 
jv
 
	$jv_°rög_sized
(c⁄° * 
°r
, 
Àn
) {

1259 
	`jvp_utf8_is_vÆid
(
°r
, så+
Àn
) ?

1260 
	`jvp_°rög_√w
(
°r
, 
Àn
) :

1261 
	`jvp_°rög_c›y_ª∂a˚_bad
(
°r
, 
Àn
);

1262 
	}
}

1264 
jv
 
	$jv_°rög_em±y
(
Àn
) {

1265  
	`jvp_°rög_em±y_√w
(
Àn
);

1266 
	}
}

1268 
jv
 
	$jv_°rög
(c⁄° * 
°r
) {

1269  
	`jv_°rög_sized
(
°r
, 
	`°æí
(str));

1270 
	}
}

1272 
	$jv_°rög_Àngth_byãs
(
jv
 
j
) {

1273 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1274 
r
 = 
	`jvp_°rög_Àngth
(
	`jvp_°rög_±r
(
j
));

1275 
	`jv_‰ì
(
j
);

1276  
r
;

1277 
	}
}

1279 
	$jv_°rög_Àngth_codïoöts
(
jv
 
j
) {

1280 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1281 c⁄° * 
i
 = 
	`jv_°rög_vÆue
(
j
);

1282 c⁄° * 
íd
 = 
i
 + 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
j
));

1283 
c
 = 0, 
Àn
 = 0;

1284 (
i
 = 
	`jvp_utf8_√xt
(i, 
íd
, &
c
))Ë
Àn
++;

1285 
	`jv_‰ì
(
j
);

1286  
Àn
;

1287 
	}
}

1290 
jv
 
	$jv_°rög_ödexes
(
jv
 
j
, jv 
k
) {

1291 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1292 
	`as£π
(
	`JVP_HAS_KIND
(
k
, 
JV_KIND_STRING
));

1293 c⁄° *
j°r
 = 
	`jv_°rög_vÆue
(
j
);

1294 c⁄° *
idx°r
 = 
	`jv_°rög_vÆue
(
k
);

1295 c⁄° *
p
;

1296 
jÀn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
j
));

1297 
idxÀn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
k
));

1298 
jv
 
a
 = 
	`jv_¨øy
();

1300 i‡(
idxÀn
 != 0) {

1301 
p
 = 
j°r
;

1302 (
p
 = 
	`_jq_memmem
’, (
j°r
 + 
jÀn
Ë-Ö, 
idx°r
, 
idxÀn
)Ë!
NULL
) {

1303 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_numbî
(
p
 - 
j°r
));

1304 
p
 +
idxÀn
;

1307 
	`jv_‰ì
(
j
);

1308 
	`jv_‰ì
(
k
);

1309  
a
;

1310 
	}
}

1312 
jv
 
	$jv_°rög_•lô
(
jv
 
j
, jv 
£p
) {

1313 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1314 
	`as£π
(
	`JVP_HAS_KIND
(
£p
, 
JV_KIND_STRING
));

1315 c⁄° *
j°r
 = 
	`jv_°rög_vÆue
(
j
);

1316 c⁄° *
jíd
 = 
j°r
 + 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
j
));

1317 c⁄° *
£p°r
 = 
	`jv_°rög_vÆue
(
£p
);

1318 c⁄° *
p
, *
s
;

1319 
£∂í
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
£p
));

1320 
jv
 
a
 = 
	`jv_¨øy
();

1322 
	`as£π
(
	`jv_gë_ªf˙t
(
a
) == 1);

1324 i‡(
£∂í
 == 0) {

1325 
c
;

1326 (
j°r
 = 
	`jvp_utf8_√xt
(j°r, 
jíd
, &
c
)))

1327 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_°rög_≠≥nd_codïoöt
(
	`jv_°rög
(""), 
c
));

1329 
p
 = 
j°r
;Ö < 
jíd
;Ö = 
s
 + 
£∂í
) {

1330 
s
 = 
	`_jq_memmem
(
p
, 
jíd
 -Ö, 
£p°r
, 
£∂í
);

1331 i‡(
s
 =
NULL
)

1332 
s
 = 
jíd
;

1333 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_°rög_sized
(
p
, 
s
 -Ö));

1335 i‡(
s
 + 
£∂í
 =
jíd
 && seplen != 0)

1336 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_°rög
(""));

1339 
	`jv_‰ì
(
j
);

1340 
	`jv_‰ì
(
£p
);

1341  
a
;

1342 
	}
}

1344 
jv
 
	$jv_°rög_ex∂ode
(
jv
 
j
) {

1345 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1346 c⁄° * 
i
 = 
	`jv_°rög_vÆue
(
j
);

1347 
Àn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
j
));

1348 c⁄° * 
íd
 = 
i
 + 
Àn
;

1349 
jv
 
a
 = 
	`jv_¨øy_sized
(
Àn
);

1350 
c
;

1351 (
i
 = 
	`jvp_utf8_√xt
(i, 
íd
, &
c
)))

1352 
a
 = 
	`jv_¨øy_≠≥nd
◊, 
	`jv_numbî
(
c
));

1353 
	`jv_‰ì
(
j
);

1354  
a
;

1355 
	}
}

1357 
jv
 
	$jv_°rög_im∂ode
(
jv
 
j
) {

1358 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_ARRAY
));

1359 
Àn
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
j
));

1360 
jv
 
s
 = 
	`jv_°rög_em±y
(
Àn
);

1361 
i
;

1363 
	`as£π
(
Àn
 >= 0);

1365 
i
 = 0; i < 
Àn
; i++) {

1366 
jv
 
n
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
j
), 
i
);

1367 
	`as£π
(
	`JVP_HAS_KIND
(
n
, 
JV_KIND_NUMBER
));

1368 
nv
 = 
	`jv_numbî_vÆue
(
n
);

1369 
	`jv_‰ì
(
n
);

1370 i‡(
nv
 > 0x10FFFF)

1371 
nv
 = 0xFFFD;

1372 
s
 = 
	`jv_°rög_≠≥nd_codïoöt
(s, 
nv
);

1375 
	`jv_‰ì
(
j
);

1376  
s
;

1377 
	}
}

1379 
	$jv_°rög_hash
(
jv
 
j
) {

1380 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1381 
uöt32_t
 
hash
 = 
	`jvp_°rög_hash
(
j
);

1382 
	`jv_‰ì
(
j
);

1383  
hash
;

1384 
	}
}

1386 c⁄° * 
	$jv_°rög_vÆue
(
jv
 
j
) {

1387 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1388  
	`jvp_°rög_±r
(
j
)->
d©a
;

1389 
	}
}

1391 
jv
 
	$jv_°rög_¶i˚
(
jv
 
j
, 
°¨t
, 
íd
) {

1392 
	`as£π
(
	`JVP_HAS_KIND
(
j
, 
JV_KIND_STRING
));

1393 c⁄° *
s
 = 
	`jv_°rög_vÆue
(
j
);

1394 
Àn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
j
));

1395 
i
;

1396 c⁄° *
p
, *
e
;

1397 
c
;

1398 
jv
 
ªs
;

1400 
	`jvp_˛amp_¶i˚_∑øms
(
Àn
, &
°¨t
, &
íd
);

1401 
	`as£π
(0 <
°¨t
 && sèπ <
íd
 &&Énd <
Àn
);

1404 
p
 = 
s
, 
i
 = 0; i < 
°¨t
; i++) {

1405 
p
 = 
	`jvp_utf8_√xt
’, 
s
 + 
Àn
, &
c
);

1406 i‡(
p
 =
NULL
) {

1407 
	`jv_‰ì
(
j
);

1408  
	`jv_°rög_em±y
(16);

1410 i‡(
c
 == -1) {

1411 
	`jv_‰ì
(
j
);

1412  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Invalid UTF-8 string"));

1416 
e
 = 
p
;É !
NULL
 && 
i
 < 
íd
; i++) {

1417 
e
 = 
	`jvp_utf8_√xt
”, 
s
 + 
Àn
, &
c
);

1418 i‡(
e
 =
NULL
) {

1419 
e
 = 
s
 + 
Àn
;

1422 i‡(
c
 == -1) {

1423 
	`jv_‰ì
(
j
);

1424  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Invalid UTF-8 string"));

1435 
ªs
 = 
	`jv_°rög_sized
(
p
, 
e
 -Ö);

1436 
	`jv_‰ì
(
j
);

1437  
ªs
;

1438 
	}
}

1440 
jv
 
	$jv_°rög_c⁄ˇt
(
jv
 
a
, jv 
b
) {

1441 
a
 = 
	`jvp_°rög_≠≥nd
◊, 
	`jv_°rög_vÆue
(
b
),

1442 
	`jvp_°rög_Àngth
(
	`jvp_°rög_±r
(
b
)));

1443 
	`jv_‰ì
(
b
);

1444  
a
;

1445 
	}
}

1447 
jv
 
	$jv_°rög_≠≥nd_buf
(
jv
 
a
, c⁄° * 
buf
, 
Àn
) {

1448 i‡(
	`jvp_utf8_is_vÆid
(
buf
, buf+
Àn
)) {

1449 
a
 = 
	`jvp_°rög_≠≥nd
◊, 
buf
, 
Àn
);

1451 
jv
 
b
 = 
	`jvp_°rög_c›y_ª∂a˚_bad
(
buf
, 
Àn
);

1452 
a
 = 
	`jv_°rög_c⁄ˇt
◊, 
b
);

1454  
a
;

1455 
	}
}

1457 
jv
 
	$jv_°rög_≠≥nd_codïoöt
(
jv
 
a
, 
uöt32_t
 
c
) {

1458 
buf
[5];

1459 
Àn
 = 
	`jvp_utf8_ícode
(
c
, 
buf
);

1460 
a
 = 
	`jvp_°rög_≠≥nd
◊, 
buf
, 
Àn
);

1461  
a
;

1462 
	}
}

1464 
jv
 
	$jv_°rög_≠≥nd_°r
(
jv
 
a
, c⁄° * 
°r
) {

1465  
	`jv_°rög_≠≥nd_buf
(
a
, 
°r
, 
	`°æí
(str));

1466 
	}
}

1468 
jv
 
	$jv_°rög_vfmt
(c⁄° * 
fmt
, 
va_li°
 
≠
) {

1469 
size
 = 1024;

1471 * 
buf
 = 
	`jv_mem_Æloc
(
size
);

1472 
va_li°
 
≠2
;

1473 
	`va_c›y
(
≠2
, 
≠
);

1474 
n
 = 
	`v¢¥ötf
(
buf
, 
size
, 
fmt
, 
≠2
);

1475 
	`va_íd
(
≠2
);

1480 i‡(
n
 >0 &&Ç < 
size
) {

1481 
jv
 
ªt
 = 
	`jv_°rög_sized
(
buf
, 
n
);

1482 
	`jv_mem_‰ì
(
buf
);

1483  
ªt
;

1485 
	`jv_mem_‰ì
(
buf
);

1486 
size
 = (
n
 > 0) ? (n * 2) : (size * 2);

1489 
	}
}

1491 
jv
 
	$jv_°rög_fmt
(c⁄° * 
fmt
, ...) {

1492 
va_li°
 
¨gs
;

1493 
	`va_°¨t
(
¨gs
, 
fmt
);

1494 
jv
 
ªs
 = 
	`jv_°rög_vfmt
(
fmt
, 
¨gs
);

1495 
	`va_íd
(
¨gs
);

1496  
ªs
;

1497 
	}
}

1503 
	#JVP_FLAGS_OBJECT
 
	`JVP_MAKE_FLAGS
(
JV_KIND_OBJECT
, 
JVP_PAYLOAD_ALLOCATED
)

	)

1505 
	sobje˘_¶Ÿ
 {

1506 
	m√xt
;

1507 
uöt32_t
 
	mhash
;

1508 
jv
 
	m°rög
;

1509 
jv
 
	mvÆue
;

1513 
jv_ªf˙t
 
	mªf˙t
;

1514 
	m√xt_‰ì
;

1515 
obje˘_¶Ÿ
 
	mñemíts
[];

1516 } 
	tjvp_obje˘
;

1520 
jv
 
	$jvp_obje˘_√w
(
size
) {

1524 
	`as£π
(
size
 > 0 && (size & (size - 1)) == 0);

1526 
jvp_obje˘
* 
obj
 = 
	`jv_mem_Æloc
((jvp_object) +

1527 (
obje˘_¶Ÿ
Ë* 
size
 +

1528 (Ë* (
size
 * 2));

1529 
obj
->
ªf˙t
.
cou¡
 = 1;

1530 
i
=0; i<
size
; i++) {

1531 
obj
->
ñemíts
[
i
].
√xt
 = i - 1;

1532 
obj
->
ñemíts
[
i
].
°rög
 = 
JV_NULL
;

1533 
obj
->
ñemíts
[
i
].
hash
 = 0;

1534 
obj
->
ñemíts
[
i
].
vÆue
 = 
JV_NULL
;

1536 
obj
->
√xt_‰ì
 = 0;

1537 * 
hashbuckës
 = (*)(&
obj
->
ñemíts
[
size
]);

1538 
i
=0; i<
size
*2; i++) {

1539 
hashbuckës
[
i
] = -1;

1541 
jv
 
r
 = {
JVP_FLAGS_OBJECT
, 0, 0, 
size
, {&
obj
->
ªf˙t
}};

1542  
r
;

1543 
	}
}

1545 
jvp_obje˘
* 
	$jvp_obje˘_±r
(
jv
 
o
) {

1546 
	`as£π
(
	`JVP_HAS_KIND
(
o
, 
JV_KIND_OBJECT
));

1547  (
jvp_obje˘
*)
o
.
u
.
±r
;

1548 
	}
}

1550 
uöt32_t
 
	$jvp_obje˘_mask
(
jv
 
o
) {

1551 
	`as£π
(
	`JVP_HAS_KIND
(
o
, 
JV_KIND_OBJECT
));

1552  (
o
.
size
 * 2) - 1;

1553 
	}
}

1555 
	$jvp_obje˘_size
(
jv
 
o
) {

1556 
	`as£π
(
	`JVP_HAS_KIND
(
o
, 
JV_KIND_OBJECT
));

1557  
o
.
size
;

1558 
	}
}

1560 * 
	$jvp_obje˘_buckës
(
jv
 
o
) {

1561  (*)(&
	`jvp_obje˘_±r
(
o
)->
ñemíts
[o.
size
]);

1562 
	}
}

1564 * 
	$jvp_obje˘_föd_buckë
(
jv
 
obje˘
, jv 
key
) {

1565  
	`jvp_obje˘_buckës
(
obje˘
Ë+ (
	`jvp_obje˘_mask
(obje˘Ë& 
	`jvp_°rög_hash
(
key
));

1566 
	}
}

1568 
obje˘_¶Ÿ
* 
	$jvp_obje˘_gë_¶Ÿ
(
jv
 
obje˘
, 
¶Ÿ
) {

1569 
	`as£π
(
¶Ÿ
 =-1 || (¶Ÿ >0 && slŸ < 
	`jvp_obje˘_size
(
obje˘
)));

1570 i‡(
¶Ÿ
 == -1)  0;

1571  &
	`jvp_obje˘_±r
(
obje˘
)->
ñemíts
[
¶Ÿ
];

1572 
	}
}

1574 
obje˘_¶Ÿ
* 
	$jvp_obje˘_√xt_¶Ÿ
(
jv
 
obje˘
, 
obje˘_¶Ÿ
* 
¶Ÿ
) {

1575  
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
¶Ÿ
->
√xt
);

1576 
	}
}

1578 
obje˘_¶Ÿ
* 
	$jvp_obje˘_föd_¶Ÿ
(
jv
 
obje˘
, jv 
key°r
, * 
buckë
) {

1579 
uöt32_t
 
hash
 = 
	`jvp_°rög_hash
(
key°r
);

1580 
obje˘_¶Ÿ
* 
cuº
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, *
buckë
);

1581 
cuº
;

1582 
cuº
 = 
	`jvp_obje˘_√xt_¶Ÿ
(
obje˘
, curr)) {

1583 i‡(
cuº
->
hash
 =hash && 
	`jvp_°rög_equÆ
(
key°r
, cuº->
°rög
)) {

1584  
cuº
;

1588 
	}
}

1590 
obje˘_¶Ÿ
* 
	$jvp_obje˘_add_¶Ÿ
(
jv
 
obje˘
, jv 
key
, * 
buckë
) {

1591 
jvp_obje˘
* 
o
 = 
	`jvp_obje˘_±r
(
obje˘
);

1592 
√w¶Ÿ_idx
 = 
o
->
√xt_‰ì
;

1593 i‡(
√w¶Ÿ_idx
 =
	`jvp_obje˘_size
(
obje˘
))  0;

1594 
obje˘_¶Ÿ
* 
√w¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
√w¶Ÿ_idx
);

1595 
o
->
√xt_‰ì
++;

1596 
√w¶Ÿ
->
√xt
 = *
buckë
;

1597 *
buckë
 = 
√w¶Ÿ_idx
;

1598 
√w¶Ÿ
->
hash
 = 
	`jvp_°rög_hash
(
key
);

1599 
√w¶Ÿ
->
°rög
 = 
key
;

1600  
√w¶Ÿ
;

1601 
	}
}

1603 
jv
* 
	$jvp_obje˘_ªad
(
jv
 
obje˘
, jv 
key
) {

1604 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1605 * 
buckë
 = 
	`jvp_obje˘_föd_buckë
(
obje˘
, 
key
);

1606 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_föd_¶Ÿ
(
obje˘
, 
key
, 
buckë
);

1607 i‡(
¶Ÿ
 == 0)  0;

1608  &
¶Ÿ
->
vÆue
;

1609 
	}
}

1611 
	$jvp_obje˘_‰ì
(
jv
 
o
) {

1612 
	`as£π
(
	`JVP_HAS_KIND
(
o
, 
JV_KIND_OBJECT
));

1613 i‡(
	`jvp_ªf˙t_dec
(
o
.
u
.
±r
)) {

1614 
i
=0; i<
	`jvp_obje˘_size
(
o
); i++) {

1615 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
o
, 
i
);

1616 i‡(
	`jv_gë_köd
(
¶Ÿ
->
°rög
Ë!
JV_KIND_NULL
) {

1617 
	`jvp_°rög_‰ì
(
¶Ÿ
->
°rög
);

1618 
	`jv_‰ì
(
¶Ÿ
->
vÆue
);

1621 
	`jv_mem_‰ì
(
	`jvp_obje˘_±r
(
o
));

1623 
	}
}

1625 
jv
 
	$jvp_obje˘_ªhash
(
jv
 
obje˘
) {

1626 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1627 
	`as£π
(
	`jvp_ªf˙t_unsh¨ed
(
obje˘
.
u
.
±r
));

1628 
size
 = 
	`jvp_obje˘_size
(
obje˘
);

1629 
jv
 
√w_obje˘
 = 
	`jvp_obje˘_√w
(
size
 * 2);

1630 
i
=0; i<
size
; i++) {

1631 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
i
);

1632 i‡(
	`jv_gë_köd
(
¶Ÿ
->
°rög
Ë=
JV_KIND_NULL
) ;

1633 * 
√w_buckë
 = 
	`jvp_obje˘_föd_buckë
(
√w_obje˘
, 
¶Ÿ
->
°rög
);

1634 
	`as£π
(!
	`jvp_obje˘_föd_¶Ÿ
(
√w_obje˘
, 
¶Ÿ
->
°rög
, 
√w_buckë
));

1635 
obje˘_¶Ÿ
* 
√w_¶Ÿ
 = 
	`jvp_obje˘_add_¶Ÿ
(
√w_obje˘
, 
¶Ÿ
->
°rög
, 
√w_buckë
);

1636 
	`as£π
(
√w_¶Ÿ
);

1637 
√w_¶Ÿ
->
vÆue
 = 
¶Ÿ
->value;

1640 
	`jv_mem_‰ì
(
	`jvp_obje˘_±r
(
obje˘
));

1641  
√w_obje˘
;

1642 
	}
}

1644 
jv
 
	$jvp_obje˘_unsh¨e
(
jv
 
obje˘
) {

1645 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1646 i‡(
	`jvp_ªf˙t_unsh¨ed
(
obje˘
.
u
.
±r
))

1647  
obje˘
;

1649 
jv
 
√w_obje˘
 = 
	`jvp_obje˘_√w
(
	`jvp_obje˘_size
(
obje˘
));

1650 
	`jvp_obje˘_±r
(
√w_obje˘
)->
√xt_‰ì
 = jvp_obje˘_±r(
obje˘
)->next_free;

1651 
i
=0; i<
	`jvp_obje˘_size
(
√w_obje˘
); i++) {

1652 
obje˘_¶Ÿ
* 
ﬁd_¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
i
);

1653 
obje˘_¶Ÿ
* 
√w_¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
√w_obje˘
, 
i
);

1654 *
√w_¶Ÿ
 = *
ﬁd_¶Ÿ
;

1655 i‡(
	`jv_gë_köd
(
ﬁd_¶Ÿ
->
°rög
Ë!
JV_KIND_NULL
) {

1656 
√w_¶Ÿ
->
°rög
 = 
	`jv_c›y
(
ﬁd_¶Ÿ
->string);

1657 
√w_¶Ÿ
->
vÆue
 = 
	`jv_c›y
(
ﬁd_¶Ÿ
->value);

1661 * 
ﬁd_buckës
 = 
	`jvp_obje˘_buckës
(
obje˘
);

1662 * 
√w_buckës
 = 
	`jvp_obje˘_buckës
(
√w_obje˘
);

1663 
	`mem˝y
(
√w_buckës
, 
ﬁd_buckës
, (Ë* 
	`jvp_obje˘_size
(
√w_obje˘
)*2);

1665 
	`jvp_obje˘_‰ì
(
obje˘
);

1666 
	`as£π
(
	`jvp_ªf˙t_unsh¨ed
(
√w_obje˘
.
u
.
±r
));

1667  
√w_obje˘
;

1668 
	}
}

1670 
jv
* 
	$jvp_obje˘_wrôe
(
jv
* 
obje˘
, jv 
key
) {

1671 *
obje˘
 = 
	`jvp_obje˘_unsh¨e
(*object);

1672 * 
buckë
 = 
	`jvp_obje˘_föd_buckë
(*
obje˘
, 
key
);

1673 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_föd_¶Ÿ
(*
obje˘
, 
key
, 
buckë
);

1674 i‡(
¶Ÿ
) {

1676 
	`jvp_°rög_‰ì
(
key
);

1677  &
¶Ÿ
->
vÆue
;

1679 
¶Ÿ
 = 
	`jvp_obje˘_add_¶Ÿ
(*
obje˘
, 
key
, 
buckë
);

1680 i‡(
¶Ÿ
) {

1681 
¶Ÿ
->
vÆue
 = 
	`jv_övÆid
();

1683 *
obje˘
 = 
	`jvp_obje˘_ªhash
(*object);

1684 
buckë
 = 
	`jvp_obje˘_föd_buckë
(*
obje˘
, 
key
);

1685 
	`as£π
(!
	`jvp_obje˘_föd_¶Ÿ
(*
obje˘
, 
key
, 
buckë
));

1686 
¶Ÿ
 = 
	`jvp_obje˘_add_¶Ÿ
(*
obje˘
, 
key
, 
buckë
);

1687 
	`as£π
(
¶Ÿ
);

1688 
¶Ÿ
->
vÆue
 = 
	`jv_övÆid
();

1690  &
¶Ÿ
->
vÆue
;

1691 
	}
}

1693 
	$jvp_obje˘_dñëe
(
jv
* 
obje˘
, jv 
key
) {

1694 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1695 *
obje˘
 = 
	`jvp_obje˘_unsh¨e
(*object);

1696 * 
buckë
 = 
	`jvp_obje˘_föd_buckë
(*
obje˘
, 
key
);

1697 * 
¥ev_±r
 = 
buckë
;

1698 
uöt32_t
 
hash
 = 
	`jvp_°rög_hash
(
key
);

1699 
obje˘_¶Ÿ
* 
cuº
 = 
	`jvp_obje˘_gë_¶Ÿ
(*
obje˘
, *
buckë
);

1700 
cuº
;

1701 
cuº
 = 
	`jvp_obje˘_√xt_¶Ÿ
(*
obje˘
, curr)) {

1702 i‡(
hash
 =
cuº
->hash && 
	`jvp_°rög_equÆ
(
key
, cuº->
°rög
)) {

1703 *
¥ev_±r
 = 
cuº
->
√xt
;

1704 
	`jvp_°rög_‰ì
(
cuº
->
°rög
);

1705 
cuº
->
°rög
 = 
JV_NULL
;

1706 
	`jv_‰ì
(
cuº
->
vÆue
);

1709 
¥ev_±r
 = &
cuº
->
√xt
;

1712 
	}
}

1714 
	$jvp_obje˘_Àngth
(
jv
 
obje˘
) {

1715 
n
 = 0;

1716 
i
=0; i<
	`jvp_obje˘_size
(
obje˘
); i++) {

1717 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
i
);

1718 i‡(
	`jv_gë_köd
(
¶Ÿ
->
°rög
Ë!
JV_KIND_NULL
Ë
n
++;

1720  
n
;

1721 
	}
}

1723 
	$jvp_obje˘_equÆ
(
jv
 
o1
, jv 
o2
) {

1724 
Àn2
 = 
	`jvp_obje˘_Àngth
(
o2
);

1725 
Àn1
 = 0;

1726 
i
=0; i<
	`jvp_obje˘_size
(
o1
); i++) {

1727 
obje˘_¶Ÿ
* 
¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
o1
, 
i
);

1728 i‡(
	`jv_gë_köd
(
¶Ÿ
->
°rög
Ë=
JV_KIND_NULL
) ;

1729 
jv
* 
¶Ÿ2
 = 
	`jvp_obje˘_ªad
(
o2
, 
¶Ÿ
->
°rög
);

1730 i‡(!
¶Ÿ2
)  0;

1732 i‡(!
	`jv_equÆ
(
	`jv_c›y
(
¶Ÿ
->
vÆue
), jv_c›y(*
¶Ÿ2
)))  0;

1733 
Àn1
++;

1735  
Àn1
 =
Àn2
;

1736 
	}
}

1738 
	$jvp_obje˘_c⁄èös
(
jv
 
a
, jv 
b
) {

1739 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_OBJECT
));

1740 
	`as£π
(
	`JVP_HAS_KIND
(
b
, 
JV_KIND_OBJECT
));

1741 
r
 = 1;

1743 
	`jv_obje˘_f‹óch
(
b
, 
key
, 
b_vÆ
) {

1744 
jv
 
a_vÆ
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
a
), jv_c›y(
key
));

1746 
r
 = 
	`jv_c⁄èös
(
a_vÆ
, 
b_vÆ
);

1747 
	`jv_‰ì
(
key
);

1749 i‡(!
r
) ;

1751  
r
;

1752 
	}
}

1757 
	#DEFAULT_OBJECT_SIZE
 8

	)

1758 
jv
 
	$jv_obje˘
() {

1759  
	`jvp_obje˘_√w
(8);

1760 
	}
}

1762 
jv
 
	$jv_obje˘_gë
(
jv
 
obje˘
, jv 
key
) {

1763 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1764 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1765 
jv
* 
¶Ÿ
 = 
	`jvp_obje˘_ªad
(
obje˘
, 
key
);

1766 
jv
 
vÆ
;

1767 i‡(
¶Ÿ
) {

1768 
vÆ
 = 
	`jv_c›y
(*
¶Ÿ
);

1770 
vÆ
 = 
	`jv_övÆid
();

1772 
	`jv_‰ì
(
obje˘
);

1773 
	`jv_‰ì
(
key
);

1774  
vÆ
;

1775 
	}
}

1777 
	$jv_obje˘_has
(
jv
 
obje˘
, jv 
key
) {

1778 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1779 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1780 
jv
* 
¶Ÿ
 = 
	`jvp_obje˘_ªad
(
obje˘
, 
key
);

1781 
ªs
 = 
¶Ÿ
 ? 1 : 0;

1782 
	`jv_‰ì
(
obje˘
);

1783 
	`jv_‰ì
(
key
);

1784  
ªs
;

1785 
	}
}

1787 
jv
 
	$jv_obje˘_£t
(
jv
 
obje˘
, jv 
key
, jv 
vÆue
) {

1788 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1789 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1791 
jv
* 
¶Ÿ
 = 
	`jvp_obje˘_wrôe
(&
obje˘
, 
key
);

1792 
	`jv_‰ì
(*
¶Ÿ
);

1793 *
¶Ÿ
 = 
vÆue
;

1794  
obje˘
;

1795 
	}
}

1797 
jv
 
	$jv_obje˘_dñëe
(
jv
 
obje˘
, jv 
key
) {

1798 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1799 
	`as£π
(
	`JVP_HAS_KIND
(
key
, 
JV_KIND_STRING
));

1800 
	`jvp_obje˘_dñëe
(&
obje˘
, 
key
);

1801 
	`jv_‰ì
(
key
);

1802  
obje˘
;

1803 
	}
}

1805 
	$jv_obje˘_Àngth
(
jv
 
obje˘
) {

1806 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1807 
n
 = 
	`jvp_obje˘_Àngth
(
obje˘
);

1808 
	`jv_‰ì
(
obje˘
);

1809  
n
;

1810 
	}
}

1812 
jv
 
	$jv_obje˘_mîge
(
jv
 
a
, jv 
b
) {

1813 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_OBJECT
));

1814 
	`jv_obje˘_f‹óch
(
b
, 
k
, 
v
) {

1815 
a
 = 
	`jv_obje˘_£t
◊, 
k
, 
v
);

1817 
	`jv_‰ì
(
b
);

1818  
a
;

1819 
	}
}

1821 
jv
 
	$jv_obje˘_mîge_ªcursive
(
jv
 
a
, jv 
b
) {

1822 
	`as£π
(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_OBJECT
));

1823 
	`as£π
(
	`JVP_HAS_KIND
(
b
, 
JV_KIND_OBJECT
));

1825 
	`jv_obje˘_f‹óch
(
b
, 
k
, 
v
) {

1826 
jv
 
ñem
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
a
), jv_c›y(
k
));

1827 i‡(
	`jv_is_vÆid
(
ñem
) &&

1828 
	`JVP_HAS_KIND
(
ñem
, 
JV_KIND_OBJECT
) &&

1829 
	`JVP_HAS_KIND
(
v
, 
JV_KIND_OBJECT
)) {

1830 
a
 = 
	`jv_obje˘_£t
◊, 
k
, 
	`jv_obje˘_mîge_ªcursive
(
ñem
, 
v
));

1832 
	`jv_‰ì
(
ñem
);

1833 
a
 = 
	`jv_obje˘_£t
◊, 
k
, 
v
);

1836 
	`jv_‰ì
(
b
);

1837  
a
;

1838 
	}
}

1844 íum { 
	mITER_FINISHED
 = -2 };

1846 
	$jv_obje˘_ôî_vÆid
(
jv
 
obje˘
, 
i
) {

1847  
i
 !
ITER_FINISHED
;

1848 
	}
}

1850 
	$jv_obje˘_ôî
(
jv
 
obje˘
) {

1851 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1852  
	`jv_obje˘_ôî_√xt
(
obje˘
, -1);

1853 
	}
}

1855 
	$jv_obje˘_ôî_√xt
(
jv
 
obje˘
, 
ôî
) {

1856 
	`as£π
(
	`JVP_HAS_KIND
(
obje˘
, 
JV_KIND_OBJECT
));

1857 
	`as£π
(
ôî
 !
ITER_FINISHED
);

1858 
obje˘_¶Ÿ
* 
¶Ÿ
;

1860 
ôî
++;

1861 i‡(
ôî
 >
	`jvp_obje˘_size
(
obje˘
))

1862  
ITER_FINISHED
;

1863 
¶Ÿ
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
ôî
);

1864 } 
	`jv_gë_köd
(
¶Ÿ
->
°rög
Ë=
JV_KIND_NULL
);

1865 
	`as£π
(
	`jv_gë_köd
(
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
,
ôî
)->
°rög
)

1866 =
JV_KIND_STRING
);

1867  
ôî
;

1868 
	}
}

1870 
jv
 
	$jv_obje˘_ôî_key
(
jv
 
obje˘
, 
ôî
) {

1871 
jv
 
s
 = 
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
ôî
)->
°rög
;

1872 
	`as£π
(
	`JVP_HAS_KIND
(
s
, 
JV_KIND_STRING
));

1873  
	`jv_c›y
(
s
);

1874 
	}
}

1876 
jv
 
	$jv_obje˘_ôî_vÆue
(
jv
 
obje˘
, 
ôî
) {

1877  
	`jv_c›y
(
	`jvp_obje˘_gë_¶Ÿ
(
obje˘
, 
ôî
)->
vÆue
);

1878 
	}
}

1883 
jv
 
	$jv_c›y
(
jv
 
j
) {

1884 i‡(
	`JVP_IS_ALLOCATED
(
j
)) {

1885 
	`jvp_ªf˙t_öc
(
j
.
u
.
±r
);

1887  
j
;

1888 
	}
}

1890 
	$jv_‰ì
(
jv
 
j
) {

1891 
	`JVP_KIND
(
j
)) {

1892 
JV_KIND_ARRAY
:

1893 
	`jvp_¨øy_‰ì
(
j
);

1895 
JV_KIND_STRING
:

1896 
	`jvp_°rög_‰ì
(
j
);

1898 
JV_KIND_OBJECT
:

1899 
	`jvp_obje˘_‰ì
(
j
);

1901 
JV_KIND_INVALID
:

1902 
	`jvp_övÆid_‰ì
(
j
);

1904 
JV_KIND_NUMBER
:

1905 
	`jvp_numbî_‰ì
(
j
);

1908 
	}
}

1910 
	$jv_gë_ªf˙t
(
jv
 
j
) {

1911 i‡(
	`JVP_IS_ALLOCATED
(
j
)) {

1912  
j
.
u
.
±r
->
cou¡
;

1916 
	}
}

1922 
	$jv_equÆ
(
jv
 
a
, jv 
b
) {

1923 
r
;

1924 i‡(
	`jv_gë_köd
(
a
Ë!jv_gë_köd(
b
)) {

1925 
r
 = 0;

1926 } i‡(
	`JVP_IS_ALLOCATED
(
a
) &&

1927 
	`JVP_IS_ALLOCATED
(
b
) &&

1928 
a
.
köd_Êags
 =
b
.kind_flags &&

1929 
a
.
size
 =
b
.size &&

1930 
a
.
u
.
±r
 =
b
.u.ptr) {

1931 
r
 = 1;

1933 
	`jv_gë_köd
(
a
)) {

1934 
JV_KIND_NUMBER
:

1935 
r
 = 
	`jvp_numbî_equÆ
(
a
, 
b
);

1937 
JV_KIND_ARRAY
:

1938 
r
 = 
	`jvp_¨øy_equÆ
(
a
, 
b
);

1940 
JV_KIND_STRING
:

1941 
r
 = 
	`jvp_°rög_equÆ
(
a
, 
b
);

1943 
JV_KIND_OBJECT
:

1944 
r
 = 
	`jvp_obje˘_equÆ
(
a
, 
b
);

1947 
r
 = 1;

1951 
	`jv_‰ì
(
a
);

1952 
	`jv_‰ì
(
b
);

1953  
r
;

1954 
	}
}

1956 
	$jv_idítiˇl
(
jv
 
a
, jv 
b
) {

1957 
r
;

1958 i‡(
a
.
köd_Êags
 !
b
.kind_flags

1959 || 
a
.
off£t
 !
b
.offset

1960 || 
a
.
size
 !
b
.size) {

1961 
r
 = 0;

1963 i‡(
	`JVP_IS_ALLOCATED
(
a
) ) {

1964 
r
 = 
a
.
u
.
±r
 =
b
.u.ptr;

1966 
r
 = 
	`memcmp
(&
a
.
u
.
±r
, &
b
.u.ptr, (a.u)) == 0;

1969 
	`jv_‰ì
(
a
);

1970 
	`jv_‰ì
(
b
);

1971  
r
;

1972 
	}
}

1974 
	$jv_c⁄èös
(
jv
 
a
, jv 
b
) {

1975 
r
 = 1;

1976 i‡(
	`jv_gë_köd
(
a
Ë!jv_gë_köd(
b
)) {

1977 
r
 = 0;

1978 } i‡(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_OBJECT
)) {

1979 
r
 = 
	`jvp_obje˘_c⁄èös
(
a
, 
b
);

1980 } i‡(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_ARRAY
)) {

1981 
r
 = 
	`jvp_¨øy_c⁄èös
(
a
, 
b
);

1982 } i‡(
	`JVP_HAS_KIND
(
a
, 
JV_KIND_STRING
)) {

1983 
b_Àn
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
b
));

1984 i‡(
b_Àn
 != 0) {

1985 
r
 = 
	`_jq_memmem
(
	`jv_°rög_vÆue
(
a
), 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(a)),

1986 
	`jv_°rög_vÆue
(
b
), 
b_Àn
) != 0;

1988 
r
 = 1;

1991 
r
 = 
	`jv_equÆ
(
	`jv_c›y
(
a
), jv_c›y(
b
));

1993 
	`jv_‰ì
(
a
);

1994 
	`jv_‰ì
(
b
);

1995  
r
;

1996 
	}
}

	@src/jv.h

1 #i‚de‡
JV_H


2 
	#JV_H


	)

4 
	~<°d¨g.h
>

5 
	~<°döt.h
>

6 
	~<°dio.h
>

9 
	mJV_KIND_INVALID
,

10 
	mJV_KIND_NULL
,

11 
	mJV_KIND_FALSE
,

12 
	mJV_KIND_TRUE
,

13 
	mJV_KIND_NUMBER
,

14 
	mJV_KIND_STRING
,

15 
	mJV_KIND_ARRAY
,

16 
	mJV_KIND_OBJECT


17 } 
	tjv_köd
;

19 
	gjv_ªf˙t
;

24 
	mköd_Êags
;

25 
	m∑d_
;

26 
	moff£t
;

27 
	msize
;

29 
jv_ªf˙t
* 
	m±r
;

30 
	mnumbî
;

31 } 
	mu
;

32 } 
	tjv
;

39 
jv_köd
 
jv_gë_köd
(
jv
);

40 c⁄° * 
jv_köd_«me
(
jv_köd
);

41 
	$jv_is_vÆid
(
jv
 
x
Ë{  
	`jv_gë_köd
(xË!
JV_KIND_INVALID
; 
	}
}

43 
jv
 
jv_c›y
(jv);

44 
jv_‰ì
(
jv
);

46 
jv_gë_ªf˙t
(
jv
);

48 
jv_equÆ
(
jv
, jv);

49 
jv_idítiˇl
(
jv
, jv);

50 
jv_c⁄èös
(
jv
, jv);

52 
jv
 
jv_övÆid
();

53 
jv
 
jv_övÆid_wôh_msg
(jv);

54 
jv
 
jv_övÆid_gë_msg
(jv);

55 
jv_övÆid_has_msg
(
jv
);

57 
jv
 
jv_nuŒ
();

58 
jv
 
jv_åue
();

59 
jv
 
jv_Ál£
();

60 
jv
 
jv_boﬁ
();

62 
jv
 
jv_numbî
();

63 
jv
 
jv_numbî_wôh_lôîÆ
(const *);

64 
jv_numbî_vÆue
(
jv
);

65 
jv_is_öãgî
(
jv
);

67 
jv_numbî_has_lôîÆ
(
jv
 
n
);

68 c⁄° * 
jv_numbî_gë_lôîÆ
(
jv
);

70 
jv
 
jv_¨øy
();

71 
jv
 
jv_¨øy_sized
();

72 
jv_¨øy_Àngth
(
jv
);

73 
jv
 
jv_¨øy_gë
(jv, );

74 
jv
 
jv_¨øy_£t
(jv, , jv);

75 
jv
 
jv_¨øy_≠≥nd
(jv, jv);

76 
jv
 
jv_¨øy_c⁄ˇt
(jv, jv);

77 
jv
 
jv_¨øy_¶i˚
(jv, , );

78 
jv
 
jv_¨øy_ödexes
(jv, jv);

79 
	#jv_¨øy_f‹óch
(
a
, 
i
, 
x
) \

80 
jv_Àn__
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
)), 
i
=0, 
jv_j__
 = 1; \

81 
jv_j__
; jv_j__ = 0) \

82 
jv
 
x
; \

83 
i
 < 
jv_Àn__
 ? \

84 (
x
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 
i
), 1) : 0; \

85 
i
++)

	)

87 
	#JV_ARRAY_1
(
e
Ë(
	`jv_¨øy_≠≥nd
(
	`jv_¨øy
(),e))

	)

88 
	#JV_ARRAY_2
(
e1
,
e2
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_1
”1),e2))

	)

89 
	#JV_ARRAY_3
(
e1
,
e2
,
e3
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_2
”1,e2),e3))

	)

90 
	#JV_ARRAY_4
(
e1
,
e2
,
e3
,
e4
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_3
”1,e2,e3),e4))

	)

91 
	#JV_ARRAY_5
(
e1
,
e2
,
e3
,
e4
,
e5
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_4
”1,e2,e3,e4),e5))

	)

92 
	#JV_ARRAY_6
(
e1
,
e2
,
e3
,
e4
,
e5
,
e6
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_5
”1,e2,e3,e4,e5),e6))

	)

93 
	#JV_ARRAY_7
(
e1
,
e2
,
e3
,
e4
,
e5
,
e6
,
e7
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_6
”1,e2,e3,e4,e5,e6),e7))

	)

94 
	#JV_ARRAY_8
(
e1
,
e2
,
e3
,
e4
,
e5
,
e6
,
e7
,
e8
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_7
”1,e2,e3,e4,e5,e6,e7),e8))

	)

95 
	#JV_ARRAY_9
(
e1
,
e2
,
e3
,
e4
,
e5
,
e6
,
e7
,
e8
,
e9
Ë(
	`jv_¨øy_≠≥nd
(
	`JV_ARRAY_8
”1,e2,e3,e4,e5,e6,e7,e8),e9))

	)

96 
	#JV_ARRAY_IDX
(
_1
,
_2
,
_3
,
_4
,
_5
,
_6
,
_7
,
_8
,
_9
,
NAME
,...Ë
	)
NAME

97 
	#JV_ARRAY
(...) \

98 
	`JV_ARRAY_IDX
(
__VA_ARGS__
, 
JV_ARRAY_9
, 
JV_ARRAY_8
, 
JV_ARRAY_7
, 
JV_ARRAY_6
, 
JV_ARRAY_5
, 
JV_ARRAY_4
, 
JV_ARRAY_3
, 
JV_ARRAY_2
, 
JV_ARRAY_1
, 
dummy
)(__VA_ARGS__)

	)

100 #ifde‡
__GNUC__


101 
	#JV_PRINTF_LIKE
(
fmt_¨g_num
, 
¨gs_num
) \

102 
	`__©åibuã__
 ((
	`__f‹m©__
–
__¥ötf__
, 
fmt_¨g_num
, 
¨gs_num
)))

	)

103 
	#JV_VPRINTF_LIKE
(
fmt_¨g_num
) \

104 
	`__©åibuã__
 ((
	`__f‹m©__
–
__¥ötf__
, 
fmt_¨g_num
, 0)))

	)

108 
jv
 
jv_°rög
(const *);

109 
jv
 
jv_°rög_sized
(const *, );

110 
jv
 
jv_°rög_em±y
(
Àn
);

111 
jv_°rög_Àngth_byãs
(
jv
);

112 
jv_°rög_Àngth_codïoöts
(
jv
);

113 
jv_°rög_hash
(
jv
);

114 c⁄° * 
jv_°rög_vÆue
(
jv
);

115 
jv
 
jv_°rög_ödexes
(jv 
j
, jv 
k
);

116 
jv
 
jv_°rög_¶i˚
(jv 
j
, 
°¨t
, 
íd
);

117 
jv
 
jv_°rög_c⁄ˇt
(jv, jv);

118 
jv
 
	$jv_°rög_vfmt
(c⁄° *, 
va_li°
Ë
	`JV_VPRINTF_LIKE
(1);

119 
jv
 
	$jv_°rög_fmt
(c⁄° *, ...Ë
	`JV_PRINTF_LIKE
(1, 2);

120 
jv
 
	`jv_°rög_≠≥nd_codïoöt
(jv 
a
, 
uöt32_t
 
c
);

121 
jv
 
	`jv_°rög_≠≥nd_buf
(jv 
a
, c⁄° * 
buf
, 
Àn
);

122 
jv
 
	`jv_°rög_≠≥nd_°r
(jv 
a
, c⁄° * 
°r
);

123 
jv
 
	`jv_°rög_•lô
(jv 
j
, jv 
£p
);

124 
jv
 
	`jv_°rög_ex∂ode
(jv 
j
);

125 
jv
 
	`jv_°rög_im∂ode
(jv 
j
);

127 
jv
 
	`jv_obje˘
();

128 
jv
 
	`jv_obje˘_gë
(jv 
obje˘
, jv 
key
);

129 
	`jv_obje˘_has
(
jv
 
obje˘
, jv 
key
);

130 
jv
 
	`jv_obje˘_£t
(jv 
obje˘
, jv 
key
, jv 
vÆue
);

131 
jv
 
	`jv_obje˘_dñëe
(jv 
obje˘
, jv 
key
);

132 
	`jv_obje˘_Àngth
(
jv
 
obje˘
);

133 
jv
 
	`jv_obje˘_mîge
(jv, jv);

134 
jv
 
	`jv_obje˘_mîge_ªcursive
(jv, jv);

136 
	`jv_obje˘_ôî
(
jv
);

137 
	`jv_obje˘_ôî_√xt
(
jv
, );

138 
	`jv_obje˘_ôî_vÆid
(
jv
, );

139 
jv
 
	`jv_obje˘_ôî_key
(jv, );

140 
jv
 
	`jv_obje˘_ôî_vÆue
(jv, );

141 
	#jv_obje˘_f‹óch
(
t
, 
k
, 
v
) \

142 
jv_i__
 = 
	`jv_obje˘_ôî
(
t
), 
jv_j__
 = 1; jv_j__; jv_j__ = 0) \

143 
jv
 
k
, 
v
; \

144 
	`jv_obje˘_ôî_vÆid
((
t
), 
jv_i__
) ? \

145 (
k
 = 
	`jv_obje˘_ôî_key
(
t
, 
jv_i__
), \

146 
v
 = 
	`jv_obje˘_ôî_vÆue
(
t
, 
jv_i__
), \

149 
jv_i__
 = 
	`jv_obje˘_ôî_√xt
(
t
, jv_i__)) \

150 

	)

151 
	#jv_obje˘_keys_f‹óch
(
t
, 
k
) \

152 
jv_i__
 = 
	`jv_obje˘_ôî
(
t
), 
jv_j__
 = 1; jv_j__; jv_j__ = 0) \

153 
jv
 
k
; \

154 
	`jv_obje˘_ôî_vÆid
((
t
), 
jv_i__
) ? \

155 (
k
 = 
	`jv_obje˘_ôî_key
(
t
, 
jv_i__
), \

158 
jv_i__
 = 
	`jv_obje˘_ôî_√xt
(
t
, jv_i__))

	)

160 
	#JV_OBJECT_1
(
k1
Ë(
	`jv_obje˘_£t
(
	`jv_obje˘
(),(k1),
	`jv_nuŒ
()))

	)

161 
	#JV_OBJECT_2
(
k1
,
v1
Ë(
	`jv_obje˘_£t
(
	`jv_obje˘
(),(k1),(v1)))

	)

162 
	#JV_OBJECT_3
(
k1
,
v1
,
k2
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_2
((k1),(v1)),(k2),
	`jv_nuŒ
()))

	)

163 
	#JV_OBJECT_4
(
k1
,
v1
,
k2
,
v2
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_2
((k1),(v1)),(k2),(v2)))

	)

164 
	#JV_OBJECT_5
(
k1
,
v1
,
k2
,
v2
,
k3
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_4
((k1),(v1),(k2),(v2)),(k3),
	`jv_nuŒ
()))

	)

165 
	#JV_OBJECT_6
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_4
((k1),(v1),(k2),(v2)),(k3),(v3)))

	)

166 
	#JV_OBJECT_7
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_6
((k1),(v1),(k2),(v2),(k3),(v3)),(k4),
	`jv_nuŒ
()))

	)

167 
	#JV_OBJECT_8
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
Ë(
	`jv_obje˘_£t
(
	`JV_OBJECT_6
((k1),(v1),(k2),(v2),(k3),(v3)),(k4),(v4)))

	)

168 
	#JV_OBJECT_9
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
) \

169 (
	`jv_obje˘_£t
(
	`JV_OBJECT_8
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
)),(
k5
),
	`jv_nuŒ
()))

	)

170 
	#JV_OBJECT_10
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
) \

171 (
	`jv_obje˘_£t
(
	`JV_OBJECT_8
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
)),(
k5
),(
v5
)))

	)

172 
	#JV_OBJECT_11
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
) \

173 (
	`jv_obje˘_£t
(
	`JV_OBJECT_10
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
)),(
k6
),
	`jv_nuŒ
()))

	)

174 
	#JV_OBJECT_12
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
) \

175 (
	`jv_obje˘_£t
(
	`JV_OBJECT_10
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
)),(
k6
),(
v6
)))

	)

176 
	#JV_OBJECT_13
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
) \

177 (
	`jv_obje˘_£t
(
	`JV_OBJECT_12
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
)),(
k7
),
	`jv_nuŒ
()))

	)

178 
	#JV_OBJECT_14
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
,
v7
) \

179 (
	`jv_obje˘_£t
(
	`JV_OBJECT_12
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
)),(
k7
),(
v7
)))

	)

180 
	#JV_OBJECT_15
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
,
v7
,
k8
) \

181 (
	`jv_obje˘_£t
(
	`JV_OBJECT_14
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
),(
k7
),(
v7
)),(
k8
),
	`jv_nuŒ
()))

	)

182 
	#JV_OBJECT_16
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
,
v7
,
k8
,
v8
) \

183 (
	`jv_obje˘_£t
(
	`JV_OBJECT_14
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
),(
k7
),(
v7
)),(
k8
),(
v8
)))

	)

184 
	#JV_OBJECT_17
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
,
v7
,
k8
,
v8
,
k9
) \

185 (
	`jv_obje˘_£t
(
	`JV_OBJECT_16
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
),(
k7
),(
v7
),(
k8
),(
v8
)),(
k9
),
	`jv_nuŒ
()))

	)

186 
	#JV_OBJECT_18
(
k1
,
v1
,
k2
,
v2
,
k3
,
v3
,
k4
,
v4
,
k5
,
v5
,
k6
,
v6
,
k7
,
v7
,
k8
,
v8
,
k9
,
v9
) \

187 (
	`jv_obje˘_£t
(
	`JV_OBJECT_16
((
k1
),(
v1
),(
k2
),(
v2
),(
k3
),(
v3
),(
k4
),(
v4
),(
k5
),(
v5
),(
k6
),(
v6
),(
k7
),(
v7
),(
k8
),(
v8
)),(
k9
),(
v9
)))

	)

188 
	#JV_OBJECT_IDX
(
_1
,
_2
,
_3
,
_4
,
_5
,
_6
,
_7
,
_8
,
_9
,
_10
,
_11
,
_12
,
_13
,
_14
,
_15
,
_16
,
_17
,
_18
,
NAME
,...Ë
	)
NAME

189 
	#JV_OBJECT
(...) \

190 
	`JV_OBJECT_IDX
(
__VA_ARGS__
, \

191 
JV_OBJECT_18
, 
JV_OBJECT_17
, 
JV_OBJECT_16
, 
JV_OBJECT_15
, \

192 
JV_OBJECT_14
, 
JV_OBJECT_13
, 
JV_OBJECT_12
, 
JV_OBJECT_11
, \

193 
JV_OBJECT_10
, 
JV_OBJECT_9
, 
JV_OBJECT_8
, 
JV_OBJECT_7
, \

194 
JV_OBJECT_6
, 
JV_OBJECT_5
, 
JV_OBJECT_4
, 
JV_OBJECT_3
, \

195 
JV_OBJECT_2
, 
JV_OBJECT_1
)(
__VA_ARGS__
)

	)

199 
	`jv_gë_ªf˙t
(
jv
);

201 
	ejv_¥öt_Êags
 {

202 
JV_PRINT_PRETTY
 = 1,

203 
JV_PRINT_ASCII
 = 2,

204 
JV_PRINT_COLOR
 = 4, 
JV_PRINT_COLOUR
 = 4,

205 
JV_PRINT_SORTED
 = 8,

206 
JV_PRINT_INVALID
 = 16,

207 
JV_PRINT_REFCOUNT
 = 32,

208 
JV_PRINT_TAB
 = 64,

209 
JV_PRINT_ISATTY
 = 128,

210 
JV_PRINT_SPACE0
 = 256,

211 
JV_PRINT_SPACE1
 = 512,

212 
JV_PRINT_SPACE2
 = 1024,

214 
	#JV_PRINT_INDENT_FLAGS
(
n
) \

215 ((
n
Ë< 0 || (nË> 7 ? 
JV_PRINT_TAB
 | 
JV_PRINT_PRETTY
 : (nË=0 ? 0 : (nË<< 8 | JV_PRINT_PRETTY)

	)

216 
	`jv_dumpf
(
jv
, 
FILE
 *
f
, 
Êags
);

217 
	`jv_dump
(
jv
, 
Êags
);

218 
	`jv_show
(
jv
, 
Êags
);

219 
jv
 
	`jv_dump_°rög
(jv, 
Êags
);

220 *
	`jv_dump_°rög_åunc
(
jv
 
x
, *
outbuf
, 
size_t
 
bufsize
);

223 
JV_PARSE_SEQ
 = 1,

224 
JV_PARSE_STREAMING
 = 2,

225 
JV_PARSE_STREAM_ERRORS
 = 4,

228 
jv
 
	`jv_∑r£
(c⁄° * 
°rög
);

229 
jv
 
	`jv_∑r£_sized
(c⁄° * 
°rög
, 
Àngth
);

231 (*
	tjv_nomem_h™dÀr_f
)(*);

232 
	`jv_nomem_h™dÀr
(
jv_nomem_h™dÀr_f
, *);

234 
jv
 
	`jv_lﬂd_fûe
(const *, );

236 
jv_∑r£r
 
	tjv_∑r£r
;

237 
jv_∑r£r
* 
	`jv_∑r£r_√w
();

238 
	`jv_∑r£r_£t_buf
(
jv_∑r£r
*, const *, , );

239 
	`jv_∑r£r_ªmaöög
(
jv_∑r£r
*);

240 
jv
 
	`jv_∑r£r_√xt
(
jv_∑r£r
*);

241 
	`jv_∑r£r_‰ì
(
jv_∑r£r
*);

243 
jv
 
	`jv_gë
(jv, jv);

244 
jv
 
	`jv_£t
(jv, jv, jv);

245 
jv
 
	`jv_has
(jv, jv);

246 
jv
 
	`jv_£ç©h
(jv, jv, jv);

247 
jv
 
	`jv_gë∑th
(jv, jv);

248 
jv
 
	`jv_dñ∑ths
(jv, jv);

249 
jv
 
	`jv_keys
(jv );

250 
jv
 
	`jv_keys_uns‹ãd
(jv );

251 
	`jv_cmp
(
jv
, jv);

252 
jv
 
	`jv_group
(jv, jv);

253 
jv
 
	`jv_s‹t
(jv, jv);

	@src/jv_alloc.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

3 
	~<°rög.h
>

4 
	~"jv_Æloc.h
"

6 
	snomem_h™dÀr
 {

7 
jv_nomem_h™dÀr_f
 
	mh™dÀr
;

8 *
	md©a
;

11 #i‡!
deföed
(
HAVE_PTHREAD_KEY_CREATE
) || \

12 !
deföed
(
HAVE_PTHREAD_ONCE
) || \

13 !
	$deföed
(
HAVE_ATEXIT
)

17 #ifde‡
_MSC_VER


19 
	$__de˛•ec
(
thªad
Ë
nomem_h™dÀr
Çomem_handler;

20 
	#USE_TLS


	)

22 #ifde‡
HAVE___THREAD


24 
__thªad
 
nomem_h™dÀr
Çomem_handler;

25 
	#USE_TLS


	)

31 #ifde‡
USE_TLS


32 
	$jv_nomem_h™dÀr
(
jv_nomem_h™dÀr_f
 
h™dÀr
, *
d©a
) {

33 
nomem_h™dÀr
.
h™dÀr
 = handler;

34 
	}
}

36 
	$mem‹y_exhau°ed
() {

37 i‡(
nomem_h™dÀr
.
h™dÀr
)

38 
nomem_h™dÀr
.
	`h™dÀr
“omem_h™dÀr.
d©a
);

40 
	`Ârötf
(
°dîr
, "jq:Érror: cannotállocate memory\n");

41 
	`ab‹t
();

42 
	}
}

45 #ifde‡
HAVE_PTHREAD_KEY_CREATE


46 
	~<±hªad.h
>

48 
±hªad_key_t
 
	gnomem_h™dÀr_key
;

49 
±hªad_⁄˚_t
 
	gmem_⁄˚
 = 
PTHREAD_ONCE_INIT
;

51 
	$tsd_föi
() {

52 
nomem_h™dÀr
 *nomem_handler;

53 
nomem_h™dÀr
 = 
	`±hªad_gë•ecific
(
nomem_h™dÀr_key
);

54 i‡(
nomem_h™dÀr
) {

55 (Ë
	`±hªad_£t•ecific
(
nomem_h™dÀr_key
, 
NULL
);

56 
	`‰ì
(
nomem_h™dÀr
);

58 
	}
}

60 
	$tsd_öô
() {

61 i‡(
	`±hªad_key_¸óã
(&
nomem_h™dÀr_key
, 
NULL
) != 0) {

62 
	`Ârötf
(
°dîr
, "jq:Érror: cannot createÅhread specific key");

63 
	`ab‹t
();

65 i‡(
	`©exô
(
tsd_föi
) != 0) {

66 
	`Ârötf
(
°dîr
, "jq:Érror: cannot setánÉxit handler");

67 
	`ab‹t
();

69 
nomem_h™dÀr
 *nomem_h™dÀ∏
	`ˇŒoc
(1, (nomem_handler));

70 i‡(
	`±hªad_£t•ecific
(
nomem_h™dÀr_key
, 
nomem_h™dÀr
) != 0) {

71 
	`Ârötf
(
°dîr
, "jq:Érror: cannot setÅhread specific data");

72 
	`ab‹t
();

74 
	}
}

76 
	$jv_nomem_h™dÀr
(
jv_nomem_h™dÀr_f
 
h™dÀr
, *
d©a
) {

77 
	`±hªad_⁄˚
(&
mem_⁄˚
, 
tsd_öô
);

78 
nomem_h™dÀr
 *nomem_handler;

80 
nomem_h™dÀr
 = 
	`±hªad_gë•ecific
(
nomem_h™dÀr_key
);

81 i‡(
nomem_h™dÀr
 =
NULL
) {

82 
	`h™dÀr
(
d©a
);

83 
	`Ârötf
(
°dîr
, "jq:Érror: cannotállocate memory\n");

84 
	`ab‹t
();

86 
nomem_h™dÀr
->
h™dÀr
 = handler;

87 
nomem_h™dÀr
->
d©a
 = data;

88 
	}
}

90 
	$mem‹y_exhau°ed
() {

91 
nomem_h™dÀr
 *nomem_handler;

93 
	`±hªad_⁄˚
(&
mem_⁄˚
, 
tsd_öô
);

94 
nomem_h™dÀr
 = 
	`±hªad_gë•ecific
(
nomem_h™dÀr_key
);

95 i‡(
nomem_h™dÀr
)

96 
nomem_h™dÀr
->
	`h™dÀr
“omem_h™dÀr->
d©a
);

98 
	`Ârötf
(
°dîr
, "jq:Érror: cannotállocate memory\n");

99 
	`ab‹t
();

100 
	}
}

106 
nomem_h™dÀr
 
	gnomem_h™dÀr
;

107 
	$jv_nomem_h™dÀr
(
jv_nomem_h™dÀr_f
 
h™dÀr
, *
d©a
) {

108 
nomem_h™dÀr
.
h™dÀr
 = handler;

109 
nomem_h™dÀr
.
d©a
 = data;

110 
	}
}

112 
	$mem‹y_exhau°ed
() {

113 
	`Ârötf
(
°dîr
, "jq:Érror: cannotállocate memory\n");

114 
	`ab‹t
();

115 
	}
}

121 * 
	$jv_mem_Æloc
(
size_t
 
sz
) {

122 * 
p
 = 
	`mÆloc
(
sz
);

123 i‡(!
p
) {

124 
	`mem‹y_exhau°ed
();

126  
p
;

127 
	}
}

129 * 
	$jv_mem_Æloc_ungu¨ded
(
size_t
 
sz
) {

130  
	`mÆloc
(
sz
);

131 
	}
}

133 * 
	$jv_mem_ˇŒoc
(
size_t
 
√mb
, size_à
sz
) {

134 * 
p
 = 
	`ˇŒoc
(
√mb
, 
sz
);

135 i‡(!
p
) {

136 
	`mem‹y_exhau°ed
();

138  
p
;

139 
	}
}

141 * 
	$jv_mem_ˇŒoc_ungu¨ded
(
size_t
 
√mb
, size_à
sz
) {

142  
	`ˇŒoc
(
√mb
, 
sz
);

143 
	}
}

145 * 
	$jv_mem_°rdup
(c⁄° *
s
) {

146 *
p
 = 
	`°rdup
(
s
);

147 i‡(!
p
) {

148 
	`mem‹y_exhau°ed
();

150  
p
;

151 
	}
}

153 * 
	$jv_mem_°rdup_ungu¨ded
(c⁄° *
s
) {

154  
	`°rdup
(
s
);

155 
	}
}

157 
	$jv_mem_‰ì
(* 
p
) {

158 
	`‰ì
(
p
);

159 
	}
}

161 * 
	$jv_mem_ªÆloc
(* 
p
, 
size_t
 
sz
) {

162 
p
 = 
	`ªÆloc
’, 
sz
);

163 i‡(!
p
) {

164 
	`mem‹y_exhau°ed
();

166  
p
;

167 
	}
}

169 #i‚de‡
NDEBUG


170 vﬁ©ûê
	gjv_mem_unöôüli£d
;

171 
__©åibuã__
((
c⁄°ru˘‹
)Ë
	$jv_mem_unöô_£tup
(){

173 #i‚de‡
__˛™g_™Æyzî__


174 * 
p
 = 
	`mÆloc
(1);

175 
jv_mem_unöôüli£d
 = *
p
;

176 
	`‰ì
(
p
);

178 
	}
}

	@src/jv_alloc.h

1 #i‚de‡
JV_ALLOC_H


2 
	#JV_ALLOC_H


	)

4 
	~<°ddef.h
>

5 
	~"jv.h
"

7 #i‚de‡
NDEBUG


8 vﬁ©ûê
jv_mem_unöôüli£d
;

11 
	$jv_mem_övÆid©e
(* 
mem
, 
size_t
 
n
) {

12 #i‚de‡
NDEBUG


13 * 
m
 = 
mem
;

14 
n
--Ë*
m
++ ^
jv_mem_unöôüli£d
 ^ jv_mem_uninitialised;

16 
	}
}

18 * 
jv_mem_Æloc
(
size_t
);

19 * 
jv_mem_Æloc_ungu¨ded
(
size_t
);

20 * 
jv_mem_ˇŒoc
(
size_t
, size_t);

21 * 
jv_mem_ˇŒoc_ungu¨ded
(
size_t
, size_t);

22 * 
jv_mem_°rdup
(const *);

23 * 
jv_mem_°rdup_ungu¨ded
(const *);

24 
jv_mem_‰ì
(*);

25 
__©åibuã__
((
w¨n_unu£d_ªsu…
)Ë* 
jv_mem_ªÆloc
(*, 
size_t
);

	@src/jv_aux.c

1 
	~<°rög.h
>

2 
	~<°dlib.h
>

3 
	~<as£π.h
>

4 
	~"jv_Æloc.h
"

5 
	~"jv_ty≥_¥iv©e.h
"

10 
	$jv_numbî_gë_vÆue_™d_c⁄sume
(
jv
 
numbî
) {

11 
vÆue
 = 
	`jv_numbî_vÆue
(
numbî
);

12 
	`jv_‰ì
(
numbî
);

13  
vÆue
;

14 
	}
}

16 
	$∑r£_¶i˚
(
jv
 
j
, jv 
¶i˚
, * 
p°¨t
, * 
≥nd
) {

18 
jv
 
°¨t_jv
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
¶i˚
), 
	`jv_°rög
("start"));

19 
jv
 
íd_jv
 = 
	`jv_obje˘_gë
(
¶i˚
, 
	`jv_°rög
("end"));

20 i‡(
	`jv_gë_köd
(
°¨t_jv
Ë=
JV_KIND_NULL
) {

21 
	`jv_‰ì
(
°¨t_jv
);

22 
°¨t_jv
 = 
	`jv_numbî
(0);

24 
Àn
;

25 i‡(
	`jv_gë_köd
(
j
Ë=
JV_KIND_ARRAY
) {

26 
Àn
 = 
	`jv_¨øy_Àngth
(
j
);

27 } i‡(
	`jv_gë_köd
(
j
Ë=
JV_KIND_STRING
) {

28 
Àn
 = 
	`jv_°rög_Àngth_codïoöts
(
j
);

30 
	`jv_‰ì
(
j
);

33 i‡(
	`jv_gë_köd
(
íd_jv
Ë=
JV_KIND_NULL
) {

34 
	`jv_‰ì
(
íd_jv
);

35 
íd_jv
 = 
	`jv_numbî
(
Àn
);

37 i‡(
	`jv_gë_köd
(
°¨t_jv
Ë!
JV_KIND_NUMBER
 ||

38 
	`jv_gë_köd
(
íd_jv
Ë!
JV_KIND_NUMBER
) {

39 
	`jv_‰ì
(
°¨t_jv
);

40 
	`jv_‰ì
(
íd_jv
);

43 
d°¨t
 = 
	`jv_numbî_vÆue
(
°¨t_jv
);

44 
díd
 = 
	`jv_numbî_vÆue
(
íd_jv
);

45 
	`jv_‰ì
(
°¨t_jv
);

46 
	`jv_‰ì
(
íd_jv
);

47 i‡(
d°¨t
 < 0Ëd°¨à+
Àn
;

48 i‡(
díd
 < 0Ëdíd +
Àn
;

49 i‡(
d°¨t
 < 0) dstart = 0;

50 i‡(
d°¨t
 > 
Àn
) dstart =Üen;

52 
°¨t
 = ()
d°¨t
;

53 
íd
 = (
díd
 > 
Àn
) ?Üen : ()dend;

55 if(
íd
 < 
díd
)Énd += 1;

57 i‡(
íd
 > 
Àn
)Énd =Üen;

58 i‡(
íd
 < 
°¨t
)Énd = start;

59 
	`as£π
(0 <
°¨t
 && sèπ <
íd
 &&Énd <
Àn
);

60 *
p°¨t
 = 
°¨t
;

61 *
≥nd
 = 
íd
;

64 
	}
}

66 
jv
 
	$jv_gë
(
jv
 
t
, jv 
k
) {

67 
jv
 
v
;

68 i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_OBJECT
 && jv_gë_köd(
k
Ë=
JV_KIND_STRING
) {

69 
v
 = 
	`jv_obje˘_gë
(
t
, 
k
);

70 i‡(!
	`jv_is_vÆid
(
v
)) {

71 
	`jv_‰ì
(
v
);

72 
v
 = 
	`jv_nuŒ
();

74 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 && jv_gë_köd(
k
Ë=
JV_KIND_NUMBER
) {

75 if(
	`jv_is_öãgî
(
k
)){

76 
idx
 = ()
	`jv_numbî_vÆue
(
k
);

77 i‡(
idx
 < 0)

78 
idx
 +
	`jv_¨øy_Àngth
(
	`jv_c›y
(
t
));

79 
v
 = 
	`jv_¨øy_gë
(
t
, 
idx
);

80 i‡(!
	`jv_is_vÆid
(
v
)) {

81 
	`jv_‰ì
(
v
);

82 
v
 = 
	`jv_nuŒ
();

84 
	`jv_‰ì
(
k
);

86 
	`jv_‰ì
(
t
);

87 
	`jv_‰ì
(
k
);

88 
v
 = 
	`jv_nuŒ
();

90 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 && jv_gë_köd(
k
Ë=
JV_KIND_OBJECT
) {

91 
°¨t
, 
íd
;

92 i‡(
	`∑r£_¶i˚
(
	`jv_c›y
(
t
), 
k
, &
°¨t
, &
íd
)) {

93 
v
 = 
	`jv_¨øy_¶i˚
(
t
, 
°¨t
, 
íd
);

95 
	`jv_‰ì
(
t
);

96 
v
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("StartándÉnd indices ofánárray slice must beÇumbers"));

98 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_STRING
 && jv_gë_köd(
k
Ë=
JV_KIND_OBJECT
) {

99 
°¨t
, 
íd
;

100 i‡(
	`∑r£_¶i˚
(
	`jv_c›y
(
t
), 
k
, &
°¨t
, &
íd
)) {

101 
v
 = 
	`jv_°rög_¶i˚
(
t
, 
°¨t
, 
íd
);

103 
v
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("StartándÉnd indices ofán string slice must beÇumbers"));

104 
	`jv_‰ì
(
t
);

106 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 && jv_gë_köd(
k
) == JV_KIND_ARRAY) {

107 
v
 = 
	`jv_¨øy_ödexes
(
t
, 
k
);

108 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_NULL
 &&

109 (
	`jv_gë_köd
(
k
Ë=
JV_KIND_STRING
 ||

110 
	`jv_gë_köd
(
k
Ë=
JV_KIND_NUMBER
 ||

111 
	`jv_gë_köd
(
k
Ë=
JV_KIND_OBJECT
)) {

112 
	`jv_‰ì
(
t
);

113 
	`jv_‰ì
(
k
);

114 
v
 = 
	`jv_nuŒ
();

121 i‡(
	`jv_gë_köd
(
k
Ë=
JV_KIND_STRING
 && 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(k)) < 30) {

122 
v
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot index %s with string \"%s\"",

123 
	`jv_köd_«me
(
	`jv_gë_köd
(
t
)),

124 
	`jv_°rög_vÆue
(
k
)));

126 
v
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot index %s with %s",

127 
	`jv_köd_«me
(
	`jv_gë_köd
(
t
)),

128 
	`jv_köd_«me
(
	`jv_gë_köd
(
k
))));

130 
	`jv_‰ì
(
t
);

131 
	`jv_‰ì
(
k
);

133  
v
;

134 
	}
}

136 
jv
 
	$jv_£t
(
jv
 
t
, jv 
k
, jv 
v
) {

137 i‡(!
	`jv_is_vÆid
(
v
)) {

138 
	`jv_‰ì
(
t
);

139 
	`jv_‰ì
(
k
);

140  
v
;

142 
i¢uŒ
 = 
	`jv_gë_köd
(
t
Ë=
JV_KIND_NULL
;

143 i‡(
	`jv_gë_köd
(
k
Ë=
JV_KIND_STRING
 &&

144 (
	`jv_gë_köd
(
t
Ë=
JV_KIND_OBJECT
 || 
i¢uŒ
)) {

145 i‡(
i¢uŒ
Ë
t
 = 
	`jv_obje˘
();

146 
t
 = 
	`jv_obje˘_£t
—, 
k
, 
v
);

147 } i‡(
	`jv_gë_köd
(
k
Ë=
JV_KIND_NUMBER
 &&

148 (
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 || 
i¢uŒ
)) {

149 i‡(
i¢uŒ
Ë
t
 = 
	`jv_¨øy
();

150 
t
 = 
	`jv_¨øy_£t
—, ()
	`jv_numbî_vÆue
(
k
), 
v
);

151 
	`jv_‰ì
(
k
);

152 } i‡(
	`jv_gë_köd
(
k
Ë=
JV_KIND_OBJECT
 &&

153 (
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 || 
i¢uŒ
)) {

154 i‡(
i¢uŒ
Ë
t
 = 
	`jv_¨øy
();

155 
°¨t
, 
íd
;

156 i‡(
	`∑r£_¶i˚
(
	`jv_c›y
(
t
), 
k
, &
°¨t
, &
íd
)) {

157 i‡(
	`jv_gë_köd
(
v
Ë=
JV_KIND_ARRAY
) {

158 
¨øy_Àn
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
t
));

159 
	`as£π
(0 <
°¨t
 && sèπ <
íd
 &&Énd <
¨øy_Àn
);

160 
¶i˚_Àn
 = 
íd
 - 
°¨t
;

161 
ö£π_Àn
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
v
));

162 i‡(
¶i˚_Àn
 < 
ö£π_Àn
) {

164 
shi·
 = 
ö£π_Àn
 - 
¶i˚_Àn
;

165 
i
 = 
¨øy_Àn
 - 1; i >
íd
; i--) {

166 
t
 = 
	`jv_¨øy_£t
—, 
i
 + 
shi·
, 
	`jv_¨øy_gë
(
	`jv_c›y
(t), i));

168 } i‡(
¶i˚_Àn
 > 
ö£π_Àn
) {

170 
shi·
 = 
¶i˚_Àn
 - 
ö£π_Àn
;

171 
i
 = 
íd
; i < 
¨øy_Àn
; i++) {

172 
t
 = 
	`jv_¨øy_£t
—, 
i
 - 
shi·
, 
	`jv_¨øy_gë
(
	`jv_c›y
(t), i));

174 
t
 = 
	`jv_¨øy_¶i˚
—, 0, 
¨øy_Àn
 - 
shi·
);

176 
i
=0; i < 
ö£π_Àn
; i++) {

177 
t
 = 
	`jv_¨øy_£t
—, 
°¨t
 + 
i
, 
	`jv_¨øy_gë
(
	`jv_c›y
(
v
), i));

179 
	`jv_‰ì
(
v
);

181 
	`jv_‰ì
(
t
);

182 
	`jv_‰ì
(
v
);

183 
t
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("A slice ofánárray can only beássignedánotherárray"));

186 
	`jv_‰ì
(
t
);

187 
	`jv_‰ì
(
v
);

188 
t
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("StartándÉnd indices ofánárray slice must beÇumbers"));

191 
jv
 
îr
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot update fieldát %s index of %s",

192 
	`jv_köd_«me
(
	`jv_gë_köd
(
k
)),

193 
	`jv_köd_«me
(
	`jv_gë_köd
(
t
))));

194 
	`jv_‰ì
(
t
);

195 
	`jv_‰ì
(
k
);

196 
	`jv_‰ì
(
v
);

197 
t
 = 
îr
;

199  
t
;

200 
	}
}

202 
jv
 
	$jv_has
(
jv
 
t
, jv 
k
) {

203 
	`as£π
(
	`jv_is_vÆid
(
t
));

204 
	`as£π
(
	`jv_is_vÆid
(
k
));

205 
jv
 
ªt
;

206 i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_NULL
) {

207 
	`jv_‰ì
(
t
);

208 
	`jv_‰ì
(
k
);

209 
ªt
 = 
	`jv_Ál£
();

210 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_OBJECT
 &&

211 
	`jv_gë_köd
(
k
Ë=
JV_KIND_STRING
) {

212 
jv
 
ñem
 = 
	`jv_obje˘_gë
(
t
, 
k
);

213 
ªt
 = 
	`jv_boﬁ
(
	`jv_is_vÆid
(
ñem
));

214 
	`jv_‰ì
(
ñem
);

215 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
 &&

216 
	`jv_gë_köd
(
k
Ë=
JV_KIND_NUMBER
) {

217 
jv
 
ñem
 = 
	`jv_¨øy_gë
(
t
, ()
	`jv_numbî_vÆue
(
k
));

218 
ªt
 = 
	`jv_boﬁ
(
	`jv_is_vÆid
(
ñem
));

219 
	`jv_‰ì
(
k
);

220 
	`jv_‰ì
(
ñem
);

222 
ªt
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot check whether %s hasá %s key",

223 
	`jv_köd_«me
(
	`jv_gë_köd
(
t
)),

224 
	`jv_köd_«me
(
	`jv_gë_köd
(
k
))));

225 
	`jv_‰ì
(
t
);

226 
	`jv_‰ì
(
k
);

228  
ªt
;

229 
	}
}

232 
jv
 
	$jv_dñs
(
jv
 
t
, jv 
keys
) {

233 
	`as£π
(
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
);

234 
	`as£π
(
	`jv_is_vÆid
(
t
));

236 i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_NULL
 || 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
keys
)) == 0) {

238 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_ARRAY
) {

240 
jv
 
√g_keys
 = 
	`jv_¨øy
();

241 
jv
 
n⁄√g_keys
 = 
	`jv_¨øy
();

242 
jv
 
√w_¨øy
 = 
	`jv_¨øy
();

243 
jv
 
°¨ts
 = 
	`jv_¨øy
(), 
íds
 = jv_array();

244 
	`jv_¨øy_f‹óch
(
keys
, 
i
, 
key
) {

245 i‡(
	`jv_gë_köd
(
key
Ë=
JV_KIND_NUMBER
) {

246 i‡(
	`jv_numbî_vÆue
(
key
) < 0) {

247 
√g_keys
 = 
	`jv_¨øy_≠≥nd
“eg_keys, 
key
);

249 
n⁄√g_keys
 = 
	`jv_¨øy_≠≥nd
“⁄√g_keys, 
key
);

251 } i‡(
	`jv_gë_köd
(
key
Ë=
JV_KIND_OBJECT
) {

252 
°¨t
, 
íd
;

253 i‡(
	`∑r£_¶i˚
(
	`jv_c›y
(
t
), 
key
, &
°¨t
, &
íd
)) {

254 
°¨ts
 = 
	`jv_¨øy_≠≥nd
(°¨ts, 
	`jv_numbî
(
°¨t
));

255 
íds
 = 
	`jv_¨øy_≠≥nd
”nds, 
	`jv_numbî
(
íd
));

257 
	`jv_‰ì
(
√w_¨øy
);

258 
	`jv_‰ì
(
key
);

259 
√w_¨øy
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("StartándÉnd indices ofánárray slice must beÇumbers"));

260 
¨r_out
;

263 
	`jv_‰ì
(
√w_¨øy
);

264 
√w_¨øy
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot delete %sÉlement ofárray",

265 
	`jv_köd_«me
(
	`jv_gë_köd
(
key
))));

266 
	`jv_‰ì
(
key
);

267 
¨r_out
;

271 
√g_idx
 = 0;

272 
n⁄√g_idx
 = 0;

273 
Àn
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
t
));

274 
	`jv_¨øy_f‹óch
(
t
, 
i
, 
ñem
) {

275 
dñ
 = 0;

276 
√g_idx
 < 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
√g_keys
))) {

277 
dñidx
 = 
Àn
 + ()
	`jv_numbî_gë_vÆue_™d_c⁄sume
(
	`jv_¨øy_gë
(
	`jv_c›y
(
√g_keys
), 
√g_idx
));

278 i‡(
i
 =
dñidx
) {

279 
dñ
 = 1;

281 i‡(
i
 < 
dñidx
) {

284 
√g_idx
++;

286 
n⁄√g_idx
 < 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
n⁄√g_keys
))) {

287 
dñidx
 = ()
	`jv_numbî_gë_vÆue_™d_c⁄sume
(
	`jv_¨øy_gë
(
	`jv_c›y
(
n⁄√g_keys
), 
n⁄√g_idx
));

288 i‡(
i
 =
dñidx
) {

289 
dñ
 = 1;

291 i‡(
i
 < 
dñidx
) {

294 
n⁄√g_idx
++;

296 
sidx
=0; !
dñ
 && sidx<
	`jv_¨øy_Àngth
(
	`jv_c›y
(
°¨ts
)); sidx++) {

297 i‡(()
	`jv_numbî_gë_vÆue_™d_c⁄sume
(
	`jv_¨øy_gë
(
	`jv_c›y
(
°¨ts
), 
sidx
)Ë<
i
 &&

298 
i
 < ()
	`jv_numbî_gë_vÆue_™d_c⁄sume
(
	`jv_¨øy_gë
(
	`jv_c›y
(
íds
), 
sidx
))) {

299 
dñ
 = 1;

302 i‡(!
dñ
)

303 
√w_¨øy
 = 
	`jv_¨øy_≠≥nd
“ew_¨øy, 
ñem
);

305 
	`jv_‰ì
(
ñem
);

307 
¨r_out
:

308 
	`jv_‰ì
(
√g_keys
);

309 
	`jv_‰ì
(
n⁄√g_keys
);

310 
	`jv_‰ì
(
°¨ts
);

311 
	`jv_‰ì
(
íds
);

312 
	`jv_‰ì
(
t
);

313 
t
 = 
√w_¨øy
;

314 } i‡(
	`jv_gë_köd
(
t
Ë=
JV_KIND_OBJECT
) {

315 
	`jv_¨øy_f‹óch
(
keys
, 
i
, 
k
) {

316 i‡(
	`jv_gë_köd
(
k
Ë!
JV_KIND_STRING
) {

317 
	`jv_‰ì
(
t
);

318 
t
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot delete %s field of object",

319 
	`jv_köd_«me
(
	`jv_gë_köd
(
k
))));

320 
	`jv_‰ì
(
k
);

323 
t
 = 
	`jv_obje˘_dñëe
—, 
k
);

326 
jv
 
îr
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Cannot delete fields from %s",

327 
	`jv_köd_«me
(
	`jv_gë_köd
(
t
))));

328 
	`jv_‰ì
(
t
);

329 
t
 = 
îr
;

331 
	`jv_‰ì
(
keys
);

332  
t
;

333 
	}
}

335 
jv
 
	$jv_£ç©h
(
jv
 
roŸ
, jv 
∑th
, jv 
vÆue
) {

336 i‡(
	`jv_gë_köd
(
∑th
Ë!
JV_KIND_ARRAY
) {

337 
	`jv_‰ì
(
vÆue
);

338 
	`jv_‰ì
(
roŸ
);

339 
	`jv_‰ì
(
∑th
);

340  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Path must be specifiedásánárray"));

342 i‡(!
	`jv_is_vÆid
(
roŸ
)){

343 
	`jv_‰ì
(
vÆue
);

344 
	`jv_‰ì
(
∑th
);

345  
roŸ
;

347 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
∑th
)) == 0) {

348 
	`jv_‰ì
(
∑th
);

349 
	`jv_‰ì
(
roŸ
);

350  
vÆue
;

352 
jv
 
∑thcuº
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
∑th
), 0);

353 
jv
 
∑thª°
 = 
	`jv_¨øy_¶i˚
(
∑th
, 1, 
	`jv_¨øy_Àngth
(
	`jv_c›y
(path)));

360 i‡(
	`jv_gë_köd
(
∑thcuº
Ë=
JV_KIND_OBJECT
) {

362  
	`jv_£t
(
roŸ
, 
∑thcuº
,

363 
	`jv_£ç©h
(
	`jv_gë
(
	`jv_c›y
(
roŸ
), jv_c›y(
∑thcuº
)), 
∑thª°
, 
vÆue
));

366 
jv
 
subroŸ
 = 
	`jv_gë
(
	`jv_c›y
(
roŸ
), jv_c›y(
∑thcuº
));

367 i‡(!
	`jv_is_vÆid
(
subroŸ
)) {

368 
	`jv_‰ì
(
∑thcuº
);

369 
	`jv_‰ì
(
∑thª°
);

370 
	`jv_‰ì
(
vÆue
);

371  
subroŸ
;

376 
roŸ
 = 
	`jv_£t
‘oŸ, 
	`jv_c›y
(
∑thcuº
), 
	`jv_nuŒ
());

377 i‡(!
	`jv_is_vÆid
(
roŸ
)) {

378 
	`jv_‰ì
(
∑thcuº
);

379 
	`jv_‰ì
(
∑thª°
);

380 
	`jv_‰ì
(
vÆue
);

381  
roŸ
;

383  
	`jv_£t
(
roŸ
, 
∑thcuº
, 
	`jv_£ç©h
(
subroŸ
, 
∑thª°
, 
vÆue
));

384 
	}
}

386 
jv
 
	$jv_gë∑th
(
jv
 
roŸ
, jv 
∑th
) {

387 i‡(
	`jv_gë_köd
(
∑th
Ë!
JV_KIND_ARRAY
) {

388 
	`jv_‰ì
(
roŸ
);

389 
	`jv_‰ì
(
∑th
);

390  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Path must be specifiedásánárray"));

392 i‡(!
	`jv_is_vÆid
(
roŸ
)) {

393 
	`jv_‰ì
(
∑th
);

394  
roŸ
;

396 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
∑th
)) == 0) {

397 
	`jv_‰ì
(
∑th
);

398  
roŸ
;

400 
jv
 
∑thcuº
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
∑th
), 0);

401 
jv
 
∑thª°
 = 
	`jv_¨øy_¶i˚
(
∑th
, 1, 
	`jv_¨øy_Àngth
(
	`jv_c›y
(path)));

402  
	`jv_gë∑th
(
	`jv_gë
(
roŸ
, 
∑thcuº
), 
∑thª°
);

403 
	}
}

406 
jv
 
	$dñ∑ths_s‹ãd
(
jv
 
obje˘
, jv 
∑ths
, 
°¨t
) {

407 
jv
 
dñkeys
 = 
	`jv_¨øy
();

408 
i
=0; i<
	`jv_¨øy_Àngth
(
	`jv_c›y
(
∑ths
));) {

409 
j
 = 
i
;

410 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_¨øy_gë
(
	`jv_c›y
(
∑ths
), 
i
)Ë> 
°¨t
);

411 
dñkey
 = 
	`jv_¨øy_Àngth
(
	`jv_¨øy_gë
(
	`jv_c›y
(
∑ths
), 
i
)Ë=
°¨t
 + 1;

412 
jv
 
key
 = 
	`jv_¨øy_gë
(jv_¨øy_gë(
	`jv_c›y
(
∑ths
), 
i
), 
°¨t
);

413 
j
 < 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
∑ths
)) &&

414 
	`jv_equÆ
(
	`jv_c›y
(
key
), 
	`jv_¨øy_gë
(jv_¨øy_gë(jv_c›y(
∑ths
), 
j
), 
°¨t
)))

415 
j
++;

417 i‡(
dñkey
) {

419 
dñkeys
 = 
	`jv_¨øy_≠≥nd
(dñkeys, 
key
);

422 
jv
 
subobje˘
 = 
	`jv_gë
(
	`jv_c›y
(
obje˘
), jv_c›y(
key
));

423 i‡(!
	`jv_is_vÆid
(
subobje˘
)) {

424 
	`jv_‰ì
(
key
);

425 
	`jv_‰ì
(
obje˘
);

426 
obje˘
 = 
subobje˘
;

428 } i‡(
	`jv_gë_köd
(
subobje˘
Ë=
JV_KIND_NULL
) {

429 
	`jv_‰ì
(
key
);

430 
	`jv_‰ì
(
subobje˘
);

432 
jv
 
√wsubobje˘
 = 
	`dñ∑ths_s‹ãd
(
subobje˘
, 
	`jv_¨øy_¶i˚
(
	`jv_c›y
(
∑ths
), 
i
, 
j
), 
°¨t
+1);

433 i‡(!
	`jv_is_vÆid
(
√wsubobje˘
)) {

434 
	`jv_‰ì
(
key
);

435 
	`jv_‰ì
(
obje˘
);

436 
obje˘
 = 
√wsubobje˘
;

439 
obje˘
 = 
	`jv_£t
(obje˘, 
key
, 
√wsubobje˘
);

441 i‡(!
	`jv_is_vÆid
(
obje˘
)) ;

443 
i
 = 
j
;

445 
	`jv_‰ì
(
∑ths
);

446 i‡(
	`jv_is_vÆid
(
obje˘
))

447 
obje˘
 = 
	`jv_dñs
(obje˘, 
dñkeys
);

449 
	`jv_‰ì
(
dñkeys
);

450  
obje˘
;

451 
	}
}

453 
jv
 
	$jv_dñ∑ths
(
jv
 
obje˘
, jv 
∑ths
) {

454 i‡(
	`jv_gë_köd
(
∑ths
Ë!
JV_KIND_ARRAY
) {

455 
	`jv_‰ì
(
obje˘
);

456 
	`jv_‰ì
(
∑ths
);

457  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Paths must be specifiedásánárray"));

459 
∑ths
 = 
	`jv_s‹t
’©hs, 
	`jv_c›y
(paths));

460 
	`jv_¨øy_f‹óch
(
∑ths
, 
i
, 
ñem
) {

461 i‡(
	`jv_gë_köd
(
ñem
Ë!
JV_KIND_ARRAY
) {

462 
	`jv_‰ì
(
obje˘
);

463 
	`jv_‰ì
(
∑ths
);

464 
jv
 
îr
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Path must be specifiedásárray,Çot %s",

465 
	`jv_köd_«me
(
	`jv_gë_köd
(
ñem
))));

466 
	`jv_‰ì
(
ñem
);

467  
îr
;

469 
	`jv_‰ì
(
ñem
);

471 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
∑ths
)) == 0) {

473 
	`jv_‰ì
(
∑ths
);

474  
obje˘
;

476 i‡(
	`jv_¨øy_Àngth
(
	`jv_¨øy_gë
(
	`jv_c›y
(
∑ths
), 0)) == 0) {

478 
	`jv_‰ì
(
∑ths
);

479 
	`jv_‰ì
(
obje˘
);

480  
	`jv_nuŒ
();

482  
	`dñ∑ths_s‹ãd
(
obje˘
, 
∑ths
, 0);

483 
	}
}

486 
	$°rög_cmp
(c⁄° * 
∑
, c⁄° * 
pb
){

487 c⁄° 
jv
* 
a
 = 
∑
;

488 c⁄° 
jv
* 
b
 = 
pb
;

489 
À«
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(*
a
));

490 
Ànb
 = 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(*
b
));

491 
möÀn
 = 
À«
 < 
Ànb
 ?Üena :Üenb;

492 
r
 = 
	`memcmp
(
	`jv_°rög_vÆue
(*
a
), jv_°rög_vÆue(*
b
), 
möÀn
);

493 i‡(
r
 =0Ë∏
À«
 - 
Ànb
;

494  
r
;

495 
	}
}

497 
jv
 
	$jv_keys_uns‹ãd
(
jv
 
x
) {

498 i‡(
	`jv_gë_köd
(
x
Ë!
JV_KIND_OBJECT
)

499  
	`jv_keys
(
x
);

500 
jv
 
™swî
 = 
	`jv_¨øy_sized
(
	`jv_obje˘_Àngth
(
	`jv_c›y
(
x
)));

501 
	`jv_obje˘_f‹óch
(
x
, 
key
, 
vÆue
) {

502 
™swî
 = 
	`jv_¨øy_≠≥nd
◊nswî, 
key
);

503 
	`jv_‰ì
(
vÆue
);

505 
	`jv_‰ì
(
x
);

506  
™swî
;

507 
	}
}

509 
jv
 
	$jv_keys
(
jv
 
x
) {

510 i‡(
	`jv_gë_köd
(
x
Ë=
JV_KIND_OBJECT
) {

511 
nkeys
 = 
	`jv_obje˘_Àngth
(
	`jv_c›y
(
x
));

512 
jv
* 
keys
 = 
	`jv_mem_ˇŒoc
((jv), 
nkeys
);

513 
kidx
 = 0;

514 
	`jv_obje˘_f‹óch
(
x
, 
key
, 
vÆue
) {

515 
keys
[
kidx
++] = 
key
;

516 
	`jv_‰ì
(
vÆue
);

518 
	`qs‹t
(
keys
, 
nkeys
, (
jv
), 
°rög_cmp
);

519 
jv
 
™swî
 = 
	`jv_¨øy_sized
(
nkeys
);

520 
i
 = 0; i<
nkeys
; i++) {

521 
™swî
 = 
	`jv_¨øy_≠≥nd
◊nswî, 
keys
[
i
]);

523 
	`jv_mem_‰ì
(
keys
);

524 
	`jv_‰ì
(
x
);

525  
™swî
;

526 } i‡(
	`jv_gë_köd
(
x
Ë=
JV_KIND_ARRAY
) {

527 
n
 = 
	`jv_¨øy_Àngth
(
x
);

528 
jv
 
™swî
 = 
	`jv_¨øy
();

529 
i
=0; i<
n
; i++){

530 
™swî
 = 
	`jv_¨øy_£t
◊nswî, 
i
, 
	`jv_numbî
(i));

532  
™swî
;

534 
	`as£π
(0 && "jv_keysÖassed somethingÇeither objectÇorárray");

535  
	`jv_övÆid
();

537 
	}
}

539 
	$jv_cmp
(
jv
 
a
, jv 
b
) {

540 i‡(
	`jv_gë_köd
(
a
Ë!jv_gë_köd(
b
)) {

541 
r
 = ()
	`jv_gë_köd
(
a
Ë- ()jv_gë_köd(
b
);

542 
	`jv_‰ì
(
a
);

543 
	`jv_‰ì
(
b
);

544  
r
;

546 
r
 = 0;

547 
	`jv_gë_köd
(
a
)) {

549 
	`as£π
(0 && "invalid kindÖassedÅo jv_cmp");

550 
JV_KIND_NULL
:

551 
JV_KIND_FALSE
:

552 
JV_KIND_TRUE
:

554 
r
 = 0;

557 
JV_KIND_NUMBER
: {

558 i‡(
	`jvp_numbî_is_«n
(
a
)) {

559 
r
 = 
	`jv_cmp
(
	`jv_nuŒ
(), 
	`jv_c›y
(
b
));

560 } i‡(
	`jvp_numbî_is_«n
(
b
)) {

561 
r
 = 
	`jv_cmp
(
	`jv_c›y
(
a
), 
	`jv_nuŒ
());

563 
r
 = 
	`jvp_numbî_cmp
(
a
, 
b
);

568 
JV_KIND_STRING
: {

569 
r
 = 
	`°rög_cmp
(&
a
, &
b
);

573 
JV_KIND_ARRAY
: {

575 
i
 = 0;

576 
r
 == 0) {

577 
a_d⁄e
 = 
i
 >
	`jv_¨øy_Àngth
(
	`jv_c›y
(
a
));

578 
b_d⁄e
 = 
i
 >
	`jv_¨øy_Àngth
(
	`jv_c›y
(
b
));

579 i‡(
a_d⁄e
 || 
b_d⁄e
) {

580 
r
 = 
b_d⁄e
 - 
a_d⁄e
;

583 
jv
 
xa
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
a
), 
i
);

584 
jv
 
xb
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
b
), 
i
);

585 
r
 = 
	`jv_cmp
(
xa
, 
xb
);

586 
i
++;

591 
JV_KIND_OBJECT
: {

592 
jv
 
keys_a
 = 
	`jv_keys
(
	`jv_c›y
(
a
));

593 
jv
 
keys_b
 = 
	`jv_keys
(
	`jv_c›y
(
b
));

594 
r
 = 
	`jv_cmp
(
	`jv_c›y
(
keys_a
), 
keys_b
);

595 i‡(
r
 == 0) {

596 
	`jv_¨øy_f‹óch
(
keys_a
, 
i
, 
key
) {

597 
jv
 
xa
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
a
), jv_c›y(
key
));

598 
jv
 
xb
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
b
), 
key
);

599 
r
 = 
	`jv_cmp
(
xa
, 
xb
);

600 i‡(
r
) ;

603 
	`jv_‰ì
(
keys_a
);

608 
	`jv_‰ì
(
a
);

609 
	`jv_‰ì
(
b
);

610  
r
;

611 
	}
}

614 
	ss‹t_íåy
 {

615 
jv
 
	mobje˘
;

616 
jv
 
	mkey
;

617 
	mödex
;

620 
	$s‹t_cmp
(c⁄° * 
∑
, c⁄° * 
pb
) {

621 c⁄° 
s‹t_íåy
* 
a
 = 
∑
;

622 c⁄° 
s‹t_íåy
* 
b
 = 
pb
;

623 
r
 = 
	`jv_cmp
(
	`jv_c›y
(
a
->
key
), jv_c›y(
b
->key));

625  
r
 ?Ñ : (
a
->
ödex
 - 
b
->index);

626 
	}
}

628 
s‹t_íåy
* 
	$s‹t_ôems
(
jv
 
obje˘s
, jv 
keys
) {

629 
	`as£π
(
	`jv_gë_köd
(
obje˘s
Ë=
JV_KIND_ARRAY
);

630 
	`as£π
(
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
);

631 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
)Ë=jv_¨øy_Àngth(jv_c›y(
keys
)));

632 
n
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
));

633 
s‹t_íåy
* 
íåõs
 = 
	`jv_mem_ˇŒoc
((s‹t_íåy), 
n
);

634 
i
=0; i<
n
; i++) {

635 
íåõs
[
i
].
obje˘
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
obje˘s
), i);

636 
íåõs
[
i
].
key
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
keys
), i);

637 
íåõs
[
i
].
ödex
 = i;

639 
	`jv_‰ì
(
obje˘s
);

640 
	`jv_‰ì
(
keys
);

641 
	`qs‹t
(
íåõs
, 
n
, (
s‹t_íåy
), 
s‹t_cmp
);

642  
íåõs
;

643 
	}
}

645 
jv
 
	$jv_s‹t
(
jv
 
obje˘s
, jv 
keys
) {

646 
	`as£π
(
	`jv_gë_köd
(
obje˘s
Ë=
JV_KIND_ARRAY
);

647 
	`as£π
(
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
);

648 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
)Ë=jv_¨øy_Àngth(jv_c›y(
keys
)));

649 
n
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
));

650 
s‹t_íåy
* 
íåõs
 = 
	`s‹t_ôems
(
obje˘s
, 
keys
);

651 
jv
 
ªt
 = 
	`jv_¨øy
();

652 
i
=0; i<
n
; i++) {

653 
	`jv_‰ì
(
íåõs
[
i
].
key
);

654 
ªt
 = 
	`jv_¨øy_£t
‘ë, 
i
, 
íåõs
[i].
obje˘
);

656 
	`jv_mem_‰ì
(
íåõs
);

657  
ªt
;

658 
	}
}

660 
jv
 
	$jv_group
(
jv
 
obje˘s
, jv 
keys
) {

661 
	`as£π
(
	`jv_gë_köd
(
obje˘s
Ë=
JV_KIND_ARRAY
);

662 
	`as£π
(
	`jv_gë_köd
(
keys
Ë=
JV_KIND_ARRAY
);

663 
	`as£π
(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
)Ë=jv_¨øy_Àngth(jv_c›y(
keys
)));

664 
n
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
obje˘s
));

665 
s‹t_íåy
* 
íåõs
 = 
	`s‹t_ôems
(
obje˘s
, 
keys
);

666 
jv
 
ªt
 = 
	`jv_¨øy
();

667 i‡(
n
 > 0) {

668 
jv
 
cuº_key
 = 
íåõs
[0].
key
;

669 
jv
 
group
 = 
	`jv_¨øy_≠≥nd
(
	`jv_¨øy
(), 
íåõs
[0].
obje˘
);

670 
i
 = 1; i < 
n
; i++) {

671 i‡(
	`jv_equÆ
(
	`jv_c›y
(
cuº_key
), jv_c›y(
íåõs
[
i
].
key
))) {

672 
	`jv_‰ì
(
íåõs
[
i
].
key
);

674 
	`jv_‰ì
(
cuº_key
);

675 
cuº_key
 = 
íåõs
[
i
].
key
;

676 
ªt
 = 
	`jv_¨øy_≠≥nd
‘ë, 
group
);

677 
group
 = 
	`jv_¨øy
();

679 
group
 = 
	`jv_¨øy_≠≥nd
(group, 
íåõs
[
i
].
obje˘
);

681 
	`jv_‰ì
(
cuº_key
);

682 
ªt
 = 
	`jv_¨øy_≠≥nd
‘ë, 
group
);

684 
	`jv_mem_‰ì
(
íåõs
);

685  
ªt
;

686 
	}
}

	@src/jv_dtoa.c

190 
	#NO_ERRNO


	)

191 
	#NO_HEX_FP


	)

192 
	#No_Hex_NaN


	)

193 
	#L⁄g
 

	)

195 
	~"jv_dtﬂ.h
"

197 
	~"jv_Æloc.h
"

198 
	#MALLOC
 
jv_mem_Æloc


	)

199 
	#FREE
 
jv_mem_‰ì


	)

203 #i‚de‡
L⁄g


204 
	#L⁄g
 

	)

206 #i‚de‡
UL⁄g


207 
	tL⁄g
 
	tUL⁄g
;

210 #ifde‡
DEBUG


211 
	~"°dio.h
"

212 
	#Bug
(
x
Ë{
	`Ârötf
(
°dîr
, "%s\n", x); 
	`exô
(1);}

	)

215 
	~"°dlib.h
"

216 
	~"°rög.h
"

218 #ifde‡
USE_LOCALE


219 
	~"loˇÀ.h
"

222 #ifde‡
H⁄‹_FLT_ROUNDS


223 #i‚de‡
Tru°_FLT_ROUNDS


224 
	~<„nv.h
>

228 #ifde‡
MALLOC


229 *
MALLOC
(
size_t
);

231 
	#MALLOC
 
mÆloc


	)

234 #unde‡
IEEE_Arôh


235 #unde‡
Avoid_UndîÊow


236 #ifde‡
IEEE_MC68k


237 
	#IEEE_Arôh


	)

239 #ifde‡
IEEE_8087


240 
	#IEEE_Arôh


	)

243 #ifde‡
IEEE_Arôh


244 #i‚de‡
NO_INFNAN_CHECK


245 #unde‡
INFNAN_CHECK


246 
	#INFNAN_CHECK


	)

249 #unde‡
INFNAN_CHECK


250 
	#NO_STRTOD_BIGCOMP


	)

253 
	~"î∫o.h
"

255 #ifde‡
Bad_Êﬂt_h


257 #ifde‡
IEEE_Arôh


258 
	#DBL_DIG
 15

	)

259 
	#DBL_MAX_10_EXP
 308

	)

260 
	#DBL_MAX_EXP
 1024

	)

261 
	#FLT_RADIX
 2

	)

264 #ifde‡
IBM


265 
	#DBL_DIG
 16

	)

266 
	#DBL_MAX_10_EXP
 75

	)

267 
	#DBL_MAX_EXP
 63

	)

268 
	#FLT_RADIX
 16

	)

269 
	#DBL_MAX
 7.2370055773322621e+75

	)

272 #ifde‡
VAX


273 
	#DBL_DIG
 16

	)

274 
	#DBL_MAX_10_EXP
 38

	)

275 
	#DBL_MAX_EXP
 127

	)

276 
	#FLT_RADIX
 2

	)

277 
	#DBL_MAX
 1.7014118346046923e+38

	)

280 #i‚de‡
LONG_MAX


281 
	#LONG_MAX
 2147483647

	)

285 
	~"Êﬂt.h
"

288 #i‚de‡
__MATH_H__


289 
	~"m©h.h
"

292 #ifde‡
__˝lu•lus


296 #i‚de‡
CONST


297 
	#CONST
 c⁄°

	)

300 #i‡
deföed
(
IEEE_8087
Ë+ deföed(
IEEE_MC68k
Ë+ deföed(
VAX
Ë+ deföed(
IBM
) != 1

301 
Exa˘ly
 
⁄e
 
of
 
IEEE_8087
, 
IEEE_MC68k
, 
VAX
, 
‹
 
IBM
 
should
 
be
 
deföed
.

304 uni⁄ { 
d
; 
UL⁄g
 
L
[2]; } 
	tU
;

306 #ifde‡
IEEE_8087


307 
	#w‹d0
(
x
Ë(x)->
L
[1]

	)

308 
	#w‹d1
(
x
Ë(x)->
L
[0]

	)

310 
	#w‹d0
(
x
Ë(x)->
L
[0]

	)

311 
	#w‹d1
(
x
Ë(x)->
L
[1]

	)

313 
	#dvÆ
(
x
Ë(x)->
d


	)

315 #i‚de‡
STRTOD_DIGLIM


316 
	#STRTOD_DIGLIM
 40

	)

319 #ifde‡
DIGLIM_DEBUG


320 
°πod_diglim
;

322 
	#°πod_diglim
 
STRTOD_DIGLIM


	)

329 #i‡
deföed
(
IEEE_8087
Ë+ deföed(
VAX
)

330 
	#St‹eöc
(
a
,
b
,
c
) (((*)a)[1] = ()b, \

331 ((*)
a
)[0] = ()
c
,á++)

	)

333 
	#St‹eöc
(
a
,
b
,
c
) (((*)a)[0] = ()b, \

334 ((*)
a
)[1] = ()
c
,á++)

	)

343 #ifde‡
IEEE_Arôh


344 
	#Exp_shi·
 20

	)

345 
	#Exp_shi·1
 20

	)

346 
	#Exp_msk1
 0x100000

	)

347 
	#Exp_msk11
 0x100000

	)

348 
	#Exp_mask
 0x7ff00000

	)

349 
	#P
 53

	)

350 
	#Nbôs
 53

	)

351 
	#Büs
 1023

	)

352 
	#Emax
 1023

	)

353 
	#Emö
 (-1022)

	)

354 
	#Exp_1
 0x3ff00000

	)

355 
	#Exp_11
 0x3ff00000

	)

356 
	#Ebôs
 11

	)

357 
	#Føc_mask
 0xfffff

	)

358 
	#Føc_mask1
 0xfffff

	)

359 
	#Tí_pmax
 22

	)

360 
	#BÀtch
 0x10

	)

361 
	#Bndry_mask
 0xfffff

	)

362 
	#Bndry_mask1
 0xfffff

	)

363 
	#LSB
 1

	)

364 
	#Sign_bô
 0x80000000

	)

365 
	#Log2P
 1

	)

366 
	#Töy0
 0

	)

367 
	#Töy1
 1

	)

368 
	#Quick_max
 14

	)

369 
	#I¡_max
 14

	)

370 #i‚de‡
NO_IEEE_SˇÀ


371 
	#Avoid_UndîÊow


	)

372 #ifde‡
Flush_Dí‹m


373 #unde‡
Suddí_UndîÊow


377 #i‚de‡
F…_Rounds


378 #ifde‡
FLT_ROUNDS


379 
	#F…_Rounds
 
FLT_ROUNDS


	)

381 
	#F…_Rounds
 1

	)

385 #ifde‡
H⁄‹_FLT_ROUNDS


386 #unde‡
Check_FLT_ROUNDS


387 
	#Check_FLT_ROUNDS


	)

389 
	#Roundög
 
F…_Rounds


	)

393 #unde‡
Check_FLT_ROUNDS


394 #unde‡
H⁄‹_FLT_ROUNDS


395 #unde‡
SET_INEXACT


396 #unde‡
Suddí_UndîÊow


397 
	#Suddí_UndîÊow


	)

398 #ifde‡
IBM


399 #unde‡
F…_Rounds


400 
	#F…_Rounds
 0

	)

401 
	#Exp_shi·
 24

	)

402 
	#Exp_shi·1
 24

	)

403 
	#Exp_msk1
 0x1000000

	)

404 
	#Exp_msk11
 0x1000000

	)

405 
	#Exp_mask
 0x7f000000

	)

406 
	#P
 14

	)

407 
	#Nbôs
 56

	)

408 
	#Büs
 65

	)

409 
	#Emax
 248

	)

410 
	#Emö
 (-260)

	)

411 
	#Exp_1
 0x41000000

	)

412 
	#Exp_11
 0x41000000

	)

413 
	#Ebôs
 8

	)

414 
	#Føc_mask
 0xffffff

	)

415 
	#Føc_mask1
 0xffffff

	)

416 
	#BÀtch
 4

	)

417 
	#Tí_pmax
 22

	)

418 
	#Bndry_mask
 0xefffff

	)

419 
	#Bndry_mask1
 0xffffff

	)

420 
	#LSB
 1

	)

421 
	#Sign_bô
 0x80000000

	)

422 
	#Log2P
 4

	)

423 
	#Töy0
 0x100000

	)

424 
	#Töy1
 0

	)

425 
	#Quick_max
 14

	)

426 
	#I¡_max
 15

	)

428 #unde‡
F…_Rounds


429 
	#F…_Rounds
 1

	)

430 
	#Exp_shi·
 23

	)

431 
	#Exp_shi·1
 7

	)

432 
	#Exp_msk1
 0x80

	)

433 
	#Exp_msk11
 0x800000

	)

434 
	#Exp_mask
 0x7f80

	)

435 
	#P
 56

	)

436 
	#Nbôs
 56

	)

437 
	#Büs
 129

	)

438 
	#Emax
 126

	)

439 
	#Emö
 (-129)

	)

440 
	#Exp_1
 0x40800000

	)

441 
	#Exp_11
 0x4080

	)

442 
	#Ebôs
 8

	)

443 
	#Føc_mask
 0x7fffff

	)

444 
	#Føc_mask1
 0xffff007f

	)

445 
	#Tí_pmax
 24

	)

446 
	#BÀtch
 2

	)

447 
	#Bndry_mask
 0xffff007f

	)

448 
	#Bndry_mask1
 0xffff007f

	)

449 
	#LSB
 0x10000

	)

450 
	#Sign_bô
 0x8000

	)

451 
	#Log2P
 1

	)

452 
	#Töy0
 0x80

	)

453 
	#Töy1
 0

	)

454 
	#Quick_max
 15

	)

455 
	#I¡_max
 15

	)

459 #i‚de‡
IEEE_Arôh


460 
	#ROUND_BIASED


	)

462 #ifde‡
ROUND_BIASED_wôhout_Round_Up


463 #unde‡
ROUND_BIASED


464 
	#ROUND_BIASED


	)

468 #ifde‡
RND_PRODQUOT


469 
	#rounded_¥odu˘
(
a
,
b
Ë®
	`∫d_¥od
◊, b)

	)

470 
	#rounded_quŸõ¡
(
a
,
b
Ë®
	`∫d_quŸ
◊, b)

	)

471 
∫d_¥od
(, ), 
∫d_quŸ
(, );

473 
	#rounded_¥odu˘
(
a
,
b
Ë®*
	)
b

474 
	#rounded_quŸõ¡
(
a
,
b
Ë®/
	)
b

477 
	#Big0
 (
Føc_mask1
 | 
Exp_msk1
*(
DBL_MAX_EXP
+
Büs
-1))

	)

478 
	#Big1
 0xffffffff

	)

480 #i‚de‡
Pack_32


481 
	#Pack_32


	)

484 
BCöfo
 
	tBCöfo
;

486 
	sBCöfo
 { 
	gdp0
, 
	gdp1
, 
	gd∂í
, 
	gdsign
, 
	ge0
, 
	göexa˘
, 
	gnd
, 
	gnd0
, 
	groundög
, 
	gsˇÀ
, 
	guÊchk
; };

488 
	#FFFFFFFF
 0xffffffffUL

	)

490 #ifde‡
NO_LONG_LONG


491 #unde‡
ULL⁄g


492 #ifde‡
Ju°_16


493 #unde‡
Pack_32


501 #i‚de‡
Ll⁄g


502 
	#Ll⁄g
 

	)

504 #i‚de‡
ULL⁄g


505 
	#ULL⁄g
 
Ll⁄g


	)

512 
	sBigöt
 {

513 
Bigöt
 *
	g√xt
;

514 
	gk
, 
	gmaxwds
, 
	gsign
, 
	gwds
;

515 
UL⁄g
 
	gx
[1];

518 
Bigöt
 
	tBigöt
;

521 
jvp_dtﬂ_c⁄ãxt_öô
(
dtﬂ_c⁄ãxt
* 
C
) {

522 
	gi
;

523 
	gi
=0; i<()((
	gC
->
	g‰ìli°
)/(C->freelist[0])); i++) {

524 
	gC
->
	g‰ìli°
[
i
] = 0;

526 
	gC
->
	gp5s
 = 0;

529 
Bigöt
 *

530 
BÆloc
(
dtﬂ_c⁄ãxt
* 
C
, 
k
)

532 
	gx
;

533 
Bigöt
 *
	grv
;

537 i‡(
	gk
 <
Kmax
 && (
rv
 = 
C
->
‰ìli°
[
k
]))

538 
C
->
‰ìli°
[
k
] = 
rv
->
√xt
;

540 
	gx
 = 1 << 
k
;

541 
	grv
 = (
Bigöt
 *)
MALLOC
((BigötË+ (
x
-1)*(
UL⁄g
));

542 
	grv
->
	gk
 = 
k
;

543 
	grv
->
	gmaxwds
 = 
x
;

545 
	grv
->
	gsign
 = 
rv
->
wds
 = 0;

546  
	grv
;

550 
	gB‰ì


551 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	gv
)

553 i‡(
	gv
) {

554 i‡(
	gv
->
	gk
 > 
	gKmax
)

555 #ifde‡
FREE


556 
FREE
((*)
v
);

558 
‰ì
((*)
v
);

561 
	gv
->
	g√xt
 = 
C
->
‰ìli°
[
v
->
k
];

562 
	gC
->
	g‰ìli°
[
v
->
k
] = v;

568 
jvp_dtﬂ_c⁄ãxt_‰ì
(
dtﬂ_c⁄ãxt
* 
C
) {

569 
	gk
;

570 
	gC
->
	gp5s
) {

571 
Bigöt
* 
	gp5
 = 
C
->
p5s
;

572 
	gC
->
	gp5s
 = 
p5
->
√xt
;

573 
B‰ì
(
C
, 
p5
);

575 
	gk
=0; k<()((
	gC
->
	g‰ìli°
)/(C->freelist[0])); k++) {

576 
	gC
->
	g‰ìli°
[
k
]) {

577 
Bigöt
* 
	gv
 = 
C
->
‰ìli°
[
k
];

578 
	gC
->
	g‰ìli°
[
k
] = 
v
->
√xt
;

579 
FREE
(
v
);

585 
	#Bc›y
(
x
,
y
Ë
	`mem˝y
((*)&x->
sign
, (*)&y->sign, \

586 
y
->
wds
*(
L⁄g
Ë+ 2*())

	)

588 
Bigöt
 *

589 
	gmu…add


590 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	gb
, 
	gm
, 
	ga
)

592 
	gi
, 
	gwds
;

593 #ifde‡
ULL⁄g


594 
UL⁄g
 *
	gx
;

595 
ULL⁄g
 
	gˇºy
, 
	gy
;

597 
UL⁄g
 
	gˇºy
, *
	gx
, 
	gy
;

598 #ifde‡
Pack_32


599 
UL⁄g
 
	gxi
, 
	gz
;

602 
Bigöt
 *
	gb1
;

604 
	gwds
 = 
b
->
wds
;

605 
	gx
 = 
b
->
x
;

606 
	gi
 = 0;

607 
	gˇºy
 = 
a
;

609 #ifde‡
ULL⁄g


610 
	gy
 = *
x
 * (
ULL⁄g
)
m
 + 
ˇºy
;

611 
	gˇºy
 = 
y
 >> 32;

612 *
	gx
++ = 
y
 & 
FFFFFFFF
;

614 #ifde‡
Pack_32


615 
	gxi
 = *
x
;

616 
	gy
 = (
xi
 & 0xffffË* 
m
 + 
ˇºy
;

617 
	gz
 = (
xi
 >> 16Ë* 
m
 + (
y
 >> 16);

618 
	gˇºy
 = 
z
 >> 16;

619 *
	gx
++ = (
z
 << 16Ë+ (
y
 & 0xffff);

621 
	gy
 = *
x
 * 
m
 + 
ˇºy
;

622 
	gˇºy
 = 
y
 >> 16;

623 *
	gx
++ = 
y
 & 0xffff;

627 ++
	gi
 < 
	gwds
);

628 i‡(
	gˇºy
) {

629 i‡(
	gwds
 >
b
->
maxwds
) {

630 
b1
 = 
BÆloc
(
C
, 
b
->
k
+1);

631 
Bc›y
(
b1
, 
b
);

632 
B‰ì
(
C
, 
b
);

633 
	gb
 = 
b1
;

635 
	gb
->
	gx
[
wds
++] = 
ˇºy
;

636 
	gb
->
	gwds
 = 
wds
;

638  
	gb
;

641 
Bigöt
 *

642 
	gs2b


643 (
dtﬂ_c⁄ãxt
* 
	gC
, c⁄° *
	gs
, 
	gnd0
, 
	gnd
, 
UL⁄g
 
	gy9
, 
	gd∂í
)

645 
Bigöt
 *
	gb
;

646 
	gi
, 
	gk
;

647 
L⁄g
 
	gx
, 
	gy
;

649 
	gx
 = (
nd
 + 8) / 9;

650 
	gk
 = 0, 
	gy
 = 1; 
	gx
 > y; y <<= 1, k++) ;

651 #ifde‡
Pack_32


652 
	gb
 = 
BÆloc
(
C
, 
k
);

653 
	gb
->
	gx
[0] = 
y9
;

654 
	gb
->
	gwds
 = 1;

656 
	gb
 = 
BÆloc
(
C
, 
k
+1);

657 
	gb
->
	gx
[0] = 
y9
 & 0xffff;

658 
	gb
->
	gwds
 = (
b
->
x
[1] = 
y9
 >> 16) ? 2 : 1;

661 
	gi
 = 9;

662 i‡(9 < 
	gnd0
) {

663 
	gs
 += 9;

664 dÿ
	gb
 = 
mu…add
(
C
, 
b
, 10, *
s
++ - '0');

665 ++
	gi
 < 
	gnd0
);

666 
	gs
 +
d∂í
;

669 
	gs
 +
d∂í
 + 9;

670 ; 
	gi
 < 
	gnd
; i++)

671 
	gb
 = 
mu…add
(
C
, 
b
, 10, *
s
++ - '0');

672  
	gb
;

676 
	ghi0bôs


677 (
dtﬂ_c⁄ãxt
* 
	gC
, 
UL⁄g
 
	gx
)

679 
	gk
 = 0;

681 i‡(!(
	gx
 & 0xffff0000)) {

682 
	gk
 = 16;

683 
	gx
 <<= 16;

685 i‡(!(
	gx
 & 0xff000000)) {

686 
	gk
 += 8;

687 
	gx
 <<= 8;

689 i‡(!(
	gx
 & 0xf0000000)) {

690 
	gk
 += 4;

691 
	gx
 <<= 4;

693 i‡(!(
	gx
 & 0xc0000000)) {

694 
	gk
 += 2;

695 
	gx
 <<= 2;

697 i‡(!(
	gx
 & 0x80000000)) {

698 
	gk
++;

699 i‡(!(
	gx
 & 0x40000000))

702  
	gk
;

706 
	glo0bôs


707 (
dtﬂ_c⁄ãxt
* 
	gC
, 
UL⁄g
 *
	gy
)

709 
	gk
;

710 
UL⁄g
 
	gx
 = *
y
;

712 i‡(
	gx
 & 7) {

713 i‡(
	gx
 & 1)

715 i‡(
	gx
 & 2) {

716 *
	gy
 = 
x
 >> 1;

719 *
	gy
 = 
x
 >> 2;

722 
	gk
 = 0;

723 i‡(!(
	gx
 & 0xffff)) {

724 
	gk
 = 16;

725 
	gx
 >>= 16;

727 i‡(!(
	gx
 & 0xff)) {

728 
	gk
 += 8;

729 
	gx
 >>= 8;

731 i‡(!(
	gx
 & 0xf)) {

732 
	gk
 += 4;

733 
	gx
 >>= 4;

735 i‡(!(
	gx
 & 0x3)) {

736 
	gk
 += 2;

737 
	gx
 >>= 2;

739 i‡(!(
	gx
 & 1)) {

740 
	gk
++;

741 
	gx
 >>= 1;

742 i‡(!
	gx
)

745 *
	gy
 = 
x
;

746  
	gk
;

749 
Bigöt
 *

750 
	gi2b


751 (
dtﬂ_c⁄ãxt
* 
	gC
, 
	gi
)

753 
Bigöt
 *
	gb
;

755 
	gb
 = 
BÆloc
(
C
, 1);

756 
	gb
->
	gx
[0] = 
i
;

757 
	gb
->
	gwds
 = 1;

758  
	gb
;

761 
Bigöt
 *

762 
	gmu…


763 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	ga
, Bigöà*
	gb
)

765 
Bigöt
 *
	gc
;

766 
	gk
, 
	gwa
, 
	gwb
, 
	gwc
;

767 
UL⁄g
 *
	gx
, *
	gxa
, *
	gx´
, *
	gxb
, *
	gxbe
, *
	gxc
, *
	gxc0
;

768 
UL⁄g
 
	gy
;

769 #ifde‡
ULL⁄g


770 
ULL⁄g
 
	gˇºy
, 
	gz
;

772 
UL⁄g
 
	gˇºy
, 
	gz
;

773 #ifde‡
Pack_32


774 
UL⁄g
 
	gz2
;

778 i‡(
	ga
->
	gwds
 < 
	gb
->wds) {

779 
	gc
 = 
a
;

780 
	ga
 = 
b
;

781 
	gb
 = 
c
;

783 
	gk
 = 
a
->
k
;

784 
	gwa
 = 
a
->
wds
;

785 
	gwb
 = 
b
->
wds
;

786 
	gwc
 = 
wa
 + 
wb
;

787 i‡(
	gwc
 > 
	ga
->
	gmaxwds
)

788 
	gk
++;

789 
	gc
 = 
BÆloc
(
C
, 
k
);

790 
	gx
 = 
c
->
x
, 
	gxa
 = x + 
wc
; x < xa; x++)

791 *
	gx
 = 0;

792 
	gxa
 = 
a
->
x
;

793 
	gx´
 = 
xa
 + 
wa
;

794 
	gxb
 = 
b
->
x
;

795 
	gxbe
 = 
xb
 + 
wb
;

796 
	gxc0
 = 
c
->
x
;

797 #ifde‡
ULL⁄g


798 ; 
	gxb
 < 
	gxbe
; 
	gxc0
++) {

799 i‡((
	gy
 = *
xb
++)) {

800 
x
 = 
xa
;

801 
	gxc
 = 
xc0
;

802 
	gˇºy
 = 0;

804 
	gz
 = *
x
++ * (
ULL⁄g
)
y
 + *
xc
 + 
ˇºy
;

805 
	gˇºy
 = 
z
 >> 32;

806 *
	gxc
++ = 
z
 & 
FFFFFFFF
;

808 
	gx
 < 
	gx´
);

809 *
	gxc
 = 
ˇºy
;

813 #ifde‡
Pack_32


814 ; 
	gxb
 < 
	gxbe
; xb++, 
	gxc0
++) {

815 i‡(
	gy
 = *
xb
 & 0xffff) {

816 
x
 = 
xa
;

817 
	gxc
 = 
xc0
;

818 
	gˇºy
 = 0;

820 
	gz
 = (*
x
 & 0xffffË* 
y
 + (*
xc
 & 0xffffË+ 
ˇºy
;

821 
	gˇºy
 = 
z
 >> 16;

822 
	gz2
 = (*
x
++ >> 16Ë* 
y
 + (*
xc
 >> 16Ë+ 
ˇºy
;

823 
	gˇºy
 = 
z2
 >> 16;

824 
St‹eöc
(
xc
, 
z2
, 
z
);

826 
	gx
 < 
	gx´
);

827 *
	gxc
 = 
ˇºy
;

829 i‡(
	gy
 = *
xb
 >> 16) {

830 
x
 = 
xa
;

831 
	gxc
 = 
xc0
;

832 
	gˇºy
 = 0;

833 
	gz2
 = *
xc
;

835 
	gz
 = (*
x
 & 0xffffË* 
y
 + (*
xc
 >> 16Ë+ 
ˇºy
;

836 
	gˇºy
 = 
z
 >> 16;

837 
St‹eöc
(
xc
, 
z
, 
z2
);

838 
	gz2
 = (*
x
++ >> 16Ë* 
y
 + (*
xc
 & 0xffffË+ 
ˇºy
;

839 
	gˇºy
 = 
z2
 >> 16;

841 
	gx
 < 
	gx´
);

842 *
	gxc
 = 
z2
;

846 ; 
	gxb
 < 
	gxbe
; 
	gxc0
++) {

847 i‡(
	gy
 = *
xb
++) {

848 
x
 = 
xa
;

849 
	gxc
 = 
xc0
;

850 
	gˇºy
 = 0;

852 
	gz
 = *
x
++ * 
y
 + *
xc
 + 
ˇºy
;

853 
	gˇºy
 = 
z
 >> 16;

854 *
	gxc
++ = 
z
 & 0xffff;

856 
	gx
 < 
	gx´
);

857 *
	gxc
 = 
ˇºy
;

862 
	gxc0
 = 
c
->
x
, 
	gxc
 = 
xc0
 + 
wc
; 
	gwc
 > 0 && !*--xc; --wc) ;

863 
	gc
->
	gwds
 = 
wc
;

864  
	gc
;

868 
Bigöt
 *

869 
	gpow5mu…


870 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	gb
, 
	gk
)

872 
Bigöt
 *
	gb1
, *
	gp5
, *
	gp51
;

873 
	gi
;

874 c⁄° 
	gp05
[3] = { 5, 25, 125 };

876 i‡((
	gi
 = 
k
 & 3))

877 
b
 = 
mu…add
(
C
, b, 
p05
[
i
-1], 0);

879 i‡(!(
	gk
 >>= 2))

880  
b
;

881 i‡(!(
	gp5
 = 
C
->
p5s
)) {

883 
p5
 = 
C
->
p5s
 = 
i2b
(C, 625);

884 
	gp5
->
	g√xt
 = 0;

887 i‡(
	gk
 & 1) {

888 
	gb1
 = 
mu…
(
C
, 
b
, 
p5
);

889 
B‰ì
(
C
, 
b
);

890 
	gb
 = 
b1
;

892 i‡(!(
	gk
 >>= 1))

894 i‡(!(
	gp51
 = 
p5
->
√xt
)) {

895 
p51
 = 
p5
->
√xt
 = 
mu…
(
C
,Ö5,p5);

896 
	gp51
->
	g√xt
 = 0;

898 
	gp5
 = 
p51
;

900  
	gb
;

903 
Bigöt
 *

904 
	glshi·


905 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	gb
, 
	gk
)

907 
	gi
, 
	gk1
, 
	gn
, 
	gn1
;

908 
Bigöt
 *
	gb1
;

909 
UL⁄g
 *
	gx
, *
	gx1
, *
	gxe
, 
	gz
;

911 #ifde‡
Pack_32


912 
	gn
 = 
k
 >> 5;

914 
	gn
 = 
k
 >> 4;

916 
	gk1
 = 
b
->
k
;

917 
	gn1
 = 
n
 + 
b
->
wds
 + 1;

918 
	gi
 = 
b
->
maxwds
; 
	gn1
 > i; i <<= 1)

919 
k1
++;

920 
	gb1
 = 
BÆloc
(
C
, 
k1
);

921 
	gx1
 = 
b1
->
x
;

922 
	gi
 = 0; i < 
	gn
; i++)

923 *
	gx1
++ = 0;

924 
	gx
 = 
b
->
x
;

925 
	gxe
 = 
x
 + 
b
->
wds
;

926 #ifde‡
Pack_32


927 i‡(
	gk
 &= 0x1f) {

928 
k1
 = 32 - 
k
;

929 
	gz
 = 0;

931 *
	gx1
++ = *
x
 << 
k
 | 
z
;

932 
	gz
 = *
x
++ >> 
k1
;

934 
	gx
 < 
	gxe
);

935 i‡((*
	gx1
 = 
z
))

936 ++
n1
;

939 i‡(
	gk
 &= 0xf) {

940 
k1
 = 16 - 
k
;

941 
	gz
 = 0;

943 *
	gx1
++ = *
x
 << 
k
 & 0xfff‡| 
z
;

944 
	gz
 = *
x
++ >> 
k1
;

946 
	gx
 < 
	gxe
);

947 i‡(*
	gx1
 = 
z
)

948 ++
n1
;

952 *
	gx1
++ = *
x
++;

953 
	gx
 < 
	gxe
);

954 
	gb1
->
	gwds
 = 
n1
 - 1;

955 
B‰ì
(
C
, 
b
);

956  
	gb1
;

960 
	gcmp


961 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	ga
, Bigöà*
	gb
)

963 
UL⁄g
 *
	gxa
, *
	gxa0
, *
	gxb
, *
	gxb0
;

964 
	gi
, 
	gj
;

966 
	gi
 = 
a
->
wds
;

967 
	gj
 = 
b
->
wds
;

968 #ifde‡
DEBUG


969 i‡(
	gi
 > 1 && !
	ga
->
	gx
[
i
-1])

970 
Bug
("cmp called withá->x[a->wds-1] == 0");

971 i‡(
	gj
 > 1 && !
	gb
->
	gx
[
j
-1])

972 
Bug
("cmp called with b->x[b->wds-1] == 0");

974 i‡(
	gi
 -
j
)

975  
i
;

976 
	gxa0
 = 
a
->
x
;

977 
	gxa
 = 
xa0
 + 
j
;

978 
	gxb0
 = 
b
->
x
;

979 
	gxb
 = 
xb0
 + 
j
;

981 i‡(*--
	gxa
 !*--
xb
)

982  *
xa
 < *
xb
 ? -1 : 1;

983 i‡(
	gxa
 <
xa0
)

989 
Bigöt
 *

990 
	gdiff


991 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	ga
, Bigöà*
	gb
)

993 
Bigöt
 *
	gc
;

994 
	gi
, 
	gwa
, 
	gwb
;

995 
UL⁄g
 *
	gxa
, *
	gx´
, *
	gxb
, *
	gxbe
, *
	gxc
;

996 #ifde‡
ULL⁄g


997 
ULL⁄g
 
	gb‹row
, 
	gy
;

999 
UL⁄g
 
	gb‹row
, 
	gy
;

1000 #ifde‡
Pack_32


1001 
UL⁄g
 
	gz
;

1005 
	gi
 = 
cmp
(
C
, 
a
,
b
);

1006 i‡(!
	gi
) {

1007 
	gc
 = 
BÆloc
(
C
, 0);

1008 
	gc
->
	gwds
 = 1;

1009 
	gc
->
	gx
[0] = 0;

1010  
	gc
;

1012 i‡(
	gi
 < 0) {

1013 
	gc
 = 
a
;

1014 
	ga
 = 
b
;

1015 
	gb
 = 
c
;

1016 
	gi
 = 1;

1019 
	gi
 = 0;

1020 
	gc
 = 
BÆloc
(
C
, 
a
->
k
);

1021 
	gc
->
	gsign
 = 
i
;

1022 
	gwa
 = 
a
->
wds
;

1023 
	gxa
 = 
a
->
x
;

1024 
	gx´
 = 
xa
 + 
wa
;

1025 
	gwb
 = 
b
->
wds
;

1026 
	gxb
 = 
b
->
x
;

1027 
	gxbe
 = 
xb
 + 
wb
;

1028 
	gxc
 = 
c
->
x
;

1029 
	gb‹row
 = 0;

1030 #ifde‡
ULL⁄g


1032 
	gy
 = (
ULL⁄g
)*
xa
++ - *
xb
++ - 
b‹row
;

1033 
	gb‹row
 = 
y
 >> 32 & (
UL⁄g
)1;

1034 *
	gxc
++ = 
y
 & 
FFFFFFFF
;

1036 
	gxb
 < 
	gxbe
);

1037 
	gxa
 < 
	gx´
) {

1038 
	gy
 = *
xa
++ - 
b‹row
;

1039 
	gb‹row
 = 
y
 >> 32 & (
UL⁄g
)1;

1040 *
	gxc
++ = 
y
 & 
FFFFFFFF
;

1043 #ifde‡
Pack_32


1045 
	gy
 = (*
xa
 & 0xffffË- (*
xb
 & 0xffffË- 
b‹row
;

1046 
	gb‹row
 = (
y
 & 0x10000) >> 16;

1047 
	gz
 = (*
xa
++ >> 16Ë- (*
xb
++ >> 16Ë- 
b‹row
;

1048 
	gb‹row
 = (
z
 & 0x10000) >> 16;

1049 
St‹eöc
(
xc
, 
z
, 
y
);

1051 
	gxb
 < 
	gxbe
);

1052 
	gxa
 < 
	gx´
) {

1053 
	gy
 = (*
xa
 & 0xffffË- 
b‹row
;

1054 
	gb‹row
 = (
y
 & 0x10000) >> 16;

1055 
	gz
 = (*
xa
++ >> 16Ë- 
b‹row
;

1056 
	gb‹row
 = (
z
 & 0x10000) >> 16;

1057 
St‹eöc
(
xc
, 
z
, 
y
);

1061 
	gy
 = *
xa
++ - *
xb
++ - 
b‹row
;

1062 
	gb‹row
 = (
y
 & 0x10000) >> 16;

1063 *
	gxc
++ = 
y
 & 0xffff;

1065 
	gxb
 < 
	gxbe
);

1066 
	gxa
 < 
	gx´
) {

1067 
	gy
 = *
xa
++ - 
b‹row
;

1068 
	gb‹row
 = (
y
 & 0x10000) >> 16;

1069 *
	gxc
++ = 
y
 & 0xffff;

1073 !*--
	gxc
)

1074 
	gwa
--;

1075 
	gc
->
	gwds
 = 
wa
;

1076  
	gc
;

1080 
	guÕ


1081 (
dtﬂ_c⁄ãxt
* 
	gC
, 
U
 *
	gx
)

1083 
L⁄g
 
	gL
;

1084 
U
 
	gu
;

1086 
	gL
 = (
w‹d0
(
x
Ë& 
Exp_mask
Ë- (
P
-1)*
Exp_msk1
;

1087 #i‚de‡
Avoid_UndîÊow


1088 #i‚de‡
Suddí_UndîÊow


1089 i‡(
	gL
 > 0) {

1092 #ifde‡
IBM


1093 
	gL
 |
Exp_msk1
 >> 4;

1095 
w‹d0
(&
u
Ë
L
;

1096 
w‹d1
(&
u
) = 0;

1097 #i‚de‡
Avoid_UndîÊow


1098 #i‚de‡
Suddí_UndîÊow


1101 
	gL
 = -
L
 >> 
Exp_shi·
;

1102 i‡(
	gL
 < 
	gExp_shi·
) {

1103 
w‹d0
(&
u
Ë0x80000 >> 
L
;

1104 
w‹d1
(&
u
) = 0;

1107 
w‹d0
(&
u
) = 0;

1108 
	gL
 -
Exp_shi·
;

1109 
w‹d1
(&
u
Ë
L
 >= 31 ? 1 : 1 << 31 - L;

1114  
dvÆ
(&
u
);

1118 
	gb2d


1119 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	ga
, *
	ge
)

1121 
UL⁄g
 *
	gxa
, *
	gxa0
, 
	gw
, 
	gy
, 
	gz
;

1122 
	gk
;

1123 
U
 
	gd
;

1124 #ifde‡
VAX


1125 
UL⁄g
 
	gd0
, 
	gd1
;

1127 
	#d0
 
	`w‹d0
(&
d
)

	)

1128 
	#d1
 
	`w‹d1
(&
d
)

	)

1131 
	gxa0
 = 
a
->
x
;

1132 
	gxa
 = 
xa0
 + 
a
->
wds
;

1133 
	gy
 = *--
xa
;

1134 #ifde‡
DEBUG


1135 i‡(!
	gy
Ë
Bug
("zero y in b2d");

1137 
	gk
 = 
hi0bôs
(
C
, 
y
);

1138 *
	ge
 = 32 - 
k
;

1139 #ifde‡
Pack_32


1140 i‡(
	gk
 < 
	gEbôs
) {

1141 
	gd0
 = 
Exp_1
 | 
y
 >> (
Ebôs
 - 
k
);

1142 
	gw
 = 
xa
 > 
xa0
 ? *--xa : 0;

1143 
	gd1
 = 
y
 << ((32-
Ebôs
Ë+ 
k
Ë| 
w
 >> (Ebits - k);

1144 
	gªt_d
;

1146 
	gz
 = 
xa
 > 
xa0
 ? *--xa : 0;

1147 i‡(
	gk
 -
Ebôs
) {

1148 
d0
 = 
Exp_1
 | 
y
 << 
k
 | 
z
 >> (32 - k);

1149 
	gy
 = 
xa
 > 
xa0
 ? *--xa : 0;

1150 
	gd1
 = 
z
 << 
k
 | 
y
 >> (32 - k);

1153 
	gd0
 = 
Exp_1
 | 
y
;

1154 
	gd1
 = 
z
;

1157 i‡(
	gk
 < 
	gEbôs
 + 16) {

1158 
	gz
 = 
xa
 > 
xa0
 ? *--xa : 0;

1159 
	gd0
 = 
Exp_1
 | 
y
 << 
k
 - 
Ebôs
 | 
z
 >> Ebits + 16 - k;

1160 
	gw
 = 
xa
 > 
xa0
 ? *--xa : 0;

1161 
	gy
 = 
xa
 > 
xa0
 ? *--xa : 0;

1162 
	gd1
 = 
z
 << 
k
 + 16 - 
Ebôs
 | 
w
 << k - Ebô†| 
y
 >> 16 + Ebits - k;

1163 
	gªt_d
;

1165 
	gz
 = 
xa
 > 
xa0
 ? *--xa : 0;

1166 
	gw
 = 
xa
 > 
xa0
 ? *--xa : 0;

1167 
	gk
 -
Ebôs
 + 16;

1168 
	gd0
 = 
Exp_1
 | 
y
 << 
k
 + 16 | 
z
 << k | 
w
 >> 16 - k;

1169 
	gy
 = 
xa
 > 
xa0
 ? *--xa : 0;

1170 
	gd1
 = 
w
 << 
k
 + 16 | 
y
 << k;

1172 
	gªt_d
:

1173 #ifde‡
VAX


1174 
w‹d0
(&
d
Ë
d0
 >> 16 | d0 << 16;

1175 
w‹d1
(&
d
Ë
d1
 >> 16 | d1 << 16;

1177 #unde‡
d0


1178 #unde‡
d1


1180  
dvÆ
(&
d
);

1183 
Bigöt
 *

1184 
	gd2b


1185 (
dtﬂ_c⁄ãxt
* 
	gC
, 
U
 *
	gd
, *
	ge
, *
	gbôs
)

1187 
Bigöt
 *
	gb
;

1188 
	gde
, 
	gk
;

1189 
UL⁄g
 *
	gx
, 
	gy
, 
	gz
;

1190 #i‚de‡
Suddí_UndîÊow


1191 
	gi
;

1193 #ifde‡
VAX


1194 
UL⁄g
 
	gd0
, 
	gd1
;

1195 
	gd0
 = 
w‹d0
(
d
) >> 16 | word0(d) << 16;

1196 
	gd1
 = 
w‹d1
(
d
) >> 16 | word1(d) << 16;

1198 
	#d0
 
	`w‹d0
(
d
)

	)

1199 
	#d1
 
	`w‹d1
(
d
)

	)

1202 #ifde‡
Pack_32


1203 
	gb
 = 
BÆloc
(
C
, 1);

1205 
	gb
 = 
BÆloc
(
C
, 2);

1207 
	gx
 = 
b
->
x
;

1209 
	gz
 = 
d0
 & 
Føc_mask
;

1210 
	gd0
 &= 0x7fffffff;

1211 #ifde‡
Suddí_UndîÊow


1212 
	gde
 = ()(
d0
 >> 
Exp_shi·
);

1213 #i‚de‡
IBM


1214 
	gz
 |
Exp_msk11
;

1217 i‡((
	gde
 = ()(
d0
 >> 
Exp_shi·
)))

1218 
z
 |
Exp_msk1
;

1220 #ifde‡
Pack_32


1221 i‡((
	gy
 = 
d1
)) {

1222 i‡((
k
 = 
lo0bôs
(
C
, &
y
))) {

1223 
	gx
[0] = 
y
 | 
z
 << (32 - 
k
);

1224 
	gz
 >>
k
;

1227 
	gx
[0] = 
y
;

1228 #i‚de‡
Suddí_UndîÊow


1229 
	gi
 =

1231 
b
->
wds
 = (
x
[1] = 
z
) ? 2 : 1;

1234 
	gk
 = 
lo0bôs
(
C
, &
z
);

1235 
	gx
[0] = 
z
;

1236 #i‚de‡
Suddí_UndîÊow


1237 
	gi
 =

1239 
b
->
wds
 = 1;

1240 
	gk
 += 32;

1243 i‡(
	gy
 = 
d1
) {

1244 i‡(
k
 = 
lo0bôs
(
C
, &
y
))

1245 i‡(
	gk
 >= 16) {

1246 
x
[0] = 
y
 | 
z
 << 32 - 
k
 & 0xffff;

1247 
	gx
[1] = 
z
 >> 
k
 - 16 & 0xffff;

1248 
	gx
[2] = 
z
 >> 
k
;

1249 
	gi
 = 2;

1252 
	gx
[0] = 
y
 & 0xffff;

1253 
	gx
[1] = 
y
 >> 16 | 
z
 << 16 - 
k
 & 0xffff;

1254 
	gx
[2] = 
z
 >> 
k
 & 0xffff;

1255 
	gx
[3] = 
z
 >> 
k
+16;

1256 
	gi
 = 3;

1259 
	gx
[0] = 
y
 & 0xffff;

1260 
	gx
[1] = 
y
 >> 16;

1261 
	gx
[2] = 
z
 & 0xffff;

1262 
	gx
[3] = 
z
 >> 16;

1263 
	gi
 = 3;

1267 #ifde‡
DEBUG


1268 i‡(!
	gz
)

1269 
Bug
("ZeroÖassedÅo d2b");

1271 
	gk
 = 
lo0bôs
(
C
, &
z
);

1272 i‡(
	gk
 >= 16) {

1273 
x
[0] = 
z
;

1274 
	gi
 = 0;

1277 
	gx
[0] = 
z
 & 0xffff;

1278 
	gx
[1] = 
z
 >> 16;

1279 
	gi
 = 1;

1281 
	gk
 += 32;

1283 !
	gx
[
i
])

1284 --
	gi
;

1285 
	gb
->
	gwds
 = 
i
 + 1;

1287 #i‚de‡
Suddí_UndîÊow


1288 i‡(
	gde
) {

1290 #ifde‡
IBM


1291 *
	ge
 = (
de
 - 
Büs
 - (
P
-1Ë<< 2Ë+ 
k
;

1292 *
	gbôs
 = 4*
P
 + 8 - 
k
 - 
hi0bôs
(
C
, 
w‹d0
(
d
Ë& 
Føc_mask
);

1294 *
	ge
 = 
de
 - 
Büs
 - (
P
-1Ë+ 
k
;

1295 *
	gbôs
 = 
P
 - 
k
;

1297 #i‚de‡
Suddí_UndîÊow


1300 *
	ge
 = 
de
 - 
Büs
 - (
P
-1Ë+ 1 + 
k
;

1301 #ifde‡
Pack_32


1302 *
	gbôs
 = 32*
i
 - 
hi0bôs
(
C
, 
x
[i-1]);

1304 *
	gbôs
 = (
i
+2)*16 - 
hi0bôs
(
C
, 
x
[i]);

1308  
	gb
;

1310 #unde‡
d0


1311 #unde‡
d1


1314 
	gøtio


1315 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	ga
, Bigöà*
	gb
)

1317 
U
 
	gda
, 
	gdb
;

1318 
	gk
, 
	gka
, 
	gkb
;

1320 
dvÆ
(&
da
Ë
b2d
(
C
, 
a
, &
ka
);

1321 
dvÆ
(&
db
Ë
b2d
(
C
, 
b
, &
kb
);

1322 #ifde‡
Pack_32


1323 
	gk
 = 
ka
 - 
kb
 + 32*(
a
->
wds
 - 
b
->wds);

1325 
	gk
 = 
ka
 - 
kb
 + 16*(
a
->
wds
 - 
b
->wds);

1327 #ifde‡
IBM


1328 i‡(
	gk
 > 0) {

1329 
w‹d0
(&
da
Ë+(
k
 >> 2)*
Exp_msk1
;

1330 i‡(
	gk
 &= 3)

1331 
dvÆ
(&
da
Ë*1 << 
k
;

1334 
	gk
 = -
k
;

1335 
w‹d0
(&
db
Ë+(
k
 >> 2)*
Exp_msk1
;

1336 i‡(
	gk
 &= 3)

1337 
dvÆ
(&
db
Ë*1 << 
k
;

1340 i‡(
	gk
 > 0)

1341 
w‹d0
(&
da
Ë+
k
*
Exp_msk1
;

1343 
	gk
 = -
k
;

1344 
w‹d0
(&
db
Ë+
k
*
Exp_msk1
;

1347  
dvÆ
(&
da
Ë/ dvÆ(&
db
);

1350 
CONST
 

1351 
	gãns
[] = {

1355 #ifde‡
VAX


1360 
CONST
 

1361 #ifde‡
IEEE_Arôh


1362 
	gbigãns
[] = { 1e16, 1e32, 1e64, 1e128, 1e256 };

1363 
CONST
 
	gtöyãns
[] = { 1e-16, 1e-32, 1e-64, 1e-128,

1364 #ifde‡
Avoid_UndîÊow


1373 
	#SˇÀ_Bô
 0x10

	)

1374 
	#n_bigãns
 5

	)

1376 #ifde‡
IBM


1377 
	gbigãns
[] = { 1e16, 1e32, 1e64 };

1378 
CONST
 
	gtöyãns
[] = { 1e-16, 1e-32, 1e-64 };

1379 
	#n_bigãns
 3

	)

1381 
	gbigãns
[] = { 1e16, 1e32 };

1382 
CONST
 
	gtöyãns
[] = { 1e-16, 1e-32 };

1383 
	#n_bigãns
 2

	)

1387 #unde‡
Nìd_Hexdig


1388 #ifde‡
INFNAN_CHECK


1389 #i‚de‡
No_Hex_NaN


1390 
	#Nìd_Hexdig


	)

1394 #i‚de‡
Nìd_Hexdig


1395 #i‚de‡
NO_HEX_FP


1396 
	#Nìd_Hexdig


	)

1400 #ifde‡
Nìd_Hexdig


1401 
	ghexdig
[256];

1404 
htöô
(*
h
, *
s
, 
öc
)

1406 
	gi
, 
	gj
;

1407 
	gi
 = 0; (
	gj
 = 
s
[
i
]) !=0; i++)

1408 
	gh
[
j
] = 
i
 + 
öc
;

1412 
hexdig_öô
()

1414 
	#USC
 (*)

	)

1415 
htöô
(
hexdig
, 
USC
 "0123456789", 0x10);

1416 
htöô
(
hexdig
, 
USC
 "abcdef", 0x10 + 10);

1417 
htöô
(
hexdig
, 
USC
 "ABCDEF", 0x10 + 10);

1421 #ifde‡
INFNAN_CHECK


1423 #i‚de‡
NAN_WORD0


1424 
	#NAN_WORD0
 0x7ff80000

	)

1427 #i‚de‡
NAN_WORD1


1428 
	#NAN_WORD1
 0

	)

1432 
	gm©ch


1433 (
dtﬂ_c⁄ãxt
* 
	gC
, c⁄° **
	g•
, c⁄° *
	gt
)

1435 
	gc
, 
	gd
;

1436 
CONST
 *
	gs
 = *
•
;

1438 (
	gd
 = *
t
++)) {

1439 i‡((
c
 = *++
s
) >= 'A' && c <= 'Z')

1440 
c
 += 'a' - 'A';

1441 i‡(
	gc
 !
d
)

1444 *
	g•
 = 
s
 + 1;

1448 #i‚de‡
No_Hex_NaN


1450 
	ghex«n


1451 (
dtﬂ_c⁄ãxt
* 
	gC
, 
U
 *
	grvp
, c⁄° **
	g•
)

1453 
UL⁄g
 
	gc
, 
	gx
[2];

1454 
CONST
 *
	gs
;

1455 
	gc1
, 
	ghavedig
, 
	gudx0
, 
	gxshi·
;

1457 i‡(!
	ghexdig
['0'])

1458 
hexdig_öô
();

1459 
	gx
[0] = 
x
[1] = 0;

1460 
	ghavedig
 = 
xshi·
 = 0;

1461 
	gudx0
 = 1;

1462 
	gs
 = *
•
;

1464 (
	gc
 = *(
CONST
 *)(
s
+1)Ë&& 
c
 <= ' ')

1465 ++
s
;

1466 i‡(
	gs
[1] ='0' && (
s
[2] == 'x' || s[2] == 'X'))

1467 
s
 += 2;

1468 (
	gc
 = *(
CONST
 *)++
s
)) {

1469 i‡((
c1
 = 
hexdig
[
c
]))

1470 
c
 = 
c1
 & 0xf;

1471 i‡(
	gc
 <= ' ') {

1472 i‡(
udx0
 && 
havedig
) {

1473 
udx0
 = 0;

1474 
	gxshi·
 = 1;

1478 #ifde‡
GDTOA_NON_PEDANTIC_NANCHECK


1479 i‡–
	gc
 =')' && 
havedig
) {

1480 *
•
 = 
s
 + 1;

1488 i‡–
	gc
 == ')') {

1489 *
•
 = 
s
 + 1;

1492 } (
	gc
 = *++
s
));

1496 
	ghavedig
 = 1;

1497 i‡(
	gxshi·
) {

1498 
	gxshi·
 = 0;

1499 
	gx
[0] = 
x
[1];

1500 
	gx
[1] = 0;

1502 i‡(
	gudx0
)

1503 
	gx
[0] = (
x
[0] << 4) | (x[1] >> 28);

1504 
	gx
[1] = (
x
[1] << 4Ë| 
c
;

1506 i‡((
	gx
[0] &0xfffffË|| 
x
[1]) {

1507 
w‹d0
(
rvp
Ë
Exp_mask
 | 
x
[0];

1508 
w‹d1
(
rvp
Ë
x
[1];

1514 #ifde‡
Pack_32


1515 
	#ULbôs
 32

	)

1516 
	#kshi·
 5

	)

1517 
	#kmask
 31

	)

1519 
	#ULbôs
 16

	)

1520 
	#kshi·
 4

	)

1521 
	#kmask
 15

	)

1524 #i‡!
deföed
(
NO_HEX_FP
Ë|| deföed(
H⁄‹_FLT_ROUNDS
)

1525 
Bigöt
 *

1526 
ö¸emít
(
dtﬂ_c⁄ãxt
* 
C
, 
Bigöt
 *
b
)

1528 
UL⁄g
 *
	gx
, *
	gxe
;

1529 
Bigöt
 *
	gb1
;

1531 
	gx
 = 
b
->
x
;

1532 
	gxe
 = 
x
 + 
b
->
wds
;

1534 i‡(*
	gx
 < (
	gUL⁄g
)0xffffffffL) {

1535 ++*
	gx
;

1536  
	gb
;

1538 *
	gx
++ = 0;

1539 } 
	gx
 < 
	gxe
);

1541 i‡(
	gb
->
	gwds
 >
b
->
maxwds
) {

1542 
b1
 = 
BÆloc
(
C
, 
b
->
k
+1);

1543 
Bc›y
(
b1
,
b
);

1544 
B‰ì
(
C
, 
b
);

1545 
	gb
 = 
b1
;

1547 
	gb
->
	gx
[
b
->
wds
++] = 1;

1549  
	gb
;

1554 #i‚de‡
NO_HEX_FP


1557 
rshi·
(
dtﬂ_c⁄ãxt
* 
C
, 
Bigöt
 *
b
, 
k
)

1559 
UL⁄g
 *
	gx
, *
	gx1
, *
	gxe
, 
	gy
;

1560 
	gn
;

1562 
	gx
 = 
x1
 = 
b
->
x
;

1563 
	gn
 = 
k
 >> 
kshi·
;

1564 i‡(
	gn
 < 
	gb
->
	gwds
) {

1565 
	gxe
 = 
x
 + 
b
->
wds
;

1566 
	gx
 +
n
;

1567 i‡(
	gk
 &
kmask
) {

1568 
n
 = 32 - 
k
;

1569 
	gy
 = *
x
++ >> 
k
;

1570 
	gx
 < 
	gxe
) {

1571 *
	gx1
++ = (
y
 | (*
x
 << 
n
)) & 0xffffffff;

1572 
	gy
 = *
x
++ >> 
k
;

1574 i‡((*
	gx1
 = 
y
) !=0)

1575 
x1
++;

1578 
	gx
 < 
	gxe
)

1579 *
	gx1
++ = *
x
++;

1581 i‡((
	gb
->
	gwds
 = 
x1
 - 
b
->
x
) == 0)

1582 
b
->
x
[0] = 0;

1585 
UL⁄g


1586 
™y_⁄
(
Bigöt
 *
b
, 
k
)

1588 
	gn
, 
	gnwds
;

1589 
UL⁄g
 *
	gx
, *
	gx0
, 
	gx1
, 
	gx2
;

1591 
	gx
 = 
b
->
x
;

1592 
	gnwds
 = 
b
->
wds
;

1593 
	gn
 = 
k
 >> 
kshi·
;

1594 i‡(
	gn
 > 
	gnwds
)

1595 
	gn
 = 
nwds
;

1596 i‡(
	gn
 < 
	gnwds
 && (
	gk
 &
kmask
)) {

1597 
x1
 = 
x2
 = 
x
[
n
];

1598 
	gx1
 >>
k
;

1599 
	gx1
 <<
k
;

1600 i‡(
	gx1
 !
x2
)

1603 
	gx0
 = 
x
;

1604 
	gx
 +
n
;

1605 
	gx
 > 
	gx0
)

1606 i‡(*--
	gx
)

1612 
	gRound_zîo
 = 0,

1613 
	gRound_√¨
 = 1,

1614 
	gRound_up
 = 2,

1615 
	gRound_down
 = 3

1619 
gëhex
(
dtﬂ_c⁄ãxt
* 
C
, 
CONST
 **
•
, 
U
 *
rvp
, 
roundög
, 
sign
)

1621 
Bigöt
 *
	gb
;

1622 
CONST
 *
	gde˝t
, *
	gs0
, *
	gs
, *
	gs1
;

1623 
L⁄g
 
	ge
, 
	ge1
;

1624 
UL⁄g
 
	gL
, 
	glo°bôs
, *
	gx
;

1625 
	gbig
, 
	gdí‹m
, 
	gesign
, 
	ghavedig
, 
	gk
, 
	gn
, 
	gnbôs
, 
	gup
, 
	gzªt
;

1626 #ifde‡
IBM


1627 
	gj
;

1630 #ifde‡
IEEE_Arôh


1631 
	gemax
 = 0x7„ - 
Büs
 - 
P
 + 1,

1632 
	gemö
 = 
Emö
 - 
P
 + 1

1634 
emö
 = 
Emö
 - 
P
,

1635 #ifde‡
VAX


1636 
	gemax
 = 0x7f‡- 
Büs
 - 
P
 + 1

1638 #ifde‡
IBM


1639 
emax
 = 0x7‡- 
Büs
 - 
P


1643 #ifde‡
USE_LOCALE


1644 
	gi
;

1645 #ifde‡
NO_LOCALE_CACHE


1646 c⁄° *
	gdecimÆpoöt
 = (*)

1647 
loˇÀc⁄v
()->
decimÆ_poöt
;

1649 c⁄° *
	gdecimÆpoöt
;

1650 *
	gdecimÆpoöt_ˇche
;

1651 i‡(!(
	gs0
 = 
decimÆpoöt_ˇche
)) {

1652 
s0
 = (*)
loˇÀc⁄v
()->
decimÆ_poöt
;

1653 i‡((
	gdecimÆpoöt_ˇche
 = (*)

1654 
MALLOC
(
°æí
((
CONST
 *)
s0
) + 1))) {

1655 
°r˝y
((*)
decimÆpoöt_ˇche
, (
CONST
 *)
s0
);

1656 
	gs0
 = 
decimÆpoöt_ˇche
;

1659 
	gdecimÆpoöt
 = 
s0
;

1663 i‡(!
	ghexdig
['0'])

1664 
hexdig_öô
();

1665 
	ghavedig
 = 0;

1666 
	gs0
 = *(
CONST
 **)
•
 + 2;

1667 
	gs0
[
havedig
] == '0')

1668 
havedig
++;

1669 
	gs0
 +
havedig
;

1670 
	gs
 = 
s0
;

1671 
	gde˝t
 = 0;

1672 
	gzªt
 = 0;

1673 
	ge
 = 0;

1674 i‡(
	ghexdig
[*
s
])

1675 
	ghavedig
++;

1677 
	gzªt
 = 1;

1678 #ifde‡
USE_LOCALE


1679 
	gi
 = 0; 
	gdecimÆpoöt
[
i
]; ++i) {

1680 i‡(
	gs
[
i
] !
decimÆpoöt
[i])

1681 
pcheck
;

1683 
	gde˝t
 = 
s
 +
i
;

1685 i‡(*
	gs
 != '.')

1686 
pcheck
;

1687 
	gde˝t
 = ++
s
;

1689 i‡(!
	ghexdig
[*
s
])

1690 
	gpcheck
;

1691 *
	gs
 == '0')

1692 
s
++;

1693 i‡(
	ghexdig
[*
s
])

1694 
	gzªt
 = 0;

1695 
	ghavedig
 = 1;

1696 
	gs0
 = 
s
;

1698 
	ghexdig
[*
s
])

1699 
	gs
++;

1700 #ifde‡
USE_LOCALE


1701 i‡(*
	gs
 =*
decimÆpoöt
 && !
de˝t
) {

1702 
i
 = 1; 
	gdecimÆpoöt
[i]; ++
	gi
) {

1703 i‡(
	gs
[
i
] !
decimÆpoöt
[i])

1704 
pcheck
;

1706 
	gde˝t
 = 
s
 +
i
;

1708 i‡(*
	gs
 ='.' && !
de˝t
) {

1709 
de˝t
 = ++
s
;

1711 
	ghexdig
[*
s
])

1712 
	gs
++;

1714 i‡(
	gde˝t
)

1715 
	ge
 = -(((
L⁄g
)(
s
-
de˝t
)) << 2);

1716 
	gpcheck
:

1717 
s1
 = 
s
;

1718 
	gbig
 = 
esign
 = 0;

1719 *
	gs
) {

1722 *++
s
) {

1724 
esign
 = 1;

1727 
s
++;

1729 i‡((
	gn
 = 
hexdig
[*
s
]Ë=0 || 
n
 > 0x19) {

1730 
s
 = 
s1
;

1733 
	ge1
 = 
n
 - 0x10;

1734 (
	gn
 = 
hexdig
[*++
s
]Ë!=0 && 
n
 <= 0x19) {

1735 i‡(
e1
 & 0xf8000000)

1736 
big
 = 1;

1737 
	ge1
 = 10*
e1
 + 
n
 - 0x10;

1739 i‡(
	gesign
)

1740 
	ge1
 = -
e1
;

1741 
	ge
 +
e1
;

1743 *
	g•
 = (*)
s
;

1744 i‡(!
	ghavedig
)

1745 *
	g•
 = (*)
s0
 - 1;

1746 i‡(
	gzªt
)

1747 
	gªtz1
;

1748 i‡(
	gbig
) {

1749 i‡(
	gesign
) {

1750 #ifde‡
IEEE_Arôh


1751 
	groundög
) {

1752 
	gRound_up
:

1753 i‡(
sign
)

1755 
	gªt_töy
;

1756 
	gRound_down
:

1757 i‡(!
sign
)

1759 
	gªt_töy
;

1762 
	gªtz
;

1763 #ifde‡
IEEE_Arôh


1764 
	gªt_töy
:

1765 #i‚de‡
NO_ERRNO


1766 
î∫o
 = 
ERANGE
;

1768 
w‹d0
(
rvp
) = 0;

1769 
w‹d1
(
rvp
) = 1;

1773 
	groundög
) {

1774 
	gRound_√¨
:

1775 
ovÊ1
;

1776 
	gRound_up
:

1777 i‡(!
sign
)

1778 
ovÊ1
;

1779 
	gªt_big
;

1780 
	gRound_down
:

1781 i‡(
sign
)

1782 
ovÊ1
;

1783 
	gªt_big
;

1785 
	gªt_big
:

1786 
w‹d0
(
rvp
Ë
Big0
;

1787 
w‹d1
(
rvp
Ë
Big1
;

1790 
	gn
 = 
s1
 - 
s0
 - 1;

1791 
	gk
 = 0; 
	gn
 > (1 << (
	gkshi·
-2)) - 1;Ç >>= 1)

1792 
k
++;

1793 
	gb
 = 
BÆloc
(
C
, 
k
);

1794 
	gx
 = 
b
->
x
;

1795 
	gn
 = 0;

1796 
	gL
 = 0;

1797 #ifde‡
USE_LOCALE


1798 
	gi
 = 0; 
	gdecimÆpoöt
[
i
+1]; ++i);

1800 
	gs1
 > 
	gs0
) {

1801 #ifde‡
USE_LOCALE


1802 i‡(*--
	gs1
 =
decimÆpoöt
[
i
]) {

1803 
s1
 -
i
;

1807 i‡(*--
	gs1
 == '.')

1810 i‡(
	gn
 =
ULbôs
) {

1811 *
x
++ = 
L
;

1812 
	gL
 = 0;

1813 
	gn
 = 0;

1815 
	gL
 |(
hexdig
[*
s1
] & 0x0fË<< 
n
;

1816 
	gn
 += 4;

1818 *
	gx
++ = 
L
;

1819 
	gb
->
	gwds
 = 
n
 = 
x
 - 
b
->x;

1820 
	gn
 = 
ULbôs
*
n
 - 
hi0bôs
(
C
, 
L
);

1821 
	gnbôs
 = 
Nbôs
;

1822 
	glo°bôs
 = 0;

1823 
	gx
 = 
b
->
x
;

1824 i‡(
	gn
 > 
	gnbôs
) {

1825 
	gn
 -
nbôs
;

1826 i‡(
™y_⁄
(
b
,
n
)) {

1827 
	glo°bôs
 = 1;

1828 
	gk
 = 
n
 - 1;

1829 i‡(
	gx
[
k
>>
kshi·
] & 1 << (
	gk
 & 
	gkmask
)) {

1830 
	glo°bôs
 = 2;

1831 i‡(
	gk
 > 0 && 
™y_⁄
(
b
,
k
))

1832 
	glo°bôs
 = 3;

1835 
rshi·
(
C
, 
b
, 
n
);

1836 
	ge
 +
n
;

1838 i‡(
	gn
 < 
	gnbôs
) {

1839 
	gn
 = 
nbôs
 - 
n
;

1840 
	gb
 = 
lshi·
(
C
, 
b
, 
n
);

1841 
	ge
 -
n
;

1842 
	gx
 = 
b
->
x
;

1844 i‡(
	ge
 > 
	gEmax
) {

1845 
	govÊ
:

1846 
B‰ì
(
C
, 
b
);

1847 
	govÊ1
:

1848 #i‚de‡
NO_ERRNO


1849 
î∫o
 = 
ERANGE
;

1851 
w‹d0
(
rvp
Ë
Exp_mask
;

1852 
w‹d1
(
rvp
) = 0;

1855 
	gdí‹m
 = 0;

1856 i‡(
	ge
 < 
	gemö
) {

1857 
	gdí‹m
 = 1;

1858 
	gn
 = 
emö
 - 
e
;

1859 i‡(
	gn
 >
nbôs
) {

1860 #ifde‡
IEEE_Arôh


1861 
roundög
) {

1862 
Round_√¨
:

1863 i‡(
n
 =
nbôs
 && (¿< 2 || 
™y_⁄
(
b
,n-1)))

1864 
	gªt_töy
;

1866 
	gRound_up
:

1867 i‡(!
sign
)

1868 
ªt_töy
;

1870 
	gRound_down
:

1871 i‡(
sign
)

1872 
ªt_töy
;

1875 
B‰ì
(
C
, 
b
);

1876 
	gªtz
:

1877 #i‚de‡
NO_ERRNO


1878 
î∫o
 = 
ERANGE
;

1880 
	gªtz1
:

1881 
rvp
->
d
 = 0.;

1884 
	gk
 = 
n
 - 1;

1885 i‡(
	glo°bôs
)

1886 
	glo°bôs
 = 1;

1887 i‡(
	gk
 > 0)

1888 
	glo°bôs
 = 
™y_⁄
(
b
,
k
);

1889 i‡(
	gx
[
k
>>
kshi·
] & 1 << (
	gk
 & 
	gkmask
))

1890 
	glo°bôs
 |= 2;

1891 
	gnbôs
 -
n
;

1892 
rshi·
(
C
, 
b
,
n
);

1893 
	ge
 = 
emö
;

1895 i‡(
	glo°bôs
) {

1896 
	gup
 = 0;

1897 
	groundög
) {

1898 
	gRound_zîo
:

1900 
	gRound_√¨
:

1901 i‡(
lo°bôs
 & 2

1902 && (
lo°bôs
 & 1Ë| (
x
[0] & 1))

1903 
up
 = 1;

1905 
	gRound_up
:

1906 
up
 = 1 - 
sign
;

1908 
	gRound_down
:

1909 
up
 = 
sign
;

1911 i‡(
	gup
) {

1912 
	gk
 = 
b
->
wds
;

1913 
	gb
 = 
ö¸emít
(
C
, 
b
);

1914 
	gx
 = 
b
->
x
;

1915 i‡(
	gdí‹m
) {

1917 i‡(
	gnbôs
 =
Nbôs
 - 1

1918 && 
x
[
nbôs
 >> 
kshi·
] & 1 << (nbô†& 
kmask
))

1919 
dí‹m
 = 0;

1922 i‡(
	gb
->
	gwds
 > 
	gk


1923 || ((
	gn
 = 
nbôs
 & 
kmask
) !=0

1924 && 
hi0bôs
(
C
, 
x
[
k
-1]Ë< 32-
	gn
)) {

1925 
rshi·
(
C
, 
b
,1);

1926 i‡(++
	ge
 > 
	gEmax
)

1927 
	govÊ
;

1931 #ifde‡
IEEE_Arôh


1932 i‡(
	gdí‹m
)

1933 
w‹d0
(
rvp
Ë
b
->
wds
 > 1 ? b->
x
[1] & ~0x100000 : 0;

1935 
w‹d0
(
rvp
Ë(
b
->
x
[1] & ~0x100000Ë| ((
e
 + 0x3ff + 52) << 20);

1936 
w‹d1
(
rvp
Ë
b
->
x
[0];

1938 #ifde‡
IBM


1939 i‡((
	gj
 = 
e
 & 3)) {

1940 
k
 = 
b
->
x
[0] & ((1 << 
j
) - 1);

1941 
rshi·
(
C
, 
b
,
j
);

1942 i‡(
	gk
) {

1943 
	groundög
) {

1944 
	gRound_up
:

1945 i‡(!
sign
)

1946 
ö¸emít
(
b
);

1948 
	gRound_down
:

1949 i‡(
sign
)

1950 
ö¸emít
(
b
);

1952 
	gRound_√¨
:

1953 
j
 = 1 << (j-1);

1954 i‡(
	gk
 & 
	gj
 && ((k & (j-1)Ë| 
	glo°bôs
))

1955 
ö¸emít
(
b
);

1959 
	ge
 >>= 2;

1960 
w‹d0
(
rvp
Ë
b
->
x
[1] | ((
e
 + 65 + 13) << 24);

1961 
w‹d1
(
rvp
Ë
b
->
x
[0];

1963 #ifde‡
VAX


1967 
w‹d0
(
rvp
Ë((
b
->
x
[1] & ~0x800000Ë>> 16Ë| ((
e
 + 129 + 55) << 7) | (b->x[1] << 16);

1968 
w‹d1
(
rvp
Ë(
b
->
x
[0] >> 16) | (b->x[0] << 16);

1970 
B‰ì
(
C
, 
b
);

1975 
dshi·
(
dtﬂ_c⁄ãxt
* 
C
, 
Bigöt
 *
b
, 
p2
)

1977 
	grv
 = 
hi0bôs
(
C
, 
b
->
x
[b->
wds
-1]) - 4;

1978 i‡(
	gp2
 > 0)

1979 
	grv
 -
p2
;

1980  
	grv
 & 
	gkmask
;

1984 
	gqu‹em


1985 (
dtﬂ_c⁄ãxt
* 
	gC
, 
Bigöt
 *
	gb
, Bigöà*
	gS
)

1987 
	gn
;

1988 
UL⁄g
 *
	gbx
, *
	gbxe
, 
	gq
, *
	gsx
, *
	gsxe
;

1989 #ifde‡
ULL⁄g


1990 
ULL⁄g
 
	gb‹row
, 
	gˇºy
, 
	gy
, 
	gys
;

1992 
UL⁄g
 
	gb‹row
, 
	gˇºy
, 
	gy
, 
	gys
;

1993 #ifde‡
Pack_32


1994 
UL⁄g
 
	gsi
, 
	gz
, 
	gzs
;

1998 
	gn
 = 
S
->
wds
;

1999 #ifde‡
DEBUG


2000  i‡(
	gb
->
	gwds
 > 
	gn
)

2001  
Bug
("oversize b in quorem");

2003 i‡(
	gb
->
	gwds
 < 
	gn
)

2005 
	gsx
 = 
S
->
x
;

2006 
	gsxe
 = 
sx
 + --
n
;

2007 
	gbx
 = 
b
->
x
;

2008 
	gbxe
 = 
bx
 + 
n
;

2009 
	gq
 = *
bxe
 / (*
sxe
 + 1);

2010 #ifde‡
DEBUG


2011 #ifde‡
NO_STRTOD_BIGCOMP


2012  i‡(
	gq
 > 9)

2016  i‡(
	gq
 > 15)

2018  
Bug
("oversized quotient in quorem");

2020 i‡(
	gq
) {

2021 
	gb‹row
 = 0;

2022 
	gˇºy
 = 0;

2024 #ifde‡
ULL⁄g


2025 
	gys
 = *
sx
++ * (
ULL⁄g
)
q
 + 
ˇºy
;

2026 
	gˇºy
 = 
ys
 >> 32;

2027 
	gy
 = *
bx
 - (
ys
 & 
FFFFFFFF
Ë- 
b‹row
;

2028 
	gb‹row
 = 
y
 >> 32 & (
UL⁄g
)1;

2029 *
	gbx
++ = 
y
 & 
FFFFFFFF
;

2031 #ifde‡
Pack_32


2032 
	gsi
 = *
sx
++;

2033 
	gys
 = (
si
 & 0xffffË* 
q
 + 
ˇºy
;

2034 
	gzs
 = (
si
 >> 16Ë* 
q
 + (
ys
 >> 16);

2035 
	gˇºy
 = 
zs
 >> 16;

2036 
	gy
 = (*
bx
 & 0xffffË- (
ys
 & 0xffffË- 
b‹row
;

2037 
	gb‹row
 = (
y
 & 0x10000) >> 16;

2038 
	gz
 = (*
bx
 >> 16Ë- (
zs
 & 0xffffË- 
b‹row
;

2039 
	gb‹row
 = (
z
 & 0x10000) >> 16;

2040 
St‹eöc
(
bx
, 
z
, 
y
);

2042 
	gys
 = *
sx
++ * 
q
 + 
ˇºy
;

2043 
	gˇºy
 = 
ys
 >> 16;

2044 
	gy
 = *
bx
 - (
ys
 & 0xffffË- 
b‹row
;

2045 
	gb‹row
 = (
y
 & 0x10000) >> 16;

2046 *
	gbx
++ = 
y
 & 0xffff;

2050 
	gsx
 <
sxe
);

2051 i‡(!*
	gbxe
) {

2052 
	gbx
 = 
b
->
x
;

2053 --
	gbxe
 > 
	gbx
 && !*bxe)

2054 --
	gn
;

2055 
	gb
->
	gwds
 = 
n
;

2058 i‡(
cmp
(
C
, 
b
, 
S
) >= 0) {

2059 
q
++;

2060 
	gb‹row
 = 0;

2061 
	gˇºy
 = 0;

2062 
	gbx
 = 
b
->
x
;

2063 
	gsx
 = 
S
->
x
;

2065 #ifde‡
ULL⁄g


2066 
	gys
 = *
sx
++ + 
ˇºy
;

2067 
	gˇºy
 = 
ys
 >> 32;

2068 
	gy
 = *
bx
 - (
ys
 & 
FFFFFFFF
Ë- 
b‹row
;

2069 
	gb‹row
 = 
y
 >> 32 & (
UL⁄g
)1;

2070 *
	gbx
++ = 
y
 & 
FFFFFFFF
;

2072 #ifde‡
Pack_32


2073 
	gsi
 = *
sx
++;

2074 
	gys
 = (
si
 & 0xffffË+ 
ˇºy
;

2075 
	gzs
 = (
si
 >> 16Ë+ (
ys
 >> 16);

2076 
	gˇºy
 = 
zs
 >> 16;

2077 
	gy
 = (*
bx
 & 0xffffË- (
ys
 & 0xffffË- 
b‹row
;

2078 
	gb‹row
 = (
y
 & 0x10000) >> 16;

2079 
	gz
 = (*
bx
 >> 16Ë- (
zs
 & 0xffffË- 
b‹row
;

2080 
	gb‹row
 = (
z
 & 0x10000) >> 16;

2081 
St‹eöc
(
bx
, 
z
, 
y
);

2083 
	gys
 = *
sx
++ + 
ˇºy
;

2084 
	gˇºy
 = 
ys
 >> 16;

2085 
	gy
 = *
bx
 - (
ys
 & 0xffffË- 
b‹row
;

2086 
	gb‹row
 = (
y
 & 0x10000) >> 16;

2087 *
	gbx
++ = 
y
 & 0xffff;

2091 
	gsx
 <
sxe
);

2092 
	gbx
 = 
b
->
x
;

2093 
	gbxe
 = 
bx
 + 
n
;

2094 i‡(!*
	gbxe
) {

2095 --
	gbxe
 > 
	gbx
 && !*bxe)

2096 --
	gn
;

2097 
	gb
->
	gwds
 = 
n
;

2100  
	gq
;

2103 #i‡
deföed
(
Avoid_UndîÊow
Ë|| !deföed(
NO_STRTOD_BIGCOMP
)

2105 
	gsuÕ


2106 (
dtﬂ_c⁄ãxt
* 
	gC
, 
U
 *
	gx
, 
BCöfo
 *
	gbc
)

2108 
U
 
	gu
;

2109 
	grv
;

2110 
	gi
;

2112 
	grv
 = 
uÕ
(
C
, 
x
);

2113 i‡(!
	gbc
->
	gsˇÀ
 || (
	gi
 = 2*
P
 + 1 - ((
w‹d0
(
x
Ë& 
Exp_mask
Ë>> 
Exp_shi·
)) <= 0)

2114  
rv
;

2115 
w‹d0
(&
u
Ë
Exp_1
 + (
i
 << 
Exp_shi·
);

2116 
w‹d1
(&
u
) = 0;

2117  
rv
 * 
	gu
.
	gd
;

2121 #i‚de‡
NO_STRTOD_BIGCOMP


2123 
	gbigcomp


2124 (
dtﬂ_c⁄ãxt
* 
	gC
, 
U
 *
	grv
, c⁄° *
	gs0
, 
BCöfo
 *
	gbc
)

2126 
Bigöt
 *
	gb
, *
	gd
;

2127 
	gb2
, 
	gbbôs
, 
	gd2
, 
	gdd
=0, 
	gdig
, 
	gdsign
, 
	gi
, 
	gj
, 
	gnd
, 
	gnd0
, 
	gp2
, 
	gp5
, 
	g•ecˇ£
;

2129 
	gdsign
 = 
bc
->
dsign
;

2130 
	gnd
 = 
bc
->
nd
;

2131 
	gnd0
 = 
bc
->
nd0
;

2132 
	gp5
 = 
nd
 + 
bc
->
e0
 - 1;

2133 
	g•ecˇ£
 = 0;

2134 #i‚de‡
Suddí_UndîÊow


2135 i‡(
	grv
->
	gd
 == 0.) {

2137 
b
 = 
i2b
(
C
, 1);

2138 
	gp2
 = 
Emö
 - 
P
 + 1;

2139 
	gbbôs
 = 1;

2140 #ifde‡
Avoid_UndîÊow


2141 
w‹d0
(
rv
Ë(
P
+2Ë<< 
Exp_shi·
;

2143 
w‹d1
(
rv
) = 1;

2145 
	gi
 = 0;

2146 #ifde‡
H⁄‹_FLT_ROUNDS


2147 i‡(
	gbc
->
	groundög
 == 1)

2150 
•ecˇ£
 = 1;

2151 --
	gp2
;

2152 
	gdsign
 = 0;

2153 
	ghave_i
;

2158 
	gb
 = 
d2b
(
C
, 
rv
, &
p2
, &
bbôs
);

2159 #ifde‡
Avoid_UndîÊow


2160 
	gp2
 -
bc
->
sˇÀ
;

2164 
	gi
 = 
P
 - 
bbôs
;

2165 i‡(
	gi
 > (
	gj
 = 
P
 - 
Emö
 - 1 + 
p2
)) {

2166 #ifde‡
Suddí_UndîÊow


2167 
B‰ì
(
C
, 
b
);

2168 
	gb
 = 
i2b
(
C
, 1);

2169 
	gp2
 = 
Emö
;

2170 
	gi
 = 
P
 - 1;

2171 #ifde‡
Avoid_UndîÊow


2172 
w‹d0
(
rv
Ë(1 + 
bc
->
sˇÀ
Ë<< 
Exp_shi·
;

2174 
w‹d0
(
rv
Ë
Exp_msk1
;

2176 
w‹d1
(
rv
) = 0;

2178 
	gi
 = 
j
;

2181 #ifde‡
H⁄‹_FLT_ROUNDS


2182 i‡(
	gbc
->
	groundög
 != 1) {

2183 i‡(
i
 > 0)

2184 
b
 = 
lshi·
(
C
, b, 
i
);

2185 i‡(
	gdsign
)

2186 
	gb
 = 
ö¸emít
(
b
);

2191 
	gb
 = 
lshi·
(
C
, 
b
, ++
i
);

2192 
	gb
->
	gx
[0] |= 1;

2194 #i‚de‡
Suddí_UndîÊow


2195 
	ghave_i
:

2197 
p2
 -
p5
 + 
i
;

2198 
	gd
 = 
i2b
(
C
, 1);

2202 i‡(
	gp5
 > 0)

2203 
	gd
 = 
pow5mu…
(
C
, 
d
, 
p5
);

2204 i‡(
	gp5
 < 0)

2205 
	gb
 = 
pow5mu…
(
C
, 
b
, -
p5
);

2206 i‡(
	gp2
 > 0) {

2207 
	gb2
 = 
p2
;

2208 
	gd2
 = 0;

2211 
	gb2
 = 0;

2212 
	gd2
 = -
p2
;

2214 
	gi
 = 
dshi·
(
C
, 
d
, 
d2
);

2215 i‡((
	gb2
 +
i
) > 0)

2216 
b
 = 
lshi·
(
C
, b, 
b2
);

2217 i‡((
	gd2
 +
i
) > 0)

2218 
d
 = 
lshi·
(
C
, d, 
d2
);

2223 i‡(!(
	gdig
 = 
qu‹em
(
C
, 
b
,
d
))) {

2224 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

2225 
	gdig
 = 
qu‹em
(
C
, 
b
,
d
);

2230 
	gi
 = 0; i < 
	gnd0
; ) {

2231 i‡((
	gdd
 = 
s0
[
i
++] - '0' - 
dig
))

2232 
ªt
;

2233 i‡(!
	gb
->
	gx
[0] && b->
	gwds
 == 1) {

2234 i‡(
i
 < 
nd
)

2235 
dd
 = 1;

2236 
	gªt
;

2238 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

2239 
	gdig
 = 
qu‹em
(
C
, 
b
,
d
);

2241 
	gj
 = 
bc
->
dp1
; 
	gi
++ < 
	gnd
;) {

2242 i‡((
	gdd
 = 
s0
[
j
++] - '0' - 
dig
))

2243 
ªt
;

2244 i‡(!
	gb
->
	gx
[0] && b->
	gwds
 == 1) {

2245 i‡(
i
 < 
nd
)

2246 
dd
 = 1;

2247 
	gªt
;

2249 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

2250 
	gdig
 = 
qu‹em
(
C
, 
b
,
d
);

2252 i‡(
	gdig
 > 0 || 
	gb
->
	gx
[0] || b->
	gwds
 > 1)

2253 
	gdd
 = -1;

2254 
	gªt
:

2255 
B‰ì
(
C
, 
b
);

2256 
B‰ì
(
C
, 
d
);

2257 #ifde‡
H⁄‹_FLT_ROUNDS


2258 i‡(
	gbc
->
	groundög
 != 1) {

2259 i‡(
dd
 < 0) {

2260 i‡(
bc
->
roundög
 == 0) {

2261 i‡(!
dsign
)

2262 
ªéow1
;

2264 i‡(
	gdsign
)

2265 
	gªthi1
;

2267 i‡(
	gdd
 > 0) {

2268 i‡(
	gbc
->
	groundög
 == 0) {

2269 i‡(
dsign
)

2270 
ªthi1
;

2271 
	gªt1
;

2273 i‡(!
	gdsign
)

2274 
	gªthi1
;

2275 
dvÆ
(
rv
Ë+2.*
suÕ
(
C
,Ñv,
bc
);

2278 
	gbc
->
	göexa˘
 = 0;

2279 i‡(
	gdsign
)

2280 
	gªthi1
;

2285 i‡(
	g•ecˇ£
) {

2286 i‡(
	gdd
 <= 0)

2287 
rv
->
d
 = 0.;

2289 i‡(
	gdd
 < 0) {

2290 i‡(!
	gdsign
)

2291 
	gªéow1
:

2292 
dvÆ
(
rv
Ë-
suÕ
(
C
,Ñv,
bc
);

2294 i‡(
	gdd
 > 0) {

2295 i‡(
	gdsign
) {

2296 
	gªthi1
:

2297 
dvÆ
(
rv
Ë+
suÕ
(
C
,Ñv,
bc
);

2302 i‡((
	gj
 = ((
w‹d0
(
rv
Ë& 
Exp_mask
Ë>> 
Exp_shi·
Ë- 
bc
->
sˇÀ
) <= 0) {

2303 
i
 = 1 - 
j
;

2304 i‡(
	gi
 <= 31) {

2305 i‡(
w‹d1
(
rv
Ë& (0x1 << 
i
))

2306 
odd
;

2308 i‡(
w‹d0
(
rv
Ë& (0x1 << (
	gi
-32)))

2309 
	godd
;

2311 i‡(
w‹d1
(
rv
) & 1) {

2312 
	godd
:

2313 i‡(
dsign
)

2314 
ªthi1
;

2315 
	gªéow1
;

2319 #ifde‡
H⁄‹_FLT_ROUNDS


2320 
	gªt1
:

2327 
	gjvp_°πod


2328 (
dtﬂ_c⁄ãxt
* 
	gC
, c⁄° *
	gs00
, **
	g£
)

2330 
	gbb2
, 
	gbb5
, 
	gbbe
, 
	gbd2
, 
	gbd5
, 
	gbbbôs
, 
	gbs2
, 
	gc
, 
	ge
, 
	ge1
, 
	gã°_sˇÀ
;

2331 
	gesign
, 
	gi
, 
	gj
, 
	gk
, 
	gnd
, 
	gnd0
, 
	gnf
, 
	gnz
, 
	gnz0
, 
	gnz1
, 
	gsign
;

2332 
CONST
 *
	gs
, *
	gs0
, *
	gs1
;

2333 
	gØdj
, 
	gØdj1
;

2334 
L⁄g
 
	gL
;

2335 
U
 
	gØdj2
, 
	gadj
, 
	grv
, 
	grv0
;

2336 
UL⁄g
 
	gy
, 
	gz
;

2337 
BCöfo
 
	gbc
;

2338 
Bigöt
 *
	gbb
=0, *
	gbb1
, *
	gbd
=0, *
	gbd0
, *
	gbs
=0, *
	gdñè
=0;

2339 #ifde‡
Avoid_UndîÊow


2340 
UL⁄g
 
	gLsb
, 
	gLsb1
;

2342 #ifde‡
SET_INEXACT


2343 
	gﬁdöexa˘
;

2345 #i‚de‡
NO_STRTOD_BIGCOMP


2346 
	gªq_bigcomp
 = 0;

2348 #ifde‡
H⁄‹_FLT_ROUNDS


2349 #ifde‡
Tru°_FLT_ROUNDS


2350 
	gbc
.
	groundög
 = 
F…_Rounds
;

2352 
	gbc
.
	groundög
 = 1;

2353 
„gëround
()) {

2354 
	gFE_TOWARDZERO
: 
bc
.
roundög
 = 0; ;

2355 
	gFE_UPWARD
: 
bc
.
roundög
 = 2; ;

2356 
	gFE_DOWNWARD
: 
bc
.
roundög
 = 3;

2360 #ifde‡
USE_LOCALE


2361 
CONST
 *
	gs2
;

2364 
	gsign
 = 
nz0
 = 
nz1
 = 
nz
 = 
bc
.
d∂í
 = bc.
uÊchk
 = 0;

2365 
dvÆ
(&
rv
) = 0.;

2366 
	gs
 = 
s00
;;s++) *s) {

2368 
sign
 = 1;

2371 i‡(*++
s
)

2372 
bªak2
;

2375 
ªt0
;

2384 
bªak2
;

2386 
	gbªak2
:

2387 i‡(*
s
 == '0') {

2388 #i‚de‡
NO_HEX_FP


2389 
s
[1]) {

2392 #ifde‡
H⁄‹_FLT_ROUNDS


2393 
gëhex
(
C
, &
s
, &
rv
, 
bc
.
roundög
, 
sign
);

2395 
gëhex
(
C
, &
s
, &
rv
, 1, 
sign
);

2397 
	gªt
;

2400 
	gnz0
 = 1;

2401 *++
	gs
 == '0') ;

2402 i‡(!*
	gs
)

2403 
	gªt
;

2405 
	gs0
 = 
s
;

2406 
	gy
 = 
z
 = 0;

2407 
	gnd
 = 
nf
 = 0; (
	gc
 = *
s
Ë>'0' && 
c
 <'9';Çd++, 
	gs
++)

2408 i‡(
	gnd
 < 9)

2409 
	gy
 = 10*
y
 + 
c
 - '0';

2410 i‡(
	gnd
 < 16)

2411 
	gz
 = 10*
z
 + 
c
 - '0';

2412 
	gnd0
 = 
nd
;

2413 
	gbc
.
	gdp0
 = 
bc
.
dp1
 = 
s
 - 
s0
;

2414 
	gs1
 = 
s
; s1 > 
	gs0
 && *--s1 == '0'; )

2415 ++
	gnz1
;

2416 #ifde‡
USE_LOCALE


2417 
	gs1
 = 
loˇÀc⁄v
()->
decimÆ_poöt
;

2418 i‡(
	gc
 =*
s1
) {

2419 
c
 = '.';

2420 i‡(*++
	gs1
) {

2421 
	gs2
 = 
s
;

2423 i‡(*++
	gs2
 !*
s1
) {

2424 
c
 = 0;

2427 i‡(!*++
	gs1
) {

2428 
	gs
 = 
s2
;

2435 i‡(
	gc
 == '.') {

2436 
c
 = *++
s
;

2437 
	gbc
.
	gdp1
 = 
s
 - 
s0
;

2438 
	gbc
.
	gd∂í
 = 
bc
.
dp1
 - bc.
dp0
;

2439 i‡(!
	gnd
) {

2440 ; 
	gc
 ='0'; c = *++
s
)

2441 
nz
++;

2442 i‡(
	gc
 > '0' && c <= '9') {

2443 
bc
.
dp0
 = 
s0
 - 
s
;

2444 
	gbc
.
	gdp1
 = 
bc
.
dp0
 + bc.
d∂í
;

2445 
	gs0
 = 
s
;

2446 
	gnf
 +
nz
;

2447 
	gnz
 = 0;

2448 
	ghave_dig
;

2450 
	gdig_d⁄e
;

2452 ; 
	gc
 >'0' && 
c
 <'9'; c = *++
s
) {

2453 
have_dig
:

2454 
nz
++;

2455 i‡(
	gc
 -= '0') {

2456 
nf
 +
nz
;

2457 
	gi
 = 1; i < 
	gnz
; i++)

2458 i‡(
	gnd
++ < 9)

2459 
	gy
 *= 10;

2460 i‡(
	gnd
 <
DBL_DIG
 + 1)

2461 
z
 *= 10;

2462 i‡(
	gnd
++ < 9)

2463 
	gy
 = 10*
y
 + 
c
;

2464 i‡(
	gnd
 <
DBL_DIG
 + 1)

2465 
z
 = 10*z + 
c
;

2466 
	gnz
 = 
nz1
 = 0;

2470 
	gdig_d⁄e
:

2471 
e
 = 0;

2472 i‡(
	gc
 ='e' || 
c
 == 'E') {

2473 i‡(!
nd
 && !
nz
 && !
nz0
) {

2474 
ªt0
;

2476 
	gs00
 = 
s
;

2477 
	gesign
 = 0;

2478 
	gc
 = *++
s
) {

2480 
esign
 = 1;

2482 
c
 = *++
s
;

2484 i‡(
	gc
 >'0' && 
c
 <= '9') {

2485 
c
 == '0')

2486 
c
 = *++
s
;

2487 i‡(
	gc
 > '0' && c <= '9') {

2488 
L
 = 
c
 - '0';

2489 
	gs1
 = 
s
;

2490 (
	gc
 = *++
s
Ë>'0' && 
c
 <= '9')

2491 
L
 = 10*L + 
c
 - '0';

2492 i‡(
	gs
 - 
	gs1
 > 8 || 
	gL
 > 19999)

2496 
	ge
 = 19999;

2498 
	ge
 = ()
L
;

2499 i‡(
	gesign
)

2500 
	ge
 = -
e
;

2503 
	ge
 = 0;

2506 
	gs
 = 
s00
;

2508 i‡(!
	gnd
) {

2509 i‡(!
	gnz
 && !
	gnz0
) {

2510 #ifde‡
INFNAN_CHECK


2512 i‡(!
	gbc
.
	gd∂í
)

2513 
	gc
) {

2516 i‡(
m©ch
(
C
, &
s
,"nf")) {

2517 --
	gs
;

2518 i‡(!
m©ch
(
C
, &
s
,"inity"))

2519 ++
	gs
;

2520 
w‹d0
(&
rv
) = 0x7ff00000;

2521 
w‹d1
(&
rv
) = 0;

2522 
	gªt
;

2527 i‡(
m©ch
(
C
, &
s
, "an")) {

2528 
w‹d0
(&
rv
Ë
NAN_WORD0
;

2529 
w‹d1
(&
rv
Ë
NAN_WORD1
;

2530 #i‚de‡
No_Hex_NaN


2531 i‡(*
	gs
 == '(')

2532 
hex«n
(
C
, &
rv
, &
s
);

2534 
	gªt
;

2538 
	gªt0
:

2539 
s
 = 
s00
;

2540 
	gsign
 = 0;

2542 
	gªt
;

2544 
	gbc
.
	ge0
 = 
e1
 = 
e
 -
nf
;

2551 i‡(!
	gnd0
)

2552 
	gnd0
 = 
nd
;

2553 
	gk
 = 
nd
 < 
DBL_DIG
 + 1 ?Çd : DBL_DIG + 1;

2554 
dvÆ
(&
rv
Ë
y
;

2555 i‡(
	gk
 > 9) {

2556 #ifde‡
SET_INEXACT


2557 i‡(
	gk
 > 
	gDBL_DIG
)

2558 
	gﬁdöexa˘
 = 
gë_öexa˘
();

2560 
dvÆ
(&
rv
Ë
ãns
[
k
 - 9] * dvÆ(&rvË+ 
z
;

2562 
	gbd0
 = 0;

2563 i‡(
	gnd
 <
DBL_DIG


2564 #i‚de‡
RND_PRODQUOT


2565 #i‚de‡
H⁄‹_FLT_ROUNDS


2566 && 
F…_Rounds
 == 1

2570 i‡(!
e
)

2571 
ªt
;

2572 #i‚de‡
ROUND_BIASED_wôhout_Round_Up


2573 i‡(
	ge
 > 0) {

2574 i‡(
	ge
 <
Tí_pmax
) {

2575 #ifde‡
VAX


2576 
vax_ovÊ_check
;

2578 #ifde‡
H⁄‹_FLT_ROUNDS


2580 i‡(
	gsign
) {

2581 
	grv
.
	gd
 = -
rv
.
d
;

2582 
	gsign
 = 0;

2585  
rounded_¥odu˘
(
dvÆ
(&
rv
), 
ãns
[
e
]);

2586 
	gªt
;

2589 
	gi
 = 
DBL_DIG
 - 
nd
;

2590 i‡(
	ge
 <
Tí_pmax
 + 
i
) {

2594 #ifde‡
H⁄‹_FLT_ROUNDS


2596 i‡(
sign
) {

2597 
rv
.
d
 = -rv.d;

2598 
	gsign
 = 0;

2601 
	ge
 -
i
;

2602 
dvÆ
(&
rv
Ë*
ãns
[
i
];

2603 #ifde‡
VAX


2607 
	gvax_ovÊ_check
:

2608 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

2609  
rounded_¥odu˘
(
dvÆ
(&
rv
), 
ãns
[
e
]);

2610 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
)

2611 > 
	gExp_msk1
*(
	gDBL_MAX_EXP
+
	gBüs
-1-
	gP
))

2612 
	govÊ
;

2613 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

2615  
rounded_¥odu˘
(
dvÆ
(&
rv
), 
ãns
[
e
]);

2617 
	gªt
;

2620 #i‚de‡
I«ccuøã_Divide


2621 i‡(
	ge
 >-
Tí_pmax
) {

2622 #ifde‡
H⁄‹_FLT_ROUNDS


2624 i‡(
sign
) {

2625 
rv
.
d
 = -rv.d;

2626 
	gsign
 = 0;

2629  
rounded_quŸõ¡
(
dvÆ
(&
rv
), 
ãns
[-
e
]);

2630 
	gªt
;

2635 
	ge1
 +
nd
 - 
k
;

2637 #ifde‡
IEEE_Arôh


2638 #ifde‡
SET_INEXACT


2639 
	gbc
.
	göexa˘
 = 1;

2640 i‡(
	gk
 <
DBL_DIG
)

2641 
ﬁdöexa˘
 = 
gë_öexa˘
();

2643 #ifde‡
Avoid_UndîÊow


2644 
	gbc
.
	gsˇÀ
 = 0;

2646 #ifde‡
H⁄‹_FLT_ROUNDS


2647 i‡(
	gbc
.
	groundög
 >= 2) {

2648 i‡(
sign
)

2649 
bc
.
roundög
 = bc.rounding == 2 ? 0 : 2;

2651 i‡(
	gbc
.
	groundög
 != 2)

2652 
bc
.
roundög
 = 0;

2659 i‡(
	ge1
 > 0) {

2660 i‡((
	gi
 = 
e1
 & 15))

2661 
dvÆ
(&
rv
Ë*
ãns
[
i
];

2662 i‡(
	ge1
 &= ~15) {

2663 i‡(
e1
 > 
DBL_MAX_10_EXP
) {

2664 
ovÊ
:

2666 #ifde‡
IEEE_Arôh


2667 #ifde‡
H⁄‹_FLT_ROUNDS


2668 
bc
.
roundög
) {

2671 
w‹d0
(&
rv
Ë
Big0
;

2672 
w‹d1
(&
rv
Ë
Big1
;

2675 
w‹d0
(&
rv
Ë
Exp_mask
;

2676 
w‹d1
(&
rv
) = 0;

2679 
w‹d0
(&
rv
Ë
Exp_mask
;

2680 
w‹d1
(&
rv
) = 0;

2682 #ifde‡
SET_INEXACT


2684 
dvÆ
(&
rv0
) = 1e300;

2685 
dvÆ
(&
rv0
) *= dval(&rv0);

2688 
w‹d0
(&
rv
Ë
Big0
;

2689 
w‹d1
(&
rv
Ë
Big1
;

2691 
	gønge_îr
:

2692 i‡(
bd0
) {

2693 
B‰ì
(
C
, 
bb
);

2694 
B‰ì
(
C
, 
bd
);

2695 
B‰ì
(
C
, 
bs
);

2696 
B‰ì
(
C
, 
bd0
);

2697 
B‰ì
(
C
, 
dñè
);

2699 #i‚de‡
NO_ERRNO


2700 
	gî∫o
 = 
ERANGE
;

2702 
	gªt
;

2704 
	ge1
 >>= 4;

2705 
	gj
 = 0; 
	ge1
 > 1; j++,É1 >>= 1)

2706 i‡(
e1
 & 1)

2707 
dvÆ
(&
rv
Ë*
bigãns
[
j
];

2709 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

2710 
dvÆ
(&
rv
Ë*
bigãns
[
j
];

2711 i‡((
	gz
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
)

2712 > 
Exp_msk1
*(
DBL_MAX_EXP
+
Büs
-
P
))

2713 
ovÊ
;

2714 i‡(
	gz
 > 
	gExp_msk1
*(
	gDBL_MAX_EXP
+
	gBüs
-1-
	gP
)) {

2717 
w‹d0
(&
rv
Ë
Big0
;

2718 
w‹d1
(&
rv
Ë
Big1
;

2721 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

2724 i‡(
	ge1
 < 0) {

2725 
	ge1
 = -
e1
;

2726 i‡((
	gi
 = 
e1
 & 15))

2727 
dvÆ
(&
rv
Ë/
ãns
[
i
];

2728 i‡(
	ge1
 >>= 4) {

2729 i‡(
e1
 >1 << 
n_bigãns
)

2730 
undÊ
;

2731 #ifde‡
Avoid_UndîÊow


2732 i‡(
	ge1
 & 
	gSˇÀ_Bô
)

2733 
	gbc
.
	gsˇÀ
 = 2*
P
;

2734 
	gj
 = 0; 
	ge1
 > 0; j++,É1 >>= 1)

2735 i‡(
e1
 & 1)

2736 
dvÆ
(&
rv
Ë*
töyãns
[
j
];

2737 i‡(
	gbc
.
	gsˇÀ
 && (
	gj
 = 2*
P
 + 1 - ((
w‹d0
(&
rv
Ë& 
Exp_mask
)

2738 >> 
Exp_shi·
)) > 0) {

2740 i‡(
j
 >= 32) {

2741 i‡(
j
 > 54)

2742 
undÊ
;

2743 
w‹d1
(&
rv
) = 0;

2744 i‡(
	gj
 >= 53)

2745 
w‹d0
(&
rv
Ë(
P
+2)*
Exp_msk1
;

2747 
w‹d0
(&
rv
Ë&0xfffffff‡<< (
j
-32);

2750 
w‹d1
(&
rv
Ë&0xfffffff‡<< 
j
;

2753 
	gj
 = 0; 
	ge1
 > 1; j++,É1 >>= 1)

2754 i‡(
e1
 & 1)

2755 
dvÆ
(&
rv
Ë*
töyãns
[
j
];

2757 
dvÆ
(&
rv0
ËdvÆ(&
rv
);

2758 
dvÆ
(&
rv
Ë*
töyãns
[
j
];

2759 i‡(!
dvÆ
(&
rv
)) {

2760 
dvÆ
(&
rv
Ë2.*dvÆ(&
rv0
);

2761 
dvÆ
(&
rv
Ë*
töyãns
[
j
];

2763 i‡(!
dvÆ
(&
rv
)) {

2764 
	gundÊ
:

2765 
dvÆ
(&
rv
) = 0.;

2766 
	gønge_îr
;

2768 #i‚de‡
Avoid_UndîÊow


2769 
w‹d0
(&
rv
Ë
Töy0
;

2770 
w‹d1
(&
rv
Ë
Töy1
;

2783 
	gbc
.
	gnd
 = 
nd
 - 
nz1
;

2784 #i‚de‡
NO_STRTOD_BIGCOMP


2785 
	gbc
.
	gnd0
 = 
nd0
;

2788 i‡(
	gnd
 > 
	g°πod_diglim
) {

2792 
	gi
 = 
j
 = 18;

2793 i‡(
	gi
 > 
	gnd0
)

2794 
	gj
 +
bc
.
d∂í
;

2796 i‡(--
	gj
 < 
	gbc
.
	gdp1
 && j >
bc
.
dp0
)

2797 
j
 = 
bc
.
dp0
 - 1;

2798 i‡(
	gs0
[
j
] != '0')

2800 --
	gi
;

2802 
	ge
 +
nd
 - 
i
;

2803 
	gnd
 = 
i
;

2804 i‡(
	gnd0
 > 
	gnd
)

2805 
	gnd0
 = 
nd
;

2806 i‡(
	gnd
 < 9) {

2807 
	gy
 = 0;

2808 
	gi
 = 0; i < 
	gnd0
; ++i)

2809 
	gy
 = 10*
y
 + 
s0
[
i
] - '0';

2810 
	gj
 = 
bc
.
dp1
; 
	gi
 < 
	gnd
; ++i)

2811 
	gy
 = 10*
y
 + 
s0
[
j
++] - '0';

2815 
	gbd0
 = 
s2b
(
C
, 
s0
, 
nd0
, 
nd
, 
y
, 
bc
.
d∂í
);

2818 
	gbd
 = 
BÆloc
(
C
, 
bd0
->
k
);

2819 
Bc›y
(
bd
, 
bd0
);

2820 
	gbb
 = 
d2b
(
C
, &
rv
, &
bbe
, &
bbbôs
);

2821 
	gbs
 = 
i2b
(
C
, 1);

2823 i‡(
	ge
 >= 0) {

2824 
bb2
 = 
bb5
 = 0;

2825 
	gbd2
 = 
bd5
 = 
e
;

2828 
	gbb2
 = 
bb5
 = -
e
;

2829 
	gbd2
 = 
bd5
 = 0;

2831 i‡(
	gbbe
 >= 0)

2832 
bb2
 +
bbe
;

2834 
	gbd2
 -
bbe
;

2835 
	gbs2
 = 
bb2
;

2836 #ifde‡
H⁄‹_FLT_ROUNDS


2837 i‡(
	gbc
.
	groundög
 != 1)

2838 
bs2
++;

2840 #ifde‡
Avoid_UndîÊow


2841 
	gLsb
 = 
LSB
;

2842 
	gLsb1
 = 0;

2843 
	gj
 = 
bbe
 - 
bc
.
sˇÀ
;

2844 
	gi
 = 
j
 + 
bbbôs
 - 1;

2845 
	gj
 = 
P
 + 1 - 
bbbôs
;

2846 i‡(
	gi
 < 
	gEmö
) {

2847 
	gi
 = 
Emö
 - 
i
;

2848 
	gj
 -
i
;

2849 i‡(
	gi
 < 32)

2850 
	gLsb
 <<
i
;

2851 i‡(
	gi
 < 52)

2852 
	gLsb1
 = 
Lsb
 << (
i
-32);

2854 
	gLsb1
 = 
Exp_mask
;

2857 #ifde‡
Suddí_UndîÊow


2858 #ifde‡
IBM


2859 
	gj
 = 1 + 4*
P
 - 3 - 
bbbôs
 + ((
bbe
 + bbbits - 1) & 3);

2861 
	gj
 = 
P
 + 1 - 
bbbôs
;

2864 
	gj
 = 
bbe
;

2865 
	gi
 = 
j
 + 
bbbôs
 - 1;

2866 i‡(
	gi
 < 
	gEmö
)

2867 
	gj
 +
P
 - 
Emö
;

2869 
	gj
 = 
P
 + 1 - 
bbbôs
;

2872 
	gbb2
 +
j
;

2873 
	gbd2
 +
j
;

2874 #ifde‡
Avoid_UndîÊow


2875 
	gbd2
 +
bc
.
sˇÀ
;

2877 
	gi
 = 
bb2
 < 
bd2
 ? bb2 : bd2;

2878 i‡(
	gi
 > 
	gbs2
)

2879 
	gi
 = 
bs2
;

2880 i‡(
	gi
 > 0) {

2881 
	gbb2
 -
i
;

2882 
	gbd2
 -
i
;

2883 
	gbs2
 -
i
;

2885 i‡(
	gbb5
 > 0) {

2886 
	gbs
 = 
pow5mu…
(
C
, 
bs
, 
bb5
);

2887 
	gbb1
 = 
mu…
(
C
, 
bs
, 
bb
);

2888 
B‰ì
(
C
, 
bb
);

2889 
	gbb
 = 
bb1
;

2891 i‡(
	gbb2
 > 0)

2892 
	gbb
 = 
lshi·
(
C
, 
bb
, 
bb2
);

2893 i‡(
	gbd5
 > 0)

2894 
	gbd
 = 
pow5mu…
(
C
, 
bd
, 
bd5
);

2895 i‡(
	gbd2
 > 0)

2896 
	gbd
 = 
lshi·
(
C
, 
bd
, 
bd2
);

2897 i‡(
	gbs2
 > 0)

2898 
	gbs
 = 
lshi·
(
C
, 
bs
, 
bs2
);

2899 
	gdñè
 = 
diff
(
C
, 
bb
, 
bd
);

2900 
	gbc
.
	gdsign
 = 
dñè
->
sign
;

2901 
	gdñè
->
	gsign
 = 0;

2902 
	gi
 = 
cmp
(
C
, 
dñè
, 
bs
);

2903 #i‚de‡
NO_STRTOD_BIGCOMP


2904 i‡(
	gbc
.
	gnd
 >Çd && 
	gi
 <= 0) {

2905 i‡(
bc
.
dsign
) {

2907 
ªq_bigcomp
 = 1;

2910 #ifde‡
H⁄‹_FLT_ROUNDS


2911 i‡(
	gbc
.
	groundög
 != 1) {

2912 i‡(
i
 < 0) {

2913 
ªq_bigcomp
 = 1;

2919 
	gi
 = -1;

2922 #ifde‡
H⁄‹_FLT_ROUNDS


2923 i‡(
	gbc
.
	groundög
 != 1) {

2924 i‡(
i
 < 0) {

2926 i‡(!
dñè
->
x
[0] && dñè->
wds
 <= 1) {

2928 #ifde‡
SET_INEXACT


2929 
bc
.
öexa˘
 = 0;

2933 i‡(
	gbc
.
	groundög
) {

2934 i‡(
	gbc
.
	gdsign
) {

2935 
	gadj
.
	gd
 = 1.;

2936 
	g≠∂y_adj
;

2939 i‡(!
	gbc
.
	gdsign
) {

2940 
	gadj
.
	gd
 = -1.;

2941 i‡(!
w‹d1
(&
rv
)

2942 && !(
w‹d0
(&
rv
Ë& 
	gFøc_mask
)) {

2943 
	gy
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

2944 
	gã°_sˇÀ
 = 
y
;

2945 #ifde‡
Avoid_UndîÊow


2946 
	gã°_sˇÀ
 = (!
bc
.
sˇÀ
 || 
y
 > 2*
P
*
Exp_msk1
);

2948 i‡(
	gã°_sˇÀ
) {

2949 
	gdñè
 = 
lshi·
(
C
, 
dñè
,
Log2P
);

2950 i‡(
cmp
(
C
, 
dñè
, 
bs
) <= 0)

2951 
adj
.
d
 = -0.5;

2954 
	g≠∂y_adj
:

2955 #ifde‡
Avoid_UndîÊow


2956 i‡(
bc
.
sˇÀ
 && (
y
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
)

2957 <2*
P
*
Exp_msk1
)

2958 
w‹d0
(&
adj
Ë+(2*
P
+1)*
Exp_msk1
 - 
y
;

2960 #ifde‡
Suddí_UndîÊow


2961 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
) <=

2962 
P
*
Exp_msk1
) {

2963 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

2964 
dvÆ
(&
rv
Ë+
adj
.
d
*
uÕ
(
C
, dval(&rv));

2965 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

2970 
dvÆ
(&
rv
Ë+
adj
.
d
*
uÕ
(
C
, &rv);

2974 
	gadj
.
	gd
 = 
øtio
(
C
, 
dñè
, 
bs
);

2975 i‡(
	gadj
.
	gd
 < 1.)

2976 
	gadj
.
	gd
 = 1.;

2977 i‡(
	gadj
.
	gd
 <= 0x7ffffffe) {

2979 
y
 = 
adj
.
d
;

2980 i‡(
	gy
 !
adj
.
d
) {

2981 i‡(!((
bc
.
roundög
>>1Ë^ bc.
dsign
))

2982 
y
++;

2983 
	gadj
.
	gd
 = 
y
;

2986 #ifde‡
Avoid_UndîÊow


2987 i‡(
	gbc
.
	gsˇÀ
 && (
	gy
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
Ë<2*
P
*
Exp_msk1
)

2988 
w‹d0
(&
adj
Ë+(2*
P
+1)*
Exp_msk1
 - 
y
;

2990 #ifde‡
Suddí_UndîÊow


2991 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
Ë<
P
*
Exp_msk1
) {

2992 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

2993 
	gadj
.
	gd
 *
uÕ
(
C
, 
dvÆ
(&
rv
));

2994 i‡(
	gbc
.
	gdsign
)

2995 
dvÆ
(&
rv
Ë+
adj
.
d
;

2997 
dvÆ
(&
rv
Ë-
adj
.
d
;

2998 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

2999 
	gc⁄t
;

3003 
	gadj
.
	gd
 *
uÕ
(
C
, &
rv
);

3004 i‡(
	gbc
.
	gdsign
) {

3005 i‡(
w‹d0
(&
rv
Ë=
Big0
 && 
w‹d1
(&rvË=
Big1
)

3006 
ovÊ
;

3007 
dvÆ
(&
rv
Ë+
adj
.
d
;

3010 
dvÆ
(&
rv
Ë-
adj
.
d
;

3011 
	gc⁄t
;

3015 i‡(
	gi
 < 0) {

3019 i‡(
	gbc
.
	gdsign
 || 
w‹d1
(&
rv
Ë|| 
w‹d0
(&rvË& 
	gBndry_mask


3020 #ifde‡
IEEE_Arôh


3021 #ifde‡
Avoid_UndîÊow


3022 || (
w‹d0
(&
rv
Ë& 
	gExp_mask
Ë<(2*
P
+1)*
Exp_msk1


3024 || (
w‹d0
(&
rv
Ë& 
Exp_mask
Ë<
Exp_msk1


3028 #ifde‡
SET_INEXACT


3029 i‡(!
dñè
->
x
[0] && dñè->
wds
 <= 1)

3030 
bc
.
öexa˘
 = 0;

3034 i‡(!
	gdñè
->
	gx
[0] && dñè->
	gwds
 <= 1) {

3036 #ifde‡
SET_INEXACT


3037 
bc
.
öexa˘
 = 0;

3041 
	gdñè
 = 
lshi·
(
C
, 
dñè
,
Log2P
);

3042 i‡(
cmp
(
C
, 
dñè
, 
bs
) > 0)

3043 
	gdr›_down
;

3046 i‡(
	gi
 == 0) {

3048 i‡(
bc
.
dsign
) {

3049 i‡((
w‹d0
(&
rv
Ë& 
Bndry_mask1
) == Bndry_mask1

3050 && 
w‹d1
(&
rv
) == (

3051 #ifde‡
Avoid_UndîÊow


3052 (
bc
.
sˇÀ
 && (
y
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
Ë<2*
P
*
Exp_msk1
)

3053 ? (0xfffffff‡& (0xfffffff‡<< (2*
P
+1-(
y
>>
Exp_shi·
)))) :

3057 i‡(
w‹d0
(&
rv
Ë=
Big0
 && 
w‹d1
(&rvË=
Big1
)

3058 
ovÊ
;

3059 
w‹d0
(&
rv
Ë(w‹d0(&rvË& 
Exp_mask
)

3060 + 
Exp_msk1


3061 #ifde‡
IBM


3062 | 
Exp_msk1
 >> 4

3065 
w‹d1
(&
rv
) = 0;

3066 #ifde‡
Avoid_UndîÊow


3067 
	gbc
.
	gdsign
 = 0;

3072 i‡(!(
w‹d0
(&
rv
Ë& 
	gBndry_mask
Ë&& !
w‹d1
(&rv)) {

3073 
	gdr›_down
:

3075 #ifde‡
Suddí_UndîÊow


3076 
L
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

3077 #ifde‡
IBM


3078 i‡(
	gL
 < 
	gExp_msk1
)

3080 #ifde‡
Avoid_UndîÊow


3081 i‡(
	gL
 <(
bc
.
sˇÀ
 ? (2*
P
+1)*
Exp_msk1
 : Exp_msk1))

3083 i‡(
L
 <
Exp_msk1
)

3087 i‡(
bc
.
nd
 >nd) {

3088 
bc
.
uÊchk
 = 1;

3091 
	gundÊ
;

3093 
	gL
 -
Exp_msk1
;

3095 #ifde‡
Avoid_UndîÊow


3096 i‡(
	gbc
.
	gsˇÀ
) {

3097 
	gL
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

3098 i‡(
	gL
 <(2*
P
+1)*
Exp_msk1
) {

3099 i‡(
L
 > (
P
+2)*
Exp_msk1
)

3104 i‡(
	gbc
.
	gnd
 >nd) {

3105 
	gbc
.
	guÊchk
 = 1;

3108 
	gundÊ
;

3112 
	gL
 = (
w‹d0
(&
rv
Ë& 
Exp_mask
Ë- 
Exp_msk1
;

3114 
w‹d0
(&
rv
Ë
L
 | 
Bndry_mask1
;

3115 
w‹d1
(&
rv
) = 0xffffffff;

3116 #ifde‡
IBM


3117 
	gc⁄t
;

3119 #i‚de‡
NO_STRTOD_BIGCOMP


3120 i‡(
	gbc
.
	gnd
 >Çd)

3121 
	gc⁄t
;

3126 #i‚de‡
ROUND_BIASED


3127 #ifde‡
Avoid_UndîÊow


3128 i‡(
	gLsb1
) {

3129 i‡(!(
w‹d0
(&
rv
Ë& 
	gLsb1
))

3132 i‡(!(
w‹d1
(&
rv
Ë& 
	gLsb
))

3135 i‡(!(
w‹d1
(&
rv
Ë& 
	gLSB
))

3139 i‡(
	gbc
.
	gdsign
)

3140 #ifde‡
Avoid_UndîÊow


3141 
dvÆ
(&
rv
Ë+
suÕ
(
C
, &rv, &
bc
);

3143 
dvÆ
(&
rv
Ë+
uÕ
(
C
, &rv);

3145 #i‚de‡
ROUND_BIASED


3147 #ifde‡
Avoid_UndîÊow


3148 
dvÆ
(&
rv
Ë-
suÕ
(
C
, &rv, &
bc
);

3150 
dvÆ
(&
rv
Ë-
uÕ
(
C
, &rv);

3152 #i‚de‡
Suddí_UndîÊow


3153 i‡(!
dvÆ
(&
rv
)) {

3154 i‡(
	gbc
.
	gnd
 >nd) {

3155 
	gbc
.
	guÊchk
 = 1;

3158 
	gundÊ
;

3162 #ifde‡
Avoid_UndîÊow


3163 
	gbc
.
	gdsign
 = 1 - 
bc
.
dsign
;

3168 i‡((
	gØdj
 = 
øtio
(
C
, 
dñè
, 
bs
)) <= 2.) {

3169 i‡(
bc
.
dsign
)

3170 
Ødj
 = 
Ødj1
 = 1.;

3171 i‡(
w‹d1
(&
rv
Ë|| 
w‹d0
(&rvË& 
	gBndry_mask
) {

3172 #i‚de‡
Suddí_UndîÊow


3173 i‡(
w‹d1
(&
rv
Ë=
Töy1
 && !
w‹d0
(&rv)) {

3174 i‡(
bc
.
nd
 >nd) {

3175 
bc
.
uÊchk
 = 1;

3178 
	gundÊ
;

3181 
	gØdj
 = 1.;

3182 
	gØdj1
 = -1.;

3188 i‡(
	gØdj
 < 2./
	gFLT_RADIX
)

3189 
	gØdj
 = 1./
FLT_RADIX
;

3191 
	gØdj
 *= 0.5;

3192 
	gØdj1
 = -
Ødj
;

3196 
	gØdj
 *= 0.5;

3197 
	gØdj1
 = 
bc
.
dsign
 ? 
Ødj
 : -aadj;

3198 #ifde‡
Check_FLT_ROUNDS


3199 
	gbc
.
	groundög
) {

3201 
Ødj1
 -= 0.5;

3205 
Ødj1
 += 0.5;

3208 i‡(
	gF…_Rounds
 == 0)

3209 
Ødj1
 += 0.5;

3212 
	gy
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

3216 i‡(
	gy
 =
Exp_msk1
*(
DBL_MAX_EXP
+
Büs
-1)) {

3217 
dvÆ
(&
rv0
ËdvÆ(&
rv
);

3218 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

3219 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3220 
dvÆ
(&
rv
Ë+
adj
.
d
;

3221 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
) >=

3222 
Exp_msk1
*(
DBL_MAX_EXP
+
Büs
-
P
)) {

3223 i‡(
w‹d0
(&
rv0
Ë=
Big0
 && 
w‹d1
(&rv0Ë=
Big1
)

3224 
ovÊ
;

3225 
w‹d0
(&
rv
Ë
Big0
;

3226 
w‹d1
(&
rv
Ë
Big1
;

3227 
	gc⁄t
;

3230 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

3233 #ifde‡
Avoid_UndîÊow


3234 i‡(
	gbc
.
	gsˇÀ
 && 
	gy
 <2*
P
*
Exp_msk1
) {

3235 i‡(
Ødj
 <= 0x7fffffff) {

3236 i‡((
z
 = 
Ødj
) <= 0)

3237 
z
 = 1;

3238 
	gØdj
 = 
z
;

3239 
	gØdj1
 = 
bc
.
dsign
 ? 
Ødj
 : -aadj;

3241 
dvÆ
(&
Ødj2
Ë
Ødj1
;

3242 
w‹d0
(&
Ødj2
Ë+(2*
P
+1)*
Exp_msk1
 - 
y
;

3243 
	gØdj1
 = 
dvÆ
(&
Ødj2
);

3244 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3245 
dvÆ
(&
rv
Ë+
adj
.
d
;

3246 i‡(
	grv
.
	gd
 == 0.)

3247 #ifde‡
NO_STRTOD_BIGCOMP


3248 
undÊ
;

3251 i‡(
	gbc
.
	gnd
 >Çd)

3252 
	gbc
.
	gdsign
 = 1;

3258 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3259 
dvÆ
(&
rv
Ë+
adj
.
d
;

3262 #ifde‡
Suddí_UndîÊow


3263 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
Ë<
P
*
Exp_msk1
) {

3264 
dvÆ
(&
rv0
ËdvÆ(&
rv
);

3265 
w‹d0
(&
rv
Ë+
P
*
Exp_msk1
;

3266 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3267 
dvÆ
(&
rv
Ë+
adj
.
d
;

3268 #ifde‡
IBM


3269 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
Ë< 
P
*
	gExp_msk1
)

3271 i‡((
w‹d0
(&
rv
Ë& 
	gExp_mask
Ë<
P
*
Exp_msk1
)

3274 i‡(
w‹d0
(&
rv0
Ë=
Töy0


3275 && 
w‹d1
(&
rv0
Ë=
Töy1
) {

3276 i‡(
bc
.
nd
 >nd) {

3277 
bc
.
uÊchk
 = 1;

3280 
	gundÊ
;

3282 
w‹d0
(&
rv
Ë
Töy0
;

3283 
w‹d1
(&
rv
Ë
Töy1
;

3284 
	gc⁄t
;

3287 
w‹d0
(&
rv
Ë-
P
*
Exp_msk1
;

3290 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3291 
dvÆ
(&
rv
Ë+
adj
.
d
;

3301 i‡(
	gy
 <(
P
-1)*
Exp_msk1
 && 
Ødj
 > 1.) {

3302 
Ødj1
 = ()()(
Ødj
 + 0.5);

3303 i‡(!
	gbc
.
	gdsign
)

3304 
	gØdj1
 = -
Ødj1
;

3306 
	gadj
.
	gd
 = 
Ødj1
 * 
uÕ
(
C
, &
rv
);

3307 
dvÆ
(&
rv
Ë+
adj
.
d
;

3311 
	gz
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

3312 #i‚de‡
SET_INEXACT


3313 i‡(
	gbc
.
	gnd
 =
nd
) {

3314 #ifde‡
Avoid_UndîÊow


3315 i‡(!
bc
.
sˇÀ
)

3317 i‡(
y
 =
z
) {

3319 
L
 = (
L⁄g
)
Ødj
;

3320 
	gØdj
 -
L
;

3322 i‡(
	gbc
.
	gdsign
 || 
w‹d1
(&
rv
Ë|| 
w‹d0
(&rvË& 
	gBndry_mask
) {

3323 i‡(
	gØdj
 < .4999999 ||áadj > .5000001)

3326 i‡(
	gØdj
 < .4999999/
	gFLT_RADIX
)

3331 
	gc⁄t
:

3332 
B‰ì
(
C
, 
bb
);

3333 
B‰ì
(
C
, 
bd
);

3334 
B‰ì
(
C
, 
bs
);

3335 
B‰ì
(
C
, 
dñè
);

3337 
B‰ì
(
C
, 
bb
);

3338 
B‰ì
(
C
, 
bd
);

3339 
B‰ì
(
C
, 
bs
);

3340 
B‰ì
(
C
, 
bd0
);

3341 
B‰ì
(
C
, 
dñè
);

3342 #i‚de‡
NO_STRTOD_BIGCOMP


3343 i‡(
	gªq_bigcomp
) {

3344 
	gbd0
 = 0;

3345 
	gbc
.
	ge0
 +
nz1
;

3346 
bigcomp
(
C
, &
rv
, 
s0
, &
bc
);

3347 
	gy
 = 
w‹d0
(&
rv
Ë& 
Exp_mask
;

3348 i‡(
	gy
 =
Exp_mask
)

3349 
ovÊ
;

3350 i‡(
	gy
 =0 && 
rv
.
d
 == 0.)

3351 
undÊ
;

3354 #ifde‡
SET_INEXACT


3355 i‡(
	gbc
.
	göexa˘
) {

3356 i‡(!
	gﬁdöexa˘
) {

3357 
w‹d0
(&
rv0
Ë
Exp_1
 + (70 << 
Exp_shi·
);

3358 
w‹d1
(&
rv0
) = 0;

3359 
dvÆ
(&
rv0
) += 1.;

3362 i‡(!
	gﬁdöexa˘
)

3363 
˛ór_öexa˘
();

3365 #ifde‡
Avoid_UndîÊow


3366 i‡(
	gbc
.
	gsˇÀ
) {

3367 
w‹d0
(&
rv0
Ë
Exp_1
 - 2*
P
*
Exp_msk1
;

3368 
w‹d1
(&
rv0
) = 0;

3369 
dvÆ
(&
rv
Ë*dvÆ(&
rv0
);

3370 #i‚de‡
NO_ERRNO


3372 #ifde‡
IEEE_Arôh


3373 i‡(!(
w‹d0
(&
rv
Ë& 
	gExp_mask
))

3375 i‡(
w‹d0
(&
rv
Ë=0 && 
w‹d1
(&rv) == 0)

3377 
î∫o
 = 
ERANGE
;

3381 #ifde‡
SET_INEXACT


3382 i‡(
	gbc
.
	göexa˘
 && !(
w‹d0
(&
rv
Ë& 
	gExp_mask
)) {

3384 
dvÆ
(&
rv0
) = 1e-300;

3385 
dvÆ
(&
rv0
) *= dval(&rv0);

3388 
	gªt
:

3389 i‡(
£
)

3390 *
£
 = (*)
s
;

3391  
	gsign
 ? -
dvÆ
(&
rv
) : dval(&rv);

3395 
rv_Æloc
(
dtﬂ_c⁄ãxt
* 
C
, 
i
)

3397 
	gj
, 
	gk
, *
	gr
;

3399 
	gj
 = (
UL⁄g
);

3400 
	gk
 = 0;

3401 ()((
	gBigöt
Ë- (
	gUL⁄g
Ë- ()Ë+ 
	gj
 <
i
;

3402 
	gj
 <<= 1)

3403 
k
++;

3404 
	gr
 = (*)
BÆloc
(
C
, 
k
);

3405 *
	gr
 = 
k
;

3407 (*)(
	gr
+1);

3411 
ƒv_Æloc
(
dtﬂ_c⁄ãxt
* 
C
, c⁄° *
s
, **
rve
, 
n
)

3413 *
	grv
, *
	gt
;

3415 
	gt
 = 
rv
 = 
rv_Æloc
(
C
, 
n
);

3416 (*
	gt
 = *
s
++)Ë
t
++;

3417 i‡(
	grve
)

3418 *
	grve
 = 
t
;

3419  
	grv
;

3429 
jvp_‰ìdtﬂ
(
dtﬂ_c⁄ãxt
* 
C
, *
s
)

3431 
Bigöt
 *
	gb
 = (Bigöà*)((*)
s
 - 1);

3432 
	gb
->
	gmaxwds
 = 1 << (
b
->
k
 = *(*)b);

3433 
B‰ì
(
C
, 
b
);

3471 
	gjvp_dtﬂ


3472 (
dtﬂ_c⁄ãxt
* 
	gC
, 
	gdd
, 
	gmode
, 
	gndigôs
, *
	gde˝t
, *
	gsign
, **
	grve
)

3508 
	gbbôs
, 
	gb2
, 
	gb5
, 
	gbe
, 
	gdig
, 
	gi
, 
	gõps
, 
	gûim
, 
	gûim0
, 
	gûim1
,

3509 
	gj
, 
	gj1
=0, 
	gk
, 
	gk0
, 
	gk_check
, 
	gÀ·right
, 
	gm2
, 
	gm5
, 
	gs2
, 
	gs5
,

3510 
	g•ec_ˇ£
, 
	gåy_quick
;

3511 
L⁄g
 
	gL
;

3512 #i‚de‡
Suddí_UndîÊow


3513 
	gdí‹m
;

3514 
UL⁄g
 
	gx
;

3516 
Bigöt
 *
	gb
, *
	gb1
, *
	gdñè
, *
	gmlo
, *
	gmhi
, *
	gS
;

3517 
U
 
	gd2
, 
	gïs
, 
	gu
;

3518 
	gds
;

3519 *
	gs
, *
	gs0
;

3520 #i‚de‡
No_À·right


3521 #ifde‡
IEEE_Arôh


3522 
U
 
	gïs1
;

3525 #ifde‡
SET_INEXACT


3526 
	göexa˘
, 
	gﬁdöexa˘
;

3528 #ifde‡
H⁄‹_FLT_ROUNDS


3529 
	gRoundög
;

3530 #ifde‡
Tru°_FLT_ROUNDS


3531 
	gRoundög
 = 
F…_Rounds
;

3533 
	gRoundög
 = 1;

3534 
„gëround
()) {

3535 
	gFE_TOWARDZERO
: 
Roundög
 = 0; ;

3536 
	gFE_UPWARD
: 
Roundög
 = 2; ;

3537 
	gFE_DOWNWARD
: 
Roundög
 = 3;

3543 
	gu
.
	gd
 = 
dd
;

3544 i‡(
w‹d0
(&
u
Ë& 
	gSign_bô
) {

3546 *
	gsign
 = 1;

3547 
w‹d0
(&
u
Ë&~
Sign_bô
;

3550 *
	gsign
 = 0;

3552 #i‡
deföed
(
IEEE_Arôh
Ë+ deföed(
VAX
)

3553 #ifde‡
IEEE_Arôh


3554 i‡((
w‹d0
(&
u
Ë& 
	gExp_mask
Ë=
Exp_mask
)

3556 i‡(
w‹d0
(&
u
) == 0x8000)

3560 *
de˝t
 = 9999;

3561 #ifde‡
IEEE_Arôh


3562 i‡(!
w‹d1
(&
u
Ë&& !(
w‹d0
(&u) & 0xfffff))

3563  
ƒv_Æloc
(
C
, "Inföôy", 
rve
, 8);

3565  
ƒv_Æloc
(
C
, "NaN", 
rve
, 3);

3568 #ifde‡
IBM


3569 
dvÆ
(&
u
) += 0;

3571 i‡(!
dvÆ
(&
u
)) {

3572 *
	gde˝t
 = 1;

3573  
ƒv_Æloc
(
C
, "0", 
rve
, 1);

3576 #ifde‡
SET_INEXACT


3577 
	gåy_quick
 = 
ﬁdöexa˘
 = 
gë_öexa˘
();

3578 
	göexa˘
 = 1;

3580 #ifde‡
H⁄‹_FLT_ROUNDS


3581 i‡(
	gRoundög
 >= 2) {

3582 i‡(*
sign
)

3583 
Roundög
 = Rounding == 2 ? 0 : 2;

3585 i‡(
	gRoundög
 != 2)

3586 
Roundög
 = 0;

3590 
	gb
 = 
d2b
(
C
, &
u
, &
be
, &
bbôs
);

3591 #ifde‡
Suddí_UndîÊow


3592 
	gi
 = ()(
w‹d0
(&
u
Ë>> 
Exp_shi·1
 & (
Exp_mask
>>Exp_shift1));

3594 i‡((
	gi
 = ()(
w‹d0
(&
u
Ë>> 
Exp_shi·1
 & (
Exp_mask
>>Exp_shift1)))) {

3596 
dvÆ
(&
d2
ËdvÆ(&
u
);

3597 
w‹d0
(&
d2
Ë&
Føc_mask1
;

3598 
w‹d0
(&
d2
Ë|
Exp_11
;

3599 #ifde‡
IBM


3600 i‡(
	gj
 = 11 - 
hi0bôs
(
C
, 
w‹d0
(&
d2
Ë& 
Føc_mask
))

3601 
dvÆ
(&
d2
Ë/1 << 
j
;

3626 
	gi
 -
Büs
;

3627 #ifde‡
IBM


3628 
	gi
 <<= 2;

3629 
	gi
 +
j
;

3631 #i‚de‡
Suddí_UndîÊow


3632 
	gdí‹m
 = 0;

3637 
	gi
 = 
bbôs
 + 
be
 + (
Büs
 + (
P
-1) - 1);

3638 
	gx
 = 
i
 > 32 ? 
w‹d0
(&
u
Ë<< (64 - iË| 
w‹d1
(&u) >> (i - 32)

3639 : 
w‹d1
(&
u
Ë<< (32 - 
i
);

3640 
dvÆ
(&
d2
Ë
x
;

3641 
w‹d0
(&
d2
Ë-31*
Exp_msk1
;

3642 
	gi
 -(
Büs
 + (
P
-1) - 1) + 1;

3643 
	gdí‹m
 = 1;

3646 
	gds
 = (
dvÆ
(&
d2
)-1.5)*0.289529654602168 + 0.1760912590558 + 
i
*0.301029995663981;

3647 
	gk
 = ()
ds
;

3648 i‡(
	gds
 < 0. && d†!
k
)

3649 
k
--;

3650 
	gk_check
 = 1;

3651 i‡(
	gk
 >0 && 
k
 <
Tí_pmax
) {

3652 i‡(
dvÆ
(&
u
Ë< 
ãns
[
k
])

3653 
k
--;

3654 
	gk_check
 = 0;

3656 
	gj
 = 
bbôs
 - 
i
 - 1;

3657 i‡(
	gj
 >= 0) {

3658 
b2
 = 0;

3659 
	gs2
 = 
j
;

3662 
	gb2
 = -
j
;

3663 
	gs2
 = 0;

3665 i‡(
	gk
 >= 0) {

3666 
b5
 = 0;

3667 
	gs5
 = 
k
;

3668 
	gs2
 +
k
;

3671 
	gb2
 -
k
;

3672 
	gb5
 = -
k
;

3673 
	gs5
 = 0;

3675 i‡(
	gmode
 < 0 || mode > 9)

3676 
	gmode
 = 0;

3678 #i‚de‡
SET_INEXACT


3679 #ifde‡
Check_FLT_ROUNDS


3680 
	gåy_quick
 = 
Roundög
 == 1;

3682 
	gåy_quick
 = 1;

3686 i‡(
	gmode
 > 5) {

3687 
	gmode
 -= 4;

3688 
	gåy_quick
 = 0;

3690 
	gÀ·right
 = 1;

3691 
	gûim
 = 
ûim1
 = -1;

3693 
	gmode
) {

3696 
i
 = 18;

3697 
	gndigôs
 = 0;

3700 
À·right
 = 0;

3703 i‡(
ndigôs
 <= 0)

3704 
ndigôs
 = 1;

3705 
	gûim
 = 
ûim1
 = 
i
 = 
ndigôs
;

3708 
À·right
 = 0;

3711 
i
 = 
ndigôs
 + 
k
 + 1;

3712 
	gûim
 = 
i
;

3713 
	gûim1
 = 
i
 - 1;

3714 i‡(
	gi
 <= 0)

3715 
i
 = 1;

3717 
	gs
 = 
s0
 = 
rv_Æloc
(
C
, 
i
);

3719 #ifde‡
H⁄‹_FLT_ROUNDS


3720 i‡(
	gmode
 > 1 && 
	gRoundög
 != 1)

3721 
À·right
 = 0;

3724 i‡(
	gûim
 >0 && 
ûim
 <
Quick_max
 && 
åy_quick
) {

3728 
i
 = 0;

3729 
dvÆ
(&
d2
ËdvÆ(&
u
);

3730 
	gk0
 = 
k
;

3731 
	gûim0
 = 
ûim
;

3732 
	gõps
 = 2;

3733 i‡(
	gk
 > 0) {

3734 
	gds
 = 
ãns
[
k
&0xf];

3735 
	gj
 = 
k
 >> 4;

3736 i‡(
	gj
 & 
	gBÀtch
) {

3738 
	gj
 &
BÀtch
 - 1;

3739 
dvÆ
(&
u
Ë/
bigãns
[
n_bigãns
-1];

3740 
	gõps
++;

3742 ; 
	gj
; j >>1, 
	gi
++)

3743 i‡(
	gj
 & 1) {

3744 
	gõps
++;

3745 
	gds
 *
bigãns
[
i
];

3747 
dvÆ
(&
u
Ë/
ds
;

3749 i‡((
	gj1
 = -
k
)) {

3750 
dvÆ
(&
u
Ë*
ãns
[
j1
 & 0xf];

3751 
	gj
 = 
j1
 >> 4; j; j >>1, 
	gi
++)

3752 i‡(
	gj
 & 1) {

3753 
	gõps
++;

3754 
dvÆ
(&
u
Ë*
bigãns
[
i
];

3757 i‡(
	gk_check
 && 
dvÆ
(&
u
Ë< 1. && 
	gûim
 > 0) {

3758 i‡(
	gûim1
 <= 0)

3759 
Á°_Áûed
;

3760 
	gûim
 = 
ûim1
;

3761 
	gk
--;

3762 
dvÆ
(&
u
) *= 10.;

3763 
	gõps
++;

3765 
dvÆ
(&
ïs
Ë
õps
*dvÆ(&
u
) + 7.;

3766 
w‹d0
(&
ïs
Ë-(
P
-1)*
Exp_msk1
;

3767 i‡(
	gûim
 == 0) {

3768 
S
 = 
mhi
 = 0;

3769 
dvÆ
(&
u
) -= 5.;

3770 i‡(
dvÆ
(&
u
Ë> dvÆ(&
ïs
))

3771 
	g⁄e_digô
;

3772 i‡(
dvÆ
(&
u
Ë< -dvÆ(&
ïs
))

3773 
	gno_digôs
;

3774 
	gÁ°_Áûed
;

3776 #i‚de‡
No_À·right


3777 i‡(
	gÀ·right
) {

3781 
dvÆ
(&
ïs
Ë0.5/
ãns
[
ûim
-1] - dval(&eps);

3782 #ifde‡
IEEE_Arôh


3783 i‡(
	gk0
 < 0 && 
	gj1
 >= 307) {

3784 
ïs1
.
d
 = 1.01e256;

3785 
w‹d0
(&
ïs1
Ë-
Exp_msk1
 * (
Büs
+
P
-1);

3786 
dvÆ
(&
ïs1
Ë*
ãns
[
j1
 & 0xf];

3787 
	gi
 = 0, 
	gj
 = (
j1
-256) >> 4; j; j >>= 1, i++)

3788 i‡(
	gj
 & 1)

3789 
dvÆ
(&
ïs1
Ë*
bigãns
[
i
];

3790 i‡(
	gïs
.
	gd
 < 
	gïs1
.d)

3791 
	gïs
.
	gd
 = 
ïs1
.
d
;

3794 
	gi
 = 0;;) {

3795 
	gL
 = 
dvÆ
(&
u
);

3796 
dvÆ
(&
u
Ë-
L
;

3797 *
	gs
++ = '0' + ()
L
;

3798 i‡(1. - 
dvÆ
(&
u
Ë< dvÆ(&
ïs
))

3799 
	gbump_up
;

3800 i‡(
dvÆ
(&
u
Ë< dvÆ(&
ïs
))

3801 
	gªt1
;

3802 i‡(++
	gi
 >
ûim
)

3804 
dvÆ
(&
ïs
) *= 10.;

3805 
dvÆ
(&
u
) *= 10.;

3811 
dvÆ
(&
ïs
Ë*
ãns
[
ûim
-1];

3812 
	gi
 = 1;; i++, 
dvÆ
(&
u
) *= 10.) {

3813 
L
 = (
L⁄g
)(
dvÆ
(&
u
));

3814 i‡(!(
dvÆ
(&
u
Ë-
L
))

3815 
ûim
 = 
i
;

3816 *
	gs
++ = '0' + ()
L
;

3817 i‡(
	gi
 =
ûim
) {

3818 i‡(
dvÆ
(&
u
Ë> 0.5 + dvÆ(&
ïs
))

3819 
bump_up
;

3820 i‡(
dvÆ
(&
u
Ë< 0.5 - dvÆ(&
ïs
)) {

3821 *--
	gs
 == '0');

3822 
	gs
++;

3823 
	gªt1
;

3828 #i‚de‡
No_À·right


3831 
	gÁ°_Áûed
:

3832 
s
 = 
s0
;

3833 
dvÆ
(&
u
ËdvÆ(&
d2
);

3834 
	gk
 = 
k0
;

3835 
	gûim
 = 
ûim0
;

3840 i‡(
	gbe
 >0 && 
k
 <
I¡_max
) {

3842 
ds
 = 
ãns
[
k
];

3843 i‡(
	gndigôs
 < 0 && 
	gûim
 <= 0) {

3844 
S
 = 
mhi
 = 0;

3845 i‡(
	gûim
 < 0 || 
dvÆ
(&
u
Ë<5*
ds
)

3846 
no_digôs
;

3847 
	g⁄e_digô
;

3849 
	gi
 = 1;; i++, 
dvÆ
(&
u
) *= 10.) {

3850 
L
 = (
L⁄g
)(
dvÆ
(&
u
Ë/ 
ds
);

3851 
dvÆ
(&
u
Ë-
L
*
ds
;

3852 #ifde‡
Check_FLT_ROUNDS


3854 i‡(
dvÆ
(&
u
) < 0) {

3855 
	gL
--;

3856 
dvÆ
(&
u
Ë+
ds
;

3859 *
	gs
++ = '0' + ()
L
;

3860 i‡(!
dvÆ
(&
u
)) {

3861 #ifde‡
SET_INEXACT


3862 
	göexa˘
 = 0;

3866 i‡(
	gi
 =
ûim
) {

3867 #ifde‡
H⁄‹_FLT_ROUNDS


3868 i‡(
mode
 > 1)

3869 
Roundög
) {

3870 0: 
ªt1
;

3871 2: 
bump_up
;

3874 
dvÆ
(&
u
) += dval(&u);

3875 #ifde‡
ROUND_BIASED


3876 i‡(
dvÆ
(&
u
Ë>
ds
)

3878 i‡(
dvÆ
(&
u
Ë> 
ds
 || (dvÆ(&uË=d†&& 
L
 & 1))

3881 
bump_up
:

3882 *--
s
 == '9')

3883 i‡(
s
 =
s0
) {

3884 
k
++;

3885 *
	gs
 = '0';

3888 ++*
	gs
++;

3893 
	gªt1
;

3896 
	gm2
 = 
b2
;

3897 
	gm5
 = 
b5
;

3898 
	gmhi
 = 
mlo
 = 0;

3899 i‡(
	gÀ·right
) {

3900 
	gi
 =

3901 #i‚de‡
Suddí_UndîÊow


3902 
dí‹m
 ? 
be
 + (
Büs
 + (
P
-1) - 1 + 1) :

3904 #ifde‡
IBM


3905 1 + 4*
P
 - 3 - 
bbôs
 + ((bbô†+ 
be
 - 1) & 3);

3907 1 + 
	gP
 - 
	gbbôs
;

3909 
	gb2
 +
i
;

3910 
	gs2
 +
i
;

3911 
	gmhi
 = 
i2b
(
C
, 1);

3913 i‡(
	gm2
 > 0 && 
	gs2
 > 0) {

3914 
	gi
 = 
m2
 < 
s2
 ? m2 : s2;

3915 
	gb2
 -
i
;

3916 
	gm2
 -
i
;

3917 
	gs2
 -
i
;

3919 i‡(
	gb5
 > 0) {

3920 i‡(
	gÀ·right
) {

3921 i‡(
	gm5
 > 0) {

3922 
	gmhi
 = 
pow5mu…
(
C
, 
mhi
, 
m5
);

3923 
	gb1
 = 
mu…
(
C
, 
mhi
, 
b
);

3924 
B‰ì
(
C
, 
b
);

3925 
	gb
 = 
b1
;

3927 i‡((
	gj
 = 
b5
 - 
m5
))

3928 
b
 = 
pow5mu…
(
C
, b, 
j
);

3931 
	gb
 = 
pow5mu…
(
C
, 
b
, 
b5
);

3933 
	gS
 = 
i2b
(
C
, 1);

3934 i‡(
	gs5
 > 0)

3935 
	gS
 = 
pow5mu…
(
C
, 
S
, 
s5
);

3939 
	g•ec_ˇ£
 = 0;

3940 i‡((
	gmode
 < 2 || 
	gÀ·right
)

3941 #ifde‡
H⁄‹_FLT_ROUNDS


3942 && 
	gRoundög
 == 1

3945 i‡(!
w‹d1
(&
u
Ë&& !(
w‹d0
(&uË& 
Bndry_mask
)

3946 #i‚de‡
Suddí_UndîÊow


3947 && 
w‹d0
(&
u
Ë& (
Exp_mask
 & ~
Exp_msk1
)

3951 
b2
 +
Log2P
;

3952 
	gs2
 +
Log2P
;

3953 
	g•ec_ˇ£
 = 1;

3964 
	gi
 = 
dshi·
(
C
, 
S
, 
s2
);

3965 
	gb2
 +
i
;

3966 
	gm2
 +
i
;

3967 
	gs2
 +
i
;

3968 i‡(
	gb2
 > 0)

3969 
	gb
 = 
lshi·
(
C
, 
b
, 
b2
);

3970 i‡(
	gs2
 > 0)

3971 
	gS
 = 
lshi·
(
C
, 
S
, 
s2
);

3972 i‡(
	gk_check
) {

3973 i‡(
cmp
(
C
, 
b
,
S
) < 0) {

3974 
	gk
--;

3975 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

3976 i‡(
	gÀ·right
)

3977 
	gmhi
 = 
mu…add
(
C
, 
mhi
, 10, 0);

3978 
	gûim
 = 
ûim1
;

3981 i‡(
	gûim
 <0 && (
mode
 == 3 || mode == 5)) {

3982 i‡(
ûim
 < 0 || 
cmp
(
C
, 
b
,
S
 = 
mu…add
(C, S,5,0)) <= 0) {

3984 
no_digôs
:

3985 
k
 = -1 - 
ndigôs
;

3986 
	gªt
;

3988 
	g⁄e_digô
:

3989 *
s
++ = '1';

3990 
	gk
++;

3991 
	gªt
;

3993 i‡(
	gÀ·right
) {

3994 i‡(
	gm2
 > 0)

3995 
	gmhi
 = 
lshi·
(
C
, 
mhi
, 
m2
);

4001 
	gmlo
 = 
mhi
;

4002 i‡(
	g•ec_ˇ£
) {

4003 
	gmhi
 = 
BÆloc
(
C
, 
mhi
->
k
);

4004 
Bc›y
(
mhi
, 
mlo
);

4005 
	gmhi
 = 
lshi·
(
C
, 
mhi
, 
Log2P
);

4008 
	gi
 = 1;;i++) {

4009 
	gdig
 = 
qu‹em
(
C
, 
b
,
S
) + '0';

4013 
	gj
 = 
cmp
(
C
, 
b
, 
mlo
);

4014 
	gdñè
 = 
diff
(
C
, 
S
, 
mhi
);

4015 
	gj1
 = 
dñè
->
sign
 ? 1 : 
cmp
(
C
, 
b
, delta);

4016 
B‰ì
(
C
, 
dñè
);

4017 #i‚de‡
ROUND_BIASED


4018 i‡(
	gj1
 =0 && 
mode
 !1 && !(
w‹d1
(&
u
) & 1)

4019 #ifde‡
H⁄‹_FLT_ROUNDS


4020 && 
Roundög
 >= 1

4023 i‡(
dig
 == '9')

4024 
round_9_up
;

4025 i‡(
	gj
 > 0)

4026 
	gdig
++;

4027 #ifde‡
SET_INEXACT


4028 i‡(!
	gb
->
	gx
[0] && b->
	gwds
 <= 1)

4029 
öexa˘
 = 0;

4031 *
	gs
++ = 
dig
;

4032 
	gªt
;

4035 i‡(
	gj
 < 0 || (j =0 && 
mode
 != 1

4036 #i‚de‡
ROUND_BIASED


4037 && !(
w‹d1
(&
u
) & 1)

4040 i‡(!
b
->
x
[0] && b->
wds
 <= 1) {

4041 #ifde‡
SET_INEXACT


4042 
öexa˘
 = 0;

4044 
	gac˚±_dig
;

4046 #ifde‡
H⁄‹_FLT_ROUNDS


4047 i‡(
	gmode
 > 1)

4048 
	gRoundög
) {

4049 0: 
ac˚±_dig
;

4050 2: 
kìp_dig
;

4053 i‡(
	gj1
 > 0) {

4054 
	gb
 = 
lshi·
(
C
, 
b
, 1);

4055 
	gj1
 = 
cmp
(
C
, 
b
, 
S
);

4056 #ifde‡
ROUND_BIASED


4057 i‡(
	gj1
 >= 0

4059 i‡((
j1
 > 0 || (j1 =0 && 
dig
 & 1))

4061 && 
dig
++ == '9')

4062 
round_9_up
;

4064 
	gac˚±_dig
:

4065 *
s
++ = 
dig
;

4066 
	gªt
;

4068 i‡(
	gj1
 > 0) {

4069 #ifde‡
H⁄‹_FLT_ROUNDS


4070 i‡(!
	gRoundög
)

4071 
	gac˚±_dig
;

4073 i‡(
	gdig
 == '9') {

4074 
round_9_up
:

4075 *
s
++ = '9';

4076 
	groundoff
;

4078 *
	gs
++ = 
dig
 + 1;

4079 
	gªt
;

4081 #ifde‡
H⁄‹_FLT_ROUNDS


4082 
	gkìp_dig
:

4084 *
s
++ = 
dig
;

4085 i‡(
	gi
 =
ûim
)

4087 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

4088 i‡(
	gmlo
 =
mhi
)

4089 
mlo
 = 
mhi
 = 
mu…add
(
C
, mhi, 10, 0);

4091 
	gmlo
 = 
mu…add
(
C
, 
mlo
, 10, 0);

4092 
	gmhi
 = 
mu…add
(
C
, 
mhi
, 10, 0);

4097 
	gi
 = 1;; i++) {

4098 *
	gs
++ = 
dig
 = 
qu‹em
(
C
, 
b
,
S
) + '0';

4099 i‡(!
	gb
->
	gx
[0] && b->
	gwds
 <= 1) {

4100 #ifde‡
SET_INEXACT


4101 
öexa˘
 = 0;

4103 
	gªt
;

4105 i‡(
	gi
 >
ûim
)

4107 
	gb
 = 
mu…add
(
C
, 
b
, 10, 0);

4112 #ifde‡
H⁄‹_FLT_ROUNDS


4113 
	gRoundög
) {

4114 0: 
åimzîos
;

4115 2: 
roundoff
;

4118 
	gb
 = 
lshi·
(
C
, 
b
, 1);

4119 
	gj
 = 
cmp
(
C
, 
b
, 
S
);

4120 #ifde‡
ROUND_BIASED


4121 i‡(
	gj
 >= 0)

4123 i‡(
j
 > 0 || (j =0 && 
dig
 & 1))

4126 
roundoff
:

4127 *--
s
 == '9')

4128 i‡(
s
 =
s0
) {

4129 
k
++;

4130 *
	gs
++ = '1';

4131 
	gªt
;

4133 ++*
	gs
++;

4136 #ifde‡
H⁄‹_FLT_ROUNDS


4137 
	gåimzîos
:

4139 *--
s
 == '0');

4140 
	gs
++;

4142 
	gªt
:

4143 
B‰ì
(
C
, 
S
);

4144 i‡(
	gmhi
) {

4145 i‡(
	gmlo
 && mlÿ!
mhi
)

4146 
B‰ì
(
C
, 
mlo
);

4147 
B‰ì
(
C
, 
mhi
);

4149 
	gªt1
:

4150 #ifde‡
SET_INEXACT


4151 i‡(
öexa˘
) {

4152 i‡(!
ﬁdöexa˘
) {

4153 
w‹d0
(&
u
Ë
Exp_1
 + (70 << 
Exp_shi·
);

4154 
w‹d1
(&
u
) = 0;

4155 
dvÆ
(&
u
) += 1.;

4158 i‡(!
	gﬁdöexa˘
)

4159 
˛ór_öexa˘
();

4161 
B‰ì
(
C
, 
b
);

4162 *
	gs
 = 0;

4163 *
	gde˝t
 = 
k
 + 1;

4164 i‡(
	grve
)

4165 *
	grve
 = 
s
;

4166  
	gs0
;

4168 #ifde‡
__˝lu•lus


4204 
jvp_dtﬂ_fmt
(
dtﬂ_c⁄ãxt
* 
C
, *
b
, 
x
)

4206 
	gi
, 
	gk
;

4207 *
	gs
;

4208 
	gde˝t
, 
	gj
, 
	gsign
;

4209 *
	gb0
, *
	gs0
, *
	g£
;

4211 
	gb0
 = 
b
;

4212 #ifde‡
IGNORE_ZERO_SIGN


4213 i‡(!
	gx
) {

4214 *
	gb
++ = '0';

4215 *
	gb
 = 0;

4216 
	gd⁄e
;

4219 
	gs
 = 
s0
 = 
jvp_dtﬂ
(
C
, 
x
, 0, 0, &
de˝t
, &
sign
, &
£
);

4220 i‡(
	gsign
)

4221 *
	gb
++ = '-';

4222 i‡(
	gde˝t
 == 9999) {

4223 (*
b
++ = *
s
++));

4224 
	gd⁄e0
;

4226 i‡(
	gde˝t
 <-4 || 
de˝t
 > 
£
 - 
s
 + 15) {

4227 *
b
++ = *
s
++;

4228 i‡(*
	gs
) {

4229 *
	gb
++ = '.';

4230 (*
	gb
 = *
s
++))

4231 
b
++;

4233 *
	gb
++ = 'e';

4235 i‡(--
	gde˝t
 < 0) {

4236 *
	gb
++ = '-';

4237 
	gde˝t
 = -
de˝t
;

4240 *
	gb
++ = '+';

4241 
	gj
 = 2, 
	gk
 = 10; 10*k <
de˝t
; j++, k *= 10);

4243 
	gi
 = 
de˝t
 / 
k
;

4244 *
	gb
++ = 
i
 + '0';

4245 i‡(--
	gj
 <= 0)

4247 
	gde˝t
 -
i
*
k
;

4248 
	gde˝t
 *= 10;

4250 *
	gb
 = 0;

4252 i‡(
	gde˝t
 <= 0) {

4253 *
b
++ = '0';

4254 *
	gb
++ = '.';

4255 ; 
	gde˝t
 < 0; decpt++)

4256 *
	gb
++ = '0';

4257 (*
	gb
++ = *
s
++));

4260 (*
	gb
 = *
s
++)) {

4261 
b
++;

4262 i‡(--
	gde˝t
 =0 && *
s
)

4263 *
b
++ = '.';

4265 ; 
	gde˝t
 > 0; decpt--)

4266 *
	gb
++ = '0';

4267 *
	gb
 = 0;

4269 
	gd⁄e0
:

4270 
jvp_‰ìdtﬂ
(
C
, 
s0
);

4271 
	gd⁄e
;

4272 
	gd⁄e
:

4273  
b0
;

	@src/jv_dtoa.h

1 #i‚de‡
JV_DTOA_H


2 
	#JV_DTOA_H


	)

3 
	#Kmax
 7

	)

5 
	gBigöt
;

6 
	sdtﬂ_c⁄ãxt
 {

7 
Bigöt
 *
	m‰ìli°
[
Kmax
+1];

8 
Bigöt
 *
	mp5s
;

11 
jvp_dtﬂ_c⁄ãxt_öô
(
dtﬂ_c⁄ãxt
* 
˘x
);

12 
jvp_dtﬂ_c⁄ãxt_‰ì
(
dtﬂ_c⁄ãxt
* 
˘x
);

14 
jvp_°πod
(
dtﬂ_c⁄ãxt
* 
C
, c⁄° * 
s
, ** 
£
);

17 * 
jvp_dtﬂ
(
dtﬂ_c⁄ãxt
* 
C
, 
dd
, 
mode
, 
ndigôs
, *
de˝t
, *
sign
, **
rve
);

18 
jvp_‰ìdtﬂ
(
dtﬂ_c⁄ãxt
* 
C
, *
s
);

20 
	#JVP_DTOA_FMT_MAX_LEN
 64

	)

21 * 
jvp_dtﬂ_fmt
(
dtﬂ_c⁄ãxt
* 
C
, *
b
, 
x
);

	@src/jv_dtoa_tsd.c

1 
	~<°dlib.h
>

2 
	~<°dio.h
>

4 
	~"jv_thªad.h
"

5 
	~"jv_dtﬂ_tsd.h
"

6 
	~"jv_dtﬂ.h
"

7 
	~"jv_Æloc.h
"

9 #i‚de‡
WIN32


10 
±hªad_⁄˚_t
 
	gdtﬂ_˘x_⁄˚
 = 
PTHREAD_ONCE_INIT
;

13 
±hªad_key_t
 
	gdtﬂ_˘x_key
;

14 
	$tsd_dtﬂ_˘x_dt‹
(*
˘x
) {

15 i‡(
˘x
) {

16 
	`jvp_dtﬂ_c⁄ãxt_‰ì
((
dtﬂ_c⁄ãxt
 *)
˘x
);

17 
	`jv_mem_‰ì
(
˘x
);

19 
	}
}

21 #i‚de‡
WIN32


24 
	$jv_tsd_dtﬂ_˘x_föi
() {

25 
dtﬂ_c⁄ãxt
 *
˘x
 = 
	`±hªad_gë•ecific
(
dtﬂ_˘x_key
);

26 
	`tsd_dtﬂ_˘x_dt‹
(
˘x
);

27 
	`±hªad_£t•ecific
(
dtﬂ_˘x_key
, 
NULL
);

28 
	}
}

30 #i‚de‡
WIN32


33 
	$jv_tsd_dtﬂ_˘x_öô
() {

34 i‡(
	`±hªad_key_¸óã
(&
dtﬂ_˘x_key
, 
tsd_dtﬂ_˘x_dt‹
) != 0) {

35 
	`Ârötf
(
°dîr
, "error: cannot createÅhread specific key");

36 
	`ab‹t
();

38 #i‚de‡
WIN32


39 
	`©exô
(
jv_tsd_dtﬂ_˘x_föi
);

41 
	}
}

43 
ölöe
 
dtﬂ_c⁄ãxt
 *
	$tsd_dtﬂ_c⁄ãxt_gë
() {

44 #i‚de‡
WIN32


45 
	`±hªad_⁄˚
(&
dtﬂ_˘x_⁄˚
, 
jv_tsd_dtﬂ_˘x_öô
);

47 
dtﬂ_c⁄ãxt
 *
˘x
 = (dtﬂ_c⁄ãxt*)
	`±hªad_gë•ecific
(
dtﬂ_˘x_key
);

48 i‡(!
˘x
) {

49 
˘x
 = 
	`mÆloc
((
dtﬂ_c⁄ãxt
));

50 
	`jvp_dtﬂ_c⁄ãxt_öô
(
˘x
);

51 i‡(
	`±hªad_£t•ecific
(
dtﬂ_˘x_key
, 
˘x
) != 0) {

52 
	`Ârötf
(
°dîr
, "error: cannot setÅhread specific data");

53 
	`ab‹t
();

56  
˘x
;

57 
	}
}

	@src/jv_dtoa_tsd.h

1 #i‚de‡
JV_DTOA_TSD_H


2 
	#JV_DTOA_TSD_H


	)

3 
dtﬂ_c⁄ãxt
 *
tsd_dtﬂ_c⁄ãxt_gë
();

	@src/jv_file.c

1 
	~<sys/°©.h
>

3 
	~<î∫o.h
>

4 
	~<f˙é.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

9 
	~"jv.h
"

10 
	~"jv_unicode.h
"

12 
jv
 
	$jv_lﬂd_fûe
(c⁄° * 
fûíame
, 
øw
) {

13 
°©
 
sb
;

14 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

15 i‡(
fd
 == -1) {

16  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("CouldÇot open %s: %s",

17 
fûíame
,

18 
	`°ªº‹
(
î∫o
)));

20 i‡(
	`f°©
(
fd
, &
sb
Ë=-1 || 
	`S_ISDIR
(sb.
°_mode
)) {

21 
	`˛o£
(
fd
);

22  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("CouldÇot open %s: %s",

23 
fûíame
,

26 
FILE
* 
fûe
 = 
	`fd›í
(
fd
, "r");

27 
jv_∑r£r
* 
∑r£r
 = 
NULL
;

28 
jv
 
d©a
;

29 i‡(!
fûe
) {

30 
	`˛o£
(
fd
);

31  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("CouldÇot open %s: %s",

32 
fûíame
,

33 
	`°ªº‹
(
î∫o
)));

35 i‡(
øw
) {

36 
d©a
 = 
	`jv_°rög
("");

38 
d©a
 = 
	`jv_¨øy
();

39 
∑r£r
 = 
	`jv_∑r£r_√w
(0);

45 c⁄° 
max_utf8_Àn
 = 4;

46 
buf
[4096+
max_utf8_Àn
];

47 !
	`„of
(
fûe
Ë&& !
	`„º‹
(file)) {

48 
size_t
 
n
 = 
	`‰ód
(
buf
, 1, (buf)-
max_utf8_Àn
, 
fûe
);

49 
Àn
 = 0;

51 i‡(
n
 == 0)

53 i‡(
	`jvp_utf8_backåack
(
buf
+(
n
-1), buf, &
Àn
) &&Üen > 0 &&

54 !
	`„of
(
fûe
Ë&& !
	`„º‹
(file)) {

55 
n
 +
	`‰ód
(
buf
+n, 1, 
Àn
, 
fûe
);

58 i‡(
øw
) {

59 
d©a
 = 
	`jv_°rög_≠≥nd_buf
(d©a, 
buf
, 
n
);

61 
	`jv_∑r£r_£t_buf
(
∑r£r
, 
buf
, 
n
, !
	`„of
(
fûe
));

62 
jv
 
vÆue
;

63 
	`jv_is_vÆid
((
vÆue
 = 
	`jv_∑r£r_√xt
(
∑r£r
))))

64 
d©a
 = 
	`jv_¨øy_≠≥nd
(d©a, 
vÆue
);

65 i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
vÆue
))) {

66 
	`jv_‰ì
(
d©a
);

67 
d©a
 = 
vÆue
;

72 i‡(!
øw
)

73 
	`jv_∑r£r_‰ì
(
∑r£r
);

74 
badªad
 = 
	`„º‹
(
fûe
);

75 i‡(
	`f˛o£
(
fûe
Ë!0 || 
badªad
) {

76 
	`jv_‰ì
(
d©a
);

77  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("ErrorÑeading from %s",

78 
fûíame
));

80  
d©a
;

81 
	}
}

	@src/jv_parse.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<as£π.h
>

5 
	~"jv.h
"

6 
	~"jv_dtﬂ.h
"

7 
	~"jv_unicode.h
"

8 
	~"jv_Æloc.h
"

9 
	~"jv_dtﬂ.h
"

11 c⁄° * 
	t¥esu…
;

13 #i‚de‡
MAX_PARSING_DEPTH


14 
	#MAX_PARSING_DEPTH
 (256)

	)

17 
	#TRY
(
x
Ëdÿ{
¥esu…
 
msg__
 = (x); i‡(msg__Ë msg__; } 0)

	)

18 #ifde‡
__GNUC__


19 
	#pfunc
 
	`__©åibuã__
((
w¨n_unu£d_ªsu…
)Ë
¥esu…


	)

21 
	#pfunc
 
¥esu…


	)

24 
	eœ°_£í
 {

25 
	mJV_LAST_NONE
 = 0,

26 
	mJV_LAST_OPEN_ARRAY
 = '[',

27 
	mJV_LAST_OPEN_OBJECT
 = '{',

28 
	mJV_LAST_COLON
 = ':',

29 
	mJV_LAST_COMMA
 = ',',

30 
	mJV_LAST_VALUE
 = 'V',

33 
	sjv_∑r£r
 {

34 c⁄° * 
	mcuº_buf
;

35 
	mcuº_buf_Àngth
;

36 
	mcuº_buf_pos
;

37 
	mcuº_buf_is_∑πül
;

38 
	meof
;

39 
	mbom_°rù_posôi⁄
;

41 
	mÊags
;

43 
jv
* 
	m°ack
;

44 
	m°ackpos
;

45 
	m°ackÀn
;

46 
jv
 
	m∑th
;

47 
œ°_£í
 
	mœ°_£í
;

48 
jv
 
	mouçut
;

49 
jv
 
	m√xt
;

51 * 
	mtokíbuf
;

52 
	mtokípos
;

53 
	mtokíÀn
;

55 
	mlöe
, 
	mcﬁumn
;

57 
dtﬂ_c⁄ãxt
 
	mdtﬂ
;

60 
	mJV_PARSER_NORMAL
,

61 
	mJV_PARSER_STRING
,

62 
	mJV_PARSER_STRING_ESCAPE
,

63 
	mJV_PARSER_WAITING_FOR_RS


64 } 
	m°
;

65 
	mœ°_ch_was_ws
:1;

69 
	$∑r£r_öô
(
jv_∑r£r
* 
p
, 
Êags
) {

70 
p
->
Êags
 = flags;

71 i‡((
p
->
Êags
 & 
JV_PARSE_STREAMING
)) {

72 
p
->
∑th
 = 
	`jv_¨øy
();

74 
p
->
∑th
 = 
	`jv_övÆid
();

75 
p
->
Êags
 &~(
JV_PARSE_STREAM_ERRORS
);

77 
p
->
°ack
 = 0;

78 
p
->
°ackÀn
 =Ö->
°ackpos
 = 0;

79 
p
->
œ°_£í
 = 
JV_LAST_NONE
;

80 
p
->
ouçut
 = 
	`jv_övÆid
();

81 
p
->
√xt
 = 
	`jv_övÆid
();

82 
p
->
tokíbuf
 = 0;

83 
p
->
tokíÀn
 =Ö->
tokípos
 = 0;

84 i‡((
p
->
Êags
 & 
JV_PARSE_SEQ
))

85 
p
->
°
 = 
JV_PARSER_WAITING_FOR_RS
;

87 
p
->
°
 = 
JV_PARSER_NORMAL
;

88 
p
->
eof
 = 0;

89 
p
->
cuº_buf
 = 0;

90 
p
->
cuº_buf_Àngth
 =Ö->
cuº_buf_pos
 =Ö->
cuº_buf_is_∑πül
 = 0;

91 
p
->
bom_°rù_posôi⁄
 = 0;

92 
p
->
œ°_ch_was_ws
 = 0;

93 
p
->
löe
 = 1;

94 
p
->
cﬁumn
 = 0;

95 
	`jvp_dtﬂ_c⁄ãxt_öô
(&
p
->
dtﬂ
);

96 
	}
}

98 
	$∑r£r_ª£t
(
jv_∑r£r
* 
p
) {

99 i‡((
p
->
Êags
 & 
JV_PARSE_STREAMING
)) {

100 
	`jv_‰ì
(
p
->
∑th
);

101 
p
->
∑th
 = 
	`jv_¨øy
();

102 
p
->
°ackÀn
 = 0;

104 
p
->
œ°_£í
 = 
JV_LAST_NONE
;

105 
	`jv_‰ì
(
p
->
ouçut
);

106 
p
->
ouçut
 = 
	`jv_övÆid
();

107 
	`jv_‰ì
(
p
->
√xt
);

108 
p
->
√xt
 = 
	`jv_övÆid
();

109 
i
=0; i<
p
->
°ackpos
; i++)

110 
	`jv_‰ì
(
p
->
°ack
[
i
]);

111 
p
->
°ackpos
 = 0;

112 
p
->
tokípos
 = 0;

113 
p
->
°
 = 
JV_PARSER_NORMAL
;

114 
	}
}

116 
	$∑r£r_‰ì
(
jv_∑r£r
* 
p
) {

117 
	`∑r£r_ª£t
(
p
);

118 
	`jv_‰ì
(
p
->
∑th
);

119 
	`jv_‰ì
(
p
->
ouçut
);

120 
	`jv_mem_‰ì
(
p
->
°ack
);

121 
	`jv_mem_‰ì
(
p
->
tokíbuf
);

122 
	`jvp_dtﬂ_c⁄ãxt_‰ì
(&
p
->
dtﬂ
);

123 
	}
}

125 
pfunc
 
	$vÆue
(
jv_∑r£r
* 
p
, 
jv
 
vÆ
) {

126 i‡((
p
->
Êags
 & 
JV_PARSE_STREAMING
)) {

127 i‡(
	`jv_is_vÆid
(
p
->
√xt
Ë||Ö->
œ°_£í
 =
JV_LAST_VALUE
) {

128 
	`jv_‰ì
(
vÆ
);

131 i‡(
p
->
°ackÀn
 > 0)

132 
p
->
œ°_£í
 = 
JV_LAST_VALUE
;

134 
p
->
œ°_£í
 = 
JV_LAST_NONE
;

136 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

137 
	`jv_‰ì
(
vÆ
);

141 
	`jv_‰ì
(
p
->
√xt
);

142 
p
->
√xt
 = 
vÆ
;

144 
	}
}

146 
	$push
(
jv_∑r£r
* 
p
, 
jv
 
v
) {

147 
	`as£π
(
p
->
°ackpos
 <p->
°ackÀn
);

148 i‡(
p
->
°ackpos
 =p->
°ackÀn
) {

149 
p
->
°ackÀn
 =Ö->stacklen * 2 + 10;

150 
p
->
°ack
 = 
	`jv_mem_ªÆloc
’->°ack,Ö->
°ackÀn
 * (
jv
));

152 
	`as£π
(
p
->
°ackpos
 <Ö->
°ackÀn
);

153 
p
->
°ack
[p->
°ackpos
++] = 
v
;

154 
	}
}

156 
pfunc
 
	$∑r£_tokí
(
jv_∑r£r
* 
p
, 
ch
) {

157 
ch
) {

159 i‡(
p
->
°ackpos
 >
MAX_PARSING_DEPTH
)  "Exceeds depthÜimit forÖarsing";

160 i‡(
	`jv_is_vÆid
(
p
->
√xt
))  "Expected separator between values";

161 
	`push
(
p
, 
	`jv_¨øy
());

165 i‡(
p
->
°ackpos
 >
MAX_PARSING_DEPTH
)  "Exceeds depthÜimit forÖarsing";

166 i‡(
	`jv_is_vÆid
(
p
->
√xt
))  "Expected separator between values";

167 
	`push
(
p
, 
	`jv_obje˘
());

171 i‡(!
	`jv_is_vÆid
(
p
->
√xt
))

173 i‡(
p
->
°ackpos
 =0 || 
	`jv_gë_köd
’->
°ack
[p->°ackpos-1]Ë!
JV_KIND_OBJECT
)

175 i‡(
	`jv_gë_köd
(
p
->
√xt
Ë!
JV_KIND_STRING
)

177 
	`push
(
p
,Ö->
√xt
);

178 
p
->
√xt
 = 
	`jv_övÆid
();

182 i‡(!
	`jv_is_vÆid
(
p
->
√xt
))

184 i‡(
p
->
°ackpos
 == 0)

186 i‡(
	`jv_gë_köd
(
p
->
°ack
[p->
°ackpos
-1]Ë=
JV_KIND_ARRAY
) {

187 
p
->
°ack
[p->
°ackpos
-1] = 
	`jv_¨øy_≠≥nd
’->°ack[p->°ackpos-1],Ö->
√xt
);

188 
p
->
√xt
 = 
	`jv_övÆid
();

189 } i‡(
	`jv_gë_köd
(
p
->
°ack
[p->
°ackpos
-1]Ë=
JV_KIND_STRING
) {

190 
	`as£π
(
p
->
°ackpos
 > 1 && 
	`jv_gë_köd
’->
°ack
[p->°ackpos-2]Ë=
JV_KIND_OBJECT
);

191 
p
->
°ack
[p->
°ackpos
-2] = 
	`jv_obje˘_£t
(p->stack[p->stackpos-2],

192 
p
->
°ack
[p->
°ackpos
-1],Ö->
√xt
);

193 
p
->
°ackpos
--;

194 
p
->
√xt
 = 
	`jv_övÆid
();

202 i‡(
p
->
°ackpos
 =0 || 
	`jv_gë_köd
’->
°ack
[p->°ackpos-1]Ë!
JV_KIND_ARRAY
)

204 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

205 
p
->
°ack
[p->
°ackpos
-1] = 
	`jv_¨øy_≠≥nd
’->°ack[p->°ackpos-1],Ö->
√xt
);

206 
p
->
√xt
 = 
	`jv_övÆid
();

208 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
p
->
°ack
[p->
°ackpos
-1])) != 0) {

213 
	`jv_‰ì
(
p
->
√xt
);

214 
p
->
√xt
 =Ö->
°ack
[--p->
°ackpos
];

218 i‡(
p
->
°ackpos
 == 0)

220 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

221 i‡(
	`jv_gë_köd
(
p
->
°ack
[p->
°ackpos
-1]Ë!
JV_KIND_STRING
)

223 
	`as£π
(
p
->
°ackpos
 > 1 && 
	`jv_gë_köd
’->
°ack
[p->°ackpos-2]Ë=
JV_KIND_OBJECT
);

224 
p
->
°ack
[p->
°ackpos
-2] = 
	`jv_obje˘_£t
(p->stack[p->stackpos-2],

225 
p
->
°ack
[p->
°ackpos
-1],Ö->
√xt
);

226 
p
->
°ackpos
--;

227 
p
->
√xt
 = 
	`jv_övÆid
();

229 i‡(
	`jv_gë_köd
(
p
->
°ack
[p->
°ackpos
-1]Ë!
JV_KIND_OBJECT
)

231 i‡(
	`jv_obje˘_Àngth
(
	`jv_c›y
(
p
->
°ack
[p->
°ackpos
-1])) != 0)

234 
	`jv_‰ì
(
p
->
√xt
);

235 
p
->
√xt
 =Ö->
°ack
[--p->
°ackpos
];

239 
	}
}

241 
pfunc
 
	$°ªam_tokí
(
jv_∑r£r
* 
p
, 
ch
) {

242 
jv_köd
 
k
;

243 
jv
 
œ°
;

245 
ch
) {

247 i‡(
	`jv_is_vÆid
(
p
->
√xt
))

249 
p
->
∑th
 = 
	`jv_¨øy_≠≥nd
’->∑th, 
	`jv_numbî
(0));

250 
p
->
œ°_£í
 = 
JV_LAST_OPEN_ARRAY
;

251 
p
->
°ackÀn
++;

255 i‡(
p
->
œ°_£í
 =
JV_LAST_VALUE
)

258 
p
->
∑th
 = 
	`jv_¨øy_≠≥nd
’->∑th, 
	`jv_nuŒ
());

259 
p
->
œ°_£í
 = 
JV_LAST_OPEN_OBJECT
;

260 
p
->
°ackÀn
++;

264 
œ°
 = 
	`jv_övÆid
();

265 i‡(
p
->
°ackÀn
 =0 || 
	`jv_gë_köd
(
œ°
 = 
	`jv_¨øy_gë
(
	`jv_c›y
’->
∑th
),Ö->°ackÀ¿- 1)Ë=
JV_KIND_NUMBER
) {

266 
	`jv_‰ì
(
œ°
);

269 
	`jv_‰ì
(
œ°
);

270 i‡(!
	`jv_is_vÆid
(
p
->
√xt
Ë||Ö->
œ°_£í
 =
JV_LAST_NONE
)

272 i‡(
	`jv_gë_köd
(
p
->
√xt
Ë!
JV_KIND_STRING
)

274 i‡(
p
->
œ°_£í
 !
JV_LAST_VALUE
)

276 
p
->
œ°_£í
 = 
JV_LAST_COLON
;

277 
p
->
∑th
 = 
	`jv_¨øy_£t
’->∑th,Ö->
°ackÀn
 - 1,Ö->
√xt
);

278 
p
->
√xt
 = 
	`jv_övÆid
();

282 i‡(
p
->
œ°_£í
 !
JV_LAST_VALUE
)

284 i‡(
p
->
°ackÀn
 == 0)

286 
œ°
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
p
->
∑th
),Ö->
°ackÀn
 - 1);

287 
k
 = 
	`jv_gë_köd
(
œ°
);

288 i‡(
k
 =
JV_KIND_NUMBER
) {

289 
idx
 = 
	`jv_numbî_vÆue
(
œ°
);

291 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

292 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
),Ö->
√xt
);

293 
p
->
√xt
 = 
	`jv_övÆid
();

295 
p
->
∑th
 = 
	`jv_¨øy_£t
’->∑th,Ö->
°ackÀn
 - 1, 
	`jv_numbî
(
idx
 + 1));

296 
p
->
œ°_£í
 = 
JV_LAST_COMMA
;

297 } i‡(
k
 =
JV_KIND_STRING
) {

298 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

299 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
),Ö->
√xt
);

300 
p
->
√xt
 = 
	`jv_övÆid
();

302 
p
->
∑th
 = 
	`jv_¨øy_£t
’->∑th,Ö->
°ackÀn
 - 1, 
	`jv_åue
());

303 
p
->
œ°_£í
 = 
JV_LAST_COMMA
;

305 
	`as£π
(
k
 =
JV_KIND_NULL
);

308 
	`jv_‰ì
(
œ°
);

311 
	`jv_‰ì
(
œ°
);

315 i‡(
p
->
°ackÀn
 == 0)

317 i‡(
p
->
œ°_£í
 =
JV_LAST_COMMA
)

319 i‡(
p
->
œ°_£í
 =
JV_LAST_OPEN_ARRAY
)

320 
	`as£π
(!
	`jv_is_vÆid
(
p
->
√xt
));

322 
œ°
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
p
->
∑th
),Ö->
°ackÀn
 - 1);

323 
k
 = 
	`jv_gë_köd
(
œ°
);

324 
	`jv_‰ì
(
œ°
);

326 i‡(
k
 !
JV_KIND_NUMBER
)

328 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

329 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
),Ö->
√xt
, 
	`jv_åue
());

330 
p
->
√xt
 = 
	`jv_övÆid
();

331 } i‡(
p
->
œ°_£í
 !
JV_LAST_OPEN_ARRAY
) {

332 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
));

335 
p
->
∑th
 = 
	`jv_¨øy_¶i˚
’->∑th, 0, --’->
°ackÀn
));

337 
	`jv_‰ì
(
p
->
√xt
);

338 
p
->
√xt
 = 
	`jv_övÆid
();

340 i‡(
p
->
œ°_£í
 =
JV_LAST_OPEN_ARRAY
)

341 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
), 
	`jv_¨øy
());

343 i‡(
p
->
°ackÀn
 == 0)

344 
p
->
œ°_£í
 = 
JV_LAST_NONE
;

346 
p
->
œ°_£í
 = 
JV_LAST_VALUE
;

350 i‡(
p
->
°ackÀn
 == 0)

352 i‡(
p
->
œ°_£í
 =
JV_LAST_COMMA
)

354 i‡(
p
->
œ°_£í
 =
JV_LAST_OPEN_OBJECT
)

355 
	`as£π
(!
	`jv_is_vÆid
(
p
->
√xt
));

357 
œ°
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
p
->
∑th
),Ö->
°ackÀn
 - 1);

358 
k
 = 
	`jv_gë_köd
(
œ°
);

359 
	`jv_‰ì
(
œ°
);

360 i‡(
k
 =
JV_KIND_NUMBER
)

363 i‡(
	`jv_is_vÆid
(
p
->
√xt
)) {

364 i‡(
k
 !
JV_KIND_STRING
)

366 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
),Ö->
√xt
, 
	`jv_åue
());

367 
p
->
√xt
 = 
	`jv_övÆid
();

370 i‡(
p
->
œ°_£í
 =
JV_LAST_COLON
)

373 i‡(
p
->
œ°_£í
 =
JV_LAST_COMMA
)

376 i‡(
p
->
œ°_£í
 =
JV_LAST_OPEN_ARRAY
)

378 i‡(
p
->
œ°_£í
 !
JV_LAST_VALUE
 &&Ö->œ°_£í !
JV_LAST_OPEN_OBJECT
)

380 i‡(
p
->
œ°_£í
 !
JV_LAST_OPEN_OBJECT
)

381 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
));

383 
p
->
∑th
 = 
	`jv_¨øy_¶i˚
’->∑th, 0, --’->
°ackÀn
));

384 
	`jv_‰ì
(
p
->
√xt
);

385 
p
->
√xt
 = 
	`jv_övÆid
();

387 i‡(
p
->
œ°_£í
 =
JV_LAST_OPEN_OBJECT
)

388 
p
->
ouçut
 = 
	`JV_ARRAY
(
	`jv_c›y
’->
∑th
), 
	`jv_obje˘
());

390 i‡(
p
->
°ackÀn
 == 0)

391 
p
->
œ°_£í
 = 
JV_LAST_NONE
;

393 
p
->
œ°_£í
 = 
JV_LAST_VALUE
;

397 
	}
}

399 
	$tokíadd
(
jv_∑r£r
* 
p
, 
c
) {

400 
	`as£π
(
p
->
tokípos
 <p->
tokíÀn
);

401 i‡(
p
->
tokípos
 >’->
tokíÀn
 - 1)) {

402 
p
->
tokíÀn
 =Ö->tokenlen*2 + 256;

403 
p
->
tokíbuf
 = 
	`jv_mem_ªÆloc
’->tokíbuf,Ö->
tokíÀn
);

405 
	`as£π
(
p
->
tokípos
 <Ö->
tokíÀn
);

406 
p
->
tokíbuf
[p->
tokípos
++] = 
c
;

407 
	}
}

409 
	$unhex4
(* 
hex
) {

410 
r
 = 0;

411 
i
=0; i<4; i++) {

412 
c
 = *
hex
++;

413 
n
;

414 i‡('0' <
c
 && c <'9'Ë
n
 = c - '0';

415 i‡('a' <
c
 && c <'f'Ë
n
 = c - 'a' + 10;

416 i‡('A' <
c
 && c <'F'Ë
n
 = c - 'A' + 10;

418 
r
 <<= 4;

419 
r
 |
n
;

421  
r
;

422 
	}
}

424 
pfunc
 
	$found_°rög
(
jv_∑r£r
* 
p
) {

425 * 
ö
 = 
p
->
tokíbuf
;

426 * 
out
 = 
p
->
tokíbuf
;

427 * 
íd
 = 
p
->
tokíbuf
 +Ö->
tokípos
;

429 
ö
 < 
íd
) {

430 
c
 = *
ö
++;

431 i‡(
c
 == '\\') {

432 i‡(
ö
 >
íd
)

434 
c
 = *
ö
++;

435 
c
) {

438 '/': *
out
++ = 
c
; ;

439 'b': *
out
++ = '\b'; ;

440 'f': *
out
++ = '\f'; ;

441 't': *
out
++ = '\t'; ;

442 'n': *
out
++ = '\n'; ;

443 'r': *
out
++ = '\r'; ;

447 i‡(
ö
 + 4 > 
íd
)

449 
hexvÆue
 = 
	`unhex4
(
ö
);

450 i‡(
hexvÆue
 < 0)

452 
codïoöt
 = ()
hexvÆue
;

453 
ö
 += 4;

454 i‡(0xD800 <
codïoöt
 && codepoint <= 0xDBFF) {

456 i‡(
ö
 + 6 > 
íd
 || in[0] != '\\' || in[1] != 'u')

458 
suºog©e
 = 
	`unhex4
(
ö
+2);

459 i‡(!(0xDC00 <
suºog©e
 && surrogate <= 0xDFFF))

461 
ö
 += 6;

462 
codïoöt
 = 0x10000 + (((codepoint - 0xD800) << 10)

463 |(
suºog©e
 - 0xDC00));

465 i‡(
codïoöt
 > 0x10FFFF)

466 
codïoöt
 = 0xFFFD;

467 
out
 +
	`jvp_utf8_ícode
(
codïoöt
, out);

474 i‡(
c
 > 0 && c < 0x001f)

476 *
out
++ = 
c
;

479 
	`TRY
(
	`vÆue
(
p
, 
	`jv_°rög_sized
’->
tokíbuf
, 
out
 -Ö->tokenbuf)));

480 
p
->
tokípos
 = 0;

482 
	}
}

484 
pfunc
 
	$check_lôîÆ
(
jv_∑r£r
* 
p
) {

485 i‡(
p
->
tokípos
 == 0)  0;

487 c⁄° * 
∑âîn
 = 0;

488 
∂í
;

489 
jv
 
v
;

490 
p
->
tokíbuf
[0]) {

491 't': 
∑âîn
 = "åue"; 
∂í
 = 4; 
v
 = 
	`jv_åue
(); ;

492 'f': 
∑âîn
 = "Ál£"; 
∂í
 = 5; 
v
 = 
	`jv_Ál£
(); ;

493 'n': 
∑âîn
 = "nuŒ"; 
∂í
 = 4; 
v
 = 
	`jv_nuŒ
(); ;

495 i‡(
∑âîn
) {

496 i‡(
p
->
tokípos
 !
∂í
)  "InvalidÜiteral";

497 
i
=0; i<
∂í
; i++)

498 i‡(
p
->
tokíbuf
[
i
] !
∑âîn
[i])

500 
	`TRY
(
	`vÆue
(
p
, 
v
));

503 
p
->
tokíbuf
[p->
tokípos
] = 0;

504 #ifde‡
USE_DECNUM


505 
jv
 
numbî
 = 
	`jv_numbî_wôh_lôîÆ
(
p
->
tokíbuf
);

506 i‡(
	`jv_gë_köd
(
numbî
Ë=
JV_KIND_INVALID
) {

509 
	`TRY
(
	`vÆue
(
p
, 
numbî
));

511 *
íd
 = 0;

512 
d
 = 
	`jvp_°πod
(&
p
->
dtﬂ
,Ö->
tokíbuf
, &
íd
);

513 i‡(
íd
 == 0 || *end != 0) {

516 
	`TRY
(
	`vÆue
(
p
, 
	`jv_numbî
(
d
)));

519 
p
->
tokípos
 = 0;

521 
	}
}

524 
	mLITERAL
,

525 
	mWHITESPACE
,

526 
	mSTRUCTURE
,

527 
	mQUOTE
,

528 
	mINVALID


529 } 
	tch˛ass
;

531 
ch˛ass
 
	$˛assify
(
c
) {

532 
c
) {

537  
WHITESPACE
;

539  
QUOTE
;

546  
STRUCTURE
;

548  
LITERAL
;

550 
	}
}

553 c⁄° 
¥esu…
 
	gOK
 = "outputÖroduced";

555 
	$∑r£_check_d⁄e
(
jv_∑r£r
* 
p
, 
jv
* 
out
) {

556 i‡(
p
->
°ackpos
 =0 && 
	`jv_is_vÆid
’->
√xt
)) {

557 *
out
 = 
p
->
√xt
;

558 
p
->
√xt
 = 
	`jv_övÆid
();

563 
	}
}

565 
	$°ªam_check_d⁄e
(
jv_∑r£r
* 
p
, 
jv
* 
out
) {

566 i‡(
p
->
°ackÀn
 =0 && 
	`jv_is_vÆid
’->
√xt
)) {

567 *
out
 = 
	`JV_ARRAY
(
	`jv_c›y
(
p
->
∑th
),p->
√xt
);

568 
p
->
√xt
 = 
	`jv_övÆid
();

570 } i‡(
	`jv_is_vÆid
(
p
->
ouçut
)) {

571 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
p
->
ouçut
)) > 2) {

574 *
out
 = 
	`jv_¨øy_¶i˚
(
	`jv_c›y
(
p
->
ouçut
), 0, 2);

575 
p
->
ouçut
 = 
	`jv_¨øy_¶i˚
(p->output, 0, 1);

578 *
out
 = 
p
->
ouçut
;

579 
p
->
ouçut
 = 
	`jv_övÆid
();

585 
	}
}

587 
	$∑r£_check_åunˇti⁄
(
jv_∑r£r
* 
p
) {

588  ((
p
->
Êags
 & 
JV_PARSE_SEQ
Ë&& !p->
œ°_ch_was_ws
 && (p->
°ackpos
 > 0 ||Ö->
tokípos
 > 0 || 
	`jv_gë_köd
’->
√xt
Ë=
JV_KIND_NUMBER
));

589 
	}
}

591 
	$°ªam_check_åunˇti⁄
(
jv_∑r£r
* 
p
) {

592 
jv_köd
 
k
 = 
	`jv_gë_köd
(
p
->
√xt
);

593  (
p
->
°ackÀn
 > 0 || 
k
 =
JV_KIND_NUMBER
 || k =
JV_KIND_TRUE
 || k =
JV_KIND_FALSE
 || k =
JV_KIND_NULL
);

594 
	}
}

596 
	$∑r£_is_t›_num
(
jv_∑r£r
* 
p
) {

597  (
p
->
°ackpos
 =0 && 
	`jv_gë_köd
’->
√xt
Ë=
JV_KIND_NUMBER
);

598 
	}
}

600 
	$°ªam_is_t›_num
(
jv_∑r£r
* 
p
) {

601  (
p
->
°ackÀn
 =0 && 
	`jv_gë_köd
’->
√xt
Ë=
JV_KIND_NUMBER
);

602 
	}
}

604 
	#check_d⁄e
(
p
, 
o
) \

605 (((
p
)->
Êags
 & 
JV_PARSE_STREAMING
Ë? 
	`°ªam_check_d⁄e
(’), (
o
)Ë: 
	`∑r£_check_d⁄e
(’), (o)))

	)

607 
	#tokí
(
p
, 
ch
) \

608 (((
p
)->
Êags
 & 
JV_PARSE_STREAMING
Ë? 
	`°ªam_tokí
(’), (
ch
)Ë: 
	`∑r£_tokí
(’), (ch)))

	)

610 
	#check_åunˇti⁄
(
p
) \

611 (((
p
)->
Êags
 & 
JV_PARSE_STREAMING
Ë? 
	`°ªam_check_åunˇti⁄
(’)Ë: 
	`∑r£_check_åunˇti⁄
(’)))

	)

613 
	#is_t›_num
(
p
) \

614 (((
p
)->
Êags
 & 
JV_PARSE_STREAMING
Ë? 
	`°ªam_is_t›_num
(’)Ë: 
	`∑r£_is_t›_num
(’)))

	)

616 
pfunc
 
	$sˇn
(
jv_∑r£r
* 
p
, 
ch
, 
jv
* 
out
) {

617 
p
->
cﬁumn
++;

618 i‡(
ch
 == '\n') {

619 
p
->
löe
++;

620 
p
->
cﬁumn
 = 0;

622 i‡(
ch
 == '\036' ) {

623 i‡(
	`check_åunˇti⁄
(
p
)) {

624 i‡(
	`check_lôîÆ
(
p
Ë=0 && 
	`is_t›_num
(p))

628 
	`TRY
(
	`check_lôîÆ
(
p
));

629 i‡(
p
->
°
 =
JV_PARSER_NORMAL
 && 
	`check_d⁄e
’, 
out
))

630  
OK
;

632 
	`as£π
(!
	`jv_is_vÆid
(*
out
));

633 
	`∑r£r_ª£t
(
p
);

634 
	`jv_‰ì
(*
out
);

635 *
out
 = 
	`jv_övÆid
();

636  
OK
;

638 
¥esu…
 
™swî
 = 0;

639 
p
->
œ°_ch_was_ws
 = 0;

640 i‡(
p
->
°
 =
JV_PARSER_NORMAL
) {

641 
ch˛ass
 
˛s
 = 
	`˛assify
(
ch
);

642 i‡(
˛s
 =
WHITESPACE
)

643 
p
->
œ°_ch_was_ws
 = 1;

644 i‡(
˛s
 !
LITERAL
) {

645 
	`TRY
(
	`check_lôîÆ
(
p
));

646 i‡(
	`check_d⁄e
(
p
, 
out
)Ë
™swî
 = 
OK
;

648 
˛s
) {

649 
LITERAL
:

650 
	`tokíadd
(
p
, 
ch
);

652 
WHITESPACE
:

654 
QUOTE
:

655 
p
->
°
 = 
JV_PARSER_STRING
;

657 
STRUCTURE
:

658 
	`TRY
(
	`tokí
(
p
, 
ch
));

660 
INVALID
:

663 i‡(
	`check_d⁄e
(
p
, 
out
)Ë
™swî
 = 
OK
;

665 i‡(
ch
 ='"' && 
p
->
°
 =
JV_PARSER_STRING
) {

666 
	`TRY
(
	`found_°rög
(
p
));

667 
p
->
°
 = 
JV_PARSER_NORMAL
;

668 i‡(
	`check_d⁄e
(
p
, 
out
)Ë
™swî
 = 
OK
;

670 
	`tokíadd
(
p
, 
ch
);

671 i‡(
ch
 ='\\' && 
p
->
°
 =
JV_PARSER_STRING
) {

672 
p
->
°
 = 
JV_PARSER_STRING_ESCAPE
;

674 
p
->
°
 = 
JV_PARSER_STRING
;

678  
™swî
;

679 
	}
}

681 
jv_∑r£r
* 
	$jv_∑r£r_√w
(
Êags
) {

682 
jv_∑r£r
* 
p
 = 
	`jv_mem_Æloc
((jv_parser));

683 
	`∑r£r_öô
(
p
, 
Êags
);

684 
p
->
Êags
 = flags;

685  
p
;

686 
	}
}

688 
	$jv_∑r£r_‰ì
(
jv_∑r£r
* 
p
) {

689 
	`∑r£r_‰ì
(
p
);

690 
	`jv_mem_‰ì
(
p
);

691 
	}
}

693 c⁄° 
	gUTF8_BOM
[] = {0xEF,0xBB,0xBF};

695 
	$jv_∑r£r_ªmaöög
(
jv_∑r£r
* 
p
) {

696 i‡(
p
->
cuº_buf
 == 0)

698  (
p
->
cuº_buf_Àngth
 -Ö->
cuº_buf_pos
);

699 
	}
}

701 
	$jv_∑r£r_£t_buf
(
jv_∑r£r
* 
p
, c⁄° * 
buf
, 
Àngth
, 
is_∑πül
) {

702 
	`as£π
((
p
->
cuº_buf
 =0 ||Ö->
cuº_buf_pos
 =p->
cuº_buf_Àngth
)

704 
Àngth
 > 0 && 
p
->
bom_°rù_posôi⁄
 < (
UTF8_BOM
)) {

705 i‡(()*
buf
 =
UTF8_BOM
[
p
->
bom_°rù_posôi⁄
]) {

707 
buf
++;

708 
Àngth
--;

709 
p
->
bom_°rù_posôi⁄
++;

711 i‡(
p
->
bom_°rù_posôi⁄
 == 0) {

713 
p
->
bom_°rù_posôi⁄
 = (
UTF8_BOM
);

716 
p
->
bom_°rù_posôi⁄
 = 0xff;

720 
p
->
cuº_buf
 = 
buf
;

721 
p
->
cuº_buf_Àngth
 = 
Àngth
;

722 
p
->
cuº_buf_pos
 = 0;

723 
p
->
cuº_buf_is_∑πül
 = 
is_∑πül
;

724 
	}
}

726 
jv
 
	$make_îr‹
(
jv_∑r£r
*, c⁄° *, ...Ë
	`JV_PRINTF_LIKE
(2, 3);

728 
jv
 
	$make_îr‹
(
jv_∑r£r
* 
p
, c⁄° *
fmt
, ...) {

729 
va_li°
 
≠
;

730 
	`va_°¨t
(
≠
, 
fmt
);

731 
jv
 
e
 = 
	`jv_°rög_vfmt
(
fmt
, 
≠
);

732 
	`va_íd
(
≠
);

733 i‡((
p
->
Êags
 & 
JV_PARSE_STREAM_ERRORS
))

734  
	`JV_ARRAY
(
e
, 
	`jv_c›y
(
p
->
∑th
));

735  
	`jv_övÆid_wôh_msg
(
e
);

736 
	}
}

738 
jv
 
	$jv_∑r£r_√xt
(
jv_∑r£r
* 
p
) {

739 i‡(
p
->
eof
)

740  
	`jv_övÆid
();

741 i‡(!
p
->
cuº_buf
)

742  
	`jv_övÆid
();

743 i‡(
p
->
bom_°rù_posôi⁄
 == 0xff) {

744 i‡(!(
p
->
Êags
 & 
JV_PARSE_SEQ
))

745  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Malformed BOM"));

746 
p
->
°
 =
JV_PARSER_WAITING_FOR_RS
;

747 
	`∑r£r_ª£t
(
p
);

749 
jv
 
vÆue
 = 
	`jv_övÆid
();

750 i‡((
p
->
Êags
 & 
JV_PARSE_STREAMING
Ë&& 
	`°ªam_check_d⁄e
’, &
vÆue
))

751  
vÆue
;

752 
ch
;

753 
¥esu…
 
msg
 = 0;

754 !
msg
 && 
p
->
cuº_buf_pos
 <Ö->
cuº_buf_Àngth
) {

755 
ch
 = 
p
->
cuº_buf
[p->
cuº_buf_pos
++];

756 i‡(
p
->
°
 =
JV_PARSER_WAITING_FOR_RS
) {

757 i‡(
ch
 == '\n') {

758 
p
->
löe
++;

759 
p
->
cﬁumn
 = 0;

761 
p
->
cﬁumn
++;

763 i‡(
ch
 == '\036')

764 
p
->
°
 = 
JV_PARSER_NORMAL
;

767 
msg
 = 
	`sˇn
(
p
, 
ch
, &
vÆue
);

769 i‡(
msg
 =
OK
) {

770  
vÆue
;

771 } i‡(
msg
) {

772 
	`jv_‰ì
(
vÆue
);

773 i‡(
ch
 !'\036' && (
p
->
Êags
 & 
JV_PARSE_SEQ
)) {

775 
p
->
°
 = 
JV_PARSER_WAITING_FOR_RS
;

776 
vÆue
 = 
	`make_îr‹
(
p
, "%†©Üöê%d, cﬁum¿%d (√ed RSÅÿªsync)", 
msg
,Ö->
löe
,Ö->
cﬁumn
);

777 
	`∑r£r_ª£t
(
p
);

778  
vÆue
;

780 
vÆue
 = 
	`make_îr‹
(
p
, "%†©Üöê%d, cﬁum¿%d", 
msg
,Ö->
löe
,Ö->
cﬁumn
);

781 
	`∑r£r_ª£t
(
p
);

782 i‡(!(
p
->
Êags
 & 
JV_PARSE_SEQ
)) {

785 
p
->
cuº_buf
 = 0;

786 
p
->
cuº_buf_pos
 = 0;

788  
vÆue
;

789 } i‡(
p
->
cuº_buf_is_∑πül
) {

790 
	`as£π
(
p
->
cuº_buf_pos
 =p->
cuº_buf_Àngth
);

792  
	`jv_övÆid
();

795 
p
->
eof
 = 1;

796 
	`as£π
(
p
->
cuº_buf_pos
 =p->
cuº_buf_Àngth
);

797 
	`jv_‰ì
(
vÆue
);

798 i‡(
p
->
°
 =
JV_PARSER_WAITING_FOR_RS
)

799  
	`make_îr‹
(
p
, "Unföishedáb™d⁄edÅexà© EOFáàlöê%d, cﬁum¿%d",Ö->
löe
,Ö->
cﬁumn
);

800 i‡(
p
->
°
 !
JV_PARSER_NORMAL
) {

801 
vÆue
 = 
	`make_îr‹
(
p
, "Unföished såögáàEOFáàlöê%d, cﬁum¿%d",Ö->
löe
,Ö->
cﬁumn
);

802 
	`∑r£r_ª£t
(
p
);

803 
p
->
°
 = 
JV_PARSER_WAITING_FOR_RS
;

804  
vÆue
;

806 i‡((
msg
 = 
	`check_lôîÆ
(
p
))) {

807 
vÆue
 = 
	`make_îr‹
(
p
, "%†© EOFáàlöê%d, cﬁum¿%d", 
msg
,Ö->
löe
,Ö->
cﬁumn
);

808 
	`∑r£r_ª£t
(
p
);

809 
p
->
°
 = 
JV_PARSER_WAITING_FOR_RS
;

810  
vÆue
;

812 i‡(((
p
->
Êags
 & 
JV_PARSE_STREAMING
Ë&&Ö->
°ackÀn
 != 0) ||

813 (!(
p
->
Êags
 & 
JV_PARSE_STREAMING
Ë&&Ö->
°ackpos
 != 0)) {

814 
vÆue
 = 
	`make_îr‹
(
p
, "Unföished JSONÅîmáàEOFáàlöê%d, cﬁum¿%d",Ö->
löe
,Ö->
cﬁumn
);

815 
	`∑r£r_ª£t
(
p
);

816 
p
->
°
 = 
JV_PARSER_WAITING_FOR_RS
;

817  
vÆue
;

821 i‡((
p
->
Êags
 & 
JV_PARSE_STREAMING
Ë&& 
	`jv_is_vÆid
’->
√xt
)) {

822 
vÆue
 = 
	`JV_ARRAY
(
	`jv_c›y
(
p
->
∑th
),Ö->
√xt
);

824 
vÆue
 = 
p
->
√xt
;

826 
p
->
√xt
 = 
	`jv_övÆid
();

827 i‡((
p
->
Êags
 & 
JV_PARSE_SEQ
Ë&& !p->
œ°_ch_was_ws
 && 
	`jv_gë_köd
(
vÆue
Ë=
JV_KIND_NUMBER
) {

828 
	`jv_‰ì
(
vÆue
);

829  
	`make_îr‹
(
p
, "PŸítüŒyÅrunˇãdÅ›-ÀvñÇumîi¯vÆuê© EOFáàlöê%d, cﬁum¿%d",Ö->
löe
,Ö->
cﬁumn
);

831  
vÆue
;

833 
	}
}

835 
jv
 
	$jv_∑r£_sized
(c⁄° * 
°rög
, 
Àngth
) {

836 
jv_∑r£r
 
∑r£r
;

837 
	`∑r£r_öô
(&
∑r£r
, 0);

838 
	`jv_∑r£r_£t_buf
(&
∑r£r
, 
°rög
, 
Àngth
, 0);

839 
jv
 
vÆue
 = 
	`jv_∑r£r_√xt
(&
∑r£r
);

840 i‡(
	`jv_is_vÆid
(
vÆue
)) {

841 
jv
 
√xt
 = 
	`jv_∑r£r_√xt
(&
∑r£r
);

842 i‡(
	`jv_is_vÆid
(
√xt
)) {

844 
	`jv_‰ì
(
vÆue
);

845 
	`jv_‰ì
(
√xt
);

846 
vÆue
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("UnexpectedÉxtra JSON values"));

847 } i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
√xt
))) {

849 
	`jv_‰ì
(
vÆue
);

850 
vÆue
 = 
√xt
;

853 
	`jv_‰ì
(
√xt
);

855 } i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
vÆue
))) {

859 
	`jv_‰ì
(
vÆue
);

860 
vÆue
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Expected JSON value"));

862 
	`∑r£r_‰ì
(&
∑r£r
);

864 i‡(!
	`jv_is_vÆid
(
vÆue
Ë&& 
	`jv_övÆid_has_msg
(
	`jv_c›y
(value))) {

865 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
vÆue
);

866 
vÆue
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("%s (whileÖarsing '%s')",

867 
	`jv_°rög_vÆue
(
msg
),

868 
°rög
));

869 
	`jv_‰ì
(
msg
);

871  
vÆue
;

872 
	}
}

874 
jv
 
	$jv_∑r£
(c⁄° * 
°rög
) {

875  
	`jv_∑r£_sized
(
°rög
, 
	`°æí
(string));

876 
	}
}

	@src/jv_print.c

1 
	~<as£π.h
>

2 
	~<°dio.h
>

3 
	~<Êﬂt.h
>

4 
	~<°rög.h
>

6 #ifde‡
WIN32


7 
	~<wödows.h
>

8 
	~<io.h
>

9 
	~<fûópi.h
>

12 
	~"jv.h
"

13 
	~"jv_dtﬂ.h
"

14 
	~"jv_dtﬂ_tsd.h
"

15 
	~"jv_unicode.h
"

16 
	~"jv_Æloc.h
"

17 
	~"jv_ty≥_¥iv©e.h
"

19 #i‚de‡
MAX_PRINT_DEPTH


20 
	#MAX_PRINT_DEPTH
 (256)

	)

23 
	#ESC
 "\033"

	)

24 
	#COL
(
c
Ë(
ESC
 "[" c "m")

	)

25 
	#COLRESET
 (
ESC
 "[0m")

	)

29 c⁄° 
jv_köd
 
	gcﬁ‹_köds
[] =

30 {
JV_KIND_NULL
, 
JV_KIND_FALSE
, 
JV_KIND_TRUE
, 
JV_KIND_NUMBER
,

31 
JV_KIND_STRING
, 
JV_KIND_ARRAY
, 
JV_KIND_OBJECT
};

32 
	gcﬁ‹_bufs
[(
cﬁ‹_köds
)/(color_kinds[0])][16];

33 c⁄° *
	gcﬁ‹_buÂs
[8];

34 c⁄° * 
	gdef_cﬁ‹s
[] =

35 {
COL
("1;30"), COL("0;37"), COL("0;37"), COL("0;37"),

36 
COL
("0;32"), COL("1;37"), COL("1;37")};

37 
	#FIELD_COLOR
 
	`COL
("34;1")

	)

39 c⁄° **
	gcﬁ‹s
 = 
def_cﬁ‹s
;

42 
	$jq_£t_cﬁ‹s
(c⁄° *
c
)

44 c⁄° *
e
;

45 
size_t
 
i
;

47 i‡(
c
 =
NULL
)

49 
cﬁ‹s
 = 
def_cﬁ‹s
;

50 
	`mem£t
(
cﬁ‹_bufs
, 0, (color_bufs));

51 
i
 = 0; i < (
def_cﬁ‹s
) / (def_colors[0]); i++)

52 
cﬁ‹_buÂs
[
i
] = 
def_cﬁ‹s
[i];

53 
i
 = 0; i < (
def_cﬁ‹s
Ë/ (def_cﬁ‹s[0]Ë&& *
c
 !'\0'; i++, c = 
e
) {

54 i‡((
e
 = 
	`°rchr
(
c
, ':')Ë=
NULL
)

55 
e
 = 
c
 + 
	`°æí
(c);

56 i‡((
size_t
)(
e
 - 
c
Ë> (
cﬁ‹_bufs
[
i
]) - 4 )

58 
cﬁ‹_bufs
[
i
][0] = 
ESC
[0];

59 
cﬁ‹_bufs
[
i
][1] = '[';

60 (Ë
	`°∫˝y
(&
cﬁ‹_bufs
[
i
][2], 
c
, 
e
 - c);

61 i‡(
	`°r•n
(&
cﬁ‹_bufs
[
i
][2], "0123456789;"Ë< 
	`°æí
(&color_bufs[i][2]))

63 
cﬁ‹_bufs
[
i
][2 + (
e
 - 
c
)] = 'm';

64 
cﬁ‹_buÂs
[
i
] = 
cﬁ‹_bufs
[i];

65 i‡(
e
[0] == ':')

66 
e
++;

68 
cﬁ‹s
 = 
cﬁ‹_buÂs
;

70 
	}
}

72 
	$put_buf
(c⁄° *
s
, 
Àn
, 
FILE
 *
fout
, 
jv
 *
°rout
, 
is_ây
) {

73 i‡(
°rout
) {

74 *
°rout
 = 
	`jv_°rög_≠≥nd_buf
(*°rout, 
s
, 
Àn
);

76 #ifde‡
WIN32


78 i‡(
is_ây
) {

79 
wch¨_t
 *
ws
;

80 
size_t
 
wl
;

81 i‡(
Àn
 == -1)

82 
Àn
 = 
	`°æí
(
s
);

83 
wl
 = 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
s
, 
Àn
, 
NULL
, 0);

84 
ws
 = 
	`jv_mem_ˇŒoc
((
wl
 + 1), (*ws));

85 i‡(!
ws
)

87 
wl
 = 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
s
, 
Àn
, 
ws
, wl + 1);

88 
ws
[
wl
] = 0;

89 
	`WrôeC⁄sﬁeW
((
HANDLE
)
	`_gë_osfh™dÀ
(
	`fûío
(
fout
)), 
ws
, 
wl
, 
NULL
, NULL);

90 
	`‰ì
(
ws
);

92 
	`fwrôe
(
s
, 1, 
Àn
, 
fout
);

94 
	`fwrôe
(
s
, 1, 
Àn
, 
fout
);

97 
	}
}

99 
	$put_ch¨
(
c
, 
FILE
* 
fout
, 
jv
* 
°rout
, 
T
) {

100 
	`put_buf
(&
c
, 1, 
fout
, 
°rout
, 
T
);

101 
	}
}

103 
	$put_°r
(c⁄° * 
s
, 
FILE
* 
fout
, 
jv
* 
°rout
, 
T
) {

104 
	`put_buf
(
s
, 
	`°æí
(s), 
fout
, 
°rout
, 
T
);

105 
	}
}

107 
	$put_ödít
(
n
, 
Êags
, 
FILE
* 
fout
, 
jv
* 
°rout
, 
T
) {

108 i‡(
Êags
 & 
JV_PRINT_TAB
) {

109 
n
--)

110 
	`put_ch¨
('\t', 
fout
, 
°rout
, 
T
);

112 
n
 *((
Êags
 & (
JV_PRINT_SPACE0
 | 
JV_PRINT_SPACE1
 | 
JV_PRINT_SPACE2
)) >> 8);

113 
n
--)

114 
	`put_ch¨
(' ', 
fout
, 
°rout
, 
T
);

116 
	}
}

118 
	$jvp_dump_°rög
(
jv
 
°r
, 
ascii_⁄ly
, 
FILE
* 
F
, jv* 
S
, 
T
) {

119 
	`as£π
(
	`jv_gë_köd
(
°r
Ë=
JV_KIND_STRING
);

120 c⁄° * 
i
 = 
	`jv_°rög_vÆue
(
°r
);

121 c⁄° * 
íd
 = 
i
 + 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
°r
));

122 c⁄° * 
c°¨t
;

123 
c
 = 0;

124 
buf
[32];

125 
	`put_ch¨
('"', 
F
, 
S
, 
T
);

126 (
i
 = 
	`jvp_utf8_√xt
((
c°¨t
 = i), 
íd
, &
c
))) {

127 
	`as£π
(
c
 != -1);

128 
unicode_esˇ≥
 = 0;

129 i‡(0x20 <
c
 && c <= 0x7E) {

131 i‡(
c
 == '"' || c == '\\') {

132 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

134 
	`put_ch¨
(
c
, 
F
, 
S
, 
T
);

135 } i‡(
c
 < 0x20 || c == 0x7F) {

137 
c
) {

139 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

140 
	`put_ch¨
('b', 
F
, 
S
, 
T
);

143 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

144 
	`put_ch¨
('t', 
F
, 
S
, 
T
);

147 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

148 
	`put_ch¨
('r', 
F
, 
S
, 
T
);

151 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

152 
	`put_ch¨
('n', 
F
, 
S
, 
T
);

155 
	`put_ch¨
('\\', 
F
, 
S
, 
T
);

156 
	`put_ch¨
('f', 
F
, 
S
, 
T
);

159 
unicode_esˇ≥
 = 1;

163 i‡(
ascii_⁄ly
) {

164 
unicode_esˇ≥
 = 1;

166 
	`put_buf
(
c°¨t
, 
i
 - c°¨t, 
F
, 
S
, 
T
);

169 i‡(
unicode_esˇ≥
) {

170 i‡(
c
 <= 0xffff) {

171 
	`¢¥ötf
(
buf
, (buf), "\\u%04x", 
c
);

173 
c
 -= 0x10000;

174 
	`¢¥ötf
(
buf
, (buf), "\\u%04x\\u%04x",

175 0xD800 | ((
c
 & 0xffc00) >> 10),

176 0xDC00 | (
c
 & 0x003ff));

178 
	`put_°r
(
buf
, 
F
, 
S
, 
T
);

181 
	`as£π
(
c
 != -1);

182 
	`put_ch¨
('"', 
F
, 
S
, 
T
);

183 
	}
}

185 
	$put_ªf˙t
(
dtﬂ_c⁄ãxt
* 
C
, 
ªf˙t
, 
FILE
 *
F
, 
jv
* 
S
, 
T
){

186 
buf
[
JVP_DTOA_FMT_MAX_LEN
];

187 
	`put_ch¨
(' ', 
F
, 
S
, 
T
);

188 
	`put_ch¨
('(', 
F
, 
S
, 
T
);

189 
	`put_°r
(
	`jvp_dtﬂ_fmt
(
C
, 
buf
, 
ªf˙t
), 
F
, 
S
, 
T
);

190 
	`put_ch¨
(')', 
F
, 
S
, 
T
);

191 
	}
}

193 
	$jv_dump_ãrm
(
dtﬂ_c⁄ãxt
* 
C
, 
jv
 
x
, 
Êags
, 
ödít
, 
FILE
* 
F
, jv* 
S
) {

194 
buf
[
JVP_DTOA_FMT_MAX_LEN
];

195 c⁄° * 
cﬁ‹
 = 0;

196 
ªf˙t
 = (
Êags
 & 
JV_PRINT_REFCOUNT
Ë? 
	`jv_gë_ªf˙t
(
x
) - 1 : -1;

197 i‡(
Êags
 & 
JV_PRINT_COLOR
) {

198 
i
=0; i<(
cﬁ‹_köds
)/(color_kinds[0]); i++) {

199 i‡(
	`jv_gë_köd
(
x
Ë=
cﬁ‹_köds
[
i
]) {

200 
cﬁ‹
 = 
cﬁ‹s
[
i
];

201 
	`put_°r
(
cﬁ‹
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

206 i‡(
ödít
 > 
MAX_PRINT_DEPTH
) {

207 
	`put_°r
("<skù≥d:Åoÿdìp>", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

208 } 
	`jv_gë_köd
(
x
)) {

210 
JV_KIND_INVALID
:

211 i‡(
Êags
 & 
JV_PRINT_INVALID
) {

212 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
	`jv_c›y
(
x
));

213 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
) {

214 
	`put_°r
("<övÆid:", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

215 
	`jvp_dump_°rög
(
msg
, 
Êags
 | 
JV_PRINT_ASCII
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

216 
	`put_°r
(">", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

218 
	`put_°r
("<övÆid>", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

221 
	`as£π
(0 && "Invalid value");

224 
JV_KIND_NULL
:

225 
	`put_°r
("nuŒ", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

227 
JV_KIND_FALSE
:

228 
	`put_°r
("Ál£", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

230 
JV_KIND_TRUE
:

231 
	`put_°r
("åue", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

233 
JV_KIND_NUMBER
: {

234 i‡(
	`jvp_numbî_is_«n
(
x
)) {

235 
	`jv_dump_ãrm
(
C
, 
	`jv_nuŒ
(), 
Êags
, 
ödít
, 
F
, 
S
);

237 #ifde‡
USE_DECNUM


238 c⁄° * 
lôîÆ_d©a
 = 
	`jv_numbî_gë_lôîÆ
(
x
);

239 i‡(
lôîÆ_d©a
) {

240 
	`put_°r
(
lôîÆ_d©a
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

243 
d
 = 
	`jv_numbî_vÆue
(
x
);

244 i‡(
d
 != d) {

246 
	`put_°r
("nuŒ", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

249 i‡(
d
 > 
DBL_MAX
) d = DBL_MAX;

250 i‡(
d
 < -
DBL_MAX
) d = -DBL_MAX;

251 
	`put_°r
(
	`jvp_dtﬂ_fmt
(
C
, 
buf
, 
d
), 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

254 #ifde‡
USE_DECNUM


259 
JV_KIND_STRING
:

260 
	`jvp_dump_°rög
(
x
, 
Êags
 & 
JV_PRINT_ASCII
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

261 i‡(
Êags
 & 
JV_PRINT_REFCOUNT
)

262 
	`put_ªf˙t
(
C
, 
ªf˙t
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

264 
JV_KIND_ARRAY
: {

265 i‡(
	`jv_¨øy_Àngth
(
	`jv_c›y
(
x
)) == 0) {

266 
	`put_°r
("[]", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

269 
	`put_°r
("[", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

270 i‡(
Êags
 & 
JV_PRINT_PRETTY
) {

271 
	`put_ch¨
('\n', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

272 
	`put_ödít
(
ödít
 + 1, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

274 
	`jv_¨øy_f‹óch
(
x
, 
i
, 
ñem
) {

275 i‡(
i
!=0) {

276 i‡(
Êags
 & 
JV_PRINT_PRETTY
) {

277 
	`put_°r
(",\n", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

278 
	`put_ödít
(
ödít
 + 1, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

280 
	`put_°r
(",", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

283 
	`jv_dump_ãrm
(
C
, 
ñem
, 
Êags
, 
ödít
 + 1, 
F
, 
S
);

284 i‡(
cﬁ‹
Ë
	`put_°r
(cﬁ‹, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

286 i‡(
Êags
 & 
JV_PRINT_PRETTY
) {

287 
	`put_ch¨
('\n', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

288 
	`put_ödít
(
ödít
, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

290 i‡(
cﬁ‹
Ë
	`put_°r
(cﬁ‹, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

291 
	`put_ch¨
(']', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

292 i‡(
Êags
 & 
JV_PRINT_REFCOUNT
)

293 
	`put_ªf˙t
(
C
, 
ªf˙t
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

296 
JV_KIND_OBJECT
: {

297 i‡(
	`jv_obje˘_Àngth
(
	`jv_c›y
(
x
)) == 0) {

298 
	`put_°r
("{}", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

301 
	`put_ch¨
('{', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

302 i‡(
Êags
 & 
JV_PRINT_PRETTY
) {

303 
	`put_ch¨
('\n', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

304 
	`put_ödít
(
ödít
 + 1, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

306 
fú°
 = 1;

307 
i
 = 0;

308 
jv
 
key£t
 = 
	`jv_nuŒ
();

310 
jv
 
key
, 
vÆue
;

311 i‡(
Êags
 & 
JV_PRINT_SORTED
) {

312 i‡(
fú°
) {

313 
key£t
 = 
	`jv_keys
(
	`jv_c›y
(
x
));

314 
i
 = 0;

316 
i
++;

318 i‡(
i
 >
	`jv_¨øy_Àngth
(
	`jv_c›y
(
key£t
))) {

319 
	`jv_‰ì
(
key£t
);

322 
key
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
key£t
), 
i
);

323 
vÆue
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
x
), jv_c›y(
key
));

325 i‡(
fú°
) {

326 
i
 = 
	`jv_obje˘_ôî
(
x
);

328 
i
 = 
	`jv_obje˘_ôî_√xt
(
x
, i);

330 i‡(!
	`jv_obje˘_ôî_vÆid
(
x
, 
i
)) ;

331 
key
 = 
	`jv_obje˘_ôî_key
(
x
, 
i
);

332 
vÆue
 = 
	`jv_obje˘_ôî_vÆue
(
x
, 
i
);

335 i‡(!
fú°
) {

336 i‡(
Êags
 & 
JV_PRINT_PRETTY
){

337 
	`put_°r
(",\n", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

338 
	`put_ödít
(
ödít
 + 1, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

340 
	`put_°r
(",", 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

343 i‡(
cﬁ‹
Ë
	`put_°r
(
COLRESET
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

345 
fú°
 = 0;

346 i‡(
cﬁ‹
Ë
	`put_°r
(
FIELD_COLOR
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

347 
	`jvp_dump_°rög
(
key
, 
Êags
 & 
JV_PRINT_ASCII
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

348 
	`jv_‰ì
(
key
);

349 i‡(
cﬁ‹
Ë
	`put_°r
(
COLRESET
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

351 i‡(
cﬁ‹
Ë
	`put_°r
(cﬁ‹, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

352 
	`put_°r
((
Êags
 & 
JV_PRINT_PRETTY
Ë? ": " : ":", 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

353 i‡(
cﬁ‹
Ë
	`put_°r
(
COLRESET
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

355 
	`jv_dump_ãrm
(
C
, 
vÆue
, 
Êags
, 
ödít
 + 1, 
F
, 
S
);

356 i‡(
cﬁ‹
Ë
	`put_°r
(cﬁ‹, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

358 i‡(
Êags
 & 
JV_PRINT_PRETTY
) {

359 
	`put_ch¨
('\n', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

360 
	`put_ödít
(
ödít
, 
Êags
, 
F
, 
S
, fœg†& 
JV_PRINT_ISATTY
);

362 i‡(
cﬁ‹
Ë
	`put_°r
(cﬁ‹, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

363 
	`put_ch¨
('}', 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

364 i‡(
Êags
 & 
JV_PRINT_REFCOUNT
)

365 
	`put_ªf˙t
(
C
, 
ªf˙t
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

368 
	`jv_‰ì
(
x
);

369 i‡(
cﬁ‹
) {

370 
	`put_°r
(
COLRESET
, 
F
, 
S
, 
Êags
 & 
JV_PRINT_ISATTY
);

372 
	}
}

374 
	$jv_dumpf
(
jv
 
x
, 
FILE
 *
f
, 
Êags
) {

375 
	`jv_dump_ãrm
(
	`tsd_dtﬂ_c⁄ãxt_gë
(), 
x
, 
Êags
, 0, 
f
, 0);

376 
	}
}

378 
	$jv_dump
(
jv
 
x
, 
Êags
) {

379 
	`jv_dumpf
(
x
, 
°dout
, 
Êags
);

380 
	}
}

383 
	$jv_show
(
jv
 
x
, 
Êags
) {

384 i‡(
Êags
 == -1)

385 
Êags
 = 
JV_PRINT_PRETTY
 | 
JV_PRINT_COLOR
 | 
	`JV_PRINT_INDENT_FLAGS
(2);

386 
	`jv_dumpf
(
	`jv_c›y
(
x
), 
°dîr
, 
Êags
 | 
JV_PRINT_INVALID
);

387 
	`fÊush
(
°dîr
);

388 
	}
}

390 
jv
 
	$jv_dump_°rög
(
jv
 
x
, 
Êags
) {

391 
jv
 
s
 = 
	`jv_°rög
("");

392 
	`jv_dump_ãrm
(
	`tsd_dtﬂ_c⁄ãxt_gë
(), 
x
, 
Êags
, 0, 0, &
s
);

393  
s
;

394 
	}
}

396 *
	$jv_dump_°rög_åunc
(
jv
 
x
, *
outbuf
, 
size_t
 
bufsize
) {

397 
x
 = 
	`jv_dump_°rög
(x,0);

398 c⁄° * 
p
 = 
	`jv_°rög_vÆue
(
x
);

399 c⁄° 
size_t
 
Àn
 = 
	`°æí
(
p
);

400 
	`°∫˝y
(
outbuf
, 
p
, 
bufsize
);

401 
outbuf
[
bufsize
 - 1] = 0;

402 i‡(
Àn
 > 
bufsize
 - 1 && bufsize >= 4) {

404 
outbuf
[
bufsize
 - 2]='.';

405 
outbuf
[
bufsize
 - 3]='.';

406 
outbuf
[
bufsize
 - 4]='.';

408 
	`jv_‰ì
(
x
);

409  
outbuf
;

410 
	}
}

	@src/jv_thread.h

1 #i‚de‡
JV_THREAD_H


2 
	#JV_THREAD_H


	)

4 #ifde‡
WIN32


5 
	~<wödows.h
>

6 
	~<wö¡.h
>

7 
	~<î∫o.h
>

10 
	s±hªad_muãx
 {

11 
HANDLE
 
	mh
;

12 } 
	t±hªad_muãx_t
;

14 
	#PTHREAD_MUTEX_INITIALIZER
 { 
INVALID_HANDLE_VALUE
 }

	)

16 
ölöe
 

17 
	$±hªad_muãx_öô
(
±hªad_muãx_t
 *
m
)

19 
m
->
h
 = 
	`Cª©eSem≠h‹e
(
NULL
, 1, 1, NULL);

20 i‡(
m
->
h
 =
INVALID_HANDLE_VALUE
)

21  
EAGAIN
;

23 
	}
}

25 
ölöe
 

26 
	$±hªad_muãx_lock
(
±hªad_muãx_t
 *
m
)

28 
HANDLE
 
h
, 
√w_h
;

29 
¸óãd
 = 0;

31 
h
 = 
	`I¡îlockedCom∑ªExch™gePoöãr
(&
m
->h, m->h, m->h);

32 i‡(
h
 =
INVALID_HANDLE_VALUE
 || h =
NULL
) {

33 
¸óãd
 = 1;

34 
√w_h
 = 
	`Cª©eSem≠h‹e
(
NULL
, 0, 1, NULL);

35 i‡(
√w_h
 =
INVALID_HANDLE_VALUE
)

36  
EAGAIN
;

37 i‡(
	`I¡îlockedCom∑ªExch™gePoöãr
(&
m
->
h
, 
√w_h
, h) != h) {

38 
¸óãd
 = 0;

39 
	`Clo£H™dÀ
(
√w_h
);

42 i‡(!
¸óãd
)

43 
	`WaôF‹SögÀObje˘
(
m
->
h
, 
INFINITE
);

45 
	}
}

47 
ölöe
 

48 
	$±hªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m
)

50 i‡(
	`Rñó£Sem≠h‹e
(
m
->
h
, 1, 
NULL
Ë=
FALSE
)

51  
EPERM
;

53 
	}
}

54 
ölöe
 

55 
	$±hªad_muãx_de°roy
(
±hªad_muãx_t
 *
m
)

57 
HANDLE
 
h
;

59 
h
 = 
	`I¡îlockedCom∑ªExch™gePoöãr
(&
m
->h, 
INVALID_HANDLE_VALUE
, m->h);

60 i‡(
h
 !
INVALID_HANDLE_VALUE
)

61 
	`Clo£H™dÀ
(
h
);

63 
	}
}

65 
	t±hªad_key_t
;

66 
±hªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

67 
	`±hªad_£t•ecific
(
±hªad_key_t
, *);

68 *
	`±hªad_gë•ecific
(
±hªad_key_t
);

70 
	~<±hªad.h
>

	@src/jv_type_private.h

1 #i‚de‡
JV_TYPE_PRIVATE


2 
	#JV_TYPE_PRIVATE


	)

4 
jvp_numbî_cmp
(
jv
, jv);

5 
jvp_numbî_is_«n
(
jv
);

	@src/jv_unicode.c

1 
	~<°dio.h
>

2 
	~<as£π.h
>

3 
	~"jv_unicode.h
"

4 
	~"jv_utf8_èbÀs.h
"

11 c⁄° * 
	$jvp_utf8_backåack
(c⁄° * 
°¨t
, c⁄° * 
mö
, *
missög_byãs
) {

12 
	`as£π
(
mö
 <
°¨t
);

13 i‡(
mö
 =
°¨t
) {

14  
mö
;

16 
Àngth
 = 0;

17 
£í
 = 1;

18 
°¨t
 >
mö
 && (
Àngth
 = 
utf8_codög_Àngth
[()*°¨t]Ë=
UTF8_CONTINUATION_BYTE
) {

19 
°¨t
--;

20 
£í
++;

22 i‡(
Àngth
 =0 ||Üígth =
UTF8_CONTINUATION_BYTE
 ||Üígth - 
£í
 < 0) {

23  
NULL
;

25 i‡(
missög_byãs
Ë*missög_byã†
Àngth
 - 
£í
;

26  
°¨t
;

27 
	}
}

29 c⁄° * 
	$jvp_utf8_√xt
(c⁄° * 
ö
, c⁄° * 
íd
, * 
codïoöt_ªt
) {

30 
	`as£π
(
ö
 <
íd
);

31 i‡(
ö
 =
íd
) {

34 
codïoöt
 = -1;

35 
fú°
 = ()
ö
[0];

36 
Àngth
 = 
utf8_codög_Àngth
[
fú°
];

37 i‡((
fú°
 & 0x80) == 0) {

39 
codïoöt
 = 
fú°
;

40 
Àngth
 = 1;

41 } i‡(
Àngth
 =0 ||Üígth =
UTF8_CONTINUATION_BYTE
) {

43 
Àngth
 = 1;

44 } i‡(
ö
 + 
Àngth
 > 
íd
) {

46 
Àngth
 = 
íd
 - 
ö
;

48 
codïoöt
 = (()
ö
[0]Ë& 
utf8_codög_bôs
[
fú°
];

49 
i
=1; i<
Àngth
; i++) {

50 
ch
 = ()
ö
[
i
];

51 i‡(
utf8_codög_Àngth
[
ch
] !
UTF8_CONTINUATION_BYTE
){

53 
codïoöt
 = -1;

54 
Àngth
 = 
i
;

57 
codïoöt
 = (codïoöà<< 6Ë| (
ch
 & 0x3f);

59 i‡(
codïoöt
 < 
utf8_fú°_codïoöt
[
Àngth
]) {

61 
codïoöt
 = -1;

63 i‡(0xD800 <
codïoöt
 && codepoint <= 0xDFFF) {

65 
codïoöt
 = -1;

67 i‡(
codïoöt
 > 0x10FFFF) {

69 
codïoöt
 = -1;

72 
	`as£π
(
Àngth
 > 0);

73 *
codïoöt_ªt
 = 
codïoöt
;

74  
ö
 + 
Àngth
;

75 
	}
}

77 
	$jvp_utf8_is_vÆid
(c⁄° * 
ö
, c⁄° * 
íd
) {

78 
codïoöt
;

79 (
ö
 = 
	`jvp_utf8_√xt
(ö, 
íd
, &
codïoöt
))) {

80 i‡(
codïoöt
 == -1)  0;

83 
	}
}

86 
	$jvp_utf8_decode_Àngth
(
°¨tch¨
) {

87 i‡((
°¨tch¨
 & 0x80) == 0)  1;

88 i‡((
°¨tch¨
 & 0xE0) == 0xC0)  2;

89 i‡((
°¨tch¨
 & 0xF0) == 0xE0)  3;

91 
	}
}

93 
	$jvp_utf8_ícode_Àngth
(
codïoöt
) {

94 i‡(
codïoöt
 <= 0x7F)  1;

95 i‡(
codïoöt
 <= 0x7FF)  2;

96 i‡(
codïoöt
 <= 0xFFFF)  3;

98 
	}
}

100 
	$jvp_utf8_ícode
(
codïoöt
, * 
out
) {

101 
	`as£π
(
codïoöt
 >= 0 && codepoint <= 0x10FFFF);

102 * 
°¨t
 = 
out
;

103 i‡(
codïoöt
 <= 0x7F) {

104 *
out
++ = 
codïoöt
;

105 } i‡(
codïoöt
 <= 0x7FF) {

106 *
out
++ = 0xC0 + ((
codïoöt
 & 0x7C0) >> 6);

107 *
out
++ = 0x80 + ((
codïoöt
 & 0x03F));

108 } if(
codïoöt
 <= 0xFFFF) {

109 *
out
++ = 0xE0 + ((
codïoöt
 & 0xF000) >> 12);

110 *
out
++ = 0x80 + ((
codïoöt
 & 0x0FC0) >> 6);

111 *
out
++ = 0x80 + ((
codïoöt
 & 0x003F));

113 *
out
++ = 0xF0 + ((
codïoöt
 & 0x1C0000) >> 18);

114 *
out
++ = 0x80 + ((
codïoöt
 & 0x03F000) >> 12);

115 *
out
++ = 0x80 + ((
codïoöt
 & 0x000FC0) >> 6);

116 *
out
++ = 0x80 + ((
codïoöt
 & 0x00003F));

118 
	`as£π
(
out
 - 
°¨t
 =
	`jvp_utf8_ícode_Àngth
(
codïoöt
));

119  
out
 - 
°¨t
;

120 
	}
}

	@src/jv_unicode.h

1 #i‚de‡
JV_UNICODE_H


2 
	#JV_UNICODE_H


	)

4 c⁄° * 
jvp_utf8_backåack
(c⁄° * 
°¨t
, c⁄° * 
mö
, *
missög_byãs
);

5 c⁄° * 
jvp_utf8_√xt
(c⁄° * 
ö
, c⁄° * 
íd
, * 
codïoöt
);

6 
jvp_utf8_is_vÆid
(c⁄° * 
ö
, c⁄° * 
íd
);

8 
jvp_utf8_decode_Àngth
(
°¨tch¨
);

10 
jvp_utf8_ícode_Àngth
(
codïoöt
);

11 
jvp_utf8_ícode
(
codïoöt
, * 
out
);

	@src/jv_utf8_tables.h

1 
	#UTF8_CONTINUATION_BYTE
 (()255)

	)

2 c⁄° 
	gutf8_codög_Àngth
[] =

19 c⁄° 
	gutf8_codög_bôs
[] =

36 c⁄° 
	gutf8_fú°_codïoöt
[] =

	@src/lexer.c

5 
	#YY_INT_ALIGNED
 

	)

9 
	#FLEX_SCANNER


	)

10 
	#YY_FLEX_MAJOR_VERSION
 2

	)

11 
	#YY_FLEX_MINOR_VERSION
 6

	)

12 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

13 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

14 
	#FLEX_BETA


	)

17 #ifde‡
yy_¸óã_buf„r


18 
	#jq_yy_¸óã_buf„r_ALREADY_DEFINED


	)

20 
	#yy_¸óã_buf„r
 
jq_yy_¸óã_buf„r


	)

23 #ifde‡
yy_dñëe_buf„r


24 
	#jq_yy_dñëe_buf„r_ALREADY_DEFINED


	)

26 
	#yy_dñëe_buf„r
 
jq_yy_dñëe_buf„r


	)

29 #ifde‡
yy_sˇn_buf„r


30 
	#jq_yy_sˇn_buf„r_ALREADY_DEFINED


	)

32 
	#yy_sˇn_buf„r
 
jq_yy_sˇn_buf„r


	)

35 #ifde‡
yy_sˇn_°rög


36 
	#jq_yy_sˇn_°rög_ALREADY_DEFINED


	)

38 
	#yy_sˇn_°rög
 
jq_yy_sˇn_°rög


	)

41 #ifde‡
yy_sˇn_byãs


42 
	#jq_yy_sˇn_byãs_ALREADY_DEFINED


	)

44 
	#yy_sˇn_byãs
 
jq_yy_sˇn_byãs


	)

47 #ifde‡
yy_öô_buf„r


48 
	#jq_yy_öô_buf„r_ALREADY_DEFINED


	)

50 
	#yy_öô_buf„r
 
jq_yy_öô_buf„r


	)

53 #ifde‡
yy_Êush_buf„r


54 
	#jq_yy_Êush_buf„r_ALREADY_DEFINED


	)

56 
	#yy_Êush_buf„r
 
jq_yy_Êush_buf„r


	)

59 #ifde‡
yy_lﬂd_buf„r_°©e


60 
	#jq_yy_lﬂd_buf„r_°©e_ALREADY_DEFINED


	)

62 
	#yy_lﬂd_buf„r_°©e
 
jq_yy_lﬂd_buf„r_°©e


	)

65 #ifde‡
yy_swôch_to_buf„r


66 
	#jq_yy_swôch_to_buf„r_ALREADY_DEFINED


	)

68 
	#yy_swôch_to_buf„r
 
jq_yy_swôch_to_buf„r


	)

71 #ifde‡
yypush_buf„r_°©e


72 
	#jq_yypush_buf„r_°©e_ALREADY_DEFINED


	)

74 
	#yypush_buf„r_°©e
 
jq_yypush_buf„r_°©e


	)

77 #ifde‡
yyp›_buf„r_°©e


78 
	#jq_yyp›_buf„r_°©e_ALREADY_DEFINED


	)

80 
	#yyp›_buf„r_°©e
 
jq_yyp›_buf„r_°©e


	)

83 #ifde‡
yyísuª_buf„r_°ack


84 
	#jq_yyísuª_buf„r_°ack_ALREADY_DEFINED


	)

86 
	#yyísuª_buf„r_°ack
 
jq_yyísuª_buf„r_°ack


	)

89 #ifde‡
yyÀx


90 
	#jq_yyÀx_ALREADY_DEFINED


	)

92 
	#yyÀx
 
jq_yyÀx


	)

95 #ifde‡
yyª°¨t


96 
	#jq_yyª°¨t_ALREADY_DEFINED


	)

98 
	#yyª°¨t
 
jq_yyª°¨t


	)

101 #ifde‡
yyÀx_öô


102 
	#jq_yyÀx_öô_ALREADY_DEFINED


	)

104 
	#yyÀx_öô
 
jq_yyÀx_öô


	)

107 #ifde‡
yyÀx_öô_exåa


108 
	#jq_yyÀx_öô_exåa_ALREADY_DEFINED


	)

110 
	#yyÀx_öô_exåa
 
jq_yyÀx_öô_exåa


	)

113 #ifde‡
yyÀx_de°roy


114 
	#jq_yyÀx_de°roy_ALREADY_DEFINED


	)

116 
	#yyÀx_de°roy
 
jq_yyÀx_de°roy


	)

119 #ifde‡
yygë_debug


120 
	#jq_yygë_debug_ALREADY_DEFINED


	)

122 
	#yygë_debug
 
jq_yygë_debug


	)

125 #ifde‡
yy£t_debug


126 
	#jq_yy£t_debug_ALREADY_DEFINED


	)

128 
	#yy£t_debug
 
jq_yy£t_debug


	)

131 #ifde‡
yygë_exåa


132 
	#jq_yygë_exåa_ALREADY_DEFINED


	)

134 
	#yygë_exåa
 
jq_yygë_exåa


	)

137 #ifde‡
yy£t_exåa


138 
	#jq_yy£t_exåa_ALREADY_DEFINED


	)

140 
	#yy£t_exåa
 
jq_yy£t_exåa


	)

143 #ifde‡
yygë_ö


144 
	#jq_yygë_ö_ALREADY_DEFINED


	)

146 
	#yygë_ö
 
jq_yygë_ö


	)

149 #ifde‡
yy£t_ö


150 
	#jq_yy£t_ö_ALREADY_DEFINED


	)

152 
	#yy£t_ö
 
jq_yy£t_ö


	)

155 #ifde‡
yygë_out


156 
	#jq_yygë_out_ALREADY_DEFINED


	)

158 
	#yygë_out
 
jq_yygë_out


	)

161 #ifde‡
yy£t_out


162 
	#jq_yy£t_out_ALREADY_DEFINED


	)

164 
	#yy£t_out
 
jq_yy£t_out


	)

167 #ifde‡
yygë_Àng


168 
	#jq_yygë_Àng_ALREADY_DEFINED


	)

170 
	#yygë_Àng
 
jq_yygë_Àng


	)

173 #ifde‡
yygë_ãxt


174 
	#jq_yygë_ãxt_ALREADY_DEFINED


	)

176 
	#yygë_ãxt
 
jq_yygë_ãxt


	)

179 #ifde‡
yygë_löío


180 
	#jq_yygë_löío_ALREADY_DEFINED


	)

182 
	#yygë_löío
 
jq_yygë_löío


	)

185 #ifde‡
yy£t_löío


186 
	#jq_yy£t_löío_ALREADY_DEFINED


	)

188 
	#yy£t_löío
 
jq_yy£t_löío


	)

191 #ifde‡
yygë_cﬁumn


192 
	#jq_yygë_cﬁumn_ALREADY_DEFINED


	)

194 
	#yygë_cﬁumn
 
jq_yygë_cﬁumn


	)

197 #ifde‡
yy£t_cﬁumn


198 
	#jq_yy£t_cﬁumn_ALREADY_DEFINED


	)

200 
	#yy£t_cﬁumn
 
jq_yy£t_cﬁumn


	)

203 #ifde‡
yywøp


204 
	#jq_yywøp_ALREADY_DEFINED


	)

206 
	#yywøp
 
jq_yywøp


	)

209 #ifde‡
yygë_lvÆ


210 
	#jq_yygë_lvÆ_ALREADY_DEFINED


	)

212 
	#yygë_lvÆ
 
jq_yygë_lvÆ


	)

215 #ifde‡
yy£t_lvÆ


216 
	#jq_yy£t_lvÆ_ALREADY_DEFINED


	)

218 
	#yy£t_lvÆ
 
jq_yy£t_lvÆ


	)

221 #ifde‡
yygë_Œoc


222 
	#jq_yygë_Œoc_ALREADY_DEFINED


	)

224 
	#yygë_Œoc
 
jq_yygë_Œoc


	)

227 #ifde‡
yy£t_Œoc


228 
	#jq_yy£t_Œoc_ALREADY_DEFINED


	)

230 
	#yy£t_Œoc
 
jq_yy£t_Œoc


	)

233 #ifde‡
yyÆloc


234 
	#jq_yyÆloc_ALREADY_DEFINED


	)

236 
	#yyÆloc
 
jq_yyÆloc


	)

239 #ifde‡
yyªÆloc


240 
	#jq_yyªÆloc_ALREADY_DEFINED


	)

242 
	#yyªÆloc
 
jq_yyªÆloc


	)

245 #ifde‡
yy‰ì


246 
	#jq_yy‰ì_ALREADY_DEFINED


	)

248 
	#yy‰ì
 
jq_yy‰ì


	)

254 
	~<°dio.h
>

255 
	~<°rög.h
>

256 
	~<î∫o.h
>

257 
	~<°dlib.h
>

263 #i‚de‡
FLEXINT_H


264 
	#FLEXINT_H


	)

268 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

273 #i‚de‡
__STDC_LIMIT_MACROS


274 
	#__STDC_LIMIT_MACROS
 1

	)

277 
	~<öây≥s.h
>

278 
öt8_t
 
	tÊex_öt8_t
;

279 
uöt8_t
 
	tÊex_uöt8_t
;

280 
öt16_t
 
	tÊex_öt16_t
;

281 
uöt16_t
 
	tÊex_uöt16_t
;

282 
öt32_t
 
	tÊex_öt32_t
;

283 
uöt32_t
 
	tÊex_uöt32_t
;

285 sig√d 
	tÊex_öt8_t
;

286 
	tÊex_öt16_t
;

287 
	tÊex_öt32_t
;

288 
	tÊex_uöt8_t
;

289 
	tÊex_uöt16_t
;

290 
	tÊex_uöt32_t
;

293 #i‚de‡
INT8_MIN


294 
	#INT8_MIN
 (-128)

	)

296 #i‚de‡
INT16_MIN


297 
	#INT16_MIN
 (-32767-1)

	)

299 #i‚de‡
INT32_MIN


300 
	#INT32_MIN
 (-2147483647-1)

	)

302 #i‚de‡
INT8_MAX


303 
	#INT8_MAX
 (127)

	)

305 #i‚de‡
INT16_MAX


306 
	#INT16_MAX
 (32767)

	)

308 #i‚de‡
INT32_MAX


309 
	#INT32_MAX
 (2147483647)

	)

311 #i‚de‡
UINT8_MAX


312 
	#UINT8_MAX
 (255U)

	)

314 #i‚de‡
UINT16_MAX


315 
	#UINT16_MAX
 (65535U)

	)

317 #i‚de‡
UINT32_MAX


318 
	#UINT32_MAX
 (4294967295U)

	)

321 #i‚de‡
SIZE_MAX


322 
	#SIZE_MAX
 (~(
size_t
)0)

	)

332 
	#yyc⁄°
 c⁄°

	)

334 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

335 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

337 
	#yyn‹ëu∫


	)

341 
	#YY_NULL
 0

	)

346 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

349 #i‚de‡
YY_TYPEDEF_YY_SCANNER_T


350 
	#YY_TYPEDEF_YY_SCANNER_T


	)

351 * 
	tyysˇn_t
;

356 
	#yyö
 
yyg
->
yyö_r


	)

357 
	#yyout
 
yyg
->
yyout_r


	)

358 
	#yyexåa
 
yyg
->
yyexåa_r


	)

359 
	#yyÀng
 
yyg
->
yyÀng_r


	)

360 
	#yyãxt
 
yyg
->
yyãxt_r


	)

361 
	#yylöío
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_löío
)

	)

362 
	#yycﬁumn
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_cﬁumn
)

	)

363 
	#yy_Êex_debug
 
yyg
->
yy_Êex_debug_r


	)

369 
	#BEGIN
 
yyg
->
yy_°¨t
 = 1 + 2 *

	)

374 
	#YY_START
 ((
yyg
->
yy_°¨t
 - 1Ë/ 2)

	)

375 
	#YYSTATE
 
YY_START


	)

377 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

379 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 , 
yysˇ¬î
 )

	)

380 
	#YY_END_OF_BUFFER_CHAR
 0

	)

383 #i‚de‡
YY_BUF_SIZE


384 #ifde‡
__ü64__


389 
	#YY_BUF_SIZE
 32768

	)

391 
	#YY_BUF_SIZE
 16384

	)

397 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

399 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


400 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

401 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

404 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


405 
	#YY_TYPEDEF_YY_SIZE_T


	)

406 
size_t
 
	tyy_size_t
;

409 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

410 
	#EOB_ACT_END_OF_FILE
 1

	)

411 
	#EOB_ACT_LAST_MATCH
 2

	)

413 
	#YY_LESS_LINENO
(
n
)

	)

414 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

417 
	#yyÀss
(
n
) \

421 
yyÀss_ma¸o_¨g
 = (
n
); \

422 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

423 *
yy_˝
 = 
yyg
->
yy_hﬁd_ch¨
; \

424 
YY_RESTORE_YY_MORE_OFFSET
 \

425 
yyg
->
yy_c_buf_p
 = 
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

426 
YY_DO_BEFORE_ACTION
; \

428  0 )

	)

429 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, 
yyg
->
yyãxt_±r
 , 
yysˇ¬î
 )

	)

431 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


432 
	#YY_STRUCT_YY_BUFFER_STATE


	)

433 
	syy_buf„r_°©e


435 
FILE
 *
	myy_öput_fûe
;

437 *
	myy_ch_buf
;

438 *
	myy_buf_pos
;

443 
	myy_buf_size
;

448 
	myy_n_ch¨s
;

454 
	myy_is_our_buf„r
;

461 
	myy_is_öãø˘ive
;

467 
	myy_©_bﬁ
;

469 
	myy_bs_löío
;

470 
	myy_bs_cﬁumn
;

475 
	myy_fûl_buf„r
;

477 
	myy_buf„r_°©us
;

479 
	#YY_BUFFER_NEW
 0

	)

480 
	#YY_BUFFER_NORMAL
 1

	)

491 
	#YY_BUFFER_EOF_PENDING
 2

	)

502 
	#YY_CURRENT_BUFFER
 ( 
yyg
->
yy_buf„r_°ack
 \

503 ? 
yyg
->
yy_buf„r_°ack
[yyg->
yy_buf„r_°ack_t›
] \

504 : 
NULL
)

	)

508 
	#YY_CURRENT_BUFFER_LVALUE
 
yyg
->
yy_buf„r_°ack
[yyg->
yy_buf„r_°ack_t›
]

	)

510 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 , 
yysˇn_t
 
yysˇ¬î
 );

511 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
 );

512 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 , 
yysˇn_t
 
yysˇ¬î
 );

513 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
 );

514 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
 );

515 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
 );

516 
yyp›_buf„r_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

518 
yyísuª_buf„r_°ack
 ( 
yysˇn_t
 
yysˇ¬î
 );

519 
yy_lﬂd_buf„r_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

520 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 , 
yysˇn_t
 
yysˇ¬î
 );

521 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 , 
yysˇ¬î
)

	)

523 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 , 
yysˇn_t
 
yysˇ¬î
 );

524 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

525 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 , 
yysˇn_t
 
yysˇ¬î
 );

527 *
yyÆloc
 ( 
yy_size_t
 , 
yysˇn_t
 
yysˇ¬î
 );

528 *
yyªÆloc
 ( *, 
yy_size_t
 , 
yysˇn_t
 
yysˇ¬î
 );

529 
yy‰ì
 ( * , 
yysˇn_t
 
yysˇ¬î
 );

531 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

532 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

534 i‡–! 
YY_CURRENT_BUFFER
 ){ \

535 
	`yyísuª_buf„r_°ack
 (
yysˇ¬î
); \

536 
YY_CURRENT_BUFFER_LVALUE
 = \

537 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 , 
yysˇ¬î
); \

539 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

540 }

	)

541 
	#yy_£t_bﬁ
(
©_bﬁ
) \

543 i‡–! 
YY_CURRENT_BUFFER
 ){\

544 
	`yyísuª_buf„r_°ack
 (
yysˇ¬î
); \

545 
YY_CURRENT_BUFFER_LVALUE
 = \

546 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 , 
yysˇ¬î
); \

548 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

549 }

	)

550 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

554 
	#jq_yywøp
(
yysˇ¬î
Ë–1)

	)

555 
	#YY_SKIP_YYWRAP


	)

556 
Êex_uöt8_t
 
	tYY_CHAR
;

558 
	tyy_°©e_ty≥
;

560 
	#yyãxt_±r
 
yyãxt_r


	)

562 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

563 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 , 
yysˇn_t
 
yysˇ¬î
);

564 
yy_gë_√xt_buf„r
 ( 
yysˇn_t
 
yysˇ¬î
 );

565 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 , 
yysˇn_t
 
yysˇ¬î
 );

570 
	#YY_DO_BEFORE_ACTION
 \

571 
yyg
->
yyãxt_±r
 = 
yy_bp
; \

572 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

573 
yyg
->
yy_hﬁd_ch¨
 = *
yy_˝
; \

574 *
yy_˝
 = '\0'; \

575 
yyg
->
yy_c_buf_p
 = 
yy_˝
;

	)

576 
	#YY_NUM_RULES
 50

	)

577 
	#YY_END_OF_BUFFER
 51

	)

580 
	syy_å™s_öfo


582 
Êex_öt32_t
 
	myy_vîify
;

583 
Êex_öt32_t
 
	myy_nxt
;

585 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[157] =

606 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

638 c⁄° 
YY_CHAR
 
	gyy_mëa
[54] =

648 c⁄° 
Êex_öt16_t
 
	gyy_ba£
[170] =

670 c⁄° 
Êex_öt16_t
 
	gyy_def
[170] =

692 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[375] =

737 c⁄° 
Êex_öt16_t
 
	gyy_chk
[375] =

785 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

786 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

787 
	#YY_MORE_ADJ
 0

	)

788 
	#YY_RESTORE_YY_MORE_OFFSET


	)

791 
	~<as£π.h
>

792 
	~"jv_Æloc.h
"

793 
	~"compûe.h
"

795 
	gÀxî_∑øm
;

797 
	~"∑r£r.h
"

799 
	#YY_USER_ACTION
 \

801 
yyŒoc
->
°¨t
 = 
	`yygë_exåa
(
yysˇ¬î
); \

802 
yyŒoc
->
íd
 = yyŒoc->
°¨t
 + 
yyÀng
; \

803 
	`yy£t_exåa
(
yyŒoc
->
íd
, 
yysˇ¬î
); \

804 } 0);

	)

809 
íãr
(
›íög
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
);

810 
åy_exô
(
˛osög
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
);

812 
	#YY_NO_INPUT
 1

	)

815 
	#INITIAL
 0

	)

816 
	#IN_PAREN
 1

	)

817 
	#IN_BRACKET
 2

	)

818 
	#IN_BRACE
 3

	)

819 
	#IN_QQINTERP
 4

	)

820 
	#IN_QQSTRING
 5

	)

822 #i‚de‡
YY_NO_UNISTD_H


827 
	~<uni°d.h
>

830 
	#YY_EXTRA_TYPE
 

	)

833 
	syyguts_t


837 
YY_EXTRA_TYPE
 
	myyexåa_r
;

840 
FILE
 *
	myyö_r
, *
	myyout_r
;

841 
size_t
 
	myy_buf„r_°ack_t›
;

842 
size_t
 
	myy_buf„r_°ack_max
;

843 
YY_BUFFER_STATE
 * 
	myy_buf„r_°ack
;

844 
	myy_hﬁd_ch¨
;

845 
	myy_n_ch¨s
;

846 
	myyÀng_r
;

847 *
	myy_c_buf_p
;

848 
	myy_öô
;

849 
	myy_°¨t
;

850 
	myy_did_buf„r_swôch_⁄_eof
;

851 
	myy_°¨t_°ack_±r
;

852 
	myy_°¨t_°ack_dïth
;

853 *
	myy_°¨t_°ack
;

854 
yy_°©e_ty≥
 
	myy_œ°_ac˚±ög_°©e
;

855 * 
	myy_œ°_ac˚±ög_˝os
;

857 
	myylöío_r
;

858 
	myy_Êex_debug_r
;

860 *
	myyãxt_r
;

861 
	myy_m‹e_Êag
;

862 
	myy_m‹e_Àn
;

864 
YYSTYPE
 * 
	myylvÆ_r
;

866 
YYLTYPE
 * 
	myyŒoc_r
;

870 
yy_öô_globÆs
 ( 
yysˇn_t
 
yysˇ¬î
 );

874 
	#yylvÆ
 
yyg
->
yylvÆ_r


	)

876 
	#yyŒoc
 
yyg
->
yyŒoc_r


	)

878 
yyÀx_öô
 (
yysˇn_t
* 
sˇ¬î
);

880 
yyÀx_öô_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
, 
yysˇn_t
* 
sˇ¬î
);

885 
yyÀx_de°roy
 ( 
yysˇn_t
 
yysˇ¬î
 );

887 
yygë_debug
 ( 
yysˇn_t
 
yysˇ¬î
 );

889 
yy£t_debug
 ( 
debug_Êag
 , 
yysˇn_t
 
yysˇ¬î
 );

891 
YY_EXTRA_TYPE
 
yygë_exåa
 ( 
yysˇn_t
 
yysˇ¬î
 );

893 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 , 
yysˇn_t
 
yysˇ¬î
 );

895 
FILE
 *
yygë_ö
 ( 
yysˇn_t
 
yysˇ¬î
 );

897 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

899 
FILE
 *
yygë_out
 ( 
yysˇn_t
 
yysˇ¬î
 );

901 
yy£t_out
 ( 
FILE
 * 
_out_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

903 
yygë_Àng
 ( 
yysˇn_t
 
yysˇ¬î
 );

905 *
yygë_ãxt
 ( 
yysˇn_t
 
yysˇ¬î
 );

907 
yygë_löío
 ( 
yysˇn_t
 
yysˇ¬î
 );

909 
yy£t_löío
 ( 
_löe_numbî
 , 
yysˇn_t
 
yysˇ¬î
 );

911 
yygë_cﬁumn
 ( 
yysˇn_t
 
yysˇ¬î
 );

913 
yy£t_cﬁumn
 ( 
_cﬁumn_no
 , 
yysˇn_t
 
yysˇ¬î
 );

915 
YYSTYPE
 * 
yygë_lvÆ
 ( 
yysˇn_t
 
yysˇ¬î
 );

917 
yy£t_lvÆ
 ( 
YYSTYPE
 * 
yylvÆ_∑øm
 , 
yysˇn_t
 
yysˇ¬î
 );

919 
YYLTYPE
 *
yygë_Œoc
 ( 
yysˇn_t
 
yysˇ¬î
 );

921 
yy£t_Œoc
 ( 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
 );

927 #i‚de‡
YY_SKIP_YYWRAP


928 #ifde‡
__˝lu•lus


929 "C" 
yywøp
 ( 
yysˇn_t
 
yysˇ¬î
 );

931 
yywøp
 ( 
yysˇn_t
 
yysˇ¬î
 );

935 #i‚de‡
YY_NO_UNPUT


939 #i‚de‡
yyãxt_±r


940 
yy_Êex_°∫˝y
 ( *, c⁄° *, , 
yysˇn_t
 
yysˇ¬î
);

943 #ifde‡
YY_NEED_STRLEN


944 
yy_Êex_°æí
 ( c⁄° * , 
yysˇn_t
 
yysˇ¬î
);

947 #i‚de‡
YY_NO_INPUT


948 #ifde‡
__˝lu•lus


949 
yyöput
 ( 
yysˇn_t
 
yysˇ¬î
 );

951 
öput
 ( 
yysˇn_t
 
yysˇ¬î
 );

956 
yy_push_°©e
 ( 
_√w_°©e
 , 
yysˇn_t
 
yysˇ¬î
);

958 
yy_p›_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

960 
yy_t›_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

963 #i‚de‡
YY_READ_BUF_SIZE


964 #ifde‡
__ü64__


966 
	#YY_READ_BUF_SIZE
 16384

	)

968 
	#YY_READ_BUF_SIZE
 8192

	)

973 #i‚de‡
ECHO


977 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

983 #i‚de‡
YY_INPUT


984 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

985 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

987 
c
 = '*'; \

988 
n
; \

989  
n
 = 0;Ç < 
max_size
 && \

990 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

991 
buf
[
n
] = (Ë
c
; \

992 i‡–
c
 == '\n' ) \

993 
buf
[
n
++] = (Ë
c
; \

994 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

995 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

996 
ªsu…
 = 
n
; \

1000 
î∫o
=0; \

1001  (
ªsu…
 = (Ë
	`‰ód
(
buf
, 1, (
yy_size_t
Ë
max_size
, 
yyö
)Ë=0 && 
	`„º‹
(yyin)) \

1003 if–
î∫o
 !
EINTR
) \

1005 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1008 
î∫o
=0; \

1009 
	`˛óªº
(
yyö
); \

1013 

	)

1020 #i‚de‡
yyãrmö©e


1021 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1025 #i‚de‡
YY_START_STACK_INCR


1026 
	#YY_START_STACK_INCR
 25

	)

1030 #i‚de‡
YY_FATAL_ERROR


1031 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg , 
yysˇ¬î
)

	)

1039 #i‚de‡
YY_DECL


1040 
	#YY_DECL_IS_OURS
 1

	)

1042 
yyÀx
 \

1043 (
YYSTYPE
 * 
yylvÆ_∑øm
, 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
);

1045 
	#YY_DECL
 
yyÀx
 \

1046 (
YYSTYPE
 * 
yylvÆ_∑øm
, 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
)

	)

1052 #i‚de‡
YY_USER_ACTION


1053 
	#YY_USER_ACTION


	)

1057 #i‚de‡
YY_BREAK


1058 
	#YY_BREAK
 ;

	)

1061 
	#YY_RULE_SETUP
 \

1062 
YY_USER_ACTION


	)

1066 
	gYY_DECL


1068 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1069 *
	gyy_˝
, *
	gyy_bp
;

1070 
	gyy_a˘
;

1071 
yyguts_t
 * 
	gyyg
 = (yyguts_t*)
yysˇ¬î
;

1073 
	gyylvÆ
 = 
yylvÆ_∑øm
;

1075 
	gyyŒoc
 = 
yyŒoc_∑øm
;

1077 i‡–!
	gyyg
->
	gyy_öô
 )

1079 
	gyyg
->
	gyy_öô
 = 1;

1081 #ifde‡
YY_USER_INIT


1082 
	gYY_USER_INIT
;

1085 i‡–! 
	gyyg
->
	gyy_°¨t
 )

1086 
	gyyg
->
	gyy_°¨t
 = 1;

1088 i‡–! 
	gyyö
 )

1089 
	gyyö
 = 
°dö
;

1091 i‡–! 
	gyyout
 )

1092 
	gyyout
 = 
°dout
;

1094 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1095 
yyísuª_buf„r_°ack
 (
yysˇ¬î
);

1096 
	gYY_CURRENT_BUFFER_LVALUE
 =

1097 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 , 
yysˇ¬î
);

1100 
yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

1111 
	gyy_˝
 = 
yyg
->
yy_c_buf_p
;

1114 *
	gyy_˝
 = 
yyg
->
yy_hﬁd_ch¨
;

1119 
	gyy_bp
 = 
yy_˝
;

1121 
	gyy_cuºít_°©e
 = 
yyg
->
yy_°¨t
;

1122 
	gyy_m©ch
:

1125 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1126 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1128 
	gyyg
->
	gyy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1129 
	gyyg
->
	gyy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1131  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1133 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1134 i‡–
	gyy_cuºít_°©e
 >= 157 )

1135 
yy_c
 = 
yy_mëa
[yy_c];

1137 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
];

1138 ++
	gyy_˝
;

1140  
	gyy_ba£
[
yy_cuºít_°©e
] != 321 );

1142 
	gyy_föd_a˘i⁄
:

1143 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1144 i‡–
	gyy_a˘
 == 0 )

1146 
yy_˝
 = 
yyg
->
yy_œ°_ac˚±ög_˝os
;

1147 
	gyy_cuºít_°©e
 = 
yyg
->
yy_œ°_ac˚±ög_°©e
;

1148 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1151 
	gYY_DO_BEFORE_ACTION
;

1153 
	gdo_a˘i⁄
:

1155  
yy_a˘
 )

1159 *
yy_˝
 = 
yyg
->
yy_hﬁd_ch¨
;

1160 
	gyy_˝
 = 
yyg
->
yy_œ°_ac˚±ög_˝os
;

1161 
	gyy_cuºít_°©e
 = 
yyg
->
yy_œ°_ac˚±ög_°©e
;

1162 
	gyy_föd_a˘i⁄
;

1165 
YY_RULE_SETUP


1168 
YY_BREAK


1170 
YY_RULE_SETUP


1172 {  
NEQ
; }

1173 
YY_BREAK


1175 
YY_RULE_SETUP


1177 {  
EQ
; }

1178 
YY_BREAK


1180 
YY_RULE_SETUP


1182 {  
AS
; }

1183 
YY_BREAK


1185 
YY_RULE_SETUP


1187 {  
IMPORT
; }

1188 
YY_BREAK


1190 
YY_RULE_SETUP


1192 {  
INCLUDE
; }

1193 
YY_BREAK


1195 
YY_RULE_SETUP


1197 {  
MODULE
; }

1198 
YY_BREAK


1200 
YY_RULE_SETUP


1202 {  
DEF
; }

1203 
YY_BREAK


1205 
YY_RULE_SETUP


1207 {  
IF
; }

1208 
YY_BREAK


1210 
YY_RULE_SETUP


1212 {  
THEN
; }

1213 
YY_BREAK


1215 
YY_RULE_SETUP


1217 {  
ELSE
; }

1218 
YY_BREAK


1220 
YY_RULE_SETUP


1222 {  
ELSE_IF
; }

1223 
YY_BREAK


1225 
YY_RULE_SETUP


1227 {  
AND
; }

1228 
YY_BREAK


1230 
YY_RULE_SETUP


1232 {  
OR
; }

1233 
YY_BREAK


1235 
YY_RULE_SETUP


1237 {  
END
; }

1238 
YY_BREAK


1240 
YY_RULE_SETUP


1242 {  
REDUCE
; }

1243 
YY_BREAK


1245 
YY_RULE_SETUP


1247 {  
FOREACH
; }

1248 
YY_BREAK


1250 
YY_RULE_SETUP


1252 {  
DEFINEDOR
; }

1253 
YY_BREAK


1255 
YY_RULE_SETUP


1257 {  
TRY
; }

1258 
YY_BREAK


1260 
YY_RULE_SETUP


1262 {  
CATCH
; }

1263 
YY_BREAK


1265 
YY_RULE_SETUP


1267 {  
LABEL
; }

1268 
YY_BREAK


1270 
YY_RULE_SETUP


1272 {  
BREAK
; }

1273 
YY_BREAK


1275 
YY_RULE_SETUP


1277 {  
LOC
; }

1278 
YY_BREAK


1280 
YY_RULE_SETUP


1282 {  
SETPIPE
; }

1283 
YY_BREAK


1285 
YY_RULE_SETUP


1287 {  
SETPLUS
; }

1288 
YY_BREAK


1290 
YY_RULE_SETUP


1292 {  
SETMINUS
; }

1293 
YY_BREAK


1295 
YY_RULE_SETUP


1297 {  
SETMULT
; }

1298 
YY_BREAK


1300 
YY_RULE_SETUP


1302 {  
SETDIV
; }

1303 
YY_BREAK


1305 
YY_RULE_SETUP


1307 {  
SETMOD
; }

1308 
YY_BREAK


1310 
YY_RULE_SETUP


1312 {  
SETDEFINEDOR
; }

1313 
YY_BREAK


1315 
YY_RULE_SETUP


1317 {  
LESSEQ
; }

1318 
YY_BREAK


1320 
YY_RULE_SETUP


1322 {  
GREATEREQ
; }

1323 
YY_BREAK


1325 
YY_RULE_SETUP


1327 {  
REC
; }

1328 
YY_BREAK


1330 
YY_RULE_SETUP


1332 {  
ALTERNATION
; }

1333 
YY_BREAK


1335 
YY_RULE_SETUP


1337 {  
yyãxt
[0];}

1338 
YY_BREAK


1340 
YY_RULE_SETUP


1343  
íãr
(
yyãxt
[0], 
YY_START
, 
yysˇ¬î
);

1345 
YY_BREAK


1347 
YY_RULE_SETUP


1350  
åy_exô
(
yyãxt
[0], 
YY_START
, 
yysˇ¬î
);

1352 
YY_BREAK


1354 
YY_RULE_SETUP


1357 
yylvÆ
->
lôîÆ
 = 
jv_°rög_sized
(
yyãxt
 + 1, 
yyÀng
 - 1);  
	gFORMAT
;

1359 
YY_BREAK


1361 
YY_RULE_SETUP


1364 
yylvÆ
->
lôîÆ
 = 
jv_∑r£_sized
(
yyãxt
, 
yyÀng
);  
	gLITERAL
;

1366 
YY_BREAK


1368 
YY_RULE_SETUP


1371 
yy_push_°©e
(
IN_QQSTRING
, 
yysˇ¬î
);

1372  
	gQQSTRING_START
;

1374 
YY_BREAK


1377 
YY_RULE_SETUP


1380  
íãr
(
QQSTRING_INTERP_START
, 
YY_START
, 
yysˇ¬î
);

1382 
YY_BREAK


1384 
YY_RULE_SETUP


1387 
yy_p›_°©e
(
yysˇ¬î
);

1388  
	gQQSTRING_END
;

1390 
YY_BREAK


1393 
YY_RULE_SETUP


1397 
jv
 
esˇ≥s
 = 
jv_°rög_fmt
("\"%.*s\"", ()
yyÀng
, 
yyãxt
);

1398 
	gyylvÆ
->
	glôîÆ
 = 
jv_∑r£_sized
(
jv_°rög_vÆue
(
esˇ≥s
), 
jv_°rög_Àngth_byãs
(
jv_c›y
(escapes)));

1399 
jv_‰ì
(
esˇ≥s
);

1400  
	gQQSTRING_TEXT
;

1402 
YY_BREAK


1405 
YY_RULE_SETUP


1408 
yylvÆ
->
lôîÆ
 = 
jv_°rög_sized
(
yyãxt
, 
yyÀng
);

1409  
	gQQSTRING_TEXT
;

1411 
YY_BREAK


1413 
YY_RULE_SETUP


1416  
INVALID_CHARACTER
;

1418 
YY_BREAK


1421 
YY_RULE_SETUP


1423 { 
yylvÆ
->
lôîÆ
 = 
jv_°rög
(
yyãxt
);  
	gIDENT
;}

1424 
YY_BREAK


1426 
YY_RULE_SETUP


1428 { 
yylvÆ
->
lôîÆ
 = 
jv_°rög
(
yyãxt
+1);  
	gFIELD
;}

1429 
YY_BREAK


1432 
YY_RULE_SETUP


1435 
YY_BREAK


1437 
YY_RULE_SETUP


1439 {  
INVALID_CHARACTER
; }

1440 
YY_BREAK


1442 
YY_RULE_SETUP


1444 
YY_FATAL_ERROR
( "flex scanner jammed" );

1445 
	gYY_BREAK


1447 
YY_STATE_EOF
(
INITIAL
):

1448 
YY_STATE_EOF
(
IN_PAREN
):

1449 
YY_STATE_EOF
(
IN_BRACKET
):

1450 
YY_STATE_EOF
(
IN_BRACE
):

1451 
YY_STATE_EOF
(
IN_QQINTERP
):

1452 
YY_STATE_EOF
(
IN_QQSTRING
):

1453 
yyãrmö©e
();

1455 
	gYY_END_OF_BUFFER
:

1458 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - 
yyg
->
yyãxt_±r
) - 1;

1461 *
	gyy_˝
 = 
yyg
->
yy_hﬁd_ch¨
;

1462 
YY_RESTORE_YY_MORE_OFFSET


1464 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

1475 
yyg
->
yy_n_ch¨s
 = 
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1476 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

1477 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

1487 i‡–
	gyyg
->
	gyy_c_buf_p
 <&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
yyg
->
yy_n_ch¨s
] )

1489 
yy_°©e_ty≥
 
yy_√xt_°©e
;

1491 
	gyyg
->
	gyy_c_buf_p
 = 
yyg
->
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

1493 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
–
yysˇ¬î
 );

1504 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 , 
yysˇ¬î
);

1506 
	gyy_bp
 = 
yyg
->
yyãxt_±r
 + 
YY_MORE_ADJ
;

1508 i‡–
	gyy_√xt_°©e
 )

1511 
	gyy_˝
 = ++
yyg
->
yy_c_buf_p
;

1512 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

1513 
	gyy_m©ch
;

1518 
	gyy_˝
 = 
yyg
->
yy_c_buf_p
;

1519 
	gyy_föd_a˘i⁄
;

1523  
yy_gë_√xt_buf„r
–
yysˇ¬î
 ) )

1525 
	gEOB_ACT_END_OF_FILE
:

1527 
yyg
->
yy_did_buf„r_swôch_⁄_eof
 = 0;

1529 i‡–
yywøp
–
yysˇ¬î
 ) )

1540 
	gyyg
->
	gyy_c_buf_p
 = 
yyg
->
yyãxt_±r
 + 
YY_MORE_ADJ
;

1542 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

1543 
	gdo_a˘i⁄
;

1548 i‡–! 
	gyyg
->
	gyy_did_buf„r_swôch_⁄_eof
 )

1549 
	gYY_NEW_FILE
;

1554 
	gEOB_ACT_CONTINUE_SCAN
:

1555 
yyg
->
yy_c_buf_p
 =

1556 
yyg
->
yyãxt_±r
 + 
yy_amou¡_of_m©ched_ãxt
;

1558 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
–
yysˇ¬î
 );

1560 
	gyy_˝
 = 
yyg
->
yy_c_buf_p
;

1561 
	gyy_bp
 = 
yyg
->
yyãxt_±r
 + 
YY_MORE_ADJ
;

1562 
	gyy_m©ch
;

1564 
	gEOB_ACT_LAST_MATCH
:

1565 
yyg
->
yy_c_buf_p
 =

1566 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
yyg
->
yy_n_ch¨s
];

1568 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
–
yysˇ¬î
 );

1570 
	gyy_˝
 = 
yyg
->
yy_c_buf_p
;

1571 
	gyy_bp
 = 
yyg
->
yyãxt_±r
 + 
YY_MORE_ADJ
;

1572 
	gyy_föd_a˘i⁄
;

1578 
YY_FATAL_ERROR
(

1592 
	$yy_gë_√xt_buf„r
 (
yysˇn_t
 
yysˇ¬î
)

1594 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1595 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

1596 *
sour˚
 = 
yyg
->
yyãxt_±r
;

1597 
numbî_to_move
, 
i
;

1598 
ªt_vÆ
;

1600 i‡–
yyg
->
yy_c_buf_p
 > &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[yyg->
yy_n_ch¨s
 + 1] )

1601 
	`YY_FATAL_ERROR
(

1604 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

1606 i‡–
yyg
->
yy_c_buf_p
 - yyg->
yyãxt_±r
 - 
YY_MORE_ADJ
 == 1 )

1611  
EOB_ACT_END_OF_FILE
;

1619  
EOB_ACT_LAST_MATCH
;

1626 
numbî_to_move
 = (Ë(
yyg
->
yy_c_buf_p
 - yyg->
yyãxt_±r
 - 1);

1628  
i
 = 0; i < 
numbî_to_move
; ++i )

1629 *(
de°
++Ë*(
sour˚
++);

1631 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

1635 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = 
yyg
->yy_n_chars = 0;

1639 
num_to_ªad
 =

1640 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

1642  
num_to_ªad
 <= 0 )

1646 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

1648 
yy_c_buf_p_off£t
 =

1649 (Ë(
yyg
->
yy_c_buf_p
 - 
b
->
yy_ch_buf
);

1651 i‡–
b
->
yy_is_our_buf„r
 )

1653 
√w_size
 = 
b
->
yy_buf_size
 * 2;

1655 i‡–
√w_size
 <= 0 )

1656 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

1658 
b
->
yy_buf_size
 *= 2;

1660 
b
->
yy_ch_buf
 = (*)

1662 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

1663 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2Ë, 
yysˇ¬î
 );

1667 
b
->
yy_ch_buf
 = 
NULL
;

1669 i‡–! 
b
->
yy_ch_buf
 )

1670 
	`YY_FATAL_ERROR
(

1673 
yyg
->
yy_c_buf_p
 = &
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

1675 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

1676 
numbî_to_move
 - 1;

1680 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

1681 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

1684 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

1685 
yyg
->
yy_n_ch¨s
, 
num_to_ªad
 );

1687 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = 
yyg
->yy_n_chars;

1690 i‡–
yyg
->
yy_n_ch¨s
 == 0 )

1692 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

1694 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

1695 
	`yyª°¨t
–
yyö
 , 
yysˇ¬î
);

1700 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

1701 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

1702 
YY_BUFFER_EOF_PENDING
;

1707 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

1709 i‡((
yyg
->
yy_n_ch¨s
 + 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

1711 
√w_size
 = 
yyg
->
yy_n_ch¨s
 + 
numbî_to_move
 + (yyg->yy_n_chars >> 1);

1712 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

1713 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 , 
yysˇ¬î
 );

1714 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

1715 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

1717 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

1720 
yyg
->
yy_n_ch¨s
 +
numbî_to_move
;

1721 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
yyg
->
yy_n_ch¨s
] = 
YY_END_OF_BUFFER_CHAR
;

1722 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
yyg
->
yy_n_ch¨s
 + 1] = 
YY_END_OF_BUFFER_CHAR
;

1724 
yyg
->
yyãxt_±r
 = &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

1726  
ªt_vÆ
;

1727 
	}
}

1731 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 (
yysˇn_t
 
yysˇ¬î
)

1733 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

1734 *
yy_˝
;

1735 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1737 
yy_cuºít_°©e
 = 
yyg
->
yy_°¨t
;

1739  
yy_˝
 = 
yyg
->
yyãxt_±r
 + 
YY_MORE_ADJ
; yy_˝ < yyg->
yy_c_buf_p
; ++yy_cp )

1741 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

1742 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1744 
yyg
->
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1745 
yyg
->
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1747  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1749 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1750 i‡–
yy_cuºít_°©e
 >= 157 )

1751 
yy_c
 = 
yy_mëa
[yy_c];

1753 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1756  
yy_cuºít_°©e
;

1757 
	}
}

1764 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 , 
yysˇn_t
 
yysˇ¬î
)

1766 
yy_is_jam
;

1767 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1768 *
yy_˝
 = 
yyg
->
yy_c_buf_p
;

1770 
YY_CHAR
 
yy_c
 = 1;

1771 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

1773 
yyg
->
yy_œ°_ac˚±ög_°©e
 = 
yy_cuºít_°©e
;

1774 
yyg
->
yy_œ°_ac˚±ög_˝os
 = 
yy_˝
;

1776  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

1778 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1779 i‡–
yy_cuºít_°©e
 >= 157 )

1780 
yy_c
 = 
yy_mëa
[yy_c];

1782 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

1783 
yy_is_jam
 = (
yy_cuºít_°©e
 == 156);

1785 ()
yyg
;

1786  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

1787 
	}
}

1789 #i‚de‡
YY_NO_UNPUT


1793 #i‚de‡
YY_NO_INPUT


1794 #ifde‡
__˝lu•lus


1795 
	$yyöput
 (
yysˇn_t
 
yysˇ¬î
)

1797 
	$öput
 (
yysˇn_t
 
yysˇ¬î
)

1801 
c
;

1802 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1804 *
yyg
->
yy_c_buf_p
 = yyg->
yy_hﬁd_ch¨
;

1806 i‡–*
yyg
->
yy_c_buf_p
 =
YY_END_OF_BUFFER_CHAR
 )

1812 i‡–
yyg
->
yy_c_buf_p
 < &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[yyg->
yy_n_ch¨s
] )

1814 *
yyg
->
yy_c_buf_p
 = '\0';

1818 
off£t
 = (Ë(
yyg
->
yy_c_buf_p
 - yyg->
yyãxt_±r
);

1819 ++
yyg
->
yy_c_buf_p
;

1821  
	`yy_gë_√xt_buf„r
–
yysˇ¬î
 ) )

1823 
EOB_ACT_LAST_MATCH
:

1835 
	`yyª°¨t
–
yyö
 , 
yysˇ¬î
);

1839 
EOB_ACT_END_OF_FILE
:

1841 i‡–
	`yywøp
–
yysˇ¬î
 ) )

1844 i‡–! 
yyg
->
yy_did_buf„r_swôch_⁄_eof
 )

1845 
YY_NEW_FILE
;

1846 #ifde‡
__˝lu•lus


1847  
	`yyöput
(
yysˇ¬î
);

1849  
	`öput
(
yysˇ¬î
);

1853 
EOB_ACT_CONTINUE_SCAN
:

1854 
yyg
->
yy_c_buf_p
 = yyg->
yyãxt_±r
 + 
off£t
;

1860 
c
 = *(*Ë
yyg
->
yy_c_buf_p
;

1861 *
yyg
->
yy_c_buf_p
 = '\0';

1862 
yyg
->
yy_hﬁd_ch¨
 = *++yyg->
yy_c_buf_p
;

1864  
c
;

1865 
	}
}

1873 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 , 
yysˇn_t
 
yysˇ¬î
)

1875 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1877 i‡–! 
YY_CURRENT_BUFFER
 ){

1878 
	`yyísuª_buf„r_°ack
 (
yysˇ¬î
);

1879 
YY_CURRENT_BUFFER_LVALUE
 =

1880 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 , 
yysˇ¬î
);

1883 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 , 
yysˇ¬î
);

1884 
	`yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

1885 
	}
}

1891 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
)

1893 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1900 
	`yyísuª_buf„r_°ack
 (
yysˇ¬î
);

1901 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

1904 i‡–
YY_CURRENT_BUFFER
 )

1907 *
yyg
->
yy_c_buf_p
 = yyg->
yy_hﬁd_ch¨
;

1908 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = 
yyg
->
yy_c_buf_p
;

1909 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = 
yyg
->yy_n_chars;

1912 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

1913 
	`yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

1920 
yyg
->
yy_did_buf„r_swôch_⁄_eof
 = 1;

1921 
	}
}

1923 
	$yy_lﬂd_buf„r_°©e
 (
yysˇn_t
 
yysˇ¬î
)

1925 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1926 
yyg
->
yy_n_ch¨s
 = 
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

1927 
yyg
->
yyãxt_±r
 = yyg->
yy_c_buf_p
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

1928 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

1929 
yyg
->
yy_hﬁd_ch¨
 = *yyg->
yy_c_buf_p
;

1930 
	}
}

1938 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 , 
yysˇn_t
 
yysˇ¬î
)

1940 
YY_BUFFER_STATE
 
b
;

1942 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) , 
yysˇ¬î
 );

1943 i‡–! 
b
 )

1944 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1946 
b
->
yy_buf_size
 = 
size
;

1951 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2Ë, 
yysˇ¬î
 );

1952 i‡–! 
b
->
yy_ch_buf
 )

1953 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

1955 
b
->
yy_is_our_buf„r
 = 1;

1957 
	`yy_öô_buf„r
–
b
, 
fûe
 , 
yysˇ¬î
);

1959  
b
;

1960 
	}
}

1966 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
)

1968 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1970 i‡–! 
b
 )

1973 i‡–
b
 =
YY_CURRENT_BUFFER
 )

1974 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

1976 i‡–
b
->
yy_is_our_buf„r
 )

1977 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 , 
yysˇ¬î
 );

1979 
	`yy‰ì
–(*Ë
b
 , 
yysˇ¬î
 );

1980 
	}
}

1986 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 , 
yysˇn_t
 
yysˇ¬î
)

1989 
€ºno
 = 
î∫o
;

1990 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

1992 
	`yy_Êush_buf„r
–
b
 , 
yysˇ¬î
);

1994 
b
->
yy_öput_fûe
 = 
fûe
;

1995 
b
->
yy_fûl_buf„r
 = 1;

2001 i‡(
b
 !
YY_CURRENT_BUFFER
){

2002 
b
->
yy_bs_löío
 = 1;

2003 
b
->
yy_bs_cﬁumn
 = 0;

2006 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2008 
î∫o
 = 
€ºno
;

2009 
	}
}

2015 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
)

2017 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2018 i‡–! 
b
 )

2021 
b
->
yy_n_ch¨s
 = 0;

2027 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2028 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2030 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2032 
b
->
yy_©_bﬁ
 = 1;

2033 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2035 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2036 
	`yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

2037 
	}
}

2045 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
)

2047 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2048 i‡(
√w_buf„r
 =
NULL
)

2051 
	`yyísuª_buf„r_°ack
(
yysˇ¬î
);

2054 i‡–
YY_CURRENT_BUFFER
 )

2057 *
yyg
->
yy_c_buf_p
 = yyg->
yy_hﬁd_ch¨
;

2058 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = 
yyg
->
yy_c_buf_p
;

2059 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = 
yyg
->yy_n_chars;

2063 i‡(
YY_CURRENT_BUFFER
)

2064 
yyg
->
yy_buf„r_°ack_t›
++;

2065 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2068 
	`yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

2069 
yyg
->
yy_did_buf„r_swôch_⁄_eof
 = 1;

2070 
	}
}

2076 
	$yyp›_buf„r_°©e
 (
yysˇn_t
 
yysˇ¬î
)

2078 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2079 i‡(!
YY_CURRENT_BUFFER
)

2082 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 , 
yysˇ¬î
);

2083 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2084 i‡(
yyg
->
yy_buf„r_°ack_t›
 > 0)

2085 --
yyg
->
yy_buf„r_°ack_t›
;

2087 i‡(
YY_CURRENT_BUFFER
) {

2088 
	`yy_lﬂd_buf„r_°©e
–
yysˇ¬î
 );

2089 
yyg
->
yy_did_buf„r_swôch_⁄_eof
 = 1;

2091 
	}
}

2096 
	$yyísuª_buf„r_°ack
 (
yysˇn_t
 
yysˇ¬î
)

2098 
yy_size_t
 
num_to_Æloc
;

2099 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2101 i‡(!
yyg
->
yy_buf„r_°ack
) {

2107 
num_to_Æloc
 = 1;

2108 
yyg
->
yy_buf„r_°ack
 = (
yy_buf„r_°©e
**)
yyÆloc


2109 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2110 , 
yysˇ¬î
);

2111 i‡–! 
yyg
->
yy_buf„r_°ack
 )

2112 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2114 
	`mem£t
(
yyg
->
yy_buf„r_°ack
, 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2116 
yyg
->
yy_buf„r_°ack_max
 = 
num_to_Æloc
;

2117 
yyg
->
yy_buf„r_°ack_t›
 = 0;

2121 i‡(
yyg
->
yy_buf„r_°ack_t›
 >(yyg->
yy_buf„r_°ack_max
) - 1){

2124 
yy_size_t
 
grow_size
 = 8 ;

2126 
num_to_Æloc
 = 
yyg
->
yy_buf„r_°ack_max
 + 
grow_size
;

2127 
yyg
->
yy_buf„r_°ack
 = (
yy_buf„r_°©e
**)
yyªÆloc


2128 (
yyg
->
yy_buf„r_°ack
,

2129 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2130 , 
yysˇ¬î
);

2131 i‡–! 
yyg
->
yy_buf„r_°ack
 )

2132 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2135 
	`mem£t
(
yyg
->
yy_buf„r_°ack
 + yyg->
yy_buf„r_°ack_max
, 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2136 
yyg
->
yy_buf„r_°ack_max
 = 
num_to_Æloc
;

2138 
	}
}

2146 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 , 
yysˇn_t
 
yysˇ¬î
)

2148 
YY_BUFFER_STATE
 
b
;

2150 i‡–
size
 < 2 ||

2151 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2152 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2154  
NULL
;

2156 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) , 
yysˇ¬î
 );

2157 i‡–! 
b
 )

2158 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

2160 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

2161 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2162 
b
->
yy_is_our_buf„r
 = 0;

2163 
b
->
yy_öput_fûe
 = 
NULL
;

2164 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2165 
b
->
yy_is_öãø˘ive
 = 0;

2166 
b
->
yy_©_bﬁ
 = 1;

2167 
b
->
yy_fûl_buf„r
 = 0;

2168 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2170 
	`yy_swôch_to_buf„r
–
b
 , 
yysˇ¬î
 );

2172  
b
;

2173 
	}
}

2183 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 , 
yysˇn_t
 
yysˇ¬î
)

2186  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yy°rË, 
yysˇ¬î
);

2187 
	}
}

2196 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 , 
yysˇn_t
 
yysˇ¬î
)

2198 
YY_BUFFER_STATE
 
b
;

2199 *
buf
;

2200 
yy_size_t
 
n
;

2201 
i
;

2204 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

2205 
buf
 = (*Ë
	`yyÆloc
–
n
 , 
yysˇ¬î
 );

2206 i‡–! 
buf
 )

2207 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2209  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2210 
buf
[
i
] = 
yybyãs
[i];

2212 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2214 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 , 
yysˇ¬î
);

2215 i‡–! 
b
 )

2216 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2221 
b
->
yy_is_our_buf„r
 = 1;

2223  
b
;

2224 
	}
}

2226 
	$yy_push_°©e
 (
_√w_°©e
 , 
yysˇn_t
 
yysˇ¬î
)

2228 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2229 i‡–
yyg
->
yy_°¨t_°ack_±r
 >yyg->
yy_°¨t_°ack_dïth
 )

2231 
yy_size_t
 
√w_size
;

2233 
yyg
->
yy_°¨t_°ack_dïth
 +
YY_START_STACK_INCR
;

2234 
√w_size
 = (
yy_size_t
Ë
yyg
->
yy_°¨t_°ack_dïth
 * ( );

2236 i‡–! 
yyg
->
yy_°¨t_°ack
 )

2237 
yyg
->
yy_°¨t_°ack
 = (*Ë
	`yyÆloc
–
√w_size
 , 
yysˇ¬î
 );

2240 
yyg
->
yy_°¨t_°ack
 = (*Ë
	`yyªÆloc
(

2241 (*Ë
yyg
->
yy_°¨t_°ack
, 
√w_size
 , 
yysˇ¬î
 );

2243 i‡–! 
yyg
->
yy_°¨t_°ack
 )

2244 
	`YY_FATAL_ERROR
( "out of memoryÉxpanding start-condition stack" );

2247 
yyg
->
yy_°¨t_°ack
[yyg->
yy_°¨t_°ack_±r
++] = 
YY_START
;

2249 
	`BEGIN
(
_√w_°©e
);

2250 
	}
}

2252 
	$yy_p›_°©e
 (
yysˇn_t
 
yysˇ¬î
)

2254 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2255 i‡–--
yyg
->
yy_°¨t_°ack_±r
 < 0 )

2256 
	`YY_FATAL_ERROR
( "start-condition stack underflow" );

2258 
	`BEGIN
(
yyg
->
yy_°¨t_°ack
[yyg->
yy_°¨t_°ack_±r
]);

2259 
	}
}

2261 
	$yy_t›_°©e
 (
yysˇn_t
 
yysˇ¬î
)

2263 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2264  
yyg
->
yy_°¨t_°ack
[yyg->
yy_°¨t_°ack_±r
 - 1];

2265 
	}
}

2267 #i‚de‡
YY_EXIT_FAILURE


2268 
	#YY_EXIT_FAILURE
 2

	)

2271 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 , 
yysˇn_t
 
yysˇ¬î
)

2273 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2274 ()
yyg
;

2275 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2276 
	`exô
–
YY_EXIT_FAILURE
 );

2277 
	}
}

2281 #unde‡
yyÀss


2282 
	#yyÀss
(
n
) \

2286 
yyÀss_ma¸o_¨g
 = (
n
); \

2287 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2288 
yyãxt
[
yyÀng
] = 
yyg
->
yy_hﬁd_ch¨
; \

2289 
yyg
->
yy_c_buf_p
 = 
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2290 
yyg
->
yy_hﬁd_ch¨
 = *yyg->
yy_c_buf_p
; \

2291 *
yyg
->
yy_c_buf_p
 = '\0'; \

2292 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2294  0 )

	)

2301 
YY_EXTRA_TYPE
 
	$yygë_exåa
 (
yysˇn_t
 
yysˇ¬î
)

2303 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2304  
yyexåa
;

2305 
	}
}

2310 
	$yygë_löío
 (
yysˇn_t
 
yysˇ¬î
)

2312 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2314 i‡(! 
YY_CURRENT_BUFFER
)

2317  
yylöío
;

2318 
	}
}

2323 
	$yygë_cﬁumn
 (
yysˇn_t
 
yysˇ¬î
)

2325 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2327 i‡(! 
YY_CURRENT_BUFFER
)

2330  
yycﬁumn
;

2331 
	}
}

2336 
FILE
 *
	$yygë_ö
 (
yysˇn_t
 
yysˇ¬î
)

2338 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2339  
yyö
;

2340 
	}
}

2345 
FILE
 *
	$yygë_out
 (
yysˇn_t
 
yysˇ¬î
)

2347 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2348  
yyout
;

2349 
	}
}

2354 
	$yygë_Àng
 (
yysˇn_t
 
yysˇ¬î
)

2356 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2357  
yyÀng
;

2358 
	}
}

2364 *
	$yygë_ãxt
 (
yysˇn_t
 
yysˇ¬î
)

2366 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2367  
yyãxt
;

2368 
	}
}

2374 
	$yy£t_exåa
 (
YY_EXTRA_TYPE
 
u£r_deföed
 , 
yysˇn_t
 
yysˇ¬î
)

2376 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2377 
yyexåa
 = 
u£r_deföed
 ;

2378 
	}
}

2384 
	$yy£t_löío
 (
_löe_numbî
 , 
yysˇn_t
 
yysˇ¬î
)

2386 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2389 i‡(! 
YY_CURRENT_BUFFER
 )

2390 
	`YY_FATAL_ERROR
( "yyset_lineno called withÇo buffer" );

2392 
yylöío
 = 
_löe_numbî
;

2393 
	}
}

2399 
	$yy£t_cﬁumn
 (
_cﬁumn_no
 , 
yysˇn_t
 
yysˇ¬î
)

2401 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2404 i‡(! 
YY_CURRENT_BUFFER
 )

2405 
	`YY_FATAL_ERROR
( "yyset_column called withÇo buffer" );

2407 
yycﬁumn
 = 
_cﬁumn_no
;

2408 
	}
}

2416 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 , 
yysˇn_t
 
yysˇ¬î
)

2418 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2419 
yyö
 = 
_ö_°r
 ;

2420 
	}
}

2422 
	$yy£t_out
 (
FILE
 * 
_out_°r
 , 
yysˇn_t
 
yysˇ¬î
)

2424 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2425 
yyout
 = 
_out_°r
 ;

2426 
	}
}

2428 
	$yygë_debug
 (
yysˇn_t
 
yysˇ¬î
)

2430 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2431  
yy_Êex_debug
;

2432 
	}
}

2434 
	$yy£t_debug
 (
_bdebug
 , 
yysˇn_t
 
yysˇ¬î
)

2436 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2437 
yy_Êex_debug
 = 
_bdebug
 ;

2438 
	}
}

2442 
YYSTYPE
 * 
	$yygë_lvÆ
 (
yysˇn_t
 
yysˇ¬î
)

2444 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2445  
yylvÆ
;

2446 
	}
}

2448 
	$yy£t_lvÆ
 (
YYSTYPE
 * 
yylvÆ_∑øm
 , 
yysˇn_t
 
yysˇ¬î
)

2450 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2451 
yylvÆ
 = 
yylvÆ_∑øm
;

2452 
	}
}

2454 
YYLTYPE
 *
	$yygë_Œoc
 (
yysˇn_t
 
yysˇ¬î
)

2456 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2457  
yyŒoc
;

2458 
	}
}

2460 
	$yy£t_Œoc
 (
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
)

2462 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2463 
yyŒoc
 = 
yyŒoc_∑øm
;

2464 
	}
}

2472 
	$yyÀx_öô
(
yysˇn_t
* 
±r_yy_globÆs
)

2474 i‡(
±r_yy_globÆs
 =
NULL
){

2475 
î∫o
 = 
EINVAL
;

2479 *
±r_yy_globÆs
 = (
yysˇn_t
Ë
	`yyÆloc
 ( –
yyguts_t
 ), 
NULL
 );

2481 i‡(*
±r_yy_globÆs
 =
NULL
){

2482 
î∫o
 = 
ENOMEM
;

2487 
	`mem£t
(*
±r_yy_globÆs
,0x00,(
yyguts_t
));

2489  
	`yy_öô_globÆs
 ( *
±r_yy_globÆs
 );

2490 
	}
}

2499 
	$yyÀx_öô_exåa
–
YY_EXTRA_TYPE
 
yy_u£r_deföed
, 
yysˇn_t
* 
±r_yy_globÆs
 )

2501 
yyguts_t
 
dummy_yyguts
;

2503 
	`yy£t_exåa
 (
yy_u£r_deföed
, &
dummy_yyguts
);

2505 i‡(
±r_yy_globÆs
 =
NULL
){

2506 
î∫o
 = 
EINVAL
;

2510 *
±r_yy_globÆs
 = (
yysˇn_t
Ë
	`yyÆloc
 ( –
yyguts_t
 ), &
dummy_yyguts
 );

2512 i‡(*
±r_yy_globÆs
 =
NULL
){

2513 
î∫o
 = 
ENOMEM
;

2519 
	`mem£t
(*
±r_yy_globÆs
,0x00,(
yyguts_t
));

2521 
	`yy£t_exåa
 (
yy_u£r_deföed
, *
±r_yy_globÆs
);

2523  
	`yy_öô_globÆs
 ( *
±r_yy_globÆs
 );

2524 
	}
}

2526 
	$yy_öô_globÆs
 (
yysˇn_t
 
yysˇ¬î
)

2528 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2533 
yyg
->
yy_buf„r_°ack
 = 
NULL
;

2534 
yyg
->
yy_buf„r_°ack_t›
 = 0;

2535 
yyg
->
yy_buf„r_°ack_max
 = 0;

2536 
yyg
->
yy_c_buf_p
 = 
NULL
;

2537 
yyg
->
yy_öô
 = 0;

2538 
yyg
->
yy_°¨t
 = 0;

2540 
yyg
->
yy_°¨t_°ack_±r
 = 0;

2541 
yyg
->
yy_°¨t_°ack_dïth
 = 0;

2542 
yyg
->
yy_°¨t_°ack
 = 
NULL
;

2545 #ifde‡
YY_STDINIT


2546 
yyö
 = 
°dö
;

2547 
yyout
 = 
°dout
;

2549 
yyö
 = 
NULL
;

2550 
yyout
 = 
NULL
;

2557 
	}
}

2560 
	$yyÀx_de°roy
 (
yysˇn_t
 
yysˇ¬î
)

2562 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2565 
YY_CURRENT_BUFFER
){

2566 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 , 
yysˇ¬î
 );

2567 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2568 
	`yyp›_buf„r_°©e
(
yysˇ¬î
);

2572 
	`yy‰ì
(
yyg
->
yy_buf„r_°ack
 , 
yysˇ¬î
);

2573 
yyg
->
yy_buf„r_°ack
 = 
NULL
;

2576 
	`yy‰ì
–
yyg
->
yy_°¨t_°ack
 , 
yysˇ¬î
 );

2577 
yyg
->
yy_°¨t_°ack
 = 
NULL
;

2581 
	`yy_öô_globÆs
–
yysˇ¬î
);

2584 
	`yy‰ì
 ( 
yysˇ¬î
 , yyscanner );

2585 
yysˇ¬î
 = 
NULL
;

2587 
	}
}

2593 #i‚de‡
yyãxt_±r


2594 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 , 
yysˇn_t
 
yysˇ¬î
)

2596 
yyguts_t
 * 
yyg
 = (yyguts_t*)
yysˇ¬î
;

2597 ()
yyg
;

2599 
i
;

2600  
i
 = 0; i < 
n
; ++i )

2601 
s1
[
i
] = 
s2
[i];

2602 
	}
}

2605 #ifde‡
YY_NEED_STRLEN


2606 
	$yy_Êex_°æí
 (c⁄° * 
s
 , 
yysˇn_t
 
yysˇ¬î
)

2608 
n
;

2609  
n
 = 0; 
s
[n]; ++n )

2612  
n
;

2613 
	}
}

2616 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2626 
	$åy_exô
(
c
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
) {

2627 
m©ch
 = 0;

2628 
ªt
;

2629 
°©e
) {

2630 
IN_PAREN
: 
m©ch
 = 
ªt
 = ')'; ;

2631 
IN_BRACKET
: 
m©ch
 = 
ªt
 = ']'; ;

2632 
IN_BRACE
: 
m©ch
 = 
ªt
 = '}'; ;

2634 
IN_QQINTERP
:

2635 
m©ch
 = ')';

2636 
ªt
 = 
QQSTRING_INTERP_END
;

2641  
INVALID_CHARACTER
;

2643 
	`as£π
(
m©ch
);

2644 i‡(
m©ch
 =
c
) {

2645 
	`yy_p›_°©e
(
yysˇ¬î
);

2646  
ªt
;

2649  
INVALID_CHARACTER
;

2651 
	}
}

2653 
	$íãr
(
c
, 
cuº°©e
, 
yysˇn_t
 
yysˇ¬î
) {

2654 
°©e
 = 0;

2655 
c
) {

2656 '(': 
°©e
 = 
IN_PAREN
; ;

2657 '[': 
°©e
 = 
IN_BRACKET
; ;

2658 '{': 
°©e
 = 
IN_BRACE
; ;

2659 
QQSTRING_INTERP_START
: 
°©e
 = 
IN_QQINTERP
; ;

2661 
	`as£π
(
°©e
);

2662 
	`yy_push_°©e
(
°©e
, 
yysˇ¬î
);

2663  
c
;

2664 
	}
}

2666 * 
	$yyÆloc
(
size_t
 
sz
, * 
exåa
) {

2667  
	`jv_mem_Æloc
(
sz
);

2668 
	}
}

2669 * 
	$yyªÆloc
(* 
p
, 
size_t
 
sz
, * 
exåa
) {

2670  
	`jv_mem_ªÆloc
(
p
, 
sz
);

2671 
	}
}

2672 
	$yy‰ì
(* 
p
, * 
exåa
) {

2673 
	`jv_mem_‰ì
(
p
);

2674 
	}
}

	@src/lexer.h

1 #i‚de‡
jq_yyHEADER_H


2 
	#jq_yyHEADER_H
 1

	)

3 
	#jq_yyIN_HEADER
 1

	)

9 
	#YY_INT_ALIGNED
 

	)

13 
	#FLEX_SCANNER


	)

14 
	#YY_FLEX_MAJOR_VERSION
 2

	)

15 
	#YY_FLEX_MINOR_VERSION
 6

	)

16 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

17 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

18 
	#FLEX_BETA


	)

21 #ifde‡
yy_¸óã_buf„r


22 
	#jq_yy_¸óã_buf„r_ALREADY_DEFINED


	)

24 
	#yy_¸óã_buf„r
 
jq_yy_¸óã_buf„r


	)

27 #ifde‡
yy_dñëe_buf„r


28 
	#jq_yy_dñëe_buf„r_ALREADY_DEFINED


	)

30 
	#yy_dñëe_buf„r
 
jq_yy_dñëe_buf„r


	)

33 #ifde‡
yy_sˇn_buf„r


34 
	#jq_yy_sˇn_buf„r_ALREADY_DEFINED


	)

36 
	#yy_sˇn_buf„r
 
jq_yy_sˇn_buf„r


	)

39 #ifde‡
yy_sˇn_°rög


40 
	#jq_yy_sˇn_°rög_ALREADY_DEFINED


	)

42 
	#yy_sˇn_°rög
 
jq_yy_sˇn_°rög


	)

45 #ifde‡
yy_sˇn_byãs


46 
	#jq_yy_sˇn_byãs_ALREADY_DEFINED


	)

48 
	#yy_sˇn_byãs
 
jq_yy_sˇn_byãs


	)

51 #ifde‡
yy_öô_buf„r


52 
	#jq_yy_öô_buf„r_ALREADY_DEFINED


	)

54 
	#yy_öô_buf„r
 
jq_yy_öô_buf„r


	)

57 #ifde‡
yy_Êush_buf„r


58 
	#jq_yy_Êush_buf„r_ALREADY_DEFINED


	)

60 
	#yy_Êush_buf„r
 
jq_yy_Êush_buf„r


	)

63 #ifde‡
yy_lﬂd_buf„r_°©e


64 
	#jq_yy_lﬂd_buf„r_°©e_ALREADY_DEFINED


	)

66 
	#yy_lﬂd_buf„r_°©e
 
jq_yy_lﬂd_buf„r_°©e


	)

69 #ifde‡
yy_swôch_to_buf„r


70 
	#jq_yy_swôch_to_buf„r_ALREADY_DEFINED


	)

72 
	#yy_swôch_to_buf„r
 
jq_yy_swôch_to_buf„r


	)

75 #ifde‡
yypush_buf„r_°©e


76 
	#jq_yypush_buf„r_°©e_ALREADY_DEFINED


	)

78 
	#yypush_buf„r_°©e
 
jq_yypush_buf„r_°©e


	)

81 #ifde‡
yyp›_buf„r_°©e


82 
	#jq_yyp›_buf„r_°©e_ALREADY_DEFINED


	)

84 
	#yyp›_buf„r_°©e
 
jq_yyp›_buf„r_°©e


	)

87 #ifde‡
yyísuª_buf„r_°ack


88 
	#jq_yyísuª_buf„r_°ack_ALREADY_DEFINED


	)

90 
	#yyísuª_buf„r_°ack
 
jq_yyísuª_buf„r_°ack


	)

93 #ifde‡
yyÀx


94 
	#jq_yyÀx_ALREADY_DEFINED


	)

96 
	#yyÀx
 
jq_yyÀx


	)

99 #ifde‡
yyª°¨t


100 
	#jq_yyª°¨t_ALREADY_DEFINED


	)

102 
	#yyª°¨t
 
jq_yyª°¨t


	)

105 #ifde‡
yyÀx_öô


106 
	#jq_yyÀx_öô_ALREADY_DEFINED


	)

108 
	#yyÀx_öô
 
jq_yyÀx_öô


	)

111 #ifde‡
yyÀx_öô_exåa


112 
	#jq_yyÀx_öô_exåa_ALREADY_DEFINED


	)

114 
	#yyÀx_öô_exåa
 
jq_yyÀx_öô_exåa


	)

117 #ifde‡
yyÀx_de°roy


118 
	#jq_yyÀx_de°roy_ALREADY_DEFINED


	)

120 
	#yyÀx_de°roy
 
jq_yyÀx_de°roy


	)

123 #ifde‡
yygë_debug


124 
	#jq_yygë_debug_ALREADY_DEFINED


	)

126 
	#yygë_debug
 
jq_yygë_debug


	)

129 #ifde‡
yy£t_debug


130 
	#jq_yy£t_debug_ALREADY_DEFINED


	)

132 
	#yy£t_debug
 
jq_yy£t_debug


	)

135 #ifde‡
yygë_exåa


136 
	#jq_yygë_exåa_ALREADY_DEFINED


	)

138 
	#yygë_exåa
 
jq_yygë_exåa


	)

141 #ifde‡
yy£t_exåa


142 
	#jq_yy£t_exåa_ALREADY_DEFINED


	)

144 
	#yy£t_exåa
 
jq_yy£t_exåa


	)

147 #ifde‡
yygë_ö


148 
	#jq_yygë_ö_ALREADY_DEFINED


	)

150 
	#yygë_ö
 
jq_yygë_ö


	)

153 #ifde‡
yy£t_ö


154 
	#jq_yy£t_ö_ALREADY_DEFINED


	)

156 
	#yy£t_ö
 
jq_yy£t_ö


	)

159 #ifde‡
yygë_out


160 
	#jq_yygë_out_ALREADY_DEFINED


	)

162 
	#yygë_out
 
jq_yygë_out


	)

165 #ifde‡
yy£t_out


166 
	#jq_yy£t_out_ALREADY_DEFINED


	)

168 
	#yy£t_out
 
jq_yy£t_out


	)

171 #ifde‡
yygë_Àng


172 
	#jq_yygë_Àng_ALREADY_DEFINED


	)

174 
	#yygë_Àng
 
jq_yygë_Àng


	)

177 #ifde‡
yygë_ãxt


178 
	#jq_yygë_ãxt_ALREADY_DEFINED


	)

180 
	#yygë_ãxt
 
jq_yygë_ãxt


	)

183 #ifde‡
yygë_löío


184 
	#jq_yygë_löío_ALREADY_DEFINED


	)

186 
	#yygë_löío
 
jq_yygë_löío


	)

189 #ifde‡
yy£t_löío


190 
	#jq_yy£t_löío_ALREADY_DEFINED


	)

192 
	#yy£t_löío
 
jq_yy£t_löío


	)

195 #ifde‡
yygë_cﬁumn


196 
	#jq_yygë_cﬁumn_ALREADY_DEFINED


	)

198 
	#yygë_cﬁumn
 
jq_yygë_cﬁumn


	)

201 #ifde‡
yy£t_cﬁumn


202 
	#jq_yy£t_cﬁumn_ALREADY_DEFINED


	)

204 
	#yy£t_cﬁumn
 
jq_yy£t_cﬁumn


	)

207 #ifde‡
yywøp


208 
	#jq_yywøp_ALREADY_DEFINED


	)

210 
	#yywøp
 
jq_yywøp


	)

213 #ifde‡
yygë_lvÆ


214 
	#jq_yygë_lvÆ_ALREADY_DEFINED


	)

216 
	#yygë_lvÆ
 
jq_yygë_lvÆ


	)

219 #ifde‡
yy£t_lvÆ


220 
	#jq_yy£t_lvÆ_ALREADY_DEFINED


	)

222 
	#yy£t_lvÆ
 
jq_yy£t_lvÆ


	)

225 #ifde‡
yygë_Œoc


226 
	#jq_yygë_Œoc_ALREADY_DEFINED


	)

228 
	#yygë_Œoc
 
jq_yygë_Œoc


	)

231 #ifde‡
yy£t_Œoc


232 
	#jq_yy£t_Œoc_ALREADY_DEFINED


	)

234 
	#yy£t_Œoc
 
jq_yy£t_Œoc


	)

237 #ifde‡
yyÆloc


238 
	#jq_yyÆloc_ALREADY_DEFINED


	)

240 
	#yyÆloc
 
jq_yyÆloc


	)

243 #ifde‡
yyªÆloc


244 
	#jq_yyªÆloc_ALREADY_DEFINED


	)

246 
	#yyªÆloc
 
jq_yyªÆloc


	)

249 #ifde‡
yy‰ì


250 
	#jq_yy‰ì_ALREADY_DEFINED


	)

252 
	#yy‰ì
 
jq_yy‰ì


	)

258 
	~<°dio.h
>

259 
	~<°rög.h
>

260 
	~<î∫o.h
>

261 
	~<°dlib.h
>

267 #i‚de‡
FLEXINT_H


268 
	#FLEXINT_H


	)

272 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

277 #i‚de‡
__STDC_LIMIT_MACROS


278 
	#__STDC_LIMIT_MACROS
 1

	)

281 
	~<öây≥s.h
>

282 
öt8_t
 
	tÊex_öt8_t
;

283 
uöt8_t
 
	tÊex_uöt8_t
;

284 
öt16_t
 
	tÊex_öt16_t
;

285 
uöt16_t
 
	tÊex_uöt16_t
;

286 
öt32_t
 
	tÊex_öt32_t
;

287 
uöt32_t
 
	tÊex_uöt32_t
;

289 sig√d 
	tÊex_öt8_t
;

290 
	tÊex_öt16_t
;

291 
	tÊex_öt32_t
;

292 
	tÊex_uöt8_t
;

293 
	tÊex_uöt16_t
;

294 
	tÊex_uöt32_t
;

297 #i‚de‡
INT8_MIN


298 
	#INT8_MIN
 (-128)

	)

300 #i‚de‡
INT16_MIN


301 
	#INT16_MIN
 (-32767-1)

	)

303 #i‚de‡
INT32_MIN


304 
	#INT32_MIN
 (-2147483647-1)

	)

306 #i‚de‡
INT8_MAX


307 
	#INT8_MAX
 (127)

	)

309 #i‚de‡
INT16_MAX


310 
	#INT16_MAX
 (32767)

	)

312 #i‚de‡
INT32_MAX


313 
	#INT32_MAX
 (2147483647)

	)

315 #i‚de‡
UINT8_MAX


316 
	#UINT8_MAX
 (255U)

	)

318 #i‚de‡
UINT16_MAX


319 
	#UINT16_MAX
 (65535U)

	)

321 #i‚de‡
UINT32_MAX


322 
	#UINT32_MAX
 (4294967295U)

	)

325 #i‚de‡
SIZE_MAX


326 
	#SIZE_MAX
 (~(
size_t
)0)

	)

336 
	#yyc⁄°
 c⁄°

	)

338 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

339 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

341 
	#yyn‹ëu∫


	)

345 #i‚de‡
YY_TYPEDEF_YY_SCANNER_T


346 
	#YY_TYPEDEF_YY_SCANNER_T


	)

347 * 
	tyysˇn_t
;

352 
	#yyö
 
yyg
->
yyö_r


	)

353 
	#yyout
 
yyg
->
yyout_r


	)

354 
	#yyexåa
 
yyg
->
yyexåa_r


	)

355 
	#yyÀng
 
yyg
->
yyÀng_r


	)

356 
	#yyãxt
 
yyg
->
yyãxt_r


	)

357 
	#yylöío
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_löío
)

	)

358 
	#yycﬁumn
 (
YY_CURRENT_BUFFER_LVALUE
->
yy_bs_cﬁumn
)

	)

359 
	#yy_Êex_debug
 
yyg
->
yy_Êex_debug_r


	)

362 #i‚de‡
YY_BUF_SIZE


363 #ifde‡
__ü64__


368 
	#YY_BUF_SIZE
 32768

	)

370 
	#YY_BUF_SIZE
 16384

	)

374 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


375 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

376 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

379 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


380 
	#YY_TYPEDEF_YY_SIZE_T


	)

381 
size_t
 
	tyy_size_t
;

384 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


385 
	#YY_STRUCT_YY_BUFFER_STATE


	)

386 
	syy_buf„r_°©e


388 
FILE
 *
	myy_öput_fûe
;

390 *
	myy_ch_buf
;

391 *
	myy_buf_pos
;

396 
	myy_buf_size
;

401 
	myy_n_ch¨s
;

407 
	myy_is_our_buf„r
;

414 
	myy_is_öãø˘ive
;

420 
	myy_©_bﬁ
;

422 
	myy_bs_löío
;

423 
	myy_bs_cﬁumn
;

428 
	myy_fûl_buf„r
;

430 
	myy_buf„r_°©us
;

435 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 , 
yysˇn_t
 
yysˇ¬î
 );

436 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
 );

437 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 , 
yysˇn_t
 
yysˇ¬î
 );

438 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
 );

439 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 , 
yysˇn_t
 
yysˇ¬î
 );

440 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 , 
yysˇn_t
 
yysˇ¬î
 );

441 
yyp›_buf„r_°©e
 ( 
yysˇn_t
 
yysˇ¬î
 );

443 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 , 
yysˇn_t
 
yysˇ¬î
 );

444 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

445 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 , 
yysˇn_t
 
yysˇ¬î
 );

447 *
yyÆloc
 ( 
yy_size_t
 , 
yysˇn_t
 
yysˇ¬î
 );

448 *
yyªÆloc
 ( *, 
yy_size_t
 , 
yysˇn_t
 
yysˇ¬î
 );

449 
yy‰ì
 ( * , 
yysˇn_t
 
yysˇ¬î
 );

453 
	#jq_yywøp
(
yysˇ¬î
Ë–1)

	)

454 
	#YY_SKIP_YYWRAP


	)

456 
	#yyãxt_±r
 
yyãxt_r


	)

458 #ifde‡
YY_HEADER_EXPORT_START_CONDITIONS


459 
	#INITIAL
 0

	)

460 
	#IN_PAREN
 1

	)

461 
	#IN_BRACKET
 2

	)

462 
	#IN_BRACE
 3

	)

463 
	#IN_QQINTERP
 4

	)

464 
	#IN_QQSTRING
 5

	)

468 #i‚de‡
YY_NO_UNISTD_H


473 
	~<uni°d.h
>

476 
	#YY_EXTRA_TYPE
 

	)

478 
yyÀx_öô
 (
yysˇn_t
* 
sˇ¬î
);

480 
yyÀx_öô_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
, 
yysˇn_t
* 
sˇ¬î
);

485 
yyÀx_de°roy
 ( 
yysˇn_t
 
yysˇ¬î
 );

487 
yygë_debug
 ( 
yysˇn_t
 
yysˇ¬î
 );

489 
yy£t_debug
 ( 
debug_Êag
 , 
yysˇn_t
 
yysˇ¬î
 );

491 
YY_EXTRA_TYPE
 
yygë_exåa
 ( 
yysˇn_t
 
yysˇ¬î
 );

493 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 , 
yysˇn_t
 
yysˇ¬î
 );

495 
FILE
 *
yygë_ö
 ( 
yysˇn_t
 
yysˇ¬î
 );

497 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

499 
FILE
 *
yygë_out
 ( 
yysˇn_t
 
yysˇ¬î
 );

501 
yy£t_out
 ( 
FILE
 * 
_out_°r
 , 
yysˇn_t
 
yysˇ¬î
 );

503 
yygë_Àng
 ( 
yysˇn_t
 
yysˇ¬î
 );

505 *
yygë_ãxt
 ( 
yysˇn_t
 
yysˇ¬î
 );

507 
yygë_löío
 ( 
yysˇn_t
 
yysˇ¬î
 );

509 
yy£t_löío
 ( 
_löe_numbî
 , 
yysˇn_t
 
yysˇ¬î
 );

511 
yygë_cﬁumn
 ( 
yysˇn_t
 
yysˇ¬î
 );

513 
yy£t_cﬁumn
 ( 
_cﬁumn_no
 , 
yysˇn_t
 
yysˇ¬î
 );

515 
YYSTYPE
 * 
yygë_lvÆ
 ( 
yysˇn_t
 
yysˇ¬î
 );

517 
yy£t_lvÆ
 ( 
YYSTYPE
 * 
yylvÆ_∑øm
 , 
yysˇn_t
 
yysˇ¬î
 );

519 
YYLTYPE
 *
yygë_Œoc
 ( 
yysˇn_t
 
yysˇ¬î
 );

521 
yy£t_Œoc
 ( 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
 );

527 #i‚de‡
YY_SKIP_YYWRAP


528 #ifde‡
__˝lu•lus


529 "C" 
yywøp
 ( 
yysˇn_t
 
yysˇ¬î
 );

531 
yywøp
 ( 
yysˇn_t
 
yysˇ¬î
 );

535 #i‚de‡
yyãxt_±r


536 
yy_Êex_°∫˝y
 ( *, c⁄° *, , 
yysˇn_t
 
yysˇ¬î
);

539 #ifde‡
YY_NEED_STRLEN


540 
yy_Êex_°æí
 ( c⁄° * , 
yysˇn_t
 
yysˇ¬î
);

543 #i‚de‡
YY_NO_INPUT


548 #i‚de‡
YY_READ_BUF_SIZE


549 #ifde‡
__ü64__


551 
	#YY_READ_BUF_SIZE
 16384

	)

553 
	#YY_READ_BUF_SIZE
 8192

	)

558 #i‚de‡
YY_START_STACK_INCR


559 
	#YY_START_STACK_INCR
 25

	)

565 #i‚de‡
YY_DECL


566 
	#YY_DECL_IS_OURS
 1

	)

568 
yyÀx
 \

569 (
YYSTYPE
 * 
yylvÆ_∑øm
, 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
);

571 
	#YY_DECL
 
yyÀx
 \

572 (
YYSTYPE
 * 
yylvÆ_∑øm
, 
YYLTYPE
 * 
yyŒoc_∑øm
 , 
yysˇn_t
 
yysˇ¬î
)

	)

577 #unde‡
YY_NEW_FILE


578 #unde‡
YY_FLUSH_BUFFER


579 #unde‡
yy_£t_bﬁ


580 #unde‡
yy_√w_buf„r


581 #unde‡
yy_£t_öãø˘ive


582 #unde‡
YY_DO_BEFORE_ACTION


584 #ifde‡
YY_DECL_IS_OURS


585 #unde‡
YY_DECL_IS_OURS


586 #unde‡
YY_DECL


589 #i‚de‡
jq_yy_¸óã_buf„r_ALREADY_DEFINED


590 #unde‡
yy_¸óã_buf„r


592 #i‚de‡
jq_yy_dñëe_buf„r_ALREADY_DEFINED


593 #unde‡
yy_dñëe_buf„r


595 #i‚de‡
jq_yy_sˇn_buf„r_ALREADY_DEFINED


596 #unde‡
yy_sˇn_buf„r


598 #i‚de‡
jq_yy_sˇn_°rög_ALREADY_DEFINED


599 #unde‡
yy_sˇn_°rög


601 #i‚de‡
jq_yy_sˇn_byãs_ALREADY_DEFINED


602 #unde‡
yy_sˇn_byãs


604 #i‚de‡
jq_yy_öô_buf„r_ALREADY_DEFINED


605 #unde‡
yy_öô_buf„r


607 #i‚de‡
jq_yy_Êush_buf„r_ALREADY_DEFINED


608 #unde‡
yy_Êush_buf„r


610 #i‚de‡
jq_yy_lﬂd_buf„r_°©e_ALREADY_DEFINED


611 #unde‡
yy_lﬂd_buf„r_°©e


613 #i‚de‡
jq_yy_swôch_to_buf„r_ALREADY_DEFINED


614 #unde‡
yy_swôch_to_buf„r


616 #i‚de‡
jq_yypush_buf„r_°©e_ALREADY_DEFINED


617 #unde‡
yypush_buf„r_°©e


619 #i‚de‡
jq_yyp›_buf„r_°©e_ALREADY_DEFINED


620 #unde‡
yyp›_buf„r_°©e


622 #i‚de‡
jq_yyísuª_buf„r_°ack_ALREADY_DEFINED


623 #unde‡
yyísuª_buf„r_°ack


625 #i‚de‡
jq_yyÀx_ALREADY_DEFINED


626 #unde‡
yyÀx


628 #i‚de‡
jq_yyª°¨t_ALREADY_DEFINED


629 #unde‡
yyª°¨t


631 #i‚de‡
jq_yyÀx_öô_ALREADY_DEFINED


632 #unde‡
yyÀx_öô


634 #i‚de‡
jq_yyÀx_öô_exåa_ALREADY_DEFINED


635 #unde‡
yyÀx_öô_exåa


637 #i‚de‡
jq_yyÀx_de°roy_ALREADY_DEFINED


638 #unde‡
yyÀx_de°roy


640 #i‚de‡
jq_yygë_debug_ALREADY_DEFINED


641 #unde‡
yygë_debug


643 #i‚de‡
jq_yy£t_debug_ALREADY_DEFINED


644 #unde‡
yy£t_debug


646 #i‚de‡
jq_yygë_exåa_ALREADY_DEFINED


647 #unde‡
yygë_exåa


649 #i‚de‡
jq_yy£t_exåa_ALREADY_DEFINED


650 #unde‡
yy£t_exåa


652 #i‚de‡
jq_yygë_ö_ALREADY_DEFINED


653 #unde‡
yygë_ö


655 #i‚de‡
jq_yy£t_ö_ALREADY_DEFINED


656 #unde‡
yy£t_ö


658 #i‚de‡
jq_yygë_out_ALREADY_DEFINED


659 #unde‡
yygë_out


661 #i‚de‡
jq_yy£t_out_ALREADY_DEFINED


662 #unde‡
yy£t_out


664 #i‚de‡
jq_yygë_Àng_ALREADY_DEFINED


665 #unde‡
yygë_Àng


667 #i‚de‡
jq_yygë_ãxt_ALREADY_DEFINED


668 #unde‡
yygë_ãxt


670 #i‚de‡
jq_yygë_löío_ALREADY_DEFINED


671 #unde‡
yygë_löío


673 #i‚de‡
jq_yy£t_löío_ALREADY_DEFINED


674 #unde‡
yy£t_löío


676 #i‚de‡
jq_yygë_cﬁumn_ALREADY_DEFINED


677 #unde‡
yygë_cﬁumn


679 #i‚de‡
jq_yy£t_cﬁumn_ALREADY_DEFINED


680 #unde‡
yy£t_cﬁumn


682 #i‚de‡
jq_yywøp_ALREADY_DEFINED


683 #unde‡
yywøp


685 #i‚de‡
jq_yygë_lvÆ_ALREADY_DEFINED


686 #unde‡
yygë_lvÆ


688 #i‚de‡
jq_yy£t_lvÆ_ALREADY_DEFINED


689 #unde‡
yy£t_lvÆ


691 #i‚de‡
jq_yygë_Œoc_ALREADY_DEFINED


692 #unde‡
yygë_Œoc


694 #i‚de‡
jq_yy£t_Œoc_ALREADY_DEFINED


695 #unde‡
yy£t_Œoc


697 #i‚de‡
jq_yyÆloc_ALREADY_DEFINED


698 #unde‡
yyÆloc


700 #i‚de‡
jq_yyªÆloc_ALREADY_DEFINED


701 #unde‡
yyªÆloc


703 #i‚de‡
jq_yy‰ì_ALREADY_DEFINED


704 #unde‡
yy‰ì


706 #i‚de‡
jq_yyãxt_ALREADY_DEFINED


707 #unde‡
yyãxt


709 #i‚de‡
jq_yyÀng_ALREADY_DEFINED


710 #unde‡
yyÀng


712 #i‚de‡
jq_yyö_ALREADY_DEFINED


713 #unde‡
yyö


715 #i‚de‡
jq_yyout_ALREADY_DEFINED


716 #unde‡
yyout


718 #i‚de‡
jq_yy_Êex_debug_ALREADY_DEFINED


719 #unde‡
yy_Êex_debug


721 #i‚de‡
jq_yylöío_ALREADY_DEFINED


722 #unde‡
yylöío


724 #i‚de‡
jq_yyèbÀs_Êﬂd_ALREADY_DEFINED


725 #unde‡
yyèbÀs_Êﬂd


727 #i‚de‡
jq_yyèbÀs_de°roy_ALREADY_DEFINED


728 #unde‡
yyèbÀs_de°roy


730 #i‚de‡
jq_yyTABLES_NAME_ALREADY_DEFINED


731 #unde‡
yyTABLES_NAME


738 #unde‡
jq_yyIN_HEADER


	@src/lexer.l

2 
	~<as£π.h
>

3 
	~"jv_Æloc.h
"

4 
	~"compûe.h
"

6 
	gÀxî_∑øm
;

8 
	~"∑r£r.h
"

10 
	#YY_USER_ACTION
 \

12 
yyŒoc
->
°¨t
 = 
	`yygë_exåa
(
yysˇ¬î
); \

13 
yyŒoc
->
íd
 = yyŒoc->
°¨t
 + 
yyÀng
; \

14 
	`yy£t_exåa
(
yyŒoc
->
íd
, 
yysˇ¬î
); \

15 } 0);

	)

19 %
s
 
IN_PAREN


20 %
s
 
IN_BRACKET


21 %
s
 
IN_BRACE


22 %
s
 
IN_QQINTERP


23 %
x
 
IN_QQSTRING


25 
íãr
(
›íög
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
);

26 
åy_exô
(
˛osög
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
);

29 %
›ti⁄
 
noyywøp
 
nou≈ut
 
noöput
 
nodeÁu…


30 %
›ti⁄
 
noyyÆloc
 
noyyªÆloc
 
noyy‰ì


31 %
›ti⁄
 
ªíå™t


32 %
›ti⁄
 
exåa
-
ty≥
="int"

33 %
›ti⁄
 
bis⁄
-
bridge
 bis⁄-
loˇti⁄s


34 %
›ti⁄
 
¥efix
="jq_yy"

35 %
›ti⁄
 
°ack


38 %% /* 
	$yyÀx
 */

40 "#"[^\
r
\
n
]* { }

42 "!=" {  
NEQ
; }

43 "==" {  
EQ
; }

44 "as" {  
AS
; }

45 "imp‹t" {  
IMPORT
; }

46 "ö˛ude" {  
INCLUDE
; }

47 "moduÀ" {  
MODULE
; }

48 "def" {  
DEF
; }

49 "if" {  
IF
; }

50 "thí" {  
THEN
; }

51 "ñ£" {  
ELSE
; }

52 "ñif" {  
ELSE_IF
; }

53 "™d" {  
AND
; }

54 "‹" {  
OR
; }

55 "íd" {  
END
; }

56 "ªdu˚" {  
REDUCE
; }

57 "f‹óch" {  
FOREACH
; }

58 "//" {  
DEFINEDOR
; }

59 "åy" {  
TRY
; }

60 "ˇtch" {  
CATCH
; }

61 "œbñ" {  
LABEL
; }

62 "bªak" {  
BREAK
; }

63 "__loc__" {  
LOC
; }

64 "|=" {  
SETPIPE
; }

65 "+=" {  
SETPLUS
; }

66 "-=" {  
SETMINUS
; }

67 "*=" {  
SETMULT
; }

68 "/=" {  
SETDIV
; }

69 "%=" {  
SETMOD
; }

70 "//=" {  
SETDEFINEDOR
; }

71 "<=" {  
LESSEQ
; }

72 ">=" {  
GREATEREQ
; }

73 ".." {  
REC
; }

74 "?//" {  
ALTERNATION
; }

75 "."|"?"|"="|";"|","|":"|"|"|"+"|"-"|"*"|"/"|"%"|"\$"|"<"|">" {  
yyãxt
[0];}

78  
	`íãr
(
yyãxt
[0], 
YY_START
, 
yysˇ¬î
);

82  
	`åy_exô
(
yyãxt
[0], 
YY_START
, 
yysˇ¬î
);

85 "@"[
a
-
zA
-
Z0
-9
_
]+ {

86 
yylvÆ
->
lôîÆ
 = 
	`jv_°rög_sized
(
yyãxt
 + 1, 
yyÀng
 - 1);  
FORMAT
;

89 [0-9.]+([
eE
][+-]?[0-9]+)? {

90 
yylvÆ
->
lôîÆ
 = 
	`jv_∑r£_sized
(
yyãxt
, 
yyÀng
);  
LITERAL
;

94 
	`yy_push_°©e
(
IN_QQSTRING
, 
yysˇ¬î
);

95  
QQSTRING_START
;

98 <
IN_QQSTRING
>{

100  
	`íãr
(
QQSTRING_INTERP_START
, 
YY_START
, 
yysˇ¬î
);

103 
	`yy_p›_°©e
(
yysˇ¬î
);

104  
QQSTRING_END
;

106 (\\[^
	`u
(]|\\
u
[
a
-
zA
-
Z0
-9]{0,4})+ {

108 
jv
 
esˇ≥s
 = 
	`jv_°rög_fmt
("\"%.*s\"", ()
yyÀng
, 
yyãxt
);

109 
yylvÆ
->
lôîÆ
 = 
	`jv_∑r£_sized
(
	`jv_°rög_vÆue
(
esˇ≥s
), 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(escapes)));

110 
	`jv_‰ì
(
esˇ≥s
);

111  
QQSTRING_TEXT
;

114 
yylvÆ
->
lôîÆ
 = 
	`jv_°rög_sized
(
yyãxt
, 
yyÀng
);

115  
QQSTRING_TEXT
;

118  
INVALID_CHARACTER
;

123 ([
a
-
zA
-
Z_
][a-zA-
Z_0
-9]*::)*[a-zA-Z_][a-zA-Z_0-9]* { 
yylvÆ
->
lôîÆ
 = 
	`jv_°rög
(
yyãxt
);  
IDENT
;}

124 \.[
a
-
zA
-
Z_
][a-zA-
Z_0
-9]* { 
yylvÆ
->
lôîÆ
 = 
	`jv_°rög
(
yyãxt
+1);  
FIELD
;}

126 [ \
n
\
t
]+ {}

128 . {  
INVALID_CHARACTER
; }

130 
	}
%%

137 
	$åy_exô
(
c
, 
°©e
, 
yysˇn_t
 
yysˇ¬î
) {

138 
m©ch
 = 0;

139 
ªt
;

140 
°©e
) {

141 
IN_PAREN
: 
m©ch
 = 
ªt
 = ')'; ;

142 
IN_BRACKET
: 
m©ch
 = 
ªt
 = ']'; ;

143 
IN_BRACE
: 
m©ch
 = 
ªt
 = '}'; ;

145 
IN_QQINTERP
:

146 
m©ch
 = ')';

147 
ªt
 = 
QQSTRING_INTERP_END
;

152  
INVALID_CHARACTER
;

154 
	`as£π
(
m©ch
);

155 i‡(
m©ch
 =
c
) {

156 
	`yy_p›_°©e
(
yysˇ¬î
);

157  
ªt
;

160  
INVALID_CHARACTER
;

162 
	}
}

164 
	$íãr
(
c
, 
cuº°©e
, 
yysˇn_t
 
yysˇ¬î
) {

165 
°©e
 = 0;

166 
c
) {

167 '(': 
°©e
 = 
IN_PAREN
; ;

168 '[': 
°©e
 = 
IN_BRACKET
; ;

169 '{': 
°©e
 = 
IN_BRACE
; ;

170 
QQSTRING_INTERP_START
: 
°©e
 = 
IN_QQINTERP
; ;

172 
	`as£π
(
°©e
);

173 
	`yy_push_°©e
(
°©e
, 
yysˇ¬î
);

174  
c
;

175 
	}
}

177 * 
	$yyÆloc
(
size_t
 
sz
, * 
exåa
) {

178  
	`jv_mem_Æloc
(
sz
);

179 
	}
}

180 * 
	$yyªÆloc
(* 
p
, 
size_t
 
sz
, * 
exåa
) {

181  
	`jv_mem_ªÆloc
(
p
, 
sz
);

182 
	}
}

183 
	$yy‰ì
(* 
p
, * 
exåa
) {

184 
	`jv_mem_‰ì
(
p
);

185 
	}
}

	@src/libm.h

1 #ifde‡
HAVE_ACOS


2 
	$LIBM_DD
(
acos
)

4 
	$LIBM_DD_NO
(
acos
)

6 #ifde‡
HAVE_ACOSH


7 
	$LIBM_DD
(
acosh
)

9 
	$LIBM_DD_NO
(
acosh
)

11 #ifde‡
HAVE_ASIN


12 
	$LIBM_DD
(
asö
)

14 
	$LIBM_DD_NO
(
asö
)

16 #ifde‡
HAVE_ASINH


17 
	$LIBM_DD
(
asöh
)

19 
	$LIBM_DD_NO
(
asöh
)

21 #ifde‡
HAVE_ATAN


22 
	$LIBM_DD
(
©™
)

24 
	$LIBM_DD_NO
(
©™
)

26 #ifde‡
HAVE_ATAN2


27 
	$LIBM_DDD
(
©™2
)

29 
	$LIBM_DDD_NO
(
©™2
)

31 #ifde‡
HAVE_ATANH


32 
	$LIBM_DD
(
©™h
)

34 
	$LIBM_DD_NO
(
©™h
)

36 #ifde‡
HAVE_CBRT


37 
	$LIBM_DD
(
cbπ
)

39 
	$LIBM_DD_NO
(
cbπ
)

41 #ifde‡
HAVE_COS


42 
	$LIBM_DD
(
cos
)

44 
	$LIBM_DD_NO
(
cos
)

46 #ifde‡
HAVE_COSH


47 
	$LIBM_DD
(
cosh
)

49 
	$LIBM_DD_NO
(
cosh
)

51 #ifde‡
HAVE_EXP


52 
	$LIBM_DD
(
exp
)

54 
	$LIBM_DD_NO
(
exp
)

56 #ifde‡
HAVE_EXP2


57 
	$LIBM_DD
(
exp2
)

59 
	$LIBM_DD_NO
(
exp2
)

61 #ifde‡
HAVE_FLOOR


62 
	$LIBM_DD
(
Êo‹
)

64 
	$LIBM_DD_NO
(
Êo‹
)

66 #ifde‡
HAVE_HYPOT


67 
	$LIBM_DDD
(
hypŸ
)

69 
	$LIBM_DDD_NO
(
hypŸ
)

71 #ifde‡
HAVE_J0


72 
	$LIBM_DD
(
j0
)

74 
	$LIBM_DD_NO
(
j0
)

76 #ifde‡
HAVE_J1


77 
	$LIBM_DD
(
j1
)

79 
	$LIBM_DD_NO
(
j1
)

81 #ifde‡
HAVE_LOG


82 
	$LIBM_DD
(
log
)

84 
	$LIBM_DD_NO
(
log
)

86 #ifde‡
HAVE_LOG10


87 
	$LIBM_DD
(
log10
)

89 
	$LIBM_DD_NO
(
log10
)

91 #ifde‡
HAVE_LOG2


92 
	$LIBM_DD
(
log2
)

94 
	$LIBM_DD_NO
(
log2
)

96 #ifde‡
HAVE_POW


97 
	$LIBM_DDD
(
pow
)

99 
	$LIBM_DDD_NO
(
pow
)

101 #ifde‡
HAVE_REMAINDER


102 
	$LIBM_DDD
(
ªmaödî
)

104 
	$LIBM_DDD_NO
(
ªmaödî
)

106 #ifde‡
HAVE_SIN


107 
	$LIBM_DD
(
sö
)

109 
	$LIBM_DD_NO
(
sö
)

111 #ifde‡
HAVE_SINH


112 
	$LIBM_DD
(
söh
)

114 
	$LIBM_DD_NO
(
söh
)

116 #ifde‡
HAVE_SQRT


117 
	$LIBM_DD
(
sqπ
)

119 
	$LIBM_DD_NO
(
sqπ
)

121 #ifde‡
HAVE_TAN


122 
	$LIBM_DD
(
èn
)

124 
	$LIBM_DD_NO
(
èn
)

126 #ifde‡
HAVE_TANH


127 
	$LIBM_DD
(
ènh
)

129 
	$LIBM_DD_NO
(
ènh
)

131 #ifde‡
HAVE_TGAMMA


132 
	$LIBM_DD
(
tgamma
)

134 
	$LIBM_DD_NO
(
tgamma
)

136 #ifde‡
HAVE_Y0


137 
	$LIBM_DD
(
y0
)

139 
	$LIBM_DD_NO
(
y0
)

141 #ifde‡
HAVE_Y1


142 
	$LIBM_DD
(
y1
)

144 
	$LIBM_DD_NO
(
y1
)

146 #ifde‡
HAVE_JN


147 
	$LIBM_DDD
(
jn
)

149 #ifde‡
HAVE_YN


150 
	$LIBM_DDD
(
yn
)

152 #ifde‡
HAVE_CEIL


153 
	$LIBM_DD
(
˚û
)

155 
	$LIBM_DD_NO
(
˚û
)

157 #ifde‡
HAVE_COPYSIGN


158 
	$LIBM_DDD
(
c›ysign
)

160 
	$LIBM_DDD_NO
(
c›ysign
)

162 #i‡
	`deföed
(
HAVE_DREM
Ë&& !deföed(
WIN32
)

163 
	$LIBM_DDD
(
dªm
)

165 
	$LIBM_DDD_NO
(
dªm
)

167 #ifde‡
HAVE_ERF


168 
	$LIBM_DD
(
îf
)

170 
	$LIBM_DD_NO
(
îf
)

172 #ifde‡
HAVE_ERFC


173 
	$LIBM_DD
(
îfc
)

175 
	$LIBM_DD_NO
(
îfc
)

177 #i‡(
	`deföed
(
HAVE_EXP10
Ë&& !deföed(
WIN32
)Ë|| (deföed(
__APPLE__
Ë&& deföed(
HAVE___EXP10
))

178 
	$LIBM_DD
(
exp10
)

180 
	$LIBM_DD_NO
(
exp10
)

182 #ifde‡
HAVE_EXPM1


183 
	$LIBM_DD
(
expm1
)

185 
	$LIBM_DD_NO
(
expm1
)

187 #ifde‡
HAVE_FABS


188 
	$LIBM_DD
(
Ábs
)

190 
	$LIBM_DD_NO
(
Ábs
)

192 #ifde‡
HAVE_FDIM


193 
	$LIBM_DDD
(
fdim
)

195 
	$LIBM_DDD_NO
(
fdim
)

197 #ifde‡
HAVE_FMA


198 
	$LIBM_DDDD
(
fma
)

200 
	$LIBM_DDDD_NO
(
fma
)

202 #ifde‡
HAVE_FMAX


203 
	$LIBM_DDD
(
fmax
)

205 
	$LIBM_DDD_NO
(
fmax
)

207 #ifde‡
HAVE_FMIN


208 
	$LIBM_DDD
(
fmö
)

210 
	$LIBM_DDD_NO
(
fmö
)

212 #ifde‡
HAVE_FMOD


213 
	$LIBM_DDD
(
fmod
)

215 
	$LIBM_DDD_NO
(
fmod
)

217 #i‡
	`deföed
(
HAVE_GAMMA
)

218 
	$LIBM_DD
(
gamma
)

220 
	$LIBM_DD_NO
(
gamma
)

222 #ifde‡
HAVE_LGAMMA


223 
	$LIBM_DD
(
lgamma
)

225 
	$LIBM_DD_NO
(
lgamma
)

227 #ifde‡
HAVE_LOG1P


228 
	$LIBM_DD
(
log1p
)

230 
	$LIBM_DD_NO
(
log1p
)

232 #ifde‡
HAVE_LOGB


233 
	$LIBM_DD
(
logb
)

235 
	$LIBM_DD_NO
(
logb
)

237 #ifde‡
HAVE_NEARBYINT


238 
	$LIBM_DD
(
√¨byöt
)

240 
	$LIBM_DD_NO
(
√¨byöt
)

242 #ifde‡
HAVE_NEXTAFTER


243 
	$LIBM_DDD
(
√xè·î
)

245 
	$LIBM_DDD_NO
(
√xè·î
)

247 #ifde‡
HAVE_NEXTTOWARD


248 
	$LIBM_DDD
(
√xâow¨d
)

250 
	$LIBM_DDD_NO
(
√xâow¨d
)

252 #i‡
	`deföed
(
HAVE_POW10
Ë&& !deföed(
WIN32
)

253 
	$LIBM_DD
(
pow10
)

255 
	$LIBM_DD_NO
(
pow10
)

257 #ifde‡
HAVE_RINT


258 
	$LIBM_DD
(
röt
)

260 
	$LIBM_DD_NO
(
röt
)

262 #ifde‡
HAVE_ROUND


263 
	$LIBM_DD
(
round
)

265 
	$LIBM_DD_NO
(
round
)

267 #ifde‡
HAVE_SCALB


268 
	$LIBM_DDD
(
sˇlb
)

270 
	$LIBM_DDD_NO
(
sˇlb
)

272 #ifde‡
HAVE_SCALBLN


273 
	$LIBM_DDD
(
sˇlb 
)

275 
	$LIBM_DDD_NO
(
sˇlb 
)

277 #i‡
	`deföed
(
HAVE_CUSTOM_SIGNIFICAND
Ë|| (deföed(
HAVE_SIGNIFICAND
Ë&& !deföed(
WIN32
))

278 
	$LIBM_DD
(
signifiˇnd
)

280 
	$LIBM_DD_NO
(
signifiˇnd
)

282 #ifde‡
HAVE_TRUNC


283 
	$LIBM_DD
(
åunc
)

285 
	$LIBM_DD_NO
(
åunc
)

287 #ifde‡
HAVE_LDEXP


288 
	$LIBM_DDD
(
ldexp
)

290 
	$LIBM_DDD_NO
(
ldexp
)

	@src/linker.c

1 
	~<as£π.h
>

2 
	~<î∫o.h
>

3 
	~<limôs.h
>

4 
	~<°rög.h
>

5 
	~<°dio.h
>

6 
	~<°dlib.h
>

7 
	~<°döt.h
>

8 
	~<sys/°©.h
>

9 
	~<libgí.h
>

11 #ifde‡
WIN32


12 
	~<shlw≠i.h
>

15 
	~"jq_∑r£r.h
"

16 
	~"locfûe.h
"

17 
	~"jv.h
"

18 
	~"jq.h
"

19 
	~"∑r£r.h
"

20 
	~"utû.h
"

21 
	~"compûe.h
"

22 
	~"jv_Æloc.h
"

24 
	slib_lﬂdög_°©e
 {

25 **
	m«mes
;

26 
block
 *
	mdefs
;

27 
uöt64_t
 
	m˘
;

29 
lﬂd_libøry
(
jq_°©e
 *
jq
, 
jv
 
lib_∑th
,

30 
is_d©a
, 
øw
, 
›ti⁄Æ
,

31 c⁄° *
as
, 
block
 *
out_block
,

32 
lib_lﬂdög_°©e
 *
lib_°©e
);

34 
	$∑th_is_ªœtive
(
jv
 
p
) {

35 c⁄° *
s
 = 
	`jv_°rög_vÆue
(
p
);

37 #ifde‡
WIN32


38 
ªs
 = 
	`P©hIsRñ©iveA
(
s
);

40 
ªs
 = *
s
 != '/';

42 
	`jv_‰ì
(
p
);

43  
ªs
;

44 
	}
}

51 
jv
 
	$buûd_lib_£¨ch_chaö
(
jq_°©e
 *
jq
, 
jv
 
£¨ch_∑th
, jv 
jq_‹igö
, jv 
lib_‹igö
) {

52 
	`as£π
(
	`jv_gë_köd
(
£¨ch_∑th
Ë=
JV_KIND_ARRAY
);

53 
jv
 
ex∑nded
 = 
	`jv_¨øy
();

54 
jv
 
ex∑nded_ñt
;

55 
jv
 
îr
 = 
	`jv_nuŒ
();

56 
	`jv_¨øy_f‹óch
(
£¨ch_∑th
, 
i
, 
∑th
) {

57 i‡(
	`jv_gë_köd
(
∑th
Ë!
JV_KIND_STRING
) {

58 
	`jv_‰ì
(
∑th
);

61 
∑th
 = 
	`ex∑nd_∑th
(path);

62 i‡(!
	`jv_is_vÆid
(
∑th
)) {

63 
îr
 = 
∑th
;

64 
∑th
 = 
	`jv_nuŒ
();

67 i‡(
	`°rcmp
(".",
	`jv_°rög_vÆue
(
∑th
)) == 0) {

68 
ex∑nded_ñt
 = 
	`jv_c›y
(
∑th
);

69 } i‡(
	`°∫cmp
("$ORIGIN/",
	`jv_°rög_vÆue
(
∑th
),("$ORIGIN/") - 1) == 0) {

70 
ex∑nded_ñt
 = 
	`jv_°rög_fmt
("%s/%s",

71 
	`jv_°rög_vÆue
(
jq_‹igö
),

72 
	`jv_°rög_vÆue
(
∑th
) +  ("$ORIGIN/") - 1);

73 } i‡(
	`jv_gë_köd
(
lib_‹igö
Ë=
JV_KIND_STRING
 &&

74 
	`∑th_is_ªœtive
(
	`jv_c›y
(
∑th
))) {

75 
ex∑nded_ñt
 = 
	`jv_°rög_fmt
("%s/%s",

76 
	`jv_°rög_vÆue
(
lib_‹igö
),

77 
	`jv_°rög_vÆue
(
∑th
));

79 
ex∑nded_ñt
 = 
∑th
;

80 
∑th
 = 
	`jv_övÆid
();

82 
ex∑nded
 = 
	`jv_¨øy_≠≥nd
”x∑nded, 
ex∑nded_ñt
);

83 
	`jv_‰ì
(
∑th
);

85 
	`jv_‰ì
(
jq_‹igö
);

86 
	`jv_‰ì
(
lib_‹igö
);

87 
	`jv_‰ì
(
£¨ch_∑th
);

88  
	`JV_ARRAY
(
ex∑nded
, 
îr
);

89 
	}
}

94 
jv
 
	$vÆid©e_ªÕ©h
(
jv
 
«me
) {

95 c⁄° *
s
 = 
	`jv_°rög_vÆue
(
«me
);

96 i‡(
	`°rchr
(
s
, '\\')) {

97 
jv
 
ªs
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("ModuÀ†mu° bê«med byÑñ©ivê∑th†usög '/',ÇŸ '\\' (%s)", 
s
));

98 
	`jv_‰ì
(
«me
);

99  
ªs
;

101 
jv
 
comp⁄íts
 = 
	`jv_°rög_•lô
(
	`jv_c›y
(
«me
), 
	`jv_°rög
("/"));

102 
	`jv_¨øy_f‹óch
(
comp⁄íts
, 
i
, 
x
) {

103 i‡(!
	`°rcmp
(
	`jv_°rög_vÆue
(
x
), "..")) {

104 
	`jv_‰ì
(
x
);

105 
	`jv_‰ì
(
comp⁄íts
);

106 
jv
 
ªs
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Rñ©ivê∑th†tÿmoduÀ†mayÇŸÅøvî£Åÿ∑ª¡ dúe˘‹õ†(%s)", 
s
));

107 
	`jv_‰ì
(
«me
);

108  
ªs
;

110 i‡(
i
 > 0 && 
	`jv_equÆ
(
	`jv_c›y
(
x
), 
	`jv_¨øy_gë
(jv_c›y(
comp⁄íts
), i - 1))) {

111 
	`jv_‰ì
(
x
);

112 
	`jv_‰ì
(
comp⁄íts
);

113 
jv
 
ªs
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("moduleÇames mustÇot haveÉqual consecutive components: %s",

114 
	`jv_°rög_vÆue
(
«me
)));

115 
	`jv_‰ì
(
«me
);

116  
ªs
;

118 
	`jv_‰ì
(
x
);

120 
	`jv_‰ì
(
comp⁄íts
);

121  
«me
;

122 
	}
}

125 
jv
 
	$jv_ba£«me
(
jv
 
«me
) {

126 c⁄° *
s
 = 
	`jv_°rög_vÆue
(
«me
);

127 c⁄° *
p
 = 
	`°ºchr
(
s
, '/');

128 i‡(!
p
)

129  
«me
;

130 
jv
 
ªs
 = 
	`jv_°rög_fmt
("%s", 
p
);

131 
	`jv_‰ì
(
«me
);

132  
ªs
;

133 
	}
}

136 
jv
 
	$föd_lib
(
jq_°©e
 *
jq
, 
jv
 
ªl_∑th
, jv 
£¨ch
, c⁄° *
suffix
, jv 
jq_‹igö
, jv 
lib_‹igö
) {

137 i‡(!
	`jv_is_vÆid
(
ªl_∑th
)) {

138 
	`jv_‰ì
(
£¨ch
);

139  
ªl_∑th
;

141 i‡(
	`jv_gë_köd
(
ªl_∑th
Ë!
JV_KIND_STRING
) {

142 
	`jv_‰ì
(
ªl_∑th
);

143 
	`jv_‰ì
(
£¨ch
);

144  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("ModuleÖath must beá string"));

146 i‡(
	`jv_gë_köd
(
£¨ch
Ë!
JV_KIND_ARRAY
) {

147 
	`jv_‰ì
(
ªl_∑th
);

148 
	`jv_‰ì
(
£¨ch
);

149  
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("Module searchÖath must beánárray"));

152 
°©
 
°
;

153 
ªt
;

156 
£¨ch
 = 
	`buûd_lib_£¨ch_chaö
(
jq
, sórch, 
jq_‹igö
, 
lib_‹igö
);

157 
jv
 
îr
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
£¨ch
), 1);

158 
£¨ch
 = 
	`jv_¨øy_gë
(search, 0);

160 
jv
 
b«me
 = 
	`jv_ba£«me
(
	`jv_c›y
(
ªl_∑th
));

162 
	`jv_¨øy_f‹óch
(
£¨ch
, 
i
, 
•©h
) {

163 i‡(
	`jv_gë_köd
(
•©h
Ë=
JV_KIND_NULL
) {

164 
	`jv_‰ì
(
•©h
);

167 i‡(
	`jv_gë_köd
(
•©h
Ë!
JV_KIND_STRING
 ||

168 
	`°rcmp
(
	`jv_°rög_vÆue
(
•©h
), "") == 0) {

169 
	`jv_‰ì
(
•©h
);

173 
jv
 
ã°∑th
 = 
	`jq_ªÆ∑th
(
	`jv_°rög_fmt
("%s/%s%s",

174 
	`jv_°rög_vÆue
(
•©h
),

175 
	`jv_°rög_vÆue
(
ªl_∑th
),

176 
suffix
));

177 
ªt
 = 
	`°©
(
	`jv_°rög_vÆue
(
ã°∑th
),&
°
);

178 i‡(
ªt
 =-1 && 
î∫o
 =
ENOENT
) {

179 
	`jv_‰ì
(
ã°∑th
);

181 
ã°∑th
 = 
	`jq_ªÆ∑th
(
	`jv_°rög_fmt
("%s/%s/%s%s",

182 
	`jv_°rög_vÆue
(
•©h
),

183 
	`jv_°rög_vÆue
(
ªl_∑th
),

185 
suffix
));

186 
ªt
 = 
	`°©
(
	`jv_°rög_vÆue
(
ã°∑th
),&
°
);

188 i‡(
ªt
 =-1 && 
î∫o
 =
ENOENT
) {

189 
	`jv_‰ì
(
ã°∑th
);

191 
ã°∑th
 = 
	`jq_ªÆ∑th
(
	`jv_°rög_fmt
("%s/%s/%s%s",

192 
	`jv_°rög_vÆue
(
•©h
),

193 
	`jv_°rög_vÆue
(
ªl_∑th
),

194 
	`jv_°rög_vÆue
(
b«me
),

195 
suffix
));

196 
ªt
 = 
	`°©
(
	`jv_°rög_vÆue
(
ã°∑th
),&
°
);

198 i‡(
ªt
 == 0) {

199 
	`jv_‰ì
(
îr
);

200 
	`jv_‰ì
(
ªl_∑th
);

201 
	`jv_‰ì
(
£¨ch
);

202 
	`jv_‰ì
(
b«me
);

203 
	`jv_‰ì
(
•©h
);

204  
ã°∑th
;

206 
	`jv_‰ì
(
ã°∑th
);

207 
	`jv_‰ì
(
•©h
);

209 
jv
 
ouçut
;

210 i‡(!
	`jv_is_vÆid
(
îr
)) {

211 
îr
 = 
	`jv_övÆid_gë_msg
(err);

212 
ouçut
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("moduleÇot found: %s (%s)",

213 
	`jv_°rög_vÆue
(
ªl_∑th
),

214 
	`jv_°rög_vÆue
(
îr
)));

216 
ouçut
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("moduleÇot found: %s",

217 
	`jv_°rög_vÆue
(
ªl_∑th
)));

219 
	`jv_‰ì
(
îr
);

220 
	`jv_‰ì
(
ªl_∑th
);

221 
	`jv_‰ì
(
£¨ch
);

222 
	`jv_‰ì
(
b«me
);

223  
ouçut
;

224 
	}
}

226 
jv
 
	$deÁu…_£¨ch
(
jq_°©e
 *
jq
, 
jv
 
vÆue
) {

227 i‡(!
	`jv_is_vÆid
(
vÆue
)) {

229 
	`jv_‰ì
(
vÆue
);

230  
	`jv_¨øy_c⁄ˇt
(
	`JV_ARRAY
(
	`jv_°rög
(".")), 
	`jq_gë_lib_dús
(
jq
));

232 i‡(
	`jv_gë_köd
(
vÆue
Ë!
JV_KIND_ARRAY
)

233  
	`JV_ARRAY
(
vÆue
);

234  
vÆue
;

235 
	}
}

238 
	$¥o˚ss_dïídícõs
(
jq_°©e
 *
jq
, 
jv
 
jq_‹igö
, jv 
lib_‹igö
, 
block
 *
§c_block
, 
lib_lﬂdög_°©e
 *
lib_°©e
) {

239 
jv
 
dïs
 = 
	`block_èke_imp‹ts
(
§c_block
);

240 
block
 
bk
 = *
§c_block
;

241 
√º‹s
 = 0;

244 
i
 = 
	`jv_¨øy_Àngth
(
	`jv_c›y
(
dïs
)); i > 0; ) {

245 
i
--;

246 
jv
 
dï
 = 
	`jv_¨øy_gë
(
	`jv_c›y
(
dïs
), 
i
);

248 c⁄° *
as_°r
 = 
NULL
;

249 
is_d©a
 = 
	`jv_gë_köd
(
	`jv_obje˘_gë
(
	`jv_c›y
(
dï
), 
	`jv_°rög
("is_d©a"))Ë=
JV_KIND_TRUE
;

250 
øw
 = 0;

251 
jv
 
v
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
dï
), 
	`jv_°rög
("raw"));

252 i‡(
	`jv_gë_köd
(
v
Ë=
JV_KIND_TRUE
)

253 
øw
 = 1;

254 
›ti⁄Æ
 = 0;

255 i‡(
	`jv_gë_köd
(
	`jv_obje˘_gë
(
	`jv_c›y
(
dï
), 
	`jv_°rög
("›ti⁄Æ"))Ë=
JV_KIND_TRUE
)

256 
›ti⁄Æ
 = 1;

257 
	`jv_‰ì
(
v
);

258 
jv
 
ªÕ©h
 = 
	`vÆid©e_ªÕ©h
(
	`jv_obje˘_gë
(
	`jv_c›y
(
dï
), 
	`jv_°rög
("relpath")));

259 
jv
 
as
 = 
	`jv_obje˘_gë
(
	`jv_c›y
(
dï
), 
	`jv_°rög
("as"));

260 
	`as£π
(!
	`jv_is_vÆid
(
as
Ë|| 
	`jv_gë_köd
◊sË=
JV_KIND_STRING
);

261 i‡(
	`jv_gë_köd
(
as
Ë=
JV_KIND_STRING
)

262 
as_°r
 = 
	`jv_°rög_vÆue
(
as
);

263 
jv
 
£¨ch
 = 
	`deÁu…_£¨ch
(
jq
, 
	`jv_obje˘_gë
(
dï
, 
	`jv_°rög
("search")));

267 
jv
 
ªsﬁved
 = 
	`föd_lib
(
jq
, 
ªÕ©h
, 
£¨ch
, 
is_d©a
 ? ".js⁄" : ".jq", 
	`jv_c›y
(
jq_‹igö
), jv_c›y(
lib_‹igö
));

269 i‡(!
	`jv_is_vÆid
(
ªsﬁved
)) {

270 
	`jv_‰ì
(
as
);

271 i‡(
›ti⁄Æ
) {

272 
	`jv_‰ì
(
ªsﬁved
);

275 
jv
 
emsg
 = 
	`jv_övÆid_gë_msg
(
ªsﬁved
);

276 
	`jq_ªp‹t_îr‹
(
jq
, 
	`jv_°rög_fmt
("jq:Éº‹: %s\n",
	`jv_°rög_vÆue
(
emsg
)));

277 
	`jv_‰ì
(
emsg
);

278 
	`jv_‰ì
(
dïs
);

279 
	`jv_‰ì
(
jq_‹igö
);

280 
	`jv_‰ì
(
lib_‹igö
);

284 i‡(
is_d©a
) {

286 
block
 
dï_def_block
;

287 
√º‹s
 +
	`lﬂd_libøry
(
jq
, 
ªsﬁved
, 
is_d©a
, 
øw
, 
›ti⁄Æ
, 
as_°r
, &
dï_def_block
, 
lib_°©e
);

288 i‡(
√º‹s
 == 0) {

290 
bk
 = 
	`block_böd_libøry
(
dï_def_block
, bk, 
OP_IS_CALL_PSEUDO
, 
as_°r
);

291 
bk
 = 
	`block_böd_libøry
(
dï_def_block
, bk, 
OP_IS_CALL_PSEUDO
, 
NULL
);

294 
uöt64_t
 
°©e_idx
 = 0;

295 ; 
°©e_idx
 < 
lib_°©e
->
˘
; ++state_idx) {

296 i‡(
	`°rcmp
(
lib_°©e
->
«mes
[
°©e_idx
],
	`jv_°rög_vÆue
(
ªsﬁved
)) == 0)

300 i‡(
°©e_idx
 < 
lib_°©e
->
˘
) {

301 
	`jv_‰ì
(
ªsﬁved
);

303 
bk
 = 
	`block_böd_libøry
(
lib_°©e
->
defs
[
°©e_idx
], bk, 
OP_IS_CALL_PSEUDO
, 
as_°r
);

305 
block
 
dï_def_block
 = 
	`gí_no›
();

306 
√º‹s
 +
	`lﬂd_libøry
(
jq
, 
ªsﬁved
, 
is_d©a
, 
øw
, 
›ti⁄Æ
, 
as_°r
, &
dï_def_block
, 
lib_°©e
);

308 i‡(
√º‹s
 == 0) {

310 
bk
 = 
	`block_böd_libøry
(
dï_def_block
, bk, 
OP_IS_CALL_PSEUDO
, 
as_°r
);

315 
	`jv_‰ì
(
as
);

317 
	`jv_‰ì
(
lib_‹igö
);

318 
	`jv_‰ì
(
jq_‹igö
);

319 
	`jv_‰ì
(
dïs
);

320  
√º‹s
;

321 
	}
}

325 
	$lﬂd_libøry
(
jq_°©e
 *
jq
, 
jv
 
lib_∑th
, 
is_d©a
, 
øw
, 
›ti⁄Æ
, c⁄° *
as
, 
block
 *
out_block
, 
lib_lﬂdög_°©e
 *
lib_°©e
) {

326 
√º‹s
 = 0;

327 
locfûe
* 
§c
 = 
NULL
;

328 
block
 
¥ogøm
;

329 
jv
 
d©a
;

330 i‡(
is_d©a
 && !
øw
)

331 
d©a
 = 
	`jv_lﬂd_fûe
(
	`jv_°rög_vÆue
(
lib_∑th
), 0);

333 
d©a
 = 
	`jv_lﬂd_fûe
(
	`jv_°rög_vÆue
(
lib_∑th
), 1);

334 
°©e_idx
;

335 i‡(!
	`jv_is_vÆid
(
d©a
)) {

336 
¥ogøm
 = 
	`gí_no›
();

337 i‡(!
›ti⁄Æ
) {

338 i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
d©a
)))

339 
d©a
 = 
	`jv_övÆid_gë_msg
(data);

341 
d©a
 = 
	`jv_°rög
("unknownÉrror");

342 
	`jq_ªp‹t_îr‹
(
jq
, 
	`jv_°rög_fmt
("jq:Éº‹Üﬂdög d©®fûê%s: %s\n", 
	`jv_°rög_vÆue
(
lib_∑th
), jv_°rög_vÆue(
d©a
)));

343 
√º‹s
++;

345 
out
;

346 } i‡(
is_d©a
) {

348 
¥ogøm
 = 
	`gí_c⁄°_globÆ
(
	`jv_c›y
(
d©a
), 
as
);

351 
§c
 = 
	`locfûe_öô
(
jq
, 
	`jv_°rög_vÆue
(
lib_∑th
), jv_°rög_vÆue(
d©a
), 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(data)));

352 
√º‹s
 +
	`jq_∑r£_libøry
(
§c
, &
¥ogøm
);

353 
	`locfûe_‰ì
(
§c
);

354 i‡(
√º‹s
 == 0) {

355 *
lib_‹igö
 = 
	`°rdup
(
	`jv_°rög_vÆue
(
lib_∑th
));

356 
√º‹s
 +
	`¥o˚ss_dïídícõs
(
jq
, 
	`jq_gë_jq_‹igö
(jq),

357 
	`jv_°rög
(
	`dú«me
(
lib_‹igö
)),

358 &
¥ogøm
, 
lib_°©e
);

359 
	`‰ì
(
lib_‹igö
);

360 
¥ogøm
 = 
	`block_böd_£lf
’rogøm, 
OP_IS_CALL_PSEUDO
);

363 
°©e_idx
 = 
lib_°©e
->
˘
++;

364 
lib_°©e
->
«mes
 = 
	`jv_mem_ªÆloc
÷ib_°©e->«mes,Üib_°©e->
˘
 * (const *));

365 
lib_°©e
->
defs
 = 
	`jv_mem_ªÆloc
÷ib_°©e->defs,Üib_°©e->
˘
 * (
block
));

366 
lib_°©e
->
«mes
[
°©e_idx
] = 
	`°rdup
(
	`jv_°rög_vÆue
(
lib_∑th
));

367 
lib_°©e
->
defs
[
°©e_idx
] = 
¥ogøm
;

368 
out
:

369 *
out_block
 = 
¥ogøm
;

370 
	`jv_‰ì
(
lib_∑th
);

371 
	`jv_‰ì
(
d©a
);

372  
√º‹s
;

373 
	}
}

377 
jv
 
	$lﬂd_moduÀ_mëa
(
jq_°©e
 *
jq
, 
jv
 
mod_ªÕ©h
) {

379 
jv
 
lib_∑th
 = 
	`föd_lib
(
jq
, 
	`vÆid©e_ªÕ©h
(
mod_ªÕ©h
), 
	`jq_gë_lib_dús
(jq), ".jq", 
	`jq_gë_jq_‹igö
(jq), 
	`jv_nuŒ
());

380 i‡(!
	`jv_is_vÆid
(
lib_∑th
))

381  
lib_∑th
;

382 
jv
 
mëa
 = 
	`jv_nuŒ
();

383 
jv
 
d©a
 = 
	`jv_lﬂd_fûe
(
	`jv_°rög_vÆue
(
lib_∑th
), 1);

384 i‡(
	`jv_is_vÆid
(
d©a
)) {

385 
block
 
¥ogøm
;

386 
locfûe
* 
§c
 = 
	`locfûe_öô
(
jq
, 
	`jv_°rög_vÆue
(
lib_∑th
), jv_°rög_vÆue(
d©a
), 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(data)));

387 
√º‹s
 = 
	`jq_∑r£_libøry
(
§c
, &
¥ogøm
);

388 i‡(
√º‹s
 == 0) {

389 
mëa
 = 
	`block_moduÀ_mëa
(
¥ogøm
);

390 i‡(
	`jv_gë_köd
(
mëa
Ë=
JV_KIND_NULL
)

391 
mëa
 = 
	`jv_obje˘
();

392 
mëa
 = 
	`jv_obje˘_£t
(mëa, 
	`jv_°rög
("dïs"), 
	`block_èke_imp‹ts
(&
¥ogøm
));

394 
	`locfûe_‰ì
(
§c
);

395 
	`block_‰ì
(
¥ogøm
);

397 
	`jv_‰ì
(
lib_∑th
);

398 
	`jv_‰ì
(
d©a
);

399  
mëa
;

400 
	}
}

402 
	$lﬂd_¥ogøm
(
jq_°©e
 *
jq
, 
locfûe
* 
§c
, 
block
 *
out_block
) {

403 
√º‹s
 = 0;

404 
block
 
¥ogøm
;

405 
lib_lﬂdög_°©e
 
lib_°©e
 = {0,0,0};

406 
√º‹s
 = 
	`jq_∑r£
(
§c
, &
¥ogøm
);

407 i‡(
√º‹s
)

408  
√º‹s
;

410 * 
home
 = 
	`gëív
("HOME");

411 i‡(
home
) {

413 
block
 
imp‹t
 = 
	`gí_imp‹t_mëa
(
	`gí_imp‹t
("", 
NULL
, 0),

414 
	`gí_c⁄°
(
	`JV_OBJECT
(

415 
	`jv_°rög
("›ti⁄Æ"), 
	`jv_åue
(),

416 
	`jv_°rög
("£¨ch"), jv_°rög(
home
))));

417 
¥ogøm
 = 
	`BLOCK
(
imp‹t
,Örogram);

420 
√º‹s
 = 
	`¥o˚ss_dïídícõs
(
jq
, 
	`jq_gë_jq_‹igö
(jq), 
	`jq_gë_¥og_‹igö
(jq), &
¥ogøm
, &
lib_°©e
);

421 
block
 
libs
 = 
	`gí_no›
();

422 
uöt64_t
 
i
 = 0; i < 
lib_°©e
.
˘
; ++i) {

423 
	`‰ì
(
lib_°©e
.
«mes
[
i
]);

424 i‡(
√º‹s
 =0 && !
	`block_is_c⁄°
(
lib_°©e
.
defs
[
i
]))

425 
libs
 = 
	`block_joö
÷ibs, 
lib_°©e
.
defs
[
i
]);

427 
	`block_‰ì
(
lib_°©e
.
defs
[
i
]);

429 
	`‰ì
(
lib_°©e
.
«mes
);

430 
	`‰ì
(
lib_°©e
.
defs
);

431 i‡(
√º‹s
)

432 
	`block_‰ì
(
¥ogøm
);

434 *
out_block
 = 
	`block_dr›_uƒe„ªn˚d
(
	`block_joö
(
libs
, 
¥ogøm
));

436  
√º‹s
;

437 
	}
}

	@src/linker.h

1 #i‚de‡
LINKER_H


2 
	#LINKER_H


	)

4 
lﬂd_¥ogøm
(
jq_°©e
 *
jq
, 
locfûe
* 
§c
, 
block
 *
out_block
);

5 
jv
 
lﬂd_moduÀ_mëa
(
jq_°©e
 *
jq
, jv 
mod«me
);

	@src/locfile.c

1 
	~<as£π.h
>

2 
	~<î∫o.h
>

3 
	~<°d¨g.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

6 
	~<°rög.h
>

7 
	~"jq.h
"

8 
	~"jv_Æloc.h
"

9 
	~"locfûe.h
"

12 
locfûe
* 
	$locfûe_öô
(
jq_°©e
 *
jq
, c⁄° *
‚ame
, c⁄° * 
d©a
, 
Àngth
) {

13 
locfûe
* 
l
 = 
	`jv_mem_Æloc
((locfile));

14 
l
->
jq
 = jq;

15 
l
->
‚ame
 = 
	`jv_°rög
(fname);

16 
l
->
d©a
 = 
	`jv_mem_Æloc
(
Àngth
);

17 
	`mem˝y
((*)
l
->
d©a
,d©a,
Àngth
);

18 
l
->
Àngth
 =Üength;

19 
l
->
∆öes
 = 1;

20 
l
->
ªf˘
 = 1;

21 
i
=0; i<
Àngth
; i++) {

22 i‡(
d©a
[
i
] ='\n'Ë
l
->
∆öes
++;

24 
l
->
löem≠
 = 
	`jv_mem_ˇŒoc
((), (l->
∆öes
 + 1));

25 
l
->
löem≠
[0] = 0;

26 
löe
 = 1;

27 
i
=0; i<
Àngth
; i++) {

28 i‡(
d©a
[
i
] == '\n') {

29 
l
->
löem≠
[
löe
] = 
i
+1;

30 
löe
++;

33 
l
->
löem≠
[l->
∆öes
] = 
Àngth
+1;

34  
l
;

35 
	}
}

37 
locfûe
* 
	$locfûe_ªèö
(
locfûe
* 
l
) {

38 
l
->
ªf˘
++;

39  
l
;

40 
	}
}

41 
	$locfûe_‰ì
(
locfûe
* 
l
) {

42 i‡(--(
l
->
ªf˘
) == 0) {

43 
	`jv_‰ì
(
l
->
‚ame
);

44 
	`jv_mem_‰ì
(
l
->
löem≠
);

45 
	`jv_mem_‰ì
((*)
l
->
d©a
);

46 
	`jv_mem_‰ì
(
l
);

48 
	}
}

50 
	$locfûe_gë_löe
(
locfûe
* 
l
, 
pos
) {

51 
	`as£π
(
pos
 < 
l
->
Àngth
);

52 
löe
 = 1;

53 
l
->
löem≠
[
löe
] <
pos
)Üine++;

54 
	`as£π
(
löe
-1 < 
l
->
∆öes
);

55  
löe
-1;

56 
	}
}

58 
	$locfûe_löe_Àngth
(
locfûe
* 
l
, 
löe
) {

59 
	`as£π
(
löe
 < 
l
->
∆öes
);

60  
l
->
löem≠
[
löe
+1] -Ü->linemap[line] -1;

61 
	}
}

63 
	$locfûe_loˇã
(
locfûe
* 
l
, 
loˇti⁄
 
loc
, c⁄° * 
fmt
, ...) {

64 
va_li°
 
fmèrgs
;

65 
	`va_°¨t
(
fmèrgs
, 
fmt
);

66 
°¨éöe
;

67 
off£t
;

69 i‡(
loc
.
°¨t
 != -1) {

70 
°¨éöe
 = 
	`locfûe_gë_löe
(
l
, 
loc
.
°¨t
);

71 
off£t
 = 
l
->
löem≠
[
°¨éöe
];

74 
jv
 
m1
 = 
	`jv_°rög_vfmt
(
fmt
, 
fmèrgs
);

75 
	`va_íd
(
fmèrgs
);

76 i‡(!
	`jv_is_vÆid
(
m1
)) {

77 
	`jq_ªp‹t_îr‹
(
l
->
jq
, 
m1
);

80 i‡(
loc
.
°¨t
 == -1) {

81 
	`jq_ªp‹t_îr‹
(
l
->
jq
, 
	`jv_°rög_fmt
("jq:Éº‹: %s\n<unknow¿loˇti⁄>", 
	`jv_°rög_vÆue
(
m1
)));

82 
	`jv_‰ì
(
m1
);

85 
jv
 
m2
 = 
	`jv_°rög_fmt
("%†© %s,Üöê%d:\n%.*s%*s", 
	`jv_°rög_vÆue
(
m1
),

86 
	`jv_°rög_vÆue
(
l
->
‚ame
), 
°¨éöe
 + 1,

87 
	`locfûe_löe_Àngth
(
l
, 
°¨éöe
),Ü->
d©a
 + 
off£t
,

88 
loc
.
°¨t
 - 
off£t
, "");

89 
	`jv_‰ì
(
m1
);

90 
	`jq_ªp‹t_îr‹
(
l
->
jq
, 
m2
);

92 
	}
}

	@src/locfile.h

1 #i‚de‡
LOCFILE_H


2 
	#LOCFILE_H


	)

4 
	~"jq.h
"

7 
	m°¨t
, 
	míd
;

8 } 
	tloˇti⁄
;

10 c⁄° 
loˇti⁄
 
	gUNKNOWN_LOCATION
 = {-1, -1};

12 
	slocfûe
 {

13 
jv
 
	m‚ame
;

14 c⁄° * 
	md©a
;

15 
	mÀngth
;

16 * 
	mlöem≠
;

17 
	m∆öes
;

18 *
	mîr‹
;

19 
jq_°©e
 *
	mjq
;

20 
	mªf˘
;

23 
locfûe
* 
locfûe_öô
(
jq_°©e
 *, const *, const *, );

24 
locfûe
* 
locfûe_ªèö
(locfile *);

25 
locfûe_gë_löe
(
locfûe
 *, );

26 
locfûe_‰ì
(
locfûe
 *);

27 
locfûe_loˇã
(
locfûe
 *, 
loˇti⁄
, const *, ...);

	@src/main.c

1 
	~<as£π.h
>

2 
	~<˘y≥.h
>

3 
	~<î∫o.h
>

4 
	~<libgí.h
>

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~<°rög.h
>

8 
	~<uni°d.h
>

10 #ifde‡
WIN32


11 
	~<wödows.h
>

12 
	~<io.h
>

13 
	~<f˙é.h
>

14 
	~<¥o˚s£nv.h
>

15 
	~<shñœpi.h
>

16 
	~<wch¨.h
>

17 
	~<wty≥s.h
>

18 
jv_tsd_dtﬂ_˘x_öô
();

21 #i‡!
deföed
(
HAVE_ISATTY
Ë&& deföed(
HAVE__ISATTY
)

22 #unde‡
ißây


23 
	#ißây
 
_ißây


	)

26 #i‡
deföed
(
HAVE_ISATTY
Ë|| deföed(
HAVE__ISATTY
)

27 
	#USE_ISATTY


	)

30 
	~"compûe.h
"

31 
	~"jv.h
"

32 
	~"jq.h
"

33 
	~"jv_Æloc.h
"

34 
	~"utû.h
"

35 #ifde‡
__APPLE__


36 
	~"vîsi⁄.h
"

38 
	~"§c/vîsi⁄.h
"

40 
jq_ã°suôe
(
jv
 
lib_dús
, 
vîbo£
, 
¨gc
, * 
¨gv
[]);

42 c⁄° * 
	g¥og«me
;

48 
	$ußge
(
code
, 
kìp_ô_sh‹t
) {

49 
FILE
 *
f
 = 
°dîr
;

51 i‡(
code
 == 0)

52 
f
 = 
°dout
;

54 
ªt
 = 
	`Ârötf
(
f
,

69 
JQ_VERSION
, 
¥og«me
,Örogname,Örogname);

70 i‡(
kìp_ô_sh‹t
) {

71 
	`Ârötf
(
f
,

73 
¥og«me
);

75 (Ë
	`Ârötf
(
f
,

98 
	`exô
((
ªt
 < 0 && 
code
 == 0) ? 2 : code);

99 
	}
}

101 
	$dõ
() {

102 
	`Ârötf
(
°dîr
, "U£ %†--hñ∞f‹ hñ∞wôh comm™d-löê›ti⁄s,\n", 
¥og«me
);

103 
	`Ârötf
(
°dîr
, "or seeÅhe jq manpage, or online docsát https://stedolan.github.io/jq\n");

104 
	`exô
(2);

105 
	}
}

110 
	$is›tish
(c⁄° * 
ãxt
) {

111  
ãxt
[0] ='-' && (ãxt[1] ='-' || 
	`ißÕha
(text[1]));

112 
	}
}

114 
	$is›ti⁄
(c⁄° * 
ãxt
, 
sh‹t›t
, c⁄° * 
l⁄g›t
, 
size_t
 *
sh‹t_›ts
) {

115 i‡(
ãxt
[0] != '-' ||Åext[1] == '-')

116 *
sh‹t_›ts
 = 0;

117 i‡(
ãxt
[0] != '-')  0;

120 i‡(
ãxt
[1] ='-' && !
	`°rcmp
—ext+2, 
l⁄g›t
))  1;

121 i‡(
ãxt
[1] == '-')  0;

124 i‡(!
sh‹t›t
)  0;

125 i‡(
	`°rchr
(
ãxt
, 
sh‹t›t
Ë!
NULL
) {

126 (*
sh‹t_›ts
)++;

130 
	}
}

133 
	mSLURP
 = 1,

134 
	mRAW_INPUT
 = 2,

135 
	mPROVIDE_NULL
 = 4,

136 
	mRAW_OUTPUT
 = 8,

137 
	mRAW_NUL
 = 16,

138 
	mASCII_OUTPUT
 = 32,

139 
	mCOLOR_OUTPUT
 = 64,

140 
	mNO_COLOR_OUTPUT
 = 128,

141 
	mSORTED_OUTPUT
 = 256,

142 
	mFROM_FILE
 = 512,

143 
	mRAW_NO_LF
 = 1024,

144 
	mUNBUFFERED_OUTPUT
 = 2048,

145 
	mEXIT_STATUS
 = 4096,

146 
	mEXIT_STATUS_EXACT
 = 8192,

147 
	mSEQ
 = 16384,

148 
	mRUN_TESTS
 = 32768,

150 
	mDUMP_DISASM
 = 65536,

152 
	g›ti⁄s
 = 0;

155 
	mJQ_OK
 = 0,

156 
	mJQ_OK_NULL_KIND
 = -1,

157 
	mJQ_ERROR_SYSTEM
 = 2,

158 
	mJQ_ERROR_COMPILE
 = 3,

159 
	mJQ_OK_NO_OUTPUT
 = -4,

160 
	mJQ_ERROR_UNKNOWN
 = 5,

162 
	#jq_exô_wôh_°©us
(
r
Ë
	`exô
(
	`abs
‘))

	)

163 
	#jq_exô
(
r
Ë
	`exô
–∏> 0 ?Ñ : 0 )

	)

165 c⁄° *
	$skù_sheb™g
(c⁄° *
p
) {

166 i‡(
	`°∫cmp
(
p
, "#!", ("#!") - 1) != 0)

167  
p
;

168 c⁄° *
n
 = 
	`°rchr
(
p
, '\n');

169 i‡(
n
 =
NULL
 ||Ç[1] != '#')

170  
p
;

171 
n
 = 
	`°rchr
(n + 1, '\n');

172 i‡(
n
 =
NULL
 ||Ç[1] == '#' ||Ç[1] == '\0' ||Ç[-1] != '\\' ||Ç[-2] == '\\')

173  
p
;

174 
n
 = 
	`°rchr
(n + 1, '\n');

175 i‡(
n
 =
NULL
)

176  
p
;

177  
n
+1;

178 
	}
}

180 
	$¥o˚ss
(
jq_°©e
 *
jq
, 
jv
 
vÆue
, 
Êags
, 
dump›ts
) {

181 
ªt
 = 
JQ_OK_NO_OUTPUT
;

182 
	`jq_°¨t
(
jq
, 
vÆue
, 
Êags
);

183 
jv
 
ªsu…
;

184 
	`jv_is_vÆid
(
ªsu…
 = 
	`jq_√xt
(
jq
))) {

185 i‡((
›ti⁄s
 & 
RAW_OUTPUT
Ë&& 
	`jv_gë_köd
(
ªsu…
Ë=
JV_KIND_STRING
) {

186 i‡(
›ti⁄s
 & 
ASCII_OUTPUT
) {

187 
	`jv_dumpf
(
	`jv_c›y
(
ªsu…
), 
°dout
, 
JV_PRINT_ASCII
);

189 
	`fwrôe
(
	`jv_°rög_vÆue
(
ªsu…
), 1, 
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
‘esu…)), 
°dout
);

191 
ªt
 = 
JQ_OK
;

192 
	`jv_‰ì
(
ªsu…
);

194 i‡(
	`jv_gë_köd
(
ªsu…
Ë=
JV_KIND_FALSE
 || jv_gë_köd‘esu…Ë=
JV_KIND_NULL
)

195 
ªt
 = 
JQ_OK_NULL_KIND
;

197 
ªt
 = 
JQ_OK
;

198 i‡(
›ti⁄s
 & 
SEQ
)

199 
	`¥iv_fwrôe
("\036", 1, 
°dout
, 
dump›ts
 & 
JV_PRINT_ISATTY
);

200 
	`jv_dump
(
ªsu…
, 
dump›ts
);

202 i‡(!(
›ti⁄s
 & 
RAW_NO_LF
))

203 
	`¥iv_fwrôe
("\n", 1, 
°dout
, 
dump›ts
 & 
JV_PRINT_ISATTY
);

204 i‡(
›ti⁄s
 & 
RAW_NUL
)

205 
	`¥iv_fwrôe
("\0", 1, 
°dout
, 
dump›ts
 & 
JV_PRINT_ISATTY
);

206 i‡(
›ti⁄s
 & 
UNBUFFERED_OUTPUT
)

207 
	`fÊush
(
°dout
);

209 i‡(
	`jq_hÆãd
(
jq
)) {

211 
›ti⁄s
 |
EXIT_STATUS_EXACT
;

212 
jv
 
exô_code
 = 
	`jq_gë_exô_code
(
jq
);

213 i‡(!
	`jv_is_vÆid
(
exô_code
))

214 
ªt
 = 
JQ_OK
;

215 i‡(
	`jv_gë_köd
(
exô_code
Ë=
JV_KIND_NUMBER
)

216 
ªt
 = 
	`jv_numbî_vÆue
(
exô_code
);

218 
ªt
 = 
JQ_ERROR_UNKNOWN
;

219 
	`jv_‰ì
(
exô_code
);

220 
jv
 
îr‹_mesßge
 = 
	`jq_gë_îr‹_mesßge
(
jq
);

221 i‡(
	`jv_gë_köd
(
îr‹_mesßge
Ë=
JV_KIND_STRING
) {

222 
	`Ârötf
(
°dîr
, "jq:Éº‹: %s", 
	`jv_°rög_vÆue
(
îr‹_mesßge
));

223 } i‡(
	`jv_gë_köd
(
îr‹_mesßge
Ë=
JV_KIND_NULL
) {

225 } i‡(
	`jv_is_vÆid
(
îr‹_mesßge
)) {

226 
îr‹_mesßge
 = 
	`jv_dump_°rög
(
	`jv_c›y
(error_message), 0);

227 
	`Ârötf
(
°dîr
, "jq:Éº‹: %s\n", 
	`jv_°rög_vÆue
(
îr‹_mesßge
));

229 
	`fÊush
(
°dîr
);

230 
	`jv_‰ì
(
îr‹_mesßge
);

231 } i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
ªsu…
))) {

233 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
	`jv_c›y
(
ªsu…
));

234 
jv
 
öput_pos
 = 
	`jq_utû_öput_gë_posôi⁄
(
jq
);

235 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
) {

236 
	`Ârötf
(
°dîr
, "jq:Érror (at %s): %s\n",

237 
	`jv_°rög_vÆue
(
öput_pos
), jv_°rög_vÆue(
msg
));

239 
msg
 = 
	`jv_dump_°rög
(msg, 0);

240 
	`Ârötf
(
°dîr
, "jq:Érror (at %s) (notá string): %s\n",

241 
	`jv_°rög_vÆue
(
öput_pos
), jv_°rög_vÆue(
msg
));

243 
ªt
 = 
JQ_ERROR_UNKNOWN
;

244 
	`jv_‰ì
(
öput_pos
);

245 
	`jv_‰ì
(
msg
);

247 
	`jv_‰ì
(
ªsu…
);

248  
ªt
;

249 
	}
}

251 
	$debug_cb
(*
d©a
, 
jv
 
öput
) {

252 
dump›ts
 = *(*)
d©a
;

253 
	`jv_dumpf
(
	`JV_ARRAY
(
	`jv_°rög
("DEBUG:"), 
öput
), 
°dîr
, 
dump›ts
 & ~(
JV_PRINT_PRETTY
));

254 
	`Ârötf
(
°dîr
, "\n");

255 
	}
}

257 #ifde‡
WIN32


258 
umaö
(
¨gc
, * 
¨gv
[]);

260 
	$wmaö
(
¨gc
, 
wch¨_t
* 
w¨gv
[]) {

261 
size_t
 
¨g_sz
;

262 **
¨gv
 = 
	`Æloˇ
(
¨gc
 * (
wch¨_t
*));

263 
i
 = 0; i < 
¨gc
; i++) {

264 
¨gv
[
i
] = 
	`Æloˇ
((
¨g_sz
 = 
	`WideCh¨ToMu…iByã
(
CP_UTF8
,

266 
w¨gv
[
i
],

268 
	`WideCh¨ToMu…iByã
(
CP_UTF8
, 0, 
w¨gv
[
i
], -1, 
¨gv
[i], 
¨g_sz
, 0, 0);

270  
	`umaö
(
¨gc
, 
¨gv
);

271 
	}
}

273 
	$umaö
(
¨gc
, * 
¨gv
[]) {

275 
	$maö
(
¨gc
, * 
¨gv
[]) {

277 
jq_°©e
 *
jq
 = 
NULL
;

278 
ªt
 = 
JQ_OK_NO_OUTPUT
;

279 
compûed
 = 0;

280 
∑r£r_Êags
 = 0;

281 
nfûes
 = 0;

282 
œ°_ªsu…
 = -1;

283 
badwrôe
;

284 
jv
 
ARGS
 = 
	`jv_¨øy
();

285 
jv
 
¥ogøm_¨gumíts
 = 
	`jv_obje˘
();

287 #ifde‡
WIN32


288 
	`jv_tsd_dtﬂ_˘x_öô
();

289 
	`fÊush
(
°dout
);

290 
	`fÊush
(
°dîr
);

291 
	`_£tmode
(
	`fûío
(
°dout
), 
_O_TEXT
 | 
_O_U8TEXT
);

292 
	`_£tmode
(
	`fûío
(
°dîr
), 
_O_TEXT
 | 
_O_U8TEXT
);

295 i‡(
¨gc
Ë
¥og«me
 = 
¨gv
[0];

297 
jq
 = 
	`jq_öô
();

298 i‡(
jq
 =
NULL
) {

299 
	`≥º‹
("malloc");

300 
ªt
 = 
JQ_ERROR_SYSTEM
;

301 
out
;

304 
dump›ts
 = 
	`JV_PRINT_INDENT_FLAGS
(2);

305 c⁄° * 
¥ogøm
 = 0;

307 
jq_utû_öput_°©e
 *
öput_°©e
 = 
	`jq_utû_öput_öô
(
NULL
, NULL);

309 
fuπhî_¨gs_¨e_°rögs
 = 0;

310 
fuπhî_¨gs_¨e_js⁄
 = 0;

311 
¨gs_d⁄e
 = 0;

312 
jq_Êags
 = 0;

313 
size_t
 
sh‹t_›ts
 = 0;

314 
jv
 
lib_£¨ch_∑ths
 = 
	`jv_nuŒ
();

315 
i
=1; i<
¨gc
; i++, 
sh‹t_›ts
 = 0) {

316 i‡(
¨gs_d⁄e
) {

317 i‡(
fuπhî_¨gs_¨e_°rögs
) {

318 
ARGS
 = 
	`jv_¨øy_≠≥nd
(ARGS, 
	`jv_°rög
(
¨gv
[
i
]));

319 } i‡(
fuπhî_¨gs_¨e_js⁄
) {

320 
ARGS
 = 
	`jv_¨øy_≠≥nd
(ARGS, 
	`jv_∑r£
(
¨gv
[
i
]));

322 
	`jq_utû_öput_add_öput
(
öput_°©e
, 
¨gv
[
i
]);

323 
nfûes
++;

325 } i‡(!
	`°rcmp
(
¨gv
[
i
], "--")) {

326 i‡(!
¥ogøm
Ë
	`ußge
(2, 1);

327 
¨gs_d⁄e
 = 1;

328 } i‡(!
	`is›tish
(
¨gv
[
i
])) {

329 i‡(
¥ogøm
) {

330 i‡(
fuπhî_¨gs_¨e_°rögs
) {

331 
ARGS
 = 
	`jv_¨øy_≠≥nd
(ARGS, 
	`jv_°rög
(
¨gv
[
i
]));

332 } i‡(
fuπhî_¨gs_¨e_js⁄
) {

333 
ARGS
 = 
	`jv_¨øy_≠≥nd
(ARGS, 
	`jv_∑r£
(
¨gv
[
i
]));

335 
	`jq_utû_öput_add_öput
(
öput_°©e
, 
¨gv
[
i
]);

336 
nfûes
++;

339 
¥ogøm
 = 
¨gv
[
i
];

342 i‡(
¨gv
[
i
][1] == 'L') {

343 i‡(
	`jv_gë_köd
(
lib_£¨ch_∑ths
Ë=
JV_KIND_NULL
)

344 
lib_£¨ch_∑ths
 = 
	`jv_¨øy
();

345 i‡(
¨gv
[
i
][2] != 0) {

346 
lib_£¨ch_∑ths
 = 
	`jv_¨øy_≠≥nd
÷ib_£¨ch_∑ths, 
	`jq_ªÆ∑th
(
	`jv_°rög
(
¨gv
[
i
]+2)));

347 } i‡(
i
 >
¨gc
 - 1) {

348 
	`Ârötf
(
°dîr
, "-LÅakesáÖarameter: (e.g. -L /search/path or -L/search/path)\n");

349 
	`dõ
();

351 
lib_£¨ch_∑ths
 = 
	`jv_¨øy_≠≥nd
÷ib_£¨ch_∑ths, 
	`jq_ªÆ∑th
(
	`jv_°rög
(
¨gv
[
i
+1])));

352 
i
++;

357 i‡(
	`is›ti⁄
(
¨gv
[
i
], 's', "¶uΩ", &
sh‹t_›ts
)) {

358 
›ti⁄s
 |
SLURP
;

359 i‡(!
sh‹t_›ts
) ;

361 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'r', "øw-ouçut", &
sh‹t_›ts
)) {

362 
›ti⁄s
 |
RAW_OUTPUT
;

363 i‡(!
sh‹t_›ts
) ;

365 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'c', "com∑˘-ouçut", &
sh‹t_›ts
)) {

366 
dump›ts
 &~(
JV_PRINT_TAB
 | 
	`JV_PRINT_INDENT_FLAGS
(7));

367 i‡(!
sh‹t_›ts
) ;

369 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'C', "cﬁ‹-ouçut", &
sh‹t_›ts
)) {

370 
›ti⁄s
 |
COLOR_OUTPUT
;

371 i‡(!
sh‹t_›ts
) ;

373 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'M', "m⁄ochrome-ouçut", &
sh‹t_›ts
)) {

374 
›ti⁄s
 |
NO_COLOR_OUTPUT
;

375 i‡(!
sh‹t_›ts
) ;

377 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'a', "ascii-ouçut", &
sh‹t_›ts
)) {

378 
›ti⁄s
 |
ASCII_OUTPUT
;

379 i‡(!
sh‹t_›ts
) ;

381 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "unbuf„ªd", &
sh‹t_›ts
)) {

382 
›ti⁄s
 |
UNBUFFERED_OUTPUT
;

385 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'S', "s‹t-keys", &
sh‹t_›ts
)) {

386 
›ti⁄s
 |
SORTED_OUTPUT
;

387 i‡(!
sh‹t_›ts
) ;

389 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'R', "øw-öput", &
sh‹t_›ts
)) {

390 
›ti⁄s
 |
RAW_INPUT
;

391 i‡(!
sh‹t_›ts
) ;

393 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'n', "nuŒ-öput", &
sh‹t_›ts
)) {

394 
›ti⁄s
 |
PROVIDE_NULL
;

395 i‡(!
sh‹t_›ts
) ;

397 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'f', "‰om-fûe", &
sh‹t_›ts
)) {

398 
›ti⁄s
 |
FROM_FILE
;

399 i‡(!
sh‹t_›ts
) ;

401 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'j', "joö-ouçut", &
sh‹t_›ts
)) {

402 
›ti⁄s
 |
RAW_OUTPUT
 | 
RAW_NO_LF
;

403 i‡(!
sh‹t_›ts
) ;

405 i‡(
	`is›ti⁄
(
¨gv
[
i
], '0', "nul-ouçut", &
sh‹t_›ts
)) {

406 
›ti⁄s
 |
RAW_OUTPUT
 | 
RAW_NO_LF
 | 
RAW_NUL
;

407 i‡(!
sh‹t_›ts
) ;

409 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'b', "bö¨y", &
sh‹t_›ts
)) {

410 #ifde‡
WIN32


411 
	`fÊush
(
°dout
);

412 
	`fÊush
(
°dîr
);

413 
	`_£tmode
(
	`fûío
(
°dö
), 
_O_BINARY
);

414 
	`_£tmode
(
	`fûío
(
°dout
), 
_O_BINARY
);

415 
	`_£tmode
(
	`fûío
(
°dîr
), 
_O_BINARY
);

416 i‡(!
sh‹t_›ts
) ;

419 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "èb", &
sh‹t_›ts
)) {

420 
dump›ts
 &~
	`JV_PRINT_INDENT_FLAGS
(7);

421 
dump›ts
 |
JV_PRINT_TAB
 | 
JV_PRINT_PRETTY
;

424 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "ödít", &
sh‹t_›ts
)) {

425 i‡(
i
 >
¨gc
 - 1) {

426 
	`Ârötf
(
°dîr
, "%s: --ödíàèke†⁄ê∑ømëî\n", 
¥og«me
);

427 
	`dõ
();

429 
dump›ts
 &~(
JV_PRINT_TAB
 | 
	`JV_PRINT_INDENT_FLAGS
(7));

430 
ödít
 = 
	`©oi
(
¨gv
[
i
+1]);

431 i‡(
ödít
 < -1 || indent > 7) {

432 
	`Ârötf
(
°dîr
, "%s: --ödíàèke†®numbî bëwì¿-1ánd 7\n", 
¥og«me
);

433 
	`dõ
();

435 
dump›ts
 |
	`JV_PRINT_INDENT_FLAGS
(
ödít
);

436 
i
++;

439 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "£q", &
sh‹t_›ts
)) {

440 
›ti⁄s
 |
SEQ
;

443 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "°ªam", &
sh‹t_›ts
)) {

444 
∑r£r_Êags
 |
JV_PARSE_STREAMING
;

447 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "°ªam-îr‹s", &
sh‹t_›ts
)) {

448 
∑r£r_Êags
 |
JV_PARSE_STREAM_ERRORS
;

451 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'e', "exô-°©us", &
sh‹t_›ts
)) {

452 
›ti⁄s
 |
EXIT_STATUS
;

453 i‡(!
sh‹t_›ts
) ;

456 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "¨gs", &
sh‹t_›ts
)) {

457 
fuπhî_¨gs_¨e_°rögs
 = 1;

458 
fuπhî_¨gs_¨e_js⁄
 = 0;

461 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "js⁄¨gs", &
sh‹t_›ts
)) {

462 
fuπhî_¨gs_¨e_°rögs
 = 0;

463 
fuπhî_¨gs_¨e_js⁄
 = 1;

466 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "¨g", &
sh‹t_›ts
)) {

467 i‡(
i
 >
¨gc
 - 2) {

468 
	`Ârötf
(
°dîr
, "%s: --¨gÅake†twÿ∑ømëî†”.g. --¨g v¨«mêvÆue)\n", 
¥og«me
);

469 
	`dõ
();

471 i‡(!
	`jv_obje˘_has
(
	`jv_c›y
(
¥ogøm_¨gumíts
), 
	`jv_°rög
(
¨gv
[
i
+1])))

472 
¥ogøm_¨gumíts
 = 
	`jv_obje˘_£t
’rogøm_¨gumíts, 
	`jv_°rög
(
¨gv
[
i
+1]), jv_string(argv[i+2]));

473 
i
 += 2;

476 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "¨gjs⁄", &
sh‹t_›ts
)) {

477 i‡(
i
 >
¨gc
 - 2) {

478 
	`Ârötf
(
°dîr
, "%s: --¨gjs⁄Åake†twÿ∑ømëî†”.g. --¨gjs⁄ v¨«mêãxt)\n", 
¥og«me
);

479 
	`dõ
();

481 i‡(!
	`jv_obje˘_has
(
	`jv_c›y
(
¥ogøm_¨gumíts
), 
	`jv_°rög
(
¨gv
[
i
+1]))) {

482 
jv
 
v
 = 
	`jv_∑r£
(
¨gv
[
i
+2]);

483 i‡(!
	`jv_is_vÆid
(
v
)) {

484 
	`Ârötf
(
°dîr
, "%s: invÆid JSONÅexà∑s£dÅÿ--¨gjs⁄\n", 
¥og«me
);

485 
	`dõ
();

487 
¥ogøm_¨gumíts
 = 
	`jv_obje˘_£t
’rogøm_¨gumíts, 
	`jv_°rög
(
¨gv
[
i
+1]), 
v
);

489 
i
 += 2;

492 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "¨gfûe", &
sh‹t_›ts
) ||

493 
	`is›ti⁄
(
¨gv
[
i
], 0, "øwfûe", &
sh‹t_›ts
) ||

494 
	`is›ti⁄
(
¨gv
[
i
], 0, "¶uΩfûe", &
sh‹t_›ts
)) {

495 
øw
 = 
	`is›ti⁄
(
¨gv
[
i
], 0, "øwfûe", &
sh‹t_›ts
);

496 c⁄° *
which
;

497 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "¨gfûe", &
sh‹t_›ts
))

498 
which
 = "argfile";

499 i‡(
øw
)

500 
which
 = "rawfile";

502 
which
 = "slurpfile";

503 i‡(
i
 >
¨gc
 - 2) {

504 
	`Ârötf
(
°dîr
, "%s: --%†èke†twÿ∑ømëî†”.g. --%†v¨«mêfûíame)\n", 
¥og«me
, 
which
, which);

505 
	`dõ
();

507 i‡(!
	`jv_obje˘_has
(
	`jv_c›y
(
¥ogøm_¨gumíts
), 
	`jv_°rög
(
¨gv
[
i
+1]))) {

508 
jv
 
d©a
 = 
	`jv_lﬂd_fûe
(
¨gv
[
i
+2], 
øw
);

509 i‡(!
	`jv_is_vÆid
(
d©a
)) {

510 
d©a
 = 
	`jv_övÆid_gë_msg
(data);

511 
	`Ârötf
(
°dîr
, "%s: Bad JSON i¿--%†%†%s: %s\n", 
¥og«me
, 
which
,

512 
¨gv
[
i
+1],árgv[i+2], 
	`jv_°rög_vÆue
(
d©a
));

513 
	`jv_‰ì
(
d©a
);

514 
ªt
 = 
JQ_ERROR_SYSTEM
;

515 
out
;

517 i‡(
	`°rcmp
(
which
, "argfile") == 0 &&

518 
	`jv_gë_köd
(
d©a
Ë=
JV_KIND_ARRAY
 && 
	`jv_¨øy_Àngth
(
	`jv_c›y
(data)) == 1)

519 
d©a
 = 
	`jv_¨øy_gë
(data, 0);

520 
¥ogøm_¨gumíts
 = 
	`jv_obje˘_£t
’rogøm_¨gumíts, 
	`jv_°rög
(
¨gv
[
i
+1]), 
d©a
);

522 
i
 += 2;

525 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "debug-dump-dißsm", &
sh‹t_›ts
)) {

526 
›ti⁄s
 |
DUMP_DISASM
;

529 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "debug-åa˚˜Œ", &
sh‹t_›ts
)) {

530 
jq_Êags
 |
JQ_DEBUG_TRACE_ALL
;

531 i‡(!
sh‹t_›ts
) ;

533 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "debug-åa˚", &
sh‹t_›ts
)) {

534 
jq_Êags
 |
JQ_DEBUG_TRACE
;

537 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'h', "hñp", &
sh‹t_›ts
)) {

538 
	`ußge
(0, 0);

539 i‡(!
sh‹t_›ts
) ;

541 i‡(
	`is›ti⁄
(
¨gv
[
i
], 'V', "vîsi⁄", &
sh‹t_›ts
)) {

542 
	`¥ötf
("jq-%s\n", 
JQ_VERSION
);

543 
ªt
 = 
JQ_OK
;

544 
out
;

546 i‡(
	`is›ti⁄
(
¨gv
[
i
], 0, "run-ã°s", &
sh‹t_›ts
)) {

547 
i
++;

550 
ªt
 = 
	`jq_ã°suôe
(
lib_£¨ch_∑ths
,

551 (
›ti⁄s
 & 
DUMP_DISASM
Ë|| (
jq_Êags
 & 
JQ_DEBUG_TRACE
),

552 
¨gc
 - 
i
, 
¨gv
 + i);

553 
out
;

557 i‡(
	`°æí
(
¨gv
[
i
]Ë!
sh‹t_›ts
 + 1) {

558 
	`Ârötf
(
°dîr
, "%s: Unknow¿›ti⁄ %s\n", 
¥og«me
, 
¨gv
[
i
]);

559 
	`dõ
();

564 #ifde‡
USE_ISATTY


565 i‡(
	`ißây
(
STDOUT_FILENO
)) {

566 #i‚de‡
WIN32


567 
dump›ts
 |
JV_PRINT_ISATTY
 | 
JV_PRINT_COLOR
;

572 
DWORD
 
mode
;

573 
HANDLE
 
c⁄
 = 
	`GëStdH™dÀ
(
STD_OUTPUT_HANDLE
);

574 i‡(
	`GëC⁄sﬁeMode
(
c⁄
, &
mode
)) {

575 
dump›ts
 |
JV_PRINT_ISATTY
;

576 i‡(
	`gëív
("ANSICON"Ë!
NULL
 ||

577 
	`SëC⁄sﬁeMode
(
c⁄
, 
mode
 | 4 ))

578 
dump›ts
 |
JV_PRINT_COLOR
;

583 i‡(
›ti⁄s
 & 
SORTED_OUTPUT
Ë
dump›ts
 |
JV_PRINT_SORTED
;

584 i‡(
›ti⁄s
 & 
ASCII_OUTPUT
Ë
dump›ts
 |
JV_PRINT_ASCII
;

585 i‡(
›ti⁄s
 & 
COLOR_OUTPUT
Ë
dump›ts
 |
JV_PRINT_COLOR
;

586 i‡(
›ti⁄s
 & 
NO_COLOR_OUTPUT
Ë
dump›ts
 &~
JV_PRINT_COLOR
;

588 i‡(
	`gëív
("JQ_COLORS"Ë!
NULL
 && !
	`jq_£t_cﬁ‹s
(getenv("JQ_COLORS")))

589 
	`Ârötf
(
°dîr
, "FailedÅo set $JQ_COLORS\n");

591 i‡(
	`jv_gë_köd
(
lib_£¨ch_∑ths
Ë=
JV_KIND_NULL
) {

593 
lib_£¨ch_∑ths
 = 
	`JV_ARRAY
(
	`jv_°rög
("~/.jq"),

594 
	`jv_°rög
("$ORIGIN/../lib/jq"),

595 
	`jv_°rög
("$ORIGIN/lib"));

597 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("JQ_LIBRARY_PATH"), 
lib_£¨ch_∑ths
);

599 *
‹igö
 = 
	`°rdup
(
¨gv
[0]);

600 i‡(
‹igö
 =
NULL
) {

601 
	`Ârötf
(
°dîr
, "jq:Érror: out of memory\n");

602 
	`exô
(1);

604 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("JQ_ORIGIN"), jv_°rög(
	`dú«me
(
‹igö
)));

605 
	`‰ì
(
‹igö
);

607 i‡(
	`°rchr
(
JQ_VERSION
, '-'Ë=
NULL
)

608 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("VERSION_DIR"), jv_°rög(
JQ_VERSION
));

610 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("VERSION_DIR"), 
	`jv_°rög_fmt
("%.*s-ma°î", ()(
	`°rchr
(
JQ_VERSION
, '-') - JQ_VERSION), JQ_VERSION));

612 #ifde‡
USE_ISATTY


613 i‡(!
¥ogøm
 && (!
	`ißây
(
STDOUT_FILENO
Ë|| !ißây(
STDIN_FILENO
)))

614 
¥ogøm
 = ".";

617 i‡(!
¥ogøm
Ë
	`ußge
(2, 1);

619 i‡(
›ti⁄s
 & 
FROM_FILE
) {

620 *
¥ogøm_‹igö
 = 
	`°rdup
(
¥ogøm
);

621 i‡(
¥ogøm_‹igö
 =
NULL
) {

622 
	`≥º‹
("malloc");

623 
	`exô
(2);

626 
jv
 
d©a
 = 
	`jv_lﬂd_fûe
(
¥ogøm
, 1);

627 i‡(!
	`jv_is_vÆid
(
d©a
)) {

628 
d©a
 = 
	`jv_övÆid_gë_msg
(data);

629 
	`Ârötf
(
°dîr
, "%s: %s\n", 
¥og«me
, 
	`jv_°rög_vÆue
(
d©a
));

630 
	`jv_‰ì
(
d©a
);

631 
ªt
 = 
JQ_ERROR_SYSTEM
;

632 
out
;

634 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("PROGRAM_ORIGIN"), 
	`jq_ªÆ∑th
(jv_°rög(
	`dú«me
(
¥ogøm_‹igö
))));

635 
ARGS
 = 
	`JV_OBJECT
(
	`jv_°rög
("positional"), ARGS,

636 
	`jv_°rög
("«med"), 
	`jv_c›y
(
¥ogøm_¨gumíts
));

637 
¥ogøm_¨gumíts
 = 
	`jv_obje˘_£t
’rogøm_¨gumíts, 
	`jv_°rög
("ARGS"), 
	`jv_c›y
(
ARGS
));

638 
compûed
 = 
	`jq_compûe_¨gs
(
jq
, 
	`skù_sheb™g
(
	`jv_°rög_vÆue
(
d©a
)), 
	`jv_c›y
(
¥ogøm_¨gumíts
));

639 
	`‰ì
(
¥ogøm_‹igö
);

640 
	`jv_‰ì
(
d©a
);

642 
	`jq_£t_©å
(
jq
, 
	`jv_°rög
("PROGRAM_ORIGIN"), 
	`jq_ªÆ∑th
(jv_string(".")));

643 
ARGS
 = 
	`JV_OBJECT
(
	`jv_°rög
("positional"), ARGS,

644 
	`jv_°rög
("«med"), 
	`jv_c›y
(
¥ogøm_¨gumíts
));

645 
¥ogøm_¨gumíts
 = 
	`jv_obje˘_£t
’rogøm_¨gumíts, 
	`jv_°rög
("ARGS"), 
	`jv_c›y
(
ARGS
));

646 
compûed
 = 
	`jq_compûe_¨gs
(
jq
, 
¥ogøm
, 
	`jv_c›y
(
¥ogøm_¨gumíts
));

648 i‡(!
compûed
){

649 
ªt
 = 
JQ_ERROR_COMPILE
;

650 
out
;

653 i‡(
›ti⁄s
 & 
DUMP_DISASM
) {

654 
	`jq_dump_dißs£mbly
(
jq
, 0);

655 
	`¥ötf
("\n");

658 i‡((
›ti⁄s
 & 
SEQ
))

659 
∑r£r_Êags
 |
JV_PARSE_SEQ
;

661 i‡((
›ti⁄s
 & 
RAW_INPUT
))

662 
	`jq_utû_öput_£t_∑r£r
(
öput_°©e
, 
NULL
, (
›ti⁄s
 & 
SLURP
) ? 1 : 0);

664 
	`jq_utû_öput_£t_∑r£r
(
öput_°©e
, 
	`jv_∑r£r_√w
(
∑r£r_Êags
), (
›ti⁄s
 & 
SLURP
) ? 1 : 0);

667 
	`jq_£t_öput_cb
(
jq
, 
jq_utû_öput_√xt_öput_cb
, 
öput_°©e
);

670 
	`jq_£t_debug_cb
(
jq
, 
debug_cb
, &
dump›ts
);

672 i‡(
nfûes
 == 0)

673 
	`jq_utû_öput_add_öput
(
öput_°©e
, "-");

675 i‡(
›ti⁄s
 & 
PROVIDE_NULL
) {

676 
ªt
 = 
	`¥o˚ss
(
jq
, 
	`jv_nuŒ
(), 
jq_Êags
, 
dump›ts
);

678 
jv
 
vÆue
;

679 
	`jq_utû_öput_îr‹s
(
öput_°©e
) == 0 &&

680 (
	`jv_is_vÆid
((
vÆue
 = 
	`jq_utû_öput_√xt_öput
(
öput_°©e
))Ë|| 
	`jv_övÆid_has_msg
(
	`jv_c›y
(value)))) {

681 i‡(
	`jv_is_vÆid
(
vÆue
)) {

682 
ªt
 = 
	`¥o˚ss
(
jq
, 
vÆue
, 
jq_Êags
, 
dump›ts
);

683 i‡(
ªt
 <0 &&Ñë !
JQ_OK_NO_OUTPUT
)

684 
œ°_ªsu…
 = (
ªt
 !
JQ_OK_NULL_KIND
);

689 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
vÆue
);

690 i‡(!(
›ti⁄s
 & 
SEQ
)) {

692 
ªt
 = 
JQ_OK_NO_OUTPUT
;

693 
	`Ârötf
(
°dîr
, "jq:Ö¨£Éº‹: %s\n", 
	`jv_°rög_vÆue
(
msg
));

694 
	`jv_‰ì
(
msg
);

697 
	`Ârötf
(
°dîr
, "jq: ign‹ögÖ¨£Éº‹: %s\n", 
	`jv_°rög_vÆue
(
msg
));

698 
	`jv_‰ì
(
msg
);

702 i‡(
	`jq_utû_öput_îr‹s
(
öput_°©e
) != 0)

703 
ªt
 = 
JQ_ERROR_SYSTEM
;

705 
out
:

706 
badwrôe
 = 
	`„º‹
(
°dout
);

707 i‡(
	`f˛o£
(
°dout
)!=0 || 
badwrôe
) {

708 
	`Ârötf
(
°dîr
,"jq:Éº‹: wrôög ouçuàÁûed: %s\n", 
	`°ªº‹
(
î∫o
));

709 
ªt
 = 
JQ_ERROR_SYSTEM
;

712 
	`jv_‰ì
(
ARGS
);

713 
	`jv_‰ì
(
¥ogøm_¨gumíts
);

714 
	`jq_utû_öput_‰ì
(&
öput_°©e
);

715 
	`jq_ã¨down
(&
jq
);

717 i‡(
›ti⁄s
 & (
EXIT_STATUS
|
EXIT_STATUS_EXACT
)) {

718 i‡(
ªt
 !
JQ_OK_NO_OUTPUT
)

719 
	`jq_exô_wôh_°©us
(
ªt
);

721 
œ°_ªsu…
) {

722 -1: 
	`jq_exô_wôh_°©us
(
JQ_OK_NO_OUTPUT
);

723 0: 
	`jq_exô_wôh_°©us
(
JQ_OK_NULL_KIND
);

724 : 
	`jq_exô_wôh_°©us
(
JQ_OK
);

727 
	`jq_exô
(
ªt
);

728 
	}
}

	@src/opcode_list.h

1 
	$OP
(
LOADK
, 
CONSTANT
, 1, 1)

2 
	$OP
(
DUP
, 
NONE
, 1, 2)

3 
	$OP
(
DUPN
, 
NONE
, 1, 2)

4 
	$OP
(
DUP2
, 
NONE
, 2, 3)

5 
	$OP
(
PUSHK_UNDER
, 
CONSTANT
, 1, 2)

6 
	$OP
(
POP
, 
NONE
, 1, 0)

7 
	$OP
(
LOADV
, 
VARIABLE
, 1, 1)

8 
	$OP
(
LOADVN
, 
VARIABLE
, 1, 1)

9 
	$OP
(
STOREV
, 
VARIABLE
, 1, 0)

10 
	$OP
(
STORE_GLOBAL
, 
GLOBAL
, 0, 0)

11 
	$OP
(
INDEX
, 
NONE
, 2, 1)

12 
	$OP
(
INDEX_OPT
, 
NONE
, 2, 1)

13 
	$OP
(
EACH
, 
NONE
, 1, 1)

14 
	$OP
(
EACH_OPT
, 
NONE
, 1, 1)

15 
	$OP
(
FORK
, 
BRANCH
, 0, 0)

16 
	$OP
(
FORK_OPT
, 
BRANCH
, 0, 0)

17 
	$OP
(
JUMP
, 
BRANCH
, 0, 0)

18 
	$OP
(
JUMP_F
,
BRANCH
, 1, 0)

19 
	$OP
(
BACKTRACK
, 
NONE
, 0, 0)

20 
	$OP
(
APPEND
, 
VARIABLE
,1, 0)

21 
	$OP
(
INSERT
, 
NONE
, 4, 2)

22 
	$OP
(
RANGE
, 
VARIABLE
, 1, 1)

24 
	$OP
(
SUBEXP_BEGIN
, 
NONE
, 1, 2)

25 
	$OP
(
SUBEXP_END
, 
NONE
, 2, 2)

27 
	$OP
(
PATH_BEGIN
, 
NONE
, 1, 2)

28 
	$OP
(
PATH_END
, 
NONE
, 2, 1)

30 
	`OP
(
CALL_BUILTIN
, 
CFUNC
, -1, 1)

32 
	$OP
(
CALL_JQ
, 
UFUNC
, 1, 1)

33 
	$OP
(
RET
, 
NONE
, 1, 1)

34 
	$OP
(
TAIL_CALL_JQ
, 
UFUNC
, 1, 1)

36 
	$OP
(
CLOSURE_PARAM
, 
DEFINITION
, 0, 0)

37 
	$OP
(
CLOSURE_REF
, 
CLOSURE_REF_IMM
, 0, 0)

38 
	$OP
(
CLOSURE_CREATE
, 
DEFINITION
, 0, 0)

39 
	$OP
(
CLOSURE_CREATE_C
, 
DEFINITION
, 0, 0)

41 
	$OP
(
TOP
, 
NONE
, 0, 0)

42 
	$OP
(
CLOSURE_PARAM_REGULAR
, 
DEFINITION
, 0, 0)

43 
	$OP
(
DEPS
, 
CONSTANT
, 0, 0)

44 
	$OP
(
MODULEMETA
, 
CONSTANT
, 0, 0)

45 
	$OP
(
GENLABEL
, 
NONE
, 0, 1)

47 
	$OP
(
DESTRUCTURE_ALT
, 
BRANCH
, 0, 0)

48 
	`OP
(
STOREVN
, 
VARIABLE
, 1, 0)

	@src/parser.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 1

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

67 
	~<as£π.h
>

68 
	~<m©h.h
>

69 
	~<°dio.h
>

70 
	~<°rög.h
>

71 
	~"compûe.h
"

72 
	~"jv_Æloc.h
"

73 
	#YYMALLOC
 
jv_mem_Æloc


	)

74 
	#YYFREE
 
jv_mem_‰ì


	)

78 #i‚de‡
YY_NULLPTR


79 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

80 
	#YY_NULLPTR
 
nuŒ±r


	)

82 
	#YY_NULLPTR
 0

	)

87 #ifde‡
YYERROR_VERBOSE


88 #unde‡
YYERROR_VERBOSE


89 
	#YYERROR_VERBOSE
 1

	)

91 
	#YYERROR_VERBOSE
 1

	)

96 #i‚de‡
YY_YY_SRC_PARSER_H_INCLUDED


97 
	#YY_YY_SRC_PARSER_H_INCLUDED


	)

99 #i‚de‡
YYDEBUG


100 
	#YYDEBUG
 0

	)

102 #i‡
YYDEBUG


103 
yydebug
;

108 
	~"locfûe.h
"

109 
	gÀxî_∑øm
;

111 
	#YYLTYPE
 
loˇti⁄


	)

112 
	#YYLLOC_DEFAULT
(
Loc
, 
Rhs
, 
N
) \

114 i‡(
N
) { \

115 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 1).start; \

116 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 
N
).end; \

118 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 0).
íd
; \

119 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 0).end; \

121 } 0)

	)

126 #i‚de‡
YYTOKENTYPE


127 
	#YYTOKENTYPE


	)

128 
	eyytokíty≥


130 
	mINVALID_CHARACTER
 = 258,

131 
	mIDENT
 = 259,

132 
	mFIELD
 = 260,

133 
	mLITERAL
 = 261,

134 
	mFORMAT
 = 262,

135 
	mREC
 = 263,

136 
	mSETMOD
 = 264,

137 
	mEQ
 = 265,

138 
	mNEQ
 = 266,

139 
	mDEFINEDOR
 = 267,

140 
	mAS
 = 268,

141 
	mDEF
 = 269,

142 
	mMODULE
 = 270,

143 
	mIMPORT
 = 271,

144 
	mINCLUDE
 = 272,

145 
	mIF
 = 273,

146 
	mTHEN
 = 274,

147 
	mELSE
 = 275,

148 
	mELSE_IF
 = 276,

149 
	mREDUCE
 = 277,

150 
	mFOREACH
 = 278,

151 
	mEND
 = 279,

152 
	mAND
 = 280,

153 
	mOR
 = 281,

154 
	mTRY
 = 282,

155 
	mCATCH
 = 283,

156 
	mLABEL
 = 284,

157 
	mBREAK
 = 285,

158 
	mLOC
 = 286,

159 
	mSETPIPE
 = 287,

160 
	mSETPLUS
 = 288,

161 
	mSETMINUS
 = 289,

162 
	mSETMULT
 = 290,

163 
	mSETDIV
 = 291,

164 
	mSETDEFINEDOR
 = 292,

165 
	mLESSEQ
 = 293,

166 
	mGREATEREQ
 = 294,

167 
	mALTERNATION
 = 295,

168 
	mQQSTRING_START
 = 296,

169 
	mQQSTRING_TEXT
 = 297,

170 
	mQQSTRING_INTERP_START
 = 298,

171 
	mQQSTRING_INTERP_END
 = 299,

172 
	mQQSTRING_END
 = 300,

173 
	mFUNCDEF
 = 301,

174 
	mNONOPT
 = 302

178 
	#INVALID_CHARACTER
 258

	)

179 
	#IDENT
 259

	)

180 
	#FIELD
 260

	)

181 
	#LITERAL
 261

	)

182 
	#FORMAT
 262

	)

183 
	#REC
 263

	)

184 
	#SETMOD
 264

	)

185 
	#EQ
 265

	)

186 
	#NEQ
 266

	)

187 
	#DEFINEDOR
 267

	)

188 
	#AS
 268

	)

189 
	#DEF
 269

	)

190 
	#MODULE
 270

	)

191 
	#IMPORT
 271

	)

192 
	#INCLUDE
 272

	)

193 
	#IF
 273

	)

194 
	#THEN
 274

	)

195 
	#ELSE
 275

	)

196 
	#ELSE_IF
 276

	)

197 
	#REDUCE
 277

	)

198 
	#FOREACH
 278

	)

199 
	#END
 279

	)

200 
	#AND
 280

	)

201 
	#OR
 281

	)

202 
	#TRY
 282

	)

203 
	#CATCH
 283

	)

204 
	#LABEL
 284

	)

205 
	#BREAK
 285

	)

206 
	#LOC
 286

	)

207 
	#SETPIPE
 287

	)

208 
	#SETPLUS
 288

	)

209 
	#SETMINUS
 289

	)

210 
	#SETMULT
 290

	)

211 
	#SETDIV
 291

	)

212 
	#SETDEFINEDOR
 292

	)

213 
	#LESSEQ
 293

	)

214 
	#GREATEREQ
 294

	)

215 
	#ALTERNATION
 295

	)

216 
	#QQSTRING_START
 296

	)

217 
	#QQSTRING_TEXT
 297

	)

218 
	#QQSTRING_INTERP_START
 298

	)

219 
	#QQSTRING_INTERP_END
 299

	)

220 
	#QQSTRING_END
 300

	)

221 
	#FUNCDEF
 301

	)

222 
	#NONOPT
 302

	)

225 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


227 
	uYYSTYPE


231 
jv
 
	mlôîÆ
;

232 
block
 
	mblk
;

237 
YYSTYPE
 
	tYYSTYPE
;

238 
	#YYSTYPE_IS_TRIVIAL
 1

	)

239 
	#YYSTYPE_IS_DECLARED
 1

	)

243 #i‡! 
deföed
 
YYLTYPE
 && ! deföed 
YYLTYPE_IS_DECLARED


244 
YYLTYPE
 
	tYYLTYPE
;

245 
	sYYLTYPE


247 
	mfú°_löe
;

248 
	mfú°_cﬁumn
;

249 
	mœ°_löe
;

250 
	mœ°_cﬁumn
;

252 
	#YYLTYPE_IS_DECLARED
 1

	)

253 
	#YYLTYPE_IS_TRIVIAL
 1

	)

258 
yy∑r£
 (
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
);

265 
	~"Àxî.h
"

266 
	sÀxî_∑øm
 {

267 
yysˇn_t
 
	mÀxî
;

269 
	#FAIL
(
loc
, 
msg
) \

271 
loˇti⁄
 
l
 = 
loc
; \

272 
	`yyîr‹
(&
l
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
msg
); \

274 } 0)

	)

276 
	$yyîr‹
(
YYLTYPE
* 
loc
, 
block
* 
™swî
, * 
îr‹s
,

277 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
, c⁄° *
s
){

278 (*
îr‹s
)++;

279 i‡(
	`°r°r
(
s
, "unexpected")) {

280 #ifde‡
WIN32


281 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %†(Wödow†cmd shñ»quŸög issues?)", 
s
);

283 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %†(Unix shñ»quŸög issues?)", 
s
);

286 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %s", 
s
);

288 
	}
}

290 
	$yyÀx
(
YYSTYPE
* 
yylvÆ
, 
YYLTYPE
* 
yyŒoc
, 
block
* 
™swî
, * 
îr‹s
,

291 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
) {

292 
yysˇn_t
 
Àxî
 = 
Àxî_∑øm_±r
->lexer;

293 
tok
 = 
	`jq_yyÀx
(
yylvÆ
, 
yyŒoc
, 
Àxî
);

294 i‡((
tok
 =
LITERAL
 ||Åok =
QQSTRING_TEXT
Ë&& !
	`jv_is_vÆid
(
yylvÆ
->
lôîÆ
)) {

295 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
	`jv_c›y
(
yylvÆ
->
lôîÆ
));

296 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
) {

297 
	`FAIL
(*
yyŒoc
, 
	`jv_°rög_vÆue
(
msg
));

299 
	`FAIL
(*
yyŒoc
, "InvalidÜiteral");

301 
	`jv_‰ì
(
msg
);

302 
	`jv_‰ì
(
yylvÆ
->
lôîÆ
);

303 
yylvÆ
->
lôîÆ
 = 
	`jv_nuŒ
();

305  
tok
;

306 
	}
}

310 
jv
 
	$check_obje˘_key
(
block
 
k
) {

311 i‡(
	`block_is_c⁄°
(
k
Ë&& 
	`block_c⁄°_köd
(kË!
JV_KIND_STRING
) {

312 
îrbuf
[15];

313  
	`jv_°rög_fmt
("Cannot use %s (%s)ás object key",

314 
	`jv_köd_«me
(
	`block_c⁄°_köd
(
k
)),

315 
	`jv_dump_°rög_åunc
(
	`block_c⁄°
(
k
), 
îrbuf
, (errbuf)));

317  
	`jv_övÆid
();

318 
	}
}

320 
block
 
	$gí_ödex
(
block
 
obj
, block 
key
) {

321  
	`BLOCK
(
	`gí_subexp
(
key
), 
obj
, 
	`gí_›_sim∂e
(
INDEX
));

322 
	}
}

324 
block
 
	$gí_ödex_›t
(
block
 
obj
, block 
key
) {

325  
	`BLOCK
(
	`gí_subexp
(
key
), 
obj
, 
	`gí_›_sim∂e
(
INDEX_OPT
));

326 
	}
}

328 
block
 
	$gí_¶i˚_ödex
(
block
 
obj
, block 
°¨t
, block 
íd
, 
›code
 
idx_›
) {

329 
block
 
key
 = 
	`BLOCK
(
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_obje˘
())),

330 
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_°rög
("start"))),

331 
	`gí_subexp
(
°¨t
),

332 
	`gí_›_sim∂e
(
INSERT
),

333 
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_°rög
("end"))),

334 
	`gí_subexp
(
íd
),

335 
	`gí_›_sim∂e
(
INSERT
));

336  
	`BLOCK
(
key
, 
obj
, 
	`gí_›_sim∂e
(
idx_›
));

337 
	}
}

339 
block
 
	$c⁄°™t_fﬁd
(
block
 
a
, block 
b
, 
›
) {

340 i‡(!
	`block_is_sögÀ
(
a
Ë|| !
	`block_is_c⁄°
(a) ||

341 !
	`block_is_sögÀ
(
b
Ë|| !
	`block_is_c⁄°
(b))

342  
	`gí_no›
();

343 i‡(
›
 == '+') {

344 i‡(
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_NULL
) {

345 
	`block_‰ì
(
a
);

346  
b
;

348 i‡(
	`block_c⁄°_köd
(
b
Ë=
JV_KIND_NULL
) {

349 
	`block_‰ì
(
b
);

350  
a
;

353 i‡(
	`block_c⁄°_köd
(
a
Ë!block_c⁄°_köd(
b
))

354  
	`gí_no›
();

356 
jv
 
ªs
 = 
	`jv_övÆid
();

358 i‡(
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_NUMBER
) {

359 
jv
 
jv_a
 = 
	`block_c⁄°
(
a
);

360 
jv
 
jv_b
 = 
	`block_c⁄°
(
b
);

362 
«
 = 
	`jv_numbî_vÆue
(
jv_a
);

363 
nb
 = 
	`jv_numbî_vÆue
(
jv_b
);

365 
cmp
 = 
	`jv_cmp
(
jv_a
, 
jv_b
);

367 
›
) {

368 '+': 
ªs
 = 
	`jv_numbî
(
«
 + 
nb
); ;

369 '-': 
ªs
 = 
	`jv_numbî
(
«
 - 
nb
); ;

370 '*': 
ªs
 = 
	`jv_numbî
(
«
 * 
nb
); ;

371 '/': 
ªs
 = 
	`jv_numbî
(
«
 / 
nb
); ;

372 
EQ
: 
ªs
 = (
cmp
 =0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

373 
NEQ
: 
ªs
 = (
cmp
 !0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

374 '<': 
ªs
 = (
cmp
 < 0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

375 '>': 
ªs
 = (
cmp
 > 0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

376 
LESSEQ
: 
ªs
 = (
cmp
 <0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

377 
GREATEREQ
: 
ªs
 = (
cmp
 >0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

380 } i‡(
›
 ='+' && 
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_STRING
) {

381 
ªs
 = 
	`jv_°rög_c⁄ˇt
(
	`block_c⁄°
(
a
), block_c⁄°(
b
));

383  
	`gí_no›
();

386 i‡(
	`jv_gë_köd
(
ªs
Ë=
JV_KIND_INVALID
)

387  
	`gí_no›
();

389 
	`block_‰ì
(
a
);

390 
	`block_‰ì
(
b
);

391  
	`gí_c⁄°
(
ªs
);

392 
	}
}

394 
block
 
	$gí_bö›
(
block
 
a
, block 
b
, 
›
) {

395 
block
 
fﬁded
 = 
	`c⁄°™t_fﬁd
(
a
, 
b
, 
›
);

396 i‡(!
	`block_is_no›
(
fﬁded
))

397  
fﬁded
;

399 c⁄° * 
fun˙ame
 = 0;

400 
›
) {

401 '+': 
fun˙ame
 = "_plus"; ;

402 '-': 
fun˙ame
 = "_minus"; ;

403 '*': 
fun˙ame
 = "_multiply"; ;

404 '/': 
fun˙ame
 = "_divide"; ;

405 '%': 
fun˙ame
 = "_mod"; ;

406 
EQ
: 
fun˙ame
 = "_equal"; ;

407 
NEQ
: 
fun˙ame
 = "_notequal"; ;

408 '<': 
fun˙ame
 = "_less"; ;

409 '>': 
fun˙ame
 = "_greater"; ;

410 
LESSEQ
: 
fun˙ame
 = "_lesseq"; ;

411 
GREATEREQ
: 
fun˙ame
 = "_greatereq"; ;

413 
	`as£π
(
fun˙ame
);

415  
	`gí_ˇŒ
(
fun˙ame
, 
	`BLOCK
(
	`gí_œmbda
(
a
), gí_œmbda(
b
)));

416 
	}
}

418 
block
 
	$gí_f‹m©
(
block
 
a
, 
jv
 
fmt
) {

419  
	`BLOCK
(
a
, 
	`gí_ˇŒ
("f‹m©", 
	`gí_œmbda
(
	`gí_c⁄°
(
fmt
))));

420 
	}
}

422 
block
 
	$gí_deföed‹_assign
(
block
 
obje˘
, block 
vÆ
) {

423 
block
 
tmp
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "tmp");

424  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

425 
vÆ
, 
tmp
,

426 
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
(
obje˘
),

427 
	`gí_œmbda
(
	`gí_deföed‹
(
	`gí_no›
(),

428 
	`gí_›_bound
(
LOADV
, 
tmp
))))));

429 
	}
}

431 
block
 
	$gí_upd©e
(
block
 
obje˘
, block 
vÆ
, 
›ty≥
) {

432 
block
 
tmp
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "tmp");

433  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

434 
vÆ
,

435 
tmp
,

436 
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
(
obje˘
),

437 
	`gí_œmbda
(
	`gí_bö›
(
	`gí_no›
(),

438 
	`gí_›_bound
(
LOADV
, 
tmp
),

439 
›ty≥
)))));

440 
	}
}

449 #ifde‡
YYTYPE_UINT8


450 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

452 
	tyyty≥_uöt8
;

455 #ifde‡
YYTYPE_INT8


456 
YYTYPE_INT8
 
	tyyty≥_öt8
;

458 sig√d 
	tyyty≥_öt8
;

461 #ifde‡
YYTYPE_UINT16


462 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

464 
	tyyty≥_uöt16
;

467 #ifde‡
YYTYPE_INT16


468 
YYTYPE_INT16
 
	tyyty≥_öt16
;

470 
	tyyty≥_öt16
;

473 #i‚de‡
YYSIZE_T


474 #ifde‡
__SIZE_TYPE__


475 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

476 #ñi‡
deföed
 
size_t


477 
	#YYSIZE_T
 
size_t


	)

478 #ñi‡! 
deföed
 
YYSIZE_T


479 
	~<°ddef.h
>

480 
	#YYSIZE_T
 
size_t


	)

482 
	#YYSIZE_T
 

	)

486 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

488 #i‚de‡
YY_


489 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

490 #i‡
ENABLE_NLS


491 
	~<liböé.h
>

492 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

495 #i‚de‡
YY_


496 
	#YY_
(
Msgid
Ë
	)
Msgid

500 #i‚de‡
YY_ATTRIBUTE


501 #i‡(
deföed
 
__GNUC__
 \

502 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

503 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

504 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

506 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

510 #i‚de‡
YY_ATTRIBUTE_PURE


511 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

514 #i‚de‡
YY_ATTRIBUTE_UNUSED


515 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

518 #i‡!
deföed
 
_N‹ëu∫
 \

519 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

520 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

521 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

523 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

528 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


529 
	#YYUSE
(
E
Ë((Ë(E))

	)

531 
	#YYUSE
(
E
Ë

	)

534 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


536 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

537 
	`_Pøgma
 ("GCC diagnosticÖush") \

538 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

539 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

540 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

541 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

543 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

545 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


546 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

547 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

549 #i‚de‡
YY_INITIAL_VALUE


550 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

554 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


558 #ifde‡
YYSTACK_USE_ALLOCA


559 #i‡
YYSTACK_USE_ALLOCA


560 #ifde‡
__GNUC__


561 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

562 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


563 
	~<Æloˇ.h
>

564 #ñi‡
deföed
 
_AIX


565 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

566 #ñi‡
deföed
 
_MSC_VER


567 
	~<mÆloc.h
>

568 
	#Æloˇ
 
_Æloˇ


	)

570 
	#YYSTACK_ALLOC
 
Æloˇ


	)

571 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


572 
	~<°dlib.h
>

574 #i‚de‡
EXIT_SUCCESS


575 
	#EXIT_SUCCESS
 0

	)

582 #ifde‡
YYSTACK_ALLOC


584 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

585 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


590 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

593 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

594 
	#YYSTACK_FREE
 
YYFREE


	)

595 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


596 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

598 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

599 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

600 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

601 
	~<°dlib.h
>

602 #i‚de‡
EXIT_SUCCESS


603 
	#EXIT_SUCCESS
 0

	)

606 #i‚de‡
YYMALLOC


607 
	#YYMALLOC
 
mÆloc


	)

608 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


609 *
mÆloc
 (
YYSIZE_T
);

612 #i‚de‡
YYFREE


613 
	#YYFREE
 
‰ì


	)

614 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


615 
‰ì
 (*);

622 #i‡(! 
deföed
 
yyovîÊow
 \

623 && (! 
deföed
 
	g__˝lu•lus
 \

624 || (
deföed
 
	gYYLTYPE_IS_TRIVIAL
 && YYLTYPE_IS_TRIVIAL \

625 && 
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

628 
	uyyÆloc


630 
yyty≥_öt16
 
	myyss_Æloc
;

631 
YYSTYPE
 
	myyvs_Æloc
;

632 
YYLTYPE
 
	myyls_Æloc
;

636 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

640 
	#YYSTACK_BYTES
(
N
) \

641 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
Ë+  (
YYLTYPE
)) \

642 + 2 * 
YYSTACK_GAP_MAXIMUM
)

	)

644 
	#YYCOPY_NEEDED
 1

	)

651 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

654 
YYSIZE_T
 
yy√wbyãs
; \

655 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

656 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

657 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

658 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

660 0)

	)

664 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

667 #i‚de‡
YYCOPY


668 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

669 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

670 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

672 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

675 
YYSIZE_T
 
yyi
; \

676 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

677 (
D°
)[
yyi
] = (
Src
)[yyi]; \

679 0)

	)

685 
	#YYFINAL
 27

	)

687 
	#YYLAST
 2143

	)

690 
	#YYNTOKENS
 69

	)

692 
	#YYNNTS
 30

	)

694 
	#YYNRULES
 170

	)

696 
	#YYNSTATES
 326

	)

700 
	#YYUNDEFTOK
 2

	)

701 
	#YYMAXUTOK
 302

	)

703 
	#YYTRANSLATE
(
YYX
) \

704 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

708 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

743 #i‡
YYDEBUG


745 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

768 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 1

771 c⁄° *c⁄° 
	gyyäame
[] =

788 "MkDi˘", "MkDi˘Paú", 
YY_NULLPTR


792 #ifde‡
YYPRINT


795 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

807 
	#YYPACT_NINF
 -120

	)

809 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

810 (!!((
Yy°©e
Ë=(-120)))

	)

812 
	#YYTABLE_NINF
 -157

	)

814 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

815 (!!((
YyèbÀ_vÆue
Ë=(-157)))

	)

819 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

859 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

897 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

905 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

915 c⁄° 
yyty≥_öt16
 
	gyyèbÀ
[] =

1134 c⁄° 
yyty≥_öt16
 
	gyycheck
[] =

1355 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1393 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1416 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

1439 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1440 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1441 
	#YYEMPTY
 (-2)

	)

1442 
	#YYEOF
 0

	)

1444 
	#YYACCEPT
 
yyac˚±œb


	)

1445 
	#YYABORT
 
yyab‹éab


	)

1446 
	#YYERROR
 
yyîr‹œb


	)

1449 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1451 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1453 i‡(
yych¨
 =
YYEMPTY
) \

1455 
yych¨
 = (
Tokí
); \

1456 
yylvÆ
 = (
VÆue
); \

1457 
	`YYPOPSTACK
 (
yyÀn
); \

1458 
yy°©e
 = *
yys•
; \

1459 
yybackup
; \

1463 
	`yyîr‹
 (&
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
	`YY_
("syntaxÉrror: cannot back up")); \

1464 
YYERROR
; \

1466 0)

	)

1469 
	#YYTERROR
 1

	)

1470 
	#YYERRCODE
 256

	)

1477 #i‚de‡
YYLLOC_DEFAULT


1478 
	#YYLLOC_DEFAULT
(
Cuºít
, 
Rhs
, 
N
) \

1480 i‡(
N
) \

1482 (
Cuºít
).
fú°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_line; \

1483 (
Cuºít
).
fú°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 1).first_column; \

1484 (
Cuºít
).
œ°_löe
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_line; \

1485 (
Cuºít
).
œ°_cﬁumn
 = 
	`YYRHSLOC
 (
Rhs
, 
N
).last_column; \

1489 (
Cuºít
).
fú°_löe
 = (Cuºít).
œ°_löe
 = \

1490 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_löe
; \

1491 (
Cuºít
).
fú°_cﬁumn
 = (Cuºít).
œ°_cﬁumn
 = \

1492 
	`YYRHSLOC
 (
Rhs
, 0).
œ°_cﬁumn
; \

1494 0)

	)

1497 
	#YYRHSLOC
(
Rhs
, 
K
Ë((Rhs)[K])

	)

1501 #i‡
YYDEBUG


1503 #i‚de‡
YYFPRINTF


1504 
	~<°dio.h
>

1505 
	#YYFPRINTF
 
Ârötf


	)

1508 
	#YYDPRINTF
(
Args
) \

1510 i‡(
yydebug
) \

1511 
YYFPRINTF
 
Args
; \

1512 } 0)

	)

1519 #i‚de‡
YY_LOCATION_PRINT


1520 #i‡
deföed
 
YYLTYPE_IS_TRIVIAL
 && YYLTYPE_IS_TRIVIAL

1524 
YY_ATTRIBUTE_UNUSED


1526 
	$yy_loˇti⁄_¥öt_
 (
FILE
 *
yyo
, 
YYLTYPE
 c⁄° * c⁄° 
yylo˝
)

1528 
ªs
 = 0;

1529 
íd_cﬁ
 = 0 !
yylo˝
->
œ°_cﬁumn
 ? yylocp->last_column - 1 : 0;

1530 i‡(0 <
yylo˝
->
fú°_löe
)

1532 
ªs
 +
	`YYFPRINTF
 (
yyo
, "%d", 
yylo˝
->
fú°_löe
);

1533 i‡(0 <
yylo˝
->
fú°_cﬁumn
)

1534 
ªs
 +
	`YYFPRINTF
 (
yyo
, ".%d", 
yylo˝
->
fú°_cﬁumn
);

1536 i‡(0 <
yylo˝
->
œ°_löe
)

1538 i‡(
yylo˝
->
fú°_löe
 < yylo˝->
œ°_löe
)

1540 
ªs
 +
	`YYFPRINTF
 (
yyo
, "-%d", 
yylo˝
->
œ°_löe
);

1541 i‡(0 <
íd_cﬁ
)

1542 
ªs
 +
	`YYFPRINTF
 (
yyo
, ".%d", 
íd_cﬁ
);

1544 i‡(0 <
íd_cﬁ
 && 
yylo˝
->
fú°_cﬁumn
 <Énd_col)

1545 
ªs
 +
	`YYFPRINTF
 (
yyo
, "-%d", 
íd_cﬁ
);

1547  
ªs
;

1548 
	}
}

1550 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
) \

1551 
	`yy_loˇti⁄_¥öt_
 (
Fûe
, &(
Loc
))

	)

1554 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1559 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1561 i‡(
yydebug
) \

1563 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1564 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1565 
Ty≥
, 
VÆue
, 
Loˇti⁄
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
); \

1566 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1568 } 0)

	)

1576 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, 
YYLTYPE
 c⁄° * c⁄° 
yyloˇti⁄p
, 
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
)

1578 
FILE
 *
yyo
 = 
yyouçut
;

1579 
	`YYUSE
 (
yyo
);

1580 
	`YYUSE
 (
yyloˇti⁄p
);

1581 
	`YYUSE
 (
™swî
);

1582 
	`YYUSE
 (
îr‹s
);

1583 
	`YYUSE
 (
loˇti⁄s
);

1584 
	`YYUSE
 (
Àxî_∑øm_±r
);

1585 i‡(!
yyvÆuï
)

1587 #ifde‡
YYPRINT


1588 i‡(
yyty≥
 < 
YYNTOKENS
)

1589 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1591 
	`YYUSE
 (
yyty≥
);

1592 
	}
}

1600 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
, 
YYLTYPE
 c⁄° * c⁄° 
yyloˇti⁄p
, 
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
)

1602 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

1603 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1605 
	`YY_LOCATION_PRINT
 (
yyouçut
, *
yyloˇti⁄p
);

1606 
	`YYFPRINTF
 (
yyouçut
, ": ");

1607 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

1608 
	`YYFPRINTF
 (
yyouçut
, ")");

1609 
	}
}

1617 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1619 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1620 ; 
yybŸtom
 <
yyt›
; yybottom++)

1622 
yybŸ
 = *
yybŸtom
;

1623 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1625 
	`YYFPRINTF
 (
°dîr
, "\n");

1626 
	}
}

1628 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1630 i‡(
yydebug
) \

1631 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1632 } 0)

	)

1640 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
YYLTYPE
 *
yyl•
, 
yyruÀ
, 
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
)

1642 
yy o
 = 
yyæöe
[
yyruÀ
];

1643 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1644 
yyi
;

1645 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1646 
yyruÀ
 - 1, 
yy o
);

1648 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1650 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1651 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1652 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1653 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1654 , &(
yyl•
[(
yyi
 + 1Ë- (
yyƒhs
)]Ë, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

1655 
	`YYFPRINTF
 (
°dîr
, "\n");

1657 
	}
}

1659 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1661 i‡(
yydebug
) \

1662 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
yyl•
, 
RuÀ
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
); \

1663 } 0)

	)

1667 
	gyydebug
;

1669 
	#YYDPRINTF
(
Args
)

	)

1670 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1671 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1672 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1677 #i‚de‡
YYINITDEPTH


1678 
	#YYINITDEPTH
 200

	)

1688 #i‚de‡
YYMAXDEPTH


1689 
	#YYMAXDEPTH
 10000

	)

1693 #i‡
YYERROR_VERBOSE


1695 #i‚de‡
yy°æí


1696 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1697 
	#yy°æí
 
°æí


	)

1700 
YYSIZE_T


1701 
	$yy°æí
 (c⁄° *
yy°r
)

1703 
YYSIZE_T
 
yyÀn
;

1704 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1706  
yyÀn
;

1707 
	}
}

1711 #i‚de‡
yy°p˝y


1712 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1713 
	#yy°p˝y
 
°p˝y


	)

1718 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1720 *
yyd
 = 
yyde°
;

1721 c⁄° *
yys
 = 
yy§c
;

1723 (*
yyd
++ = *
yys
++) != '\0')

1726  
yyd
 - 1;

1727 
	}
}

1731 #i‚de‡
yyäamîr


1739 
YYSIZE_T


1740 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1742 i‡(*
yy°r
 == '"')

1744 
YYSIZE_T
 
yyn
 = 0;

1745 c⁄° *
yyp
 = 
yy°r
;

1748 *++
yyp
)

1752 
do_nŸ_°rù_quŸes
;

1755 i‡(*++
yyp
 != '\\')

1756 
do_nŸ_°rù_quŸes
;

1759 i‡(
yyªs
)

1760 
yyªs
[
yyn
] = *
yyp
;

1761 
yyn
++;

1765 i‡(
yyªs
)

1766 
yyªs
[
yyn
] = '\0';

1767  
yyn
;

1769 
do_nŸ_°rù_quŸes
: ;

1772 i‡(! 
yyªs
)

1773  
	`yy°æí
 (
yy°r
);

1775  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1776 
	}
}

1788 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1789 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1791 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1792 
YYSIZE_T
 
yysize
 = 
yysize0
;

1793 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1795 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1797 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1800 
yycou¡
 = 0;

1825 i‡(
yytokí
 !
YYEMPTY
)

1827 
yyn
 = 
yy∑˘
[*
yys•
];

1828 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1829 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1834 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1836 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1837 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1838 
yyx
;

1840 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1841 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1842 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1844 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1846 
yycou¡
 = 1;

1847 
yysize
 = 
yysize0
;

1850 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1852 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1853 i‡(! (
yysize
 <
yysize1


1854 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1856 
yysize
 = 
yysize1
;

1862 
yycou¡
)

1864 
	#YYCASE_
(
N
, 
S
) \

1865 
N
: \

1866 
yyf‹m©
 = 
S
; \

1867 

	)

1868 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1869 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1870 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1871 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1872 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1873 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1874 #unde‡
YYCASE_


1878 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1879 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1881 
yysize
 = 
yysize1
;

1884 i‡(*
yymsg_Æloc
 < 
yysize
)

1886 *
yymsg_Æloc
 = 2 * 
yysize
;

1887 i‡(! (
yysize
 <*
yymsg_Æloc


1888 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1889 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1897 *
yyp
 = *
yymsg
;

1898 
yyi
 = 0;

1899 (*
yyp
 = *
yyf‹m©
) != '\0')

1900 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1902 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1903 
yyf‹m©
 += 2;

1907 
yyp
++;

1908 
yyf‹m©
++;

1912 
	}
}

1920 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
, 
YYLTYPE
 *
yyloˇti⁄p
, 
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
)

1922 
	`YYUSE
 (
yyvÆuï
);

1923 
	`YYUSE
 (
yyloˇti⁄p
);

1924 
	`YYUSE
 (
™swî
);

1925 
	`YYUSE
 (
îr‹s
);

1926 
	`YYUSE
 (
loˇti⁄s
);

1927 
	`YYUSE
 (
Àxî_∑øm_±r
);

1928 i‡(!
yymsg
)

1929 
yymsg
 = "Deleting";

1930 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1932 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1933 
yyty≥
)

1937 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

1943 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

1949 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

1955 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

1961 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

1967 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

1973 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

1979 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

1985 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

1991 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

1997 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2003 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2009 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2015 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2021 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2027 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2033 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2039 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2045 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2051 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2057 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2063 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2069 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2075 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2081 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2087 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2093 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2099 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2105 { 
	`jv_‰ì
(((*
yyvÆuï
).
lôîÆ
)); }

2111 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2117 { 
	`block_‰ì
(((*
yyvÆuï
).
blk
)); }

2125 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2126 
	}
}

2136 
	$yy∑r£
 (
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
)

2139 
yych¨
;

2145 
	`YY_INITIAL_VALUE
 (
YYSTYPE
 
yyvÆ_deÁu…
;)

2146 
YYSTYPE
 
yylvÆ
 
	`YY_INITIAL_VALUE
 (
yyvÆ_deÁu…
);

2149 
YYLTYPE
 
yyloc_deÁu…


2150 #i‡
deföed
 
YYLTYPE_IS_TRIVIAL
 && YYLTYPE_IS_TRIVIAL

2154 
YYLTYPE
 
yyŒoc
 = 
yyloc_deÁu…
;

2157 
yy√ºs
;

2159 
yy°©e
;

2161 
yyîr°©us
;

2172 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

2173 
yyty≥_öt16
 *
yyss
;

2174 
yyty≥_öt16
 *
yys•
;

2177 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

2178 
YYSTYPE
 *
yyvs
;

2179 
YYSTYPE
 *
yyv•
;

2182 
YYLTYPE
 
yylß
[
YYINITDEPTH
];

2183 
YYLTYPE
 *
yyls
;

2184 
YYLTYPE
 *
yyl•
;

2187 
YYLTYPE
 
yyîr‹_ønge
[3];

2189 
YYSIZE_T
 
yy°acksize
;

2191 
yyn
;

2192 
yyªsu…
;

2194 
yytokí
 = 0;

2197 
YYSTYPE
 
yyvÆ
;

2198 
YYLTYPE
 
yyloc
;

2200 #i‡
YYERROR_VERBOSE


2202 
yymsgbuf
[128];

2203 *
yymsg
 = 
yymsgbuf
;

2204 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

2207 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N), 
yyl•
 -(N))

	)

2211 
yyÀn
 = 0;

2213 
yys•
 = 
yyss
 = 
yysß
;

2214 
yyv•
 = 
yyvs
 = 
yyvß
;

2215 
yyl•
 = 
yyls
 = 
yylß
;

2216 
yy°acksize
 = 
YYINITDEPTH
;

2218 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

2220 
yy°©e
 = 0;

2221 
yyîr°©us
 = 0;

2222 
yy√ºs
 = 0;

2223 
yych¨
 = 
YYEMPTY
;

2224 
yyl•
[0] = 
yyŒoc
;

2225 
yy£t°©e
;

2230 
yy√w°©e
:

2233 
yys•
++;

2235 
yy£t°©e
:

2236 *
yys•
 = 
yy°©e
;

2238 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2241 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

2243 #ifde‡
yyovîÊow


2248 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

2249 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2250 
YYLTYPE
 *
yyls1
 = 
yyls
;

2256 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

2257 &
yyss1
, 
yysize
 *  (*
yys•
),

2258 &
yyvs1
, 
yysize
 *  (*
yyv•
),

2259 &
yyls1
, 
yysize
 *  (*
yyl•
),

2260 &
yy°acksize
);

2262 
yyls
 = 
yyls1
;

2263 
yyss
 = 
yyss1
;

2264 
yyvs
 = 
yyvs1
;

2267 #i‚de‡
YYSTACK_RELOCATE


2268 
yyexhau°edœb
;

2271 i‡(
YYMAXDEPTH
 <
yy°acksize
)

2272 
yyexhau°edœb
;

2273 
yy°acksize
 *= 2;

2274 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

2275 
yy°acksize
 = 
YYMAXDEPTH
;

2278 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

2279 
yyÆloc
 *
yy±r
 =

2280 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

2281 i‡(! 
yy±r
)

2282 
yyexhau°edœb
;

2283 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

2284 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

2285 
	`YYSTACK_RELOCATE
 (
yyls_Æloc
, 
yyls
);

2286 #unde‡
YYSTACK_RELOCATE


2287 i‡(
yyss1
 !
yysß
)

2288 
	`YYSTACK_FREE
 (
yyss1
);

2293 
yys•
 = 
yyss
 + 
yysize
 - 1;

2294 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

2295 
yyl•
 = 
yyls
 + 
yysize
 - 1;

2297 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

2298 (Ë
yy°acksize
));

2300 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

2301 
YYABORT
;

2304 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

2306 i‡(
yy°©e
 =
YYFINAL
)

2307 
YYACCEPT
;

2309 
yybackup
;

2314 
yybackup
:

2320 
yyn
 = 
yy∑˘
[
yy°©e
];

2321 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

2322 
yydeÁu…
;

2327 i‡(
yych¨
 =
YYEMPTY
)

2329 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

2330 
yych¨
 = 
	`yyÀx
 (&
yylvÆ
, &
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

2333 i‡(
yych¨
 <
YYEOF
)

2335 
yych¨
 = 
yytokí
 = 
YYEOF
;

2336 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

2340 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

2341 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2346 
yyn
 +
yytokí
;

2347 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

2348 
yydeÁu…
;

2349 
yyn
 = 
yyèbÀ
[yyn];

2350 i‡(
yyn
 <= 0)

2352 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

2353 
yyîæab
;

2354 
yyn
 = -yyn;

2355 
yyªdu˚
;

2360 i‡(
yyîr°©us
)

2361 
yyîr°©us
--;

2364 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

2367 
yych¨
 = 
YYEMPTY
;

2369 
yy°©e
 = 
yyn
;

2370 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


2371 *++
yyv•
 = 
yylvÆ
;

2372 
YY_IGNORE_MAYBE_UNINITIALIZED_END


2373 *++
yyl•
 = 
yyŒoc
;

2374 
yy√w°©e
;

2380 
yydeÁu…
:

2381 
yyn
 = 
yydeÁ˘
[
yy°©e
];

2382 i‡(
yyn
 == 0)

2383 
yyîæab
;

2384 
yyªdu˚
;

2390 
yyªdu˚
:

2392 
yyÀn
 = 
yyr2
[
yyn
];

2402 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

2405 
	`YYLLOC_DEFAULT
 (
yyloc
, (
yyl•
 - 
yyÀn
), yylen);

2406 
	`YY_REDUCE_PRINT
 (
yyn
);

2407 
yyn
)

2412 *
™swî
 = 
	`BLOCK
((
yyv•
[-2].
blk
), (yyv•[-1].blk), 
	`gí_›_sim∂e
(
TOP
), (yyvsp[0].blk));

2420 *
™swî
 = 
	`BLOCK
((
yyv•
[-2].
blk
), (yyvsp[-1].blk), (yyvsp[0].blk));

2428 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2436 i‡(!
	`block_is_c⁄°
((
yyv•
[-1].
blk
))) {

2437 
	`FAIL
((
yyloc
), "Module metadata must be constant");

2438 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2439 
	`block_‰ì
((
yyv•
[-1].
blk
));

2441 (
yyvÆ
.
blk
Ë
	`gí_moduÀ
((
yyv•
[-1].blk));

2450 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2458 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-1].blk), (yyvsp[0].blk));

2466 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2474 (
yyvÆ
.
blk
Ë
	`block_joö
((
yyv•
[-1].blk), (yyvsp[0].blk));

2482 (
yyvÆ
.
blk
Ë
	`block_böd_ª„ªn˚d
((
yyv•
[-1].blk), (yyv•[0].blk), 
OP_IS_CALL_PSEUDO
);

2490 (
yyvÆ
.
blk
Ë
	`gí_de°ru˘uª
((
yyv•
[-4].blk), (yyvsp[-2].blk), (yyvsp[0].blk));

2498 (
yyvÆ
.
blk
Ë
	`gí_ªdu˚
((
yyv•
[-7].blk), (yyvsp[-5].blk), (yyvsp[-3].blk), (yyvsp[-1].blk));

2506 (
yyvÆ
.
blk
Ë
	`gí_f‹óch
((
yyv•
[-9].blk), (yyvsp[-7].blk), (yyvsp[-5].blk), (yyvsp[-3].blk), (yyvsp[-1].blk));

2514 (
yyvÆ
.
blk
Ë
	`gí_f‹óch
((
yyv•
[-7].blk), (yyv•[-5].blk), (yyv•[-3].blk), (yyv•[-1].blk), 
	`gí_no›
());

2522 (
yyvÆ
.
blk
Ë
	`gí_c⁄d
((
yyv•
[-3].blk), (yyvsp[-1].blk), (yyvsp[0].blk));

2530 (
yyvÆ
.
blk
Ë
	`gí_c⁄d
((
yyv•
[-3].blk), (yyv•[-1].blk), 
	`gí_no›
());

2538 
	`FAIL
((
yyloc
), "Possibly unterminated 'if' statement");

2539 (
yyvÆ
.
blk
Ë(
yyv•
[-2].blk);

2548 (
yyvÆ
.
blk
Ë
	`gí_åy
((
yyv•
[-2].blk), 
	`gí_åy_h™dÀr
((yyvsp[0].blk)));

2557 (
yyvÆ
.
blk
Ë
	`gí_åy
((
yyv•
[0].blk), 
	`gí_›_sim∂e
(
BACKTRACK
));

2565 
	`FAIL
((
yyloc
), "Possibly unterminated 'try' statement");

2566 (
yyvÆ
.
blk
Ë(
yyv•
[-2].blk);

2574 
jv
 
v
 = 
	`jv_°rög_fmt
("*œbñ-%s", 
	`jv_°rög_vÆue
((
yyv•
[-2].
lôîÆ
)));

2575 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_œbñ
(
	`jv_°rög_vÆue
(
v
), (
yyv•
[0].blk)));

2576 
	`jv_‰ì
((
yyv•
[-2].
lôîÆ
));

2577 
	`jv_‰ì
(
v
);

2585 (
yyvÆ
.
blk
Ë
	`gí_åy
((
yyv•
[-1].blk), 
	`gí_›_sim∂e
(
BACKTRACK
));

2593 (
yyvÆ
.
blk
Ë
	`gí_ˇŒ
("_assign", 
	`BLOCK
(
	`gí_œmbda
((
yyv•
[-2].blk)), gen_lambda((yyvsp[0].blk))));

2601 (
yyvÆ
.
blk
Ë
	`gí_‹
((
yyv•
[-2].blk), (yyvsp[0].blk));

2609 (
yyvÆ
.
blk
Ë
	`gí_™d
((
yyv•
[-2].blk), (yyvsp[0].blk));

2617 (
yyvÆ
.
blk
Ë
	`gí_deföed‹
((
yyv•
[-2].blk), (yyvsp[0].blk));

2625 (
yyvÆ
.
blk
Ë
	`gí_deföed‹_assign
((
yyv•
[-2].blk), (yyvsp[0].blk));

2633 (
yyvÆ
.
blk
Ë
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
((
yyv•
[-2].blk)), gen_lambda((yyvsp[0].blk))));

2641 (
yyvÆ
.
blk
Ë
	`block_joö
((
yyv•
[-2].blk), (yyvsp[0].blk));

2649 (
yyvÆ
.
blk
Ë
	`gí_bŸh
((
yyv•
[-2].blk), (yyvsp[0].blk));

2657 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '+');

2665 (
yyvÆ
.
blk
Ë
	`gí_upd©e
((
yyv•
[-2].blk), (yyvsp[0].blk), '+');

2673 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[0].blk), 
	`gí_ˇŒ
("_√g©e", 
	`gí_no›
()));

2681 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '-');

2689 (
yyvÆ
.
blk
Ë
	`gí_upd©e
((
yyv•
[-2].blk), (yyvsp[0].blk), '-');

2697 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '*');

2705 (
yyvÆ
.
blk
Ë
	`gí_upd©e
((
yyv•
[-2].blk), (yyvsp[0].blk), '*');

2713 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '/');

2714 i‡(
	`block_is_c⁄°_öf
((
yyvÆ
.
blk
)))

2715 
	`FAIL
((
yyloc
), "Division by zero?");

2723 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '%');

2724 i‡(
	`block_is_c⁄°_öf
((
yyvÆ
.
blk
)))

2725 
	`FAIL
((
yyloc
), "Remainder by zero?");

2733 (
yyvÆ
.
blk
Ë
	`gí_upd©e
((
yyv•
[-2].blk), (yyvsp[0].blk), '/');

2741 (
yyvÆ
.
blk
Ë
	`gí_upd©e
((
yyv•
[-2].blk), (yyvsp[0].blk), '%');

2749 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyv•[0].blk), 
EQ
);

2757 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyv•[0].blk), 
NEQ
);

2765 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '<');

2773 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyvsp[0].blk), '>');

2781 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyv•[0].blk), 
LESSEQ
);

2789 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-2].blk), (yyv•[0].blk), 
GREATEREQ
);

2797 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

2805 (
yyvÆ
.
blk
Ë(
yyv•
[-1].blk);

2813 i‡(!
	`block_is_c⁄°
((
yyv•
[-1].
blk
))) {

2814 
	`FAIL
((
yyloc
), "Module metadata must be constant");

2815 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2816 
	`block_‰ì
((
yyv•
[-2].
blk
));

2817 
	`block_‰ì
((
yyv•
[-1].
blk
));

2818 } i‡(
	`block_c⁄°_köd
((
yyv•
[-1].
blk
)Ë!
JV_KIND_OBJECT
) {

2819 
	`FAIL
((
yyloc
), "Module metadata must beán object");

2820 (
yyvÆ
.
blk
Ë
	`gí_no›
();

2821 
	`block_‰ì
((
yyv•
[-2].
blk
));

2822 
	`block_‰ì
((
yyv•
[-1].
blk
));

2824 (
yyvÆ
.
blk
Ë
	`gí_imp‹t_mëa
((
yyv•
[-2].blk), (yyvsp[-1].blk));

2833 
jv
 
v
 = 
	`block_c⁄°
((
yyv•
[-3].
blk
));

2836 (
yyvÆ
.
blk
Ë
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), jv_°rög_vÆue((
yyv•
[0].
lôîÆ
)), 1);

2837 
	`block_‰ì
((
yyv•
[-3].
blk
));

2838 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

2839 
	`jv_‰ì
(
v
);

2847 
jv
 
v
 = 
	`block_c⁄°
((
yyv•
[-2].
blk
));

2848 (
yyvÆ
.
blk
Ë
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), jv_°rög_vÆue((
yyv•
[0].
lôîÆ
)), 0);

2849 
	`block_‰ì
((
yyv•
[-2].
blk
));

2850 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

2851 
	`jv_‰ì
(
v
);

2859 
jv
 
v
 = 
	`block_c⁄°
((
yyv•
[0].
blk
));

2860 (
yyvÆ
.
blk
Ë
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), 
NULL
, 0);

2861 
	`block_‰ì
((
yyv•
[0].
blk
));

2862 
	`jv_‰ì
(
v
);

2870 i‡(!
	`block_is_c⁄°
((
yyv•
[0].
blk
))) {

2871 
	`FAIL
((
yyloc
), "ImportÖath must be constant");

2872 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_°rög
(""));

2873 
	`block_‰ì
((
yyv•
[0].
blk
));

2875 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

2884 (
yyvÆ
.
blk
Ë
	`gí_fun˘i⁄
(
	`jv_°rög_vÆue
((
yyv•
[-3].
lôîÆ
)), 
	`gí_no›
(), (yyvsp[-1].blk));

2885 
	`jv_‰ì
((
yyv•
[-3].
lôîÆ
));

2893 (
yyvÆ
.
blk
Ë
	`gí_fun˘i⁄
(
	`jv_°rög_vÆue
((
yyv•
[-6].
lôîÆ
)), (yyvsp[-4].blk), (yyvsp[-1].blk));

2894 
	`jv_‰ì
((
yyv•
[-6].
lôîÆ
));

2902 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

2910 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-2].blk), (yyvsp[0].blk));

2918 (
yyvÆ
.
blk
Ë
	`gí_∑øm_ªguœr
(
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)));

2919 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

2927 (
yyvÆ
.
blk
Ë
	`gí_∑øm_ªguœr
(
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)));

2928 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

2936 (
yyvÆ
.
blk
Ë
	`gí_∑øm
(
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)));

2937 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

2944 { (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("text"); }

2951 (
yyvÆ
.
blk
Ë(
yyv•
[-1].blk);

2952 
	`jv_‰ì
((
yyv•
[-2].
lôîÆ
));

2959 { (
yyvÆ
.
lôîÆ
Ë(
yyv•
[-1].literal); }

2966 (
yyvÆ
.
blk
Ë(
yyv•
[-1].blk);

2967 
	`jv_‰ì
((
yyv•
[-2].
lôîÆ
));

2975 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_°rög
(""));

2983 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-1].blk), 
	`gí_c⁄°
((yyv•[0].
lôîÆ
)), '+');

2991 (
yyvÆ
.
blk
Ë
	`gí_bö›
((
yyv•
[-3].blk), 
	`gí_f‹m©
((yyv•[-1].blk), 
	`jv_c›y
((yyv•[-4].
lôîÆ
))), '+');

2999 (
yyvÆ
.
blk
Ë
	`gí_c⁄d
((
yyv•
[-3].blk), (yyvsp[-1].blk), (yyvsp[0].blk));

3007 (
yyvÆ
.
blk
Ë(
yyv•
[-1].blk);

3015 (
yyvÆ
.
blk
Ë
	`block_joö
((
yyv•
[-2].blk), (yyvsp[0].blk));

3023 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[0].blk), 
	`gí_ˇŒ
("_√g©e", 
	`gí_no›
()));

3031 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3039 (
yyvÆ
.
blk
Ë
	`gí_no›
();

3047 (
yyvÆ
.
blk
Ë
	`gí_ˇŒ
("ªcur£", 
	`gí_no›
());

3055 
jv
 
v
 = 
	`jv_°rög_fmt
("*œbñ-%s", 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)));

3056 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
,

3057 
	`BLOCK
(
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
v
)),

3058 
	`gí_ˇŒ
("îr‹", 
	`gí_no›
())));

3059 
	`jv_‰ì
(
v
);

3060 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3068 
	`FAIL
((
yyloc
), "breakÑequiresáÜabelÅo breakÅo");

3069 (
yyvÆ
.
blk
Ë
	`gí_no›
();

3077 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
((
yyv•
[-2].blk), 
	`gí_c⁄°
((yyv•[-1].
lôîÆ
)));

3085 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
(
	`gí_no›
(), 
	`gí_c⁄°
((
yyv•
[-1].
lôîÆ
)));

3093 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
((
yyv•
[-3].blk), (yyvsp[-1].blk));

3101 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
(
	`gí_no›
(), (
yyv•
[-1].blk));

3109 (
yyvÆ
.
blk
Ë
	`gí_ödex
((
yyv•
[-1].blk), 
	`gí_c⁄°
((yyv•[0].
lôîÆ
)));

3117 (
yyvÆ
.
blk
Ë
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
)));

3125 (
yyvÆ
.
blk
Ë
	`gí_ödex
((
yyv•
[-2].blk), (yyvsp[0].blk));

3133 (
yyvÆ
.
blk
Ë
	`gí_ödex
(
	`gí_no›
(), (
yyv•
[0].blk));

3141 
	`FAIL
((
yyloc
), "try .[\"field\"] instead of .field for unusuallyÇamed fields");

3142 (
yyvÆ
.
blk
Ë
	`gí_no›
();

3150 
	`jv_‰ì
((
yyv•
[-1].
lôîÆ
));

3151 
	`FAIL
((
yyloc
), "try .[\"field\"] instead of .field for unusuallyÇamed fields");

3152 (
yyvÆ
.
blk
Ë
	`gí_no›
();

3160 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
((
yyv•
[-4].blk), (yyvsp[-2].blk));

3168 (
yyvÆ
.
blk
Ë
	`gí_ödex
((
yyv•
[-3].blk), (yyvsp[-1].blk));

3176 (
yyvÆ
.
blk
Ë
	`gí_ödex_›t
((
yyv•
[-5].blk), (yyvsp[-2].blk));

3184 (
yyvÆ
.
blk
Ë
	`gí_ödex
((
yyv•
[-4].blk), (yyvsp[-1].blk));

3192 (
yyvÆ
.
blk
Ë
	`block_joö
((
yyv•
[-3].blk), 
	`gí_›_sim∂e
(
EACH_OPT
));

3200 (
yyvÆ
.
blk
Ë
	`block_joö
((
yyv•
[-2].blk), 
	`gí_›_sim∂e
(
EACH
));

3208 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-6].blk), (yyv•[-4].blk), (yyv•[-2].blk), 
INDEX_OPT
);

3216 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-5].blk), (yyv•[-3].blk), 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
INDEX_OPT
);

3224 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-5].blk), 
	`gí_c⁄°
(
	`jv_nuŒ
()), (yyv•[-2].blk), 
INDEX_OPT
);

3232 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-5].blk), (yyv•[-3].blk), (yyv•[-1].blk), 
INDEX
);

3240 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-4].blk), (yyv•[-2].blk), 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
INDEX
);

3248 (
yyvÆ
.
blk
Ë
	`gí_¶i˚_ödex
((
yyv•
[-4].blk), 
	`gí_c⁄°
(
	`jv_nuŒ
()), (yyv•[-1].blk), 
INDEX
);

3256 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
));

3264 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3272 (
yyvÆ
.
blk
Ë
	`gí_f‹m©
(
	`gí_no›
(), (
yyv•
[0].
lôîÆ
));

3280 (
yyvÆ
.
blk
Ë(
yyv•
[-1].blk);

3288 (
yyvÆ
.
blk
Ë
	`gí_cﬁÀ˘
((
yyv•
[-1].blk));

3296 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_¨øy
());

3304 
block
 
o
 = 
	`gí_c⁄°_obje˘
((
yyv•
[-1].
blk
));

3305 i‡(
o
.
fú°
 !
NULL
)

3306 (
yyvÆ
.
blk
Ë
o
;

3308 (
yyvÆ
.
blk
Ë
	`BLOCK
(
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_obje˘
())), (
yyv•
[-1].blk), 
	`gí_›_sim∂e
(
POP
));

3316 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADVN
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
))));

3317 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3325 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
))));

3326 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3334 i‡(
	`°rcmp
(
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)), "__loc__") == 0) {

3335 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`JV_OBJECT
(
	`jv_°rög
("fûe"), 
	`jv_c›y
(
loˇti⁄s
->
‚ame
),

3336 
	`jv_°rög
("löe"), 
	`jv_numbî
(
	`locfûe_gë_löe
(
loˇti⁄s
, (
yyloc
).
°¨t
) + 1)));

3338 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
))));

3340 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3348 c⁄° *
s
 = 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
));

3349 i‡(
	`°rcmp
(
s
, "false") == 0)

3350 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_Ál£
());

3351 i‡(
	`°rcmp
(
s
, "true") == 0)

3352 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_åue
());

3353 i‡(
	`°rcmp
(
s
, "null") == 0)

3354 (
yyvÆ
.
blk
Ë
	`gí_c⁄°
(
	`jv_nuŒ
());

3356 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_ˇŒ
(
s
, 
	`gí_no›
()));

3357 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3365 (
yyvÆ
.
blk
Ë
	`gí_ˇŒ
(
	`jv_°rög_vÆue
((
yyv•
[-3].
lôîÆ
)), (yyvsp[-1].blk));

3366 (
yyvÆ
.
blk
Ë
	`gí_loˇti⁄
((
yyl•
[-3]), 
loˇti⁄s
, (yyval.blk));

3367 
	`jv_‰ì
((
yyv•
[-3].
lôîÆ
));

3374 { (
yyvÆ
.
blk
Ë
	`gí_no›
(); }

3380 { (
yyvÆ
.
blk
Ë
	`gí_no›
(); }

3386 { (
yyvÆ
.
blk
Ë(
yyv•
[-3].blk); }

3392 { (
yyvÆ
.
blk
Ë
	`gí_no›
(); }

3399 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3407 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-2].blk), (yyvsp[0].blk));

3415 (
yyvÆ
.
blk
Ë
	`gí_œmbda
((
yyv•
[0].blk));

3423 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-2].blk), 
	`gí_de°ru˘uª_Æt
((yyvsp[0].blk)));

3431 (
yyvÆ
.
blk
Ë
	`gí_de°ru˘uª_Æt
((
yyv•
[0].blk));

3439 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-2].blk), (yyvsp[0].blk));

3447 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3455 (
yyvÆ
.
blk
Ë
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)));

3456 
	`jv_‰ì
((
yyv•
[0].
lôîÆ
));

3464 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-1].blk), 
	`gí_›_sim∂e
(
POP
));

3472 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-1].blk), 
	`gí_›_sim∂e
(
POP
));

3480 (
yyvÆ
.
blk
Ë
	`gí_¨øy_m©chî
(
	`gí_no›
(), (
yyv•
[0].blk));

3488 (
yyvÆ
.
blk
Ë
	`gí_¨øy_m©chî
((
yyv•
[-2].blk), (yyvsp[0].blk));

3496 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3504 (
yyvÆ
.
blk
Ë
	`BLOCK
((
yyv•
[-2].blk), (yyvsp[0].blk));

3512 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
(
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
)), 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
((yyvsp[0].literal))));

3520 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
(
	`gí_c⁄°
((
yyv•
[-2].
lôîÆ
)), 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
((yyvsp[-2].literal))), (yyvsp[0].blk)));

3528 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
(
	`gí_c⁄°
((
yyv•
[-2].
lôîÆ
)), (yyvsp[0].blk));

3536 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
(
	`gí_c⁄°
((
yyv•
[-2].
lôîÆ
)), (yyvsp[0].blk));

3544 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
((
yyv•
[-2].blk), (yyvsp[0].blk));

3552 
jv
 
msg
 = 
	`check_obje˘_key
((
yyv•
[-3].
blk
));

3553 i‡(
	`jv_is_vÆid
(
msg
)) {

3554 
	`FAIL
((
yyloc
), 
	`jv_°rög_vÆue
(
msg
));

3556 
	`jv_‰ì
(
msg
);

3557 (
yyvÆ
.
blk
Ë
	`gí_obje˘_m©chî
((
yyv•
[-3].blk), (yyvsp[0].blk));

3565 
	`FAIL
((
yyloc
), "MayÇeedÖarenthesesáround object keyÉxpression");

3566 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3574 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("as");

3582 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("def");

3590 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("module");

3598 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("import");

3606 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("include");

3614 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("if");

3622 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("then");

3630 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("else");

3638 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("elif");

3646 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("reduce");

3654 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("foreach");

3662 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("end");

3670 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("and");

3678 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("or");

3686 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("try");

3694 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("catch");

3702 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("label");

3710 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("break");

3718 (
yyvÆ
.
lôîÆ
Ë
	`jv_°rög
("__loc__");

3726 (
yyvÆ
.
blk
)=
	`gí_no›
();

3733 { (
yyvÆ
.
blk
Ë(
yyv•
[0].blk); }

3739 { (
yyvÆ
.
blk
)=
	`block_joö
((
yyv•
[-2].blk), (yyvsp[0].blk)); }

3745 { (
yyvÆ
.
blk
Ë(
yyv•
[0].blk); }

3752 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
((
yyv•
[-2].
lôîÆ
)), (yyvsp[0].blk));

3760 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
((
yyv•
[-2].
lôîÆ
)), (yyvsp[0].blk));

3768 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
((
yyv•
[-2].blk), (yyvsp[0].blk));

3776 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
((
yyv•
[0].blk), 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), gí_›_sim∂e(
DUP2
),

3777 
	`gí_›_sim∂e
(
DUP2
), gí_›_sim∂e(
INDEX
)));

3785 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
((
yyv•
[-2].
lôîÆ
)))),

3786 (
yyv•
[0].
blk
));

3794 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
)),

3795 
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)))));

3803 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
)),

3804 
	`gí_loˇti⁄
((
yyloc
), 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
((
yyv•
[0].
lôîÆ
)))));

3812 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
(
	`jv_c›y
((
yyv•
[0].
lôîÆ
))),

3813 
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
))));

3821 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
(
	`gí_c⁄°
(
	`jv_c›y
((
yyv•
[0].
lôîÆ
))),

3822 
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
((
yyv•
[0].
lôîÆ
))));

3830 
jv
 
msg
 = 
	`check_obje˘_key
((
yyv•
[-3].
blk
));

3831 i‡(
	`jv_is_vÆid
(
msg
)) {

3832 
	`FAIL
((
yyloc
), 
	`jv_°rög_vÆue
(
msg
));

3834 
	`jv_‰ì
(
msg
);

3835 (
yyvÆ
.
blk
Ë
	`gí_di˘∑ú
((
yyv•
[-3].blk), (yyvsp[0].blk));

3843 
	`FAIL
((
yyloc
), "MayÇeedÖarenthesesáround object keyÉxpression");

3844 (
yyvÆ
.
blk
Ë(
yyv•
[0].blk);

3864 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

3866 
	`YYPOPSTACK
 (
yyÀn
);

3867 
yyÀn
 = 0;

3868 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3870 *++
yyv•
 = 
yyvÆ
;

3871 *++
yyl•
 = 
yyloc
;

3877 
yyn
 = 
yyr1
[yyn];

3879 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

3880 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

3881 
yy°©e
 = 
yyèbÀ
[yystate];

3883 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

3885 
yy√w°©e
;

3891 
yyîæab
:

3894 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

3897 i‡(!
yyîr°©us
)

3899 ++
yy√ºs
;

3900 #i‡! 
YYERROR_VERBOSE


3901 
	`yyîr‹
 (&
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
	`YY_
("syntaxÉrror"));

3903 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

3904 
yys•
, 
yytokí
)

	)

3906 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

3907 
yysy¡ax_îr‹_°©us
;

3908 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3909 i‡(
yysy¡ax_îr‹_°©us
 == 0)

3910 
yymsgp
 = 
yymsg
;

3911 i‡(
yysy¡ax_îr‹_°©us
 == 1)

3913 i‡(
yymsg
 !
yymsgbuf
)

3914 
	`YYSTACK_FREE
 (
yymsg
);

3915 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

3916 i‡(!
yymsg
)

3918 
yymsg
 = 
yymsgbuf
;

3919 
yymsg_Æloc
 =  
yymsgbuf
;

3920 
yysy¡ax_îr‹_°©us
 = 2;

3924 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3925 
yymsgp
 = 
yymsg
;

3928 
	`yyîr‹
 (&
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
yymsgp
);

3929 i‡(
yysy¡ax_îr‹_°©us
 == 2)

3930 
yyexhau°edœb
;

3932 #unde‡
YYSYNTAX_ERROR


3936 
yyîr‹_ønge
[1] = 
yyŒoc
;

3938 i‡(
yyîr°©us
 == 3)

3943 i‡(
yych¨
 <
YYEOF
)

3946 i‡(
yych¨
 =
YYEOF
)

3947 
YYABORT
;

3951 
	`yyde°ru˘
 ("Error: discarding",

3952 
yytokí
, &
yylvÆ
, &
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

3953 
yych¨
 = 
YYEMPTY
;

3959 
yyîæab1
;

3965 
yyîr‹œb
:

3971 
yyîr‹œb
;

3973 
yyîr‹_ønge
[1] = 
yyl•
[1-
yyÀn
];

3976 
	`YYPOPSTACK
 (
yyÀn
);

3977 
yyÀn
 = 0;

3978 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3979 
yy°©e
 = *
yys•
;

3980 
yyîæab1
;

3986 
yyîæab1
:

3987 
yyîr°©us
 = 3;

3991 
yyn
 = 
yy∑˘
[
yy°©e
];

3992 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

3994 
yyn
 +
YYTERROR
;

3995 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

3997 
yyn
 = 
yyèbÀ
[yyn];

3998 i‡(0 < 
yyn
)

4004 i‡(
yys•
 =
yyss
)

4005 
YYABORT
;

4007 
yyîr‹_ønge
[1] = *
yyl•
;

4008 
	`yyde°ru˘
 ("Error:Öopping",

4009 
yy°os
[
yy°©e
], 
yyv•
, 
yyl•
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

4010 
	`YYPOPSTACK
 (1);

4011 
yy°©e
 = *
yys•
;

4012 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

4015 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


4016 *++
yyv•
 = 
yylvÆ
;

4017 
YY_IGNORE_MAYBE_UNINITIALIZED_END


4019 
yyîr‹_ønge
[2] = 
yyŒoc
;

4022 
	`YYLLOC_DEFAULT
 (
yyloc
, 
yyîr‹_ønge
, 2);

4023 *++
yyl•
 = 
yyloc
;

4026 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

4028 
yy°©e
 = 
yyn
;

4029 
yy√w°©e
;

4035 
yyac˚±œb
:

4036 
yyªsu…
 = 0;

4037 
yyªtu∫
;

4042 
yyab‹éab
:

4043 
yyªsu…
 = 1;

4044 
yyªtu∫
;

4046 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


4050 
yyexhau°edœb
:

4051 
	`yyîr‹
 (&
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
	`YY_
("memoryÉxhausted"));

4052 
yyªsu…
 = 2;

4056 
yyªtu∫
:

4057 i‡(
yych¨
 !
YYEMPTY
)

4061 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

4062 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

4063 
yytokí
, &
yylvÆ
, &
yyŒoc
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

4067 
	`YYPOPSTACK
 (
yyÀn
);

4068 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

4069 
yys•
 !
yyss
)

4071 
	`yyde°ru˘
 ("Cleanup:Öopping",

4072 
yy°os
[*
yys•
], 
yyv•
, 
yyl•
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
);

4073 
	`YYPOPSTACK
 (1);

4075 #i‚de‡
yyovîÊow


4076 i‡(
yyss
 !
yysß
)

4077 
	`YYSTACK_FREE
 (
yyss
);

4079 #i‡
YYERROR_VERBOSE


4080 i‡(
yymsg
 !
yymsgbuf
)

4081 
	`YYSTACK_FREE
 (
yymsg
);

4083  
yyªsu…
;

4084 
	}
}

4088 
	$jq_∑r£
(
locfûe
* 
loˇti⁄s
, 
block
* 
™swî
) {

4089 
Àxî_∑øm
 
sˇ¬î
;

4090 
YY_BUFFER_STATE
 
buf
;

4091 
	`jq_yyÀx_öô_exåa
(0, &
sˇ¬î
.
Àxî
);

4092 
buf
 = 
	`jq_yy_sˇn_byãs
(
loˇti⁄s
->
d©a
,Üoˇti⁄s->
Àngth
, 
sˇ¬î
.
Àxî
);

4093 
îr‹s
 = 0;

4094 *
™swî
 = 
	`gí_no›
();

4095 
	`yy∑r£
(
™swî
, &
îr‹s
, 
loˇti⁄s
, &
sˇ¬î
);

4096 
	`jq_yy_dñëe_buf„r
(
buf
, 
sˇ¬î
.
Àxî
);

4097 
	`jq_yyÀx_de°roy
(
sˇ¬î
.
Àxî
);

4098 i‡(
îr‹s
 > 0) {

4099 
	`block_‰ì
(*
™swî
);

4100 *
™swî
 = 
	`gí_no›
();

4102  
îr‹s
;

4103 
	}
}

4105 
	$jq_∑r£_libøry
(
locfûe
* 
loˇti⁄s
, 
block
* 
™swî
) {

4106 
îrs
 = 
	`jq_∑r£
(
loˇti⁄s
, 
™swî
);

4107 i‡(
îrs
) Érrs;

4108 i‡(
	`block_has_maö
(*
™swî
)) {

4109 
	`locfûe_loˇã
(
loˇti⁄s
, 
UNKNOWN_LOCATION
, "jq:Érror:Üibrary should only have function definitions,Çotá mainÉxpression");

4112 
	`as£π
(
	`block_has_⁄ly_bödîs_™d_imp‹ts
(*
™swî
, 
OP_IS_CALL_PSEUDO
));

4114 
	}
}

	@src/parser.h

33 #i‚de‡
YY_YY_SRC_PARSER_H_INCLUDED


34 
	#YY_YY_SRC_PARSER_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

45 
	~"locfûe.h
"

46 
	gÀxî_∑øm
;

48 
	#YYLTYPE
 
loˇti⁄


	)

49 
	#YYLLOC_DEFAULT
(
Loc
, 
Rhs
, 
N
) \

51 i‡(
N
) { \

52 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 1).start; \

53 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 
N
).end; \

55 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 0).
íd
; \

56 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 0).end; \

58 } 0)

	)

63 #i‚de‡
YYTOKENTYPE


64 
	#YYTOKENTYPE


	)

65 
	eyytokíty≥


67 
	mINVALID_CHARACTER
 = 258,

68 
	mIDENT
 = 259,

69 
	mFIELD
 = 260,

70 
	mLITERAL
 = 261,

71 
	mFORMAT
 = 262,

72 
	mREC
 = 263,

73 
	mSETMOD
 = 264,

74 
	mEQ
 = 265,

75 
	mNEQ
 = 266,

76 
	mDEFINEDOR
 = 267,

77 
	mAS
 = 268,

78 
	mDEF
 = 269,

79 
	mMODULE
 = 270,

80 
	mIMPORT
 = 271,

81 
	mINCLUDE
 = 272,

82 
	mIF
 = 273,

83 
	mTHEN
 = 274,

84 
	mELSE
 = 275,

85 
	mELSE_IF
 = 276,

86 
	mREDUCE
 = 277,

87 
	mFOREACH
 = 278,

88 
	mEND
 = 279,

89 
	mAND
 = 280,

90 
	mOR
 = 281,

91 
	mTRY
 = 282,

92 
	mCATCH
 = 283,

93 
	mLABEL
 = 284,

94 
	mBREAK
 = 285,

95 
	mLOC
 = 286,

96 
	mSETPIPE
 = 287,

97 
	mSETPLUS
 = 288,

98 
	mSETMINUS
 = 289,

99 
	mSETMULT
 = 290,

100 
	mSETDIV
 = 291,

101 
	mSETDEFINEDOR
 = 292,

102 
	mLESSEQ
 = 293,

103 
	mGREATEREQ
 = 294,

104 
	mALTERNATION
 = 295,

105 
	mQQSTRING_START
 = 296,

106 
	mQQSTRING_TEXT
 = 297,

107 
	mQQSTRING_INTERP_START
 = 298,

108 
	mQQSTRING_INTERP_END
 = 299,

109 
	mQQSTRING_END
 = 300,

110 
	mFUNCDEF
 = 301,

111 
	mNONOPT
 = 302

115 
	#INVALID_CHARACTER
 258

	)

116 
	#IDENT
 259

	)

117 
	#FIELD
 260

	)

118 
	#LITERAL
 261

	)

119 
	#FORMAT
 262

	)

120 
	#REC
 263

	)

121 
	#SETMOD
 264

	)

122 
	#EQ
 265

	)

123 
	#NEQ
 266

	)

124 
	#DEFINEDOR
 267

	)

125 
	#AS
 268

	)

126 
	#DEF
 269

	)

127 
	#MODULE
 270

	)

128 
	#IMPORT
 271

	)

129 
	#INCLUDE
 272

	)

130 
	#IF
 273

	)

131 
	#THEN
 274

	)

132 
	#ELSE
 275

	)

133 
	#ELSE_IF
 276

	)

134 
	#REDUCE
 277

	)

135 
	#FOREACH
 278

	)

136 
	#END
 279

	)

137 
	#AND
 280

	)

138 
	#OR
 281

	)

139 
	#TRY
 282

	)

140 
	#CATCH
 283

	)

141 
	#LABEL
 284

	)

142 
	#BREAK
 285

	)

143 
	#LOC
 286

	)

144 
	#SETPIPE
 287

	)

145 
	#SETPLUS
 288

	)

146 
	#SETMINUS
 289

	)

147 
	#SETMULT
 290

	)

148 
	#SETDIV
 291

	)

149 
	#SETDEFINEDOR
 292

	)

150 
	#LESSEQ
 293

	)

151 
	#GREATEREQ
 294

	)

152 
	#ALTERNATION
 295

	)

153 
	#QQSTRING_START
 296

	)

154 
	#QQSTRING_TEXT
 297

	)

155 
	#QQSTRING_INTERP_START
 298

	)

156 
	#QQSTRING_INTERP_END
 299

	)

157 
	#QQSTRING_END
 300

	)

158 
	#FUNCDEF
 301

	)

159 
	#NONOPT
 302

	)

162 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


164 
	uYYSTYPE


168 
jv
 
	mlôîÆ
;

169 
block
 
	mblk
;

174 
YYSTYPE
 
	tYYSTYPE
;

175 
	#YYSTYPE_IS_TRIVIAL
 1

	)

176 
	#YYSTYPE_IS_DECLARED
 1

	)

180 #i‡! 
deföed
 
YYLTYPE
 && ! deföed 
YYLTYPE_IS_DECLARED


181 
YYLTYPE
 
	tYYLTYPE
;

182 
	sYYLTYPE


184 
	mfú°_löe
;

185 
	mfú°_cﬁumn
;

186 
	mœ°_löe
;

187 
	mœ°_cﬁumn
;

189 
	#YYLTYPE_IS_DECLARED
 1

	)

190 
	#YYLTYPE_IS_TRIVIAL
 1

	)

195 
yy∑r£
 (
block
* 
™swî
, * 
îr‹s
, 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
);

	@src/parser.y

2 
	~<as£π.h
>

3 
	~<m©h.h
>

4 
	~<°dio.h
>

5 
	~<°rög.h
>

6 
	~"compûe.h
"

7 
	~"jv_Æloc.h
"

8 
	#YYMALLOC
 
jv_mem_Æloc


	)

9 
	#YYFREE
 
jv_mem_‰ì


	)

11 %
code
 
ªquúes
 {

12 
	~"locfûe.h
"

13 
Àxî_∑øm
;

15 
	#YYLTYPE
 
loˇti⁄


	)

16 
	#YYLLOC_DEFAULT
(
Loc
, 
Rhs
, 
N
) \

18 i‡(
N
) { \

19 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 1).start; \

20 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 
N
).end; \

22 (
Loc
).
°¨t
 = 
	`YYRHSLOC
(
Rhs
, 0).
íd
; \

23 (
Loc
).
íd
 = 
	`YYRHSLOC
(
Rhs
, 0).end; \

25 } 0)

	)

28 %
loˇti⁄s


29 %
îr‹
-
vîbo£


30 %
deföe
 
≠i
.
puª


32 
jv
 
lôîÆ
;

33 
block
 
blk
;

36 %
de°ru˘‹
 { 
jv_‰ì
(
$$
); } <
lôîÆ
>

37 %
de°ru˘‹
 { 
block_‰ì
(
$$
); } <
blk
>

39 %
∑r£
-
∑øm
 {
block
* 
™swî
}

40 %
∑r£
-
∑øm
 {* 
îr‹s
}

41 %
∑r£
-
∑øm
 {
locfûe
* 
loˇti⁄s
}

42 %
∑r£
-
∑øm
 {
Àxî_∑øm
* 
Àxî_∑øm_±r
}

43 %
Àx
-
∑øm
 {
block
* 
™swî
}

44 %
Àx
-
∑øm
 {* 
îr‹s
}

45 %
Àx
-
∑øm
 {
locfûe
* 
loˇti⁄s
}

46 %
Àx
-
∑øm
 {
Àxî_∑øm
* 
Àxî_∑øm_±r
}

49 %
tokí
 
INVALID_CHARACTER


50 %
tokí
 <
lôîÆ
> 
IDENT


51 %
tokí
 <
lôîÆ
> 
FIELD


52 %
tokí
 <
lôîÆ
> 
LITERAL


53 %
tokí
 <
lôîÆ
> 
FORMAT


54 %
tokí
 
REC
 ".."

55 %
tokí
 
SETMOD
 "%="

56 %
tokí
 
EQ
 "=="

57 %
tokí
 
NEQ
 "!="

58 %
tokí
 
DEFINEDOR
 "//"

59 %
tokí
 
AS
 "as"

60 %
tokí
 
DEF
 "def"

61 %
tokí
 
MODULE
 "module"

62 %
tokí
 
IMPORT
 "import"

63 %
tokí
 
INCLUDE
 "include"

64 %
tokí
 
IF
 "if"

65 %
tokí
 
THEN
 "then"

66 %
tokí
 
ELSE
 "else"

67 %
tokí
 
ELSE_IF
 "elif"

68 %
tokí
 
REDUCE
 "reduce"

69 %
tokí
 
FOREACH
 "foreach"

70 %
tokí
 
END
 "end"

71 %
tokí
 
AND
 "and"

72 %
tokí
 
OR
 "or"

73 %
tokí
 
TRY
 "try"

74 %
tokí
 
CATCH
 "catch"

75 %
tokí
 
LABEL
 "label"

76 %
tokí
 
BREAK
 "break"

77 %
tokí
 
LOC
 "__loc__"

78 %
tokí
 
SETPIPE
 "|="

79 %
tokí
 
SETPLUS
 "+="

80 %
tokí
 
SETMINUS
 "-="

81 %
tokí
 
SETMULT
 "*="

82 %
tokí
 
SETDIV
 "/="

83 %
tokí
 
SETDEFINEDOR
 "//="

84 %
tokí
 
LESSEQ
 "<="

85 %
tokí
 
GREATEREQ
 ">="

86 %
tokí
 
ALTERNATION
 "?//"

88 %
tokí
 
QQSTRING_START


89 %
tokí
 <
lôîÆ
> 
QQSTRING_TEXT


90 %
tokí
 
QQSTRING_INTERP_START


91 %
tokí
 
QQSTRING_INTERP_END


92 %
tokí
 
QQSTRING_END


96 %
ex≥˘
 0

98 %
¥e˚dí˚
 
FUNCDEF


99 %
right
 '|'

100 %
À·
 ','

101 %
right
 "//"

102 %
n⁄assoc
 '=' 
SETPIPE
 
SETPLUS
 
SETMINUS
 
SETMULT
 
SETDIV
 
SETMOD
 
SETDEFINEDOR


103 %
À·
 
OR


104 %
À·
 
AND


105 %
n⁄assoc
 
NEQ
 
EQ
 '<' '>' 
LESSEQ
 
GREATEREQ


106 %
À·
 '+' '-'

107 %
À·
 '*' '/' '%'

108 %
¥e˚dí˚
 
NONOPT


110 %
¥e˚dí˚
 '?'

111 %
¥e˚dí˚
 "try"

112 %
¥e˚dí˚
 "catch"

115 %
ty≥
 <
blk
> 
Exp
 
Tîm


116 %
ty≥
 <
blk
> 
MkDi˘
 
MkDi˘Paú
 
ExpD


117 %
ty≥
 <
blk
> 
El£Body


118 %
ty≥
 <
blk
> 
Såög
 
QQSåög


119 %
ty≥
 <
blk
> 
FuncDef
 
FuncDefs


120 %
ty≥
 <
blk
> 
ModuÀ
 
Imp‹t
 
Imp‹ts
 
Imp‹tWh©
 
Imp‹tFrom


121 %
ty≥
 <
blk
> 
P¨am
 
P¨ams
 
Arg
 
Args


122 %
ty≥
 <
blk
> 
P©ã∫s
 
RïP©ã∫s
 
P©ã∫
 
AºayP©s
 
ObjP©s
 
ObjP©


123 %
ty≥
 <
lôîÆ
> 
Keyw‹d


125 
	~"Àxî.h
"

126 
	sÀxî_∑øm
 {

127 
yysˇn_t
 
	mÀxî
;

129 
	#FAIL
(
loc
, 
msg
) \

131 
loˇti⁄
 
l
 = 
loc
; \

132 
	`yyîr‹
(&
l
, 
™swî
, 
îr‹s
, 
loˇti⁄s
, 
Àxî_∑øm_±r
, 
msg
); \

134 } 0)

	)

136 
	$yyîr‹
(
YYLTYPE
* 
loc
, 
block
* 
™swî
, * 
îr‹s
,

137 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
, c⁄° *
s
){

138 (*
îr‹s
)++;

139 i‡(
	`°r°r
(
s
, "unexpected")) {

140 #ifde‡
WIN32


141 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %†(Wödow†cmd shñ»quŸög issues?)", 
s
);

143 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %†(Unix shñ»quŸög issues?)", 
s
);

146 
	`locfûe_loˇã
(
loˇti⁄s
, *
loc
, "jq:Éº‹: %s", 
s
);

148 
	}
}

150 
	$yyÀx
(
YYSTYPE
* 
yylvÆ
, 
YYLTYPE
* 
yyŒoc
, 
block
* 
™swî
, * 
îr‹s
,

151 
locfûe
* 
loˇti⁄s
, 
Àxî_∑øm
* 
Àxî_∑øm_±r
) {

152 
yysˇn_t
 
Àxî
 = 
Àxî_∑øm_±r
->lexer;

153 
tok
 = 
	`jq_yyÀx
(
yylvÆ
, 
yyŒoc
, 
Àxî
);

154 i‡((
tok
 =
LITERAL
 ||Åok =
QQSTRING_TEXT
Ë&& !
	`jv_is_vÆid
(
yylvÆ
->
lôîÆ
)) {

155 
jv
 
msg
 = 
	`jv_övÆid_gë_msg
(
	`jv_c›y
(
yylvÆ
->
lôîÆ
));

156 i‡(
	`jv_gë_köd
(
msg
Ë=
JV_KIND_STRING
) {

157 
	`FAIL
(*
yyŒoc
, 
	`jv_°rög_vÆue
(
msg
));

159 
	`FAIL
(*
yyŒoc
, "InvalidÜiteral");

161 
	`jv_‰ì
(
msg
);

162 
	`jv_‰ì
(
yylvÆ
->
lôîÆ
);

163 
yylvÆ
->
lôîÆ
 = 
	`jv_nuŒ
();

165  
tok
;

166 
	}
}

170 
jv
 
	$check_obje˘_key
(
block
 
k
) {

171 i‡(
	`block_is_c⁄°
(
k
Ë&& 
	`block_c⁄°_köd
(kË!
JV_KIND_STRING
) {

172 
îrbuf
[15];

173  
	`jv_°rög_fmt
("Cannot use %s (%s)ás object key",

174 
	`jv_köd_«me
(
	`block_c⁄°_köd
(
k
)),

175 
	`jv_dump_°rög_åunc
(
	`block_c⁄°
(
k
), 
îrbuf
, (errbuf)));

177  
	`jv_övÆid
();

178 
	}
}

180 
block
 
	$gí_ödex
(
block
 
obj
, block 
key
) {

181  
	`BLOCK
(
	`gí_subexp
(
key
), 
obj
, 
	`gí_›_sim∂e
(
INDEX
));

182 
	}
}

184 
block
 
	$gí_ödex_›t
(
block
 
obj
, block 
key
) {

185  
	`BLOCK
(
	`gí_subexp
(
key
), 
obj
, 
	`gí_›_sim∂e
(
INDEX_OPT
));

186 
	}
}

188 
block
 
	$gí_¶i˚_ödex
(
block
 
obj
, block 
°¨t
, block 
íd
, 
›code
 
idx_›
) {

189 
block
 
key
 = 
	`BLOCK
(
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_obje˘
())),

190 
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_°rög
("start"))),

191 
	`gí_subexp
(
°¨t
),

192 
	`gí_›_sim∂e
(
INSERT
),

193 
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_°rög
("end"))),

194 
	`gí_subexp
(
íd
),

195 
	`gí_›_sim∂e
(
INSERT
));

196  
	`BLOCK
(
key
, 
obj
, 
	`gí_›_sim∂e
(
idx_›
));

197 
	}
}

199 
block
 
	$c⁄°™t_fﬁd
(
block
 
a
, block 
b
, 
›
) {

200 i‡(!
	`block_is_sögÀ
(
a
Ë|| !
	`block_is_c⁄°
(a) ||

201 !
	`block_is_sögÀ
(
b
Ë|| !
	`block_is_c⁄°
(b))

202  
	`gí_no›
();

203 i‡(
›
 == '+') {

204 i‡(
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_NULL
) {

205 
	`block_‰ì
(
a
);

206  
b
;

208 i‡(
	`block_c⁄°_köd
(
b
Ë=
JV_KIND_NULL
) {

209 
	`block_‰ì
(
b
);

210  
a
;

213 i‡(
	`block_c⁄°_köd
(
a
Ë!block_c⁄°_köd(
b
))

214  
	`gí_no›
();

216 
jv
 
ªs
 = 
	`jv_övÆid
();

218 i‡(
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_NUMBER
) {

219 
jv
 
jv_a
 = 
	`block_c⁄°
(
a
);

220 
jv
 
jv_b
 = 
	`block_c⁄°
(
b
);

222 
«
 = 
	`jv_numbî_vÆue
(
jv_a
);

223 
nb
 = 
	`jv_numbî_vÆue
(
jv_b
);

225 
cmp
 = 
	`jv_cmp
(
jv_a
, 
jv_b
);

227 
›
) {

228 '+': 
ªs
 = 
	`jv_numbî
(
«
 + 
nb
); ;

229 '-': 
ªs
 = 
	`jv_numbî
(
«
 - 
nb
); ;

230 '*': 
ªs
 = 
	`jv_numbî
(
«
 * 
nb
); ;

231 '/': 
ªs
 = 
	`jv_numbî
(
«
 / 
nb
); ;

232 
EQ
: 
ªs
 = (
cmp
 =0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

233 
NEQ
: 
ªs
 = (
cmp
 !0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

234 '<': 
ªs
 = (
cmp
 < 0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

235 '>': 
ªs
 = (
cmp
 > 0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

236 
LESSEQ
: 
ªs
 = (
cmp
 <0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

237 
GREATEREQ
: 
ªs
 = (
cmp
 >0 ? 
	`jv_åue
(Ë: 
	`jv_Ál£
()); ;

240 } i‡(
›
 ='+' && 
	`block_c⁄°_köd
(
a
Ë=
JV_KIND_STRING
) {

241 
ªs
 = 
	`jv_°rög_c⁄ˇt
(
	`block_c⁄°
(
a
), block_c⁄°(
b
));

243  
	`gí_no›
();

246 i‡(
	`jv_gë_köd
(
ªs
Ë=
JV_KIND_INVALID
)

247  
	`gí_no›
();

249 
	`block_‰ì
(
a
);

250 
	`block_‰ì
(
b
);

251  
	`gí_c⁄°
(
ªs
);

252 
	}
}

254 
block
 
	$gí_bö›
(
block
 
a
, block 
b
, 
›
) {

255 
block
 
fﬁded
 = 
	`c⁄°™t_fﬁd
(
a
, 
b
, 
›
);

256 i‡(!
	`block_is_no›
(
fﬁded
))

257  
fﬁded
;

259 c⁄° * 
fun˙ame
 = 0;

260 
›
) {

261 '+': 
fun˙ame
 = "_plus"; ;

262 '-': 
fun˙ame
 = "_minus"; ;

263 '*': 
fun˙ame
 = "_multiply"; ;

264 '/': 
fun˙ame
 = "_divide"; ;

265 '%': 
fun˙ame
 = "_mod"; ;

266 
EQ
: 
fun˙ame
 = "_equal"; ;

267 
NEQ
: 
fun˙ame
 = "_notequal"; ;

268 '<': 
fun˙ame
 = "_less"; ;

269 '>': 
fun˙ame
 = "_greater"; ;

270 
LESSEQ
: 
fun˙ame
 = "_lesseq"; ;

271 
GREATEREQ
: 
fun˙ame
 = "_greatereq"; ;

273 
	`as£π
(
fun˙ame
);

275  
	`gí_ˇŒ
(
fun˙ame
, 
	`BLOCK
(
	`gí_œmbda
(
a
), gí_œmbda(
b
)));

276 
	}
}

278 
block
 
	$gí_f‹m©
(
block
 
a
, 
jv
 
fmt
) {

279  
	`BLOCK
(
a
, 
	`gí_ˇŒ
("f‹m©", 
	`gí_œmbda
(
	`gí_c⁄°
(
fmt
))));

280 
	}
}

282 
block
 
	$gí_deföed‹_assign
(
block
 
obje˘
, block 
vÆ
) {

283 
block
 
tmp
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "tmp");

284  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

285 
vÆ
, 
tmp
,

286 
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
(
obje˘
),

287 
	`gí_œmbda
(
	`gí_deföed‹
(
	`gí_no›
(),

288 
	`gí_›_bound
(
LOADV
, 
tmp
))))));

289 
	}
}

291 
block
 
	$gí_upd©e
(
block
 
obje˘
, block 
vÆ
, 
›ty≥
) {

292 
block
 
tmp
 = 
	`gí_›_v¨_‰esh
(
STOREV
, "tmp");

293  
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
),

294 
vÆ
,

295 
tmp
,

296 
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
(
obje˘
),

297 
	`gí_œmbda
(
	`gí_bö›
(
	`gí_no›
(),

298 
	`gí_›_bound
(
LOADV
, 
tmp
),

299 
›ty≥
)))));

300 
	}
}

304 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

305 
T›Levñ
:

306 
ModuÀ
 
Imp‹ts
 
Exp
 {

307 *
™swî
 = 
	`BLOCK
(
$1
, 
$2
, 
	`gí_›_sim∂e
(
TOP
), 
$3
);

309 
ModuÀ
 
Imp‹ts
 
FuncDefs
 {

310 *
™swî
 = 
	`BLOCK
(
$1
, 
$2
, 
$3
);

313 
ModuÀ
:

314 %
em±y
 {

315 
$$
 = 
	`gí_no›
();

317 "moduÀ" 
Exp
 ';' {

318 i‡(!
	`block_is_c⁄°
(
$2
)) {

319 
	`FAIL
(@
$
, "Module metadata must be constant");

320 
$$
 = 
	`gí_no›
();

321 
	`block_‰ì
(
$2
);

323 
$$
 = 
	`gí_moduÀ
(
$2
);

327 
Imp‹ts
:

328 %
em±y
 {

329 
$$
 = 
	`gí_no›
();

331 
Imp‹t
 
Imp‹ts
 {

332 
$$
 = 
	`BLOCK
(
$1
, 
$2
);

335 
FuncDefs
:

336 %
em±y
 {

337 
$$
 = 
	`gí_no›
();

339 
FuncDef
 
FuncDefs
 {

340 
$$
 = 
	`block_joö
(
$1
, 
$2
);

343 
Exp
:

344 
FuncDef
 
Exp
 %
¥ec
 
FUNCDEF
 {

345 
$$
 = 
	`block_böd_ª„ªn˚d
(
$1
, 
$2
, 
OP_IS_CALL_PSEUDO
);

348 
Tîm
 "as" 
P©ã∫s
 '|' 
Exp
 {

349 
$$
 = 
	`gí_de°ru˘uª
(
$1
, 
$3
, 
$5
);

351 "ªdu˚" 
Tîm
 "as" 
P©ã∫s
 '(' 
Exp
 ';' Exp ')' {

352 
$$
 = 
	`gí_ªdu˚
(
$2
, 
$4
, 
$6
, 
$8
);

355 "f‹óch" 
Tîm
 "as" 
P©ã∫s
 '(' 
Exp
 ';' Exp ';' Exp ')' {

356 
$$
 = 
	`gí_f‹óch
(
$2
, 
$4
, 
$6
, 
$8
, 
$10
);

359 "f‹óch" 
Tîm
 "as" 
P©ã∫s
 '(' 
Exp
 ';' Exp ')' {

360 
$$
 = 
	`gí_f‹óch
(
$2
, 
$4
, 
$6
, 
$8
, 
	`gí_no›
());

363 "if" 
Exp
 "thí" Ex∞
El£Body
 {

364 
$$
 = 
	`gí_c⁄d
(
$2
, 
$4
, 
$5
);

366 "if" 
Exp
 "then" Exp "end" {

367 
$$
 = 
	`gí_c⁄d
(
$2
, 
$4
, 
	`gí_no›
());

369 "if" 
Exp
 "thí" 
îr‹
 {

370 
	`FAIL
(@
$
, "Possibly unterminated 'if' statement");

371 
$$
 = 
$2
;

374 "åy" 
Exp
 "catch" Exp {

376 
$$
 = 
	`gí_åy
(
$2
, 
	`gí_åy_h™dÀr
(
$4
));

378 "åy" 
Exp
 {

380 
$$
 = 
	`gí_åy
(
$2
, 
	`gí_›_sim∂e
(
BACKTRACK
));

382 "åy" 
Exp
 "ˇtch" 
îr‹
 {

383 
	`FAIL
(@
$
, "Possibly unterminated 'try' statement");

384 
$$
 = 
$2
;

387 "œbñ" '$' 
IDENT
 '|' 
Exp
 {

388 
jv
 
v
 = 
	`jv_°rög_fmt
("*œbñ-%s", 
	`jv_°rög_vÆue
(
$3
));

389 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_œbñ
(
	`jv_°rög_vÆue
(
v
), 
$5
));

390 
	`jv_‰ì
(
$3
);

391 
	`jv_‰ì
(
v
);

394 
Exp
 '?' {

395 
$$
 = 
	`gí_åy
(
$1
, 
	`gí_›_sim∂e
(
BACKTRACK
));

398 
Exp
 '=' Exp {

399 
$$
 = 
	`gí_ˇŒ
("_assign", 
	`BLOCK
(
	`gí_œmbda
(
$1
), gí_œmbda(
$3
)));

402 
Exp
 "or" Exp {

403 
$$
 = 
	`gí_‹
(
$1
, 
$3
);

406 
Exp
 "and" Exp {

407 
$$
 = 
	`gí_™d
(
$1
, 
$3
);

410 
Exp
 "//" Exp {

411 
$$
 = 
	`gí_deföed‹
(
$1
, 
$3
);

414 
Exp
 "//=" Exp {

415 
$$
 = 
	`gí_deföed‹_assign
(
$1
, 
$3
);

418 
Exp
 "|=" Exp {

419 
$$
 = 
	`gí_ˇŒ
("_modify", 
	`BLOCK
(
	`gí_œmbda
(
$1
), gí_œmbda(
$3
)));

422 
Exp
 '|' Exp {

423 
$$
 = 
	`block_joö
(
$1
, 
$3
);

426 
Exp
 ',' Exp {

427 
$$
 = 
	`gí_bŸh
(
$1
, 
$3
);

430 
Exp
 '+' Exp {

431 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '+');

434 
Exp
 "+=" Exp {

435 
$$
 = 
	`gí_upd©e
(
$1
, 
$3
, '+');

438 '-' 
Exp
 {

439 
$$
 = 
	`BLOCK
(
$2
, 
	`gí_ˇŒ
("_√g©e", 
	`gí_no›
()));

442 
Exp
 '-' Exp {

443 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '-');

446 
Exp
 "-=" Exp {

447 
$$
 = 
	`gí_upd©e
(
$1
, 
$3
, '-');

450 
Exp
 '*' Exp {

451 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '*');

454 
Exp
 "*=" Exp {

455 
$$
 = 
	`gí_upd©e
(
$1
, 
$3
, '*');

458 
Exp
 '/' Exp {

459 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '/');

460 i‡(
	`block_is_c⁄°_öf
(
$$
))

461 
	`FAIL
(@
$
, "Division by zero?");

464 
Exp
 '%' Exp {

465 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '%');

466 i‡(
	`block_is_c⁄°_öf
(
$$
))

467 
	`FAIL
(@
$
, "Remainder by zero?");

470 
Exp
 "/=" Exp {

471 
$$
 = 
	`gí_upd©e
(
$1
, 
$3
, '/');

474 
Exp
 
SETMOD
 Exp {

475 
$$
 = 
	`gí_upd©e
(
$1
, 
$3
, '%');

478 
Exp
 "==" Exp {

479 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, 
EQ
);

482 
Exp
 "!=" Exp {

483 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, 
NEQ
);

486 
Exp
 '<' Exp {

487 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '<');

490 
Exp
 '>' Exp {

491 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, '>');

494 
Exp
 "<=" Exp {

495 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, 
LESSEQ
);

498 
Exp
 ">=" Exp {

499 
$$
 = 
	`gí_bö›
(
$1
, 
$3
, 
GREATEREQ
);

502 
Tîm
 {

503 
$$
 = 
$1
;

506 
Imp‹t
:

507 
Imp‹tWh©
 ';' {

508 
$$
 = 
$1
;

510 
Imp‹tWh©
 
Exp
 ';' {

511 i‡(!
	`block_is_c⁄°
(
$2
)) {

512 
	`FAIL
(@
$
, "Module metadata must be constant");

513 
$$
 = 
	`gí_no›
();

514 
	`block_‰ì
(
$1
);

515 
	`block_‰ì
(
$2
);

516 } i‡(
	`block_c⁄°_köd
(
$2
Ë!
JV_KIND_OBJECT
) {

517 
	`FAIL
(@
$
, "Module metadata must beán object");

518 
$$
 = 
	`gí_no›
();

519 
	`block_‰ì
(
$1
);

520 
	`block_‰ì
(
$2
);

522 
$$
 = 
	`gí_imp‹t_mëa
(
$1
, 
$2
);

526 
Imp‹tWh©
:

527 "imp‹t" 
Imp‹tFrom
 "as" '$' 
IDENT
 {

528 
jv
 
v
 = 
	`block_c⁄°
(
$2
);

531 
$$
 = 
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), jv_°rög_vÆue(
$5
), 1);

532 
	`block_‰ì
(
$2
);

533 
	`jv_‰ì
(
$5
);

534 
	`jv_‰ì
(
v
);

536 "imp‹t" 
Imp‹tFrom
 "as" 
IDENT
 {

537 
jv
 
v
 = 
	`block_c⁄°
(
$2
);

538 
$$
 = 
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), jv_°rög_vÆue(
$4
), 0);

539 
	`block_‰ì
(
$2
);

540 
	`jv_‰ì
(
$4
);

541 
	`jv_‰ì
(
v
);

543 "ö˛ude" 
Imp‹tFrom
 {

544 
jv
 
v
 = 
	`block_c⁄°
(
$2
);

545 
$$
 = 
	`gí_imp‹t
(
	`jv_°rög_vÆue
(
v
), 
NULL
, 0);

546 
	`block_‰ì
(
$2
);

547 
	`jv_‰ì
(
v
);

550 
Imp‹tFrom
:

551 
Såög
 {

552 i‡(!
	`block_is_c⁄°
(
$1
)) {

553 
	`FAIL
(@
$
, "ImportÖath must be constant");

554 
$$
 = 
	`gí_c⁄°
(
	`jv_°rög
(""));

555 
	`block_‰ì
(
$1
);

557 
$$
 = 
$1
;

561 
FuncDef
:

562 "def" 
IDENT
 ':' 
Exp
 ';' {

563 
$$
 = 
	`gí_fun˘i⁄
(
	`jv_°rög_vÆue
(
$2
), 
	`gí_no›
(), 
$4
);

564 
	`jv_‰ì
(
$2
);

567 "def" 
IDENT
 '(' 
P¨ams
 ')' ':' 
Exp
 ';' {

568 
$$
 = 
	`gí_fun˘i⁄
(
	`jv_°rög_vÆue
(
$2
), 
$4
, 
$7
);

569 
	`jv_‰ì
(
$2
);

572 
P¨ams
:

573 
P¨am
 {

574 
$$
 = 
$1
;

576 
P¨ams
 ';' 
P¨am
 {

577 
$$
 = 
	`BLOCK
(
$1
, 
$3
);

580 
P¨am
:

581 '$' 
IDENT
 {

582 
$$
 = 
	`gí_∑øm_ªguœr
(
	`jv_°rög_vÆue
(
$2
));

583 
	`jv_‰ì
(
$2
);

585 '$' 
Keyw‹d
 {

586 
$$
 = 
	`gí_∑øm_ªguœr
(
	`jv_°rög_vÆue
(
$2
));

587 
	`jv_‰ì
(
$2
);

589 
IDENT
 {

590 
$$
 = 
	`gí_∑øm
(
	`jv_°rög_vÆue
(
$1
));

591 
	`jv_‰ì
(
$1
);

595 
Såög
:

596 
QQSTRING_START
 { 
$
<
lôîÆ
>$ = 
	`jv_°rög
("ãxt"); } 
QQSåög
 
QQSTRING_END
 {

597 
$$
 = 
$3
;

598 
	`jv_‰ì
(
$
<
lôîÆ
>2);

600 
FORMAT
 
QQSTRING_START
 { 
$
<
lôîÆ
>$ = 
$1
; } 
QQSåög
 
QQSTRING_END
 {

601 
$$
 = 
$4
;

602 
	`jv_‰ì
(
$
<
lôîÆ
>3);

606 
QQSåög
:

607 %
em±y
 {

608 
$$
 = 
	`gí_c⁄°
(
	`jv_°rög
(""));

610 
QQSåög
 
QQSTRING_TEXT
 {

611 
$$
 = 
	`gí_bö›
(
$1
, 
	`gí_c⁄°
(
$2
), '+');

613 
QQSåög
 
QQSTRING_INTERP_START
 
Exp
 
QQSTRING_INTERP_END
 {

614 
$$
 = 
	`gí_bö›
(
$1
, 
	`gí_f‹m©
(
$3
, 
	`jv_c›y
(
$
<
lôîÆ
>0)), '+');

618 
El£Body
:

619 "ñif" 
Exp
 "thí" Ex∞
El£Body
 {

620 
$$
 = 
	`gí_c⁄d
(
$2
, 
$4
, 
$5
);

622 "ñ£" 
Exp
 "end" {

623 
$$
 = 
$2
;

626 
ExpD
:

627 
ExpD
 '|' ExpD {

628 
$$
 = 
	`block_joö
(
$1
, 
$3
);

630 '-' 
ExpD
 {

631 
$$
 = 
	`BLOCK
(
$2
, 
	`gí_ˇŒ
("_√g©e", 
	`gí_no›
()));

633 
Tîm
 {

634 
$$
 = 
$1
;

638 
Tîm
:

640 
$$
 = 
	`gí_no›
();

642 
REC
 {

643 
$$
 = 
	`gí_ˇŒ
("ªcur£", 
	`gí_no›
());

645 
BREAK
 '$' 
IDENT
 {

646 
jv
 
v
 = 
	`jv_°rög_fmt
("*œbñ-%s", 
	`jv_°rög_vÆue
(
$3
));

647 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
,

648 
	`BLOCK
(
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
v
)),

649 
	`gí_ˇŒ
("îr‹", 
	`gí_no›
())));

650 
	`jv_‰ì
(
v
);

651 
	`jv_‰ì
(
$3
);

653 
BREAK
 
îr‹
 {

654 
	`FAIL
(@
$
, "breakÑequiresáÜabelÅo breakÅo");

655 
$$
 = 
	`gí_no›
();

657 
Tîm
 
FIELD
 '?' {

658 
$$
 = 
	`gí_ödex_›t
(
$1
, 
	`gí_c⁄°
(
$2
));

660 
FIELD
 '?' {

661 
$$
 = 
	`gí_ödex_›t
(
	`gí_no›
(), 
	`gí_c⁄°
(
$1
));

663 
Tîm
 '.' 
Såög
 '?' {

664 
$$
 = 
	`gí_ödex_›t
(
$1
, 
$3
);

666 '.' 
Såög
 '?' {

667 
$$
 = 
	`gí_ödex_›t
(
	`gí_no›
(), 
$2
);

669 
Tîm
 
FIELD
 %
¥ec
 
NONOPT
 {

670 
$$
 = 
	`gí_ödex
(
$1
, 
	`gí_c⁄°
(
$2
));

672 
FIELD
 %
¥ec
 
NONOPT
 {

673 
$$
 = 
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
(
$1
));

675 
Tîm
 '.' 
Såög
 %
¥ec
 
NONOPT
 {

676 
$$
 = 
	`gí_ödex
(
$1
, 
$3
);

678 '.' 
Såög
 %
¥ec
 
NONOPT
 {

679 
$$
 = 
	`gí_ödex
(
	`gí_no›
(), 
$2
);

681 '.' 
îr‹
 {

682 
	`FAIL
(@
$
, "try .[\"field\"] instead of .field for unusuallyÇamed fields");

683 
$$
 = 
	`gí_no›
();

685 '.' 
IDENT
 
îr‹
 {

686 
	`jv_‰ì
(
$2
);

687 
	`FAIL
(@
$
, "try .[\"field\"] instead of .field for unusuallyÇamed fields");

688 
$$
 = 
	`gí_no›
();

691 
Tîm
 '[' 
Exp
 ']' '?' {

692 
$$
 = 
	`gí_ödex_›t
(
$1
, 
$3
);

694 
Tîm
 '[' 
Exp
 ']' %
¥ec
 
NONOPT
 {

695 
$$
 = 
	`gí_ödex
(
$1
, 
$3
);

697 
Tîm
 '.' '[' 
Exp
 ']' '?' {

698 
$$
 = 
	`gí_ödex_›t
(
$1
, 
$4
);

700 
Tîm
 '.' '[' 
Exp
 ']' %
¥ec
 
NONOPT
 {

701 
$$
 = 
	`gí_ödex
(
$1
, 
$4
);

703 
Tîm
 '[' ']' '?' {

704 
$$
 = 
	`block_joö
(
$1
, 
	`gí_›_sim∂e
(
EACH_OPT
));

706 
Tîm
 '[' ']' %
¥ec
 
NONOPT
 {

707 
$$
 = 
	`block_joö
(
$1
, 
	`gí_›_sim∂e
(
EACH
));

709 
Tîm
 '[' 
Exp
 ':' Exp ']' '?' {

710 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
$3
, 
$5
, 
INDEX_OPT
);

712 
Tîm
 '[' 
Exp
 ':' ']' '?' {

713 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
$3
, 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
INDEX_OPT
);

715 
Tîm
 '[' ':' 
Exp
 ']' '?' {

716 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
$4
, 
INDEX_OPT
);

718 
Tîm
 '[' 
Exp
 ':' Ex∞']' %
¥ec
 
NONOPT
 {

719 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
$3
, 
$5
, 
INDEX
);

721 
Tîm
 '[' 
Exp
 ':' ']' %
¥ec
 
NONOPT
 {

722 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
$3
, 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
INDEX
);

724 
Tîm
 '[' ':' 
Exp
 ']' %
¥ec
 
NONOPT
 {

725 
$$
 = 
	`gí_¶i˚_ödex
(
$1
, 
	`gí_c⁄°
(
	`jv_nuŒ
()), 
$4
, 
INDEX
);

727 
LITERAL
 {

728 
$$
 = 
	`gí_c⁄°
(
$1
);

730 
Såög
 {

731 
$$
 = 
$1
;

733 
FORMAT
 {

734 
$$
 = 
	`gí_f‹m©
(
	`gí_no›
(), 
$1
);

736 '(' 
Exp
 ')' {

737 
$$
 = 
$2
;

739 '[' 
Exp
 ']' {

740 
$$
 = 
	`gí_cﬁÀ˘
(
$2
);

743 
$$
 = 
	`gí_c⁄°
(
	`jv_¨øy
());

745 '{' 
MkDi˘
 '}' {

746 
block
 
o
 = 
	`gí_c⁄°_obje˘
(
$2
);

747 i‡(
o
.
fú°
 !
NULL
)

748 
$$
 = 
o
;

750 
$$
 = 
	`BLOCK
(
	`gí_subexp
(
	`gí_c⁄°
(
	`jv_obje˘
())), 
$2
, 
	`gí_›_sim∂e
(
POP
));

767 '$' '$' '$' '$' 
IDENT
 {

768 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADVN
, 
	`jv_°rög_vÆue
(
$5
)));

769 
	`jv_‰ì
(
$5
);

771 '$' 
IDENT
 {

772 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
$2
)));

773 
	`jv_‰ì
(
$2
);

775 '$' 
Keyw‹d
 {

776 i‡(
	`°rcmp
(
	`jv_°rög_vÆue
(
$2
), "__loc__") == 0) {

777 
$$
 = 
	`gí_c⁄°
(
	`JV_OBJECT
(
	`jv_°rög
("fûe"), 
	`jv_c›y
(
loˇti⁄s
->
‚ame
),

778 
	`jv_°rög
("löe"), 
	`jv_numbî
(
	`locfûe_gë_löe
(
loˇti⁄s
, @
$
.
°¨t
) + 1)));

780 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
$2
)));

782 
	`jv_‰ì
(
$2
);

784 
IDENT
 {

785 c⁄° *
s
 = 
	`jv_°rög_vÆue
(
$1
);

786 i‡(
	`°rcmp
(
s
, "false") == 0)

787 
$$
 = 
	`gí_c⁄°
(
	`jv_Ál£
());

788 i‡(
	`°rcmp
(
s
, "true") == 0)

789 
$$
 = 
	`gí_c⁄°
(
	`jv_åue
());

790 i‡(
	`°rcmp
(
s
, "null") == 0)

791 
$$
 = 
	`gí_c⁄°
(
	`jv_nuŒ
());

793 
$$
 = 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_ˇŒ
(
s
, 
	`gí_no›
()));

794 
	`jv_‰ì
(
$1
);

796 
IDENT
 '(' 
Args
 ')' {

797 
$$
 = 
	`gí_ˇŒ
(
	`jv_°rög_vÆue
(
$1
), 
$3
);

798 
$$
 = 
	`gí_loˇti⁄
(@1, 
loˇti⁄s
, $$);

799 
	`jv_‰ì
(
$1
);

801 '(' 
îr‹
 ')' { 
$$
 = 
	`gí_no›
(); } |

802 '[' 
îr‹
 ']' { 
$$
 = 
	`gí_no›
(); } |

803 
Tîm
 '[' 
îr‹
 ']' { 
$$
 = 
$1
; } |

804 '{' 
îr‹
 '}' { 
$$
 = 
	`gí_no›
(); }

806 
Args
:

807 
Arg
 {

808 
$$
 = 
$1
;

810 
Args
 ';' 
Arg
 {

811 
$$
 = 
	`BLOCK
(
$1
, 
$3
);

814 
Arg
:

815 
Exp
 {

816 
$$
 = 
	`gí_œmbda
(
$1
);

819 
RïP©ã∫s
:

820 
RïP©ã∫s
 "?//" 
P©ã∫
 {

821 
$$
 = 
	`BLOCK
(
$1
, 
	`gí_de°ru˘uª_Æt
(
$3
));

823 
P©ã∫
 {

824 
$$
 = 
	`gí_de°ru˘uª_Æt
(
$1
);

827 
P©ã∫s
:

828 
RïP©ã∫s
 "?//" 
P©ã∫
 {

829 
$$
 = 
	`BLOCK
(
$1
, 
$3
);

831 
P©ã∫
 {

832 
$$
 = 
$1
;

835 
P©ã∫
:

836 '$' 
IDENT
 {

837 
$$
 = 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
(
$2
));

838 
	`jv_‰ì
(
$2
);

840 '[' 
AºayP©s
 ']' {

841 
$$
 = 
	`BLOCK
(
$2
, 
	`gí_›_sim∂e
(
POP
));

843 '{' 
ObjP©s
 '}' {

844 
$$
 = 
	`BLOCK
(
$2
, 
	`gí_›_sim∂e
(
POP
));

847 
AºayP©s
:

848 
P©ã∫
 {

849 
$$
 = 
	`gí_¨øy_m©chî
(
	`gí_no›
(), 
$1
);

851 
AºayP©s
 ',' 
P©ã∫
 {

852 
$$
 = 
	`gí_¨øy_m©chî
(
$1
, 
$3
);

855 
ObjP©s
:

856 
ObjP©
 {

857 
$$
 = 
$1
;

859 
ObjP©s
 ',' 
ObjP©
 {

860 
$$
 = 
	`BLOCK
(
$1
, 
$3
);

863 
ObjP©
:

864 '$' 
IDENT
 {

865 
$$
 = 
	`gí_obje˘_m©chî
(
	`gí_c⁄°
(
$2
), 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
($2)));

867 '$' 
IDENT
 ':' 
P©ã∫
 {

868 
$$
 = 
	`gí_obje˘_m©chî
(
	`gí_c⁄°
(
$2
), 
	`BLOCK
(
	`gí_›_sim∂e
(
DUP
), 
	`gí_›_unbound
(
STOREV
, 
	`jv_°rög_vÆue
($2)), 
$4
));

870 
IDENT
 ':' 
P©ã∫
 {

871 
$$
 = 
	`gí_obje˘_m©chî
(
	`gí_c⁄°
(
$1
), 
$3
);

873 
Keyw‹d
 ':' 
P©ã∫
 {

874 
$$
 = 
	`gí_obje˘_m©chî
(
	`gí_c⁄°
(
$1
), 
$3
);

876 
Såög
 ':' 
P©ã∫
 {

877 
$$
 = 
	`gí_obje˘_m©chî
(
$1
, 
$3
);

879 '(' 
Exp
 ')' ':' 
P©ã∫
 {

880 
jv
 
msg
 = 
	`check_obje˘_key
(
$2
);

881 i‡(
	`jv_is_vÆid
(
msg
)) {

882 
	`FAIL
(@
$
, 
	`jv_°rög_vÆue
(
msg
));

884 
	`jv_‰ì
(
msg
);

885 
$$
 = 
	`gí_obje˘_m©chî
(
$2
, 
$5
);

887 
îr‹
 ':' 
P©ã∫
 {

888 
	`FAIL
(@
$
, "MayÇeedÖarenthesesáround object keyÉxpression");

889 
$$
 = 
$3
;

892 
Keyw‹d
:

894 
$$
 = 
	`jv_°rög
("as");

897 
$$
 = 
	`jv_°rög
("def");

900 
$$
 = 
	`jv_°rög
("module");

903 
$$
 = 
	`jv_°rög
("import");

906 
$$
 = 
	`jv_°rög
("include");

909 
$$
 = 
	`jv_°rög
("if");

912 
$$
 = 
	`jv_°rög
("then");

915 
$$
 = 
	`jv_°rög
("else");

918 
$$
 = 
	`jv_°rög
("elif");

921 
$$
 = 
	`jv_°rög
("reduce");

924 
$$
 = 
	`jv_°rög
("foreach");

927 
$$
 = 
	`jv_°rög
("end");

930 
$$
 = 
	`jv_°rög
("and");

933 
$$
 = 
	`jv_°rög
("or");

936 
$$
 = 
	`jv_°rög
("try");

939 
$$
 = 
	`jv_°rög
("catch");

942 
$$
 = 
	`jv_°rög
("label");

945 
$$
 = 
	`jv_°rög
("break");

948 
$$
 = 
	`jv_°rög
("__loc__");

951 
MkDi˘
:

952 %
em±y
 {

953 
$$
=
	`gí_no›
();

955 
MkDi˘Paú
 { 
$$
 = 
$1
; }

956 | 
MkDi˘Paú
 ',' 
MkDi˘
 { 
$$
=
	`block_joö
(
$1
, 
$3
); }

957 | 
îr‹
 ',' 
MkDi˘
 { 
$$
 = 
$3
; }

959 
MkDi˘Paú
:

960 
IDENT
 ':' 
ExpD
 {

961 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
$1
), 
$3
);

963 | 
Keyw‹d
 ':' 
ExpD
 {

964 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
$1
), 
$3
);

966 | 
Såög
 ':' 
ExpD
 {

967 
$$
 = 
	`gí_di˘∑ú
(
$1
, 
$3
);

969 | 
Såög
 {

970 
$$
 = 
	`gí_di˘∑ú
(
$1
, 
	`BLOCK
(
	`gí_›_sim∂e
(
POP
), gí_›_sim∂e(
DUP2
),

971 
	`gí_›_sim∂e
(
DUP2
), gí_›_sim∂e(
INDEX
)));

973 | '$' 
IDENT
 ':' 
ExpD
 {

974 
$$
 = 
	`gí_di˘∑ú
(
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
$2
))),

975 
$4
);

977 | '$' 
IDENT
 {

978 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
$2
),

979 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
$2
))));

981 | '$' 
Keyw‹d
 {

982 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
$2
),

983 
	`gí_loˇti⁄
(@
$
, 
loˇti⁄s
, 
	`gí_›_unbound
(
LOADV
, 
	`jv_°rög_vÆue
(
$2
))));

985 | 
IDENT
 {

986 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
	`jv_c›y
(
$1
)),

987 
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
(
$1
)));

989 | 
Keyw‹d
 {

990 
$$
 = 
	`gí_di˘∑ú
(
	`gí_c⁄°
(
	`jv_c›y
(
$1
)),

991 
	`gí_ödex
(
	`gí_no›
(), 
	`gí_c⁄°
(
$1
)));

993 | '(' 
Exp
 ')' ':' 
ExpD
 {

994 
jv
 
msg
 = 
	`check_obje˘_key
(
$2
);

995 i‡(
	`jv_is_vÆid
(
msg
)) {

996 
	`FAIL
(@
$
, 
	`jv_°rög_vÆue
(
msg
));

998 
	`jv_‰ì
(
msg
);

999 
$$
 = 
	`gí_di˘∑ú
(
$2
, 
$5
);

1001 | 
îr‹
 ':' 
ExpD
 {

1002 
	`FAIL
(@
$
, "MayÇeedÖarenthesesáround object keyÉxpression");

1003 
$$
 = 
$3
;

1005 
	}
%%

1007 
	$jq_∑r£
(
locfûe
* 
loˇti⁄s
, 
block
* 
™swî
) {

1008 
Àxî_∑øm
 
sˇ¬î
;

1009 
YY_BUFFER_STATE
 
buf
;

1010 
	`jq_yyÀx_öô_exåa
(0, &
sˇ¬î
.
Àxî
);

1011 
buf
 = 
	`jq_yy_sˇn_byãs
(
loˇti⁄s
->
d©a
,Üoˇti⁄s->
Àngth
, 
sˇ¬î
.
Àxî
);

1012 
îr‹s
 = 0;

1013 *
™swî
 = 
	`gí_no›
();

1014 
	`yy∑r£
(
™swî
, &
îr‹s
, 
loˇti⁄s
, &
sˇ¬î
);

1015 
	`jq_yy_dñëe_buf„r
(
buf
, 
sˇ¬î
.
Àxî
);

1016 
	`jq_yyÀx_de°roy
(
sˇ¬î
.
Àxî
);

1017 i‡(
îr‹s
 > 0) {

1018 
	`block_‰ì
(*
™swî
);

1019 *
™swî
 = 
	`gí_no›
();

1021  
îr‹s
;

1022 
	}
}

1024 
	$jq_∑r£_libøry
(
locfûe
* 
loˇti⁄s
, 
block
* 
™swî
) {

1025 
îrs
 = 
	`jq_∑r£
(
loˇti⁄s
, 
™swî
);

1026 i‡(
îrs
) Érrs;

1027 i‡(
	`block_has_maö
(*
™swî
)) {

1028 
	`locfûe_loˇã
(
loˇti⁄s
, 
UNKNOWN_LOCATION
, "jq:Érror:Üibrary should only have function definitions,Çotá mainÉxpression");

1031 
	`as£π
(
	`block_has_⁄ly_bödîs_™d_imp‹ts
(*
™swî
, 
OP_IS_CALL_PSEUDO
));

1033 
	}
}

	@src/util.c

2 #ifde‡
HAVE_MEMMEM


3 
	#_GNU_SOURCE


	)

6 
	~<sys/ty≥s.h
>

7 
	~<sys/°©.h
>

8 
	~<as£π.h
>

9 
	~<î∫o.h
>

10 
	~<f˙é.h
>

11 
	~<limôs.h
>

12 
	~<°rög.h
>

13 
	~<uni°d.h
>

14 
	~<°dlib.h
>

15 
	~<°ddef.h
>

16 #ifde‡
HAVE_ALLOCA_H


17 
	~<Æloˇ.h
>

18 #ñi‡!
deföed
 
Æloˇ


19 #ifde‡
__GNUC__


20 
	#Æloˇ
 
__buûtö_Æloˇ


	)

21 #ñi‡
deföed
 
_MSC_VER


22 
	~<mÆloc.h
>

23 
	#Æloˇ
 
_Æloˇ


	)

24 #ñi‡!
deföed
 
HAVE_ALLOCA


25 #ifde‡ 
__˝lu•lus


28 *
Æloˇ
 (
size_t
);

31 #i‚de‡
WIN32


32 
	~<pwd.h
>

35 #ifde‡
WIN32


36 
	~<wödows.h
>

37 
	~<¥o˚s£nv.h
>

38 
	~<shñœpi.h
>

39 
	~<wch¨.h
>

40 
	~<wty≥s.h
>

44 
	~"utû.h
"

45 
	~"jq.h
"

46 
	~"jv_Æloc.h
"

48 #ifde‡
WIN32


49 
FILE
 *
	$f›í
(c⁄° *
‚ame
, c⁄° *
mode
) {

50 
size_t
 
sz
 = (
wch¨_t
Ë* 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
‚ame
, -1, 
NULL
, 0);

51 
wch¨_t
 *
w‚ame
 = 
	`Æloˇ
(
sz
 + 2);

52 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
‚ame
, -1, 
w‚ame
, 
sz
);

54 
sz
 = (
wch¨_t
Ë* 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
mode
, -1, 
NULL
, 0);

55 
wch¨_t
 *
wmode
 = 
	`Æloˇ
(
sz
 + 2);

56 
	`Mu…iByãToWideCh¨
(
CP_UTF8
, 0, 
mode
, -1, 
wmode
, 
sz
);

57  
	`_wf›í
(
w‚ame
, 
wmode
);

58 
	}
}

61 #i‚de‡
HAVE_MKSTEMP


62 
	$mk°emp
(*
ãm∂©e
) {

63 
size_t
 
Àn
 = 
	`°æí
(
ãm∂©e
);

64 
åõs
=5;

65 
fd
;

68 *
s
 = 
	`Æloˇ
(
Àn
 + 1);

69 
	`as£π
(
s
 !
NULL
);

70 
	`°r˝y
(
s
, 
ãm∂©e
);

74 
	`°r˝y
(
ãm∂©e
, 
s
);

75 (Ë
	`mkãmp
(
ãm∂©e
);

76 
fd
 = 
	`›í
(
ãm∂©e
, 
O_CREAT
 | 
O_EXCL
 | 
O_RDWR
, 0600);

77 } 
fd
 =-1 && 
åõs
-- > 0);

78  
fd
;

79 
	}
}

82 
jv
 
	$ex∑nd_∑th
(
jv
 
∑th
) {

83 
	`as£π
(
	`jv_gë_köd
(
∑th
Ë=
JV_KIND_STRING
);

84 c⁄° *
p°r
 = 
	`jv_°rög_vÆue
(
∑th
);

85 
jv
 
ªt
 = 
∑th
;

86 i‡(
	`jv_°rög_Àngth_byãs
(
	`jv_c›y
(
∑th
)Ë> 1 && 
p°r
[0] == '~' &&Östr[1] == '/') {

87 
jv
 
home
 = 
	`gë_home
();

88 i‡(
	`jv_is_vÆid
(
home
)) {

89 
ªt
 = 
	`jv_°rög_fmt
("%s/%s",
	`jv_°rög_vÆue
(
home
),
p°r
+2);

90 
	`jv_‰ì
(
home
);

92 
jv
 
emsg
 = 
	`jv_övÆid_gë_msg
(
home
);

93 
ªt
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög_fmt
("CouldÇŸÉx∑nd %s. (%s)", 
p°r
, 
	`jv_°rög_vÆue
(
emsg
)));

94 
	`jv_‰ì
(
emsg
);

96 
	`jv_‰ì
(
∑th
);

98  
ªt
;

99 
	}
}

101 
jv
 
	$gë_home
() {

102 
jv
 
ªt
;

103 *
home
 = 
	`gëív
("HOME");

104 i‡(!
home
) {

105 #i‚de‡
WIN32


106 
∑sswd
* 
pwd
 = 
	`gëpwuid
(
	`gëuid
());

107 i‡(
pwd
)

108 
ªt
 = 
	`jv_°rög
(
pwd
->
pw_dú
);

110 
ªt
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("CouldÇot find home directory."));

112 
home
 = 
	`gëív
("USERPROFILE");

113 i‡(!
home
) {

114 *
hd
 = 
	`gëív
("HOMEDRIVE");

115 i‡(!
hd
) hd = "";

116 
home
 = 
	`gëív
("HOMEPATH");

117 i‡(!
home
) {

118 
ªt
 = 
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("CouldÇot find home directory."));

120 
ªt
 = 
	`jv_°rög_fmt
("%s%s",
hd
,
home
);

123 
ªt
 = 
	`jv_°rög
(
home
);

127 
ªt
 = 
	`jv_°rög
(
home
);

129  
ªt
;

130 
	}
}

133 
jv
 
	$jq_ªÆ∑th
(
jv
 
∑th
) {

134 
∑th_max
;

135 *
buf
 = 
NULL
;

136 #ifde‡
_PC_PATH_MAX


137 
∑th_max
 = 
	`∑thc⁄f
(
	`jv_°rög_vÆue
(
∑th
),
_PC_PATH_MAX
);

139 
∑th_max
 = 
PATH_MAX
;

141 i‡(
∑th_max
 > 0) {

142 
buf
 = 
	`jv_mem_Æloc
(
∑th_max
);

144 #ifde‡
WIN32


145 *
tmp
 = 
	`_fuŒ∑th
(
buf
, 
	`jv_°rög_vÆue
(
∑th
), 
∑th_max
);

147 *
tmp
 = 
	`ªÆ∑th
(
	`jv_°rög_vÆue
(
∑th
), 
buf
);

149 i‡(
tmp
 =
NULL
) {

150 
	`‰ì
(
buf
);

151  
∑th
;

153 
	`jv_‰ì
(
∑th
);

154 
∑th
 = 
	`jv_°rög
(
tmp
);

155 
	`‰ì
(
tmp
);

156  
∑th
;

157 
	}
}

159 c⁄° *
	$_jq_memmem
(c⁄° *
hay°ack
, 
size_t
 
hay°ackÀn
,

160 c⁄° *
√edÀ
, 
size_t
 
√edÀÀn
) {

161 #ifde‡
HAVE_MEMMEM


162  (c⁄° *)
	`memmem
(
hay°ack
, 
hay°ackÀn
, 
√edÀ
, 
√edÀÀn
);

164 c⁄° *
h
 = 
hay°ack
;

165 c⁄° *
n
 = 
√edÀ
;

166 
size_t
 
hi
, 
hi2
, 
ni
;

168 i‡(
hay°ackÀn
 < 
√edÀÀn
 || haystacklen == 0)

169  
NULL
;

170 
hi
 = 0; hò< (
hay°ackÀn
 - 
√edÀÀn
 + 1); hi++) {

171 
ni
 = 0, 
hi2
 = 
hi
;Çò< 
√edÀÀn
;Çi++, hi2++) {

172 i‡(
h
[
hi2
] !
n
[
ni
])

173 
nŸ_this
;

176  &
h
[
hi
];

178 
nŸ_this
:

181  
NULL
;

183 
	}
}

185 
	sjq_utû_öput_°©e
 {

186 
jq_utû_msg_cb
 
	mîr_cb
;

187 *
	mîr_cb_d©a
;

188 
jv_∑r£r
 *
	m∑r£r
;

189 
FILE
* 
	mcuºít_öput
;

190 **
	mfûes
;

191 
	mnfûes
;

192 
	mcuº_fûe
;

193 
	mÁûuªs
;

194 
jv
 
	m¶uΩed
;

195 
	mbuf
[4096];

196 
size_t
 
	mbuf_vÆid_Àn
;

197 
jv
 
	mcuºít_fûíame
;

198 
size_t
 
	mcuºít_löe
;

201 
	$Âröãr
(*
d©a
, c⁄° *
‚ame
) {

202 
	`Ârötf
((
FILE
 *)
d©a
, "jq:Éº‹: CouldÇŸ o≥¿fûê%s: %s\n", 
‚ame
, 
	`°ªº‹
(
î∫o
));

203 
	}
}

206 
jq_utû_öput_°©e
 *
	$jq_utû_öput_öô
(
jq_utû_msg_cb
 
îr_cb
, *
îr_cb_d©a
) {

207 i‡(
îr_cb
 =
NULL
) {

208 
îr_cb
 = 
Âröãr
;

209 
îr_cb_d©a
 = 
°dîr
;

211 
jq_utû_öput_°©e
 *
√w_°©e
 = 
	`jv_mem_ˇŒoc
(1, (*new_state));

212 
√w_°©e
->
îr_cb
 =Érr_cb;

213 
√w_°©e
->
îr_cb_d©a
 =Érr_cb_data;

214 
√w_°©e
->
¶uΩed
 = 
	`jv_övÆid
();

215 
√w_°©e
->
cuºít_fûíame
 = 
	`jv_övÆid
();

217  
√w_°©e
;

218 
	}
}

220 
	$jq_utû_öput_£t_∑r£r
(
jq_utû_öput_°©e
 *
°©e
, 
jv_∑r£r
 *
∑r£r
, 
¶uΩ
) {

221 
	`as£π
(!
	`jv_is_vÆid
(
°©e
->
¶uΩed
));

222 
°©e
->
∑r£r
 =Öarser;

224 i‡(
∑r£r
 =
NULL
 && 
¶uΩ
)

225 
°©e
->
¶uΩed
 = 
	`jv_°rög
("");

226 i‡(
¶uΩ
)

227 
°©e
->
¶uΩed
 = 
	`jv_¨øy
();

229 
°©e
->
¶uΩed
 = 
	`jv_övÆid
();

230 
	}
}

232 
	$jq_utû_öput_‰ì
(
jq_utû_öput_°©e
 **
°©e
) {

233 
jq_utû_öput_°©e
 *
ﬁd_°©e
 = *
°©e
;

234 *
°©e
 = 
NULL
;

235 i‡(
ﬁd_°©e
 =
NULL
)

238 i‡(
ﬁd_°©e
->
∑r£r
 !
NULL
)

239 
	`jv_∑r£r_‰ì
(
ﬁd_°©e
->
∑r£r
);

240 
i
 = 0; i < 
ﬁd_°©e
->
nfûes
; i++)

241 
	`‰ì
(
ﬁd_°©e
->
fûes
[
i
]);

242 
	`‰ì
(
ﬁd_°©e
->
fûes
);

243 
	`jv_‰ì
(
ﬁd_°©e
->
¶uΩed
);

244 
	`jv_‰ì
(
ﬁd_°©e
->
cuºít_fûíame
);

245 
	`jv_mem_‰ì
(
ﬁd_°©e
);

246 
	}
}

248 
	$jq_utû_öput_add_öput
(
jq_utû_öput_°©e
 *
°©e
, c⁄° *
‚ame
) {

249 
°©e
->
fûes
 = 
	`jv_mem_ªÆloc
(°©e->fûes, (°©e->
nfûes
 + 1) * (state->files[0]));

250 
°©e
->
fûes
[°©e->
nfûes
++] = 
	`jv_mem_°rdup
(
‚ame
);

251 
	}
}

253 
	$jq_utû_öput_îr‹s
(
jq_utû_öput_°©e
 *
°©e
) {

254  
°©e
->
Áûuªs
;

255 
	}
}

257 c⁄° *
	$√xt_fûe
(
jq_utû_öput_°©e
 *
°©e
) {

258 i‡(
°©e
->
cuº_fûe
 < sèã->
nfûes
)

259  
°©e
->
fûes
[°©e->
cuº_fûe
++];

260  
NULL
;

261 
	}
}

263 
	$jq_utû_öput_ªad_m‹e
(
jq_utû_öput_°©e
 *
°©e
) {

264 i‡(!
°©e
->
cuºít_öput
 || 
	`„of
(°©e->cuºít_öputË|| 
	`„º‹
(state->current_input)) {

265 i‡(
°©e
->
cuºít_öput
 && 
	`„º‹
(state->current_input)) {

269 
	`Ârötf
(
°dîr
,"jq:Éº‹: %s\n", 
	`°ªº‹
(
î∫o
));

271 i‡(
°©e
->
cuºít_öput
) {

272 i‡(
°©e
->
cuºít_öput
 =
°dö
) {

273 
	`˛óªº
(
°dö
);

275 
	`f˛o£
(
°©e
->
cuºít_öput
);

277 
°©e
->
cuºít_öput
 = 
NULL
;

278 
	`jv_‰ì
(
°©e
->
cuºít_fûíame
);

279 
°©e
->
cuºít_fûíame
 = 
	`jv_övÆid
();

280 
°©e
->
cuºít_löe
 = 0 ;

282 c⁄° *
f
 = 
	`√xt_fûe
(
°©e
);

283 i‡(
f
 !
NULL
) {

284 i‡(!
	`°rcmp
(
f
, "-")) {

285 
°©e
->
cuºít_öput
 = 
°dö
;

286 
°©e
->
cuºít_fûíame
 = 
	`jv_°rög
("<stdin>");

288 
°©e
->
cuºít_öput
 = 
	`f›í
(
f
, "r");

289 
°©e
->
cuºít_fûíame
 = 
	`jv_°rög
(
f
);

290 i‡(!
°©e
->
cuºít_öput
) {

291 
°©e
->
	`îr_cb
(°©e->
îr_cb_d©a
, 
f
);

292 
°©e
->
Áûuªs
++;

295 
°©e
->
cuºít_löe
 = 0;

299 
°©e
->
buf
[0] = 0;

300 
°©e
->
buf_vÆid_Àn
 = 0;

301 i‡(
°©e
->
cuºít_öput
) {

302 *
ªs
;

303 
	`mem£t
(
°©e
->
buf
, 0xff, (state->buf));

305 !(
ªs
 = 
	`fgës
(
°©e
->
buf
, (°©e->buf), sèã->
cuºít_öput
)) &&

306 
	`„º‹
(
°©e
->
cuºít_öput
Ë&& 
î∫o
 =
EINTR
)

307 
	`˛óªº
(
°©e
->
cuºít_öput
);

308 i‡(
ªs
 =
NULL
) {

309 
°©e
->
buf
[0] = 0;

310 i‡(
	`„º‹
(
°©e
->
cuºít_öput
))

311 
°©e
->
Áûuªs
++;

313 c⁄° *
p
 = 
	`memchr
(
°©e
->
buf
, '\n', (state->buf));

315 i‡(
p
 !
NULL
)

316 
°©e
->
cuºít_löe
++;

318 i‡(
p
 =
NULL
 && 
°©e
->
∑r£r
 != NULL) {

323 
°©e
->
buf_vÆid_Àn
 = 
	`°æí
(°©e->
buf
);

324 } i‡(
p
 =
NULL
 && 
	`„of
(
°©e
->
cuºít_öput
)) {

325 
size_t
 
i
;

339 
p
 = 
°©e
->
buf
, 
i
 = (state->buf) - 1; i > 0; i--) {

340 i‡(
°©e
->
buf
[
i
] == '\0')

343 
°©e
->
buf_vÆid_Àn
 = 
i
;

344 } i‡(
p
 =
NULL
) {

345 
°©e
->
buf_vÆid_Àn
 = (°©e->
buf
) - 1;

347 
°©e
->
buf_vÆid_Àn
 = (
p
 - sèã->
buf
) + 1;

351  
°©e
->
cuº_fûe
 =°©e->
nfûes
 &&

352 (!
°©e
->
cuºít_öput
 || 
	`„of
(°©e->cuºít_öputË|| 
	`„º‹
(state->current_input));

353 
	}
}

355 
jv
 
	$jq_utû_öput_√xt_öput_cb
(
jq_°©e
 *
jq
, *
d©a
) {

356  
	`jq_utû_öput_√xt_öput
((
jq_utû_öput_°©e
 *)
d©a
);

357 
	}
}

360 
jv
 
	$jq_utû_öput_gë_posôi⁄
(
jq_°©e
 *
jq
) {

361 
jq_öput_cb
 
cb
 = 
NULL
;

362 *
cb_d©a
 = 
NULL
;

363 
	`jq_gë_öput_cb
(
jq
, &
cb
, &
cb_d©a
);

364 
	`as£π
(
cb
 =
jq_utû_öput_√xt_öput_cb
);

365 i‡(
cb
 !
jq_utû_öput_√xt_öput_cb
)

366  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Invalid jq_util_input API usage"));

367 
jq_utû_öput_°©e
 *
s
 = (jq_utû_öput_°©ê*)
cb_d©a
;

372 i‡(
	`jv_gë_köd
(
s
->
cuºít_fûíame
Ë!
JV_KIND_STRING
)

373  
	`jv_°rög
("<unknown>");

375 
jv
 
v
 = 
	`jv_°rög_fmt
("%s:%lu", 
	`jv_°rög_vÆue
(
s
->
cuºít_fûíame
), ()s->
cuºít_löe
);

376  
v
;

377 
	}
}

379 
jv
 
	$jq_utû_öput_gë_cuºít_fûíame
(
jq_°©e
* 
jq
) {

380 
jq_öput_cb
 
cb
=
NULL
;

381 *
cb_d©a
=
NULL
;

382 
	`jq_gë_öput_cb
(
jq
, &
cb
, &
cb_d©a
);

383 i‡(
cb
 !
jq_utû_öput_√xt_öput_cb
)

384  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Unknown input filename"));

385 
jq_utû_öput_°©e
 *
s
 = (jq_utû_öput_°©ê*)
cb_d©a
;

386 
jv
 
v
 = 
	`jv_c›y
(
s
->
cuºít_fûíame
);

387  
v
;

388 
	}
}

390 
jv
 
	$jq_utû_öput_gë_cuºít_löe
(
jq_°©e
* 
jq
) {

391 
jq_öput_cb
 
cb
=
NULL
;

392 *
cb_d©a
=
NULL
;

393 
	`jq_gë_öput_cb
(
jq
, &
cb
, &
cb_d©a
);

394 i‡(
cb
 !
jq_utû_öput_√xt_öput_cb
)

395  
	`jv_övÆid_wôh_msg
(
	`jv_°rög
("Unknown inputÜineÇumber"));

396 
jq_utû_öput_°©e
 *
s
 = (jq_utû_öput_°©ê*)
cb_d©a
;

397 
jv
 
v
 = 
	`jv_numbî
(
s
->
cuºít_löe
);

398  
v
;

399 
	}
}

404 
jv
 
	$jq_utû_öput_√xt_öput
(
jq_utû_öput_°©e
 *
°©e
) {

405 
is_œ°
 = 0;

406 
has_m‹e
 = 0;

407 
jv
 
vÆue
 = 
	`jv_övÆid
();

409 i‡(
°©e
->
∑r£r
 =
NULL
) {

411 
is_œ°
 = 
	`jq_utû_öput_ªad_m‹e
(
°©e
);

412 i‡(
°©e
->
buf_vÆid_Àn
 == 0)

414 i‡(
	`jv_is_vÆid
(
°©e
->
¶uΩed
)) {

416 
°©e
->
¶uΩed
 = 
	`jv_°rög_c⁄ˇt
(°©e->¶uΩed, 
	`jv_°rög_sized
(°©e->
buf
, sèã->
buf_vÆid_Àn
));

418 i‡(!
	`jv_is_vÆid
(
vÆue
))

419 
vÆue
 = 
	`jv_°rög
("");

420 i‡(
°©e
->
buf
[°©e->
buf_vÆid_Àn
-1] == '\n') {

422 
°©e
->
buf
[°©e->
buf_vÆid_Àn
-1] = 0;

423  
	`jv_°rög_c⁄ˇt
(
vÆue
, 
	`jv_°rög_sized
(
°©e
->
buf
, sèã->
buf_vÆid_Àn
-1));

425 
vÆue
 = 
	`jv_°rög_c⁄ˇt
(vÆue, 
	`jv_°rög_sized
(
°©e
->
buf
, sèã->
buf_vÆid_Àn
));

426 
°©e
->
buf
[0] = '\0';

427 
°©e
->
buf_vÆid_Àn
 = 0;

430 i‡(
	`jv_∑r£r_ªmaöög
(
°©e
->
∑r£r
) == 0) {

431 
is_œ°
 = 
	`jq_utû_öput_ªad_m‹e
(
°©e
);

432 
	`jv_∑r£r_£t_buf
(
°©e
->
∑r£r
, sèã->
buf
, sèã->
buf_vÆid_Àn
, !
is_œ°
);

434 
vÆue
 = 
	`jv_∑r£r_√xt
(
°©e
->
∑r£r
);

435 i‡(
	`jv_is_vÆid
(
°©e
->
¶uΩed
)) {

439 
has_m‹e
 = 
	`jv_∑r£r_ªmaöög
(
°©e
->
∑r£r
);

440 i‡(
	`jv_is_vÆid
(
vÆue
)) {

441 
°©e
->
¶uΩed
 = 
	`jv_¨øy_≠≥nd
(°©e->¶uΩed, 
vÆue
);

442 
vÆue
 = 
	`jv_övÆid
();

443 } i‡(
	`jv_övÆid_has_msg
(
	`jv_c›y
(
vÆue
)))

444  
vÆue
;

445 } i‡(
	`jv_is_vÆid
(
vÆue
Ë|| 
	`jv_övÆid_has_msg
(
	`jv_c›y
(value))) {

446  
vÆue
;

449 } !
is_œ°
 || 
has_m‹e
);

451 i‡(
	`jv_is_vÆid
(
°©e
->
¶uΩed
)) {

452 
vÆue
 = 
°©e
->
¶uΩed
;

453 
°©e
->
¶uΩed
 = 
	`jv_övÆid
();

455  
vÆue
;

456 
	}
}

	@src/util.h

1 #i‚de‡
UTIL_H


2 
	#UTIL_H


	)

4 #ifde‡
WIN32


6 
	~<wödows.h
>

7 
	~<io.h
>

8 
	~<¥o˚s£nv.h
>

9 
	~<shñœpi.h
>

10 
	~<wch¨.h
>

11 
	~<wty≥s.h
>

14 
	~"jv.h
"

16 #i‚de‡
HAVE_MKSTEMP


17 
mk°emp
(*
ãm∂©e
);

20 
jv
 
ex∑nd_∑th
(jv);

21 
jv
 
gë_home
();

22 
jv
 
jq_ªÆ∑th
(jv);

37 
	$¥iv_fwrôe
(c⁄° *
s
, 
size_t
 
Àn
, 
FILE
 *
fout
, 
is_ây
) {

38 #ifde‡
WIN32


39 i‡(
is_ây
)

40 
	`WrôeFûe
((
HANDLE
)
	`_gë_osfh™dÀ
(
	`fûío
(
fout
)), 
s
, 
Àn
, 
NULL
, NULL);

42 
	`fwrôe
(
s
, 1, 
Àn
, 
fout
);

44 
	`fwrôe
(
s
, 1, 
Àn
, 
fout
);

46 
	}
}

48 c⁄° *
_jq_memmem
(c⁄° *
hay°ack
, 
size_t
 
hay°ackÀn
,

49 c⁄° *
√edÀ
, 
size_t
 
√edÀÀn
);

51 #i‚de‡
MIN


52 
	#MIN
(
a
,
b
) \

53 ({ 
	`__ty≥of__
 (
a
Ë
_a
 = (a); \

54 
	`__ty≥of__
 (
b
Ë
_b
 = (b); \

55 
_a
 < 
_b
 ? _®: _b; })

	)

57 #i‚de‡
MAX


58 
	#MAX
(
a
,
b
) \

59 ({ 
	`__ty≥of__
 (
a
Ë
_a
 = (a); \

60 
	`__ty≥of__
 (
b
Ë
_b
 = (b); \

61 
_a
 > 
_b
 ? _®: _b; })

	)

	@src/version.h

1 #ifde‡
__APPLE__


3 
	#JQ_VERSION
 "1.6-159-≠∂e-gcff5336-dúty"

	)

	@
1
.
0
160
4457
modules/oniguruma/contributed/libfuzzer-onig.cpp
modules/oniguruma/sample/bug_fix.c
modules/oniguruma/sample/crnl.c
modules/oniguruma/sample/encode.c
modules/oniguruma/sample/listcap.c
modules/oniguruma/sample/names.c
modules/oniguruma/sample/posix.c
modules/oniguruma/sample/scan.c
modules/oniguruma/sample/simple.c
modules/oniguruma/sample/sql.c
modules/oniguruma/sample/syntax.c
modules/oniguruma/sample/user_property.c
modules/oniguruma/src/ascii.c
modules/oniguruma/src/big5.c
modules/oniguruma/src/config.h
modules/oniguruma/src/cp1251.c
modules/oniguruma/src/euc_jp.c
modules/oniguruma/src/euc_jp_prop.c
modules/oniguruma/src/euc_kr.c
modules/oniguruma/src/euc_tw.c
modules/oniguruma/src/gb18030.c
modules/oniguruma/src/iso8859_1.c
modules/oniguruma/src/iso8859_10.c
modules/oniguruma/src/iso8859_11.c
modules/oniguruma/src/iso8859_13.c
modules/oniguruma/src/iso8859_14.c
modules/oniguruma/src/iso8859_15.c
modules/oniguruma/src/iso8859_16.c
modules/oniguruma/src/iso8859_2.c
modules/oniguruma/src/iso8859_3.c
modules/oniguruma/src/iso8859_4.c
modules/oniguruma/src/iso8859_5.c
modules/oniguruma/src/iso8859_6.c
modules/oniguruma/src/iso8859_7.c
modules/oniguruma/src/iso8859_8.c
modules/oniguruma/src/iso8859_9.c
modules/oniguruma/src/koi8.c
modules/oniguruma/src/koi8_r.c
modules/oniguruma/src/mktable.c
modules/oniguruma/src/onig_init.c
modules/oniguruma/src/oniggnu.h
modules/oniguruma/src/onigposix.h
modules/oniguruma/src/oniguruma.h
modules/oniguruma/src/regcomp.c
modules/oniguruma/src/regenc.c
modules/oniguruma/src/regenc.h
modules/oniguruma/src/regerror.c
modules/oniguruma/src/regexec.c
modules/oniguruma/src/regext.c
modules/oniguruma/src/reggnu.c
modules/oniguruma/src/regint.h
modules/oniguruma/src/regparse.c
modules/oniguruma/src/regparse.h
modules/oniguruma/src/regposerr.c
modules/oniguruma/src/regposix.c
modules/oniguruma/src/regsyntax.c
modules/oniguruma/src/regtrav.c
modules/oniguruma/src/regversion.c
modules/oniguruma/src/sjis.c
modules/oniguruma/src/sjis_prop.c
modules/oniguruma/src/st.c
modules/oniguruma/src/st.h
modules/oniguruma/src/unicode-7.0/unicode_fold1_key.c
modules/oniguruma/src/unicode-7.0/unicode_fold2_key.c
modules/oniguruma/src/unicode-7.0/unicode_fold3_key.c
modules/oniguruma/src/unicode-7.0/unicode_fold_data.c
modules/oniguruma/src/unicode-7.0/unicode_property_data.c
modules/oniguruma/src/unicode-7.0/unicode_property_data_posix.c
modules/oniguruma/src/unicode-7.0/unicode_unfold_key.c
modules/oniguruma/src/unicode.c
modules/oniguruma/src/unicode_fold1_key.c
modules/oniguruma/src/unicode_fold2_key.c
modules/oniguruma/src/unicode_fold3_key.c
modules/oniguruma/src/unicode_fold_data.c
modules/oniguruma/src/unicode_property_data.c
modules/oniguruma/src/unicode_property_data_posix.c
modules/oniguruma/src/unicode_unfold_key.c
modules/oniguruma/src/utf16_be.c
modules/oniguruma/src/utf16_le.c
modules/oniguruma/src/utf32_be.c
modules/oniguruma/src/utf32_le.c
modules/oniguruma/src/utf8.c
modules/oniguruma/test/testc.c
modules/oniguruma/test/testu.c
modules/oniguruma/windows/testc.c
src/builtin.c
src/builtin.h
src/bytecode.c
src/bytecode.h
src/compile.c
src/compile.h
src/decNumber/decBasic.c
src/decNumber/decCommon.c
src/decNumber/decContext.c
src/decNumber/decContext.h
src/decNumber/decDPD.h
src/decNumber/decDouble.c
src/decNumber/decDouble.h
src/decNumber/decNumber.c
src/decNumber/decNumber.h
src/decNumber/decNumberLocal.h
src/decNumber/decPacked.c
src/decNumber/decPacked.h
src/decNumber/decQuad.c
src/decNumber/decQuad.h
src/decNumber/decSingle.c
src/decNumber/decSingle.h
src/decNumber/decimal128.c
src/decNumber/decimal128.h
src/decNumber/decimal32.c
src/decNumber/decimal32.h
src/decNumber/decimal64.c
src/decNumber/decimal64.h
src/decNumber/example1.c
src/decNumber/example2.c
src/decNumber/example3.c
src/decNumber/example4.c
src/decNumber/example5.c
src/decNumber/example6.c
src/decNumber/example7.c
src/decNumber/example8.c
src/exec_stack.h
src/execute.c
src/inject_errors.c
src/jq.h
src/jq_parser.h
src/jq_test.c
src/jv.c
src/jv.h
src/jv_alloc.c
src/jv_alloc.h
src/jv_aux.c
src/jv_dtoa.c
src/jv_dtoa.h
src/jv_dtoa_tsd.c
src/jv_dtoa_tsd.h
src/jv_file.c
src/jv_parse.c
src/jv_print.c
src/jv_thread.h
src/jv_type_private.h
src/jv_unicode.c
src/jv_unicode.h
src/jv_utf8_tables.h
src/lexer.c
src/lexer.h
src/lexer.l
src/libm.h
src/linker.c
src/linker.h
src/locfile.c
src/locfile.h
src/main.c
src/opcode_list.h
src/parser.c
src/parser.h
src/parser.y
src/util.c
src/util.h
src/version.h
