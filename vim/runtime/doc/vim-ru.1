.TH VIM 1 "12 августа 2024"
.SH НАЗНАЧЕНИЕ
Программа Vim \[em] это Vi IMproved (Улучшенный Vi), текстовый редактор для
программистов.
.SH КРАТКИЙ ОБЗОР
.br
.B vim
[аргументы] [файл ...]
.br
.B vim
[аргументы] \-
.br
.B vim
[аргументы] \-t индекс
.br
.B vim
[аргументы] \-q [файл результатов]
.PP
.br
.B ex
.br
.B view
.br
.B gvim
.B gview
.B evim
.B eview
.br
.B rvim
.B rview
.B rgvim
.B rgview
.SH ОПИСАНИЕ
Программа
.B Vim
\[em] это текстовый редактор, совместимый с редактором Vi.
Она может быть использована для правки всех видов обычных текстовых документов.
Особенно полезна она будет для редактирования исходных текстов программ.
.PP
По сравнению с редактором Vi, в редакторе
.B Vim
представлено много усовершенствований: многократная отмена операций,
множественность окон и буферов, подсветка синтаксиса, правка командной строки,
подстановка наименований файлов, встроенная документация, визуальное выделение
и прочее.
См. ":help vi_diff.txt" чтобы ознакомиться с полным перечнем различий между
редактором
.B Vim
и редактором Vi.
.PP
Чтобы получить полезную информацию о работе с редактором
.B Vim,
можно воспользоваться встроенной в программу документацией, набрав в редакторе
команду ":help".
См. раздел "ВСТРОЕННАЯ ДОКУМЕНТАЦИЯ" далее в тексте.
.PP
Чаще всего редактор
.B Vim
запускают для правки одного файла при помощи команды
.PP
	vim файл
.PP
В общем виде команда запуска редактора
.B Vim
выглядит так:
.PP
	vim [аргументы] [файлы]
.PP
Если файлы не указаны, редактор будет запущен с доступным для редактирования
пустым буфером.
Наименования файлов могут быть указаны одним из следующих четырёх способов:
.TP 12
файл ...
Перечень наименований файлов.
Первый файл из перечня будет объявлен активным и загружен в буфер, а каретка
установлена на первой строке этого буфера. Доступ к другим файлам из этого
перечня может быть осуществлён при помощи команды ":next". Чтобы править файл,
наименование которого начинается с символа "дефис" (\-), перед перечнем файлов
необходимо указать символы "\-\-".
.TP
\-
Текст для правки будет считан из потока стандартного ввода. Команды будут
считываться из стандартного потока диагностики (stderr), который должен
предоставляться терминалом.
.TP
\-t {индекс}
Файла для правки и начальная позиция каретки зависят от значения "индекса",
являющийся своего рода меткой goto. Поиск самого {индекса} выполняется в файле
индексов, а сопоставленный с ним файл будет открыт в редакторе и выполнена
связанная с этим {индексом} команда.
Чаще всего этот способ используется для программ на языке Си, где {индекс} может
быть наименованием функции.
Файл, содержащий такую функцию, становится активным, а каретка помещается
в начало этой функции.
См. ":help tag\-commands".
.TP
\-q [файл результатов]
Начать работу редактора в цикле быстрого исправления текста программ.
Будет считан [файл результатов] и отображена первая запись из этого файла.
Если [файл результатов] не указан, то его наименование берётся из значения
параметра 'errorfile' (по умолчанию для ОС Amiga это "AztecC.Err", а для других
систем \[em] "errors.err").
К следующей записи в файле результатов можно перейти по команде ":cn".
См. ":help quickfix".
.PP
Программа
.B Vim
ведёт себя по-разному в зависимости от указанной в командной строке команды
вызова редактора (исполняемый файл при этом может быть одним и тем же).
.TP 10
vim
Это "нормальный" запуск редактора, всё по умолчанию.
.TP
ex
Запуск редактора в Ex-режиме. Для переключения в обычный режим, необходимо
набрать команду ":vi".
Ex-режим также может быть активирован через аргумент "\-e".
.TP
view
Запуск редактора в режиме "только для чтения". В этом режиме есть некоторая
защита от случайной перезаписи файлов.
То же самое можно сделать через указание аргумента "\-R".
.TP
gvim gview
Запуск редактора с графическим интерфейсом. Для этого будет открыто новое окно.
То же самое можно сделать при запуске с аргументом "\-g".
.TP
evim eview
Упрощённый вариант редактора с графическим интерфейсом. Запускается в новом окне.
То же самое можно сделать через аргумент "\-y".
.TP
rvim rview rgvim rgview
Как и предыдущие команды, но с некоторыми ограничениями в функциональности.
Нельзя запускать команды оболочки или приостанавливать работу редактора
.B Vim.
Вместо приставки "r" можно использовать аргумент командной строки "\-Z".
.SH АРГУМЕНТЫ КОМАНДНОЙ СТРОКИ
Аргументы могут быть указаны в любом порядке, до или после наименований файлов.
Аргументы, не требующие значений, могут быть объединены с указанием только
одного дефиса.
.TP 12
+[номер]
Установка каретки на [номер] строки.
В первом открытом файле каретка будет установлена на строку с указанным номером.
Если "номер" не задан, каретка устанавливается на последней строке файла.
.TP
+/{шаблон}
Установка каретки на найденной строке.
В открытом файле каретка будет установлена в строке первого совпадения
с указанным шаблоном. См. ":help search\-pattern" для ознакомления с допустимыми
шаблонами.
.TP
+{команда}
.TP
\-c {команда}
Исполнение указанной {команды}.
После загрузки первого файла будет исполнена указанная {команда} как Ex-команда.
Если в тексте {команда} есть пробелы, то она должна быть заключена в
двойные кавычки (в зависимости от используемой командной оболочки).
Пример:
vim "+set si" main.c
.br
Примечание. Можно указывать до десяти команд "+" или "\-c".
.TP
\-A
Запуск программы с поддержкой арабской письменности.
Если программа
.B Vim
была собрана с поддержкой правки текста с написанием справа налево
и с поддержкой клавиатуры для арабского языка, то будет выполнен запуск
редактора
.B Vim
в режиме работы с арабской письменностью, т. е. установлен параметр 'arabic'.
В противном случае редактор
.B Vim
завершит работу с сообщением об ошибке.
.TP
\-b
Запуск программы в режиме работы с двоичными данными.
Производится настройка некоторых параметров, делающих возможной правку
двоичного или исполняемого файла.
.TP
\-C
Работа в варианте совместимости с редактором Vi.
Будет установлен параметр 'compatible', и редактор
.B Vim
будет работать почти как редактор Vi, даже если существует файл ".vimrc".
.TP
\-d
Режим сравнения различий.
Может быть указано от двух до восьми наименований файлов. В редакторе
.B Vim
будут открыты все файлы и показаны различия между ними (как vimdiff(1)).
.TP
\-d {устройство}, \-dev {устройство}
Использовать {устройство} для операций ввода-вывода.
Открыть {устройство} для использования в качестве терминала (только в ОС Amiga).
Пример:
"\-d con:20/30/600/150".
.TP
\-D
Запуск программы в режиме диагностики.
Переключение в режим отладки при исполнении первой команды из командного файла.
.TP
\-e
Запуск программы в Ex-режиме.
Редактор
.B Vim
будет работоать в Ex-режиме, тоже, что в командной строке оболочки набрать
команду "ex".
.TP
\-E
Запуск программы в улучшенном Ex-режиме.
Редактор
.B Vim
будет работать в улучшенном Ex-режиме, это аналогично набору в командной
оболочке команды "exim".
.TP
\-f
Режим активного приложения.
Редактор
.B Vim
с графическим интерфейсом не будет наследоваться и отключаться от командной
оболочки, в которой выполнена команда его запуска.
На платформе Amiga редактор
.B Vim
не будет перезапускаться для создания нового окна. Этот аргумент командной
строки нужно использовать, когда редактор
.B Vim
запускается программой, которая должна ждать завершения
сеанса правки (например, программа для работы с электронной почтой).
На платформе Amiga в этом случае команды ":sh" и ":!" не будут работать.
.TP
\-F
Запуск программы с поддержкой персидской письменности.
Если программа
.B Vim
была собрана с поддержкой правки текста с написанием справа налево
и с поддержкой клавиатуры для персидского языка, то будет выполнен запуск
редактора
.B Vim
в режиме работы с персидской письменностью, т. е. установлены параметры 'fkmap'
и 'rightleft'.
В противном случае редактор
.B Vim
завершит работу с сообщением об ошибке.
.br
Примечание. Поддержка персидской письменности была удалена в версии 8.1.0932.
.TP
\-g
Запуск программы с графическим интерфейсом.
Если программа
.B Vim
была собрана с поддержкой графического интерфейса, то будет выполнен запуск
графического интерфейса пользователя.
В противном случае редактор
.B Vim
завершит работу с сообщением об ошибке.
.TP
\-H
Запуск программы с поддержкой еврейской письменности.
Если программа
.B Vim
была собрана с поддержкой правки текста с написанием справа налево
и с поддержкой клавиатуры для еврейского языка, то будет выполнен запуск
редактора
.B Vim
в режиме работы с еврейской письменностью, т. е. установлены параметры 'hkmap'
и 'rightleft'.
В противном случае редактор
.B Vim
завершит работу с сообщением об ошибке.
.TP
\-i {файл}
Использовать в качестве файла подкачки указанный {файл}.
Через этот аргумент задаётся наименование viminfo-файла (вместо принятого
по умолчанию ".viminfo"). Здесь же можно отключить использование viminfo-файла
через указание слова "NONE" (прописными буквами).
.TP
\-l
Запуск программы в режиме Lisp.
Выполняется установка параметров 'lisp' и 'showmatch'.
.TP
\-L
То же, что и аргумент командной строки \-r.
.TP
\-m
Работа без возможности сохранения изменений.
Выполняется сброс параметра 'write', поэтому становится невозможным записать
в файл изменения, внесённые в буфер.
.TP
\-M
Работа без возможности внесения изменений в текст.
Параметры 'modifiable' и 'write' будут отключены, так что изменения будут
запрещены, и файлы не смогут быть записаны.
Обратите внимание, что после начала работы редактора, эти параметры можно
включить, чтобы разрешить внесение изменений.
.TP
\-n
Работа без создания файла подкачки.
В этом случае восстановление при сбое в работе редактора будет невозможно.
Удобно для правки файла на очень медленном носителе (например, гибком диске).
То же самое можно сделать командой ":set uc=0". Включение файла подкачки \[em] 
":set uc=200".
.TP
\-N
Работа в варианте неполной совместимости с редактором Vi.
Будет сброшен параметр 'compatible'.
Редактор
.B Vim
будет работать лучше, но не будет полностью совместим с редактором Vi, даже если
отсутствует файл начальных настроек (".vimrc").
.TP
\-nb
Назначить программу Vim сервером редактора для ИСР NetBeans. Подробности
смотрите в документации.
.TP
\-o[N]
Создать для N файлов отдельные окна, расположенные по горизонтали. 
Если N не указано, то создаётся по одному окну на каждый файл.
.TP
\-O[N]
Создать для N файлов отдельные окна, расположенные по вертикали.
Если N не указано, то создаётся по одному окну на каждый файл.
.TP
\-p[N]
Создать для N файлов отдельные вкладки.
Если N не указано, то создаётся по одной вкладке на каждый файл.
.TP
\-P {заголовок окна}
Открыть программу в многодокументном приложении.
Только для ГИП в MS Windows. Задаёт заголовок окна родительского приложения. 
Если возможно, то программа Vim будет запущена внутри окна многодокументного
приложения. Многодокументное приложение должно иметь указанный {заголовок окна}.
Убедитесь, что этот {заголовок окна} уникален для приложения. Обращаем внимание,
что реализация данного функционала всё ещё не до конца отработана. Внедрение
программы возможно не во все приложения и не поддерживается меню окна.
.TP
\-r
Вывод перечня файлов подкачки и завершение работы.
Будут показаны доступные файлы подкачки и информация об их использовании
для восстановления в случае сбоя.
.TP
\-r {файл}
Восстановление аварийно завершённого сеанса.
Для восстановления после сбоя в работе будет использован указанный файл подкачки.
Файл подкачки имеет то же наименование, что и редактируемый текстовый файл,
но с добавлением расширения ".swp".
См. ":help recovery".
.TP
\-R
Работа в варианте только для чтения.
Будет установлен параметр 'readonly'.
Файл в буфере доступен для редактирования, но его копию на диске нельзя
случайно перезаписать. Для сохранения файла необходимо добавить восклицательный
знак к соответствующей Ex-команде (например, ":w!").
При задании аргумента "\-R" также подразумевается, что используется и аргумент
"\-n" (см. выше).
Параметр 'readonly' может быть сброшен по команде ":set noro".
См. ":help 'readonly'".
.TP
\-s
Тихий режим.
Только при запуске в командной оболочке как программы "ex" или если перед
аргументом "\-s" указан аргумент "\-e".
.TP
\-s {командный файл}
Считывание команд режима команд из {командного файла}.
Содержимое файла воспринимается в виде команд, как если бы они были набраны
непосредственно в редакторе. 
То же самое достигается командой ":source! {командный файл}".
Если после исполнения всех команд из {командного файла} работа редактора
продолжается, то дальнейший ввод команд и текста ожидается с клавиатуры.
.TP
\-S {файл}
Исполнение указанного {файла}.
После загрузки в буфер первого файла, будет исполнен указанный командный {файл}.
Это аналогично команде в командной строке \-c "source {файл}".
Наименование {файла} не может начинаться с символа '\-'.
Если не указан {файл}, то будет исполнен файл "Session.vim" (это будет работать
только если аргумент \-S является последним в командной строке).
.TP
\-T {терминал}
Назначить указанный тип {терминала}.
Редактору
.B Vim
будет передан тип используемого терминала.
Необходимо только в тех ситуациях, когда автоматическое определение терминала
не работает. Наименование терминала должно быть известно редактору
.B Vim
(предопределено в редакторе) либо указано в базе termcap или terminfo.
.TP
\-u {файл}
Использовать для начальной настройки указанный командный {файл}.
Все остальные файлы настроек игнорируются.
Удобно для редактирования специальных типов файлов.
Через этот аргумент можно также отключить обработку всех файлов начальной
настройки, используйте для этого слово "NONE" (прописными буквами).
См. ":help initialization".
.TP
\-U {файл}
Использовать для начальной настройки графического интерфейса указанный
командный {файл}.
Все остальные файлы настроек для графического интерфейса игнорируются.
Через этот аргумент можно также отключить обработку всех файлов настройки
графического интерфейса, используйте для этого слово "NONE" (прописными буквами).
См. ":help gui\-init".
.TP
\-v
Запуск программы в режиме Vi.
Редактор
.B Vim
будет работать в режиме редактора Vi, как будто исполняемый файл называется "vi".
Имеет смысл только если исполняемый файл называется "ex".
.TP
\-V[N]
Режим подробного вывода.
Будут выводиться сообщения о том, какие командные файлы исполняются, и какая
информация считывается и записывается в viminfo-файле. Необязательное число N
задаёт уровень детализации информации. По умолчанию это значение установлено
равным 10.
.TP
\-V[N]{файл}
Аналогично аргументу \-V, а также выполняется установка параметру 'verbosefile'
значение {файл}. Как результат, сообщения будут записываться в {файл}, а не
отображаться на экране. Наименование {файла} не может начинаться с какой-либо
цифры.
.TP
\-w{число}
Для параметра 'window' будет установлено значение, равное указанному {числу}.
.TP
\-w {файл}
Добавление всех введённых команд в {файл}.
Все символы, введённые с клавиатуры вплоть до момента завершения работы
редактора, записываются в {файл}.
Удобно в том случае, когда вы хотите создать командный файл для последующего 
его использования в командной строке "vim \-s" или в команде ":source!".
Если {файл} уже существует, то набранный текст будет добавляются в конец файла.
.TP
\-W {файл}
Запись всех введённых команд в {файл}.
Как аргумент "\-w", но существующий {файл} будет перезаписан.
.TP
\-x
Редактирование шифрованных файлов.
Если редактор
.B Vim
был собран с поддержкой шифрования, то выполнять шифрование при записи файлов.
Будет выдано приглашение ввести пароль.
.TP
\-X
Запуск программы без подключения к X-серверу.
Ускоряет загрузку в консоли, но делает невозможным использование заголовка окна
и буфера обмена.
.TP
\-y
Работа в упрощённом варианте.
Редактор
.B Vim
будет работать в упрощённом варианте, как будто исполняемый файл имеет название
"evim" или "eview". 
Поведение редактора
.B Vim
будет походить на редакторы, созданные по безрежимному принципу работы.
.TP
\-Z
Работа с ограничением функциональности.
Работает так же, как и запуск исполняемого файла, наименование которого
начинается с буквы "r".
.TP
\-\-
Означает окончание ввода аргументов.
Все что указано после этого в командной строке, считается наименованиями файлов.
Может быть использовано для правки файлов, наименования которых начинаются с
дефиса.
.TP
\-\-clean
При работе редактора не использовать пользовательскую конфигурацию (файлы vimrc,
подключаемые модули и т. п.). Полезно для проверки, что проблема в работе
редактора не возникнет с предустановленными настройками программы Vim.
.TP
\-\-cmd {команда}
Как аргумент "\-c", но команда исполняется перед обработкой любого файла
настроек (vimrc).
Можно указывать до десяти таких команд, независимо от количества команд "\-c".
.TP
\-\-echo\-wid
Только для графического интерфейса GTK. Отобразить идентификатор окна
(Window ID) в поток стандартного вывода (stdout).
.TP
\-\-gui\-dialog\-file {файл}
При работе редактора в графическом интерфейсе пользователя, заголовок
и сообщение диалогового окна будут записаны в {файл} без отображения на экране.
Если указанный {файл} не существует, то он будет создан, а при его наличии
сообщения будут дописываться в этот {файл}. Данный аргумент полезен только для
тестирования работы редактора, чтобы избежать остановки программы, так как
отображаемое диалоговое окно может быть скрыто. Если не поддерживается
графический интерфейс пользователя, то этот аргумент игнорируется программой.
.TP
\-\-help, \-h, \-?
Будет показана краткая информация об аргументах и параметрах командной строки.
После этого редактор
.B Vim
завершит работу.
.TP
\-\-literal
Данный аргумент указывает, что требуется воспринимать наименования файлов
буквально, и не выполнять разбор подстановочных символов.
Этот аргумент командной строки неприменим в Unix-подобных системах, где разбор
подстановочных символов выполняется командной оболочкой.
.TP
\-\-log {файл}
Будет выполнена запись протокола работы с этапа инициализации программы.
Если при сборке программы
.B Vim
были включены компоненты "eval" и "channel", будет выполняться протоколирование
работы с самой ранней стадии запуска программы, а журнал записываться в {файл}.
Это работает аналогично вызову функции
.I ch_logfile({filename}, 'ao')
.TP
\-\-nofork
Режим активного приложения.
Редактор
.B Vim
с графическим интерфейсом не будет наследоваться и отключаться
от командной оболочки, в которой выполнена команда его запуска.
.TP
\-\-noplugin
Будет выполнен запуск программы без загрузки внешних подключаемых модулей.
Это же подразумевается при указании аргумента \-u NONE.
.TP
\-\-not\-a\-term
Не сообщать об отсутствии терминала для ввода-вывода.
Через этот аргумент указывается, что операции ввода-вывода осуществляются не
на терминал. Это позволяет избежать предупреждающего сообщения и двухсекундной
задержки, которые могли бы возникнуть.
.TP
\-\-remote
Будет выполнено подключение к Vim-серверу и передача для правки файлов,
указанных в последующих аргументах. Если сервер не найден, выводится
предупреждение, а правка файлов выполняется в текущей копии редактора Vim.
.TP
\-\-remote\-expr {выражение}
Будет выполнено подключение к Vim-серверу и передача указанного {выражение} для
вычисления. 
Результат вычисления будет выведен в поток стандартного вывода (stdout).
.TP
\-\-remote\-send {код клавиши}
Будет выполнено подключение к Vim-серверу и передача указанных {кодов клавиш}.
.TP
\-\-remote\-silent
Как "\-\-remote", но без вывода предупреждения, если сервер не найден.
.TP
\-\-remote\-wait
Как "\-\-remote", но редактор Vim не будет завершать работу до тех пор,
пока не будет выполнена правка всех файлов.
.TP
\-\-remote\-wait\-silent
Как "\-\-remote\-wait", но без вывода предупреждения, если сервер не найден.
.TP
\-\-serverlist
Будет выведен перечень всех доступных Vim-серверов.
.TP
\-\-servername {название}
Использовать указанное {название} в качестве наименования сервера. Если аргумент 
"\-\-remote" не указан, то {название} присваивается данной копии редактора Vim, 
в противном случае указывает на сервер, к которому следует подключиться.
.TP
\-\-socketid {id}
Только для графического интерфейса GTK. Будет использован механизм GtkPlug для
запуска редактора gVim в отдельном окне.
.TP
\-\-startuptime {файл}
Будет выполнена запись хронометража запуска программы в {файл}.
.TP
\-\-ttyfail
Будт сразу же завершена работа, если ввод-вывод получен не с терминала (tty).
.TP
\-\-version
Будет выведена информация о версии программы и завершена работа.
.TP
\-\-windowid {ИД}
Только для графического интерфейса в MS Windows. Редактор gVim будет
использовать окно с указанным {ИД} в качестве родительского, чтобы попытаться
выполнить запуск внутри этого окна.
.SH ВСТРОЕННАЯ ДОКУМЕНТАЦИЯ
Для начала работы с документацией, наберите в редакторе
.B Vim
команду ":help".
Введите ":help тема", чтобы получить справку по интересующей теме.
Например, по команде ":help ZZ" будет выведена информация о команде "ZZ".
Используйте клавиши <TAB> и CTRL+D для подстановки нужного названия темы
(см. ":help cmdline\-completion").
Для быстрого перемещения по документации используются индексы (что-то 
вроде гипертекстовых ссылок, см. ":help"). Таким образом можно 
переходить от одного файла документации к другому, например, ":help syntax.txt".
.SH ФАЙЛЫ
.TP 15
/usr/local/share/vim/vim??/doc/*.txt
Файлы документации редактора
.B Vim.
См. ":help doc\-file\-list" для получения полного перечня файлов.
.br
Здесь и далее
.I "vim??"
означает сокращённую запись номера версии, например, vim91 для версии редактора
.B Vim 9.1
.TP
/usr/local/share/vim/vim??/doc/tags
Файл индексов, используемый для поиска информации в файлах документации.
.TP
/usr/local/share/vim/vim??/syntax/syntax.vim
Общесистемные настройки распознавания и подсветки синтаксиса.
.TP
/usr/local/share/vim/vim??/syntax/*.vim
Файлы распознавания и подсветки синтаксиса для различных языков программирования.
.TP
/usr/local/share/vim/vimrc
Общесистемный файл начальной настройки для консольного редактора
.B Vim.
.TP
~/.vimrc, ~/.vim/vimrc, $XDG_CONFIG_HOME/vim/vimrc
Пользовательские файлы начальной настройки для консольного редактора
.B Vim
(будет использован первый найденный файл из указанных).
.TP
/usr/local/share/vim/gvimrc
Общесистемный файл начальной настройки для редактора с графическим интерфейсом
.B gVim.
.TP
~/.gvimrc, ~/.vim/gvimrc, $XDG_CONFIG_HOME/vim/gvimrc
Пользовательские файлы начальной настройки для редактора с графическим
интерфейсом
.B gVim
(будет использован первый найденный файл из указанных).
.TP
/usr/local/share/vim/vim??/optwin.vim
Командный файл, используемый при выполнении команды ":options". 
По этой команде предоставляется удобный способ просмотра и изменения настроек.
.TP
/usr/local/share/vim/vim??/menu.vim
Системные настройки меню для графического интерфейса редактора
.B gVim.
.TP
/usr/local/share/vim/vim??/bugreport.vim
Командный файл для создания отчёта об обнаруженных ошибках. См. ":help bugs".
.TP
/usr/local/share/vim/vim??/filetype.vim
Командный файл для распознавания типов файлов по наименованию.
См. ":help 'filetype'".
.TP
/usr/local/share/vim/vim??/scripts.vim
Командный файл для распознавания типов файлов по содержимому.
См. ":help 'filetype'".
.TP
/usr/local/share/vim/vim??/print/*.ps
Файлы, используемые для печати через интерфейс PostScript.
.PP
Всю последнюю информацию о редакторе можно получить на веб-странице VIM:
.br
<URL:http://www.vim.org/>
.SH СМОТРИТЕ ТАКЖЕ
vimtutor(1)
.SH АВТОРЫ
Большая часть редактора
.B Vim
была создана Брамом Моленаром (Bram Moolenaar), которому помогало огромное 
количество людей. См. ":help credits" в редакторе
.B Vim.
.br
Редактор
.B Vim
базируется на коде редактора Stevie, написанного Тимом Томпсоном (Tim Thompson),
Тони Эндрюсом (Tony Andrews) и Г. Р. (Фредом) Уолтером (G.R. (Fred) Walter). 
Однако, в настоящее время в программе Vim почти ничего не осталось
от исторического кода его предшественника.
.br
Русская локализация редактора
.B Vim 
выполняется в рамках проекта "РуВим", 
см. <URL:https://github.com/restorerz/ruvim/>.
.SH ОШИБКИ
Скорее всего есть.
См. ":help todo" \[em] перечень известных ошибок в работе.
.PP
Заметим, что многие вещи, которые считаются ошибками, на самом деле
являются результатом слишком полного воспроизведения поведения редактора Vi.
Если вы думаете, что что-то является ошибкой только потому, что 
"Vi делает это по-другому", внимательно прочитайте файл vi_diff.txt 
(или наберите ":help vi_diff.txt" в редакторе Vim) и посмотрите параметры
 'compatible' и 'cpoptions'.
