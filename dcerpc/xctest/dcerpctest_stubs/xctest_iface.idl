#include <compat/dcerpc.idl.include>

[ uuid(db7e03ba-5bdb-11dc-9f61-00023f108d6c),
  version(1.0),
  pointer_default(ptr)
]

interface xctest_iface {

  const char* xctest_endpoint = "49167";
  
    boolean EchoUint8(
    [in] handle_t                h,
    [in] unsigned8               in_num,
    [out, ref] unsigned8*        out_num,
    [out, ref] error_status_t *  status
    );
    
    boolean EchoUint16(
    [in] handle_t                h,
    [in] unsigned16              in_num,
    [out, ref] unsigned16*       out_num,
    [out, ref] error_status_t *  status
    );
  
  boolean EchoUint32(
	[in] handle_t            	h,
	[in] unsigned32             in_num,
	[out, ref] unsigned32* 	    out_num,
	[out, ref] error_status_t *	status
	);
 
   boolean EchoUint64(
    [in] handle_t                h,
    [in] unsigned hyper          in_num,
    [out, ref] unsigned hyper*   out_num,
    [out, ref] error_status_t *  status
    );
    
    
    // ***********************
    // *** ReverseStrArray ***
    // ***********************
    //
    // The procedure reverses all strings in an array of strings.
    // The client stub allocates memory for out_str on return.
    //
    
    // Max array elements
    const unsigned32 MAX_STR_ARR_ELEMENTS = 10;

    typedef [ptr, string] char * string_t;
    
    typedef struct {
        [range(0, MAX_STR_ARR_ELEMENTS)] unsigned32 arr_len;
        [size_is(arr_len)] string_t str_arr[];
    } rev_str_arr_args;
    
   boolean ReverseStrArr(
    [in] handle_t                h,
    [in] rev_str_arr_args        *in_str,
    [out] rev_str_arr_args       **out_str,
    [out, ref] error_status_t    *status
    );

}
